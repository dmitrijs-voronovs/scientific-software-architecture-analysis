quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability," -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -Iinclude/GTest -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCore/src -isystem /home/vozenne/Dev/sofa/src/SofaKernel/extlibs/json -isystem /home/vozenne/Dev/sofa/src/extlibs/gtest/include -isystem /usr/include/eigen3 -Wall -W -Wno-padded -O3 -DNDEBUG -fPIC -DFRAMEWORK_TEST_RESOURCES_DIR=\""/home/vozenne/Dev/sofa/src/SofaKernel/SofaFramework/resources/tests\"" -pthread -DGTEST_LINKED_AS_SHARED_LIBRARY=1 -std=gnu++17 -MD -MT modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglShaderVisualModel.cpp.o -MF modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglShaderVisualModel.cpp.o.d -o modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglShaderVisualModel.cpp.o -c /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglShaderVisualModel.cpp; In file included from /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglShaderVisualModel.cpp:30:; /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglAttribute.inl:199:9: error: use of undeclared identifier 'glVertexAttribLPointer'; did you mean '__glewVertexAttribIPointer'?; glVertexAttribLPointer(_index, size, type, 0, (char*)nullptr + 0);; ^~~~~~~~~~~~~~~~~~~~~~; __glewVertexAttribIPointer; /home/vozenne/NVIDIA_CUDA-11.2_Samples/common/inc/GL/glew.h:12318:51: note: '__glewVertexAttribIPointer' declared here; GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIPOINTERPROC __glewVertexAttribIPointer;. `````",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786521312:3168,error,error,3168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786521312,1,['error'],['error']
Availability," /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/libSofaPython3.so; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File '",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:2690,ERROR,ERROR,2690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['ERROR'],['ERROR']
Availability," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6887,Error,Error,6887,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,2,"['Error', 'error']","['Error', 'errors']"
Availability," convention as the one used in DataTypeInfo<>. So ```f``` instead of ```float```, ```vector<f>``` instead of ```vector<float>```, ```Vec3d``` instead of ```Vec<3, double>```. Unifying the other way around would have implied to use ```Vec<3, double>``` in our scene templates... which was a bit too much :); With that in mind, the current implementation of DataExchange is behaving exactly as it should. . The unittest you are pointing is showing a normal behavior. This behavior is that the template type that does not have a Name() static method and used in a class that is not implementing GetCustomTemplate will fall back to the automatic generation decoded from the typeid(). But this automatic generation is the code we want to get rid of (if one day someone has enough time to fix that) and not desired behavior to align with. Automatic decoding function to avoid breaking too much things until future evolution. . So currently the DataExchange implementation is using GetCustomClassName in order to implement consistent templates name with the other sofa components and not relying on the automatic generation. . If you are interested in unifying things i would recommend:; short term: implement a way to automatically use the DataTypeInfo<>::name() in the NameDecoder. If I remember well initially we didn't wanted to... because sofa::defaulttype was not a dependency of sofa::helper but now we have cleaned a lot that part it is possible to make something quickly. This would allow to remove all the GetCustomClassName in our code base to directly forward to DataTypeInfo<DataType>::name() when available instead of falling back. middleterm: add deprecation management to the falling back code to warn user it will disapear (when it was done we didn't has deprecation menagement...maybe it is worth having a look at that part nowaydays). longterm: remove all that crappy template DataTypeInfo<DataType>::name() and use the thing introduced in https://github.com/sofa-framework/sofa/pull/3289",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952:1859,avail,available,1859,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952,1,['avail'],['available']
Availability," general API...; Two aspect I like is that:; - it is ""incremental"", each time you add more EXPECT_MSG_ in the code better are the narrowing of the errors. ; - the defaut mode can be specified in a Sofa_test<> as well as in fact into any object or function body; - it is stack based so we restore the context when an area is left. To give you a look of how it is (the V2 stuff are just transitional of course):; ```cpp; #include <SofaTest/Sofa_test.h>; using sofa::Sofa_test;. #include <SofaTest/TestMessageHandler.h>; using sofa::helper::logging::GtestMessageHandler ;. /// We can define a default policy for a complete class this way so that if not more; /// expectation are given this generates test failures.; class Sofa_test2 : public Sofa_test<float>; {; EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;; };. class TestMessageHandler_test : public Sofa_test2; {; public:; void defaultTestBehavior(); {; msg_deprecated(""HERE"") << ""This should generate a failure"" ;; msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a failure"" ;; }. void catchingTestBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should not generate a failure"" ;; msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. /// THIS TEST SHOULD FAIL.; void expectAMessageissingBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should not generate a failure"" ;; //msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure but with line number close to "" << __LINE__ ;; msg_error(""HERE"") << ""This should generate a test falure with line number close to "" << __LINE__ ;; }. void complexTestBehavior(); {; {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_E",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643:1129,failure,failure,1129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643,3,['failure'],['failure']
Availability," it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break the compatibility to the current `initData()` API, I would strongly suggest to remove this issue, by removing the two optional bool flags which are seldom used anyway (and can be replaced by a call to `setDisplayed()` or `setReadOnly()`).; * compared to when this code was originally written, c++ now allows to put initializers of member variables in the class declaration direct",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1631,error,error,1631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283,1,['error'],['error']
Availability," just need to parse the link's value, follow the path to the linked component's datafield, check its type and that's it), it is a bit trickier when it comes to outputs:; - During the creation of a PSDE's output field, we don't know yet what it's gonna be linked against, so deriving the type is not possible. We have to wait for the creation of the component that will take the PSDE's output as a link to derive it. This means that the steps to derive an output's datatype are the following:. - in Python, in the `parse()` method, call addNewOuput, and give it a datafield name, but no type and an input value field `addNewInput(""MyName"", value="""")`; - in C++, a new datafield is created, but its datatype is void*. To know that this field has been created from a PSDE output, and is not yet properly connected, an alias is added on the data `addAlias(""psde_output"");`; - The next component is created in the scene, a c++ component this time, that knows the type of its inputs. ; - In its parse method, the link is found to the PSDE's output, but its type is incompatible (void* vs vector<Vec3d> for instance). ; - We check if the linked datafield has an alias ""psde_output"" and if so, remove that datafield and recreate it with the same field name, but this time the good datatype; - We set the newly created field as the parent of the parsed datafield in the component. Done. . To do so it was necessary to:; - Make creation of Data possible through a `getNewInstance()` method in Base; - Make BaseData removable from Sofa components in Base `removeData(BaseData*)`; - add in Binding_Base a method called from `addNewIO()` to find a data's type from its value when a link is provided (`deriveTypeFromParentValue()`) ; - Modify Base::parseField() to handle connecting to a parent value that has incompatible type when necessary; - Modify quite a bit the error handling process in addNewData() and parse() (which I hope to have done properly). These explanations should help in understanding the code",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/742#issuecomment-409853302:1974,error,error,1974,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/742#issuecomment-409853302,1,['error'],['error']
Availability," load all the available plugins. Loading a library in the process memory will have several side effects which are difficult to anticipate before hand. The major one is the evaluation of all the global variables, which will result in populating the `ObjectFactory` with all the components that this library contains. I would suggest something different for this kind of having a list of default plugins that are loaded directly with your application ( here `runSofa` ). - derive a sort of sofa plugin manifest file, which can be generated as a post-build step. This should be an easy to parse file which could contain the various informations exposed by the `getModuleName()`, `getModuleVersion()`... without having to load the library in the process memory. This manifest file must be stored in an easy to find location in your build tree, an be installed properly ( they need also to be bundled when you deploy your application ). That means they should be located with a similar relative path with respect to the application ( `runSofa` ) when in the build tree or in the install tree. There should be a proposal about that to define : ; - the manifest file type ( ie how are we going to parse it ? json xml text ? ); - the manifest file content itself. - any application could then define the list of predefined plugin it wants to load using a simple configuration file. A default configuration can be provided, but it could be easily overriden. With this mechanism, no recompilation is required when you want to change the list of default plugins, you just change the config file. NB : a bit unrelated but there is a small code ""snippet"" that can be used to recover all the components attached to a library in two lines ; ```cpp; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin; static std::string classes = sofa::core::ObjectFactory::getInstance()->listClassesFromTarget(sofa_tostring(SOFA_TARGET));; return classes.c_str();; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188:2010,recover,recover,2010,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188,1,['recover'],['recover']
Availability," possibilities.; I just updated a scene that you can use to test the new components. The scene called ""TetrahedralCorotationalFEMForceField"" has two nodes. The first one uses ; the components ""VolumeTopologyContainer"" and ""CMTetrahedralCorotationalFEMForceField"" that are completely written using cgogn and ""MapTetrahedronSetTopologyContainer"" a compatibility wrapper that allows to use ""classical"" sofa components with cgogn. @damienmarchal concerning your questions:. - what the PR does precisely ?; - This PR adds a new data structure for handling meshes. This data structure is designed to handle dynamic (with topological changes) meshes.; - what is the existing state on this topic in Sofa (the title speak about dynamic topology...isn't there dynamic topology in Sofa since year) ?; - I think there is a pipeline for topological changes in Sofa. I do not know much about the efficiency of this pipeline. What I can say (I should provide figures) is that this data structure is as effective as the sofa ones in ""static"" scenarios and more effective and reliable in ""dynamic"" scenarios.; - how this PR handle the problem,; - by changing to a more appropriate data structure; - use CGOGN library... what is this CGOGN library ?; - a topological modeling kernel (see https://cgogn.github.io). I am not sure you need more information about it.; - argument on why the PR is it useful/mandatory/improvement, trying to convince people why they should spend time testing it,; - this work has been in progress since 3 years now. His interest has already been debated. I do not want to debate an infinite time on it. If someone is interested in topological changes, it should save him time.; - provide some idea on how invasive the PR will be (non breaking at all, breaking the SofaCore API, breaking existing scenes); - depends on the meaning of beaking. It does not change the sofa API for topology classes but it adds a hierarchy of classes in the core with a new API and a compatibility layer with the",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402690583:1166,reliab,reliable,1166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402690583,1,['reliab'],['reliable']
Availability," possible that I come back later to correct those statements of mine :) ). > you need to properly initialize/finalize sofa and core modules (see Main.cpp in the runSofa application). Yes. I'm usually leaning towards making most of the functions available and let the script use what it need. So if I'm writing a _runSofa_ like application in python, I should be able to init the components there, create/set the simulation, add the needed message handlers to the MessageDispatcher, and set the paths (plugin, config, sofa prefix) there. If this complicate too much the python script, than making optional python util scripts that set all of this for the user could be a clean option. But I don't think the library should do this in the user's back without transparency. > you need to handle the case where the loaded scene already has python scripts, and let the PythonEnvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it should be avoid for now since I'm not sure what side effects this will bring. Right now doing it seems not so bad as, again, w",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:1226,down,down,1226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['down'],['down']
Availability," the context when an area is left. To give you a look of how it is (the V2 stuff are just transitional of course):; ```cpp; #include <SofaTest/Sofa_test.h>; using sofa::Sofa_test;. #include <SofaTest/TestMessageHandler.h>; using sofa::helper::logging::GtestMessageHandler ;. /// We can define a default policy for a complete class this way so that if not more; /// expectation are given this generates test failures.; class Sofa_test2 : public Sofa_test<float>; {; EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;; };. class TestMessageHandler_test : public Sofa_test2; {; public:; void defaultTestBehavior(); {; msg_deprecated(""HERE"") << ""This should generate a failure"" ;; msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a failure"" ;; }. void catchingTestBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should not generate a failure"" ;; msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. /// THIS TEST SHOULD FAIL.; void expectAMessageissingBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should not generate a failure"" ;; //msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure but with line number close to "" << __LINE__ ;; msg_error(""HERE"") << ""This should generate a test falure with line number close to "" << __LINE__ ;; }. void complexTestBehavior(); {; {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should generate a failure"" ;; //msg_error(""HERE"") << ""This should generate a test failure"" ;; {; EXPECT_MSG_NOEMIT_V2(Error) ;; msg_error(""HERE"") << ""This should generate a test failure"" ;; }; }. {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEM",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643:1403,failure,failure,1403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643,1,['failure'],['failure']
Availability," there, create/set the simulation, add the needed message handlers to the MessageDispatcher, and set the paths (plugin, config, sofa prefix) there. If this complicate too much the python script, than making optional python util scripts that set all of this for the user could be a clean option. But I don't think the library should do this in the user's back without transparency. > you need to handle the case where the loaded scene already has python scripts, and let the PythonEnvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it should be avoid for now since I'm not sure what side effects this will bring. Right now doing it seems not so bad as, again, we only attach the environment to the already created python environment. ; - A ScriptController will need to be added in order to trigger script events so that the python scene's functions (initGraph, onBeginAnimationStep, etc) are called. The createScene function is called by the SceneLoaderPY so this one is fine. > (I would probably put your feature in a module separate from Sofa for ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:1624,down,down,1624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['down'],['down']
Availability,"# Deprecation macros. ## The 2 base macros. **Do not use them directly in your code**, see ""how to use them"" below. `SOFA_ATTRIBUTE_DEPRECATED(deprecateDate, removeDate, toFixMsg)`; To be used to trigger a deprecation warning. It is a simple `[[deprecated]]` interface.; Warns that something; &nbsp;&nbsp;&nbsp; - is DEPRECATED (so still usable) since `deprecateDate`; &nbsp;&nbsp;&nbsp; - will be removed on `removeDate`; and gives the toFixMsg instructions to fix the deprecation warning.; ; `SOFA_ATTRIBUTE_DISABLED(deprecateDate, disableDate, toFixMsg)`; To be used jointly with `= delete` to trigger an error. It is a flavored `[[deprecated]]` interface.; Warns that something ; &nbsp;&nbsp;&nbsp; - is DISABLED (so not usable anymore) since `disabledDate`; &nbsp;&nbsp;&nbsp; - was firstly deprecated on `deprecateDate`; and gives the toFixMsg instructions to fix the compilation error. ## How to use them. Create a new deprecation macro specifying the deprecation topic you are tackling.; This way, you won't have dates everywhere in your code. ## Example. ### Deprecate. I want to rename something that will break my API. ; To ease the transition for my users, I will propose a deprecation period with a fine message by using a deprecation macro.; Latest release is v20.06, next release (currently under development) is v20.12, after that will come the v21.06. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DEPRECATED( \; ""v20.12 (PR#12345)"", ""v21.06"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod();; ```. Anyone using myDeprecatedMethod will get this **warning**: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is still usable but has been DEPRECATED since v20.12 (PR#12345). You have until v21.06 to fix your code. XXX must be renamed into YYY.; ```. ### Disable. Now forward in time ...; Latest release is v20.12, next release (curr",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249:608,error,error,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249,2,['error'],['error']
Availabilitysegfault ##########. ########## SIG 2 - SIGINT: interactive attention signal, probably a ctrl+c ##########; sofa::helper::BackTrace::dump; sofa::helper::BackTrace::sig; perror; CtrlRoutine; BaseThreadInitThunk; RtlUserThreadStart. And here is the error I get with the ascii version:; ---. ...; [WARNING] [BaseObject(unnamed)] Unknown keyword 2447; [WARNING] [BaseObject(unnamed)] Unknown keyword 1860; [WARNING] [BaseObject(unnamed)] Unknown keyword 1451; [WARNING] [BaseObject(unnamed)] Unknown keyword 2539; [WARNING] [BaseObject(unnamed)] Unknown keyword 1224; [WARNING] [BaseObject(unnamed)] Unknown keyword 799; [WARNING] [BaseObject(unnamed)] Unknown keyword 1011; [WARNING] [BaseObject(unnamed)] Unknown keyword 19; [WARNING] [BaseObject(unnamed)] Unknown keyword 2576; [WARNING] [BaseObject(unnamed)] Unknown keyword 1301; [WARNING] [BaseObject(unnamed)] Unknown keyword 2918; [WARNING] [BaseObject(unnamed)] Unknown keyword 513; [WARNING] [BaseObject(unnamed)] Unknown keyword 687; [WARNING] [BaseObject(unnamed)] Unknown keyword 182; [WARNING] [BaseObject(unnamed)] Unknown keyword 182; [WARNING] [BaseObject(unnamed)] Unknown keyword 2529; [WARNING] [BaseObject(unnamed)] Unknown keyword 815; [WARNING] [BaseObject(unnamed)] Unknown keyword 1131; [",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/652#issuecomment-2155321547:9195,error,error,9195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/652#issuecomment-2155321547,1,['error'],['error']
Availability,"(h+r_k)K]. Building step:; Here we go down on the current context sub-graph and call :; 1. `ff->addKToMatrix(&A)` and `f->addBToMatrix(&A)` for every force field ""ff"" found.; 2. `pc->applyConstraint(&A)` for every BaseProjectiveConstraintSet ""pc"" found. This will set to 0 lines and columns of fixed constraints.; If a mechanical mapping ""m"" is found during the traversal, and m->areMatricesMapped() is false, the traversal stops before entering the subgraph of the mapping. Mechanical mappings step:; In case we have mapped matrices, which is, system matrix of a slave mechanical object, accumulate its contribution to the global system matrix with:; [A]ij += Jt * [A']ij * J; where `A` is the master mechanical object's matrix (top level), `A'` is the slave mechanical object matrix (linked to the top level MO using a mapping) and `J=m.getJ()`; is the mapping relation between the slave and its master. (2) [r_m M + B + r_k K] v; Go down in the current context tree calling `addMBKdx` on every force field components, then go up from the leaves calling `applyJT` on every mechanical mappings. If the k mechanical parameter is not zero, the `applyDJT` will also be applied.; NOTE: This correspond to the force terms dependent on the velocity, i.e. the damping terms : ; [- r_m M - B + r_k K] v; where K is in fact -K by SOFA's convention, hence the positive (+) sign. (3) [F - T]; Go down in the current context tree calling `addForce` on every force field components, then go up from the leaves calling `applyJT` on every mechanical mappings.; NOTE: This correspond to the force terms dependent on the displacement, i.e. :; (-Ku + T). Now, the damping and stiffness matrices `B` and `K` are usually sparse. Knowing in advanced that `M` is also sparse (or even diagonal), I would bet that we could optimize these operations `(aM + b B + c K) v`. This is even more important for non-linear systems since a third term of the type `(aM + bB + cK) a` appears and must be computed multiples times per ti",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263:1918,down,down,1918,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263,1,['down'],['down']
Availability,")：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2265,ERROR,ERROR,2265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['ERROR'],['ERROR']
Availability,"- There still is a dubious `else if (typeinfo->ValidInfo())` in binding_data.; - DataFileName should be handled as its own type.; - how not to push regression test results? so everyone do not have to download it. If I well remember this files are created automatically the first time the test is launched, and then used. Is it not enough?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171#issuecomment-283292780:200,down,download,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171#issuecomment-283292780,1,['down'],['download']
Availability,"----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""Subscribed"" <subscribed@noreply.github.com>; > Envoyé: Jeudi 5 Janvier 2017 17:45:25; > Objet: [sofa-framework/sofa] Cleaning VisualModelImpl (#118). > Hi,. > To fully support xml saving (see PR: #116 ) we need to clean; > VisualModelImpl::parse(). > I can do some stuff but is unclear to me how much VisualModelImpl requires; > cleaning and whether or not some part are deprecated (the loading stuff from; > file seems redundant with loader).; Yes, definitely redundant, the MeshXyzLoader components should be used for this task ; The same for BaseMeshTopology::load(filename) . thomas . > By the way...any suggestion/advice regarding the data attributes is more than; > welcome. I started a branch there for that:; > https://github.com/SofaDefrost/sofa/tree/cleaning_visualmodelimpl. > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271516850:559,redundant,redundant,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271516850,2,['redundant'],['redundant']
Availability,-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [googl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28627,redundant,redundant-smartptr-get,28627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-smartptr-get']
Availability,-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/check,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:23587,down,downcast,23587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['down'],['downcast']
Availability,... we did not say that we should be throw an error into the end(.... Node*) function ? 😏; I will do an other PR to add it,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1770#issuecomment-772474769:46,error,error,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770#issuecomment-772474769,1,['error'],['error']
Availability,"/framework/sofa/core/../../sofa/core/behavior/MechanicalState.h:25:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/framework/sofa/core/../../sofa/core/behavior/BaseMechanicalState.h:31:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/framework/sofa/core/../../sofa/helper/StateMask.h:27:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:11:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/extlibs/eigen/Eigen/Core:461:; /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseBinaryOp.h:49:13: error: ambiguous partial specializations of 'cwise_promote_storage_order<Eigen::Sparse, Eigen::Sparse, 1, 0>'; Flags = cwise_promote_storage_order<typename traits<Lhs>::StorageKind,typename traits<Rhs>::StorageKind,_LhsNested::Flags & RowMajorBit,_RhsNested::Flags & RowMajorBit>::value; ^; /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/extlibs/eigen/Eigen/src/Core/EigenBase.h:41:30: note: in instantiation of template class 'Eigen::internal::traits<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::SparseMatrix<double, 1, int>, const Eigen::Product<Eigen::SparseMatrix<double, 1, int>, Eigen::SparseMatrix<double, 1, int>, 2> > >' requested here; typedef typename internal::traits<Derived>::StorageKind StorageKind;; ^; /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/extlibs/eigen/Eigen/src/SparseCore/SparseMatrixBase.h:27:12: note: in instantiation of template class 'Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, const Eigen::SparseMatrix<double, 1, int>, const Eigen::Product<Eigen::SparseMatrix<double, 1, int",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-514530499:1819,error,error,1819,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-514530499,1,['error'],['error']
Availability,1 new scene-test error due to serr -> msg_error:; - `RemovingTriangle2EdgeProcess.scn: [EdgePressureForceField(edgePressureFF0)] No mechanical Object linked.`. 2 new unit-test failures due to serr -> msg_error:; - `SceneChecker_test.checkUsingAlias_withAlias: TriangleModel requires a BaseMeshTopology`; - `SceneChecker_test.checkUsingAlias_withoutAlias: TriangleModel requires a BaseMeshTopology`. @epernod I know you encountered and fixed the SceneChecker_test ones. Where is that?; @marques-bruno Can you look at RemovingTriangle2EdgeProcess.scn for a fix?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916#issuecomment-462274812:17,error,error,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916#issuecomment-462274812,2,"['error', 'failure']","['error', 'failures']"
Availability,1974 errors .. ![](https://media2.giphy.com/media/p5JZ3sSPj8qY/giphy.gif),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1301#issuecomment-606227220:5,error,errors,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1301#issuecomment-606227220,1,['error'],['errors']
Availability,2 tests are considered as failing since the message of RemovedData is thrown as an `Error`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1600428420:84,Error,Error,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1600428420,1,['Error'],['Error']
Availability,"2080: 20% of the components make 80% of the result. Components list: https://docs.google.com/spreadsheets/d/1mPGnMrC-3Yo8dEdm5549dRhKcquK4mDmWoNRQt711gs/edit#gid=0. General idea: Repackage components ina way that a subset of the components will be mandatory. These selected components will be maintained with a high level of quality (tests, doc, comments, etc...); Binary distribution will include only this subset. On a fist time:; All the other components will remain available in the repo, but optionnal. (plugins?) ; Once the transition is mature enough, move the deprecated components to another repo ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/225#issuecomment-290699442:470,avail,available,470,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/225#issuecomment-290699442,1,['avail'],['available']
Availability,"5 Octobre 2016 17:52:58; > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > ; > OK I agree that this allows to compile Flexible without the SOFA-HighOrder.; > ; > Before moving SOFA-HighOrder to the gitHub repo, do any of you know if; > there are plans to move those plugins outside of github ?; > ; > My understanding is that at some point SOFA was going to be cut into; > several pieces that could be optionally compiled.; > ; > Is this still on the radar ?; > ; > Hervé; > ; > Le 05/10/2016 à 15:27, thomas-lemaire a écrit :; > ; > > yet an other option is to conditionnaly compile HighOrderTopology code; > > in Flexible based on whether the HighOrderTopology plugin is existing; > > or not (in cmakelists package_require(HighOrderTopology) if; > > (HighOrderTopology_FOUND) ... ):; > > - each plugin can live in its own repository; > > - no need for a third plugin; > > - should work whether all the plugins are compiled in the same cmake; > > build project or are compiled/installed separately (well; > > HighOrderTopology must be available when compiling Flexible); > > ; > > thomas; > > ; > > ----- Mail original -----; > > ; > > > De: ""Matthieu Nesme"" notifications@github.com; > > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > > ; > > > Hi Hervé,; > > > ; > > > In general, I think it is a good idea to have a repo per plugin,; > > > even if it; > > > becomes more difficult to update them when the sofa core is modified.; > > > But in this specific case, it would be great to add this plugin to this; > > > github repo, so Flexible can still benefit from your code.; > > > ; > > > Another solution, could be to add a third plugin in your independent; > > > repository, that would link with both SOFA-HighOrderTopology and; > > > Flexible,; > > > and that would contain the high order shape functions.; > > > ; > > > What do you think?; > > > ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225:1601,avail,available,1601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225,1,['avail'],['available']
Availability,; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8177,Error,Error,8177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,1,['Error'],['Error']
Availability,"; [ERROR] [FullVector] in vector<FullVector<double>> 0x5595582fbf00 size 0 : invalid index 0; sofa::linearalgebra::FullVector<double>::checkIndex(int) const; sofa::linearalgebra::FullVector<double>::operator[](int); sofa::component::linearsolver::direct::SparseLDLSolver<sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > >, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::solve(sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigne",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327688688:1091,ERROR,ERROR,1091,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327688688,1,['ERROR'],['ERROR']
Availability,"> ### Problem; > **Description** hello, I wanted to use Sofa 23.06.00 in M1 Mac Book Pro But I can not use Sofa. This error message indicates: (have 'x86_64', need 'arm64e' or 'arm64')) I'd like to know the solution. I want to use Sofa 23.06.00; > ; > **Steps to reproduce** < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >; > ; > 1. install anaconda and make virtual environment; > 2. install sofa framework; > 3. define the environment variables; > 4. import Sofa in python; > ; > **Expected behavior** < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >; > ; > Success importing Sofa in python without any error.; > ; > ### Environment; > **Context**; > ; > * System: Mac OS X 14.4.1 (23E224); > * Version of SOFA:[SOFA_v23.06.00_MacOS.zip](https://github.com/sofa-framework/sofa/releases/download/v23.06.00/SOFA_v23.06.00_MacOS.zip); > * State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >; > ; > **Command called**; > ; > ```; > (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; > Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; > [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> import Sofa; > ---------------------------------------; > Checking SOFA_ROOT and SOFAPYTHON3_ROOT; > Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > ---------------------------------------; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; > import Sofa.Helper; > ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudS",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179:118,error,error,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179,3,"['down', 'error']","['download', 'error']"
Availability,"> (just randomly enabled SOFA_GPU_CUBLAS 😅); > ; > Starting from CUDA12, you cannot include both cublas.h and cublas.h (throw a compilation error); > ; I supposed you meant cublas.h and cublas_v2.h or my eyes are not yet totally recovered.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4274#issuecomment-1792501540:140,error,error,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274#issuecomment-1792501540,2,"['error', 'recover']","['error', 'recovered']"
Availability,> ; > ; > The changes have not been propagated everywhere @epernod; > ; > ```shell; > /builds/workspace/sofa-framework/PR-1495/mac_clang-3.5_options_release/src/modules/SofaGeneralLoader/SphereLoader.cpp:81:5: error: use of undeclared identifier 'radius'; did you mean 'd_radius'?; > radius.beginEdit()->clear();; > ^~~~~~; > d_radius; > ```. I don't see what you are speaking about...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-696641121:210,error,error,210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-696641121,1,['error'],['error']
Availability,> ; > ; > What's up with the CI? Build failed on centos and ubuntu?. A weird error that happens sometimes... I relaunched and it's OK now.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-845737797:77,error,error,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-845737797,1,['error'],['error']
Availability,"> ; > @francoisfaure <https://github.com/francoisfaure> It is true that having dense matrix blocks is a must-have for some applications, but I wonder about the API:; > ; > for efficiency reasons, we need the DOF types to be available if we want to implement this proposal; Why ? The dense matrix blocks could be of arbitrary compile-time types, the same way as SReal. E.g. Mat<3,3,SReal> . Which may remove most of your objections. ; I don’t know if it is worth it. I am just raising the question, since we (Anatoscope) do not use this.; It is time for potential users to speak up. FF",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292885804:224,avail,available,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292885804,1,['avail'],['available']
Availability,"> <!-- Needed to use components [TetrahedronHyperelasticityFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TetrahedronSetGeometryAlgorithms,TetrahedronSetTopologyContainer,TetrahedronSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Hexa2TetraTopologicalMapping] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; <RequiredPlugin name=""Sofa.GUI.Component""/> <!-- Needed to use components [ConstraintAttachButtonSetting] -->; </Node>. <VisualStyle displayFlags=""showForceFields showBehaviorModels"" />; <ConstraintAttachButtonSetting/> <!-- The presence of this component sets the mouse interaction to Lagrangian-based constraints at the GUI launch -->; <FreeMotionAnimationLoop />; <GenericConstraintSolver maxIterations=""200"" tolerance=""1.0e-8""/>. <Node name=""grid"">; <RegularGridTopology name=""hexaGrid"" min=""0 0 0"" max=""1 1 2.7"" n=""4 4 11"" p0=""0 0 0""/>; <MechanicalObject name=""mechObj""/>; <Node name=""tetras"">; <TetrahedronSetTopologyContainer name=""Container"" position=""@../mechObj.position""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms template=""Vec3"" name=""GeomAlgo"" />; <Hexa2TetraTopologicalMapping name=""mapping"" input=""@../hexaGrid"" output=""@Container"" />; </Node>; </Node>. <Node name=""hyperelasticity"">; <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />. <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix""/>; <SparseLDLSolver template=""CompressedRowSparseMatrix""/>. <TetrahedronSetTopologyContainer name=""Container"" src=""@../grid/tetras/Container""/>; <TetrahedronSetTopologyModif",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4706#issuecomment-2112008399:2521,toler,tolerance,2521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4706#issuecomment-2112008399,1,['toler'],['tolerance']
Availability,"> > (just randomly enabled SOFA_GPU_CUBLAS 😅); > > Starting from CUDA12, you cannot include both cublas.h and cublas.h (throw a compilation error); > ; > I supposed you meant cublas.h and cublas_v2.h or my eyes are not yet totally recovered. 😅 yes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4274#issuecomment-1793881081:140,error,error,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274#issuecomment-1793881081,2,"['error', 'recover']","['error', 'recovered']"
Availability,> > > I tried on the 3instrument_collis (BeamAdapter) and there is no noticeable speed-up (or speed-down for that matter) ; but maybe this is not a good use case; > > ; > > ; > > I am not sure that this new function is called. I think #4253 must be merged first.; > ; > Indeed ! 🚀; > ; > master; `[BatchGUI] 5000 iterations done in 66.0261 s ( 75.7276 FPS)`; > ; > master+ this branch + #4253 : `[BatchGUI] 5000 iterations done in 58.863 s ( 84.943 FPS)`. This was on WIndows11+MSVC2022 ; on ubuntu/gcc no speedups 😓,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4248#issuecomment-1778672061:100,down,down,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248#issuecomment-1778672061,1,['down'],['down']
Availability,"> > @fredroy the history is not preserved; > ; > It does now no ? I can see commits down to ` Commits on Mar 10, 2009` ? ([a9bd817](https://github.com/sofa-framework/sofa/commit/a9bd817a4ec46a06e07b9f755660c58d48cf9d17)). Yes, it is preserved",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1786583135:84,down,down,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1786583135,1,['down'],['down']
Availability,"> > I agree to remove the macro, but why removing the template? I think it matches better the constructors available in the STL.; > ; > I was wondering the same, but everything was tested with ` __STL_MEMBER_TEMPLATES` not defined for years so thats why I prefered to use the ""legacy"" code. But I can change and take the templated one otherwise 😶‍🌫️. alright, I am not against it. It's not that important",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4251#issuecomment-1774607704:107,avail,available,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251#issuecomment-1774607704,1,['avail'],['available']
Availability,"> > I have tried to used that one a long time ago to make robotics articulated chain. And I fully agree that some serious improvement can be done. Anyhow, thank for the cleaning @fred as this is a nice first step.; > ; > `serious improvement` you are too nice sweat_smile, I guess it would a complete reboot building_construction. :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2684#issuecomment-1040579137:301,reboot,reboot,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2684#issuecomment-1040579137,1,['reboot'],['reboot']
Availability,> > I tried on the 3instrument_collis (BeamAdapter) and there is no noticeable speed-up (or speed-down for that matter) ; but maybe this is not a good use case; > ; > I am not sure that this new function is called. I think #4253 must be merged first. Indeed ! 🚀. master; ; `[BatchGUI] 5000 iterations done in 66.0261 s ( 75.7276 FPS)`. master+ this branch + #4253 : ; `[BatchGUI] 5000 iterations done in 58.863 s ( 84.943 FPS)`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4248#issuecomment-1776413697:98,down,down,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248#issuecomment-1776413697,1,['down'],['down']
Availability,"> > Last regression test failing will disappear as soon as PR #4494 is merged as the new version of isquadDelaunay method is not using this method intersectionWithEdge anymore. And for the note, the error is a false positive. The regression should be regenerated at one point.; > ; > Regressions are OK but the error being an unit test `InciseProcessor_test.InciseTriangles`, it is because of `[ERROR] [TriangleSetGeometryAlgorithms(GeomAlgo)] Orthogonal projection failed` I dont really see how it can be a false positive ?. Hi, ; I meant, false positive because it is part of the snapping algorithm in the incision which was already buggy but the error was not catch before.; The projection was computed totally outside of the edge (the mesh is a square of size 10x10:; coord_edge1: [5.44854, 5.02682, -0.832787] - [4.86141, 4.79438, -0.760481]; coord_edge2: [4.99791, 4.99949, -0.778808] - **[20676.1, 52846.7, 1933.72]**. the result was a strange (but not crashing 🤔 ) incision; ![image](https://github.com/sofa-framework/sofa/assets/21199245/c3b0bfbc-9867-4991-bfaf-2120aaee4203). In fact the correct fix is to exit the snapping if the projection failed and continue the incision normally instead of forcing the projection and use a ""random"" point of the triangle to be snapped. . Here is the result after:; ![IncisionTrianglesProcess_00000002](https://github.com/sofa-framework/sofa/assets/21199245/84858056-93c6-44ad-bd19-1e1151409c1a)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-2044595739:199,error,error,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-2044595739,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"> > The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?; > ; > I don't understand. Your cmake change is mostly affecting the install process, which is not tested on the CI... so did you try to install your current build ? ( to be sure that the change does not incur any error)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063:318,error,error,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063,1,['error'],['error']
Availability,> @damienmarchal FYI there are compilation errors and merge conflicts. It was because of the use of old (and deprecated version of qt) on the CI 5.12. Thank for reporting I asked guillaume to switch for 5.15.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2943#issuecomment-1130030364:43,error,errors,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2943#issuecomment-1130030364,1,['error'],['errors']
Availability,"> @epernod @damienmarchal I have the following error in several scenes of SoftRobots:; > ; > ```; > [ERROR] [UniformMass(mass)] TopologyData: indices already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; > ```; > ; > I think it is due to the fact that a Node is initialized twice. What is your recommendation?. Quickly: this error is fired because init is not called only once. A ""TopologyDataHandler"" is created in the UniformMass init method. Creating 2 trackers could create real bugs if topologicalChanges are applied (basically changes will be applied twice); I see several options:; - init should not be applied several times in those examples; - If we decide init could be applied several times, we need to change the code to check tracker are not created twice. This should be possible but not as simple as ```tracker != null```. As a quick workaround: replace the `TetrahedronSetTopologyContainer ` by a `MeshTopology ` here : https://github.com/SofaDefrost/SoftRobots/blob/4acf28248278106c2855206f1751dcba41268039/examples/tutorials/Tripod/details/elasticbody.py#L20; This should solve all the tripod tutorials scenes. TopologyDataHandler are not created if the topology is using static containers.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590748119:47,error,error,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590748119,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"> @fredroy the history is not preserved. It does now no ? I can see commits down to ` Commits on Mar 10, 2009` ? (a9bd817a4ec46a06e07b9f755660c58d48cf9d17)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1786321116:76,down,down,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1786321116,1,['down'],['down']
Availability,"> @fredroy you labelled this PR as to backport. However, it leads to compilation error due to another PR which is only in master and not v23.06 :; > ; > ```; > BarycentricMapper.inl:33:19: error: 'sofa::component::mapping::linear::_barycentricmapper_::BarycentricMapper<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >::MatrixType' {aka 'class sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3, 3, double> >'} has no member named 'wblock'; did you mean 'wbloc'?; > ```; > ; > I will have to remove the commit from v23.06. No worries, this warning only ""makes sense"" with v23.12 and the integration of the CRSM anyway",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749:81,error,error,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749,2,['error'],['error']
Availability,"> Actually, it is already done here: https://github.com/sofa-framework/sofa/blob/master/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/MatrixLinearSystem%5BBTDMatrix%5D.cpp What is exactly the error you are trying to fix?. The factory error if I want to explicitly instantiate MatrixLinearSystem on BTDMatrix6d (in the scene); ```; [ERROR] [MatrixLinearSystem(linearSystem)] Requested template 'BTDMatrix6d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, SparseMatrix]. Falling back to the first compatible template: 'CompressedRowSparseMatrixd'.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4189#issuecomment-1728961313:220,error,error,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4189#issuecomment-1728961313,4,"['ERROR', 'avail', 'error']","['ERROR', 'available', 'error']"
Availability,"> Ah that is good to know 👍 Keep us in touch !. Hi @fredroy,; I tested it more and the results seem very strange to me:. For caduceus scene, in v21.06 I can only drag the caduceus to the right direction using mouse with bilaterial , none of the left, up and down directions work. And the same case happens in v19.12, only moving mouse to the right works. While when I test my own gallbaldder scene in v19.12, all of the directions work with the mouse, but none of the directions work in v21.06.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-977632348:258,down,down,258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-977632348,1,['down'],['down']
Availability,"> Any news @nhnhan92 ?; > Note that for my remark on the header, having your project name if fine for us. What matters for us is to have first the SOFA header (LGPL) up in the file. Would this be possible?; > Let me thank you again for this nice contribution. Hi @hugtalbot,; Sorry for late response. I have recently been in the middle of some work (related to this project). Therefore, there is no progress so far, however, I plan to add the addKtoMatrix module to the FF and also try to improve coding stuffs (will be updated as soon as possible). On the other hand, I have discussed with my team member and advisor about the header. We agree with your above suggestion, but I just wonder is it possible for this FF to appear in both the SOFA source code (in the future) and our own under-developing plugin? we are not familiar with this procedure, sorry for that; If it is okay, please write the name of the contributor as:; JST/PRESTO Project: TouchIoT-Smart Tangible Sensing Enabler for Tactile Internet (Developer: Nhan Nguyen Huu); One last thing, from the previous comment, you mentioned the test. Could you please be more specific about the test? do you want to test the reliability of the FF (like coding, mathematical model, etc.)? We definitely want to certify that.; Thank you for your and SOFA team effort to review our work.; Best regards,; Nhan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-780500969:1180,reliab,reliability,1180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-780500969,1,['reliab'],['reliability']
Availability,"> As you said, using prime-run runSofa when available to force SOFA to run on the GPU seems to be working. Actually, when not using prime-run it still runs on the GPU. I have two GPUs, one AMD 5700XT and a nVidia 1650. On AMD doesn't work, on nVidia it works. Could be something related only with the amd driver. Haven't tested it on other mesa based drivers.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1567#issuecomment-724744131:44,avail,available,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1567#issuecomment-724744131,1,['avail'],['available']
Availability,"> Build failure on Ubuntu is weird. Seems related to CGAL but I'm not even sure. Can you check this @hugtalbot ? https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2935/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/6/console. The system probably killed the compilation because it took too many resources. Restart the compilation could maybe make it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123785530:8,failure,failure,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123785530,1,['failure'],['failure']
Availability,"> But I see no message warning that a scene is not being run with the version set in APIVersion. That's either because you're running a scene with no APIVersion component in it, or, and it's most likely, because you're using an up-to-date version of SOFA, so even if there's an APIVersion in it, you will be at best running the scene with a higher version, at worst with the same version that's mentioned in APIVersion::level.; My understanding of APIVersion is that error messages should only appear if your scene is ran with an old version of SOFA while the APIVersion's level expects a newer version.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1473#issuecomment-689389715:467,error,error,467,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1473#issuecomment-689389715,1,['error'],['error']
Availability,"> CI cries :; > ; > ```; > MechanicalMatrixMapper.h:50:27: error: no matching function for call to 'sofa::simulation::BaseMechanicalVisitor::BaseMechanicalVisitor(const sofa::core::ConstraintParams*&)'; > 50 | , cparams(_cparams); > | ^; > ```. @hugtalbot Thank you. I suspect this will be fixed by https://github.com/sofa-framework/sofa/pull/2481.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2475#issuecomment-968715980:59,error,error,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2475#issuecomment-968715980,1,['error'],['error']
Availability,"> Cool @alxbilger so if there is Required data and in `Inherit::init()` is called then the error gets not triggered. Correct? We should investigate other components with this Required feature. That's the opposite: to catch an error if a required Data is missing, the component must call `Inherit::init()`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-945407074:91,error,error,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-945407074,2,['error'],['error']
Availability,"> Could you give us more precisions regarding the need to change from enums to strings for the integration methods?. Two reasons motivated the use of strings : ; 1) Right now when specifying the type of numerical integration method in python or xml scripts the user had to use for instance numericalIntegrationMethod=""3"" which is not descriptive at all. It is preferable to use numericalIntegrationMethod=""Tetrahedron Gauss"" for the maintenance of the code. Using OptionsGroup could solve this issue I believe. 2) Inheritance. In the plugin ""SofaHighOrder"" I specify new types of numerical integration methods on triangles. While the APi allows to add a new method, the enum class cannot be extended ( I can use a number like 4 but this creates warnings and is not satisfactory). Therefore using a string class is more versatile. . > **If** the goal is to simplify the conversion from the string (passed in XML / Python scenes) to the C++ enums, wouldn't it be best to take advangate of the OptionsGroup datatype already present in SOFA?. This would not solve the inheritance problem as the type of numerical integration methods can be exhaustively listed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-466958911:433,mainten,maintenance,433,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-466958911,1,['mainten'],['maintenance']
Availability,"> Damned sorry @EulalieCoevoet it's my fault if this PR is not yet merged! I was supposed to complete my review which I did not successfully take the time to do!. Actually @hugtalbot your last comment makes me think that RigidMapping is broken,for cases where the Out template parameter for the mapping is templated on CudaVec3Types.; In your comment you mention RigidMappingCuda3f_applyJ which takes const void* for `out` (and `rotated`).; The cuda kernel code just cast them later on with `const float*` will be obviously a problem 🤐.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1504308000:39,fault,fault,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1504308000,1,['fault'],['fault']
Availability,"> Hey @marques-bruno !; > ; > I think this will help us a lot to add robustness to our components.; > ; > With this PR, do you see any reason why one would use `BaseLink`s in his component instead of a `BaseDDGLink`s?; > ; > Also, maybe instead of have a new `InitDDGLink` function in BaseClass, we could simply overload the `initLink` with; > `initLink(BaseDDGLink* owner, std::string name, std::string help, std::string group = """")` ?; > ; > Thanks !. Thanks @jnbrunet for your review, I'll do the changes tomorrow.; Regarding using BaseLink instead of BaseDdgLink, BaseLinks are actually used internally in DDGNodes (for input/outputs). So they have their use. What I want to replace with DDGLink, are the SingleLink entries in sofa components.; We'll discuss it at the sofa meeting if you're there tomorrow ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1226#issuecomment-561309194:69,robust,robustness,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1226#issuecomment-561309194,1,['robust'],['robustness']
Availability,"> Hi @ScheiklP; > ; > Thanks for the PR.; > ; > The SphereCollisionModel works historically without a topology (relying on the mstate). The tests are failing due to the absence of a PointSetTopology. What could be done is to change the warning into an info saying that no topology is found therefore no topological change will be supported. What do you think?; > ; > Another change in order to make the component topologically robust would be to make the data `radius` as a PointData:; > ; > ```c++; > Data< VecReal > radius; ///< Radius of each sphere; > ```; > ; > should become; > ; > ```c++; > PointData< Real > radius; ///< Radius of each sphere; > ```; > ; > (connected to a topology handler). Hi @Hugo,; the `SphereCollisionModel` are in a node together with an `EdgeSetTopologyContainer` that is now also correctly found and bound to `l_topology` and `m_topology`. . Is there something else to do, to correctly connect it to `m_mstate`?. Or maybe `updateFromTopology()` should do more than it does now? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597:427,robust,robust,427,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597,1,['robust'],['robust']
Availability,"> Hi,; > ; > What is exactly the ""Haptic module""? It's weird that is tries to use directly the constructors. You are right that the constructors are protected, so they cannot be used. So I am curious to know if this code ever worked....; > ; > To fix the code, you should have a look on the [tutorials](https://github.com/sofa-framework/sofa/tree/master/applications/tutorials), for example this line: https://github.com/sofa-framework/sofa/blob/master/applications/tutorials/oneTetrahedron/oneTetrahedron.cpp#L94 It uses the friend class `New` to instantiate the objects. There are also many examples in the unit tests. The code in plugins/Haption/HaptionDriver.cpp which support virtuose device; and i try to use the friend class ::New as. `visualHaptionDOF = sofa::component::container::MechanicalObject::New<sofa::defaulttype::Rigid3dTypes>();`. i'm sorry, still error",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1840284644:867,error,error,867,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1840284644,1,['error'],['error']
Availability,"> I agree to remove the macro, but why removing the template? I think it matches better the constructors available in the STL. I was wondering the same, but everything was tested with ` __STL_MEMBER_TEMPLATES` not defined for years so thats why I prefered to use the ""legacy"" code. But I can change and take the templated one otherwise 😶‍🌫️",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4251#issuecomment-1774592209:105,avail,available,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251#issuecomment-1774592209,1,['avail'],['available']
Availability,"> I echo @damienmarchal , thanks a lot @ScheiklP for these interesting investigations!; > ; > your last comment means that it could come from the collisionmodel binding, right?. Hi @hugtalbot ,; The collision models have no explicit binding in SofaPython3 as far as I can see. :(. **EDIT**:; I was just not creating the MechanicalObject correctly. :D -> C++ scene also has the leak.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1255504827:4,echo,echo,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1255504827,1,['echo'],['echo']
Availability,"> I find that the intermediate directories sofa/gpu/cuda are superfluous, and redundant with the name of the plugin. It is also in the prevision of changing the namespaces (which is not done in this PR).; > What do you think @hugtalbot @epernod @damienmarchal @fredroy ?. agreed @alxbilger !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1411679270:78,redundant,redundant,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1411679270,1,['redundant'],['redundant']
Availability,"> I have tried to used that one a long time ago to make robotics articulated chain. And I fully agree that some serious improvement can be done. Anyhow, thank for the cleaning @fred as this is a nice first step. `serious improvement` you are too nice 😅, I guess it would a complete reboot 🏗",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2684#issuecomment-1040498052:282,reboot,reboot,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2684#issuecomment-1040498052,1,['reboot'],['reboot']
Availability,"> I tried on the 3instrument_collis (BeamAdapter) and there is no noticeable speed-up (or speed-down for that matter) ; but maybe this is not a good use case. I am not sure that this new function is called. I think https://github.com/sofa-framework/sofa/pull/4253 must be merged first. Anyway, I don't expect a huge speedup in a scene. This kind of speed up is significant with a high number of DoFs, and it's not the case when using beams. I expect that you save a few microseconds by time step, which is really not significant.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4248#issuecomment-1774586566:96,down,down,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248#issuecomment-1774586566,1,['down'],['down']
Availability,"> I was wondering if there is a way to catch the missing symbols at compile-time and I found this: https://cmake.org/cmake/help/latest/module/CheckCXXSymbolExists.html#module:CheckCXXSymbolExists. It's configuration time but it could be helpful. I tried to play with it but I was not able to make it work. I added the check in the `sofa_create_package_with_targets` macro. It could be interesting to enforce that the necessary symbols are defined at configure-time yes 🤔 . EDIT: I did some tests and it is quite bothersome to set up, (the file itself needs to be compilable, the symbol need to be defined and not only declared, adding variable in cache, etc) And I think if we do that for all potential loadable libraries, it will slow down considerably the cmake configure process.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1915860120:736,down,down,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1915860120,1,['down'],['down']
Availability,> Isn't it fixed by #4307 ?. Actually this error started to appear with this PR #4307 apparently (it was not noticed while PR reviewing 🙊),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4323#issuecomment-1835459349:43,error,error,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4323#issuecomment-1835459349,1,['error'],['error']
Availability,> It reminds me that we should in general browse all scene warnings to fix them. Good luck. From the last build:. ```; Scene testing summary:; - 675 scene(s) tested; - 675 success(es); - 2184 warning(s); - 0 error(s); - 0 crash(es); ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5072#issuecomment-2434876976:208,error,error,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5072#issuecomment-2434876976,1,['error'],['error']
Availability,"> It seems to add one failure on SoftRobots @alxbilger. Oups, did not see your comment 🙈",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4901#issuecomment-2276938527:22,failure,failure,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4901#issuecomment-2276938527,1,['failure'],['failure']
Availability,"> It seems to be coming from a setup/system/configuration error than something related to SOFA itself, as the error is coming from the Windows SDK itself. Which version of MS Visual Studio are you using ?. i use vs 2022(Windows SDK version 10.0.22621.0 to target Windows 10.0.19045 MSVC 19.37.32822.0)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835503584:58,error,error,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835503584,2,['error'],['error']
Availability,"> It's really not a big feature. Granted, it's not *that* big, but still:; - you need to properly initialize/finalize sofa and core modules (see Main.cpp in the runSofa application); - you need to handle the case where the loaded scene already has python scripts, and let the `PythonEnvironment` know the interpreter is being run from the outside when initializing (and maybe deal with all the `sys.path` / `__file__` abuses down there); - probably have a good fight with the GIL down the road; - how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes? (I would probably put your feature in a module separate from `Sofa` for this reason); - what happens when `Sofa.cleanup()` gets called but python objects still hold c++ objects that are to be destructed when python exits ?. But I am really all for it, so good luck with that :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339347741:425,down,down,425,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339347741,2,['down'],['down']
Availability,"> Just a question @fredroy I guess the DefaultAL will be brought back later on? I thought it could be done here as well; > ; > Else 👍. This is an interesting question; DefaultAnimationLoop is in SofaSimulationCore (in the framework) and if it moves, it will be mandatory to compile S.C.AnimationLoop then.; In my mind, there should be always an AnimationLoop available (even with the skinniest set of cmake options) but I understand why you would move it in this module.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2797#issuecomment-1079167477:359,avail,available,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2797#issuecomment-1079167477,1,['avail'],['available']
Availability,"> Last regression test failing will disappear as soon as PR #4494 is merged as the new version of isquadDelaunay method is not using this method intersectionWithEdge anymore. And for the note, the error is a false positive. The regression should be regenerated at one point. Regressions are OK but the error being an unit test ` InciseProcessor_test.InciseTriangles `, it is because of `[ERROR] [TriangleSetGeometryAlgorithms(GeomAlgo)] Orthogonal projection failed`; I dont really see how it can be a false positive ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1958537865:197,error,error,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1958537865,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"> No hurry, I just wanted to make sure it wasn't a technical problem! +1. Seems like I'm running into another error. ```; [ 97%] Linking CXX shared library ../../../lib/libSofaOpenCL.so; /usr/bin/ld: cannot find -lcsparse; collect2: error: ld returned 1 exit status; make[2]: *** [applications/plugins/SofaOpenCL/CMakeFiles/SofaOpenCL.dir/build.make:407: lib/libSofaOpenCL.so] Error 1; make[1]: *** [CMakeFiles/Makefile2:10879: applications/plugins/SofaOpenCL/CMakeFiles/SofaOpenCL.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419#issuecomment-650839083:110,error,error,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419#issuecomment-650839083,5,"['Error', 'error']","['Error', 'error']"
Availability,"> Should it be removed ?. After discussion at the STC#11, nobody seems to be using them, but Anatoscope (in their own private SOFA fork). However, it appears that the functionality of masks could be embedded directly inside mappings. Therefore, it has been decided to remove ForceMask during STC#11.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1637#issuecomment-853723962:184,mask,masks,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1637#issuecomment-853723962,1,['mask'],['masks']
Availability,"> So it is faster without group manager? I would expect the opposite, or maybe I'm not understanding well the meaning of ""group manager"". It is indeed faster. > Differences could come from a difference of numerical settings in the solver which are used when gathering nodes together (iteration max, tolerance, threshold ..). It is possible. However, the second cube is copy/paste of the first one. They both have an ODE solver with the same properties. I would expect that they are combined into a solver with exactly the same properties. But it has to be checked.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842936964:299,toler,tolerance,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842936964,1,['toler'],['tolerance']
Availability,"> So... I made my best to explain why I care of explicit test but the important things to me are:; >- what do I have to change so that PR can be be merged so that I can close it and move forward ?. Only one last thing I did not get.; There are EXPECT_NOEMIT, EXPECT_EMIT, what about a EXPECT_NOTHING_I_DO_NOT_CARE?!; That would correspond to the default behavior for warnings for instance. >- do we have the time & courage to fix the 200 failing tests if we activate failure on Warning&Deprecated >?. We should at least fix some of them that are real crap, and must not test anything.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292868331:467,failure,failure,467,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292868331,1,['failure'],['failure']
Availability,"> Some `image` plugin scenes fail because the template used is not compiled in the standard set. It needs the full set. Only the standard set is compiled on the CI.; > ; > Decision to take:; > ; > 1. The failing scenes are ignored on the CI; > ; > 2. The failing scenes are modified to use a templated available in the standard set; > ; > 3. The CI compiled the full set; > ; > ; > I am in favor of the third option, but we already talked about it in [sofa-framework/ci#15](https://github.com/sofa-framework/ci/pull/15). It seems to take too much time at the compilation. I think there is a 4th solution, adding the ImageB type in the ""standard"" set, as it is seems quite important if lots of scenes need it after all",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1289796406:302,avail,available,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1289796406,1,['avail'],['available']
Availability,> THere is 16 scene crashing on centos....but this seems to be because of timeout.; > Any idea ?. blinking time out errors on the CI I guess...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-686376515:116,error,errors,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-686376515,1,['error'],['errors']
Availability,"> Tested by @fredroy and ready to be merged !. Not ready to be merged unfortunately; on Windows, CMake complains:; ```; CMake Error at Sofa/framework/Config/cmake/SofaMacrosInstall.cmake:858 (get_target_property):; get_target_property() called with non-existent target ""ZSTD::ZSTD"".; Call Stack (most recent call first):; applications/plugins/CImgPlugin/CMakeLists.txt:101 (sofa_install_libraries). ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4749#issuecomment-2132471684:126,Error,Error,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4749#issuecomment-2132471684,1,['Error'],['Error']
Availability,"> Thank you. I have successfully run it on my laptop (MAC M2 chip with qt5). I have modified both `.bashrc` and `.zshrc` with define the `Qt5_DIR` but it does not change the value in `cmake-gui`. Thus, I modified the `QT5_DIR` in `cmake-gui` directly and it plays well. Before that, it has a small error, like `Imported target ""tinyxml"" includes non-existent path` I deleted the default one in `/usr/local/lib` and modified the `TinyXML_DIR` with the path installed by `homebrew`.; > ; > Anyway, Thanks a lot. <img alt=""sofa"" width=""1099"" src=""https://user-images.githubusercontent.com/56861752/210767352-6f43621e-1559-40da-a15d-cd28a18945ca.png"">; have you been able to run sofa python",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-2254330043:298,error,error,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-2254330043,1,['error'],['error']
Availability,"> Thanks @sergeiNikolaev for this contribution and making this nice effort of bringing back this work.; > ; > * Is any test available with these new classes?; > * is there any example scene?. @hugtalbot; Here is the test to verify polynomial springs (Python2 scripts). [polynomial_spring_test.zip](https://github.com/sofa-framework/sofa/files/4540453/polynomial_spring_test.zip). The test ""spring_verification.py"" depicts two points (p1, p2) connected with a spring. One point (p1) is fixed, another (p2) is moving in space. The external impact (f_external) to the system could be applied using LinearForceField (you need to make target_force as a Data<> object in order to collect its information, but I have this modification) or ControlPoint (third point (p_control), attached with a linear rest shape spring). In case of a second option, the external force is computed as (p_control - p2)*k_rest_shape_spring.; During the simulation process, the position ""p2"" and forces ""f2"" for point p2, and also the external force or the position of the control point are saved to data files.; The script ""spring_verification_draw_result.py"" loads all data. The strain for spring is computed as ; (norm(p2-p1) - l0) / l0 for PolynomialSpring or as norm(p2-p1) / l0 for RestShapePolynomialSpring.; I use static solver with many iterations to make spring force equal to external force, but I guess it is also possible to compute the spring force as difference f2 - f_external.; Based on this data, a force-strain relation is plotted and compared with polynomial values.; And this is the end of the test. NOTE: Please, keep in mind, that configuration parameters have to be the same for both scripts, in order to get a valid result.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-620055719:124,avail,available,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-620055719,1,['avail'],['available']
Availability,"> Thanks @sergeiNikolaev for this contribution and making this nice effort of bringing back this work.; > ; > * Is any test available with these new classes?; > * is there any example scene?. Thank you for your answer. Yes, there is an example scene, which I also use as a test. But to add it to Sofa I have to remove plugin dependencies from it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-616504586:124,avail,available,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-616504586,1,['avail'],['available']
Availability,"> Thanks again for this nice contribution @nhnhan92; > Sorry I had prepared many similar feedback as @epernod so, some might be duplicated.; > ; > A more general remark, could you point us out the documentation you used to write this code please?; > Do you have an idea of when you would plan to consider rotations around the z axis?; > I also noticed in this paper typical tests for testing accuracy: https://sci-hub.se/10.1007/s00366-020-00974-4 it would be great to get a similar test for the continuous integration!; > ; > If this is too much questions, we can discuss about this live if you'd like. Dear, @hugtalbot,; Thank you for kind supports from you and @epernod. First, I implemented this FF mostly based on two following references:; 1. Book: ""Structural Analysis with the Finite Element Method, Linear static, Vol. 2, chapter 8""; 2. And the most recent paper of our group: https://ieeexplore.ieee.org/document/9247533; On the other hand, at this stage, this FF fairly meets our expectations for the current project. I definitely want to improve it in the near future. However, FEM is not my field (I am basically an end-user) and I have been in the middle of something else, therefore, It is gonna take time for me to be able to complete it. I would love to cooperate with SOFA team to complete it.; I'm sorry, but I'm quite unsure when you said rotation around z-axis (normal axis of the element?). Do you mean the consideration of rotating element around its normal axis? (i.e., co-rotational LARGE method (am I right?)). Right now, my priority is to take the rest two rotation dofs of a node (location rotations of around x and y direction) because, at this moment, I assumed they are zeros. But, so far, I have no idea how to include them; Finally, if it is necessary, I am willing to have a face-to-face discussion as long as I am available. Thank you ; Best,; Nhan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773702816:1849,avail,available,1849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773702816,1,['avail'],['available']
Availability,"> The problem is that this file is ""unconfigured"" (Eigen3Config.cmake.in) while extracting the Eigen archive directly. Which actually makes sense, since you are downloading the source code of Eigen, and not a packaged one (as with package managers apt, dnf, etc.). Even if Eigen is header only, it is still the raw source code you are downloading. Not sure what's the good way to go here.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-619367609:161,down,downloading,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-619367609,2,['down'],['downloading']
Availability,"> The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier. Well done!; I have added the `breaking` flag due to the change of some signatures for some methods",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997:17,failure,failure,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997,1,['failure'],['failure']
Availability,"> This change makes all tests using the ConstantForceField fail due to a bug in SingleStateAccessor solved in #4917 . To solve the tests, merge #4917 first and rebase. Then, the PR should be fine. #4917 has been integrated (not rebased due to anterior conflicts) and there are still errors because of ; `No input force has been set. Please define one of both Data: forces or totalForce` 🥲. I guess there is an error of logics (if, else, etc) somewhere",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4918#issuecomment-2297674122:283,error,errors,283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4918#issuecomment-2297674122,2,['error'],"['error', 'errors']"
Availability,"> Very cool and useful indeed! It really look like the one in unity! I see the Tracy lib is under BSD license, is it a problem to add it in the core of SOFA ? @hugtalbot otherwise we should move the profiler into another repo?. @alxbilger did it in a way we dont even ship it with SOFA as it will downloaded from their repo at the cmake step.; Moreover, this is for developers so the binary distribution would not contain the compiled lib anyway. In any case, BSD licence is very lax anyway so it should be OK.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4182#issuecomment-1726703348:297,down,downloaded,297,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4182#issuecomment-1726703348,1,['down'],['downloaded']
Availability,> What happens if you forget the required plugins in the ci-dependent PRs?. An error message and no object instantiated.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2372631309:79,error,error,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2372631309,1,['error'],['error']
Availability,"> Why not, for the sake of clarity. +1; > Just note that this `real` thing is how the algorithm was written in the first place.; > See https://github.com/erich666/GraphicsGems/blob/master/gemsv/ch7-2/pcube.h. I understand, but this definition leads to compilation error when compiling with unity builds. As I said, it's because the symbol ""real"" is used as a symbol for a class template somewhere else. ; An alternative would be to undef real after an include of this file.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1955#issuecomment-810905390:264,error,error,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955#issuecomment-810905390,1,['error'],['error']
Availability,"> Wow, @fredroy and @epernod might enjoy it!. I tried on the 3instrument_collis (BeamAdapter) and there is no noticeable speed-up (or speed-down for that matter) ; but maybe this is not a good use case",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4248#issuecomment-1774550942:140,down,down,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248#issuecomment-1774550942,1,['down'],['down']
Availability,"> a priori only MinResLinearSolver is missing it .. MinResLinearSolver does not override `init()`, so I suspect its base `init()` is called. So no problem here. I verified by removing `iterations` in `examples/Components/linearsolver/MinResLinearSolver.scn`. It shows an error.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2426#issuecomment-945526511:271,error,error,271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2426#issuecomment-945526511,1,['error'],['error']
Availability,"> arf you have a compilation error in https://github.com/sofa-framework/SofaGLFW. Yes, this was expected to have some. The shortName is overridable by the class, so it must be in BaseClassNameHelper. ; That's said, I could probably implement a non-verridable version in NameDecoder so that compilation still works at the cost of some text not showing exactly the same in the GUI's. . EDIT: done.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308809504:29,error,error,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308809504,1,['error'],['error']
Availability,"> can you point the test that is not wworking, it is impossible to find it in jenkins menu, even more with a low bandwidth. > Regressions are OK but the error being an unit test `InciseProcessor_test.InciseTriangles`, it is because of `[ERROR] [TriangleSetGeometryAlgorithms(GeomAlgo)] Orthogonal projection failed` I dont really see how it can be a false positive ?. `InciseProcessor_test.InciseTriangles` 😅 ?; https://github.com/sofa-framework/sofa/blob/251fd89b99379aa2f7693095f9399368acdc72ee/Sofa/Component/Topology/Utility/tests/TopologicalChangeProcessor_test.cpp#L362. But for sure the CI jenkins is slow as hell",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1967972725:153,error,error,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1967972725,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"> few CUDA scenes are failing, all with the messages `[ERROR] [CGLinearSolver(cGLinearSolver1)] Required data ""threshold"" has not been set. (Current value is 1e-05)` so I suppose these scenes must be updated too. @fredroy ok I did not catch them. Thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949364341:55,ERROR,ERROR,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949364341,1,['ERROR'],['ERROR']
Availability,"> shift + left click. Yes I did hold shift down all the time (and I have been using the bilaterial constraints with no issues in sofa v19.12.) . In my case the pink small square shows the same as in your screenshot, however the snake doesn't follow the mouse (such that two pink squares have large distance apart while i moving the mouse). Updates:; I just tried it once more, the caduceus scene now works well for me, I can pick the snake using the mouse with bilaterial now. I will switch to my branch and test it with my scene file now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976514790:43,down,down,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976514790,1,['down'],['down']
Availability,"> you turn SofaCUDA plugin to on by my fault? :). @epernod no don't worry, the CI was not happy in SofaCUDA with one of my PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2440#issuecomment-948609845:39,fault,fault,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2440#issuecomment-948609845,1,['fault'],['fault']
Availability,">; using sofa::helper::logging::GtestMessageHandler ;. /// We can define a default policy for a complete class this way so that if not more; /// expectation are given this generates test failures.; class Sofa_test2 : public Sofa_test<float>; {; EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;; };. class TestMessageHandler_test : public Sofa_test2; {; public:; void defaultTestBehavior(); {; msg_deprecated(""HERE"") << ""This should generate a failure"" ;; msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a failure"" ;; }. void catchingTestBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should not generate a failure"" ;; msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. /// THIS TEST SHOULD FAIL.; void expectAMessageissingBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should not generate a failure"" ;; //msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure but with line number close to "" << __LINE__ ;; msg_error(""HERE"") << ""This should generate a test falure with line number close to "" << __LINE__ ;; }. void complexTestBehavior(); {; {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should generate a failure"" ;; //msg_error(""HERE"") << ""This should generate a test failure"" ;; {; EXPECT_MSG_NOEMIT_V2(Error) ;; msg_error(""HERE"") << ""This should generate a test failure"" ;; }; }. {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a test falure"" ;; }. }; };; ```. PS: if someone says it smell like 'asynchronous' exceptions I agree.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643:1664,failure,failure,1664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643,10,"['Error', 'failure']","['Error', 'failure']"
Availability,">> the modified ""arg""; are also reported by caller's as error. what do you mean by the caller's ? This means it is not counted as error anymore?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/939#issuecomment-465172616:56,error,error,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/939#issuecomment-465172616,2,['error'],['error']
Availability,@Ant0nin The conflicts are indeed solved but the test errors remain. See https://www.sofa-framework.org/dash?branch=origin/PR-992; Could you try for instance to run SofaPython_test on your local build?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501325095:54,error,errors,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501325095,1,['error'],['errors']
Availability,"@ChristianDuriez I stand corrected, thanks. In any case you can still obtain the projection matrix from the projection of each individual canonical basis vector, which could be the default implementation (+ inefficiency warning ofc). As for the original proposal, I'm not exactly sure I understand: you suggest a FixedConstraint + some Deriv mask for filtering dimensions, right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/440#issuecomment-334132592:342,mask,mask,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/440#issuecomment-334132592,1,['mask'],['mask']
Availability,"@EulalieCoevoet Hi, do you plan to fix the CUDA errors?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797#issuecomment-438594229:48,error,errors,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797#issuecomment-438594229,1,['error'],['errors']
Availability,"@EulalieCoevoet Thank you for reporting the error (too bad it skipped the reviews 😕); By any chance, would have a simple scene to submit as a test? thanks ! 😙",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2265#issuecomment-886453383:44,error,error,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265#issuecomment-886453383,1,['error'],['error']
Availability,"@Younesssss, your PR has been wip for a long time. Could you have a look at the build errors please?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/288#issuecomment-329154253:86,error,errors,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/288#issuecomment-329154253,1,['error'],['errors']
Availability,"@adagolodjo , I drop the official version, and use the brew install qt@5. When I compile in the Cmake-GUI. ; ERROR OCCURS:; CMake Error at Sofa/GUI/Qt/CMakeLists.txt:28 (message):; Sofa.GUI.Qt: Could not find either Qt5 or Qt6.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008:109,ERROR,ERROR,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:41,error,error,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,1,['error'],['error']
Availability,"@alxbilger I got the same error (and message) with my builds on Windows.; And interestingly, it is working well with my Linux setup. ; Therefore I am suspecting a export/import symbol mismatch or something like that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-973885939:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-973885939,1,['error'],['error']
Availability,"@alxbilger no errors were generated when i tried to run it with imgu.; the problem of ""[DataWidgetFactory] Cannot add widget vector<> into the factory"" is solved i guess.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4732#issuecomment-2112826679:14,error,errors,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4732#issuecomment-2112826679,1,['error'],['errors']
Availability,"@bakpaul This PR does not take the latest commits in sofa-framework/ci. Hence, it does not fetch and compile the plugin CSparseSolvers. Here is what I see in the logs:; ```; --------------- Clone CI scripts ---------------; pwd = /builds/workspace/sofa-framework/PR-4258/ubuntu_gcc_options_release; Cloning into 'ci'...; 640400517e592bfa826a46dea29b6ddd512abf02 Merge pull request #21 from hugtalbot/202308_remove_meshsteploader_from_list; CI scripts are available in /builds/workspace/sofa-framework/PR-4258/ubuntu_gcc_options_release/ci/scripts; ```; It's not the latest commit in the master branch. Can you investigate why?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822533494:455,avail,available,455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822533494,1,['avail'],['available']
Availability,@bcarrez Can I merge this one ? The Failure seems related to our broken vs2013.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/122#issuecomment-275696156:36,Failure,Failure,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/122#issuecomment-275696156,1,['Failure'],['Failure']
Availability,@bcarrez there is an error with centos. Does all boost libraries are installed on it ? ; https://ci.inria.fr/sofa-ci/job/centos_clang-3.4_options/1807/console. Thanks for helping :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/513#issuecomment-346374716:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/513#issuecomment-346374716,1,['error'],['error']
Availability,"@damienmarchal , discussions during the SOFA-dev meeting lead to a question over the developed design and your opinion is needed. . The problem was that some scenes tests where crashing at exit. This is due to the SofaPython3 cache (`s_objectcache` there https://github.com/sofa-framework/SofaPython3/blob/1b5d271aa21df06c4c5ab75599e364adb0c1e9be/Plugin/src/SofaPython3/DataHelper.cpp#L252C1-L252C73) . The problem was that this is a static object containing python objects and is thus cleaned at the very end of the program exit, after the python interpreter, which is not authorized. . To fix it, following [pybind11 suggestions](https://pybind11.readthedocs.io/en/stable/advanced/misc.html) I've added a member to the module Sofa.Core that insured that the cleanup is called while the interpreter is still alive (see the PR https://github.com/sofa-framework/SofaPython3/pull/425). But is was not enough because the interpreter is not cleaned correctly either : the static method ""Release"" of SofaPython3, in charge of cleaning up python and deleting the interpreter was never called when launching scene in runSofa. . This lead to the need of cleaning up *explicitly* the plugin before exiting the main function. This design was not liked by every dev, some wanting a Raii-like cleanup, in the destructor of some member, which is in my mind not possible because the interpreter instance is static in the SofaPython3 plugin and thus we have no guaranty that it would not be deleted before any other static member.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216:809,alive,alive,809,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216,1,['alive'],['alive']
Availability,"@damienmarchal ; This is yet another instance of the ""most vexing parse"", which I assume most c++ programmers are familiar with (c++ really is a terrible language). However, clang issues a warning and I suspect gcc does too, so this is not really an issue to me. An elegant fix is to turn this warning into an error :-) . I understand the problem can go unnoticed since the value is never used elsewhere and won't get to trigger a type error down the road, so removing the default value for the constructor argument seems like a reasonable (and portable) fix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/414#issuecomment-330953138:310,error,error,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/414#issuecomment-330953138,3,"['down', 'error']","['down', 'error']"
Availability,"@damienmarchal @tgaugry @jnbrunet, what do you think of @sescaida 's comment?. I agree that it makes it a bit tricky to look into the inner mechanisms of the creation of datafields from the createObject method.; I tried to make it as clear / explicit / fail-safe as possible though: ; - datafields passed through the createObject() function MUST be inputs fields referenced in the `args` dictionnary present in the Python class and there is a nice warning showing up when you try to pass an argument that doesn't exist in the args `dictionary` to createObject; - The user needs to explicitely use the decorator function in the SofaPython module on the parse() method, so he kinda has to know what the decorator does; - The syntax is as close as possible to the syntaxt of normal sofa::core::DataEngines created in python:; ```node.createObject('TransformEngine', input_position='@component.data', translation='0 0 0')```; would translate into; ```node.createObject('PythonScriptDataEngine', input_position='@component.data', translation='0 0 0', filename=__file__, classname='PyTransformEngine')```. I personnally believe it's a must-have feature, because, let's say you have a python scene in which you have to create 5 times the same PSDE component, a custom TransformEngine for instance:; - Without this PR, you would have to create 5 separated classes, with the exact same implementation, just a different value in the addNewInput() in parse(). This is very redundant. ; - Passing the inputs values through createObject allows you to create a component only once, and use it as many times as you want in your scene afterwards.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-414973420:253,fail-safe,fail-safe,253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-414973420,2,"['fail-safe', 'redundant']","['fail-safe', 'redundant']"
Availability,"@damienmarchal Could you take a look at the 8 failing scene tests?; All of them are ""required data"" errors.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/825#issuecomment-439840761:100,error,errors,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/825#issuecomment-439840761,1,['error'],['errors']
Availability,@damienmarchal Did you notice the unit test failures? It's about PSL.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357206293:44,failure,failures,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357206293,1,['failure'],['failures']
Availability,@damienmarchal FYI there are compilation errors and merge conflicts,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2943#issuecomment-1128654596:41,error,errors,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2943#issuecomment-1128654596,1,['error'],['errors']
Availability,"@damienmarchal I added a `UnableToOpenFile()` function and modified ""MeshTrian.cpp"" accordingly, for now. Could you check if I am in right direction? If I am, I would follow up with changes in other loader and components. **Caution**: I couldn't test if it actually works! Because, a function `findfile(filename)` exists to check if file exists. So, to make `fopen()` purposely fail, even after supplying correct filename, I tried changing permissions with `chmod uga-r MeshTrian.cpp`, but it didn't report any error even with sofa's official master version. I tried couple other ways to purposely fail `fopen()` but they didn't work. Anyway, since the code looked fine, and to receive feedback, I will make a PR shortly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/197#issuecomment-381862958:511,error,error,511,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/197#issuecomment-381862958,1,['error'],['error']
Availability,"@damienmarchal I just pulled these changes, and I have issues to compile.; I still found `sofa::core::ExecParams::defaultInstance()` instead of `sofa::core::execparams::defaultInstance()`. After changing them, I still have compilation errors:. [error.txt](https://github.com/sofa-framework/sofa/files/6140943/error.txt). EDIT: I reset the SofaPython3 folder and the compilation worked",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1794#issuecomment-799341844:235,error,errors,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794#issuecomment-799341844,3,['error'],"['error', 'errors']"
Availability,@damienmarchal I was looking for errors with this scene : . > ./runSofa -g batch -s dag -n 100 /home/douaille/SOFA/fixTestScene/applications/plugins/Flexible/examples/demos/steak.scn. The segfault comes from : https://github.com/sofa-framework/sofa/commit/e65ef095fd96b69b3c9036b2e839f9429b4b022b#diff-179a1b721f69963e4d1fd5ee846ffe22R57. What does this line ? I tried remove it but exception_mode is used everywhere in Cimg.h and for its next call it crash.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356037560:33,error,errors,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356037560,1,['error'],['errors']
Availability,@damienmarchal The failure is related to @epernod work on topologies. Not related to this PR :wink:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/901#issuecomment-458874329:19,failure,failure,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/901#issuecomment-458874329,1,['failure'],['failure']
Availability,@damienmarchal tests are fixed (modifying a map while iterating it is always bad...) ; a failure on gcc5.4 but it seems to be the hiccup failing test.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301#issuecomment-311932799:89,failure,failure,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301#issuecomment-311932799,1,['failure'],['failure']
Availability,@damienmarchal thanks for sharing!; Are your API changes available somewhere in the sofa repository?; I really don't know much about python (almost never used it outside of Sofa...) so I'm a bit puzzled with the syntax here: `m.position[OnDiagonal] = 1.0` / `m.position.apply(function)`; But I sure love the idea of returning an actual Sofa.Data pointer instead of a copied list!; This was all done using python's C-api or did you sneak in some cython? =),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/767#issuecomment-419006953:57,avail,available,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/767#issuecomment-419006953,1,['avail'],['available']
Availability,"@damienmarchal, I am talking about these xml files:; ```; [ RUN ] BilateralInteractionConstraint_test/1.attributesTests; bash: line 1: 2202 Segmentation fault build/bin/SofaConstraint_test --gtest_output=xml:build/tests/SofaConstraint_test/report.xml 2>&1; ```. (copied from https://ci.inria.fr/sofa-ci/job/centos_clang-3.4_options/262/console). But I think @guparan is working on the subject.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/191#issuecomment-283708840:153,fault,fault,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/191#issuecomment-283708840,1,['fault'],['fault']
Availability,@epernod @damienmarchal I have the following error in several scenes of SoftRobots:. ```; [ERROR] [UniformMass(mass)] TopologyData: indices already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; ```. I think it is due to the fact that a Node is initialized twice. What is your recommendation?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589541850:45,error,error,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589541850,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"@epernod yes, these functions are the one used to queue in the object's message log all the msg_info/warnig/error/deprecation. ; basically this means that when an object receive a new message increment the component_state counter so we can detect ""something happened"". . On day we may wonder if, for msg_error() the component_state shouldn't be flipped to ""Invalid"", but for the moment the state counter is just ""incremented"" but not changed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2397#issuecomment-943187451:108,error,error,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2397#issuecomment-943187451,1,['error'],['error']
Availability,"@francoisfaure It is true that having dense matrix blocks is a must-have for some applications, but I wonder about the API: . - for efficiency reasons, we need the DOF types to be available if we want to implement this proposal; - it is quite difficult to recover actual DOF types *from outside* the mapping/forcefield, except when working with a component at the same graph level as the mapping/forcefield, so it seems restrictive to expect the caller to know the DOF types (or is it not?). Which leaves us with the following: back-inserting typed triplets into a container with `template`/overloaded insertion methods, one for each data chunk type. This way the mapping/forcefield DOF types are not part of the API (only the container type is), yet the mapping/forcefield calls the appropriate container method knowing its own DOF types. Of course, the overloaded insertion method must not be `virtual`, which would defeat the whole point. The container must know how to push typed chunks into its internal state (easy), but also how to use/recover it (harder since it needs to remember the types, e.g. for sorting typed triplets later on). This is not unfeasible, but it is not straightforward either. It also adds some complexity/overhead compared to scalar-only back-insertion. Is this worth it? . In order to remember ""typed contexts"" easily, we can draw inspiration from c++14's `std::variant`, where a small integer stores a type index from a variadic argument list, and this index is used for jumping in a static dispatch table. (I can expand on that if needed)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292881871:180,avail,available,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292881871,3,"['avail', 'recover']","['available', 'recover']"
Availability,"@fredroy I prefer not adding another implicit complex mechanism for templates. If there are two templates, the user must set 2 templates. If the user set only one, there is an error message containing the list of all available templates. It should give a hint about the fact that there are two templates to provide.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286655914:176,error,error,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286655914,2,"['avail', 'error']","['available', 'error']"
Availability,"@fredroy Yeah! The scene no longer crashes! But I have the following errors:. ```; [ERROR] [GLSLShader] ERROR: Compilation of Fragment shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.frag; [ERROR] [GLSLShader] 0(8) : warning C7555: 'varying' is deprecated, use 'in/out' instead; 0(16) : error C7616: global variable gl_Color is removed after version 140; 0(35) : warning C7533: global variable gl_FragColor is deprecated after version 120. [ERROR] [GLSLShader] ERROR: Compilation of Vertex shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.vert; [ERROR] [GLSLShader] 0(20) : error C7616: global variable gl_ModelViewProjectionMatrix is removed after version 140; 0(23) : error C7616: global variable gl_ClipVertex is removed after version 140; 0(23) : error C7616: global variable gl_ModelViewMatrix is removed after version 140; 0(23) : error C7616: global variable gl_Vertex is removed after version 140. [ERROR] [GLSLShader] ERROR: Compilation of Geometry shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra_triangles.geo; [ERROR] [GLSLShader] 0(45) : warning C7533: global variable gl_FrontColor is deprecated after version 120; 0(46) : error C7616: global variable gl_ClipVertex is removed after version 140. [ERROR] [GLSLShader] SHADER compilation failed.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; [ERROR] [Node()] Object 'OglFloat4Attribute1' already has a node (/OglFloat4Attribute1). Please remove it from this node before adding it to a new one.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] TopologyData: value already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181:69,error,errors,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181,14,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,@fredroy interesting. I did search for this class in the SOFA repo and found nothing. I counted on the CI to warn if it was in an external plugin. But the ultimate check from senior SOFA developers was more reliable 😉,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4985#issuecomment-2348170266:207,reliab,reliable,207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4985#issuecomment-2348170266,1,['reliab'],['reliable']
Availability,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:120,down,download,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833,4,['down'],['download']
Availability,@fredroy you have an error on Windows,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1134852518:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1134852518,1,['error'],['error']
Availability,@fredroy you have test failures,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1226819678:23,failure,failures,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1226819678,1,['failure'],['failures']
Availability,"@fredroy you labelled this PR as to backport.; However, it leads to compilation error due to another PR which is only in master and not v23.06 :; ```; BarycentricMapper.inl:33:19: error: 'sofa::component::mapping::linear::_barycentricmapper_::BarycentricMapper<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >::MatrixType' {aka 'class sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3, 3, double> >'} has no member named 'wblock'; did you mean 'wbloc'?; ```. I will have to remove the commit from v23.06",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597260095:80,error,error,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597260095,2,['error'],['error']
Availability,"@ggrosshenny ; Thank you for you PR. Being able to save timing in JSON is a very nice idea and as more and more sofa component are using JSON so it make sense to have that. . Now, some feedback about the implementation:; - There is a lot of new functions but there is not test for any of them. . - The way you handle errors in the binding code is now deprecated as it was not following the python standard. The proper way is that failure in binding code must return NULL (and not Py_RETURN_NONE). You can add an execption and a custom message with PyErr_SetString(...) but you don't need to do that when the failure is because of PyArg_ParseTuple...as it set the message itself so that it is standardized. . So, it should be like that: ; ```cpp; if(!PyArg_ParseTuple(args, ""sO"", &id, &tempNode)); return NULL;; ```; Instead of:; ```cpp; if(!PyArg_ParseTuple(args, ""sO"", &id, &tempNode)); {; PyErr_BadArgument();; Py_RETURN_NONE;; }; ```. - You are commenting the python binding code using doxygen, thank you very much for that ! As these are python functions it would be great if you could also provide python docstrings (as this is the python standard of documenting code). You are using the SP_MODULE_METHOD macro which have and empty docstring by default... sofa is missing a macro one to specify the docstring (it exists for SP_CLASS_METHOD_DOC). So to document you functions you first need to add a new macro close to SP_MODULE_METHOD with:; ```cpp; #define SP_MODULE_METHOD_DOC(MODULENAME,M, D) {#M, MODULENAME##_##M, METH_VARARGS, D},; ```; Then you can document the python code in a way similar to when using ""SP_CLASS_METHOD_DOC"". . - the externals libraries should be in the repository extlibs/* so sofa/helper/json.hpp should be moved there. - I have no opinion whether the JSON output should be activated only when the json.hpp is found or if we should systematically ship this lib with sofa. @hugtalbot probably have better opinion on these aspects as this have connection with the Licens",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-322555885:317,error,errors,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-322555885,3,"['error', 'failure']","['errors', 'failure']"
Availability,@guparan & @fredroy ; I think I fixed the test failure problem on centos & ubuntu by removing the ; add_target_library( gtest ) in Sofa_test.; Don't ask me why it remove the failure at release I don't know ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-343492858:47,failure,failure,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-343492858,2,['failure'],['failure']
Availability,@guparan +for the typo and for the careful reading. Thanks.; With the new condition the macro is now equivalent to something like EXPECT_ATLEAST_TWO_FAILURES ? But as you can see in the dashboard this is not what the tests are expecting as there is now one new test failure reported in the dashboard.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370721309:266,failure,failure,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370721309,1,['failure'],['failure']
Availability,"@guparan @epernod , I just tested the compilation again (without my patch) and I realized that SOFACUDA_DOUBLE has nothing to do with this issue, I was wrong about that. On my setup, the compilation does not works regardless of the SOFACUDA_DOUBLE option. I'm a bit surprized it works on your side. Here are information on my setup:; OS => Fedora 29; NVCC version => V10.1.105; CMake variable SOFACUDA_ARCH=sm_60; CMake variable CUDA_VERSION=10.1. And here are the output errors from ninja:. ```; [1/96] Building NVCC (Device) object applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o; FAILED: applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o ; cd /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda && /usr/bin/cmake -E make_directory /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/. && /usr/bin/cmake -D verbose:BOOL=OFF -D build_configuration:STRING=Release -D generated_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:472,error,errors,472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,1,['error'],['errors']
Availability,@guparan Here it is the failure on windows are removed. ; Do we go fast path ? [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369864264:24,failure,failure,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369864264,1,['failure'],['failure']
Availability,"@guparan you're right! We didn't see the problem because we ran the tests on the Release build and not on the Debug build. A segmentation fault occurs with the Debug build, dues to an assertion. @tgaugry currently investigates on the issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501707903:138,fault,fault,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501707903,1,['fault'],['fault']
Availability,@guparan:; `/media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-975/ubuntu_gcc-5.4_options_release/src/applications/plugins/image/extlibs/DiffusionSolver/DiffusionSolver.h:4:33: fatal error: CImgPlugin/SOFACImg.h: Aucun fichier ou dossier de ce type; compilation terminated.`. Looks like it's used also that way in the SOFA codebase. How should I proceed? should I put back the include of `CImgPlugin/../` and remove the include of `CImgPlugin` + cleanup the codebase of all direct inclusions? Or do the opposite..?; Or should I just revert my previous commit?...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/975#issuecomment-484386105:187,error,error,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/975#issuecomment-484386105,1,['error'],['error']
Availability,"@hugtalbot , I added a test with an error message;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1551107805:36,error,error,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1551107805,1,['error'],['error']
Availability,"@hugtalbot ; My guess is the following:; When loading the SofaCUDA plugin, the module check if it can detect a cuda device. If there is no such a device, it now triggers an error, whereas it was just a print before. In other words, the behavior does not change (loading of the plugin), but the log message is now counted as an error. ; I think it is a good thing. It helps to identify the scenes that cannot be executed on the CI. For the case of the failing scene. I'll just remove the `<RequiredPlugin name=""SofaCUDA""/>` which is even not required.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903663503:173,error,error,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903663503,2,['error'],['error']
Availability,"@hugtalbot CI is not happy with this one... ; ``` ; applications/plugins/CGALPlugin/CylinderMesh.inl:503:6: error: ; ‘void cgal::CylinderMesh<DataTypes>::draw() ; [with DataTypes = sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>]’ ; marked ‘override’, but does not override; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1210#issuecomment-549388407:108,error,error,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1210#issuecomment-549388407,1,['error'],['error']
Availability,@hugtalbot Could you explain why this PR triggers errors when the mass does define any parameter?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042006856:50,error,errors,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042006856,1,['error'],['errors']
Availability,@hugtalbot `UnilateralInteractionConstraint` inherits from `PairStateAccessor` which checks at init that it has valid links to mechanical objects. So an error should normally trigger...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1573276801:153,error,error,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1573276801,1,['error'],['error']
Availability,@hugtalbot not sure to understand where the errors are coming from..,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1336469455:44,error,errors,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3526#issuecomment-1336469455,1,['error'],['errors']
Availability,"@hugtalbot the error was ` no template named 'Vector' in namespace 'Eigen'; const Eigen::Vector<Real, 3>& eigenvalues = eigensolver.eigenvalues();`. I no longer use the type `Vector`. Therefore, I expect the error message (if any) to be different. Is it the same?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4724#issuecomment-2107541462:15,error,error,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4724#issuecomment-2107541462,2,['error'],['error']
Availability,"@jnbrunet, @fredroy I updated the PR, . can you give me feedback on the implementation of error/warning promotion (in config.in.h)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1639#issuecomment-737198485:90,error,error,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1639#issuecomment-737198485,1,['error'],['error']
Availability,@matthieu-nesme ; Any idea why there is segmentation fault in ubuntu (which is not in the sofa/master) ; https://www.sofa-framework.org/dash/?branch=pr/sofapython_tp_as_mapping,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/165#issuecomment-278901704:53,fault,fault,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/165#issuecomment-278901704,1,['fault'],['fault']
Availability,@matthieu-nesme ; I'm glad you are going to a per-scene approach which is really so much better than the per-script one. ; I actually commited similar code few hours ago in my initial PR :) . The auto-install of the component is more a matter of taste on which is not a big deal to me. . To be more robust I suggest you to enforce that the autoreload component ; to be added at the scene root (easier to see if it is there) and to check that only a single component can be added per scene. . EDIT: and +1 for not hooking the import anymore.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286445017:299,robust,robust,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286445017,1,['robust'],['robust']
Availability,@matthieu-nesme ; If have the check in getUnsignedNumber for two reason:; - the '-' sign can be in the string passed to the getUnsignedNumber function so I have to check it. ; Eg of string that cause that to happen -5-5 or 5--5 ; - I don't make the assumption that this function will only be called from read...I suppose I will need it in ; a lot of other different context so I prefer to have the function robust. . Now from a performance point of view it is better to check the single char '-' at the beginning of the string than parsing the whole number to detect is was not good.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302727731:407,robust,robust,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302727731,1,['robust'],['robust']
Availability,"@matthieu-nesme are there examples of links to nodes ? I was going to put it in `Base`, but I thought maybe keeping errors for `Node` might be desirable.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307777933:116,error,errors,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307777933,1,['error'],['errors']
Availability,"@matthieu-nesme, @EulalieCoevoet . I'm trying to fix the test failure in FixConstraint_test when compiled in debug. The failure is related to SparseLDLSolver that do things like that: ; ```cpp; METIS_NodeND(&n, &xadj[0],&adj[0], NULL, NULL, perm,invperm);; ``` ; Compiling the test in debug activates the vector bound checking which rise the error message as [0] on an empty vector does not make sense. This error message makes the test fails. . Compiling the test in release mode de-activates the vector bound checking so the test is not failling anymore. But adj.size() is still zero and adj[0] is still used. According to the standard this is undefined behavior so we need to fix that. . I made a fix in which I set a minimal size of one to the faulty vectors.... but I'm not sure that having an empty adj vector is not an indication of a deeper problem (or the manifestation of a specific case) and that the right fix should to properly handle this case instead of playing with memory array to ""hide"" it. . As you have experience with solvers any feedback would be appreciated.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305611180:62,failure,failure,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305611180,5,"['error', 'failure', 'fault']","['error', 'failure', 'faulty']"
Availability,"@maxime-tournier : indeed that makes a lot more sense to do as you suggested. I just wrote down something to emphasize on what you mentioned above, which is that the concrete chunk type that will be used in the end could not be inferred beforehand at the level of the API, since it is something that depends on the template type.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292928137:91,down,down,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292928137,1,['down'],['down']
Availability,"@maxime-tournier I think that @fjourdes raised the question about the projective constraints and the solvers (that construct the global matrix) because of a problem of API. ; In ProjectiveConstraintSet there is two available functions:. virtual void applyConstraint(const MechanicalParams* /*mparams*/, const sofa::core::behavior::MultiMatrixAccessor* /*matrix*/). virtual void applyConstraint(const MechanicalParams* /*mparams*/, defaulttype::BaseVector* /*vector*/, const sofa::core::behavior::MultiMatrixAccessor* /*matrix*/). He was pointing out that these functions are not always implemented in the components.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/440#issuecomment-334122081:215,avail,available,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/440#issuecomment-334122081,1,['avail'],['available']
Availability,"@maxime-tournier just to make things clear for me. ; You use an intermediate data structure to store the matrix values ( wherever they are coming from, mapping forcefield... ) and the mask data structure store the sparsity pattern. Since Flexible and Compliant rely extensively on the `Mapping` API, (conceptually everything can be broken down in a combination of application + linearisation around a given configuration) the only requirement in that case is to be able to express the sparsity pattern of each mapping, am I correct ? . That being said I agree that it would be ideal to have an intermediate data structure to supersede the `BaseMatrix` API, to fetch the matrix data ~~( and maybe the sparsity pattern at the same time ? )~~ that could fit with any linear algebra library with minimal overhead.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292484429:184,mask,mask,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292484429,2,"['down', 'mask']","['down', 'mask']"
Availability,@nim65s The command `nix build` gives me this error: `error: experimental Nix feature 'nix-command' is disabled; add '--extra-experimental-features nix-command' to enable it`. I am not familiar enough with nix to understand what Google explains to me. What is going on? Thanks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417235624:46,error,error,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417235624,2,['error'],['error']
Availability,@raffaellatrivisonne could you fix the build failure please?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-331917500:45,failure,failure,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-331917500,1,['failure'],['failure']
Availability,"@rgao15 Thanks a lot for the feedback!. I tried to reproduce your issue. On my end, I do have an error message:; ```; [ERROR] [MouseOperation] ConstraintAttachBody performer cannot be created with the picked model.; ```; Let us know if you have the same error message. I am also on Windows. Anyway, I tried to understand what's happening. Why ConstraintAttachBody cannot be created?; It is supposed to be added in a factory here : https://github.com/sofa-framework/sofa/blob/323e20e4168e1ab5b67352f4621d4f1b3fa39be9/modules/SofaConstraint/src/SofaConstraint/ConstraintAttachBodyPerformer.cpp#L38; Registration in the factory works BUT not in the right factory.; The factory in `modules/SofaGuiCommon/src/sofa/gui/MouseOperations.cpp` and in `modules/SofaConstraint/src/SofaConstraint/ConstraintAttachBodyPerformer.cpp` are different. The factory is a singleton but there are 2 different instances. I confirmed it by printing the factory address. I suspect it's because they are used in different libraries. The question is: how to solve it? And is it the same story for other factories? @fredroy @damienmarchal I would need your help",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-973088531:97,error,error,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-973088531,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"@sescaida I just took a look at the code of the ScriptDataEngine class.; You are partially right, the current implementation is the following:. `// Ok, so in the end we're stuck with using the AnimationBeginEvent? (20.02.2018, sescaida); void PythonScriptDataEngine::handleEvent(Event *event); {; if (AnimateBeginEvent::checkEventType(event)); {; setDirtyValue();; update();; }; }`; Here clearly, update is called everytime a AnimateBegin event is sent to the component. If it were a ""normal component"" (i.e. if it were a BaseObject-based component) that would be the only moment that update() method would be called. But the ScriptDataEngine also inherits core::DataEngine.; This is what I talked about during my presentation at the STC#5:; DataEngine both inherits from DDGNode & BaseObject. The update function is ""manually called"" from handleEvent, but it actually shouldn't be, because this is redundant to how DataEngine works, which is having its update() method called **when and only when** a component, taking as an input the output data of that engine, calls getValue() on that data, WHILE any of the engine's INPUTS are flagged dirty. . So basically, while some people call update() in their handleEvent method, this should never be done, except in some (quite) twisted cases.; Btw, it took me quite some time to understand that.. few months ago, all my engines were calling update() in handleEvent, and I had a lot of problems because of that.. ^^. Technically, in the case of the scriptDataEngine, if you remove entirely the call to the update function in handleEvent, and if your dependency graph is well built, you should get the behavior you want",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407008370:899,redundant,redundant,899,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407008370,1,['redundant'],['redundant']
Availability,"@sescaida Thanks for the review; The reason why I didn't add examples for this PR is because the current examples themselves, without any modification, demonstrate that it works as-is, thus showing that the call to update() in the handleEvent method was redundant with the default DDGNode's update mechanism. Basically, if your scene is well created (links are properly made between datafields & data are correctly accessed by components lower in the scene graph), everything should work just as well as before. The only difference I would say, is that the user has the hand over the cleanDirty() method, which allows him to fix use cases where a read acces is performed on an input, after setting an output's value has been set, in update(). as for whether it is a good idea to keep that system, I must say, that I agree with you, as we discussed before: Bringing the complexity of the DDGNode's mechanism in Python might be something we want to avoid.; Although, I think that the good approach to fight this issue would rather be to solve the problem on the C++ side (simplifying the Data-Update mechanism) than to diverge from it by simplifying the Python process.; I think @damienmarchal woul be the best placed to give us a feedback on this question, maybe? (When he'll be back from his holidays of course!)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413560022:254,redundant,redundant,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413560022,1,['redundant'],['redundant']
Availability,"@sescaida as a reply to you previous comment:. - I think we should indeed remove the call to update from handleEvent, in the dataEngine. Although there are some twisted cases where it is necessary, it is not how it was designed initially I believe. I'd like @damienmarchal 's input on that, though.; Concerning the default value in addNewOutput, I totally agree with you. The only reason I kept it is because it would have even more impact on the error handling codebase in Sofa, which currently forces the existence of a ""value"" field to guarantee that the datatype can be deduced (which we are bypassing for outputs..); Overall, I think there's a decent amount of cleaning to do in this PR before it can be merged, including removing all the warnings that appear because we're working our way around the ""standard"" way to build datafields.; - I also agree with you that we need some reviews on this PR, and maybe also split it in multiple PRs for simpler reviewing. Things are getting mixed up now, between; - Populating the PSDE factory; - Deriving inputs / outputs; - passing datafields through createObject; - ...; I'll pass the PR to to_review and we can take a look at it on monday ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407791294:447,error,error,447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407791294,1,['error'],['error']
Availability,"@sescaida, you can find [here](https://github.com/marques-bruno/snippets/blob/master/testDataEngine.cpp) a test code for Sofa showing what happens when cleanDirty is called at the wrong moment. After testing a little bit the engines, I noticed that the only case where it wouldn't work (to have all the data updates & cleanDirty() before calling the update() method would be in the very unlikely case where the update() method would fetch an earlier engine in the dependency graph through getContext, and set its output value. this is very unlikely, which means that, apart for some performance reasons, I don't see why it would be important to bind the cleanDirty() method in python. Since python is much slower anyway, I think this PR does not make much sense anymore. although, I still insist on removing the call to update() from handleEvent, since it is redundant with its normal on-demand calling mechanism. :) I'll update the PR soon!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372:859,redundant,redundant,859,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372,1,['redundant'],['redundant']
Availability,"@thomas-lemaire You are right, the dashboard and the CI were malfunctionning together resulting in bad reports. But @guparan and @bcarrez spend time to fix it and it should work better now. . I restart your build to refresh the status...; [ci-build]. EDIT3: now the PR build summary is ok. Correctly indicating that the vs2013 failed. In general a failure is not caused by the PR but more often by a bug in the build system...so there is still a need to investgate that. I'm really sorry thomas for the bothering.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/122#issuecomment-274232881:348,failure,failure,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/122#issuecomment-274232881,1,['failure'],['failure']
Availability,@thomas-lemaire currently I see that some components are doing; ```cpp; if(printLog) sout << ; ```; While the 'sout' is already checking the printLog which is redundant. This is what I'm refering as mis-usagse. To me the cleaning consist in defining what is the right pattern to employ and this may (or not) result in removing the if(printLog) from the component and replace them with the use of 'sout'. . About the link with PR106. With the PR a dedicated message handler has to be installed in the application or the scene to activate loggin into component... this is done with the following code ; ```cpp; MessageDispatcher::addHandler(&MainPerComponentLoggingMessageHandler::getInstance()) ;; ```; But currently this is not done in runSofa or any other app and the messages are not added to the log. This is why I'm saying the PR is independent and is without side effect. . When the printLog expected behavior is clear the current log 'to the big string' should be removed and replaced by installing the logging proposed in PR106.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276932662:159,redundant,redundant,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276932662,1,['redundant'],['redundant']
Availability,"@thomas-lemaire please be tatillon because it is a good question :) . Initially it was not part of the PR (have a look at the first commit to see what was my initial code) but on windows the static_asserts were causing compilation failure on V2015 and VS2013 builds. After some digging and request for discussions (in issue: https://github.com/sofa-framework/sofa/issues/130)) my conclusion was that the failure was not because of my code but because that somehow there was implicit instanciation of the function like Vec<4,float>::set(...,...,N...) with N!=4. And as they were instanciated this was causing the static_assert to reject the code when N==4. . I have the feeling that the static_assert in Vec was only working because of side effects on way compiler interleave optimization and instantiation of templates (but I may be totally wrong). Basically all the set(...,) function are present but they were removed because they were not used before the check by static_assert. . So I try to implement a corrected version of the expected behavior by using the enable_if feature of std::x11 which is generating the right function but not the others.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/119#issuecomment-279437317:231,failure,failure,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/119#issuecomment-279437317,2,['failure'],['failure']
Availability,"A bit of explanation about this PR:; When a attribute is passed to createObject, it is added to the BaseObjectDescription of the component. This means that, in cpp, the parse() method, that takes a BaseObjectDescription in parameter, has this information. The problem is, that in the PythonScriptDataEngine, the parse method calls the python version of the parse() method, which doesn't take this BaseObjectDescription in parameter (maybe that should change btw, since its mainly a simple key/value dictionnary after all...); The datafields could be added directly from the C++, but since most of the error handling in the creation of derived I/Os in #742 is performed in the bindings, it would mean recoding a lot of redundant code.; Since I didn't want to touch the parse() method, I created an additional method, that can (or not) be used in PSDEs, named ""datalinks"". This method is called right after the parse() binding, and takes a filtered version of the BaseObjectDescription as an argument (all datafields already created in the parse() method are removed from the dictionnary). The function then calls addNewInput() on each of the leftover fields. I'm certain there is a cleaner way of doing that.; - I was thinking maybe calling directly the python addNewInput() method from the cpp parse() method, to avoid the creation of this extra module function, but I am not sure I know how to do that. ; - Another idea would be to pass the BaseObjectDescription in the parse() method of the PSDE (as it should be done IMHO), and let the user decide whether or not he wants to loop over those fields to create inputs.. more error prone in my opinion. But you guys have good input on that ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-409859524:601,error,error,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-409859524,3,"['error', 'redundant']","['error', 'redundant']"
Availability,A linking error appeared @alxbilger ; The CMakeLists from SofaConstraint should explicit its dependency to SofaSimulationCore (where the visitor is located),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2640#issuecomment-1030087337:10,error,error,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2640#issuecomment-1030087337,1,['error'],['error']
Availability,"A little update:; - added `wrap/unwrap` mechanism: there are wrapping traits in `PythonToSofa.inl` specifying wrapped type (`PySPtr` or `PyPtr`) for a given type (defaults to `PyPtr`); - wrapping traits specializations for `Base`, `BaseData` and `BaseLink`-derived classes. `Base`-derived classes are wrapped as `PySPtr<Base>`, `BaseData`-derived as `PyPtr<BaseData>`, etc. this should cover most cases.; - `unwrap<T>(py_obj)` first recovers the wrapped type and the object pointer, then `dynamic_casts<T*>` ; - `unwrap_self<T>(py_obj)` does the same but with `static_cast` (this is for `self` arguments, python enforces that `self` is an instance of this type). Extension code should look like this now:. ```c++; Node* node = sofa::py::unwrap_self<Node>(self);; BaseObject* obj = sofa::py::unwrap<BaseObject>(py_obj); if(!obj) { ... }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304#issuecomment-310324600:433,recover,recovers,433,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304#issuecomment-310324600,1,['recover'],['recovers']
Availability,"A more detail approach of the kind of pattern I'm using in the init/reinit function (actually any change to the data from the UIs should also be checked); ```cpp; void MyComponent::init(){; m_componentState = ComponentState::Valid; // By default the ComponentState is to Undefined. ; if( d_stiffness.getValue() < 0.0 ){; msg_warning(this) << ""The 'stiffness=""<< d_stiffness.getValueString() << ""' parameters is outside the validity range of [0, +INF[. Continuing with the default value=500.0 . ""; ""To remove this warning message you need to set the 'stiffness' attribute between [0, +INF[."" ; d_stiffness.setValue(500) ;; }. if( this->m_state nullptr ){; msg_error(this) << ""No mechanical state, the component is thus de-activated.""; ""To remove this error message you need to add a MechanicalObject.""; m_componentState = ComponentState::Invalid;; }; }; ```; Then for each function crashing sofa when the object is not properly initialized... ; ```cpp; void MyComponent::draw(); {; if(m_componentState == ComponentState::Deactivated); return ; ; ; if(m_componentState == ComponentState::Invalid){ ; msg_info_when(this, m_verbosityLevel == HIGH ) << ""You are calling a function on an invalid component. "" ;; return ; ; }; ....; }; ```. I agree this is a lot of code to add but I haven't yet a better solution. Now...if you implement this kind of pattern you can then do the following from the outside (eg: in the _test):; ```cpp; void myComponentInvalid_test(); {; ... make a scene with a MyComponent with an invalid '-1' param.... ; {; ExpectMessage error(Message::Error); // test failure if the component does not send an error message; ; MessageAsTestFailure warning(Message::Warning); // test failure if the component do not send a messae while it shouldn't ; ; MyComponent::init() ; } ; EXPECT_EQ( MyComponent::getComponentState(), ComponentState::Invalid ); ; }; ```. N.B: When I look carefully the ExpectMessage & MessageAsTestFailure... I have the feeling this is a kind of an asynchronous excep",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278900494:750,error,error,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278900494,1,['error'],['error']
Availability,"A naming convention should be found on such components to distinguish:; - projective constraints (physicless, forceless); - weak force constraints (physicless with forces); - Lagrange-based constraints (taking into account the physics and applying forces). @bakpaul @alxbilger @damienmarchal . Some proposals can be done down here :point_down:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3903#issuecomment-1569685468:321,down,down,321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3903#issuecomment-1569685468,1,['down'],['down']
Availability,Aaaaaaaand we forgot to handle the scenes using deprecated components. Let's fix those 27-30 new scene test errors now :laughing:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/905#issuecomment-461045318:108,error,errors,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/905#issuecomment-461045318,1,['error'],['errors']
Availability,About failure by default on warning & deprecated...this is a choice. . The positive thing about this 'bold' behavior is that it force tests maker to care about warning and deprecated messages otherwise they tend to ignore them. As I prefer to specify explicitely in every test case the expected behavior I dont' feel very concerned about that 'default mode'. ; But I think this 'bold' behavior sound nice to me and from the new failure we can see in the test reports this mode is rising interesting issue that requires investigations. About the disable color while testing. I disable it only for the tests to see if it improve the readability. Now red in the console only means that a test have failed and it not obfuscated with the red from an expected error message. (I 'm not sure I'm clear here). You can change that if you prefer :) . EDIT: I update the text to be more clear :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291933636:6,failure,failure,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291933636,3,"['error', 'failure']","['error', 'failure']"
Availability,"About the failing tests I had to fix and serialization changes...; *I wanted to reply in the specific comment but could not (github magic effect ??)*. ## Failing tests; The failing tests were using the *serialization* to check the result, I mean the tests are doing comparison of **string** instead of the **actual** values, but these tests are not testing the serialization (in which case it would have been correct). These tests should be changed to compare the expected returned values (with a tolerance in the case of floating point), using the Sofa_test.h EXPECT_VEC_DOUBLE_EQ and other similar macros (add some if they are missing). Not to mix every thing it could be addressed in an other PR. ## serialization using ""[,]"" instead of "" ""; As long as the deserialization operator is compatible with the serialization one, I do not see any issue. And no example scene is failing because of that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315013607:497,toler,tolerance,497,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315013607,1,['toler'],['tolerance']
Availability,"According to origin/defrost on the Dashboard, error appeared between 4b1f2897 and a33b4b12.; There are some LightManager changes here, we are close ;); I update my ""summary"" post. EDIT: This range is where the test was created. **This test fails on Windows since its creation.**; Please @damienmarchal give this type of information (if you know it) when you create your issue so that no time is lost searching for error appearance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263275881:46,error,error,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263275881,2,['error'],['error']
Availability,Actually i think 'msgInfoVerbosity' may be a better name because it explain that the control is only on the amount of INFO messages and that it left untouched the warning or error (that are import functional messages and shouldn't probably be removed).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278290041:174,error,error,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278290041,1,['error'],['error']
Availability,"Actually the commit hint is not accurate because we don't have a CI build for each commit.; Sure thing: error appeared between 4bee6c8d and b70b477.; Between this two, there are 35 commits corresponding to `defrost` branch.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263273230:104,error,error,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263273230,1,['error'],['error']
Availability,"Actually the failure are generated by error messages like: ; [ERROR] [BeamFEMForceField(FEM)] Required data ""poissonRatio"" has not been set. (Current value is 0.49). My first comment is that these message are 'wrong' because they are ""errors"" while there is a default value provided to the field. So because of these default value the fields shouldn't be taggued as ""required"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/825#issuecomment-439893829:13,failure,failure,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/825#issuecomment-439893829,4,"['ERROR', 'error', 'failure']","['ERROR', 'error', 'errors', 'failure']"
Availability,"Actually this feature is already available for PointModel and LineModel. That's why I just added it in the same way for SphereModel.; But you're right, we can try to add it at the top of collision model hierarchy.; One thing is that sometimes when a controller is heritating from this ""PrimitiveActiver"" we want to implement different behaviours for several type of primitive; I guess that with the generalization approach we would have to implement a controller for each behaviour (not that bad), or you can help me understand how we could avoid doing so ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1259#issuecomment-590768065:33,avail,available,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1259#issuecomment-590768065,1,['avail'],['available']
Availability,"Actually, I got confused, I thought you were using docker to build SOFA, with https://hub.docker.com/r/sofaframework/sofabuilder_ubuntu. Anyway, my advice would be to just download the archive on the website, and directly use the binaries (instead of going through the containerisation of docker) ; in your case for Ubuntu, it would be https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510:172,down,download,172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510,2,['down'],['download']
Availability,"Actually, it is already done here: https://github.com/sofa-framework/sofa/blob/master/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/MatrixLinearSystem%5BBTDMatrix%5D.cpp; What is exactly the error you are trying to fix?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4189#issuecomment-1728957406:219,error,error,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4189#issuecomment-1728957406,1,['error'],['error']
Availability,"After a certain number of iterations (on my computer), an error message appears in the terminal and the simulation becomes unstable (it explodes) and that doesn't append with LU or Cholesky.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1148550547:58,error,error,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1148550547,1,['error'],['error']
Availability,"After a successful build, I have the following trace when running:. ```; [INFO] [runSofa] PluginRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/collections:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib; [INFO] [runSofa] DataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/runSofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/qt; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-so",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:851,ERROR,ERROR,851,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['ERROR'],['ERROR']
Availability,"After looking quickly at Link.h, it seems you'd need to make a .inl for the Link and related trait classes. . Also, at least `SingleLink::get` requires `TraitsDestPtr::get` and `TraitsValueType::get`. `TraitsDest::get` may in turn require `T::SPtr` (so this needs fixing since T needs to be defined), and some `TraitsValueType` instantiations require `TraitsDestPtr::get`. Could you post a link to the compilation error on windows so that I can examine the instantiation sequence?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334394054:414,error,error,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334394054,1,['error'],['error']
Availability,"Ah, yes, then you can do the same as described here https://scheiklp.github.io/sofa_env/setting_up_sofa.html#manually-linking-sofapython3-to-python. In the downloaded zip, the path is the same (plugins/SofaPython3/lib/python3/site-packages)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1750424803:156,down,downloaded,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1750424803,1,['down'],['downloaded']
Availability,"All scene examples in the Communication plugin crash, I guess the plugin is not activating thus generating these errors/crashes right @guparan ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-666219236:113,error,errors,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-666219236,1,['error'],['errors']
Availability,"Alright, it seems the config.h is also needed. This is what I have by simply putting back SofaSimulationCore in SofaFramework. **CMakeLists.txt**; ```; cmake_minimum_required(VERSION 3.1); project(mymy). find_package(SofaFramework); add_executable(${PROJECT_NAME} main.cpp); target_link_libraries(${PROJECT_NAME} SofaSimulationCore); ```. **main.cpp**; ```; #include <sofa/simulation/MechanicalMatrixVisitor.h>; int main () { return 0;} ; ```; **Result**; ```; sofa/build/install/include/SofaFramework/sofa/simulation/simulationcore.h:25:10: fatal error: sofa/simulation/config.h: No such file or directory; 25 | #include <sofa/simulation/config.h>; | ^~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540633645:548,error,error,548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540633645,1,['error'],['error']
Availability,"Also, I'm seeing this pattern over and over again:; ```c++; if (!PyArg_ParseTuple(args, ""s"",&filename)) {; PyErr_BadArgument();; return NULL;; }; ```; Please don't do that since it replaces the slightly helpful error message set by `PyArg_ParseTuple` by a generic one. Simply return `NULL` instead:. ```c++; if (!PyArg_ParseTuple(args, ""s"",&filename)) {; return NULL;; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306426870:211,error,error,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306426870,1,['error'],['error']
Availability,"An open-source version of hyperlastic constitutive law is available (StandardTetrahedralFEMForceField), but the class would need to be reviewed and if accepted, it needs to be renamed : StandardHyperelasticTetrahedralFEMForceField (?)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/231#issuecomment-305190229:58,avail,available,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/231#issuecomment-305190229,1,['avail'],['available']
Availability,"Another thought about this issue:; If penality forces are integrated implicitly (`addKToMatrix` is implemented and matrices are mapped), the structure of the linear system can change between 2 time steps. In that case, the matrix will need a new symbolic factorization each time it changes. This is very costly, and it will slow down the simulation a lot. It is the same problem occurring after a topological change.; Some solutions (such as https://dl.acm.org/doi/abs/10.1145/3478513.3480505) exist, but require a lot of work (and a dedicated solver).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-996545343:329,down,down,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-996545343,1,['down'],['down']
Availability,Any idea why building acd79fe caused more than 20 new unit test failures?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317#issuecomment-315742489:64,failure,failures,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317#issuecomment-315742489,1,['failure'],['failures']
Availability,Apparently the builder on os x links against Qt4. Is this version of Qt mandatory ? The function devicePixelRatio() is only available starting from Qt5.5,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/311#issuecomment-311934013:124,avail,available,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/311#issuecomment-311934013,1,['avail'],['available']
Availability,"Are you sure the ""inVTKFile.close();"" are no longer needed in case of errors?. Adding Thomas to the discussion, I think he is using VTK files.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/72#issuecomment-263810391:70,error,errors,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/72#issuecomment-263810391,1,['error'],['errors']
Availability,As I already mentionned somewhere ( probably in the PR related to multithreading ) in our public branch we have already removed the dependency to boost in the Multithreading plugin. I guess in that respect there are very few commits that need to be backported. ; See : ; https://github.com/InSimo/sofa/commits/issofa_integration_2017/applications/plugins/MultiThreading. However note that we removed from the build of Multithreading all the things related to the components such as `BeamLinearMapping_mt` and so on. Mostly because we did not want to invest any time in adapating components code that we are not sure that it ; - worked at some point in the past ( and by working I mean without any occasional crash related to data races and without any deterministic issue ); - still used by someone somewhere. As a general remark I would downvote the very idea of putting actual implementation of Sofa components in that plugin to keep the dependencies of this plugin to the **bare** minimum. Any library that wants to implement something that rely on the Task mechanism exposed by that plugin should simply do a `find_package(Multithreading)` and react according to the outcome of this method.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316#issuecomment-313039270:838,down,downvote,838,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316#issuecomment-313039270,1,['down'],['downvote']
Availability,"As an additional thread management pattern, I would like to add a thread pool with persistent worker threads, which also uses ""Task"" instances to encapsulate single work items as in the Multithreading plugin.; The motivation for this alternative to the existing work-stealing approach in the Multithreading plugin is to use it for a simple parallelization scheme in the collision detection pipeline.; There are currently two Task types available:; * For running bounding volume hierarchy updates in parallel; * For running collision pair checks in parallel. Both task implementations require no modifications to the existing collision model implementations (especially not within the CubeModel class).; However, the implementation is not complete yet, as I have yet to find a reliable alternative to generate DetectionOutputVector instances after all collision pair checks have finished their computations.; I have implemented this as a separate library and plugin, largely independent of changes in SOFA core classes and completely independent of the existing MultiThreading plugin.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-263825437:436,avail,available,436,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-263825437,2,"['avail', 'reliab']","['available', 'reliable']"
Availability,"As asked I removed the Data in base. . Now here is my working plan regarding all that ordering all the feedback received: ; - PR0: was implementing a per component logging system on top of the msg_api to prove we can replace the existing error logging system. This was done in this PR. - PR1: with the introduced system to replace the existing logging of error (this PR is risky and touch a lot of file) it should contains: ; - removing the filling of the messages in sout.; - removing the old string based buffer (API BREAK). ; - removing all the uses of the old message buffers and replace them with the new one (API BREAK). ; - updating the gui to use the new msghandler buffers. - PR2: removing the printLog Data:; - backward compatibility solution must be implemented. ; - a replacement solution has to be implement to control the printing.; - a replacement solution has to be implement to control the messages based on a per-component selection of the printed messages . - PR3: extending/unifying the sout/serr with more sdebug/swarning. This must be discussed seriously during a meeting because I currently made a lot of attempts to this but didn't managed to implement a working solution without the sever flawn sout/serr have. If you have ideas on that please make a branch with working proposal so that we have sounded discussion. . Anyone interested in working on PR1, PR2 and PR3 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-277260662:238,error,error,238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-277260662,2,['error'],['error']
Availability,"As explained on the [forum](https://www.sofa-framework.org/community/forum/topic/error-plugin-not-foundsofamiscforcefielddev/#post-9786), the scene makes no sense since it uses deprecated components or components in private plugin. Another scene already shows ShapeMatching example using the ShapeMatching engine: ICPRegistration_ShapeMatching_Engine.scn. There fore the [PR#331](https://github.com/sofa-framework/sofa/pull/331) removes this scene.; Thank you for the notice @lujaindong",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307#issuecomment-315023578:81,error,error-plugin-not-foundsofamiscforcefielddev,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307#issuecomment-315023578,1,['error'],['error-plugin-not-foundsofamiscforcefielddev']
Availability,"At least, it's not the same error 😆 ; Did you try to add the `n==0` condition in addition to the code in the PR https://github.com/sofa-framework/sofa/pull/3512 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1333942912:28,error,error,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1333942912,1,['error'],['error']
Availability,"Because defaultTestBehavior was supposed to fail three time and not one (this is not working with EXPECT_NONFATAL_FAILURE). The fact it actually fails only once has been changed later by changing the default behavior in BaseTest. The rational for this change was that for a transitional period of time it was decided to avoid warnings messages to generate a test failure so that the dashboard is less ""red"" and the tests was not refactor since this decision. ; ; EDIT: I didn't made EXPECT_ATLEAST_TWO_FAILURES...only ONE.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370804645:363,failure,failure,363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370804645,1,['failure'],['failure']
Availability,"Build failed with old error already seen in build [220](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/220/console).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/719#issuecomment-405310319:22,error,error,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/719#issuecomment-405310319,1,['error'],['error']
Availability,"Build failing on MacOS (the only config with MeshSTEPLoader plugin enabled):; ```text; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/applications/plugins/MeshSTEPLoader/MeshSTEPLoader.cpp:60:45: error: use of undeclared identifier 'm_filename'; did you mean 'd_filename'?; dmsg_info() << ""Loading STEP file: "" << m_filename;; ^~~~~~~~~~; d_filename; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/SofaKernel/modules/SofaCore/src/sofa/core/loader/BaseLoader.h:53:31: note: 'd_filename' declared here; objectmodel::DataFileName d_filename;; ^; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/applications/plugins/MeshSTEPLoader/MeshSTEPLoader.cpp:65:28: error: use of undeclared identifier 'm_filename'; did you mean 'd_filename'?; const char* filename = m_filename.getFullPath().c_str();; ^~~~~~~~~~; d_filename; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/SofaKernel/modules/SofaCore/src/sofa/core/loader/BaseLoader.h:53:31: note: 'd_filename' declared here; objectmodel::DataFileName d_filename;; ^; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/applications/plugins/MeshSTEPLoader/MeshSTEPLoader.cpp:70:71: error: use of undeclared identifier 'm_filename'; did you mean 'd_filename'?; msg_error() << ""Error: MeshSTEPLoader: Cannot read file '"" << m_filename << ""'."";; ^~~~~~~~~~; d_filename; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/SofaKernel/modules/SofaCore/src/sofa/core/loader/BaseLoader.h:53:31: note: 'd_filename' declared here; objectmodel::DataFileName d_filename;; ^; 3 errors generated.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2095#issuecomment-843142727:233,error,error,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2095#issuecomment-843142727,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"Build failure on Ubuntu is weird. Seems related to CGAL but I'm not even sure.; Can you check this @hugtalbot ?; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2935/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/6/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123779219:6,failure,failure,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123779219,1,['failure'],['failure']
Availability,Build passes with Eigen 3.2.10; Will investigate a bit to fix build errors with 3.3.7,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-534173478:68,error,errors,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-534173478,1,['error'],['errors']
Availability,Build step 'Execute shell' marked build as failure even if the compilation ends properly.; Compiles fine on my MacOS machine.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-453814191:43,failure,failure,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-453814191,1,['failure'],['failure']
Availability,"By message in ```addMessage``` this means any msg_info / warning error, etc. ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2397#issuecomment-940833554:65,error,error,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2397#issuecomment-940833554,1,['error'],['error']
Availability,"CGAL is not available in CentOS official repos. On Ubuntu 18.04, a custom findCGAL.cmake is not necessary.; With a dumb project like; ```cmake; project(test); cmake_minimum_required(VERSION 3.6). find_package(CGAL REQUIRED). get_cmake_property(_variableNames VARIABLES); list (SORT _variableNames); foreach (_variableName ${_variableNames}); if(_variableName MATCHES ""^CGAL_""); message(""${_variableName} = ${${_variableName}}""); endif(); endforeach(); ```. I got this output:; ```bash; root@90bf513426c7:~/project/build# cmake ..; CGAL_3RD_PARTY_DEFINITIONS = ; CGAL_3RD_PARTY_INCLUDE_DIRS = /usr/include; CGAL_3RD_PARTY_LIBRARIES = ; CGAL_3RD_PARTY_LIBRARIES_DIRS = /usr/lib; CGAL_BUGFIX_VERSION = 0; CGAL_BUILD_SHARED_LIBS = TRUE; CGAL_BUILD_TYPE_INIT = Release; CGAL_BUILD_VERSION = 1000; CGAL_Boost_USE_STATIC_LIBS = OFF; CGAL_COMPONENT = ; CGAL_CONFIG = /usr/lib/x86_64-linux-gnu/cmake/CGAL/CGALConfig.cmake; CGAL_CONFIGURED_LIBRARIES = CGAL_Core;CGAL_ImageIO;CGAL_Qt5; CGAL_CONFIG_DIR = /usr/lib/x86_64-linux-gnu/cmake/CGAL; CGAL_CONFIG_LOADED = TRUE; CGAL_CONSIDERED_CONFIGS = /usr/lib/x86_64-linux-gnu/cmake/CGAL/CGALConfig.cmake; CGAL_CONSIDERED_VERSIONS = 4.11.1000; CGAL_CXX_FLAGS_DEBUG_INIT = -g; CGAL_CXX_FLAGS_INIT = -g -O2 -fdebug-prefix-map=/build/cgal-ZyilPF/cgal-4.11=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -frounding-math; CGAL_CXX_FLAGS_RELEASE_INIT = -O3 -DNDEBUG; CGAL_DIR = /usr/lib/x86_64-linux-gnu/cmake/CGAL; CGAL_DISABLE_GMP = ; CGAL_ENABLE_PRECONFIG = OFF; CGAL_ESSENTIAL_3RD_PARTY_LIBRARIES = GMP;MPFR;GMPXX; CGAL_EXT_LIB_Coin3D_PREFIX = COIN3D; CGAL_EXT_LIB_Eigen3_PREFIX = EIGEN3; CGAL_EXT_LIB_QGLViewer_PREFIX = QGLVIEWER; CGAL_EXT_LIB_Qt5_PREFIX = QT; CGAL_FOUND = 1; CGAL_GIT_SHA1 = ; CGAL_GRAPHICSVIEW_PACKAGE_DIR = /usr//include/CGAL/; CGAL_HEADER_ONLY = OFF; CGAL_INCLUDE_DIRS = /usr//include; CGAL_INSTALL_PREFIX = /usr/; CGAL_ImageIO_USE_ZLIB = ON; CGAL_LIB = CGAL; CGAL_LIBRARIES_DIR = /usr//lib/x86_64-linux",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611416421:12,avail,available,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611416421,1,['avail'],['available']
Availability,"CI cries : ; ```; MechanicalMatrixMapper.h:50:27: error: no matching function for call to 'sofa::simulation::BaseMechanicalVisitor::BaseMechanicalVisitor(const sofa::core::ConstraintParams*&)'; 50 | , cparams(_cparams); | ^; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2475#issuecomment-965702932:50,error,error,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2475#issuecomment-965702932,1,['error'],['error']
Availability,CI is also failing:; `ObjectFactory.h:45:89: error: no type named 'BaseObjectDescription' in namespace 'sofa::core::objectmodel'`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2712#issuecomment-1050728803:45,error,error,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2712#issuecomment-1050728803,1,['error'],['error']
Availability,"CI is clear now. ; This PR triggers following error:; ```; applications/plugins/SofaSphFluid/src/SofaSphFluid/SPHFluidForceField.inl:34:10: fatal error: execution: No such file or directory; #include <execution>; ^~~~~~~~~~~; compilation terminated.; ```; see https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1249/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/7/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-598091418:46,error,error,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-598091418,2,['error'],['error']
Availability,CI is unhappy ; - 5 failures; - 13 errors,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2350#issuecomment-935810347:20,failure,failures,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2350#issuecomment-935810347,2,"['error', 'failure']","['errors', 'failures']"
Availability,CI says no :crossed_swords: @alxbilger ; ; ```; EllipsoidForceField.cpp:40:50: error: deleted function '~EllipsoidForceField' cannot override a non-deleted function; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1639628819:79,error,error,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1639628819,1,['error'],['error']
Availability,"CI seems not happy:; ```; Edge2QuadTopologicalMapping.cpp.obj; J:\0\src\modules\SofaTopologyMapping\src\SofaTopologyMapping\Edge2QuadTopologicalMapping.cpp(85): error C2146: syntax error: missing ')' before identifier 'and'; J:\0\src\modules\SofaTopologyMapping\src\SofaTopologyMapping\Edge2QuadTopologicalMapping.cpp(85): error C2065: 'and': undeclared identifier; ```. See [full log](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1861/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/1/console) here",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1861#issuecomment-785683796:161,error,error,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861#issuecomment-785683796,3,['error'],['error']
Availability,CI sees apparently twice an error in advancedtimer .. strange; ```; [ERROR] [AdvancedTimer::end] timer[Animate] does not correspond to last call to begin(cg_timer); ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1641591222:28,error,error,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1641591222,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"CIMg use convert or gm as a fallback scenario which happens when the plugin is not compiled with libjpeg et libtiff support. Conclusion 1: we need to update our VM to install libjpeg et libtiff installs on centos & windows. . Conclusion 2: we need to replace the current error message saying that ""convert"" or ""gm.exe"" cannot be found by one explaining that to have jpg/tiff support we need to re-compile the plugin in the right way. EDIT: thanks @fredroy for the infos about CImg.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305175116:271,error,error,271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305175116,1,['error'],['error']
Availability,Compilation error @fredroy :. ``` bash; MeshMatrixMass.inl:30:10: fatal error: SofaBaseMechanics/AddMToMatrixFunctor.h: No such file or directory #include <SofaBaseMechanics/AddMToMatrixFunctor.h>; ```. Have you compiled it before :stuck_out_tongue_winking_eye:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2015#issuecomment-821044558:12,error,error,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2015#issuecomment-821044558,2,['error'],['error']
Availability,"Compilation error on CI, e.g. :; ```bash; /Users/ci/Jenkins/workspace/sofa-framework/PR-4996/macos_clang_options_release/src/Sofa/Component/Mapping/Linear/src/sofa/component/mapping/linear/Mesh2PointMechanicalMapping.inl:53:54: error: use 'template' keyword to treat 'get' as a dependent template name; l_topologicalMapping.set(this->getContext()->get<Mesh2PointTopologicalMapping>());; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4996#issuecomment-2355876487:12,error,error,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4996#issuecomment-2355876487,2,['error'],['error']
Availability,"Congrats for your first PR @p-shg :clap: . There is a build error on Windows though (who said it would be quick & easy?):; ```; BTDLinearSolver.inl(84): error C2244: 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -': unable to match function definition to an existing declaration; BTDLinearSolver.inl(81): note: see declaration of 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -'; BTDLinearSolver.inl(84): note: definition; BTDLinearSolver.inl(84): note: 'sofa::defaulttype::Mat<sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,T> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(void) const'; BTDLinearSolver.inl(84): note: existing declarations; BTDLinearSolver.inl(84): note: 'sofa::defaulttype::Mat<,,real> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(const sofa::defaulttype::Mat<,,real> &) const'; BTDLinearSolver.inl(84): note: 'sofa::defaulttype::Mat<,,real> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(void) const'; BTDLinearSolver.inl(90): error C2244: 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -': unable to match function definition to an existing declaration; BTDLinearSolver.inl(87): note: see declaration of 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -'; BTDLinearSolver.inl(90): note: definition; BTDLinearSolver.inl(90): note: 'sofa::defaulttype::Mat<sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,T> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(const sofa::defaulttype::Mat<,,real> &) const'; BTDLinearSolver.inl(90): note: existing declarations; BTDLinearSolver.inl(90): note: 'sofa::defaulttype::Mat<,,real> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(const sofa::defaulttype::Mat<,,real> &) const'; BTDLinearSolver.inl(90): note: 's",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/907#issuecomment-458100984:60,error,error,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/907#issuecomment-458100984,2,['error'],['error']
Availability,Cool :+1: ; Some failures and errors though,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2060734978:17,failure,failures,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2060734978,2,"['error', 'failure']","['errors', 'failures']"
Availability,Cool @alxbilger so if there is Required data and in `Inherit::init()` is called then the error gets not triggered. Correct?; We should investigate other components with this Required feature.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-945112990:89,error,error,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-945112990,1,['error'],['error']
Availability,"Could someone give me a hint on what is the problem... @guparan or @damienmarchal maybe .; Looking for ""error"" in the full log give me this:; `..\SofaKernel\framework\sofa\core\..\..\sofa/defaulttype/DataTypeInfo.h(757) : fatal error C1060: compiler is out of heap space; c1xx : fatal error C1063: INTERNAL COMPILER ERROR`. Not sure if this is really the error that breaks the compile and if it is related to my modifications or to the VM used for the build.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/164#issuecomment-284352946:104,error,error,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/164#issuecomment-284352946,5,"['ERROR', 'error']","['ERROR', 'error']"
Availability,Could we close this issue as it seems redundant with #538 ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/537#issuecomment-350734968:38,redundant,redundant,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/537#issuecomment-350734968,1,['redundant'],['redundant']
Availability,"Could you try downgrading setuptools and wheel?; It sounds a bit like this problem here: https://stackoverflow.com/questions/76129688/why-is-pip-install-gym-failing-with-python-setup-py-egg-info-did-not-run-succ. Even though I am not quite sure, why it complains about `extras_require`, if you do not pass it at all.; Maybe this can give more insights https://github.com/freqtrade/freqtrade/issues/8078. I am currently porting sofa_env to gymnasium, so that problem is only temporary.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757852952:14,down,downgrading,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757852952,1,['down'],['downgrading']
Availability,Crashes are fixed but a new error appears: ; `[LightManager(lightManager1)] The maximum of lights permitted ( 2 ) has been reached.`. Apparently linked to this definition in LightManager.h:; ```cpp; #ifndef __APPLE__; enum { MAX_NUMBER_OF_LIGHTS = /*GL_MAX_LIGHTS*/ 5 };; #else; enum { MAX_NUMBER_OF_LIGHTS = /*GL_MAX_LIGHTS*/ 2 };; #endif; ```; @fredroy Any idea how to solve it?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/646#issuecomment-384547556:28,error,error,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/646#issuecomment-384547556,1,['error'],['error']
Availability,Damned sorry @EulalieCoevoet it's my fault if this PR is not yet merged!; I was supposed to complete my review which I did not successfully take the time to do!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1503982594:37,fault,fault,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1503982594,1,['fault'],['fault']
Availability,Dashboard is down but status checks are green. Soooo ... ready?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1181442289:13,down,down,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1181442289,1,['down'],['down']
Availability,"Dashboard is showing good progress, only one scene crash on ubuntu & centos in an easy to fix issue.; Still one unknown test-failure on centos (but it may be a configuration problem related to LANG).; One test failure on windows is still because this machine does not have libjpeg/libtiff installed (or we need a full build ?). Three are test problem. The big dark spot is now the 26 remaining crashes ? Can someone with MacOS investigate the issues please ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357504599:125,failure,failure,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357504599,2,['failure'],['failure']
Availability,"Dashboard said no ^^; At first sight: ParallelFor.h:59:47: error: too many arguments provided to function-like macro invocation; assert(!(_last < _first), ""for range size() error"");",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/902#issuecomment-456080548:59,error,error,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/902#issuecomment-456080548,2,['error'],['error']
Availability,Dear @damienmarchal ; It turns out that I can edit vector fields in Ubuntu 18.04. The relevant difference is the QT version. In 18.04 I am using QT v 5.9.5. My 14.04 machine has been torn down but if memory serves it was the minimum QT requested by CMake (version 5.5.x I believe). Thank you.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/686#issuecomment-397497650:188,down,down,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/686#issuecomment-397497650,1,['down'],['down']
Availability,Did the changes build for you @alxbilger ?; Getting the name does not seem to work for the CI:; ```; 3055/fedora_clang_options_release/src/Sofa/Component/Constraint/Lagrangian/Correction/src/sofa/component/constraint/lagrangian/correction/LinearSolverConstraintCorrection.inl:97:76: error: no member named 'GraphScatteredMatrix' in 'sofa::core::behavior::LinearSolver'; if (s->getTemplateName() == sofa::component::linearsolver::GraphScatteredMatrix::Name()); ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3055#issuecomment-1169917043:283,error,error,283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3055#issuecomment-1169917043,1,['error'],['error']
Availability,"Differences could come from a difference of numerical settings in the solver which are used when gathering nodes together (iteration max, tolerance, threshold ..)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842545668:138,toler,tolerance,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842545668,1,['toler'],['tolerance']
Availability,Do this means that the meshes loader will not read the textures correctly if the plugin is not loaded ? ; For coherency I thinkg the loader should be transformed into plugin as well with a dependency to the ; CImagePlugin. . Just a small side note... on the CI it seems that to fully function CImage requires imagemagick or graphicsmagick to be installed and available in the path on the machine...is it an annoying dependency ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305157679:359,avail,available,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305157679,1,['avail'],['available']
Availability,Do you have an example that you could share easily to reproduce this error?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-673413456:69,error,error,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-673413456,1,['error'],['error']
Availability,Error Win: ; `ContactIdentifier.h(39): error C2492: 'sofa::component::collision::response::contact::ContactIdentifier::cpt': data with thread storage duration may not have dll interface`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4582#issuecomment-2009121118:0,Error,Error,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582#issuecomment-2009121118,2,"['Error', 'error']","['Error', 'error']"
Availability,Error from CI : ; ```; Binding_Data.cpp:866:35: error: cannot convert ‘const string {aka const std::__cxx11::basic_string<char>}’ to ‘const char*’ in initialization; const char *h = data->getHelp() ;; ```. Could you also give explanation for this change @marques-bruno ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1152#issuecomment-533864860:0,Error,Error,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1152#issuecomment-533864860,2,"['Error', 'error']","['Error', 'error']"
Availability,"Error of one test involving topological change : TopologicalChangeProcessor_test.Incise; ```; [ RUN ] TopologicalChangeProcessor_test.Incise; [DEPRECATED] [Sofa_test] Sofa_test & BaseSofa_test are now deprecated classes. To fix this message you should replace their usage by BaseTest, NumericTest or BaseSimulationTest to implement your tests; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1150/mac_clang-3.5_options_release/src/modules/SofaMiscTopology/SofaMiscTopology_test/scenes/IncisionTrianglesProcess.scn; [WARNING] [DiagonalMass(default5)] Negative value of vertexMass vector: vertexMass[357] = -0.138459; [ERROR] [DiagonalMass(default5)] doUpdateInternal: incorrect update from vertexMass; ```. maybe nodes/elements which are removed twice ... @epernod",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1150#issuecomment-534008149:0,Error,Error,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1150#issuecomment-534008149,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,Error on compilation: ; - (WIN) error C3861: 'not': identifier not found; - (MAC) unexpected crash of Compliant_test. [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990#issuecomment-484005693:0,Error,Error,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990#issuecomment-484005693,2,"['Error', 'error']","['Error', 'error']"
Availability,"Error, mistakenly duplicated #3516",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3517#issuecomment-1333867314:0,Error,Error,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3517#issuecomment-1333867314,1,['Error'],['Error']
Availability,Errors are fixed. Ready to merge! :tada:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1275#issuecomment-606189457:0,Error,Errors,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1275#issuecomment-606189457,1,['Error'],['Errors']
Availability,"Errors start from Compliant. First error on MacOS:; ```; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/applications/plugins/Compliant/assembly/AssemblyVisitor.cpp:1:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/applications/plugins/Compliant/assembly/AssemblyVisitor.h:5:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/framework/sofa/core/../../sofa/simulation/MechanicalVisitor.h:25:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/framework/sofa/core/../../sofa/simulation/Visitor.h:26:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/framework/sofa/core/../../sofa/simulation/Node.h:50:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/framework/sofa/core/../../sofa/core/behavior/MechanicalState.h:25:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/framework/sofa/core/../../sofa/core/behavior/BaseMechanicalState.h:31:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/framework/sofa/core/../../sofa/helper/StateMask.h:27:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/extlibs/eigen/Eigen/SparseCore:11:; In file included from /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/extlibs/eigen/Eigen/Core:461:; /builds/workspace/sofa-framework/PR-1101/mac_clang-3.5_options_release/src/SofaKernel/extlibs/eigen/Eigen/src/Core/CwiseBinaryOp.h:49:13: error: ambiguous partial specializations of 'cwise_promote_storage_order<Eigen::Sparse, Eigen::Sparse, 1, 0>'; Flags = cwise_promote_storage_order<typename traits<Lhs>::StorageKind,t",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-514530499:0,Error,Errors,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-514530499,2,"['Error', 'error']","['Errors', 'error']"
Availability,Everything seems OK; ```; ciosx:build ci$ time ./bin/MultiThreading_test; [INFO] [PluginManager] Loaded plugin: /Volumes/Jenkins/workspace/sofa-framework/PR-727/mac_clang-3.5_options_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Volumes/Jenkins/workspace/sofa-framework/PR-727/mac_clang-3.5_options_release/build/lib/libSofaAllCommonComponents.dylib; [INFO] [PluginManager] Loaded plugin: /Volumes/Jenkins/workspace/sofa-framework/PR-727/mac_clang-3.5_options_release/build/lib/libSceneCreator.dylib; [==========] Running 4 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 4 tests from TaskSchedulerTests; [ RUN ] TaskSchedulerTests.FibonacciSingle; [ OK ] TaskSchedulerTests.FibonacciSingle (15 ms); [ RUN ] TaskSchedulerTests.FibonacciMulti; [ OK ] TaskSchedulerTests.FibonacciMulti (20 ms); [ RUN ] TaskSchedulerTests.IntSumSingle; [ OK ] TaskSchedulerTests.IntSumSingle (47 ms); [ RUN ] TaskSchedulerTests.IntSumMulti; [ OK ] TaskSchedulerTests.IntSumMulti (68 ms); [----------] 4 tests from TaskSchedulerTests (150 ms total). [----------] Global test environment tear-down; [==========] 4 tests from 1 test case ran. (150 ms total); [ PASSED ] 4 tests. real 0m3.061s; user 0m0.551s; sys 0m0.159s; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/727#issuecomment-408800487:1147,down,down,1147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/727#issuecomment-408800487,1,['down'],['down']
Availability,"FWIW at Anatoscope we've been using exceptions for quite a while now, and we generally `std::throw_with_nested` to provide additional context as exceptions bubble up (this is handy when pulling on long engine/data chains) to help debugging scene issues. One of the main issues is to get proper exception translation across c++/python boundaries (both ways) while retaining as much of the original error as possible. IMHO the ""expected"" approach is currently lacking on ergonomics (unlike say, haskell or rust's equivalents) and will probably put some more pressure on compile times if used widely. On the other hand it does solve some of the pain points with exceptions (types/speed). I recall there was some discussion in the C++ committee a few years back in order to have some kind of lightweight exception mechanism (see e.g. https://www.youtube.com/watch?v=os7cqJ5qlzo) but this is still mostly future work as far as I can tell. Anyway, my two cents :). HTH,",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1924#issuecomment-851566891:397,error,error,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1924#issuecomment-851566891,1,['error'],['error']
Availability,"FYI, the decision back in the sofa coding sprint of June 2014 (as fas as I remember), was to remove all `*GridTopology`, in favor of a new design based on `*GridLoader` or `*GridEngine` types of components. A workgroup worked on this topic during the sprint. The associated branch may or may not still exist, but unfortunatly it was not completed and merged back. The rational however is still valid, the current design of those topologies introduce many complexities that are not providing a lot of value, given how rarely then end-up being used, outside of quick and useful examples, but for which the performance gain (if any) of using these grids directly instead of using `MeshTopology` or `HexahedronSetTopologyContainer` does not really matter. So in term of maintenance it seems more practical to remove them completely from the codebase, once we have a usable (and simpler) alternative in place.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/162#issuecomment-281638098:766,mainten,maintenance,766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/162#issuecomment-281638098,1,['mainten'],['maintenance']
Availability,Failures are due to old ffmpeg libraries. They changed the api (10/2015 as I remember). ; Actually it´s working on a fresh ubuntu 17.10 but not on the old LTS. I don´t remember the ffmpeg version number. . @bcarrez was working on centos and tried to fetch the correct version before pushing it to the ubuntu vm.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360095580:0,Failure,Failures,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360095580,1,['Failure'],['Failures']
Availability,Failures were related to SofaPython3 directly. Fixed by https://github.com/sofa-framework/SofaPython3/pull/142,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2059#issuecomment-834234430:0,Failure,Failures,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059#issuecomment-834234430,1,['Failure'],['Failures']
Availability,Feedback from @damienmarchal : [PoC working here]([hugtalbot (Hugo)](https://matrix.to/#/@hugtalbot-5a840cffd73408ce4f8d167a:gitter.im): https://sofapython3.readthedocs.io/en/xp-readthedocs/). - The fastest would be to have a ci process like the generate-doxygen which generate an artifact with the build documentation; - Then in readthedocs we just have to download that artifact and copy it to the right location (this what I did in the xp-readthedoc); - The only missing part is make the ci script (which shouldn't be super hard for anyone that know how our jenkins ci is operating),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3764#issuecomment-1582191183:358,down,download,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3764#issuecomment-1582191183,1,['down'],['download']
Availability,"For historical explanations:; * we need to gather the pointers to all Data in a Base instance, so there must be a function somewhere that is called with both the pointer to the `Base*` object and to the `Data*`.; * a simple option could be to have the `Base*` pointer as a parameter of the Data constructor, however most compilers issue a warning if `this` is explicitly used when initializing member variables, as it is not fully constructed yet; * however, compilers are happy with calling a method, which itself use `this`, hence the initial implementation of `initData()` (which was called `dataField()`) had the `this` pointer implicitely, but needed the `Data*` pointer to add if to the ""fields"" map, which is why it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` w",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1034,avail,available,1034,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283,2,"['avail', 'redundant']","['available', 'redundant']"
Availability,"For me there is no more color, neither gtest's or sofa's. The `Fatal` messages should also be considered as failures by default.; Can you see why it is annoying to copy default behaviors to each test? Now we have to modify every of them rather than only a the default place...; If we let deprecated and warning messages on the side for now, but we want to activate them later, it is the same story.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292506026:108,failure,failures,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292506026,1,['failure'],['failures']
Availability,"Found it, this is my fault (sorry):. - we have some mappings implemented in python in Compliant; - setting up the mapping uses scipy, which is not the expected version on some plateform (mostly osx for now), which triggers a python error; - the python code returns to c++ before having a chance to finish the test and keeps going on forever. I fixed the offending script, assuming it is the only one. I'll monitor the builds to see if there's more. I'll try to add some mechanism to detect uncaught python exceptions during test execution, and fail the script should this happen. With all my apologies for killing the CI engine :-/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289499063:21,fault,fault,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289499063,2,"['error', 'fault']","['error', 'fault']"
Availability,"From SOFA-dev meeting: ; Hi @raffaellatrivisonne, is there a chance that the argument `y` is rounded to 1 or -1 due to anything else than a very small numerical error? If yes, we should add an epsilon to ensure the error is acceptable.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-337850046:161,error,error,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-337850046,2,['error'],['error']
Availability,"From the error you get, I deduce that `cmd` is equal to `Elements` (without the $). In this case, I don't see how `cmd.substr(0, 9)` can be equal to `$Elements`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3030#issuecomment-1151447740:9,error,error,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3030#issuecomment-1151447740,1,['error'],['error']
Availability,"Glad you like it ; With a typesafe version you mean something like; ```cpp; simpleapi::createObject(root, ""MinProximityIntersection"", {{""name"",""Proximity""},; {""alarmDistance"", 0.3},; {""contactDistance"", Vec3d(0,1,2)}}) ;; ```; This could be great especially with a version without string conversion so it would be both elegant and fast. . On my side the things I tried but didn't pushed were:; ```cpp; simpleapi::createObject(root, DefaultPipeline, {; { DefaultPipeline::name, ""myname"" },; { DefaultPipeline::position, ""1 2 3"" },; }) ; ```; The idea was to avoid to use strings as identifier because that are error prone and hard to maintain when something change. It also feature autocompletion, you write DefaultPipeline:: TAB and you get all the possible data field. The drawback is the extra DefaultPipeline prefix all around which impact readbility. . A was also curious on how we could make visible the graph structure of the scene (PSL like) and I cannot prevent myself to think about something like the following: ; ```cpp; createTree(; {; Node, { ; {""name"", ""root""}, ; MechanicalObject, {; {""name"", ""bob""},; {""position"", ""1 2 3""} ; },; } ; ); ```; With good template and operator overloading it is probably possible but I'm afraid of the trickyness of the approach (and the error message in case of compilation error) but compared to the current simpleapi that is ""straightforward"" to use and offer a smooth transition for people coming from SofaPython, I'm not sure this is worth the effort.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334575515:609,error,error,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334575515,3,['error'],['error']
Availability,"Great contribution, . I fully support any step toward smoother integration of Sofa with Python and this PR is one.; I also like the cleaning & factoring work with stuff like get_base function. . Really minor details: ; In SOFA we have plenty of TODOs forgotten since years that no one is responsible for, without any idea when this was added and when this will be done. To avoid that I suggest replacing things like; ```cpp; // TODO FIXME self is commented; ```; With one with more details; ```cpp; //TODO(mtournier 2017-05-30) Self, is commented there is possibly a problem (if not done in two years, you can remove this comment); ``` ; Or; ```cpp; //DEFECT(mtournier 2017-05-30) Self, is commented there is a problem when...; ``` ; To help general code maintenance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306728456:755,mainten,maintenance,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306728456,1,['mainten'],['maintenance']
Availability,"Hello @damienmarchal . I tried to execute tests manually using python. And I got import errors like:; _Traceback (most recent call last):; File ""test_mass.py"", line 8, in <module>; from SofaTest.Macro import *; ImportError: No module named SofaTest.Macro_; or; _Traceback (most recent call last):; File ""test_MeshLoader.py"", line 1, in <module>; import SofaPython.MeshLoader; ImportError: No module named SofaPython.MeshLoader_. It seems I should attach some additional modules (plugins), but I don't know what exactly I should do.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329773331:88,error,errors,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329773331,1,['error'],['errors']
Availability,"Hello @jnbrunet ; Thanks a lot of the PR. Lot of interesting things. ; Few comments:; - one that repeat a lot about error/exception's message. ; - the other is about wether SofaPython is the proper place to put Simulation and GUIManager's manager binding. My feeling is that we should have second module like SofaApplication/SofaRuntimewhich exposes those, application specific bindings. . Please tell us your opinion.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990#issuecomment-489499745:116,error,error,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990#issuecomment-489499745,1,['error'],['error']
Availability,"Hello Bruno,. Thanks for the work done, I fully agree that this is needed. . I don't understand the need for MODULE_SOFASPARSESOLVER. This is a module/plugin so is the classic find_package(SofaSparseSolver) then (SofaSparseSolver_FOUND) not enough ?; It should be the same with SofaPython. Its availability should be tested with find_package(SofaPython). . Now about the other defines that are not related to module or plugin, it is of course important to export them properly in the SofaFramework package.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/927#issuecomment-462713812:294,avail,availability,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/927#issuecomment-462713812,1,['avail'],['availability']
Availability,"Hello Erwan,. Good idea to make a warning. . Now at the fundamental level to me all this part of Sofa is ""broken"". The fault is that there is no clear difference between the ""in editor"" camera (the ones use in the viewer/runSofa editor) and the ""in-scene"" camera. Making this distinction is important and I'm sure that for runSofa2 we will need to make that clear. . To be clear...think how Unity is doing... some panel are showing ""external"" view of the scene for editting..while one or multiple ""in-scene"" cameras are used in the ""game"" panel for the rendering. . Actually we also have the same problem with all the interaction.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/481#issuecomment-337361275:119,fault,fault,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/481#issuecomment-337361275,1,['fault'],['fault']
Availability,"Hello Eulalie,. - `isRequired()` should be true by default [OK]; - `hasDefaultValue()` should be true by default as well [OK]; - `setRequired(false)` should also change things so that `hasDefaultValue()` returns false ; To me this is independant; - current `setRequired(true)` should be replaced by `setHasDefaultValue(false)` or something like that... ; Same here, the two things are separated I don't see why we should couple them. . - in BaseObject::init() print a warning/error message...; I was more thinking for `if (data->isRequired() && !(data->hasDefaultValue() || data->isSet()) )`; So the message prints if the field is required (i.e not optional) and there is neither a default value nor a user provided data. . - finally update the GUI to handle `hasDefaultValue()` and display an empty field if it returns false; actually in my tests I tried with a ""light gray text"" showing something like: ""<optional, type to set>""; ; I think one PR could be done to implement the described behavior in Data.h including tests for then ; then a second one update the runSofa widgets so they can take profit of that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767133475:476,error,error,476,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767133475,1,['error'],['error']
Availability,"Hello François (@fjourdes),. Thank for the long and interesting reply. . Your last comment rise an interesting question related to differentiating unittest to functionnal tests. ; Currently in Sofa we don't make any distinction between unit test and functionnal test but my thinking is that in general utility classes have unit tests while components have functional tests . Making the distinction would be indeed better so the question is how to get there from where we are a now. Here is a proposal. ; In the current PR there is a ```BaseTest``` and ```BaseSimulationTest```, this could actually be transformed without too much effort into UnitTest and FunctionalTest. The tests inheriting from UnitTest shouldn't use the factory in any way and shouldn't have external dependencies. The test in-heriting from FunctionalTest should use the factory and can make the assumption that specific plugins are loaded. We could event go one step further and emphasizing things by having two set of file, ones named *MyClass_unittest.cpp* and *MyComponent_functionaltest.cpp* and in our CMakeLists.txt compile the two set of tests separately with different build targets. This would make things very clear, be compatible with your workflow where unit test are considered as compilation failure, be compatible with our workflow where functional tests are used because they allow to get decent code coverage and last point as it would use the loose coupling approach it would totally cut the dependency at compile time to SofaTest. . Small note, some Functional tests may rely on components implemented in plugins. I have not clear view if we should disable the test if the plugin is not there or if we should make it fails or if we should ""disable"" it at runtime. . EDIT: changes some sentences.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337536552:1277,failure,failure,1277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337536552,1,['failure'],['failure']
Availability,"Hello François, . Here is a summary of my current understanding of your comments. ; It seems that you want to:; 1 - cut the dependency to SofaTest; 2 - have a clear separation between unittest vs functionaltest; 3 - cut the dependency to SofaFramework (ie not having the test inheriting from SofaFramework/BaseTest or something like that) for the unittests. . Initially this PR was only about -1- cutting the dependency to SofaTest. My thinking is that the SofaTest dependency is a major problem for everyone using the master branch of sofa because of the high impact on code coupling. . About -2- Following your remarks I'm in favor of improving a more clear separation between unit-test and functional test but as this is something new and maybe this should discussed that in the ""issues"" section of github instead of inside a specific PR. . About -3- cutting the dependency to SofaFramework. This is something that was never discussed before and worse than that, up to now the general consensus that, as we are in Sofa, we should inherit from a single BaseTest that install all the may be needed to do the test. A good reason for this scenario is nothing related to Scene/Simulation management but because BaseTest provides a default handler for EXPECT_MSG_EMIT/NOEMIT. Of course if your code is not using at all those elements, then you should feel free to use gtest. . As said in previous comment compared to the current Sofa code base I would be very happy to have -1- and -2- done. . It seems that -3- is not a big deal for people using the CMakelists.txt from Sofa but it may be of importance for your specific workflow in which, if I understand your previous answers, you integrate unittest as compilation failure. Maybe you can provide us more details on your workflow so that we can see the drawback of having the tests written in SofaFramework to be inheriting from a BaseTest (which is also defined in SofaFramework). Damien.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338697814:1715,failure,failure,1715,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338697814,1,['failure'],['failure']
Availability,"Hello François,. Thanks for the PR, my bad. To answer your question the CI is compiling Sofa in debug on linux...so this rise the question why we didn't notice that before ? . I look at the code and this bug being un-noticed for so long result from interesting side effect ; so here are the details:; In LCPCalc.cpp I replaced the function afficheResult by resultToString; In LCPCalc.h I forgot to remove the afficheResult; In ConstraintAnimationCode.cpp the calling code is; ```cpp; if (EMIT_EXTRA_DEBUG_MESSAGE); {; msg_info() << ""getF() after setConstraintEquations:"" ;; helper::afficheResult(CP.getF()->ptr(),CP.getSize());; }; ```; The remarquable thing is that this is not and #ifdef but a normal if. So the problematic code *is* compiled and as the definition is in the .h, everything is fine (at compilation time). Let's now have a look at how is defined the condition, there we have:; ```cpp; #define EMIT_EXTRA_DEBUG_MESSAGE false; ```; This means the code is really compiled but that during the optimization pass (that take place before linking) the bloc of code is removed because it is unreachable. So at link time the call is not there anymore. ; To have the link error happens you either need to set the condition to true (it is not connected with debug flags so you have to manually change that in the .cpp) or to use a compiler that does not do unreachable code removal (maybe a compiler option or something). . So your PR really fix the problem . Now to conclude:; - I'm happy to see that the compiled successfully optimize if(true/false) condition so we can use them much more to replace #ifdef / #endif whenever possible (more readable, easier to maintain). ; - the EMIT_EXTRA_DEBUG_MESSAGE is not linked in any way to the debug compilation...should it be ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/473#issuecomment-336552959:1178,error,error,1178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/473#issuecomment-336552959,1,['error'],['error']
Availability,"Hello Marc, and thanks a lot for your feedback !. I'll address some of your points below:. > **determinism**: as @matthieu-nesme mentionned, the order of initialization of objects with static storage duration is undefined across translation units. This is the first reason why I introduced the init() functions: to make initialization deterministic and reliable. And this is the same reason why it's better to call those functions explicitely, at the right time: the program will work correctly by design, not by coincidence;. To be more explicit: there is no guarantee whatsoever that calling `init` in a `static` RAII constructor will get called *after* every other `static` variable in the shared library is initialized. This can indeed be an issue. I was under the impression that there is exactly one of such RAII per dynamic library loaded by SOFA, so as long as `init` does not involve messing around with other `static` variables in the library we should be safe, right?. > **readability** (or something like that): calling the initialization function ""manually"" makes programs more readable: you can just start from the main() function and understand what code is going to run without actually running the code inside a debugger (or reading the entirety of SOFA's source code);. Come on, we're talking about SOFA here ;-). > **choice** (or whatever): with an explicit call to init(), an application writer gets to decide both whether and when to initialize SOFA. Not sure I agree: when `dlopen`-ing a shared library, I prefer to have it initialized automatically if possible (and safe) as the converse is error-prone. In any case, `cleanup` should really be called in the RAII destructor, otherwise resources will leak in case an exception is thrown and not caught, or somebody calls `std::exit` (which they *can*). And of course, the destructor should not do silly stuff like calling a `MessageDispatcher` that was destructed already.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280066333:353,reliab,reliable,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280066333,2,"['error', 'reliab']","['error-prone', 'reliable']"
Availability,"Hello guys!. I am struggling on an error with the MeshVTKLoader. I have defined a mesh in .vtk format, but it seems that SOFA does not recognize this mesh. I tried either by creating the .vtk file as binary or ascii but none of them is working. Here is the error I get with the binary version: ; ---. ...; [WARNING] [BaseObject(unnamed)] Unknown keyword É♣é; [WARNING] [BaseObject(unnamed)] Unknown keyword É; [WARNING] [BaseObject(unnamed)] Unknown keyword ó; [WARNING] [BaseObject(unnamed)] Unknown keyword ¯ß²E♠c; [WARNING] [BaseObject(unnamed)] Unknown keyword ?☺§♣Z♠c☺§; [WARNING] [BaseObject(unnamed)] Unknown keyword ?; [WARNING] [BaseObject(unnamed)] Unknown keyword Ô☺]♣Þ; [WARNING] [BaseObject(unnamed)] Unknown keyword A; [WARNING] [BaseObject(unnamed)] Unknown keyword ÿ♣²; [WARNING] [BaseObject(unnamed)] Unknown keyword ù♣Â♣²; [WARNING] [BaseObject(unnamed)] Unknown keyword ÿ♠♠☺²♦I☻; [WARNING] [BaseObject(unnamed)] Unknown keyword ☺¹☺²☻; [WARNING] [BaseObject(unnamed)] Unknown keyword ♦I♦H♦♣☻; [WARNING] [BaseObject(unnamed)] Unknown keyword ♦I☺¹♦♣♦I☻; [WARNING] [BaseObject(unnamed)] Unknown keyword ♦HÌ; [WARNING] [BaseObject(unnamed)] Unknown keyword ╬♠""♣A♣¯; [WARNING] [BaseObject(unnamed)] Unknown keyword ╬♣A♠""; [WARNING] [BaseObject(unnamed)] Unknown keyword x; [WARNING] [BaseObject(unnamed)] Unknown keyword D♠{; [WARNING] [BaseObject(unnamed)] Unknown keyword o♣Â♠♠♠♣Â; [WARNING] [BaseObject(unnamed)] Unknown keyword o; [WARNING] [BaseObject(unnamed)] Unknown keyword ÿ; [WARNING] [BaseObject(unnamed)] Unknown keyword j♣Á; [WARNING] [BaseObject(unnamed)] Unknown keyword «♣Á; [WARNING] [BaseObject(unnamed)] Unknown keyword j♣¬♣ä☺8♠ï☺; [WARNING] [BaseObject(unnamed)] Unknown keyword x☺L; [WARNING] [BaseObject(unnamed)] Unknown keyword q; [WARNING] [BaseObject(unnamed)] Unknown keyword Â♣♥; [WARNING] [BaseObject(unnamed)] Unknown keyword Â♠w; [WARNING] [BaseObject(unnamed)] Unknown keyword j♣Á; [WARNING] [BaseObject(unnamed)] Unknown keyword j♠; [WARNING] [BaseObject",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/652#issuecomment-2155321547:35,error,error,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/652#issuecomment-2155321547,2,['error'],['error']
Availability,"Hello! ; Thanks for reporting the issue; I've not seen such error during my SOFA compilations and I'm not sure it is CUDA related...; I'll keep an eye out when configuring a new PC for an intern on Monday 💻 . @valeryozenne, I'd like to ask just to be sure.; Did you install the libraries needed for SOFA Core (as shown [here](https://www.sofa-framework.org/community/doc/getting-started/build/linux/)):; ```; sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev; ```; There might be something off with`libglew-dev` in special since CMake is looking for it in a CUDA samples folder",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786798561:60,error,error,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786798561,1,['error'],['error']
Availability,"Hello, ; so after a quick look at the class the fix to do is not in MechanicalObject but probably in Quater.inl, when the quaternion is converted from string to quaternion:; ```cpp; /// write to an output stream; inline friend std::ostream& operator << ( std::ostream& out, const Quater& v ); {; out<<v._q[0]<<"" ""<<v._q[1]<<"" ""<<v._q[2]<<"" ""<<v._q[3];; return out;; }; /// read from an input stream; inline friend std::istream& operator >> ( std::istream& in, Quater& v ); {; in>>v._q[0]>>v._q[1]>>v._q[2]>>v._q[3];; return in;; }; ```; This is sloppy code that should be made much more robust regarding the input. Instead of reading directly the value, they should be buffered in double, then passed to a function like; this->setFromRawValue(); ; The checking code and normalization should be in this function. Doing that in Quater.inl has the advantage that all quaternion read from string will always be checked and valided. . The drawback (but this is a general drawback in how we handle error with message instead of using exception is how do we report error messages so that user can fix their scene.)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/790#issuecomment-428510273:587,robust,robust,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/790#issuecomment-428510273,3,"['error', 'robust']","['error', 'robust']"
Availability,"Hello, I copied the 3 instruments on the Beam Adapter plug-in_ collis. The scn xml format is converted to the python format, and then it can be opened normally through SOFA, but it is stuck when you click animate. What is the reason?; import sys; import Sofa. def createScene(rootNode):; rootNode.addObject('RequiredPlugin',; pluginName='BeamAdapter SofaMeshCollision SofaBoundaryCondition SofaConstraint SofaMiscCollision SofaDeformable SofaGeneralLinearSolver SofaImplicitOdeSolver SofaLoader SofaOpenglVisual SofaTopologyMapping'); rootNode.addObject('VisualStyle', displayFlags='showVisualModels showBehaviorModels showCollisionModels hideMappings hideForceFields'). rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('FreeMotionAnimationLoop'). rootNode.addObject('LCPConstraintSolver',mu='0.1',tolerance='1e-10',maxIt='1000',build_lcp='false'); rootNode.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance',name='localmindistance',alarmDistance='2',contactDistance='1',angleCone='0.8',coneFactor='0.8'); rootNode.addObject('DefaultContactManager',name='Response',response='FrictionContact'); rootNode.addObject('DefaultCollisionGroupManager',name='Group'). topoLines_cath = rootNode.addChild('topoLines_cath'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',template='Rigid3d',printLog='0',length=1000.0, straightLength=600,spireDiameter=4000.0,spireHeight=0.0,densityOfBeams=[40,10],numEdges=200, numEdgesCollis=[40,20],youngModulus=10000 ,youngModulusExtremity=10000); topoLines_cath.addObject('EdgeSetTopologyContainer',name='meshLinesCath'); topoLines_cath.addObject('EdgeSetTopologyModifier', name='Modifier'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo',template='Rigid3d'); topoLines_cath.addObject('MechanicalObject',template='Rigid3d',name='dofTopo1'). topoLines_guide = rootNode.addChild('topoL",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:816,toler,tolerance,816,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['toler'],['tolerance']
Availability,"Hello, if it is dangerous, shouldn't it be an error instead of a warning ? ; (people don't read warnings)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3858#issuecomment-1547452259:46,error,error,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3858#issuecomment-1547452259,1,['error'],['error']
Availability,"Hello, in my opinion, this bug is related to the actual status of solvers in SOFA. Since CG is a very ""robust"" solver (where ""robust"" means that it constructs solutions which are mathematically not always justifiable), it is used everywhere in examples. However, there are other solvers available in SOFA (even if not used often), such as SparseLDL, SparseLU. I think it might be highly ""surprising"" for someone that while CG calculates some solution (which IMHO is not mathematically justifiable, but let's put this aside), LDL or LU will simply crash on such as simple scene without saying anything clear about the reason of crashing. Or to put it differently -- the above scene is not well-formed (a non-mapped MO in a subnode...), but if using CG, everything looks fine (even IMHO it really should not).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/581#issuecomment-390928123:103,robust,robust,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/581#issuecomment-390928123,3,"['avail', 'robust']","['available', 'robust']"
Availability,"Hello,. A simple [blame](https://github.com/sofa-framework/sofa/blame/25f245b2383a86f097cabdea13697aa42665568e/modules/SofaConstraint/BilateralInteractionConstraint.cpp) shows the 2 commits where these values where last set:; https://github.com/sofa-framework/sofa/commit/bb99399cba47a95301025531577c2e3ac3f728ab; https://github.com/sofa-framework/sofa/commit/8b294f75884a0216ce26f5457b8689da57dd081a. They were done for a PhD work, tuning for specific cases but without giving real reasons in the log. So this is not something that was really meant to be preserved like that, indeed it does not make sense that the value is much higher for double that floats. But the actual refactoring that is needed is to expose this tolerance as a Data instead of hiding it within the code itself, so that it can be tuning within the simulations that require it instead of requiring a patch within Sofa. Ideally the value in the Data should preserve the current behaviour in order not to break existing scenes, possibly with the isRequired flag set such that others will know that they should set the value specifically instead of relying on the previously hidden and inconsistent default. Jeremie.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/45#issuecomment-257955683:721,toler,tolerance,721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/45#issuecomment-257955683,1,['toler'],['tolerance']
Availability,"Hello,. The issue I have with this approach is that this make it very invasive, as Sofa is adding operators in std namespace for all types, even not its own. So within an application that could also does the same, we would get conflicts / redefinition / ambiguity compiler errors, or worse silently override the application's own operators that could have relied on a different string syntax. I agree that the approach of subclassing the standard containers just to be able to package them within a Data is wrong. In our current branch we are refactoring the approach, relying more on `DataTypeInfo` to generically access features like string parsing, without having to put them in the type itself. But this is work in progress so it is not ready to be pushed yet. So in the meantime this change could be pushed, but with the understanding that it may be a temporary solution only. Jeremie.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-271622525:273,error,errors,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-271622525,1,['error'],['errors']
Availability,"Hello,. We still have problem in Compliant_test that is not killed by Jenkins: ; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-5.4_options/44/console. Maybe it came from Python_test.cpp and more specifically in Python_scene_test::run . There is an infinite loop that probably never exit when Python is stopped because of an error. . If someone have time to make that more robust any PR will be appreciated.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-300405452:321,error,error,321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-300405452,2,"['error', 'robust']","['error', 'robust']"
Availability,"Hello,; I have a similar error, when trying to load a mesh file with the wrong format. For example, when loading a scene with this line:. `<MeshObjLoader name=""loader"" filename=""mesh/smCube27.msh"" />`. SOFA crash with a SIGSEV. Here's the output in the console (edited to break the really long lines of stack trace):; ```; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks:; [SceneCheckAPIChange, SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckAPIChange] No 'APIVersion' component in scene. Using the default APIVersion level:; 17.06; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [FixedConstraint(default3)] Can not find the topology, won't be able to handle topological changes; [WARNING] [FixedConstraint(default3)] Index 0 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 3 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 6 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 9 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 12 not valid, should be [0,0]; [WARNING] [RealGUI] Global Bounding Box seems very small; Your viewer settings (based on the bbox) are likely invalid, switching to default value of [-1,-1,-1,1,1,1].This is caused by using component which does not implement properly the updateBBox function.You can remove this warning by manually forcing a value in the parameter bbox=""minX minY minZ maxX maxY maxZ"" in your root node. ########## SIG 11 - SIGSEGV: segfault ##########; 54: sofa::helper::BackTrace::dump - 0x7ffbf5c001e053:; sofa::helper::BackTrace::sig - 0x7ffbf5c0034052:; seh_filter_exe - 0x7ffc2b60d4e051:; seh_filter_exe - 0x7ffc2b60d4e050:; _C_specific_handler - 0x7ffc1c9ab86049:; _chkstk - 0x7ffc2e51457048:; RtlWalkFrameChain - 0x7ffc2e47373047:; KiUserExceptionDispatcher - 0x7ffc2e5133d046:; sofa::component::projectiveconstraintset::FixedConstraint<sofa::defaulttype::StdVecto",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746#issuecomment-475536396:25,error,error,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746#issuecomment-475536396,1,['error'],['error']
Availability,"Hello,; I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486037146:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486037146,1,['error'],['error']
Availability,"Hello,; would it be possible to provide a simple test?; It seems there is no unit/scene/regression tests which are using Multi2Mapping and its `input2` apparently.; And by just looking at the code, I cannot see why `input2` would be impacted by #3665 as there is no `validator` for input2 😅; It would be much easier to track down the bug, thanks !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112:325,down,down,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112,1,['down'],['down']
Availability,"Here is my error : ; ```bash; /data/Softwares/sofa/src/master/Sofa/Component/SolidMechanics/FEM/HyperElastic/tests/Material_test.cpp; /data/Softwares/sofa/src/master/Sofa/Component/SolidMechanics/FEM/HyperElastic/tests/Material_test.cpp:56:18: error: too few template arguments for class template 'Matrix'; const Eigen::Matrix<Real, 3>& eigenvalues = eigensolver.eigenvalues();; ^; /usr/include/eigen3/Eigen/src/Core/Matrix.h:178:7: note: template is declared here; class Matrix; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4724#issuecomment-2110844690:11,error,error,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4724#issuecomment-2110844690,2,['error'],['error']
Availability,"Here is the naive tentative I did:; ```; $ ./bin/SofaHelper_test.exe --gtest_filter=PluginManager_test.loadTestPluginByPath; Note: Google Test filter = PluginManager_test.loadTestPluginByPath; [==========] Running 1 test from 1 test case.; [----------] Global test environment set-up.; [----------] 1 test from PluginManager_test; [ RUN ] PluginManager_test.loadTestPluginByPath; 0; [INFO] [PluginManager] Loaded plugin: J:/0/build/bin\TestPlugin.dll; 1; [ERROR] [FileSystem::exists()] J:/0/build/bin/J:/0/build/bin\RandomNameForAPluginButHopeItDoesNotExist.dll.dll: error 123: The filename, directory name, or volume label syntax is incorrect. [ERROR] [PluginManager] File not found: J:/0/build/bin\RandomNameForAPluginButHopeItDoesNotExist.dll; 1; toDelete.push_back(TestPlugin); pm.getPluginMap().size() = 1; unloadPlugin(J:/0/build/bin\TestPlugin.dll); PluginManager::unloadPlugin; DynamicLibrary::unload; DONE DynamicLibrary::unload; DONE PluginManager::unloadPlugin; unloaded J:/0/build/bin\TestPlugin.dll; pm.getPluginMap().size() = 0; [ OK ] PluginManager_test.loadTestPluginByPath (33 ms); [----------] 1 test from PluginManager_test (33 ms total). [----------] Global test environment tear-down; [==========] 1 test from 1 test case ran. (33 ms total); [ PASSED ] 1 test.; Segmentation fault; ```; As you can see, unloading went well. Something else is triggering the Segfault...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1274#issuecomment-604356435:456,ERROR,ERROR,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1274#issuecomment-604356435,5,"['ERROR', 'down', 'error', 'fault']","['ERROR', 'down', 'error', 'fault']"
Availability,Hey @EmDash00 your error shows that you do not properly link with csparse.; Do you have it installed?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419#issuecomment-655380222:19,error,error,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419#issuecomment-655380222,1,['error'],['error']
Availability,"Hey @JaggerYu928 . For the RequiredPlugin, please see : https://www.sofa-framework.org/community/doc/using-sofa/sofa-ng-migration/; For the other errors, please make sure to carefully read the deprecation / warning messages. If you do not successfully solve them, please list the error output down here; Cheers",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4461#issuecomment-1916555314:146,error,errors,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4461#issuecomment-1916555314,3,"['down', 'error']","['down', 'error', 'errors']"
Availability,"Hey @damienmarchal ,. This looks very good to me, I quite like this idea of having some depreciated code triggering an error while others (default behavior) triggering a warning. . :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1639#issuecomment-737210116:119,error,error,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1639#issuecomment-737210116,1,['error'],['error']
Availability,"Hey @guparan, sorry for the delay. It looks much better now. The only thing that bugs me is, why make the ffmpeg option dependant on compilation checks if only the ffmpeg executable is needed. I would remove completely the compilation checks for ffmpeg, and always show the option in the GUI, with a textbox to specify the ffmpeg path. If no path are specified, check the INI file if it has one, if not then gray-out the options for ffmpeg output. If it is a valid path (checked during runtime), then save that path in the INI file. I think this would make much more sense and would not restrict the user if he have ffmpeg somewhere on his computer that was not found during compilation or if he downloaded a compiled version of Sofa with ffmpeg support but his ffmpeg path doesn't match the one used for compilation. What do you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-547846519:696,down,downloaded,696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-547846519,1,['down'],['downloaded']
Availability,"Hey @jjcasmar ,. I also got this with nvidia proprietary drivers. This is obviously a bug, and is probably related to the fact that we haven't really touched the rendering of SOFA for the past ~8 years or so. I'm not sure we will be able to have a fix soon unfortunately. . As you said, using `prime-run runSofa` when available to force SOFA to run on the GPU seems to be working. In Fedora 32 with nvidia drivers, I've done it with; `$ __NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia runSofa`. Thank you anyway for this report, hopefully someone will have some time at some point to look at this.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1567#issuecomment-717753014:318,avail,available,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1567#issuecomment-717753014,1,['avail'],['available']
Availability,Hey @lagarkane ; There's still 22 new failures of the tests. Is that normal? Looks your commit : 092b19f did it,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317#issuecomment-317355130:38,failure,failures,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317#issuecomment-317355130,1,['failure'],['failures']
Availability,"Hey @marques-bruno !. I think this will help us a lot to add robustness to our components. With this PR, do you see any reason why one would use `BaseLink`s in his component instead of a `BaseDDGLink`s?. Also, maybe instead of have a new `InitDDGLink` function in BaseClass, we could simply overload the `initLink` with; `initLink(BaseDDGLink* owner, std::string name, std::string help, std::string group = """")` ?. Thanks !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1226#issuecomment-561074421:61,robust,robustness,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1226#issuecomment-561074421,1,['robust'],['robustness']
Availability,"Hey @maxime-tournier ,. You bring valuable points here. You are absolutely right, it is not that trivial, I'm starting to see it now. Here is what I observed during my tests (I'm working part time on this, it is entirely possible that I come back later to correct those statements of mine :) ). > you need to properly initialize/finalize sofa and core modules (see Main.cpp in the runSofa application). Yes. I'm usually leaning towards making most of the functions available and let the script use what it need. So if I'm writing a _runSofa_ like application in python, I should be able to init the components there, create/set the simulation, add the needed message handlers to the MessageDispatcher, and set the paths (plugin, config, sofa prefix) there. If this complicate too much the python script, than making optional python util scripts that set all of this for the user could be a clean option. But I don't think the library should do this in the user's back without transparency. > you need to handle the case where the loaded scene already has python scripts, and let the PythonEnvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. Ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:465,avail,available,465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['avail'],['available']
Availability,"Hey guys, . so, I checked the PR and I have the following comments:. - The examples of the original PSDE contribution get broken with these commits, so this should be fixed. If you want to provide new examples, that’s also ok! In the case of PSDEExamples/01-basic/ changing the type string in DataEngine.py from 'd' to 'int' already fixes the problem. For PSDEExamples/02-advanced/ I couldn’t find the error immediately. . - Regarding the question of linking and automatic deriving of data-types for Inputs my opinion is similar to Damien’s:. > Sure...what we want to do is to create a new data with the exact same type of the data pointed by a link. So making a clone of an existing data (to get its type) and then initialize its parent would do the trick without needed all the factory and datatypename things. . I also do think that the existing linking mechanism could be complemented by a cloning feature that creates a copy of a BaseData object. Probably just a clone()-function in BaseData. This would avoid the implementation of a “heavy-weight” factory, like Damien said. To add this data to the correct object (the PSDE) it is only necessary to set the owner, I think. Finally, linking is done by using setParent(). In this way the user can program freely in C++ without worrying about whether his newly defined compound type needs to be made available in the factory. - Regarding the question of linking and automatic deriving of data-types for Outputs my ideas are not as concrete, but maybe helpful. For me there exist two cases:. 1) The Output of the PSDE is connected to an Input of a sofa-object that has static datas, e.g., sofa-objects whose code is written in C++. An example for such an object would be MechanicalObject (MO) that always has the same data (position, velocity, force, …). 2) The Output of the PSDE is connected to a scripted sofa-object, like another PSDE or similar. For case 1.:. It could be possible to define a special BaseData with a name but vacant type. This ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416:402,error,error,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416,1,['error'],['error']
Availability,"Hi @EulalieCoevoet,. Thanks for you PR. . Given that this PR: ; - [x] successfully compile in our settings on the CI.; - [x] does not generates new warnings or test failure. ; - [x] shouldn't break existing scenes.; - [x] add new features & corresponding tests. ; - [ ] does not break API compatibility. ; - [x] is now more 1 week old. Its breaks the API compatibility but this is to match the sofa coding style so I suggest a merge (@hugtalbot). @EulalieCoevoet about your question about PlaneROI I suggest you to make an issue dedicated .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/108#issuecomment-273826140:165,failure,failure,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/108#issuecomment-273826140,1,['failure'],['failure']
Availability,"Hi @Iwillsd! Sorry for the late response. By any chance, are there any errors when you create the OmegaDriver object? Does ForceDimension SDK examples work for you?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1327495038:71,error,errors,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1327495038,1,['error'],['errors']
Availability,Hi @JavadZallaghi ; You are here on the GitHub issues. GitHub and its issues are made for developers. . I see that you already have an open topic on the [forum](https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/). We will provide a reply there as soon as possible. Best wishes.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1943#issuecomment-803979219:214,error,error-in-first-launch-of-sofa-after-installation,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1943#issuecomment-803979219,1,['error'],['error-in-first-launch-of-sofa-after-installation']
Availability,"Hi @RainVector ; Thank you very much for your interest in our open-source project.; Some codes are available in SOFA for fluid simulation but it is not widely developed. You can for instance find: ; - examples in _examples/Components/behaviormodel/_; - and 2 plugins (in _applications/plugins_):; - SofaEulerianFluid ; - SofaSphFluid. Note: for user questions, please the [SOFA online forum](https://www.sofa-framework.org/community/forum/) instead. GitHub is restricted for developer discussions.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/833#issuecomment-440808519:99,avail,available,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/833#issuecomment-440808519,1,['avail'],['available']
Availability,Hi @ScheiklP . Thanks for the PR. The SphereCollisionModel works historically without a topology (relying on the mstate). The tests are failing due to the absence of a PointSetTopology. What could be done is to change the warning into an info saying that no topology is found therefore no topological change will be supported. What do you think?. Another change in order to make the component topologically robust would be to make the data `radius` as a PointData:; ``` cpp; Data< VecReal > radius; ///< Radius of each sphere; ```. should become; ``` cpp; PointData< Real > radius; ///< Radius of each sphere; ```; (connected to a topology handler),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210431318:407,robust,robust,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210431318,1,['robust'],['robust']
Availability,"Hi @ScheiklP, ; i built sofa from source using python 3.9.18. The problem is SofaPython3 plugin is not present in sofa when i run it and it's not in the plugin list either, even though, when building sofa, i don't get any errors. . Thank you for your help.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1784870087:222,error,errors,222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1784870087,1,['error'],['errors']
Availability,"Hi @ScheiklP, i have a doubt: i managed to configure sofa with cmake, when i add sofapython3 plugin from the camke-gui i don't get any errors but when i check the plug-in list (plugin_list.conf.default), sofapython3 is not there. is it normal?. thank you!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1768181910:135,error,errors,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1768181910,1,['error'],['errors']
Availability,"Hi @ScheiklP, sorry to bother you again. I am trying to install sofa from source so that i can use a =>3.9 version of python as you suggested. I'm facing some problems though. when i compile sofa with cmake i get this error ; 'Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.18"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package)'",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761148804:218,error,error,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761148804,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi @ScheiklP, thank you for your reply. I did as you said and now it seems to find sofa module and python. But it gives another error i can't solve, which happens when it tries to install gym and it says '..error in gym setup command: 'extras_require' must be a dictionary whose values are strings or lists of strings containing valid project/version requirement specifiers. '",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757820378:128,error,error,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757820378,2,['error'],['error']
Availability,"Hi @alxbilger ,; Ah, I see... Setting `invertData->n = n;` sadly does not prevent the segfault.; ```; [WARNING] [SparseLDLSolver(SparseLDLSolver)] Invalid Linear System to solve. Please insure that there is enough constraints (not rank deficient).; [ERROR] [FullVector] in vector<FullVector<double>> 0x555d8bdcea90 size 0 : invalid index 0; sofa::linearalgebra::FullVector<double>::checkIndex(int) const; sofa::linearalgebra::FullVector<double>::operator[](int); sofa::component::linearsolver::direct::SparseLDLSolver<sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > >, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::solve(sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > >&, sofa::linearalgebra::FullVector<double>&, sofa::linearalgebra::FullVector<double>&); sofa::component::linearsolver::MatrixLinearSolver<sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > >, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::solveSystem(); ```. So the proper way would be changing `invert` from a `void` to `bool` return type and then checking that in `solveSystem`, right?; Is there a way to do that, without having to change the return type for all the solvers in `linearsolver.direct` ? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327786743:250,ERROR,ERROR,250,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327786743,1,['ERROR'],['ERROR']
Availability,"Hi @alxbilger . Thanks for reviewing the PR. ; BaseData::read is an existing function in sofa, that do the reading from a stream into a data field. . The PR does not change only how it was implemented. Before the PR, Data::read is duplicated for every type of data stored in the data field while in most of the case the reading pattern is the same. With the PR the ""shared"" behavior is moved into the base class which allows to enforce a consistent behavior regarding error checking & resetting the value when the field to parse is empty.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1265265315:468,error,error,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1265265315,1,['error'],['error']
Availability,"Hi @alxbilger thanks for the tip! :); Adding this check does not fix the segfault in my scene.; The call that segfaults is `Mfiltered.getColsIndex()` of the solver's `sofa::linearalgebra::CompressedRowSparseMatrix`. I then tried moving the check up, just to make sure that's the issue; ```; int n = M.colSize();. if(n == 0); {; msg_warning() << ""Invalid Linear System to solve. Please insure that there is enough constraints (not rank deficient)."" ;; return true;; }. int * M_colptr = (int *) &Mfiltered.getRowBegin()[0];; int * M_rowind = (int *) &Mfiltered.getColsIndex()[0];; Real * M_values = (Real *) &Mfiltered.getColsValue()[0];. if(M_colptr==nullptr || M_rowind==nullptr || M_values==nullptr || Mfiltered.getRowBegin().size() < (size_t)n ); {; msg_warning() << ""Invalid Linear System to solve. Please insure that there is enough constraints (not rank deficient)."" ;; return true;; }; ```. But ran into another error that follows; ```; [WARNING] [SparseLDLSolver(SparseLDLSolver)] Invalid Linear System to solve. Please insure that there is enough constraints (not rank deficient).; [ERROR] [FullVector] in vector<FullVector<double>> 0x5595582fbf00 size 0 : invalid index 0; sofa::linearalgebra::FullVector<double>::checkIndex(int) const; sofa::linearalgebra::FullVector<double>::operator[](int); sofa::component::linearsolver::direct::SparseLDLSolver<sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > >, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::solve(sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3u, 3u, double>, sofa::type::vector<sofa::type::Mat<3u, 3u, double>, sofa::type::CPUMemoryManager<sofa::type::Mat<3u, 3u, double> > >, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigne",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327688688:918,error,error,918,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327688688,1,['error'],['error']
Availability,"Hi @bcarrez ; It seems the CI for Win-VS2015 is failing ""Build step 'Execute shell' marked build as failure""",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/143#issuecomment-275331762:100,failure,failure,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/143#issuecomment-275331762,1,['failure'],['failure']
Availability,"Hi @damienmarchal ,. So point by point,; - _totalMass is set as readOnly in DiagonalMass while it is not in UniformMass_ : This should be implemented in a uniform way. On my opinion, mass components can (should) be initialized either with a massDensity or a totalMass (so not readOnly).; - _readOnly flag_ : I never really used this flag. But readOnly is not a bad thing, but it should be working !; - _no error message associated to readOnly_ : a warning should indeed be notified; - _totalMass parameter is re-computed in the un-specialized implementation of the reinit function_ sounds ok to me, but indeed, the specialization for rigid/vec should forward to this implementation; - _data f_mass_ : I consider the name of this data pretty bad, it denotes the computed nodal mass. So readOnly can have a sense. What do you mean exactly with ""not tagged in the same way as totalMass"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/36#issuecomment-257833518:406,error,error,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/36#issuecomment-257833518,1,['error'],['error']
Availability,"Hi @damienmarchal ; I closed this PR because I think this is the wrong way of doing binary data bindings..; First of all, using binary data serialization for special data types bindings forces the user to manually add deserialization in their python scripts, which is not good, and a source of error... I looked at the way the plugin Image made their ImageData bindings, and I will go for this approach for my datatypes. As for actual byte arrays bindings, that could still be an interesting feature, but what I did wouldn't be the proper way of binding byte arrays: for serialization to python, the size is known thanks to the std::string container, so it is possible to serialize to python the way I did in this pr. But desserialization to c++ would not work out, since there would be no way to know the size of the string to retrieve. If necessary, instead, a new TypeInfo could maybe be added to the interface of AbstractTypeInfo and VirtualTypeInfo, that would provide information about the byte array size, so that desserialization could be implemented. This explanation might not be very clear, I apologise in advance =) Maybe we can talk about this on Wednesday at the sofa meeting.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/416#issuecomment-331833780:294,error,error,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/416#issuecomment-331833780,1,['error'],['error']
Availability,"Hi @damienmarchal,. If I understand correctly, FRICTIONLESS is global mu <= 0 and CONSTANT is a global mu > 0 ?. If so, then the semantics are not quite right since you can still get frictionless contacts with mu1 = 0, mu2 >0 and either MINIMUM, GEOMETRIC or PRODUCT mixing. . And if not, then please clarify :-). In any case I would favour clamping negative mu to zero together with some warning displayed since mu < 0 is a modelling error anyways.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/81#issuecomment-265500188:435,error,error,435,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/81#issuecomment-265500188,1,['error'],['error']
Availability,"Hi @fbridault could you share your CMakeCache.txt?; I can't reproduce this error on Windows (tried with CMake 3.15.[0,1,2]) :confused:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-527074240:75,error,error,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-527074240,1,['error'],['error']
Availability,"Hi @fredroy, @damienmarchal, @hugtalbot, @alxbilger, . Can this be reopened for discussion ? ; My pros for reverting this or keeping the python naming instead of xml:. - It breaks *absolutely all my scenes*... ^^ and I guess I'm not the only one. ; - The warning saying ""you have two components with the same name"" can often help you catch a problem/error/bug in your scene. It happened to me, like a lot. ; - Having all those zeros impedes the readability. This may look like nothing, but for users it's like dirty code, it doesn't help. ; ![image](https://user-images.githubusercontent.com/12150715/156422897-605f2925-5a6f-4570-b7ae-e230d52071ee.png)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1057258437:350,error,error,350,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1057258437,1,['error'],['error']
Availability,"Hi @fredroy, thank you for your reply. I tried as you suggested but i got this error:. ' [ERROR] [DAGSimulation(Simulation)] Cannot load file 'C:\Users\gfurn\Downloads\liver.py': extension (py) is only supported if the plugin SofaPython3 is loaded. SofaPython3 must be loaded first before being able to load the file. '",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1786726505:79,error,error,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1786726505,3,"['Down', 'ERROR', 'error']","['Downloads', 'ERROR', 'error']"
Availability,"Hi @fredroy,. Thanks for the PR. ; What about removing one of the two viewer ? Does it still make sense to have two redundant implementation in Sofa?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3454#issuecomment-1305568965:116,redundant,redundant,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3454#issuecomment-1305568965,1,['redundant'],['redundant']
Availability,"Hi @jnbrunet ; The scene looks really bad constructed:; - the gravity is set implicitely to 9.81 in y direction; - no mass (therefore nan in output); - and physically a very low stiffness of your material. I wrote this instead:; ```; <?xml version=""1.0""?>; <Node dt=""1"">; <StaticSolver />; <CGLinearSolver name=""CGLinearSolver"" printLog=""1"" iterations=""2500"" tolerance=""1e-08"" threshold=""1e-08"" />; <RegularGridTopology name=""grid"" n=""3 3 25"" min=""0 0 0"" max=""15 15 180"" p0=""0 0 0"" />; <MechanicalObject template=""Vec3d"" name=""dof"" src=""@grid"" showObject=""1"" showObjectScale=""5"" />; <HexahedronSetTopologyContainer src=""@grid"" />; <HexahedronSetGeometryAlgorithms />; <HexahedronFEMForceField template=""Vec3d"" method=""small"" poissonRatio=""0.45"" youngModulus=""1.5e5"" />; <BoxROI name=""fixedROI"" box=""0 0 -3.75 15 15 3.75"" drawBoxes=""1"" />; <FixedConstraint indices=""@fixedROI.indices"" />; <BoxROI name=""forceROI"" box=""0 0 176.25 15 15 183.75"" drawBoxes=""1"" />; <LinearForceField points=""@forceROI.indices"" times=""0 1"" forces=""0 0 0 0 -0.00166667 0"" />; <UniformMass mass=""1"" />; </Node>; ```; I just added a mass and modified the stiffness value.; Can you give it a try ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/539#issuecomment-351352123:359,toler,tolerance,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/539#issuecomment-351352123,1,['toler'],['tolerance']
Availability,"Hi @lagarkane . Maybe I have not clearly understood what you want to achieve but what about something like the following:; ```cpp; void YourObject::parse( BaseObjectDescription* arg ); {; /// Initialize the possible list of options by parsing ""manually"" the list:; if (arg->getAttribute(""availableOptions"")){; /// vectorFromString is not existing...but this is just to give you the idea ; OptionGroup options(vectorFromString( arg->getAttribute(""availableOptions"") ))) ; ; d_myOptionGroup.setValue(options) ; . /// don't remove the availableOptions so that it is parsed as ""usual"" ; /// and it will be correctly saved. ; } ; ; /// Call the normal parse function. ; Inherit1::parse(arg) ; ; }",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/363#issuecomment-322543991:288,avail,availableOptions,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/363#issuecomment-322543991,3,['avail'],['availableOptions']
Availability,"Hi @lyl00 ; Thank you for your interest in SOFA. Could you please post the error return by GitHub or any further information?. NB: please, next time use the [SOFA forum](https://www.sofa-framework.org/community/forum/) for non-developer questions (building, using SOFA).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1362#issuecomment-623281806:75,error,error,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1362#issuecomment-623281806,1,['error'],['error']
Availability,Hi @maddin200 are you available to review this PR?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1136#issuecomment-528468238:22,avail,available,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1136#issuecomment-528468238,1,['avail'],['available']
Availability,"Hi @sescaida @damienmarchal,. I made it possible to pass inputs to PythonScriptDataEngines directly through the call to createObject(), which makes it more similar to how components are created in the SceneGraph normally. the example in PSDEAverageEngine.pyscn show the behavior. There are a few downsides in the current implementation though:; - I didn't investigate the effects on error handling (creating input data fields while the field should actually be considered as an ""unused data field name"" for instance..; - I had to hack my way around, probably because I got a bit lost in the SofaPython codebase, trying to figure out how the bindings worked... so the implementation is probably not the cleanest possible.. :/; - The current implementation of the parse() function binding does not pass the BaseObjectDescription object to python, which makes it impossible to retrieve the ""unused datafields"" that we need for the automatic input bindings. Thus I added a ""datalinks"" function, called after the parse() function in python, that takes the key/values pairs of unused attributes passed to createObject, and creates new inputs from them. I chose to create a separate function for that because I didn't dare modifying the behavior of the parse function itself, but it might be worth passing the attributes directly to the python parse method instead, since it is how it's done on the C++ side of things...?. Looking forward to your opinion :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407769458:296,down,downsides,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407769458,2,"['down', 'error']","['downsides', 'error']"
Availability,"Hi @sofa-framework/reviewers,. Here is a follow up of NG project for April. ; The project is huge and still requires a lot of iterations to get the best refactoring process but we are going in the right direction :+1: . ## Discussions; It was decided to push all NG changes to [a specific NG branch](https://github.com/sofa-framework/sofa/tree/ng) on sofa-framework.; Still, all the developments will go through the PR process. Reminder: your feedback is VERY important, we need it to adapt our work and minimize future rollbacks. **Do not hesitate to put any comment in the pull-requests.**. ## Refactoring and adapting SPM for Sofa.Component.Utils. SPM is the set of scripts we use to make our work easily reproducible. You can check it out [here](https://github.com/guparan/sofa2ng). This work made me realize that it will be very hard, if not impossible, to anticipate every subtle change needed by the refactoring.; - Do we want SPM to be an all inclusive script to refactor completely SOFA? ; every refactoring is unique and needs to change SPM ; -> namespace handling ; -> includes refactoring; - Or should we prefer it to be an easy-to-use script to **bootstrap** any refactoring? ; -> very specific changes will have to be done by hand. I propose to go for solution 2 and to provide a git patch covering the work done after SPM job (fixing includes, fixing namespaces, ...). The progress of this task is **85%** since I now have to create the patch and to provide everything in the PR. ## Moving on with Sofa.Helper.Bvh; Following [the latest iteration on NG architecture](https://annuel2.framapad.org/p/sofang-v3) and Damien's first draft in his [cleanTheMessStep1](https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng) branch, I started refactoring SofaFramework with Sofa.Helper.Bvh. This task needed me to heavily change/adapt SPM. It contributed to make me prefer solution 2 above. The progress of this task is **60%**. TODO:; - update the recipe with latest SPM changes (namesp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811:520,rollback,rollbacks,520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811,1,['rollback'],['rollbacks']
Availability,"Hi @sofa-framework/reviewers,. Here is a follow-up of SOFA-NG for June.; Only a few news for this month. ## STC#5; I presented you the evolution of SOFA-NG and the future steps.; You can retrieve the presentation [here](https://drive.google.com/file/d/1ig-VoMDSVVg22YQDdZBP62kUYPF283FZ/view?usp=sharing). ## Modularization; Two SOFA modules have been pluginized by Damien: [SofaSparseSolver and SofaPreconditioner](https://github.com/sofa-framework/sofa/pull/668).; The idea is to make existing modules really modular: can be disabled, clean dependencies.; This work joins NG work but starting from the top - the ""leafs"" - of SOFA. ## NG version of SofaFramework; No notable evolution on this task. Unfortunately my time has been taken on other purposes. _____________________________________________________. Next month will hopefully be way more NG-oriented for me so don't worry, it's still alive!; As always, do not hesitate to comment. :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-401724059:894,alive,alive,894,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-401724059,1,['alive'],['alive']
Availability,"Hi @thomas-lemaire,. About the ""\n"" ... why would it breaks windows console printing ? Windows and linux does not have the same ""\n"" but a windows app emits the ""\n"" the windows system understand. About using ""\n"" or better std::endl. My target was to supports messages written with a simple markdown syntax for which the ""\n"" is not an explicit line break, it is "" \n"" (double-space before the \n) . So i replaced std::endl/sendl by this "" \n"" ; But I found that ugly and hard to read so I finally made 'msgendl' that contains the explicit markdown line break, but I forgot to remove the old manually placed "" \n"" I used all around. . Now I will have to re-fix the old "" \n"" all around (but this is nothing :)). Do you think msgendl is ok ? ; Do you like the msgendl ?. The change on how the messages are printed in runSofa is visible here: ; ![newmessage](https://cloud.githubusercontent.com/assets/12644882/23545144/72df7122-fffa-11e6-8c53-fc9a4415c493.png). The two panels Output/Error are now merged into a single ""Message"" one and the panel now shows in its title the number of messages (in this PR I removed the column with ""suggest a better message). In the Graph view there is also a small alert (green, yellow, red) on top of the icons showing the kind of message an object have. . EDIT: I fixed the "" \n""",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190#issuecomment-283905162:984,Error,Error,984,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190#issuecomment-283905162,1,['Error'],['Error']
Availability,"Hi @untereiner @guparan . The commit https://github.com/sofa-framework/sofa/pull/700/commits/15a74a5966296d0611e617eaa9f2af4848251f36 seems to lead to a compilation failure. When removing it, ubuntu and MacOS are compiling.; Windows crashes:; `error C2679: binary '>>': no operator found which takes a right-hand operand of type 'const sofa::core::cm_topology::TopologyChange *' (or there is no acceptable conversion)`; Centos failure was due to assimp:; `ninja: error: '/lib64/libassimp.so', needed by 'lib/libColladaSceneLoader.so', missing and no known rule to make it`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-440993615:165,failure,failure,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-440993615,4,"['error', 'failure']","['error', 'failure']"
Availability,"Hi @zhangm365 ; thanks for the notification, could your solution / the problem causing this error please ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1494#issuecomment-696157313:92,error,error,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1494#issuecomment-696157313,1,['error'],['error']
Availability,"Hi Adrien,. Thank for the PR, and the detailed description. Few comments at first glance:; - are the class Callback & CallbackImpl not equivalent to the std::function and std::bind that are in the c++11 STL ? ; - about the ""if(m_updating)"" in the update function. I think it is there to avoid loops. Does it make sense to add a message warning if this happens ? ; - we don't use #pragma once in SOFA as this is not part of the standard . But I think the decision make sense 10 years ago but as the compiler support is now rather bit maybe we should switch to use it as managing the #include SOFA_SUPPER_LONG_NAME_H..is error prone. @guparan, do you think we can make a script to convert the complete code base for pragma once ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911#issuecomment-459511168:619,error,error,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911#issuecomment-459511168,1,['error'],['error']
Availability,"Hi Christian,. Using a tolerance is working, but is this normal that the constraint is not exactly applied? (although it was before)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-388276678:23,toler,tolerance,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-388276678,1,['toler'],['tolerance']
Availability,"Hi Damien,. I haven't had much time to devote to this as of late, but here is some quick feedback so far:. - lots of code need modification (like *lots*), deep down the core and you need lots of patience to recompile everything over and over again,; - it makes little sense to optimize data initialization if you don't optimize links as well since they use a similar initialization mechanism,; - the speedups in my test scenes were disappointing, being largely dominated by other code paths (contact detection and response mostly, since this is the main use case as the graph gets dynamically altered at every time step),; - IIRC there was a data/link notification mechanism on insertion that could cause accidental quadratic complexity when used sequentially (I'll try to fix this one soon),; - beware of CollisionGroup managers that was causing huge slowdowns in my case for no visible reason as there was a single group. The takeaway: this is probably premature optimization at this point. I might give it another shot in the next few months as my work may depend on it but until then, don't expect major changes on this front. (edit: typos)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270123574:160,down,down,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270123574,1,['down'],['down']
Availability,"Hi Damien,. Thanks a lot for your answer!. Regarding the BarycentricMapping, I indeed wasn't sure of which of the input and the output was driving the other (although I knew that the mechanical model was supposed to drive the collision model). It is definitely clear with your explanation. So I understand that there is no bug regarding the behaviour of the BarycentricMapping (as you pointed out), as it is not suppose to work for another input types than Vec3d.; For me, the (very minor) issue would rather be with the error message, as you said in your NB. My apologies for the typo, indeed, I hadn't paid attention...; As for the unexpected behaviour, I haven't tried yet to track down what is happening. As I'm looking to use a reduced topology for my collision model, I might investigate it more in a near future. If so, I'll report here anything I find unsettling.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487582657:521,error,error,521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487582657,2,"['down', 'error']","['down', 'error']"
Availability,"Hi Damien,; aren't the two features redundant ?; I was actually already using this functionality for a repository including several plugins.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/530#issuecomment-347539831:36,redundant,redundant,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/530#issuecomment-347539831,1,['redundant'],['redundant']
Availability,"Hi Dr Peterlik !. Happy new year :-) . I don’t know why PR #797 <https://github.com/sofa-framework/sofa/pull/797> is breaking our child forcefield (I didn’t know that it was still alive…) but we made an other baby with Olivier Goury :-)) to map the matrix of a forcefield. MechanicalMatrixMapper ; It is generic and is working with ALL mappings, even multi mapping (as soon as they implement applyJt(SparseDerivMatrix…). You should try (an example <https://github.com/sofa-framework/sofa/commit/0452e53c95c73c69d42cb3a8f2358b9423078b40>) ;-). https://github.com/sofa-framework/sofa/commit/9d33c8746e8f60c4f49b21b96198881173109d04 <https://github.com/sofa-framework/sofa/commit/9d33c8746e8f60c4f49b21b96198881173109d04>. Still, it is surprising that the PR on the barycentric is breaking the code. . Christian. > Le 11 janv. 2019 à 17:27, IPeterlik <notifications@github.com> a écrit :; > ; > Hello,; > ; > I am coming back to this issue.; > ; > The problem is this: in general, mappings in SOFA do not propagate stiffness matrix (more precisely MBK matrix) from slave to master, thus, any direct solver (such as LDL) is incompatible with mechanical mapping. Since this situation was in place already in 2010, I implemented at that time (with help of @ChristianDuriez <https://github.com/ChristianDuriez>) a ""temporary"" workaround: a special forcefield, which maps the stiffness matrix from the slave node to the master node. This allowed us to use LDL solvers with mechanical mapping. Otherwise, several papers would have never seen the light of day, e.g., on the composite liver model (sure, I could have done something more useful instead of writing them, but anyway... you get the idea).; > ; > Now, PR #797 <https://github.com/sofa-framework/sofa/pull/797> has brought an end to our happy life with the now almost teenaged temporary solution that is not working anymore with BarycentricMapping which is kind of surprising to me since as long as the mapping produces the correct matrix J, there sho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/871#issuecomment-453591303:180,alive,alive,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/871#issuecomment-453591303,1,['alive'],['alive']
Availability,"Hi Erik, . Thank for your question. The caller's is the one that call the create function. Some of them looks if the arg's log is empty and if not they consider this is an error. ; The problem is that for the deprecation message they should not be considered as error but real deprecation message. This is what I do in this PR. The deprecation message are handled separately, out of the arg's log, so the arg's log behave as usual and deprecation messages are properly handleded.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/939#issuecomment-465237578:172,error,error,172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/939#issuecomment-465237578,2,['error'],['error']
Availability,"Hi François,. Thank for this PR. Currently SofaTest contains two different things: 1) a set of utilitary classes to implement tests and 2) specific tests on component. . To me the right approach is to split that in two. The utility classes should be moved into SofaKernel and be part of the framework as we want to use the utility classes to make test. While the specific tests can stay on SofaTest. . Once that done the dependency to SofaTest can be removed. But the test in framework are still using the helper class including the ability to generate failure based on sofa error messages. . EDIT: I forgot to say that your are totally right saying that these backward dependencies are bad and have a lot of consequence on modularization & compilation time in Sofa. As far as I can say @maxime-tournier is also working actively on that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/455#issuecomment-335746406:553,failure,failure,553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/455#issuecomment-335746406,2,"['error', 'failure']","['error', 'failure']"
Availability,"Hi Guillaume,. After a quick look in the mesVTKLoader class you are totally right there is bug theres. This is related to the fact the that the VTKLoader is parsing the ""scale"" argumente using atoi/atof. These functions depends on the LC_LANG/LANG environment variables. . Using 0,001 is not valid but does not generate an error.; We should fix that. As this is code that I'm cleaning on I can probably fix that unless someone else want to do that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/151#issuecomment-275222038:323,error,error,323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/151#issuecomment-275222038,1,['error'],['error']
Availability,"Hi Guillaume,. Thank for the fix. Sorry about the the tailing tests since the beginning... I was assuming that Jenkins would correctly report this information with its regression/failure status & tracking. . DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263480331:179,failure,failure,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263480331,1,['failure'],['failure']
Availability,"Hi Guillaume,. The problem of matrix reading was visible because of the UniformMass<Rigid3> was generating a warning at run-time. The test was designed to fail if the uniformmass generates such a warning or cannot read the given values. Finally the error was not in UniformMass but in Mat.h, so I fixed the problem and keept the written test (not failing now).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/993#issuecomment-484738528:249,error,error,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/993#issuecomment-484738528,1,['error'],['error']
Availability,"Hi Mathieu,. I see what you mean. ; ; The new implementation allows you to select precisely how gtest suceed or fail according to the messages emitted by a component by using either the MessageAsTestFailure or/and ExpectMessage RAII. . To update the old tests with *a minimal amount of effort* to restore the behavior you described. ; I think in each test setup we can simply add something like ; ```cpp; MessageAsTestFailure raii_warning(Message::Warning) ;; MessageAsTestFailure raii_error(Message::Error) ;; ```; I can devote some time to do that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/211#issuecomment-288386290:501,Error,Error,501,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/211#issuecomment-288386290,1,['Error'],['Error']
Availability,"Hi Quentin !; Thanks for the notice !. @untereiner I recall that you recently had a look at the VTKLoader in SOFA. Am I correct?; Did you face these warnings ?. Since the file is well loaded, we would simply need to update the loader to have only Warning (and no error msg) when facing these new metadata.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/652#issuecomment-387752616:263,error,error,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/652#issuecomment-387752616,1,['error'],['error']
Availability,"Hi all, it appears that PR #521 breaks several scenes. ; I'm fixing that in PR: #548 . In some of the problematic scenes the mechanical object does not have a mass so it was simply fixed by adding one. . For examples/Components/forcefield/TetrahedronDiffusionFEMForceField.scn I'm not sure the zero mass is the cause of the problem. . @hugtalbot any idea ? . Now more fundamentally I'm puzzled by the ; ```; if( fabs(den)<f_smallDenominatorThreshold.getValue() && nb_iter > 1 ); ```. As there is a division by 'den' just after the condition so if den == 0 (which seems to happens in several cases) and first iteration then the scene explode with nan-nan everywhere. . A more robust & user friendly approach should be implemented.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/539#issuecomment-354131222:675,robust,robust,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/539#issuecomment-354131222,1,['robust'],['robust']
Availability,"Hi all,. I will try to give weekly news on the runSofa2 project progress. . So let's start, ; here are runSofa2 recent merges:; - adding a new widget to handle DataFilename (which pop-up a file selector); - adding a new widget to handle Data<RGBAColor> ; - adding a new widget to handle Data<OptionsGroup> ; - add a button in the graph view to open the current scene in your prefered text editor. . recently opened merge requests:; - add the files needed to do testing of qml & sofaQtQuick component. ; - code cleaning around SofaApplication; - replace the DynamicContent drop down menu by a static one name ViewSelector. If you have time & interest please join the development effort. ; https://gitlab.inria.fr/ocarre/sofaqtquick",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/187#issuecomment-300765854:577,down,down,577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/187#issuecomment-300765854,1,['down'],['down']
Availability,"Hi all,. It seems there a lot of new test-scene failures since the merge of this PR. ; https://ci.inria.fr/sofa-ci/job/centos_clang-3.4_options/635/console. We probably need to fix that in a new PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/219#issuecomment-297932196:48,failure,failures,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/219#issuecomment-297932196,1,['failure'],['failures']
Availability,"Hi all,. It seems there is new test-scene failure since the merge of this PR. ; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""TriangleTopology""] Object type ""Bezier2MeshTopologicalMapping"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""TriangleTopology""] Object type ""Bezier2MeshMechanicalMapping"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""BezierCubicTriangleTopology""] Object type ""BezierTriangleSetTopologyContainer"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""BezierCubicTriangleTopology""] Object type ""BezierTetra2BezierTriangleTopologicalMapping"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""BezierCubicTriangleTopology""] Object type ""BezierTriangleSetGeometryAlgorithms"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""BezierTriangleMeshFromEngine""] Object type ""BezierTetrahedronSetTopologyContainer"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""BezierTriangleMeshFromEngine""] Object type ""BezierTetrahedronSetGeometryAlgorithms"" creation Failed; .... more in the logs....; ; We need to fix that in a new PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/222#issuecomment-297932539:42,failure,failure,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/222#issuecomment-297932539,8,"['ERROR', 'failure']","['ERROR', 'failure']"
Availability,"Hi all,. Thank Erik for the review of this PR. It seems there is one scene test failure that may be related ""RuleBaseCollisionManager"". @ChristianDuriez any idea where this could come from ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/901#issuecomment-458522196:80,failure,failure,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/901#issuecomment-458522196,1,['failure'],['failure']
Availability,"Hi erik,. You are totally right, . As far as i know there is no well defined error management pattern on sofa. Without using exceptions or changing function signature my current approch is, for each detected error, to emit an error messages with the msg_error() macro and set the componentState to invalid. Then in each function that needs a valid object...check it and exit if it is not.; Not perfect and rather invasive but at least the component does not crash sofa anymore.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278805067:77,error,error,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278805067,3,['error'],['error']
Availability,"Hi everybody, ; sorry for being late with my answer.; @guparan, as soon as the argument of asin is greater than 1, you have an invalid operation.; It doesn't matter how ""big"" is your error, it can be huge or infinitesimal.; In this case, it is due to numerical errors, that's why I said 10e-15.; If it is the proper way, I can set an epsilon, but then how ?; As @untereiner says, why 1e-15 instead of 1e-11 ?; How do you set a parameter on numerical errors ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-343083400:183,error,error,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-343083400,3,['error'],"['error', 'errors']"
Availability,"Hi everybody, I'm trying to work on this PR, but I'm quite busy with my PhD in this moment and I don't think I will be able to finish it within a short delay.; As suggested by Francois, I added the error message in Quater_test.cpp.; Now is failing, as with the old-code (without my commit) NaN values may appear. ; In Quater.inl (function toEulerVector) I went back to the old code commenting the modifications I made with my commit. This way, if someone else takes the hands on this PR, he will better know what to do.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-346567483:198,error,error,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-346567483,1,['error'],['error']
Availability,"Hi everyone, Marc here :-). I remember I introduced the `init()` and `cleanup()` functions, so I'll add a few words of explanations. Bear with me, it's actually simpler that the length of my response may suggest. > So unless there is a compelling reason to leave it this way (and I would really like to know it). The trick which consists in using static variables to run dynamic initialization code (or cleanup code, for that matter) is an anti-pattern, for a couple of reasons:. * **determinism**: as @matthieu-nesme mentionned, the order of initialization of objects with static storage duration is undefined across translation units. This is the first reason why I introduced the `init()` functions: to make initialization deterministic and reliable. And this is the same reason why it's better to call those functions explicitely, at the _right_ time: the program will work correctly by design, not by coincidence;. * **readability** (or something like that): calling the initialization function ""manually"" makes programs more readable: you can just start from the `main()` function and understand what code is going to run without actually running the code inside a debugger (or reading the entirety of SOFA's source code);. * **choice** (or whatever): with an explicit call to `init()`, an application writer gets to decide both *whether* and *when* to initialize SOFA. ### Now... In the end, I didn't actually bother to search for any single piece of initialization code in SOFA and move it into the appropriate init() function, so the init() functions are pretty light, but the setup is there. Also, the static-dynamic-initialization trick is used all over the place in SOFA, and what happens in the init() functions is ridiculous compared to all the code that probably runs when SOFA is loaded, so here again it is a drop in the ocean, but, I think, a step in the right direction. ### Anyway... > What I don't understand is why the above code snipped does not simply cleanup() the library in ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280028946:744,reliab,reliable,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280028946,1,['reliab'],['reliable']
Availability,"Hi guillaume,. is there a error/warning when someone is using a removed componet saying that the component has been removed ...and need to contact us for re-adding it ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/922#issuecomment-461346646:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/922#issuecomment-461346646,1,['error'],['error']
Availability,"Hi mathieu, ; ; This is a good question. . I recently wrote a lot test for sofa component and it appears to me that more than half of my tests cases are in fact verifying that component correctly rise errors or warnings when they are used improperly. Making these tests is very important to avoid un-detected bugs on the error handling code paths and it bring a lot to the general quality of sofa. . About the fact that the ""error as test failure by default"" is covering 99% of our tests... to me this is an indication that our tests are only covering half of the things they should and I'm not sure we should facilitate this behavior. . This is why I came up to making the things explicit in each test because it force the test writer to specify what are his underlying assumption and expectation for each of his tests making things very clear. In addition it put in front of his eyes what he is testing.. and what he is not testing. . PS: I really like the very detailed test failure that are reported with the explicit approach, we have either the filename & lineno of the failing test as well as the location of the message emission. ; eg: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/DilateEngine_test_0/NormalBehavior/. EDIT: Your question make me think that some way to improve the things so maybe we can discuss what are the desirable features and how to expose them to the developpers. This is very hard because it is connected to lack of standardized way our code base reports errors (not exception, some uses error codes ,some uses messages). But I'm very afraid of starting such kind of very impacting discussion (I want to do UI ;)). In the meantime I suggest to use this PR. . EDIT2: what should i do with this:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/TrianglePressureForceField_test_0/trianglePressureForceFieldTest/ ? ; 1) Should I ignore the warning in the test generation ? ; 2) Should the function be pure virt",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197:201,error,errors,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197,4,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,"Hi matt, . Can you have a look at my last version...the one that mimic the gtest API. ; It is not solving the point you are addressing but I see good things in this solution as it makes everything looking very consistant and in a test, no one complain there is a lot of EXPECT_ ... so adding few more to check the message behavior looks very fine to me. ; In addition it also report correctly where the problem arise instead of reporting that the problem happens in the base class. . Now about your suggestion... I like it because it is more like saying that everything that is not explicitely allowed is a failure and I really support that. I'm not yet sure how to mix the two things but we will find that ;). PS: have you noticed that if we makes warning a failure by default we will have +30 test failure in the current sofa (which is fine to me because these failures a either showing a problem or a not precise enough test). . EDIT: I may have a drafted mix between the two approach soon.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288691167:607,failure,failure,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288691167,4,['failure'],"['failure', 'failures']"
Availability,"Hi matt,. 1) Color are not disabled in runSofa for me. It is only one line that disable them in Sofa_test.cpp and I don't see why it would impact something else. Do you have any idea ? ; 2) Fatal is already part of the default mode. ; 3) I removed Warning&Deprecated by default ; 4) There is no need to change all the tests if in the future if we want to reactivate Warning&Deprecated by default, we will just have to change few lines in Sofa_test.h.; Maybe my scoping examples was not clear but the whole system is scoped per type of message so EXPECT_MSG_NOEMIT(Error) in tests have not consequence on the fact that you can add EXPECT_MSG_NOEMIT(Warning) in Sofa_test to catch all warnings. ; Do you see what I mean ? . About explicit test vs default mode... ; To me if the only aspect we care is how fast we can disable/re-enable tests failures then the default mode in Sofa_test is great. But is this the only aspect we care ? ; What about the fact that default mode is reporting useless filename&line (.../Sofa_test:93). Because of that I loose time each time I have to investigate test failures. On the contrary explicit messages specifications reports real file&line and allow to narrow the problem to very precise code location which save time. And these savings sums up each time someone is looking at tests failures. . In general I write a test once... but investigate failures several time... so I find it worth the effort of spending a bit more time on writing a good test with narrow message catching because they proved to saves time while investigating failure. . This is a totally different story with the time saving of changing the default mode by changing Sofa_test. It saves time as long as we are hesitating on what should be the default mode but after that it will slow down all failure investigations. . So... I made my best to explain why I care of explicit test but the important things to me are:; - what do I have to change so that PR can be be merged so that I can close it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008:564,Error,Error,564,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008,2,"['Error', 'failure']","['Error', 'failures']"
Availability,"Hi matt,. I made a new version mixing you expectations and mine :) ; The implementation is probably drafty but I like the general API...; Two aspect I like is that:; - it is ""incremental"", each time you add more EXPECT_MSG_ in the code better are the narrowing of the errors. ; - the defaut mode can be specified in a Sofa_test<> as well as in fact into any object or function body; - it is stack based so we restore the context when an area is left. To give you a look of how it is (the V2 stuff are just transitional of course):; ```cpp; #include <SofaTest/Sofa_test.h>; using sofa::Sofa_test;. #include <SofaTest/TestMessageHandler.h>; using sofa::helper::logging::GtestMessageHandler ;. /// We can define a default policy for a complete class this way so that if not more; /// expectation are given this generates test failures.; class Sofa_test2 : public Sofa_test<float>; {; EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;; };. class TestMessageHandler_test : public Sofa_test2; {; public:; void defaultTestBehavior(); {; msg_deprecated(""HERE"") << ""This should generate a failure"" ;; msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a failure"" ;; }. void catchingTestBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should not generate a failure"" ;; msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. /// THIS TEST SHOULD FAIL.; void expectAMessageissingBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should not generate a failure"" ;; //msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure but with line number close to "" << __LINE__ ;; msg_error(""HERE"") << ""This should generate a test falure wi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643:268,error,errors,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643,3,"['Error', 'error', 'failure']","['Error', 'errors', 'failures']"
Availability,"Hi raffaella,. We really appreciate feedback & suggestion, so thank you. . On the Python side we are currently actively working on improving the whole way to report error. This take place in PR #304 ; So it is the right moment to have that to be improved because release the next sofa release (17.12) will change things. . More generally Sofa messages are from ok to really bad but we lack (wo)man-power to fix all that so If you or anyone feel the envy to participate on this kind of task please don't hesitate because it is very important to have good error messages. . Damien.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/333#issuecomment-315892439:165,error,error,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/333#issuecomment-315892439,2,['error'],['error']
Availability,"Hi remi,. Thanks for the PR. ; Would it be possible to have that the top of the collision model hierarchy so that the activation filter feature is available for every model instead of Sphere ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1259#issuecomment-590580366:147,avail,available,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1259#issuecomment-590580366,1,['avail'],['available']
Availability,"Hi there,. You cannot load tests using the python binary because the sofa bindings are only available for the embedded interpreter. . There are some python tests under SofaTest/python IIRC.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329794323:92,avail,available,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329794323,1,['avail'],['available']
Availability,"Hi thomas,. Maybe the use of 'printLog' in my example was ambiuous sorry... . To me the 'error', 'warning', 'info' specifiers is the message 'type' and the set of types is un-ordred so it cannot be controlled via a single level. ; Eg of valid pattern: ; ```cpp; msg_info_when( msgInfoVerbosity < LOW ) << ""This is printed often"";; msg_info_when( msgInfoVerbosity >= HIGH ) << ""This is printed not so often"";; ``` . Eg of in-valid pattern (should be rejected in the PR :)): ; ```cpp; msg_error_when( msgInfoVerbosity < LOW ) << ""This is printed often"";; ``` . 'msgInfoVerbosity' only control the amount of info messages emitted so is nothing related to ; error/warning. . Instead of level we may also have a 'verbosityMask' to control precisely which message are emitted ; Eg:; ```cpp; msg_info_when( verbosityMask & INFO ) << ""blabha"";; ```; but I think *we shouldn't do that*. About the 'msg_debug'...it is problematic because there is also a different set of macro for developers that are called dmsg_info, dmsg_warning, dmsg_error()...these dmsg_* macros leads to NO-op when compiled in RELEASE. So my thinking is that we should remove the msg_debug macro and use their dmsg_* ones instead.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278609429:89,error,error,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278609429,2,['error'],['error']
Availability,"Hi!; Here's a simple test scene showing the problem:; ```<?xml version=""1.0"" ?>; <Node name=""lroot"" gravity=""0 -9.81 0"" dt=""0.02"">; <Node name=""Liver"">; <EulerImplicitSolver name=""cg_odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <SparseLDLSolver saveMatrixToFile=""true""/>; <!-- <CGLinearSolver name=""linear solver"" iterations=""1000"" tolerance=""1e-09"" threshold=""1e-09"" /> -->; <MeshGmshLoader name=""meshLoader"" filename=""mesh/liver.msh"" />; <TetrahedronSetTopologyContainer name=""topo"" src=""@meshLoader"" />; <MechanicalObject name=""dofs"" src=""@meshLoader"" />; <TetrahedronSetGeometryAlgorithms template=""Vec3d"" name=""GeomAlgo"" />; <DiagonalMass name=""computed using mass density"" massDensity=""1"" />; <TetrahedralCorotationalFEMForceField template=""Vec3d"" name=""FEM"" method=""large"" poissonRatio=""0.3"" youngModulus=""3000"" computeGlobalMatrix=""0"" />; <FixedConstraint name=""FixedConstraint"" indices=""3 39 64"" />; <Node name=""BUG"" >; <MechanicalObject name=""MO"" position=""1 1 1 2 2 2 3 3 3"" />; <Sphere radius=""1"" />; </Node>; </Node>; </Node>; ```. I have a very bad comprehension of these things, but apparently, Sofa concatenates the points in the mechanical object ""/dofs"" and ""/BUG/MO"", even though there is no mapping to link both objects.; If you replace the SparseLDLSolver by the CGLinearSolver, it will work, but that's because CG doesn't invert the matrix.; I am reporting @IPeterlik's explanations here, but Igor can undoubtedly explain better than me what's actually happening here.. :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/581#issuecomment-390925346:345,toler,tolerance,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/581#issuecomment-390925346,1,['toler'],['tolerance']
Availability,"Hi, ; I think I have solved the test problem.. by changing the test ! ; It was not designed to take into account the tolerance of the solver...; see commit:; https://github.com/fjourdes/sofa/commit/78b84592651836809078c18971300f6abde6806a",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-387922879:117,toler,tolerance,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-387922879,1,['toler'],['tolerance']
Availability,"Hi, ; What about the link error to ARTrack on windows ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-598146790:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-598146790,1,['error'],['error']
Availability,"Hi, ; could you specify which version of CGAL and which version of SOFA you are using.; Could you past the error log as well; Thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1334#issuecomment-621363273:107,error,error,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1334#issuecomment-621363273,1,['error'],['error']
Availability,"Hi, @Namdhari, ; as @fredroy mentioned, the error message could mean one of the dll used by CGALPlugin.dll is not present. If you are using the compiled version of CGAL, be sure to put the lib directy of CGAL into your env. paths or to copy the dll of CGAL inside the bin directory of SOFA where the CGALPlugin.dll is located. Anyway, if the header verison is working fine I think you can close this issue. thanks,",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402#issuecomment-637383460:44,error,error,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402#issuecomment-637383460,1,['error'],['error']
Availability,"Hi, @polyakovkrylo! Thank you for your reply. When I run the scene with lindhd.so.3, there were no errors, but there was a warning; `Gtk-Message: 16:20:05.799: GtkDialog mapped without a transient parent. This is discouraged.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution. ; - DefaultContactManager: 1 created with alias ""CollisionResponse"" ; - DefaultPipeline: 1 created with alias ""CollisionPipeline"" ; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; `. I was able to use the ForceDimension SDK examples as normal, and when I run the scene， the device was already connected but couldn't do anything, which confused me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1328008865:99,error,errors,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1328008865,1,['error'],['errors']
Availability,"Hi, as scheduled I just reverted the last commit already fix or redundant with #556",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356617616:64,redundant,redundant,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356617616,1,['redundant'],['redundant']
Availability,"Hi, just wanted to add something here, I am now facing with a similar issue related Background setting object, with same error as above(object not in factory). I am using a .py file for scene creation. I can run it using runSofa, but not able to run it with python3 for integrating with gym. You can find the implementation here https://github.com/ScheiklP/sofa_env; the file I am trying to run : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/reach_env.py",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050:121,error,error,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050,1,['error'],['error']
Availability,"Hi, this is not a bug but a new feature I introduced in https://github.com/sofa-framework/sofa/pull/913 to provide (in build and install dirs) a folder that shall always be scanned by PluginManager when searching for a plugin (like the bin/ folder is). The idea was to get an easy way to add/remove plugin binaries in an installed SOFA **without polluting the bin/ folder** which contains stuff I'm not supposed to touch (or scared to touch). The typical use case is: ; I have SOFA binaries (downloaded from sofa-framework.org or provided by someone) and I have a plugin binaries. How to run the examples of the plugin in runSofa?. Many ways to do that:; 1. launch runSofa, open Plugin Manager, load the plugin, open the scene; 2. edit the scene to add `<AddPluginRepository path=""/path/to/the/plugin""/>` and `<RequiredPlugin name=""the_plugin""/>`, launch the scene in runSofa ; 3. copy/paste the plugin binaries (library or complete folder) in the bin/ folder of SOFA, add `<RequiredPlugin name=""the_plugin""/>` or add the_plugin in bin/plugin_list.conf.default, launch the scene in runSofa ; 4. **[NEW]** copy/paste the plugin binaries (library or complete folder) in the plugins/ folder of SOFA, add `<RequiredPlugin name=""the_plugin""/>` or add the_plugin in bin/plugin_list.conf.default, launch the scene in runSofa . (1) is perfect for a new user but becomes heavy quite soon; (2) is more agile but has limitations for plugins that need to be loaded **before** the scene creation (e.g. for Python env init); (3) solves the limitation of (2) if we use plugin_list.conf but, as I said, putting stuff in bin/ is scary; (4) is what I proposed to separate ""plugins that came with SOFA"" from ""plugins I add myself"". So now about this PR. What you proposed here is to install ALL the sources of applications/plugins into this new plugins folder. ~~Why? ; @jnbrunet You got a bug yesterday, what was it?~~. EDIT: Understood what the bug is, see my review :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/959#issuecomment-470886865:492,down,downloaded,492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/959#issuecomment-470886865,1,['down'],['downloaded']
Availability,"Hi, tried to run a .py file using above commands, but getting error saying the Sofapython3.dll file cannot be loaded as the specified module cannot be found",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1937404645:62,error,error,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1937404645,1,['error'],['error']
Availability,"Hi,. Could you put your scene example here and the error message you get.; The Geomagic plugin just create SOFA components to be used in the scene graph so there should be no interference with the SofaPython3 mechanism.; But nothing is better than testing! 😄",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580:51,error,error,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580,1,['error'],['error']
Availability,"Hi,. Thanks for this PR and nice work. . This PR: ; - [ ] succeed to be compiled on each configuration on the CI.; - [ ] does not generates new warnings or test failure. ; - [ ] does not break existing scenes.; - [ ] does not break API compatibility. ; - [x] is now 1 week old. Once the CI will confirm nothing is broken and upon @matthieu-nesme agreement I suggest we merge this PR without waiting 1 week :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139#issuecomment-273764567:161,failure,failure,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139#issuecomment-273764567,1,['failure'],['failure']
Availability,"Hi,. static const int solves the inheritance of enum class, but cannot really ; be used for the purpose of typing a categorical variable. For instance we can have this :. class NumericalIntegrationMethod { public : static const int methodOne=1;};. class NewNumericalIntegrationMethod : public NumericalIntegrationMethod  ; { public : static const int methodTwo=2; };. but the integration method has to be described as :. int method=NumericalIntegrationMethod::methodOne; or int ; method=NewNumericalIntegrationMethod ::methodTwo;. but not as : NumericalIntegrationMethod method; (which would be done ; with enum). Anyway, the use of string instead of enums is also motivated with the ; issue of having descriptive labels in python or xml files. See my previous comments below :. > Right now when specifying the type of numerical integration method in ; > python or xml scripts the user had to use for instance ; > numericalIntegrationMethod=""3"" which is not descriptive at all. It is ; > preferable to use numericalIntegrationMethod=""Tetrahedron Gauss"" for ; > the maintenance of the code. Hervé. Le 13/03/2019 à 10:16, Guillaume Paran a écrit :; >; > Hi guys, what about replacing the enum by a class containing static ; > int members?; > see https://stackoverflow.com/a/644639; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub ; > <https://github.com/sofa-framework/sofa/pull/936#issuecomment-472340591>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/ASgmq8xcftMg8X0iZv9ijlhfWBJGHFwCks5vWMHsgaJpZM4a_sTV>.; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-472604359:1065,mainten,maintenance,1065,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-472604359,1,['mainten'],['maintenance']
Availability,"Hi,. thanks for reporting a build problem. I have not had the chance to play with LLVM 16 yet. I agree that the key function of `FullVector` is `resize`. However, it is defined in the inl file. The template is explicitly instantiated in the cpp file, and it corresponds to the template parameter used in `getVector` (function from `EigenTestUtilities.h`). The cpp file includes the inl file. Therefore, I don't understand that the linker emit an error suggesting that it is not defined... Was it the only problem in the whole build?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4402#issuecomment-1866330894:446,error,error,446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402#issuecomment-1866330894,1,['error'],['error']
Availability,"Hi. . Regarding the update of the plugin for newest version of SOFA : we are a small team of developer for this open source project. The maintenance of all the plugins that are actually used by the community takes most of our time. We need to focus on what most of the community needs and so, if only one person is interested in an old plugin, we cannot take a lot of time on updating it. . This being said, because SOFA is an open-source project, you can contribute by updating it yourself and the making pul-requests to give you fix to the community ! Or wait that more people gain interest in the same plugin as yourself so that it becomes a priority for us. . I am sorry if this answer is not very helpful, and I wished I could help you more. If you encounter any big issue while trying to update it, you can come and seek help, we will help you in such journey.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4934#issuecomment-2311981772:137,mainten,maintenance,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4934#issuecomment-2311981772,1,['mainten'],['maintenance']
Availability,"I agree with this idea. ; The only drawback is that all current `setRequired(true)` would require an update... To sum up, if I get it right:. - `isRequired()` should be true by default; - `hasDefaultValue()` should be true by default as well; - `setRequired(false)` should also change things so that `hasDefaultValue()` returns false; - current `setRequired(true)` should be replaced by `setHasDefaultValue(false)` or something like that...; - in BaseObject::init() print a warning/error message `if (!data->hasDefaultValue() && !data->isSet())`; - finally update the GUI to handle `hasDefaultValue()` and display an empty field if it returns false; ; Is that all, and what you had in mind?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767081198:482,error,error,482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767081198,1,['error'],['error']
Availability,"I also believe the find package integration is not part of cmake 3.22 for the fetch mechanism (so you can use the `FIND_PACKAGE_ARGS` option in `FetchContent_Declare`). Just trying to build the minimal example on this topic on [CMake documentation]( https://cmake.org/cmake/help/latest/module/FetchContent.html#integrating-with-find-package) will not succeed with 3.22 but won't with 3.24. With 3.22, you have no integration of this and you have to call explicitly the `find_package` manually before the fetch (as we do so far in SOFA), but this leads to the problem was citing Paul (dependence not available for all targets). Starting with 3.24, using this option solves the problem (and no need for the `find_package` call before the fetch anymore).; But I understand that we should stick to v3.22 as it is part of ubuntu22.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4586#issuecomment-2004426365:599,avail,available,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586#issuecomment-2004426365,1,['avail'],['available']
Availability,I also would like to get rid of the failure in Utils:; https://ci.inria.fr/sofa-ci/job/centos_clang-3.4_options/1522/testReport/. Here is the associated msg_warning:; [WARNING] [Utils::widenString()] Invalid or incomplete multibyte or wide character. Could it be because this one is changing the locale and depending on the system things goes wrong with the french character used in the string ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335428709:36,failure,failure,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335428709,1,['failure'],['failure']
Availability,"I am curious about this file, as nobody seems to include it (thus that' s why we did not notice any error); Where do you use it ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2019#issuecomment-821249927:100,error,error,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2019#issuecomment-821249927,1,['error'],['error']
Availability,"I am not able to reproduce this issue. I close it for now, but if you have time @jnbrunet and @AndreaMendizabal test it again and re-open the issue if necessary. I tried to run the mentioned scene. Result: an error message without crash; ```; [ERROR] [SparseGridTopology(SparseGridTopology1)] vertex 0 not found in hexahedral topology; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1748#issuecomment-1152390531:209,error,error,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1748#issuecomment-1152390531,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"I am not sure we want to add it manually to each test.; It would be better if it could be added automatically to any Sofa_test, as it would satisfy 99% of the tests.; It would be more convenient to have extra stuff only for the more complicated tests that raise an error on purpose.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288463882:265,error,error,265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288463882,1,['error'],['error']
Availability,"I am on Windows and did not try on Linux, so my hopes still hold as long as that yellow dot does not become a cross for the windows VS build :D. The error on the linux build seem trivial fortunately. However it stopped at the first error... Would it be possible for the build system not to stop at this first error and try compiling the remaining ? Since I cannot test on every platform/os that would be valuable to have all potential error at once.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305322072:149,error,error,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305322072,4,['error'],['error']
Availability,"I believe whatever the approach taken it should allow to keep things pretty clear between ; - unit tests, ie tests that hardly depend on initializing a scene. In these tests you hardly need a concrete instance of node or simulation. If you need this it may be nice to have a class to derive from which does it for you, but then again it should stay optional, because you should really think again about how you designed your component if you need a full fledged simulation to actually make some basic testing on your component. ; No matter what, these tests should be executed at each build (even for devs) and must pass. Failing in this kind of tests must be equal to a compilation error.; In that respect there is something that I am reluctant to allow for this type of tests is a lose coupling approach where you instantiate components using keys from the object factory. You may end up writing tests that in fact do not compile from a scratch build because this allows you to not take care about the dependencies between the libs. That is to say a test may instantiate a component that is not available yet, because it belongs to a library which is deeper in the build dependency tree at the time the unit test is built and executed during the compilation. - Functional tests, that require a working scene with probably more components than the one actually tested. These tests can be longer and therefore should not be mandatory during the compilation. ; They will be run only in ci machines, but can be also easily executed by any developers on its machine mostly to debug what is the nature of a new regression in these kind of tests. ; From our experience at InSimo these kinds of tests regress quite often during the development of a new feature, because you make some optimisation in the code, and you get some epsilon difference, or because you change the approach entirely and the scene is no longer relevant for you and should be changed. So you probably do not want too many of these fun",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337507243:683,error,error,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337507243,1,['error'],['error']
Availability,"I can see two errors:; - one is that it seems you switched on SOFA_FETCH_PYTHON, which was the plugin related to python2 and which is not supported anymore -> just switch `SOFA_FETCH_PYTHON` off, and disable `PLUGIN_SOFAPYTHON` if it is present; - `Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS` it seems you did not install the package developement for python3 ; did your execute `sudo apt-get install python3-dev` (or `sudo apt-get install python3.8-dev`) ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612:14,error,errors,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612,1,['error'],['errors']
Availability,I can't push on your branch. Did you forbid it?; Removing `using namespace std;` in applications/plugins/ARTrack/extlibs/ARTrackLib/mainTracker.cpp does fix the error on Windows.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-598314458:161,error,error,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-598314458,1,['error'],['error']
Availability,"I checked from my windows build and apparently :. none of the functions templated with the enable_if trick ""int NN = N, typename std::enable_if<(NN==X), etc..."" are built and exported into the dll. Errors are spotting a lack of symbols from TRGBAColor r(); g(), b(), a(); but the original problem comes from one level above, ie from Vec.h . Sorry if I'm stating things you already know",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/119#issuecomment-274584285:198,Error,Errors,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/119#issuecomment-274584285,1,['Error'],['Errors']
Availability,I checked the QuaterTest **EulerAngles** and it is not using code touched by this PR. This sounds like another blinking error test. ; Ok to open an issue on that but it is not related to this PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-679390995:120,error,error,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-679390995,1,['error'],['error']
Availability,"I close this @marques-bruno but is an example / doc on ""how to build a binding"" for [SofaPython3](https://github.com/SofaDefrost/plugin.SofaPython3) available?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1002#issuecomment-592184896:149,avail,available,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1002#issuecomment-592184896,1,['avail'],['available']
Availability,I close this PR because this is duplicating feature available in SPM.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1122#issuecomment-543611884:52,avail,available,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1122#issuecomment-543611884,1,['avail'],['available']
Availability,"I did not look at the implementation, but your example sounds really good to me!; I like the scope/stacking. With `EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;` by default in Sofa_test, as you well understood ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288973392:136,Error,Error,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288973392,1,['Error'],['Error']
Availability,"I did not manage to compile it fully. SofaDenseSolver is now ok but not the remaining of Sofa. I started to fix some errors, however it seems that this feature was not actively maintained recently. ; With latest commit it should compile but it gives weird runtime visualization. (Windows VS2015 also); ![image](https://cloud.githubusercontent.com/assets/9134757/26287521/acf354d4-3e7d-11e7-8e6f-bc5d1a2e6ca2.png); ![image](https://cloud.githubusercontent.com/assets/9134757/26287526/b7ce280c-3e7d-11e7-8262-c22a7fc16069.png); ![image](https://cloud.githubusercontent.com/assets/9134757/26287527/c4514e1a-3e7d-11e7-96e3-a18bcf007403.png). If the feature is a must-have, maybe the CI should test with float-only and double-only instead of ""both"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-302964842:117,error,errors,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-302964842,1,['error'],['errors']
Availability,"I did the modification in `TypeInfo_Text.h`, but build fails if I extend it to `FixedArrayTypeInfo.h`, apparently because of the template specialisations on Rigid types, for instance :; ```; FixedArrayTypeInfo.h:195: error: ‘const DataType’ {aka ‘const class sofa::defaulttype::RigidDeriv<2, double>’} has no member named ‘data’; 195 | return data.data();; | ~~~~~^~~~; ```; (which makes sense).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329533975:217,error,error,217,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329533975,1,['error'],['error']
Availability,"I do understand the idea.; But I guess it should be possible to got only one component, let's call it `WarningAndErrorInGTest`, that would be created directly in Sofa_test (so added to every tests).; This component would have two tristates `{not_expected,expected,nothing}`, one for warnings and one for errors.; By default both states would be set to `not_expected`, such as by default every sofa warnings/errors would raise a gtest error.; It would be enough for most of the tests, so the user has NOTHING to do when writing its tests (and it would work for any existing tests, incl. plugins'). For more complex tests like in your example, rather than creating; `ErrorAsTestFailure err(SOURCE_LOCATION) ;; ExpectWarning warn(SOURCE_LOCATION) ;; `; you could write something like:; `this->warningAndErrorInGTest.warningState = expected;`. It is as explicit, not heavier, and even more flexible, as you can switch the state during the test (w/o having to delete objects and creating new ones). I am note sure to be clear enough, do you follow me?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288686630:304,error,errors,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288686630,4,"['Error', 'error']","['ErrorAsTestFailure', 'error', 'errors']"
Availability,"I don't know... Some digging is needed. ; Eg the topology is ""mandatory"" because the checkAttributes test is calling ""init"" which emit an error if there is no topology. So do we add a topology or to we allow an MSG_EXPECT(Error) ? . The one about rigid is simpler as we simply this test is supposed to fail so it actually needs an MSG_EXPECT()",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440233295:138,error,error,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440233295,2,"['Error', 'error']","['Error', 'error']"
Availability,I don't think that warnings are considered as failure in the tests,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2114505453:46,failure,failure,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2114505453,1,['failure'],['failure']
Availability,"I dont think the fix is good ; the ""toMatrix()"" is available for Mat3x3 but not for Mat4x4 (there was a ` toMatrix` for Mat4x4 but it was deleted and replace with `toHomogenousMatrix()` ).; This RigidCoord::toMatrix() is templated on the Mat type actually, and is really ill-formed (no assert on the size of the given matrix, etc).; I think the solution is to either:; - test if the matrix is 3x3 or 4x4 (and failed to compile with a message with a static assert) and calling the respective ` toMatrix()` or ` toHomogenousMatrix ()` ; - or remove the template, force it to Mat3x3 and create an other `toHomogenousMatrix` in RigidCoord. Consisntent with Quat but duplicating code and breaking. I am more for the first solution. > Thanks for your contribution. I wonder how it was not detected before. I guess this was not detected before because nobody was calling RigidCoord::toMatrix with a Mat4x4 with the code compiled on the CI. Actually, nobody calls RigidCoord::toMatrix, either with mat3 or mat4 apparently.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881:51,avail,available,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881,1,['avail'],['available']
Availability,"I echo @damienmarchal , thanks a lot @ScheiklP for these interesting investigations!. your last comment means that it could come from the collisionmodel binding, right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254605140:2,echo,echo,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254605140,1,['echo'],['echo']
Availability,I forgot a small remark (which might not be very useful for this discussion). . I've seen multiple segmentation faults and crashes in SOFA from a mismatch between the topology and the positions set in the mechanical object. I've not seen many components check this at the **init** stage (or after if topological changes happen). Maybe we could find a clean way to provide forcefield authors tools to verify the relationship between their topology and the mechanical state. But I believe this is a difficult design question.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/979#issuecomment-490138681:112,fault,faults,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/979#issuecomment-490138681,1,['fault'],['faults']
Availability,"I fully agree this is the right (and long) process. . About the Vec3d to Vec3 move... given that all our code base is in a broken/inconsistant state on that aspect do you think we could give a try to move it directly to Vec3, then locate if (or where) things are getting bad by compiling sofa using REAL=float and fix these parts. . Side note: I do actually consider that allowing to choose between float/double is a coding style dating from the 2000. In our code base this is causing more troubles (code complexity cost, code maintenance cost, calculus consistency, conversion cost) than the gain we can have , on modern (2020) CPU architectures.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1247729427:527,mainten,maintenance,527,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1247729427,1,['mainten'],['maintenance']
Availability,"I guess all the scene errors like ""method must be implemented by a child topology"" on CI are normal? Do you plan to fix them in another PR @epernod ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1399#issuecomment-637545131:22,error,errors,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1399#issuecomment-637545131,1,['error'],['errors']
Availability,"I guess the one that needs the bbox should be the one that prints the error. So if the camera needs it, it will output an error. If another component needs it, it should also print an error. Making a generic error at the simulation level seems to be a little bit overkill and do not let place in error personalization.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/524#issuecomment-346580214:70,error,error,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/524#issuecomment-346580214,5,['error'],['error']
Availability,I guess you want to avoid critical error on cmake and rather it continue by fetching cxxopts in case of version mismatch ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4554#issuecomment-1973421505:35,error,error,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554#issuecomment-1973421505,1,['error'],['error']
Availability,"I guparan,. This is a nice idea. By doing so you will have to remove components which may break backward compatibility with users existing scenes. Maybe you will find helpful the following template of code we are using in the soft-robots plugin to handle such backward compatibility issues. The idea basically consist in registering into the factory an empty component that simply print a warning the user saying that the component was there but is now deprecated and provides hints on how the user could fix his scene to handle the situation. . ``` cpp; class SOFA_SOFTROBOTS_API PositionEffectorConstraintGS : public sofa::component::DeprecatedComponent; {; public:; /// Pre-construction check method called by ObjectFactory.; template<class T>; static bool canCreate(T* obj, BaseContext* context, BaseObjectDescription* arg); {; SOFA_UNUSED(obj) ;; SOFA_UNUSED(context) ;; SOFA_UNUSED(arg) ;. msg_error(this) << ""'PositionEffectorConstraintGS' is a SoftRobot v1.0 feature that has been replaced since V2.0 by the component 'PositionEffectorGS'. \n ""; ""To remove this error message, you either need to: \n ""; "" - replace PositionEffectorConstraintGS with PositionEffectorGS\n ""; "" - or use the SoftRobot plugin v1.0 \n "";; return false;; }; } ;. SOFA_DECL_CLASS(PositionEffectorConstraintGS). int PositionEffectorConstraintGSClass = RegisterObject(""PositionEffectorConstraintGS is now deprecated and should be replaced with PositionEffectorGS""); .add< PositionEffectorConstraintGS >(); ;. ========================= ; class DeprecatedComponent : public BaseObject; {; public:; SOFA_CLASS(DeprecatedComponent, BaseObject) ;. /// Pre-construction check method called by ObjectFactory.; template<class T>; static bool canCreate(T* obj, BaseContext* /*context*/, BaseObjectDescription* /*arg*/); {; obj->serr << ""[Deprecated component]: "" << obj->getName() ;; return false;; }; private:; } ;. ```. If you have other way to handle this I'm interested to hear about them. . DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/28#issuecomment-253454098:1070,error,error,1070,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/28#issuecomment-253454098,1,['error'],['error']
Availability,"I have an implementation suggestion, but it depends on the update callback mechanism (that we haven't yet merged into SOFA:; - We could plug in callbacks in the sofa::simulation::Node methods to guarantee that all bboxes in child nodes and child objects are connected to the bounding box field of their parent nodes; - We could use isPersistent() instead of isSet() to check for user input override (because isSet() doesn't tell you whether the user wrote down a value or not, but just whether or not the datafield has been modified. ANY call to beginEdit() basically sets the isSet flag to true... ); - We could leave the updateBoundingBoxVisitor as-is (except for swapping the isSet check for a isPersistent). Here would be the code:. ```cpp; // Bounding box update system proposal based on the updateCallback trackerEngines API:; // Making use of the persistent flag, if the bbox is given at component's creation (through an addObject call for instance, or manually edited through runSofa2), the bbox won't recalculate. DAGNode::doRemoveChild(BaseNode* c); {; [...];; removeUpdateCallback(""bbox_"" + c->getName());; }. DAGNode::doAddChild(BaseNode* c); {; [...];; addUpdateCallback(""bbox_"" + c->getName(), {&(c->f_bbox)}, [this]() {; sofa::defaulttype::BoundingBox* bbox = f_bbox.beginEdit();; if (!f_bbox.isPersistent()); 	bbox->invalidate();; for (auto child : this->child); 	bbox->include(child->f_bbox.getValue());; for (auto object : this->object); 	bbox->include(object->f_bbox.getValue());; f_bbox.endEdit();; return sofa::core::objectmodel::ComponentState::Valid;; }, {&(f_bbox)});; }. DAGNode::doRemoveObject(BaseObject* o); {; [...];; removeUpdateCallback(""bbox_"" + o->getName());; }. DAGNode::doAddObject(BaseObject* o); {; [...];; addUpdateCallback(""bbox_"" + o->getName(), {&(o->f_bbox)}, [this]() {; sofa::defaulttype::BoundingBox* bbox = f_bbox.beginEdit();; if (!f_bbox.isPersistent()); 	bbox->invalidate();; for (auto child : this->child); 	bbox->include(child->f_bbox.getValue());; ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-621885183:456,down,down,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-621885183,1,['down'],['down']
Availability,"I have another question for `ninja`.; When I select the ninja option. Then the error occurs like this.; `CMake Error: CMake was unable to find a build program corresponding to ""Ninja"". CMAKE_MAKE_PROGRAM is not set. You probably need to select a different build tool.; CMake Error: CMAKE_C_COMPILER not set, after EnableLanguage; CMake Error: CMAKE_CXX_COMPILER not set, after EnableLanguage; Configuring incomplete, errors occurred!`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102:79,error,error,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372047102,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"I have corrected the test scripts as they were retrieving and error with the class definition from the previous definition. Now it compiles succesfully and passes all the tests. Sorry for using multiple accounts for commiting, but I had to change PC in the last days and I did not realize that the one I was using already had a linked account.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1598530028:62,error,error,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1598530028,1,['error'],['error']
Availability,"I have identified the actual issue in ```$sofa_dir/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - line 124 has a few mentions of ```/${PROJECT_NAME}``` too much, removing these at least reduces the header install path to ```$sofa_dir/build/install/include/extlibs/QGLViewer/QGLViewer/*.h```; - for some reason the ```MOC_HEADER_FILES``` (line 21 ff.) are not considered for copying by your ```sofa_create_package_with_targets``` macro. For testing I have simply copied the headers listed in ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES```. This does not affect the build and finally copies the previously missing MOC headers to the install include directory. I can make a pull request for this. Or I can wait a bit if someone has an idea on how to properly copy/install the MOC_HEADERS without the redundant mentioning in both header lists.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674:818,redundant,redundant,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674,1,['redundant'],['redundant']
Availability,"I have several objections with this PR. ; - the mechanism relies on a specific symbol lookup. So in order to make a plugin auto-loadable, you need to recompile the plugin which design wise is not so great. ; - It also has the major downside of having to load the library to know if the plugin is auto-loadable, which in the end results in having to load all the available plugins. Loading a library in the process memory will have several side effects which are difficult to anticipate before hand. The major one is the evaluation of all the global variables, which will result in populating the `ObjectFactory` with all the components that this library contains. I would suggest something different for this kind of having a list of default plugins that are loaded directly with your application ( here `runSofa` ). - derive a sort of sofa plugin manifest file, which can be generated as a post-build step. This should be an easy to parse file which could contain the various informations exposed by the `getModuleName()`, `getModuleVersion()`... without having to load the library in the process memory. This manifest file must be stored in an easy to find location in your build tree, an be installed properly ( they need also to be bundled when you deploy your application ). That means they should be located with a similar relative path with respect to the application ( `runSofa` ) when in the build tree or in the install tree. There should be a proposal about that to define : ; - the manifest file type ( ie how are we going to parse it ? json xml text ? ); - the manifest file content itself. - any application could then define the list of predefined plugin it wants to load using a simple configuration file. A default configuration can be provided, but it could be easily overriden. With this mechanism, no recompilation is required when you want to change the list of default plugins, you just change the config file. NB : a bit unrelated but there is a small code ""snippet"" that can be",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188:232,down,downside,232,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188,2,"['avail', 'down']","['available', 'downside']"
Availability,"I have tried something like that and doesnt work. Following what I found in the Flexible plugin I have two files. DeformationGradientTypes.h; ```; using Vec9 = sofa::defaulttype::Vec<9, double>;; using F33D = sofa::defaulttype::StdVectorTypes<VNCS::Vec9, VNCS::Vec9, double>;. } // namespace VNCS. template <>; struct sofa::defaulttype::DataTypeInfo<VNCS::F33D::Deriv>; : public FixedArrayTypeInfo<VNCS::F33D::Deriv, VNCS::F33D::Deriv::total_size> {; static std::string name(); {; std::ostringstream o;; o << ""F33D"";; return o.str();; }; };. template <>; struct sofa::defaulttype::DataTypeName<VNCS::F33D::Coord> {; static const char *name() { return ""F33D::CoordOrDeriv""; }; };. template <>; inline const char *VNCS::F33D::Name(); {; return ""F33D"";; }; ```. and in my initPlugin.cpp. ```; #include ""DeformationGradientTypes.h""; ...; template class sofa::core::State<VNCS::F33D>;; template class sofa::component::container::MechanicalObject<VNCS::F33D>;; static sofa::defaulttype::RegisterTemplateAlias alias0(""F33D"", VNCS::F33D::Name());; ```. All this gives me the error I showed previously",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1524#issuecomment-706134225:1067,error,error,1067,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1524#issuecomment-706134225,1,['error'],['error']
Availability,I just added a commit to clean the custom `EXPECT_ATLEASE_ONE_NONFATAL_FAILURE` macro. Tell me if I'm wrong but it would better be a macro expecting MORE than 1 failure to clearly distinct from `EXPECT_NONFATAL_FAILURE` (GTest one).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370488262:161,failure,failure,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370488262,1,['failure'],['failure']
Availability,"I just did a quick test in a simple scene (horizontal beam with downward force at one end), and the Newton static solver does *not* converge with the TetrahedronFEMForceField in single precision, using a CGSolver in double precision. The problem may be with the addDforce function used by CG, but it would need some more investigating. So basically, we can't simply switch to single precision without checking everything that could be sensitive to numerical errors (but I agree that it would be better if we could use mostly single precision).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/495#issuecomment-340728191:64,down,downward,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/495#issuecomment-340728191,2,"['down', 'error']","['downward', 'errors']"
Availability,I just removed all plugin-concerned commits. They are still available on guparan/sofa:clean_licenses_pr_139.; This PR should now be simple to review :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139#issuecomment-278993500:60,avail,available,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139#issuecomment-278993500,1,['avail'],['available']
Availability,"I just spent a significant amount of time to understand how we play with GTest and XML outputs in SOFA.; Printing a call stack should be done with #191 + #195. ; But there is still a problem in our way to report unit tests.; Currently what we do is to run all our tests with `--gtests_output:xml`. This is OK but sometimes we have crashes (often due to segfaults) in our tests. When a test crashes, it just stops. All the other steps/functions/cases are skipped and the XML output is not created.; So currently, for each crash, we are losing results. This brings me a question: should we (1) handle the lost tests for each crash or (2) change the way we use GTest and detect crashes as failures? Is (2) even possible with segfaults?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/149#issuecomment-284763976:686,failure,failures,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/149#issuecomment-284763976,1,['failure'],['failures']
Availability,"I managed to solve the issue. The main reason appeared to be the location of the ""python3"" directory. Apperently, it should be located one directory higher than the directory containing all the built DLLs. ; So I changed the the CMake variable `SP3_PYTHON_PACKAGES_DIRECTORY` from ""python3/site-packages"" to ""**bin**/python3/site-packages"".; I also downgraded python from 3.9.1 to 3.7.9 and pulled the last commits from sofa master but I think the issue came from the python3 directory.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-759396432:349,down,downgraded,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-759396432,1,['down'],['downgraded']
Availability,"I prefer `false`. ; So probably the component won't be created and the scene might crash at creation or init with your error message. ; Otherwise the crash might happened later. Or worse, it will run with a wrong behavior. The second option is harder to debug.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5075#issuecomment-2441068840:119,error,error,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5075#issuecomment-2441068840,1,['error'],['error']
Availability,"I recommand a fast-merge on this one. With this we will be able to add -j3 on windows builds...and on ""heap"" error we will reduce ""locally"" the number of jobs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/254#issuecomment-297685948:109,error,error,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/254#issuecomment-297685948,1,['error'],['error']
Availability,"I see the benefit of having generic msg_xyz_when(cond) message, maybe they should be more general and not tied to a ""this"" pointer, like msg_xyz_when(sender, cond). In the component itself, I would rather see; component_msg_info() if (printLog) msg_info(this); with ""printLog"" data name updated; I also think ""warning"" and above (error...) levels should not depend on a flag; And last, I would call that flag ""msgInfoVerbose"" to better match what is a boolean flag name. here my 2 cents ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278334017:330,error,error,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278334017,1,['error'],['error']
Availability,"I see the difference of point of view between you. Guillaume wants the dashboard to show the absolute current state of Sofa, with all failing tests marking the commits as ""broken/need to be fixed""; Damien sees more the average Sofa contributor point of view: ""did I break something?""/""is Sofa better or worse with my last commit"". **_Would it be acceptable**_ to add a simple checkbox on the dashboard, to filter the *_OpenIssue tests ? This way, open issues don't polute the workflow of people not concerned/competent with them. ; By default this option would be disabled. The same for pull request, new failing tests (marked as _OpenIssue) should not be marked as failures during the pull request, since they do not introduce new malfunctions but only reveal them, which is (in my opinion) a step toward the good direction, ie kind of an improvement ?. Once fixed, *_OpenIssue tests should be renamed and kept in the tests base as normal regression tests.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/52#issuecomment-261500585:666,failure,failures,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/52#issuecomment-261500585,1,['failure'],['failures']
Availability,"I see what you want to do and of course it would be much more faster and simpler to add a new feature.; But I'm very relunctant to add an extra flag if it is redundant with others. . I would prefer to see a solution based on refactoring isRequired(), possibly with an hasDefaultValue() so we come up with a consistant and clear behavior. . EDIT:; My current thinking is thus:; - set isRequired() to true by default; - add an hasDefaultValue() (possibly implemented by using std::optional<> around Data::defaultvalue)); - change the code in BaseObject::init(); ```cpp; for(auto data: this->m_vecData); {; if (data->isRequired() && !data->isSet()); {; msg_error() << ""Required data \"""" << data->getName() << ""\"" has not been set. (Current value is "" << data->getValueString() << "")"" ;; }; }; ```; So it only warn if required and there is no default value. ; Update the GUI's so it can handle the isRequired + hasDefaultValue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762259707:158,redundant,redundant,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762259707,1,['redundant'],['redundant']
Availability,"I suggest using the memory sensitization tools provided by GCC or Clang - it is less hassle than valgrind. It also provides more detail regarding memory leaks. To do this, build Sofa with the additional flag: `cmake .. -DCMAKE_CXX_FLAGS=""${CMAKE_CXX_FLAGS} -fsanitize=address""`. Here is the output when running the example (CPP) scene provided by @ScheiklP. The 15 object(s) that are detected are come from the number of unloads performed (I decreased it to 15 from the original 1000 used in the scene by @ScheiklP). ```; =================================================================; ==445057==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 480 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d4160 in sofa::core::collision::TDetectionOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >* sofa::core::collision::BaseIntersector::createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:599,ERROR,ERROR,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['ERROR'],['ERROR']
Availability,I think it could be good to change the errors in warnings because when you are a beginner on Sofa you don't really know if it has an impact on the scene behavior. I don't really manage Sofa Kernel code actually so I'm not able to propose the code modifications to change the errors in warnings if it is what you are waiting from me @untereiner.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/652#issuecomment-388037397:39,error,errors,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/652#issuecomment-388037397,2,['error'],['errors']
Availability,"I think this issue is a duplicate of #1528. I did a PR (#2155) on this topic, which I somewhat let down (sorry). I'll try to see if it's working",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2433#issuecomment-946672000:99,down,down,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2433#issuecomment-946672000,1,['down'],['down']
Availability,"I totally agree with Damien.; Depending on the case, the comment should at least include the following informations:; - date of deprecation; - replacement method pointers. Furthermore, the deprecated method could issue a message on the console, to warn against its use.; In extreme cases, after a reasonable time delay, the method should not work anymore, just issue an error message with the previous informations. But as it is currently done in this example, nothing goes against its undiscontinued use in new pieces of code.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/272#issuecomment-301408233:370,error,error,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/272#issuecomment-301408233,1,['error'],['error']
Availability,I tried to fix the linux compiling error. ; Hope it works,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/701#issuecomment-399877149:35,error,error,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/701#issuecomment-399877149,1,['error'],['error']
Availability,"I tried to look everywhere and spotted the same mistake as in the other PRs : you sometimes changed the factory name. It might still remain errors. Better check it twice @lamriaimen . By the way you seem to have messed up a bit with the edge info data in the Tensor forcefiles, you have modified the comments but not the actual data, please take a look there. . Except for those chages, the PR seems ok to me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4771#issuecomment-2192079270:140,error,errors,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4771#issuecomment-2192079270,1,['error'],['errors']
Availability,"I understand why VS2013 does not compile (it does not support `constexpr`); But as for VS2015 ????, the GLEW error seems unrelated.... (I am compiling on VS2015 Update 1 64b with no problem)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-283614108:109,error,error,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-283614108,1,['error'],['error']
Availability,"I wanted to pass on a flag after -n in a format such as -n infinite.; However, the general syntax constituted of a number after -n, such as: -g batch -n 20 (for 20 iterations).; Therefore the variable storing it was declared as an integer one and a lot of compilation errors came up when I tried to change to string variable and later on validate it for a digit or string.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/610#issuecomment-373103519:268,error,errors,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/610#issuecomment-373103519,1,['error'],['errors']
Availability,"I was able to reproduce this issue, when compiling Sofa and SofaPython3 in Debug mode. When trying to add `libSofaPython3.so` through the PluginManager, it first warns the user, that the `.so` was compiled in debug mode, while Sofa was compiled in Release mode (which is incorrect).; Then, on adding the library, the above mentioned error is printed. I confirmed with `ldd libSofaPython3.so` that ` libpython3.9.so.1.0` is actually `not found`. In Release mode, it also does not find it, but does not seem to care. When adding the path to `libpython3.9.so.1.0` to the `LD_LIBRARY_PATH`, it finds it, but `SofaRuntime` is missing required functions/attributes.; In Release; ```python; >>> dir(SofaRuntime); ['DataRepository', 'PluginRepository', 'Sofa', 'SofaRuntime', 'Timer', '__SofaPythonEnvironment_importedModules__', '__SofaPythonEnvironment_modulesExcludedFromReload', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'formatStackForSofa', 'getCategories', 'getPythonCallingPoint', 'getPythonCallingPointAsString', 'getSofaFormattedStringFromException', 'getStackForSofa', 'importPlugin', 'importlib', 'init', 'inspect', 'os', 'sendMessageFromException', 'sofaExceptHandler', 'sofaFormatHandler', 'sys', 'traceback', 'unloadModules']; ```; In Debug, only `'DataRepository', 'PluginRepository'` are present (error is thrown, that `unloadModules` is missing).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858:333,error,error,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858,2,['error'],['error']
Availability,I was not sure to add the scene in the examples of not because its execution triggers an error. The CI wouldn't like it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4428#issuecomment-1887403971:89,error,error,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428#issuecomment-1887403971,1,['error'],['error']
Availability,"I was thinking that the ""not merging is own PR rules"" is to avoid having people merging things that have not been reviewed and received merge approval. . If the PR was agree to be merged (as was 255) and the merge order was defined (as we did during last meeting) I see no problem to merge his own PR because in this scenario, merging is just a matter of [ci-building] and clicking on the merge button. Who-ever is available to do is welcome to allow the more smooth & continuous merging of the different PR between two meeting. . But maybe there is other consequence I didn't noticed, if so could you elaborate ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/261#issuecomment-302723181:415,avail,available,415,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/261#issuecomment-302723181,1,['avail'],['available']
Availability,I will try to solve the Link issue in a new branch. @maxime-tournier here is the error: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_options_amd64_pr2/518/console,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/419#issuecomment-334459491:81,error,error,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/419#issuecomment-334459491,1,['error'],['error']
Availability,"I would vote for yes too. This has been discussed for a long time now. Online documentation is already updated to ""use your own Boost"".; Cleaning as much as possible Boost dependencies that are redundant with C++11 features is another topic in my opinion.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/33#issuecomment-258135230:194,redundant,redundant,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/33#issuecomment-258135230,1,['redundant'],['redundant']
Availability,I'm a bit surprised with the test failures;... so i restart ; [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/847#issuecomment-446571947:34,failure,failures,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/847#issuecomment-446571947,1,['failure'],['failures']
Availability,I'm afraid this PR was merged to fast.; - windows7_VS-2013_options_amd64 has 3 more test failures; - we don't know what happens for centos_clang-3.4_options and mac_clang-3.4_options; - there is 36 new test errors for centos_clang-3.4_options on origin/master after merge,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202#issuecomment-288380223:89,failure,failures,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202#issuecomment-288380223,2,"['error', 'failure']","['errors', 'failures']"
Availability,I'm closing this issue since SOFA is now available as a python module in the [SofaPython3](https://github.com/sofa-framework/plugin.SofaPython3) project.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-629814741:41,avail,available,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-629814741,1,['avail'],['available']
Availability,I'm gonna find some time to investigate this test failure. To be continued...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-313034837:50,failure,failure,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-313034837,1,['failure'],['failure']
Availability,"I'm progressing... ; There is a lot of test failure but this was expected as now any warning that was not explicitely EXPECTED generates a test failure. . So it looks really fine to me. ; @epernod, @fredroy, @thomas-lemaire as you wrote tests...what do you think about the current approach ? . EDIT: OUPS this was for PR #213 :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/207#issuecomment-288874603:44,failure,failure,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/207#issuecomment-288874603,2,['failure'],['failure']
Availability,I'm ready to rollback some of the removals. Does it concern **all** SofaOpenglVisual ones?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/905#issuecomment-458464405:13,rollback,rollback,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/905#issuecomment-458464405,1,['rollback'],['rollback']
Availability,"I've been hit by this too.; Here is the stack trace I've got:. ```; ================================================================= ; ==98239==ERROR: AddressSanitizer: global-buffer-overflow on address 0x00013d5e5ee0 at pc 0x00013d1a0075 bp 0x7fff503dd230 sp 0x7fff503dd228 ; READ of size 4 at 0x00013d5e5ee0 thread T0 ; #0 0x13d1a0074 in sofa::core::objectmodel::Base::initData0(sofa::core::objectmodel::BaseData*, sofa::core::objectmodel::BaseData::BaseInitData&, char const*, char const*, unsign; ed int) Base.cpp:128 ; #1 0x13d19fd2d in sofa::core::objectmodel::Base::initData0(sofa::core::objectmodel::BaseData*, sofa::core::objectmodel::BaseData::BaseInitData&, char const*, char const*, bool, ; bool) Base.cpp:100 ; #2 0x10ff6bfe0 in void sofa::core::objectmodel::Base::initData0<double>(sofa::core::objectmodel::Data<double>*, sofa::core::objectmodel::Data<double>::InitData&, double const&, ; char const*, char const*, bool, bool) Base.h:382 ; #3 0x13d2e2817 in sofa::core::objectmodel::Data<double>::InitData sofa::core::objectmodel::Context::initData<double>(sofa::core::objectmodel::Data<double>*, double const&, char ; const*, char const*, bool, bool) Context.h:49; #4 0x13d2e1985 in sofa::core::objectmodel::Context::Context() Context.cpp:37 ; #5 0x13a430622 in sofa::simulation::Node::Node(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) Node.cpp:66 ; #6 0x10f90fb5c in sofa::simulation::graph::DAGNode::DAGNode(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sofa::simulation::graph; ::DAGNode*) DAGNode.cpp:39 ; #7 0x10fa2fb0d in sofa::core::objectmodel::New<sofa::simulation::graph::DAGNode>::New<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const; &>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&) SPtr.h:57 ; #8 0x10f9118ec in sofa::core::objectmodel::New<sofa::simulation::graph::DAGNode>::New<st",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566:145,ERROR,ERROR,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566,1,['ERROR'],['ERROR']
Availability,"I've tested to remove completely the functions. If used or overridden, it should fail to compile. On my setup, I don't observe a compilation failure, even with SofaCuda. Let's see if the CI does not complain.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1267085460:141,failure,failure,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1267085460,1,['failure'],['failure']
Availability,"I've tried with Qt5.2 and got the same error. The error seems to come from RealGUI::screenshot() after the first screenshot is taken . RealGUI.cpp:2148. ```; if ( filename != """" ); {; std::ostringstream ofilename;; const char* begin = filename.toStdString().c_str();; const char* end = strrchr ( begin,'_' );; if ( !end ); end = begin + filename.length();; ofilename << std::string ( begin, end );; ofilename << ""_"";; getViewer()->setPrefix ( ofilename.str() );. getViewer()->screenshot ( filename.toStdString() );; }; ```. In my case, the pointer _begin_ is initialized to an empty string. The weird thing is that if I put a breakpoint there with gdb, and manually call _filename.toStdString().c_str()_, the _begin_ pointer will be populated correctly, as if there was a latent initialization. Next, even if this works with your computer, _ofilename_ will be populated with the complete path of the file until the last occurrence of ""_"" is found. _getViewer()->setPrefix_ will then be called and prepend the _getScreenshotDirectoryPath_ to the already full path _ofilename_. . BaseViewer.cpp:128. ```; void BaseViewer::setPrefix(const std::string& prefix); {; const std::string fullPrefix = sofa::gui::BaseGUI::getScreenshotDirectoryPath() + ""/"" + prefix;; (...); }; ```. See pull request https://github.com/sofa-framework/sofa/pull/31",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/30#issuecomment-251669737:39,error,error,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/30#issuecomment-251669737,2,['error'],['error']
Availability,Idée de base pour trier les composants:; - garder tous ceux qui sont dans les tutos; - éliminer ceux qui ne fonctionnent plus et ne sont pas maintenus depuis longtemps (ex: WachingMachineForceField),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/225#issuecomment-290701408:141,mainten,maintenus,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/225#issuecomment-290701408,1,['mainten'],['maintenus']
Availability,"If a ""REQUIRED"" is not found, the project processing stops. Everything after that is omitted. --> Changed ""REQUIRED + WARNING"" to ""QUIET + ERROR"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1067#issuecomment-496410779:139,ERROR,ERROR,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1067#issuecomment-496410779,1,['ERROR'],['ERROR']
Availability,"If you downloaded the binaries, I am afraid that the doc browser is not shipped with them, and there is nothing you can do to get them. I am not sure if it is intended. I let @bakpaul know of this. As an alternative, you could open the `.html` file (just next to the simulation scene file) in your favorite web browser. Just note that links to run simulations won't work. If you really want the Doc Browser, you will have to compile SOFA by yourself.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5058#issuecomment-2410243974:7,down,downloaded,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5058#issuecomment-2410243974,1,['down'],['downloaded']
Availability,"If you like this kind of trick maybe you will also like the drafty 'Animation' framework that is in stlib as it allows you to replace a lot of fat PythonScript controller with code like that: ; ```python; def myAnimation(target, factor):; ### This function will be called at each animation step, ; ### target is the object passed in the dictionary passed in the animate function. ; ### factor is a floating value indicating where we are between 0.0 and 1.0 in the animation. ; target.position = Transform(target.position).translate( 0.0, LinearRamp(-3.14/2, 3.14/2, factor), 0.0 ) . def createScene(rootNode):; c = rootNode.createObject(""MechanicalObject"", template='rigid'); animate(myAnimation, {""target"" : c}, duration=1.0, mode=""pingpong""); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380471023:733,ping,pingpong,733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380471023,1,['ping'],['pingpong']
Availability,In addition to @fredroy answer. It is the getWriteAccessor that 'fixes' the bug. The following function makes the code run without error. ``` ; void handleEvent(sofa::core::objectmodel::Event* event); {; const auto& moValue = sofa::helper::getWriteAccessor(*l_mstate.get()->write(sofa::core::VecCoordId::position()));; }; ```. The Component has to be added to the scene **BEFORE the Sofa.Core.Controller is initialized** in order to deal with the events before the Sofa.Core.Controller does.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1065146268:131,error,error,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1065146268,1,['error'],['error']
Availability,"In addition to my initial comment, this version of ""find or fetch"" using `FetchContent_MakeAvailable()` (available from version 3.14) should be prefered:; ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); set(tinyxml2_SHARED_LIBS ON); FetchContent_MakeAvailable(tinyxml2); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1766706787:105,avail,available,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1766706787,1,['avail'],['available']
Availability,"In fact, we have to go down to the iterator protocol as some strings are initialized with proxies (e.g. `' '.join(...)`) and the Sequence protocol fails on getting the length/size. . The following conversion code passes all python tests in Compliant:. ```c++; static std::string convert_string(PyObject* object) {; if( PyString_Check(object) ) {; // strings will be strings; return PyString_AsString(object);; }. if( PyIter_Check(object) ) {; // TODO we should throw and abort createObject in case of error; std::stringstream ss;; bool first = true;. PyObject *iterator = PyObject_GetIter(object);; if(!iterator) {; msg_error(""createObject"") << ""error while creating iterator"";; }; ; while(PyObject* next = PyIter_Next(iterator)) {; if(first) first = false;; else ss << ' ';. ss << convert_string(next);; Py_DECREF(next);; }. Py_DECREF(iterator);; ; if (PyErr_Occurred()) {; msg_error(""createObject"") << ""error while iterating"";; }; ; return ss.str();; }. // link path conversion for baseobjects; if( PyObject_IsInstance(object, (PyObject*) &SP_SOFAPYTYPEOBJECT(BaseObject)) ) {; const std::string path_name = (((PySPtr<Base>*) object)->object->toBaseObject()->getPathName());; return '@' + path_name;; }. // fallback to python string conversion; return PyString_AsString(PyObject_Str(object));; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307438921:23,down,down,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307438921,4,"['down', 'error']","['down', 'error']"
Availability,"In my opinion the abstraction should change or the c++ instantiation should be made more robust. As of now the Mass node appears to be a child of a Mechanical Object, but this is not reflected in the xml where they are siblings. I would suggest the abstraction should change since I imagine mathematically order matters sometimes and it would be a bad idea to guess the correct order during instantiation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/688#issuecomment-397699365:89,robust,robust,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/688#issuecomment-397699365,1,['robust'],['robust']
Availability,"In that case why looking for '-' in `read`?; Note the `getUnsignedNumber` could have a signature imposing not to have a '-' in the input string. In `getUnsignedNumber`, the case where there is a '-' is the failing case, when we do not care about perfs (you create an error message , etc.), but in the good case, the one we should not disadvantage, I think it is preferable to check the strtoll sign rather than brassing strings.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302732797:267,error,error,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302732797,1,['error'],['error']
Availability,"Indeed. It would be interesting to know why. But I can see that the `thread_local` version did not stay long (4 hours). From https://github.com/sofa-framework/sofa/pull/792, I can see that the compilation failed when `thread_local` was introduced. And the compilation log is no longer available. But you can see now that the compilation succeeds. I guess that at the time the compilation failed because of old version of the compilers. And it is no longer a problem now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1291804586:285,avail,available,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1291804586,1,['avail'],['available']
Availability,"Interesting change @alxbilger ; The `Gravity` component is available for this. But your change should make it more straightforward, I will give it a try",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4876#issuecomment-2262495726:59,avail,available,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4876#issuecomment-2262495726,1,['avail'],['available']
Availability,"Interesting. Isn't it the fault of the scene checker activated by default ? ; It will report a huge amount of things on old scenes that was not reported as error before. Maybe we should have an option to disable it (or when in batch mode). ; ; EDIT: about the failure....it is because this is compiled on the new _pr3 build VM. Where, I assume, some library is missing.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/555#issuecomment-355530144:26,fault,fault,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/555#issuecomment-355530144,3,"['error', 'failure', 'fault']","['error', 'failure', 'fault']"
Availability,Is it error/warning like this you are speaking about? @damienmarchal . ![sans titre](https://user-images.githubusercontent.com/21199245/34606959-ab1419f8-f211-11e7-9e62-a1d395072c11.png),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/555#issuecomment-355530964:6,error,error,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/555#issuecomment-355530964,1,['error'],['error']
Availability,"Is the topology mandatory for the purpose of `DiagonalMass3_test.checkAttributes`? It seems not when reading the test.; About `DiagonalMass3_test.checkAttributeLoadFromXps` error, you commented `/// Rigid file are not handled only xs3....` [here](https://github.com/sofa-framework/sofa/blob/68cc242dd0140b668485277266d26b0ce9d476cf/SofaKernel/modules/SofaBaseMechanics/SofaBaseMechanics_test/DiagonalMass_test.cpp#L813). So maybe you know how to fix the error?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440211317:173,error,error,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440211317,2,['error'],['error']
Availability,"Is there an Error message when loading the scene, telling that the mesh could not be found?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746#issuecomment-445826285:12,Error,Error,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746#issuecomment-445826285,1,['Error'],['Error']
Availability,"Is there any scene to reproduce this error? ; Either already in the plugin SofaDistanceGrid, or if you could submit a simple scene to illustrate the problem ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1218#issuecomment-777528417:37,error,error,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1218#issuecomment-777528417,1,['error'],['error']
Availability,"Is this CI error is related to the PR ? ; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1034/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/6/testReport/(root)/Assembly_test/testDecomposedString/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1034#issuecomment-494401840:11,error,error,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1034#issuecomment-494401840,1,['error'],['error']
Availability,Is this PR redundant with #96 ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/92#issuecomment-265799171:11,redundant,redundant,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/92#issuecomment-265799171,1,['redundant'],['redundant']
Availability,"It builds, no more failure...it is ready...so let's merge it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/393#issuecomment-329714464:19,failure,failure,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/393#issuecomment-329714464,1,['failure'],['failure']
Availability,It compile...now warnings or test failure so let's merge it. ; Thanks raffaela.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331164452:34,failure,failure,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331164452,1,['failure'],['failure']
Availability,"It is definitively hard to have an opengl context by hand...and having one for offscreen (without a windows) seems even more tricky (anyone's help is welcome). I know @ErwanDouaille search for that in his HeadLessRecorder. I assume it work on linux/windows...because they just don't crash/segfault when gl function are called without a buffer :) ; As said in:; https://www.opengl.org/discussion_boards/showthread.php/158904-OpenGL-function-calls-without-available-contexts. Too bad... I tried a lot of approach based on QOffscreenSurface and friends, they work on my system but as soon as I move that to a CI machine (which does not have X or GLX or whatever)...the application crash. I reseted the branch but you can still see the garbage in the Dashboard. I will try a different approach tomorrow.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357791281:454,avail,available-contexts,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357791281,1,['avail'],['available-contexts']
Availability,"It is.; The error `File size mismatch` appears because in `WriteState_test::createScene` exported files ""particleGravityX.data"" and ""particleGravityY.data"" are different from reference files """"particleGravityX-reference.data"" and ""particleGravityY-reference.data"".; This is due to the change in MechanicalObject adding `std::scientific << std::setprecision(18)`.; Exported files should be like; ```; T= 0; X= 0 0 0; ...; ```; and are now like; ```; T= 0; X= 0.000000000000000000e+00 0.000000000000000000e+00 0.000000000000000000e+00; ...; ```. Solution 1: regenerate the references located in `modules/SofaExporter/SofaExporter_test/files`.; Solution 2: revert MechanicalObject change.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/841#issuecomment-441711724:12,error,error,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/841#issuecomment-441711724,1,['error'],['error']
Availability,"It seems it didn't need any fixing, there is a math error but compensated by a roundabout use of the CSC format.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1191496072:52,error,error,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1191496072,1,['error'],['error']
Availability,"It seems that `serr` was outputed as WARNING in the test and thus not making it fail. See pre-merge output [here](https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options/267/consoleText) and search for ""Vertex2Frame : no vertices or normals found...""; Replacing it with `msg_error` create a ""real"" error so the test fails.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331837341:299,error,error,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331837341,1,['error'],['error']
Availability,"It seems that the dependency of SofaPhysicsAPI to SceneCreator needs to be fixed.; `; SofaPhysicsSimulation.cpp:49:10: fatal error: '../plugins/SceneCreator/SceneCreator.h' file not found; #include ""../plugins/SceneCreator/SceneCreator.h""`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1109#issuecomment-514504731:125,error,error,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1109#issuecomment-514504731,1,['error'],['error']
Availability,It seems to add one failure on SoftRobots @alxbilger,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4901#issuecomment-2276586436:20,failure,failure,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4901#issuecomment-2276586436,1,['failure'],['failure']
Availability,"It seems to be coming from a setup/system/configuration error than something related to SOFA itself, as the error is coming from the Windows SDK itself.; Which version of MS Visual Studio are you using ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835458410:56,error,error,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835458410,2,['error'],['error']
Availability,It worked. Note that test failures and crashes are not due to this PR :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1825#issuecomment-780069074:26,failure,failures,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825#issuecomment-780069074,1,['failure'],['failures']
Availability,"It's probably due to the version of CUDA. You can try to downgrade to cuda 11. But you can also upgrade SOFA (v23.12), as it is now compatible with CUDA 12.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4579#issuecomment-1991585902:57,down,downgrade,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579#issuecomment-1991585902,1,['down'],['downgrade']
Availability,"Just a small observation: shouln't the error be printed by the gui instead of the simulation? Since the bbox is only useful when rendering the scene. Right now, it seems that launching a simulation in batch mode will output an error about the missing bbox. In fact, I guess the error should be printed by a camera since we could be writing our own gui, but I guess this could wait until we have a valid InteractiveCamera :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/524#issuecomment-346577878:39,error,error,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/524#issuecomment-346577878,3,['error'],['error']
Availability,"Just my 2 cents, on macOS 10.14.5, Xcode 10.2.1 , Cmake 3.15.0 and Sofa sync with master, I don't have any error with the configuration.; **BUT** Cmake 3.15.0 wants to link the OpenGL framework from a non-existing /Applications/Xcode-beta.app (I dont have any beta version of XCode), and obviously breaks the make process.; So I suppose there are some bugs in the 3.15.0 version of cmake.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-514153931:107,error,error,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-514153931,1,['error'],['error']
Availability,"Just observed an error that occurs, when contacts ""disengage"".; No collision -> number of contacts 0; Following collision -> number of contacts 25 (for example); No collision (the first step, after collisions ""disengage"") -> number of contacts 431914097 (or other giant number). Any ideas?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1678#issuecomment-748638560:17,error,error,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1678#issuecomment-748638560,1,['error'],['error']
Availability,"Just passing by, I do not want to raise a flame war but actuall asin method has some documentation,; espcially when it comes to domain error:; http://www.cplusplus.com/reference/cmath/asin/; Just quoting; . > If a domain error occurs:; > - And math_errhandling has MATH_ERRNO set: the global variable errno is set to EDOM.; > - And math_errhandling has MATH_ERREXCEPT set: FE_INVALID is raised. Then looking at ; http://www.cplusplus.com/reference/cmath/math_errhandling/; The default behavior for math_errhandling is MATH_ERRNO, so as the doc suggest you can just check for the errno (thread-local) global variable value, and if it is set to EDOM after asin is called, then you can throw whatever error message you want. This is probably not relevant here, since I presume the checks are there because in theory when a quaternion is normalized the value of ; `Real(2.)*(q[3]*q[1] - q[2]*q[0])` ; should always belong to the range [-1;1]. The only reason it might not be is for some numerical drifting issues (?); Provided this assumption is correct you are indeed totally allowed to clamp the values there.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-343094942:135,error,error,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-343094942,3,['error'],['error']
Availability,Just realized that the error this PR was supposed to fix is still there: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_default_amd64/767/warnings2Result/category.96784904/; The original change (exporting the defines and re-defining them in subprojects) did fix this error though.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/595#issuecomment-376212670:23,error,error,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/595#issuecomment-376212670,2,['error'],['error']
Availability,"Just to add a little bit to this, I remember having seg fault due to this mask while doing topological changes. I just looked very quickly to the mask source code, maybe the mask vector doesn't scale with the dof state when changes occurs?. In any way, keeping a mask vector activated and used automatically while it was not asked explicitly by the user doesn't seem to be very safe. Or maybe I'm missing something.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/532#issuecomment-347520800:56,fault,fault,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/532#issuecomment-347520800,5,"['fault', 'mask']","['fault', 'mask']"
Availability,"Last regression test failing will disappear as soon as PR #4494 is merged as the new version of isquadDelaunay method is not using this method intersectionWithEdge anymore. ; And for the note, the error is a false positive. The regression should be regenerated at one point.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1937719127:197,error,error,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1937719127,1,['error'],['error']
Availability,"Like you, I guess runSofa will stay alive (albeit half-undead) for few months more so I totally approve these commits (especially the cleaning ;) ); As soon it compiles/runs successfully, lets merge it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/337#issuecomment-319605824:36,alive,alive,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/337#issuecomment-319605824,1,['alive'],['alive']
Availability,Look like the same error as this thread: https://github.com/sofa-framework/sofa/discussions/4383,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-2439639280:19,error,error,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-2439639280,1,['error'],['error']
Availability,"Looking at the source code I just find a good example. . It is from https://github.com/sofa-framework/sofa/blob/8410f29a80093f44fb0b224c91867bb7f65ee328/modules/SofaGeneralTopology/SofaGeneralTopology_test/SphereGridTopology_test.cpp; In the SphereGridCreation test. Erik wanted to test both valid and invalid code path, and he is right to do so,...but as Sofa has no way to report error to the caller's he cannot detect that (I assume this is probably what he wanted to test and why he commented out line); ```cpp; // EXPECT_EQ(sphereGrid2, nullptr);; ```. With explicit message specification improve the situation as he can now write things like that:; ```cpp; bool SphereGridTopology_test::SphereGridCreation(); {; // Creating a good Grid; {; //// This is valid code so a warning or an error is probably a regression leading to test failure; ; WarningAndErrorAsTestFailure err(SOURCE_LOCATION) ;. SphereGridTopology::SPtr sphereGrid = sofa::core::objectmodel::New<SphereGridTopology>(5, 5, 5);; EXPECT_NE(sphereGrid, nullptr);; EXPECT_EQ(sphereGrid->d_radius.getValue(), 1.0);; }. // Creating a bad Grid; {; /// must send warn a warning message to the caller indicating something goes wrong; /// mustn't send an error ; ErrorAsTestFailure err(SOURCE_LOCATION) ;; ExpectWarning warn(SOURCE_LOCATION) ;. SphereGridTopology::SPtr sphereGrid2 = sofa::core::objectmodel::New<SphereGridTopology>(-1, 0, 1);; }. return true;; }. EDIT: It just appear to me that the message rising failures are very similar in EXPECT_ /ASSERT things from gtest...nothing more, nothing less ...and similarly to EXPECT_ they are very verbose because it is what tests do :) ; Maybe I should make a macro to emphasize the similarities and showing this is part of the test framework ? ; ```cpp; EXPECT_MESSAGE( Error ) ;; EXPECT_MESSAGE( Warning ) ;; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288670168:382,error,error,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288670168,7,"['Error', 'error', 'failure']","['Error', 'ErrorAsTestFailure', 'error', 'failure', 'failures']"
Availability,Looks like the error is fixed. Let's merge?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916#issuecomment-466045293:15,error,error,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916#issuecomment-466045293,1,['error'],['error']
Availability,Looks ok to me. EDIT: @alxbilger want to remove the new errors.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1285150452:56,error,errors,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1285150452,1,['error'],['errors']
Availability,"MacOS failure is due to an error in SofaPython3, not related to this PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3073#issuecomment-1167318499:6,failure,failure,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3073#issuecomment-1167318499,2,"['error', 'failure']","['error', 'failure']"
Availability,"Make sense that this error does not appear on the CI, as the assert() is not processed by the compiler in other mode than Debug (and I suppose the CI compiles in Release mode with MSVC); and the ambiguity comes from the fact there are two invalidID things, one defined in the sofa namespace and one other defined in the defaulttype namespace for compatibility.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1577#issuecomment-719695958:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1577#issuecomment-719695958,1,['error'],['error']
Availability,Many thanks Matthieu for the time you spend on carefully reviewing this PR I appreciate. . For the movement of function in a file...my mistake I should have clean that...I tried other changes (like extern template specialization) that I finally not took into consideration in this PR but forgot to clean the file so they seems to have moved more than what they actually did. . You are right about performance issues and your suggestion for checking the first non-empty char in getUnsignedInteger looks ok so I will make the change. . Now about the getInteger vs atoi aspect my first impression is that there will be a small performance difference at the cost of scarifying correctness and code security so I really advocate for using getInteger/getUnisgnedInteger and not atoi. . To go further we probably have to measure the performance but I wouldn't be surprised to be less than a 10% speed difference so it is not worth the loss of good error reporting to user. If high performance is really an issue I prefer to put energy to implement a raw binary storage of indices because this would make things like 10x or more faster speedup as well as have less memory consumption.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302655856:941,error,error,941,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302655856,1,['error'],['error']
Availability,Maybe warning and deprecated messages should not be seen as failure by default?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291901215:60,failure,failure,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291901215,1,['failure'],['failure']
Availability,"Merged too quickly, there was a link error on Windows :disappointed:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1272#issuecomment-601113212:37,error,error,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1272#issuecomment-601113212,1,['error'],['error']
Availability,"Mine, according to cmake:; ```; Windows SDK version 10.0.19041.0 to target Windows 10.0.22631; MSVC 19.38.33130.0; ```; Weird that our numbers are mismatched. Anyway you may try to downgrade the Windows SDK ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835561211:181,down,downgrade,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835561211,1,['down'],['downgrade']
Availability,"My bad for Windows error, the dependency pack was updated too soon. #566 needs to be merged. In the meantime I restart your build with the old dependency pack ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565#issuecomment-358918900:19,error,error,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565#issuecomment-358918900,1,['error'],['error']
Availability,"My example: ; Open ""test.scn"" in my application, the content is as follows:; ```; <?xml version=""1.0"" ?>; <Node name=""root"" dt=""0.005"" gravity=""0 0 0"" >; 	<AddResourceRepository path="".""/>; 	<RequiredPlugin pluginName='SofaOpenglVisual'/>; 	<RequiredPlugin pluginName='MyTestFlugin'/>; <VisualStyle displayFlags=""hideBehaviorModels showVisual hideForceFields"" />; 	; <CollisionPipeline verbose=""0"" />; <BruteForceDetection name=""N2"" />; 	<CollisionResponse response=""MultiFrictionContact"" />; <FreeMotionAnimationLoop/>; <!--LCPConstraintSolver name=""cs"" tolerance=""0.001"" maxIt=""500""/-->; 	<GenericConstraintSolver name=""cs"" tolerance=""0.001"" maxIt=""500""/>; 	<MyTestController name=""body"" modelName=""patient.scn"" />; </Node>; ```. I dynamically load ""patient.scn"" in the MyTestController component, the code is as follows:. ```; sofa::simulation::SceneLoader *loader = sofa::simulation::SceneLoaderFactory::getInstance()->getEntryFileName(modelPath);; if (loader); {; 	m_node = loader->load(modelPath.c_str());; 	m_node->init(sofa::core::ExecParams::defaultInstance());; }; ```; The content of ""patient.scn"" is as follows:; ```; <?xml version=""1.0""?>; <Node name=""root"" gravity=""0 0 0"" dt=""0.005"" >. 	<RequiredPlugin name=""MeshFbxLoader"" />; 	<Node name=""Patient"">; 		<MechanicalObject name=""Articulations"" template=""Vec1d"" size=""1"" />; 		<Node name=""PatientBone"">; 			<MeshFbxLoader name=""fbxloader"" filename=""Body-Bone.FBX"" />		; 			<MechanicalObject name=""Bones"" template=""Rigid3d"" position=""@fbxloader.bonePos"" showObject=""0"" />; 			<Node name=""skinning"">; 				<OglModel name=""body"" src=""@../fbxloader"" />; 				<SkinningMapping name=""skinMap"" template=""Rigid3d,ExtVec3d"" input =""@../Bones"" output =""@body"" nbRef =""@../fbxloader.nbref"" indices =""@../fbxloader.boneIds"" weight=""@../fbxloader.boneWeights""/>; 			</Node>	; 			<ArticulatedSystemMapping input1=""@../Articulations"" output=""@Bones""/>; 		</Node>; 		<ArticulatedHierarchyContainer/>; 		<Node name=""articulationCenters"">; 			<Node name=""art",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696:555,toler,tolerance,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696,2,['toler'],['tolerance']
Availability,My heart is bleeding when I hear about downgrading the code-base to support compilers with incomplete c++x11 support ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/98#issuecomment-266730219:39,down,downgrading,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/98#issuecomment-266730219,1,['down'],['downgrading']
Availability,"Nice! The CI says no though:. ```; 25 | SOFA_DEPRECATED_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:761,error,error,761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008,1,['error'],['error']
Availability,"Nice!; The binaries that you can download from the website are built with python3.8, so they will also only work with python3.8.; My best advice would be to build sofa from source with a python version of your choosing. I am currently using python3.10.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757868093:33,down,download,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757868093,1,['down'],['download']
Availability,"No problem, I'll do my best to rebase my fixes here in a PR. As for the buffer overflow, it's definitely not a serious one (read-only, static size) but it aborts execution when compiled with address sanitizer, which prevents further bug discovery. Another show-stopper in SofaCUDA, `CudaBarycentricMappingRigid.cpp:50`, ODR violation:. ```; ==13885==ERROR: AddressSanitizer: odr-violation (0x7f474c739640):; [1] size=4 'class_BarycentricMappingRigid' ../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaBarycentricMappingRigid.cpp:47:1; [2] size=4 'class_BarycentricMappingRigid' ../modules/SofaMiscMapping/BarycentricMappingRigid.cpp:42:18; ```. Fix is simple: remove the `SOFA_DECL` as it's defined already somewhere else. After that, it's a world of memleaks! ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-347130851:350,ERROR,ERROR,350,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-347130851,1,['ERROR'],['ERROR']
Availability,Not sure about the UINT_MAX used for error handling. How about something like `BaseTopologyObject::INDEX_NOT_FOUND` (secretly equals to UINT_MAX)? Or an exception (cleaner)?. EDIT: There is already a `Topology::InvalidID` :wink:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/866#issuecomment-448616851:37,error,error,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/866#issuecomment-448616851,1,['error'],['error']
Availability,"Note for @sofa-framework/reviewers ; The PR now builds and tests run.; This PR might be really breaking, and your careful review and feedback is more than welcome. I am available for any question.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637#issuecomment-391685881:169,avail,available,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637#issuecomment-391685881,1,['avail'],['available']
Availability,"Note to my future dummy-me: ; Dependency is present in CMakeLists but having it in Config.cmake.in propagates this dependency to downstream modules, unable to find tinyXML since it's linked privately :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4555#issuecomment-1976565138:129,down,downstream,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555#issuecomment-1976565138,1,['down'],['downstream']
Availability,Now it's ok.; I just added the ability to call createObject function without Argument.; This will only be available for NoArgument template.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/385#issuecomment-328070969:106,avail,available,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/385#issuecomment-328070969,1,['avail'],['available']
Availability,"Now, each class has its own file. A unit test has been added. The error message is managed by a `Data<DisplayFlags>` (only if you include `Data[DisplayFlags].h`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721:66,error,error,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721,1,['error'],['error']
Availability,"OK I agree that this allows to compile Flexible without the SOFA-HighOrder. Before moving SOFA-HighOrder to the gitHub repo, do any of you know if ; there are plans to move those plugins outside of github ?. My understanding is that at some point SOFA was going to be cut into ; several pieces that could be optionally compiled. Is this still on the radar ?. Hervé. Le 05/10/2016 à 15:27, thomas-lemaire a écrit :. > yet an other option is to conditionnaly compile HighOrderTopology code ; > in Flexible based on whether the HighOrderTopology plugin is existing ; > or not (in cmakelists package_require(HighOrderTopology) if ; > (HighOrderTopology_FOUND) ... ):; > - each plugin can live in its own repository; > - no need for a third plugin; > - should work whether all the plugins are compiled in the same cmake ; > build project or are compiled/installed separately (well ; > HighOrderTopology must be available when compiling Flexible); > ; > thomas; > ; > ----- Mail original -----; > ; > > De: ""Matthieu Nesme"" notifications@github.com; > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > ; > > Hi Hervé,; > > ; > > In general, I think it is a good idea to have a repo per plugin, ; > > even if it; > > becomes more difficult to update them when the sofa core is modified.; > > But in this specific case, it would be great to add this plugin to this; > > github repo, so Flexible can still benefit from your code.; > > ; > > Another solution, could be to add a third plugin in your independent; > > repository, that would link with both SOFA-HighOrderTopology and ; > > Flexible,; > > and that would contain the high order shape functions.; > > ; > > What do you think?; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub , or mute the thread .; > ; > —; > You are receiving this because ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233:906,avail,available,906,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233,1,['avail'],['available']
Availability,"OK,; I updated the PR with a few things:; 1 / the test now checks the content of the generated files for error; 2 / Monitor has an additional data field ""fileName"" through which one can override the default path to the generated files; 3 / Monitor now respects basic coding guidelines; Looks a bit better now",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828:105,error,error,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828,1,['error'],['error']
Availability,"Ok I didn't take the time to run the tests myself so I wanted to see the Dashboard. Is it actually possible to have more than 1 failure in a test ? Both ""ATLEAST_ONE"" and ""ATLEAST_TWO"" seem useless there.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370723402:128,failure,failure,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370723402,1,['failure'],['failure']
Availability,Ok found it: the scene-tests are not performing in default mode (100 iterations with a timeout of 60s for a Debug build) because FastTetrahedronCorotationalForceField.scn is listed with custom values in examples/.scene-tests config file.; Renaming the scene according to b061a51606f9dbe6a8bb9305eb6a95af0aad6bf5 should calm down the CI ;-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359378442:324,down,down,324,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359378442,1,['down'],['down']
Availability,Ok it's fixed now. Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/ :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1891#issuecomment-790873391:117,down,download,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891#issuecomment-790873391,1,['down'],['download']
Availability,"Ok now it works, but I also need to gil-protect any module initialization that does python stuff, otherwise we get the (righteous) following error:. `Fatal Python error: PyThreadState_Get: no current thread`. and a segfault ensues. . On a related note, there really should be no naked (as in ""not wrapped in a proper `PythonEnvironment` method"") python call apart from bindings methods.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313618145:141,error,error,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313618145,2,['error'],['error']
Availability,"Ok so I see still a lot of change to do before to have a clean PR to merge. ; The first change is probably to make the code available in an independant plugin. ; I wonder if this could be an opportunity to make the whole VolumetricData a plugin ....this could be a kind of gentle test for sofa core pluginiization, . @guparan , @hugtalbot , @fredroy any opinion ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/354#issuecomment-325373316:124,avail,available,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/354#issuecomment-325373316,1,['avail'],['available']
Availability,"Ok so after a quick look at the [code](https://github.com/sofa-framework/sofa/blob/master/SofaKernel/framework/sofa/helper/ArgumentParser.cpp#L128), there is already a path that handles `--` in a non-standard way. Any argument following `--` is added to the files list, and all but the first files are ignored in the main `runSofa` executable. I don't really know if there are other binaries relying on this behavior, so what we could do is:; - either handle `--` properly, i.e. all arguments after `--` are ignored by SOFA and made available for further use, in this case by forwarding them to python.; - or add an `--extra` or `--argv` special argument that will do the same without interfering with current behaviour.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356#issuecomment-323685597:533,avail,available,533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356#issuecomment-323685597,1,['avail'],['available']
Availability,"Ok so, hopefully the end of this PR. I reverted some commit and double/both should be back to normal. In the case of float only the DilateEngine is not available and its test deactivated. So basically it should compile fine, but some components would be limited.; I quickly tried to fix it but I encountered some difficulties. I would prefer open a new issue regarding float compliance of remaining components. To sum up, it should be back to the original goal: fix compilation, not necessarily the components with type limitation",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305318209:152,avail,available,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305318209,1,['avail'],['available']
Availability,Ok thank for the extra details. After a quick glance this line is changing the way CImg is handling error. ; The problem is that it tries to lock mutex which somehow cause the crash. ; My current guess is that if it could be related to the fact that there is either image & CImage plugin which are both using CImg...which have static initialized structure...just a guess... EDIT: mmm I'm deeply thinking...in CImg; ```cpp; #if defined(cimg_module); Mutex_info& Mutex_attr();; #elif defined(cimg_main); Mutex_info& Mutex_attr() { static Mutex_info val; return val; }; #else; inline Mutex_info& Mutex_attr() { static Mutex_info val; return val; }; #endif; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356095077:100,error,error,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356095077,1,['error'],['error']
Availability,"Ok the PR' works, I looked at each build on jenkins...no failure...but the formatter is not launched but I think we can ignore the formatting stuff to move forward the release. @guparan @bcarrez do you agree ?. PS: the sofa dashboard doesn't like PR with weird name & symbols :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/556#issuecomment-357174976:57,failure,failure,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/556#issuecomment-357174976,1,['failure'],['failure']
Availability,"Ok the following works: . ```c++; static std::string convert_string(PyObject* object) {; if( PyString_Check(object) ) {; // strings will be strings; return PyString_AsString(object);; }; ; if( PySequence_Check(object) ) {; std::stringstream ss;. for(Py_ssize_t i = 0, n = PySequence_Length(object); i < n; ++i) {; if(i > 0) ss << ' ';; ss << convert_string(PySequence_GetItem(object, i));; }; ; return ss.str();; }. // fallback to python string conversion; PyObject* str = PyObject_Str(object);; std::string res = PyString_AsString(str);; Py_DECREF(str);; ; return res;; }; ```. `Binding_BaseObject.cpp:`. ```c++; SP_CLASS_METHODS_END;. static struct patch {; patch() {; // set __str__ slot for BaseObject; SP_SOFAPYTYPEOBJECT(BaseObject).tp_str = [](PyObject* self) {; return BaseObject_getLinkPath(self, nullptr);; };; }; } patcher;. SP_CLASS_TYPE_SPTR(BaseObject, BaseObject, Base); ```; It does breaks some python tests in Compliant, but this is due to errors there. I can push code to another PR that does the whole thing if needed (I don't think I have push access to this one).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307775648:957,error,errors,957,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307775648,1,['error'],['errors']
Availability,"Ok, great! I will check out the examples and give you feedback next week. Regarding the naming: This could end up being a lengthy discussion. My reasoning is that names like ""DataEngine"" have their origin in how things are implemented. I think from a user perspective it is easier to understand names like ""PyScriptableComponent"" or even ""PyComponent"", because that is what they are: components, just like any other in Sofa, with Datas, Inputs and Outputs and a certain behavior, which can be implemented in python. Of course there's the disadvantage of breaking the name consistency. If we keep the ""DataEngine"" name somehow, I vote for PythonDataEngine. Saying it is also ""Script"" is redundant.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406602449:686,redundant,redundant,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406602449,1,['redundant'],['redundant']
Availability,"On the BFM it compile perfectly!; There are just some errors related to update & doUpdate function that will need to be fixed but this doesn't come from this MR. (@EulalieCoevoet); I also test some examples and still no error for me, so it should be ok.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/834#issuecomment-441579131:54,error,errors,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/834#issuecomment-441579131,2,['error'],"['error', 'errors']"
Availability,"On the dash ; http://www.sofa-framework.org/dash/index.php?limit=10&pg=1&user=&branch=pr%2Ffix_filerepository&platform= . I do not see an information to be able to fix any compilation pb, I might not be looking in the right place ? Can you point me the correct dash url ? . thomas . ----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""Author""; > <author@noreply.github.com>; > Envoyé: Jeudi 19 Janvier 2017 10:46:13; > Objet: Re: [sofa-framework/sofa] [SofaKernel] Fix FileRepository should not; > be optional (#122). > This PR:. > * succeed on all compilations setup on the CI.; > * does not generates new warnings or test failure.; > * does not break existing scenes.; > * does not break API compatibility.; > * is now 1 week old. > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/122#issuecomment-274104510:755,failure,failure,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/122#issuecomment-274104510,1,['failure'],['failure']
Availability,One (new) scene is failing: `SceneTests.applications/plugins/LMConstraint/examples.DOFBlockerLMConstraint.scn`; The error message is: ` [ERROR] [UncoupledConstraintCorrection(default67)] Cannot remove the requested constraint solver` ; It is possible that the scene itself was wrong but it is highlighted here because you add a msg_error(),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2364#issuecomment-934166940:116,error,error,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2364#issuecomment-934166940,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"One simple solution, it to add [Base::checkDataValidity()](url). Its call would be let to the application.; For example, runSofa would call it right before `init` and `reinit`, but a more specific application could chose not to call it not to add over-cost. Note that high level checkers could be implemented (such as `check_it_is_a_valid_vector_of_indices`, ...). The downside is how to perform the check on a single Data rather than at the component level? But maybe it would be way sufficient for what we attend to do?; To perform the test at the Data level, we need to differentiate Data modification coming from a user vs coming from a computation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/265#issuecomment-302649603:369,down,downside,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/265#issuecomment-302649603,1,['down'],['downside']
Availability,"One small thing, should we mark this PR as breaking? ; From my experience (🥱), a lot of people don't really include what they use, so it could happen that a seemingly useless include in one could be useful further, in their plugin or whatever. I know this is really a bad practice from their part but still, people complain even if it is their fault 🤪.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2475#issuecomment-986582757:344,fault,fault,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2475#issuecomment-986582757,1,['fault'],['fault']
Availability,"Oups sorry @hugtalbot , I didn't see the notification that you ping me in this thread. I don't know why the triangles were oriented this way. For the breaking part, if someone was using them for BC or collisions, it will definitely break. The next thing I can see is, you are not only changing the orientation of the triangle, but also the ordering of these triangles inside the tetrahedron. If I do `TetrahedronSetTopologyContainer::getLocalTrianglesInTetrahedron (const TriangleID i)`, I no longer have the same triangle as before. That might also break something, although I can't find anything with a quick search in Sofa using it. ~~Finally, these indices are hardcoded in the cpp, and not accessible from the outside. So if someone is using them, it means he copy/pasted them in his source file. They will no longer match the one of the tetra container. This might have weird effects. It could be a good idea to make them available either directly from the header or inside a get function so that in the future, anyone using them will be in sync with the tetra container.~~ They have `getLocalTrianglesInTetrahedron` for this, I'm a little bit tired !. I guess it is ok to go forward with this, but have this PR in mind if you got ""my pressure FF doesn't work anymore, what are you guys doing????"" on the forum :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/878#issuecomment-454860278:63,ping,ping,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/878#issuecomment-454860278,2,"['avail', 'ping']","['available', 'ping']"
Availability,Ping @untereiner,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/290#issuecomment-310087786:0,Ping,Ping,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/290#issuecomment-310087786,1,['Ping'],['Ping']
Availability,Previous build was affected by master errors. Let's [ci-build] again.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-317358404:38,error,errors,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-317358404,1,['error'],['errors']
Availability,Probably because of the removal of the DataRepository intialization in https://github.com/sofa-framework/sofa/commit/5dad27f7bc374c190042959bc55367532008b25a#diff-876fc7003912f34d0dac92bb413d70a0 ; The tests are failling but as they were not in-heriting from BaseTest/SofaTest this was not reported as test failure.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440205222:307,failure,failure,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440205222,1,['failure'],['failure']
Availability,"Probably because:; [ERROR][PluginManager] Plugin not found: ""SceneCreator_d""",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/463#issuecomment-342440057:20,ERROR,ERROR,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/463#issuecomment-342440057,1,['ERROR'],['ERROR']
Availability,"Probably not related, but there is a compilation error on Windows (@guparan)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3018#issuecomment-1149987605:49,error,error,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3018#issuecomment-1149987605,1,['error'],['error']
Availability,Probably the best way to see where this operator overloads are used is to remove them from StdVectorTypes (Vec3Types and family) and see where we get the compile errors.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1525#issuecomment-706554627:162,error,errors,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1525#issuecomment-706554627,1,['error'],['errors']
Availability,"Quick summary:; Problem 1: ; Quaternion (when unnormalized) can be used to encode more than juste R3 orientation so we shouldn't force the normalization in the Quaternion operator>>().; We should have normalization detection and renormalization done only on object that we know for sure are R3 orientation. So to me the proper fix should be done in the operator>> of Rigid3Type. Problem 2:; About reporting warning to the users. This cannot be done in the Quater::normalize function. Because normalization is a perfectly valid operation to apply on an un-normalized quaternion and thus there is no meaning to report a warning. Actually it is like printing a warning when we are doing exactly what the function is supposed to do. . Now, the problem goes far beyond this PR as reporting error/exception is a complex issue in Sofa as we rely on 'message' instead of exception and C-style error handling vs exception vs printing (as in sofa) is an as old problem as c++ and in our code base all the approaches have been used.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/790#issuecomment-430591085:785,error,error,785,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/790#issuecomment-430591085,2,['error'],['error']
Availability,Replacing `#include <math.h>` by `#include <cmath>` produces a `'M_PI': undeclared identifier` error on Windows for `applications/plugins/sofadistancegrid/components/collision/DistanceGridCollisionModel.h` (and only this one).; Any idea how to solve that?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-469741320:95,error,error,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-469741320,1,['error'],['error']
Availability,"Retrospectively, I would prefer the following structure:; ```; SofaCUDA; | - component; | - mapping; | - linear; | - nonlinear; ```. I find that the intermediate directories `sofa/gpu/cuda` are superfluous, and redundant with the name of the plugin. It is also in the prevision of changing the namespaces (which is not done in this PR).; What do you think @hugtalbot @epernod @damienmarchal @fredroy ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883:211,redundant,redundant,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883,1,['redundant'],['redundant']
Availability,Review taken into account.Just not sure about the removed macro ```SOFA_BASE_CAST_IMPLEMENTATION(BaseLMConstraint)``` causing error:; ```; error: 'toBaseLMConstraint' marked 'override' but does not override any member functions; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1659#issuecomment-758827116:126,error,error,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1659#issuecomment-758827116,2,['error'],['error']
Availability,Roadmap for a totally green dashboard:; - fix the last centos bug (I heard about bruno started digging into this one); - fix the 14 ubuntu_options_debug (I made #465 that fix it but @fjourdes pointed that one of the pending InSimo PR was doing that in a more powerful/general way...so ...I praise that someone will nudge the InSimo and merge it :)); - fix the windows (well these are my fault...so I will have to spend time on that). But after that...well happy.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/478#issuecomment-337485994:387,fault,fault,387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/478#issuecomment-337485994,1,['fault'],['fault']
Availability,"Scene angularSpringForceField.scn throws an error, related to the message you just added @epernod ; Is this normal ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1448#issuecomment-676050830:44,error,error,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1448#issuecomment-676050830,1,['error'],['error']
Availability,"Scene test errors ""extension (py) not handled"" should be fixed now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1103683768:11,error,errors,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1103683768,1,['error'],['errors']
Availability,"See [this gist](https://gist.github.com/maxime-tournier/3c59175c9219098d419768d89af8a51e#file-attribute_list-cpp) for a simple prototype (start from the main function at the end). It uses a nifty trick for erasing and recovering type information through a throw/catch, which is a little slow but not slower than string conversion anyway. The one with member function pointers won't fly as it requires e.g. `DefaultPipeline::name` to be public, which is often not the case. I don't see how to come up with a reasonably usable syntax for the last one, since `Node, MechanicalObject` are (possibly dependent) type names. Also, putting them all inside a single `initializer_list` will drop type informations to make type checking possible in `createTree`, so I'm afraid this won't be worth it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-335082143:218,recover,recovering,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-335082143,1,['recover'],['recovering']
Availability,"Seems VS2017 is not happy ; ```; j:\0\src\sofakernel\modules\sofabasemechanics\src\sofabasemechanics\diagonalmass.inl(573) : fatal error C1001: An internal error has occurred in the compiler.; (compiler file 'd:\agent\_work\1\s\src\vctools\compiler\utc\src\p2\main.c', line 187); To work around this problem, try simplifying or changing the program near the locations listed above.; Please choose the Technical Support command on the Visual C++ ; Help menu, or open the Technical Support help file for more information; ```; but we are ditching vs2017, right ? 😗. Or it could be that the CI is on a VM, maybe the vCPU is also at fault here.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028148021:131,error,error,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028148021,3,"['error', 'fault']","['error', 'fault']"
Availability,Seems fine but CI shows 3 errors + 5 crashs instead of 2 errors; I guess it's the point you raised about BeamAdapter @bakpaul,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4755#issuecomment-2133725783:26,error,errors,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4755#issuecomment-2133725783,2,['error'],['errors']
Availability,Several tests are not passing yet due to error in the code to be fixed soon.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/708#issuecomment-403002854:41,error,error,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/708#issuecomment-403002854,1,['error'],['error']
Availability,"Should be fine now; I ran some tests, looks fine to me. MeshNewProximityIntersection is rarely used.; Regarding the TriangleModel the new options seems to add some 1% slow down on a test scene I made, but it's just an option. Ready for me, I wait for a second eye :eye:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1559#issuecomment-724765422:172,down,down,172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1559#issuecomment-724765422,1,['down'],['down']
Availability,Should not but I will check.; Yes in fact my fix in TetrahedronFEMFF reveals that the test was doing nothing: This the log on the master branch:; ```; [ RUN ] TetrahedronDiffusionFEMForceField_test/0.extension; [ERROR] [TetrahedronFEMForceField(fem)] object must have a mesh topology. The component is inactivated. To remove this error message please add a topology component to your scene. ```; Right now it crashes... will see if I understand enough the test to fix it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270#issuecomment-302012176:212,ERROR,ERROR,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270#issuecomment-302012176,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815:311,robust,robust,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815,2,['robust'],['robust']
Availability,So for this one the CI showing an error..but I'm not sure it is a real one... I retry ubuntu only.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1848#issuecomment-789912106:34,error,error,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848#issuecomment-789912106,1,['error'],['error']
Availability,"So it's done. That answers my question. On Mon, Jan 23, 2023, 21:14 Hugo ***@***.***> wrote:. > Sorry I do not get the question @alxbilger <https://github.com/alxbilger>; > Here it's the ChangeLog for v22.06 is already available here :; > https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md#v220600; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400919780>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ACQVHUB5KC7PSWLPY7AYYSTWT3RBZANCNFSM6AAAAAATVQHW2U>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400962682:219,avail,available,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3573#issuecomment-1400962682,1,['avail'],['available']
Availability,So now the linkage of metis is PRIVATE in `Sofa.Component.LinearSolver.Direct` and every other target requiring metis finds the package itself (e.g. SofaMatrix) . One problem is that FetchContent_MakeAvailable make the target available for the current target and its child (that is why the test in `Sofa.Component.LinearSolver.Direct` is able to link to metis without the need of finding it) but other unrelated targets cannot find it. So we cannot keep it Public because it will not be found by the other target linking to `Sofa.Component.LinearSolver.Direct` because a lot of them doesn't require metis,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1956756623:226,avail,available,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1956756623,1,['avail'],['available']
Availability,"Sofa_test.h>; using sofa::Sofa_test;. #include <SofaTest/TestMessageHandler.h>; using sofa::helper::logging::GtestMessageHandler ;. /// We can define a default policy for a complete class this way so that if not more; /// expectation are given this generates test failures.; class Sofa_test2 : public Sofa_test<float>; {; EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;; };. class TestMessageHandler_test : public Sofa_test2; {; public:; void defaultTestBehavior(); {; msg_deprecated(""HERE"") << ""This should generate a failure"" ;; msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a failure"" ;; }. void catchingTestBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should not generate a failure"" ;; msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. /// THIS TEST SHOULD FAIL.; void expectAMessageissingBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should not generate a failure"" ;; //msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure but with line number close to "" << __LINE__ ;; msg_error(""HERE"") << ""This should generate a test falure with line number close to "" << __LINE__ ;; }. void complexTestBehavior(); {; {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should generate a failure"" ;; //msg_error(""HERE"") << ""This should generate a test failure"" ;; {; EXPECT_MSG_NOEMIT_V2(Error) ;; msg_error(""HERE"") << ""This should generate a test failure"" ;; }; }. {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a test falure"" ;; }. }; }",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643:1601,Error,Error,1601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643,1,['Error'],['Error']
Availability,"Some `image` plugin scenes fail because the template used is not compiled in the standard set. It needs the full set. Only the standard set is compiled on the CI. Decision to take:; 1) The failing scenes are ignored on the CI; 2) The failing scenes are modified to use a templated available in the standard set; 3) The CI compiled the full set. I am in favor of the third option, but we already talked about it in https://github.com/sofa-framework/ci/pull/15. It seems to take too much time at the compilation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1288716378:281,avail,available,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1288716378,1,['avail'],['available']
Availability,"Some benchmarks done:; (setup: whole SOFA compiled either float or double, and the scene is just an OglModel drawting the dragon from the stanford database http://graphics.stanford.edu/data/3Dscanrep/ , which has 500K vertices and 1M triangles); - SOFA with double: 105 fps; - SOFA with float: 110 fps; ; (on Windows); the small difference is within the error margin (and in a real simulation the rendering itself is negligible). <img src=""https://user-images.githubusercontent.com/11028016/166214524-85d8ae4d-0ccd-43a3-8a55-9437b12dc36e.PNG"" width=""200"" />",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2856#issuecomment-1113123372:354,error,error,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2856#issuecomment-1113123372,1,['error'],['error']
Availability,"Some formatting errors (tabs) but looking at your work @epernod it does not matter, we could maybe run the format-script.; Anyway, a short question: for the MMMass for instance, even before your changes it would not have supported a mixed mesh (mix of hexa & tets for instance) ? right ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1352#issuecomment-631272046:16,error,errors,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1352#issuecomment-631272046,1,['error'],['errors']
Availability,"Some functionalities introduced by this PR looks redundant to the existing printLog data, and can replace it with great advantage. Moreover, the current usage of this printLog data varies from one component to an other, and could be cleaned in the same time.; Maybe a sdebug stream (in addition to sout, serr) could be introduced to cover some of the misusage of the printLog data.; Initially, printLog is to print or not the component messages to the standard output",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276617447:49,redundant,redundant,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276617447,1,['redundant'],['redundant']
Availability,"Some more info about this test... ; Fails on master since b70b477f; Error appeared in `defrost` branch between 4b1f289 and a33b4b1.; First CI build with error: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_default_amd64/546/ ; Error message: ; ```; J:\job\origin\master\modules\SofaOpenglVisual\SofaOpenglVisual_test\LightManager_test.cpp:65; Expected: (lm) != (nullptr), actual: NULL vs 8-byte object <00-00 00-00 00-00 00-00>; ```; Full output: ; ```; Running SofaOpenglVisual_test.exe; Seed Value used for the tests = 1478637948; [==========] Running 1 test from 1 test case.; [----------] Global test environment set-up.; [----------] 1 test from TestLightManager; [ RUN ] TestLightManager.checkAttributes; [ERROR] [DAGNode ""Level 1""] Object type ""MechanicalObject"" creation Failed; Emitted from 'J:\job\origin\master\SofaKernel\modu; les\SofaSimulationCommon\xml\NodeElement.cpp' line ; 92; [ERROR] [DAGNode ""Level 1""] Object type ""LightManager"" creation Failed; Emitted from 'J:\job\origin\master\SofaKernel\modu; les\SofaSimulationCommon\xml\NodeElement.cpp' line ; 92; [ERROR] [SceneLoaderXML] Node initialization failed.; Emitted from 'testscene' line 1; J:\job\origin\master\modules\SofaOpenglVisual\SofaOpenglVisual_test\LightManager_test.cpp(65): error: Expected: (lm) != (nullptr), actual: NULL vs 8-byte object <00-00 00-00 00-00 00-00>; unknown file: error: SEH exception with code 0xc0000005 thrown in the test body.; [ FAILED ] TestLightManager.checkAttributes (9 ms); [----------] 1 test from TestLightManager (9 ms total). [----------] Global test environment tear-down; [==========] 1 test from 1 test case ran. (10 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TestLightManager.checkAttributes; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263269510:68,Error,Error,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263269510,9,"['ERROR', 'Error', 'down', 'error']","['ERROR', 'Error', 'down', 'error']"
Availability,"Some notes:. - It was extremely hard to understand why L^T was used in the first step of the solve, and not L. I hope it's clearer now with the comment I added. Anyway, it requires to have the knowledge of the CSR and CSC formats, and how they relates to the transpose.; - I would like to use C++20 `std::span` in some functions such as `solveLowerUnitriangularSystemCSR`.; - Regression tests threshold are usually set to 1e-4. IMO it's not enough to capture errors happening on a single DOF because it's an average",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403:459,error,errors,459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403,1,['error'],['errors']
Availability,"Sorry @alxbilger, typo in my rewrite of the output. In fact, the error starts with ""$EndNodes"", so no possibility to read the elements.; The `cmd==""$EndNodes\r""`, so the comparison is always wrong. ; @hugtalbot, yes, it works for the other file I have. This shouldn't change anything for files that don't put '\r' at the end of keywords.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3030#issuecomment-1152074953:65,error,error,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3030#issuecomment-1152074953,1,['error'],['error']
Availability,"Sorry for the dual edditing... I didn't knew github was not robust against that. . I merge the PR because I hate having PR that longs for month and we can still fix the description even when it is merged/closed. . Many thanks,",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311019886:60,robust,robust,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311019886,1,['robust'],['robust']
Availability,Still some compilation errors left,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1128659439:23,error,errors,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1128659439,1,['error'],['errors']
Availability,"Strange error on Mac clang: ; ```; Adding module SofaOpenglVisual; CMake Error at /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1239/mac_clang-3.5_options_release/build/cmake/SofaFrameworkConfig.cmake:76 (find_package):; Could not find a package configuration file provided by ""GTest"" with any of; the following names:. GTestConfig.cmake; gtest-config.cmake. Add the installation prefix of ""GTest"" to CMAKE_PREFIX_PATH or set; ""GTest_DIR"" to a directory containing one of the above files.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572047709:8,error,error,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572047709,2,"['Error', 'error']","['Error', 'error']"
Availability,"Strange there is still a gtest error @alxbilger ; ```; gtest.h:1527:11: error: no match for 'operator==' (operand types are 'const sofa::type::Mat<1, 1, int>' and 'const int'); 1527 | if (lhs == rhs) {; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1384214056:31,error,error,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3584#issuecomment-1384214056,2,['error'],['error']
Availability,"Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901:205,avail,available,205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901,1,['avail'],['available']
Availability,Test failures are still here. Looks like CMAKE_INSTALL_DEFAULT_COMPONENT_NAME is not responsible for the failures then.; I keep this PR open to investigate...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2059#issuecomment-831802913:5,failure,failures,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059#issuecomment-831802913,2,['failure'],['failures']
Availability,"Test is failing:. ```; [ERROR] [MergeVectors(mergedPositions)] Requested template 'Data<double>' cannot be found in the list of available templates [vector<RigidCoord2d>, vector<RigidCoord3d>, vector<RigidDeriv2d>, vector<RigidDeriv3d>, vector<Vec2I>, vector<Vec2d>, vector<Vec3d>, vector<Vec4d>, vector<bool>, vector<d>, vector<i>]. Falling back to the first compatible template: 'vector<d>'.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676:24,ERROR,ERROR,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676,2,"['ERROR', 'avail']","['ERROR', 'available']"
Availability,Test is fixed. Failure was due to the fact that test values were generated before c81e4b73f24c2272e9346be3b5c0a1756ecdca59.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323962386:15,Failure,Failure,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323962386,1,['Failure'],['Failure']
Availability,Test.html) | [misc-misplaced-const](https://clang.llvm.org/extra/clang-tidy/checks/misc-misplaced-const.html) |; | [clang-analyzer-core.CallAndMessage](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.CallAndMessage.html) | [misc-misplaced-widening-cast](https://clang.llvm.org/extra/clang-tidy/checks/misc-misplaced-widening-cast.html) |; | [clang-analyzer-core.DivideZero](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DivideZero.html) | [misc-new-delete-overloads](https://clang.llvm.org/extra/clang-tidy/checks/misc-new-delete-overloads.html) |; | [clang-analyzer-core.DynamicTypePropagation](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DynamicTypePropagation.html) | [misc-non-copyable-objects](https://clang.llvm.org/extra/clang-tidy/checks/misc-non-copyable-objects.html) |; | [clang-analyzer-core.NonNullParamChecker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonNullParamChecker.html) | [misc-redundant-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-redundant-expression.html) |; | [clang-analyzer-core.NonnilStringConstants](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonnilStringConstants.html) | [misc-sizeof-container](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-container.html) |; | [clang-analyzer-core.NullDereference](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NullDereference.html) | [misc-sizeof-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-expression.html) |; | [clang-analyzer-core.StackAddressEscape](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.StackAddressEscape.html) | [misc-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/misc-static-assert.html) |; | [clang-analyzer-core.UndefinedBinaryOperatorResult](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.UndefinedBinaryOperatorResult.html) | [misc-string-compare](https://clang,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:9002,redundant,redundant-expression,9002,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-expression']
Availability,"Testing this with the Visual Studio compiler, on my (getting old) desktop (4 cores, 16GB RAM, Windows) I obtained :. ```; - MSVC/debug: 23:52; - MSVC/debug/pch: 14:50; - MSVC/debug/unity: 15:10; - MSVC/debug/pch+unity: 12:46. - MSVC/release: 34:44; - MSVC/release/pch: 23:51; - MSVC/release/unity: 28:52; - MSVC/release/pch+unity: 23:52; ```. So this gives me a 20 to 50% decrease in build time (:+1:), and I would say that performances obtained either with unity, pch, or both are comparable.; Aside from that, when using the unity build, I get only one error while compiling SofaMeshCollision (for multiply defined symbols)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404:555,error,error,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404,1,['error'],['error']
Availability,"Thank Eulalie for this report. After discussion with Erik, STL was remove on purpose but the error message is not clear on that and on how to fix the Scene. We will fix that this friday. DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/768#issuecomment-420558059:93,error,error,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/768#issuecomment-420558059,1,['error'],['error']
Availability,Thank for the reviewed. ; I checked the example file and my thinking is that this example is wrong and my PR is legitimate. ; 1) if you change in the example to turn visualization of the edge set it will crash. ; 2) The edgeset is in the root node and so the existing code to retrieve the context in the init() is not working as we expect.; 3) The code in the PR is right at detecting and reporting an error when this case is detected. . So i moved the EdgeSet into the same node as the topology. So the error does not pop up.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/973#issuecomment-483165483:402,error,error,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/973#issuecomment-483165483,2,['error'],['error']
Availability,"Thank maxime for this PR. . According to Mathieu's comment it is unclear to me if the PR should:; - be splitted in two; one with the error handling and one with the adding of the Spring Data binding; - or merged with minor change because, even if not perfect, this PR fundamentally it improves Sofa. ; ; EDIT: [ci-build] and up :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/156#issuecomment-277264998:133,error,error,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/156#issuecomment-277264998,1,['error'],['error']
Availability,"Thank you @fredroy and @alxbilger for the quick response on this issue!. I cherry-picked your merged commit [3f59ca7] from sofa/master into my local branch based on sofa/v21.06, this issue still happens to me as before. I actually don't see any ERROR messages in the sofa console when I change mouse to attach-using-bilaterial-constraint mode and try to grasp the caduceus.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2495#issuecomment-976154055:245,ERROR,ERROR,245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2495#issuecomment-976154055,1,['ERROR'],['ERROR']
Availability,"Thank you for your comment; The interest is to be able to map the forcefields through the mapping in a sparse manner for many solvers of SOFA. I agree that this functionality is not directly available in the API and for now, would be only available in a private plug-in. But this is work in progress and we need more time to have a clean code available. Why does it break the API ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/276#issuecomment-306720849:191,avail,available,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/276#issuecomment-306720849,3,['avail'],['available']
Availability,"Thank you for your report @louise-scherrer . This segmentation fault is indeed a bug, and should be prevented. Here is the call stack to the fault:. ```; -> return m_trianglesAroundVertex[i];; const MeshTopology::TrianglesAroundVertex& MeshTopology::getTrianglesAroundVertex(PointID i); bool LocalMinDistance::testValidity(Point &p, const Vector3 &PQ); int LocalMinDistance::computeIntersection(Point& e1, Point& e2, OutputVector* contacts); int MemberElementIntersector<Point, Point, LocalMinDistance>::intersect(core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, DetectionOutputVector* contacts); void BruteForceDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void NarrowPhaseDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void DefaultPipeline::doCollisionDetection(const helper::vector<core::CollisionModel*>& collisionModels); void PipelineImpl::computeCollisionDetection(); ...; void CollisionAnimationLoop::computeCollision(const core::ExecParams* params); void FreeMotionAnimationLoop::step(const sofa::core::ExecParams* params, SReal dt); ```. I'll try to further look into this. We should try to find the best place to prevent this kind of fault without impacting too much the computation time.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329:63,fault,fault,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329,3,['fault'],['fault']
Availability,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:83,error,error,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,2,['error'],['error']
Availability,"Thank you. I have successfully run it on my laptop (MAC M2 chip with qt5).; I have modified both `.bashrc` and `.zshrc` with define the `Qt5_DIR` but it does not change the value in `cmake-gui`.; Thus, I modified the `QT5_DIR` in `cmake-gui` directly and it plays well.; Before that, it has a small error, like `Imported target ""tinyxml"" includes non-existent path`; I deleted the default one in `/usr/local/lib` and modified the `TinyXML_DIR` with the path installed by `homebrew`. Anyway, Thanks a lot.; <img width=""1099"" alt=""sofa"" src=""https://user-images.githubusercontent.com/56861752/210767352-6f43621e-1559-40da-a15d-cd28a18945ca.png"">",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159:299,error,error,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159,1,['error'],['error']
Availability,Thanks @sergeiNikolaev for this contribution and making this nice effort of bringing back this work.; - Is any test available with these new classes?; - is there any example scene?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-616496056:116,avail,available,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-616496056,1,['avail'],['available']
Availability,"Thanks Jérémie,. The remaining failing tests are our classic failures so this PR seems ok to me. ; @guparan Can this one be set to the flag ready for merge ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-308375664:61,failure,failures,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-308375664,1,['failure'],['failures']
Availability,"Thanks Pedro! Since you repaired #1788, this PR is actually not necessary. We will backport #1788 manually into v20.12 :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1805#issuecomment-778289229:24,repair,repaired,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805#issuecomment-778289229,1,['repair'],['repaired']
Availability,"Thanks for the clarification @damienmarchal. It makes sense. ; As you said, it's a feature. Therefore, I just want to make sure that this feature is used enough to justify the maintenance cost.; Note that I believed that the feature was also possible with Python, but I don't see it. I would prefer it, compared to a scene component which does not bring anything to the simulation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265209282:176,mainten,maintenance,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265209282,1,['mainten'],['maintenance']
Availability,"Thanks for the explanation,. So, when GLOBAL is set the friction coefficient came from the mu parameter and when {MINIMUM, AVERAGE, GEOMETRIC, PRODUCT} is set the friction coefficient is computed from the objects with the corresponding function. . If so, I agree that a GLOBAL flags in addition to MINIMUM, AVERAGE, GEOMETRIC and PRODUCT would make sense. I also agree with maxim's that ""In any case I would favour clamping negative mu to zero together with some warning displayed since mu < 0 is a modelling error anyways."". It could also be nice to display a warning when 'mu' is set while GLOBAL is not to inform users they are maybe mis-understanding something (and provide an advice on how to fix the problem). . Finally I also have the feeling that the ""horizontal"" data field could also be improved by renaming it with something like ""coneProjection"" with two possible values: [""horizontal"" and ""orthogonal""] instead of using a boolean. The boolean can be kept inside but it should not be exposed as is to the users.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/81#issuecomment-265566878:509,error,error,509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/81#issuecomment-265566878,1,['error'],['error']
Availability,Thanks for the fast-review&merge @epernod and @alxbilger. ; The compilation error does not look related. ; So I merge :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3018#issuecomment-1150023581:76,error,error,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3018#issuecomment-1150023581,1,['error'],['error']
Availability,"Thanks for the reply @damienmarchal ; Error of link apparently is remaining. I guess that SofaGeneralExplicitOdeSolver and SofaGeneralImplicitOdeSolver which were depending on SofaSimulationTree, had also a dependency to the SofaSimulationTree's dependency: SofaSimulationCommon",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1664#issuecomment-745947292:38,Error,Error,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1664#issuecomment-745947292,1,['Error'],['Error']
Availability,"Thanks for the review @alxbilger,. I integrates your comments.; More generally do you have any opinion on how we could improve the exceptions/component error in Sofa ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-927720383:152,error,error,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-927720383,1,['error'],['error']
Availability,"Thanks for this massive PR @EulalieCoevoet :+1:. Here is the error output for CentOS build:; ```; In file included from /usr/include/boost/intrusive_ptr.hpp:16:; /usr/include/boost/smart_ptr/intrusive_ptr.hpp:68:34: error: use of undeclared identifier 'intrusive_ptr_add_ref'; if( px != 0 && add_ref ) intrusive_ptr_add_ref( px );; ^; /builds/workspace/sofa-framework/PR-798/centos_clang-3.4_options_release/src/SofaKernel/framework/sofa/core/../../sofa/core/objectmodel/SPtr.h:56:28: note: in instantiation of member function 'boost::intrusive_ptr<sofa::component::mapping::BarycentricMapperEdgeSetTopology<Vec3dTypes, ExtVec3fTypes> >::intrusive_ptr' requested here; New(Args&& ... args) : SPtr( new T(std::forward<Args>(args)...) ) { }; ^; /builds/workspace/sofa-framework/PR-798/centos_clang-3.4_options_release/src/SofaKernel/SofaBase/../modules/SofaBaseMechanics/BarycentricMapping.inl:973:40: note: in instantiation of function template specialization 'sofa::core::objectmodel::New<sofa::component::mapping::BarycentricMapperEdgeSetTopology<Vec3dTypes, ExtVec3fTypes> >::New<sofa::component::topology::EdgeSetTopologyContainer *&, sofa::component::topology::PointSetTopologyContainer *&>' requested here; m_mapper = sofa::core::objectmodel::New<EdgeSetMapper>(t5, toTopoCont);; ^; ```. SofaCUDA seems also to be a problem on Linux build.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432568313:61,error,error,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432568313,2,['error'],['error']
Availability,Thanks for your PR @raffaellatrivisonne :-); Could you add a small description explaining the error and your fix please?; [ci-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-329738621:94,error,error,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-329738621,1,['error'],['error']
Availability,"Thanks for your inputs @fspadoni and @damienmarchal , and sorry for the late response. There are two commits in this PR (two versions of the fix); the first one fixed completely the problem on mac OS X, but may introduce thread race condition as only the constructor of a static variable is thread safe. Since the **messageTypePrefixes** and **messageTypeColors** static arrays are initialized in the ; **formatMessage** method, two threads can collide there. The second one tries to fix that, but isn't working yet (hence the commit name ""temp"").; In this one, the **DefaultStyleMessageFormatter** singleton instantiation doesn't cause a seg fault on mac os x anymore, but the **messageTypeColors** static array fails to instantiate correctly, causing all console messages to be blue. This may be because **Console::BRIGHT_GREEN**, **Console::BRIGHT_YELLOW**, etc. are all, of course, static objects. Since they are initialized in another .cpp, the order of their constructor calls with respect to the **DefaultStyleMessageFormatter** singleton instantiation cannot be predicted (compiler bound). I'll try to find a solution in two weeks (I'll be away for the next 10 days working hard on my sun tan ☀️)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642#issuecomment-389782748:643,fault,fault,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642#issuecomment-389782748,1,['fault'],['fault']
Availability,"Thanks guillaume for the investigation,; The easy solution is to use msg_warning instead (restoring the old behavior). ; But shouldn't something that prevent the component to work be reported as an error and thus we should fix the test ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331839847:198,error,error,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331839847,1,['error'],['error']
Availability,"That is to say, I need to download the source of the sofa in the docker container (/home), then compile the sofa according to the regular instructions based on dependencies in the docker",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4230#issuecomment-1758040613:26,down,download,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4230#issuecomment-1758040613,1,['down'],['download']
Availability,"The 20 new unit tests failures are still there, certainly caused by 092b19fd8e922d155a459de09f002f1815ce9a16.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317#issuecomment-317355829:22,failure,failures,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317#issuecomment-317355829,1,['failure'],['failures']
Availability,"The CI does not look happy, but I think it's nothing:. for Linux: some permission error at CMake phase. and Windows: ; - `139 - see BUILD_URL/artifact/parent_dir/build/scene-tests/archive/applications/plugins/SensableEmulation/examples/SimpleBox-Method2.scn/output.txt`; - `3 - see BUILD_URL/artifact/parent_dir/build/scene-tests/archive/examples/Components/topology/TopologicalModifiers/HexahedronForceFieldTopologyChangeHandling.scn/output.txt`. + scenes not working:; HexahedronCompositeFEMMapping.scn; HexahedronCompositeFEMForceFieldAndMass.scn",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1397#issuecomment-646697637:82,error,error,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1397#issuecomment-646697637,1,['error'],['error']
Availability,The CI finished but the dashboard is not up-to date.; The test failure are pre-existing to the PR. So I merge it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314#issuecomment-316832128:63,failure,failure,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314#issuecomment-316832128,1,['failure'],['failure']
Availability,"The CI is down, but to me this is ok. So I take the resposability of merging it :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/962#issuecomment-471907830:10,down,down,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/962#issuecomment-471907830,1,['down'],['down']
Availability,"The Cmake option is set on true, it compile but when I run runSofa there is no gui available. Even when I consult the help with runSofa -h there is only the batch in the list of GUI.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3006#issuecomment-1146593775:83,avail,available,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3006#issuecomment-1146593775,1,['avail'],['available']
Availability,"The O(n) should be avoided even though; 1. there might already be a O(n) lookup hiding somewhere during insertion; 2. we should be fine in practice; 3. this should really be O(log n) anyways. I like the late check during `getChild/getObject`, and even more so the Visitor approach where all the checks are made in a separate pass (aside: in this spirit we could provide a `check` method just like `init` and a visitor that checks consistency so that we don't have to check stuff all the time during simulation. also: use exceptions for error handling!!). More generally, why do we have objects and children stored in a list? We just need to store pointers to the siblings directly inside nodes/components instead of the extra memory/indirections, especially if we're using lists.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323954428:536,error,error,536,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323954428,1,['error'],['error']
Availability,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:11,down,downloaded,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154,3,"['down', 'error']","['downloaded', 'error']"
Availability,"The ReadScene_test not passing is explicitly said so in the PR description, this is a new test showing an existing wrong behavior in Sofa (i.e. not sending an error message when trying to load an invalid faile). [ci-build][with-scene-tests] will say if my last commit fixed the old scene failing",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465728648:159,error,error,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465728648,1,['error'],['error']
Availability,The [ReadState test](https://github.com/sofa-framework/sofa/blob/0da3f6e1aef69318838c4a363e017d7901f14483/modules/SofaGeneralLoader/SofaGeneralLoader_test/ReadState_test.cpp#L76) is not passing due to error not emitted. and all scenes with XspLoader are crashing,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465493555:201,error,error,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465493555,1,['error'],['error']
Availability,"The added function is used in a few places in plugins I would like to make available in addition to the ROS connector. It is not specifically tied to the multithreaded collision pipeline, but it is potentially useful independent of the relation to the plugins in question, and easy to patch into a core class as it introduces no further dependencies on additional modifications.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1383#issuecomment-628533144:75,avail,available,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1383#issuecomment-628533144,1,['avail'],['available']
Availability,"The broken tests are caused by new error messages introduced by converting serrs into msg_errors. the number of errors should be updated in the tests. @epernod has a waiting PR doing just that, so I suggest that we merge and wait for erik's fixes in his own PR, as he suggested himself ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916#issuecomment-461874062:35,error,error,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916#issuecomment-461874062,2,['error'],"['error', 'errors']"
Availability,"The build error is ; ```; Undefined symbols for architecture x86_64:; ""sofa::component::collision::response::mapper::BarycentricContactMapper<collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::createMapping(char const*)"", referenced from:; sofa::component::collision::response::contact::FrictionContact<collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::activateMappers() in MORFrictionContact[OBBCapsule].cpp.o; sofa::component::collision::MORFrictionContact<collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::activateMappers() in MORFrictionContact[OBBCapsule].cpp.o; sofa::component::collision::response::contact::FrictionContact<collisionobbcapsule::geometry::CapsuleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TriangleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::activateM",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3083#issuecomment-1169948589:10,error,error,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3083#issuecomment-1169948589,1,['error'],['error']
Availability,"The call stack of the runtime error on Linux is the following:. ```; ########## SIG 6 - SIGABRT: usually caused by an abort() or assert() ##########; sofa::helper::BackTrace::sig(int); pthread_kill; raise; abort; free; std::__new_allocator<int>::deallocate(int*, unsigned long); std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long); std::_Vector_base<int, std::allocator<int> >::~_Vector_base(); std::vector<int, std::allocator<int> >::~vector(); sofa::type::vector<int, sofa::type::CPUMemoryManager<int> >::~vector(); sofa::linearalgebra::CompressedRowSparseMatrixGeneric<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixGeneric(); sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixMechanical(); void std::_Destroy<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >(sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>*); std::_Sp_counted_ptr_inplace<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose(); std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release(); std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count(); std::__shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr(); std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >::~shared_ptr(); std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > >::~pair(); std::_Rb_tree<sofa::core::behavior::BaseMechanicalState*, std::pair<sofa::core::b",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:30,error,error,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['error'],['error']
Availability,The changes have not been propagated everywhere @epernod ; ```bash; /builds/workspace/sofa-framework/PR-1495/mac_clang-3.5_options_release/src/modules/SofaGeneralLoader/SphereLoader.cpp:81:5: error: use of undeclared identifier 'radius'; did you mean 'd_radius'?; radius.beginEdit()->clear();; ^~~~~~; d_radius; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-696242423:192,error,error,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-696242423,1,['error'],['error']
Availability,"The creation of TriangleSetAlgorithms is not linked to the creation of triangleSetTopologyContainer arrays like edgesInTriangle. what can be possible is that MeshMatrixMass access to edgesInTriangle which is not filled due to the return.; But the return is reached because the input topology is not consistent. And the choice was done to break instead of simulating potential wrong behavior. My question was, in your PR, by removing the return, how many error is dumped if you test #1243 ?. each error means an inconsistency between the Triangle, the Edge and the EdgeInTriangles structure so potentially if FEM is using edges and mass the EdgeInTriangles, you won't fill the matrix in the same order.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577251657:454,error,error,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577251657,2,['error'],['error']
Availability,"The difference lies in the fact that the `UniformLagrangianConstraint` is applied to all the model points. This assumption is important because thank's to this, it is able to use a block optimization when the data `iterative` is set to false. Here, it wouldn't be possible because we don't have the guaranty that the points ids will be contiguous. . As for the other specialization, what I did was to replicate the two specialization already available for the `BilateralLagrangianConstraint`. Actually I made sure to factorize as much as possible so that it would be easier for new specialization to pbe implemented. I could add them, but given that they didn't exist for the `BilateralLagrangianConstraint`, I don't know if they are really useful for anyone.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4646#issuecomment-2082914275:442,avail,available,442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4646#issuecomment-2082914275,1,['avail'],['available']
Availability,The error in the tests came from (applications/plugins/LMConstraint/src/LMConstraint/LMConstraintSolver.cpp) in `init`:; ```cpp; listConstraintCorrection[i]->removeConstraintSolver(this);; listConstraintCorrection[i]->addConstraintSolver(this);; ```; The first line removed the element from the list whereas the element was never added to the list (we are in the `init` method). It is added in the second line.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2364#issuecomment-940746618:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2364#issuecomment-940746618,1,['error'],['error']
Availability,The error is gone apparently :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572973788:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572973788,1,['error'],['error']
Availability,The error on the CI :. ```; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaSphereModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaSphereModel.h instead. ; J:\0\src\applications\plugins\SofaCUDA\sofa/gpu/cuda/CudaPointModel.h(26): error: This header has been DISABLED since v23.12 after being deprecated on v23.06. To fix this error you must include SofaCUDA/component/collision/geometry/CudaPointModel.h instead. ; ```. has been fixed in the PR suite Lifecycle.; This will should therefore be automatically be fixed when #4058 will be merged,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1662943647,5,['error'],['error']
Availability,The error says you are using 3.16. ; `CMake Error at /usr/share/cmake-3.16`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761264704:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761264704,2,"['Error', 'error']","['Error', 'error']"
Availability,The error to be fixed was due to `using namespace std;` removal.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1097#issuecomment-510019064:4,error,error,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1097#issuecomment-510019064,1,['error'],['error']
Availability,"The fails again... the mac_clang-3.4 succeeded (I restarted but the previous build was here; https://ci.inria.fr/sofa-ci/job/mac_clang-3.4_options_pr3/25/console); And the additional failure in test scenes is because some machines still don't have the libjpeg/tiff library installed (se macos pr3 ) :) . @guparan, @hugtalbot if you are passing by please considere merging the PR because we need it monday morning for our group writing of tutorials for Sofa :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357312877:183,failure,failure,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357312877,1,['failure'],['failure']
Availability,"The failure is not generated by the PR but by the use of clang 6.0 on some sofa-macos builder. ; The underlying question is whether the problematic code is c++11 and thus valid or not. ; If it is not it has to be changed, if it is valid we need to change the compiler ot the sofa-macos builder machine. Anyhow I will rebuild it on the other builder;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/425#issuecomment-336396630:4,failure,failure,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/425#issuecomment-336396630,1,['failure'],['failure']
Availability,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:166,error,error,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169,6,['error'],"['error', 'errors']"
Availability,The filesystem error was fixed by upgrading my Ubuntu version. Thanks!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527#issuecomment-1962316095:15,error,error,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527#issuecomment-1962316095,1,['error'],['error']
Availability,"The function asin is defined in [-1,1].; The fix prevents NAN when the argument is slightly >1 due to numerical errors (1,000000000000001).; Hope it's clear enough.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-335735433:112,error,errors,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-335735433,1,['error'],['errors']
Availability,"The most important is just the `if (results.size() <= 1)` in `HasFailures`.; About the name, I started by fixing the typo ""ATLEASE"" and finnaly changed the whole thing but it's not very important we can go back to ""ATLEAST"" if you prefer :-). EDIT: Actually we can't since the new behavior is to pass only if there is MORE than 1 failure.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370712593:330,failure,failure,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370712593,1,['failure'],['failure']
Availability,"The new crash you have is in the `solve` function, trying to access an element of an empty vector (either the solution vector, or the right-hand side vector). The solve function is [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolver.inl#L74), called from [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Iterative/src/sofa/component/linearsolver/iterative/MatrixLinearSolver.inl#L199). . The solveSystem function works in 2 steps: 1) factorize the matrix into LDL, 2) solve the system based on the factorization. As far as I can see, the solving process runs even if the factorization fails. It's probably why you have the crash. A modification to do could be to catch the error in the solveSystem function and not perform the solving. In the meantime, as a quick fix, you can try to set `invertData->n = n;` before leaving the function:. ```cpp; int n = M.colSize();; invertData->n = n;; ```. `invertData->n` would be `=0`, then the [solve function](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolverImpl.h#L160) may run safely.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611:874,error,error,874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611,1,['error'],['error']
Availability,"The problem comes when using 'both' it seems. For one part of the build failure, TriangleOctree / TriangleOctreeRoot must be instantiated with both precision instead of currently using the default type SReal only.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305127979:72,failure,failure,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305127979,1,['failure'],['failure']
Availability,"The problem with the approach to have a name helper in each Node is that the Node must exist before using it. And it's not the case in the XML loader. A name is required before the object creation, and no Node is available at that time. Therefore, I used a single name helper inside the XML loading for all the components. In this case, the counter suffix does not depend on the Node. A problem with this approach (other than it's not consistent), Nodes' counters are not updated...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028170905:213,avail,available,213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028170905,1,['avail'],['available']
Availability,"The project has been renamed to ""Sparse Matrix"" and ""Sparse Vector"" representation because we have similar issues with Mask, mapping, constraints, solvers etc... due to the lack of unified ""sparse"" representation of vectors and matrices in SOFA.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292202592:119,Mask,Mask,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292202592,1,['Mask'],['Mask']
Availability,The same error appears in SparseLUSolver...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/74#issuecomment-263585022:9,error,error,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/74#issuecomment-263585022,1,['error'],['error']
Availability,The scene CarvingTool.scn throws an error: `[CarvingManager(carvingManager1)] m_surfaceCollisionModels not found. Set tag 'CarvingSurface' to the right collision models.`; Could you have a look @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1110#issuecomment-516839841:36,error,error,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1110#issuecomment-516839841,1,['error'],['error']
Availability,The seg fault on compliant doesn't seems to be related to this PR since I also got the fault on my mac with the master branch.... You might need to launch the Compliant_test a couple of time to get the seg fault.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990#issuecomment-489105279:8,fault,fault,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990#issuecomment-489105279,3,['fault'],['fault']
Availability,"The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603:15,failure,failure,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603,1,['failure'],['failure']
Availability,"The unit tests on the StaticSolver failed because the Metis permutation using the Eigen API did not give the same result than the Metis permutation that was implemented before. This is intriguing... But the most concerning problem is that the result of the linear solver depends on the permutation. Hopefully, it is only a problem of numerical errors. Afterall, the operations are not the same depending on the permutation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4370#issuecomment-1895627928:344,error,errors,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370#issuecomment-1895627928,1,['error'],['errors']
Availability,"There are a few tests/scenes throwing the new warnings (especially with the image plugin), but this was to be expected I guess.; Strangely, I would have predicted Jenkins/gtest to consider those as ""FAILED"" (and having some additional failures in the summary) but it does not. 🤔",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2113900167:235,failure,failures,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2113900167,1,['failure'],['failures']
Availability,"There are too many changes for me to review this PR ;); But from a quick glance, personally I would have preferred to keep the optional ExecParams* parameter in the Data* APIs even if it is unused now. This would remove frustrations for downstream / plugin codes that could be broken by this change. One option would be to add them back with a [[deprecated]] attribute.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1269#issuecomment-603859486:237,down,downstream,237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1269#issuecomment-603859486,1,['down'],['downstream']
Availability,"There is a work in progress to extract the constraint matrix.; The internal force vector is available in the MechanicalObject, in the `force` Data field (but it is merged with all the other forces).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4954#issuecomment-2324191143:92,avail,available,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4954#issuecomment-2324191143,1,['avail'],['available']
Availability,There is an error in the test because timer ids changed in this PR,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1645543718:12,error,error,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1645543718,1,['error'],['error']
Availability,"There is one error on the dashboard:; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3366/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/2/testReport/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/. do you think it is linked to your change or is it a blinking error on the CI?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824:13,error,error,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824,2,['error'],['error']
Availability,"There was a flaw fixed in the tests, fixing it fixed all tests on Linux and OSx but raised errors on Windows. I switch to Redmond's OS to fix them and hopefully, it will then be ok...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/267#issuecomment-302020287:91,error,errors,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/267#issuecomment-302020287,1,['error'],['errors']
Availability,This PR is not supposed to be merged...the idea was to show on the CI in which components there is not an even number of begin/end of accessors. But the CI is not working anymore on it and has not kept the compilation log. Now after a quick reading I see several good things in this PR:; - a new fonction in BackTrace to get the trace; - a way to systematically detect components rely on an invalid behavior in begin/end pairs. But given how many componnents have problem this is far too much error messages. ; ; Maybe we could just enable the systematic test using NDEBUG and have that merged.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1326#issuecomment-680744834:493,error,error,493,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1326#issuecomment-680744834,1,['error'],['error']
Availability,"This PR is ready but breaking, it thereore needs to stay 7 days available for remarks. Resist @epernod ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1700#issuecomment-760411732:64,avail,available,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1700#issuecomment-760411732,1,['avail'],['available']
Availability,This PR won't solve any error nor warning. It will just prevent the warning parser (on Jenkins) from crashing.; About the SceneChecker raising lots of warnings: what kind of warnings does it raise? Is it normal that it is triggered for our CI batch tests?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/555#issuecomment-355560915:24,error,error,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/555#issuecomment-355560915,1,['error'],['error']
Availability,This PR: ; - [ ] succeed on all compilations setup on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not break existing scenes.; - [x] does not break API compatibility. ; - [x] is now 1 week old.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/122#issuecomment-273726986:109,failure,failure,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/122#issuecomment-273726986,1,['failure'],['failure']
Availability,This PR: ; - [ ] successfully compile on each configuration on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not break existing scenes.; - [x] does not break API compatibility. ; - [x] is now 1 week old.; - [x] has been reviewed and agreed to be transitional.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-273725996:118,failure,failure,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-273725996,1,['failure'],['failure']
Availability,This PR: ; - [x] does not breaks compilation on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not break existing scenes.; - [x] does not break API compatibility. ; - [x] is now 1 week old. So I merge it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/132#issuecomment-273724965:103,failure,failure,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/132#issuecomment-273724965,1,['failure'],['failure']
Availability,This PR: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] is now 1 week old. I would say we can merge it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/148#issuecomment-276601858:109,failure,failure,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/148#issuecomment-276601858,1,['failure'],['failure']
Availability,"This is a comment from @damienmarchal in #413 about deprecation task; __________________________________________; To summary this morning discussion with @guparan, @fredroy, @bcarrez, @StephaneCotin, @bruno-marques , @ErwanDouaille ...let's prepare for the sprint.; ; There is a general envy from people that want to participate to put the efforts to make a lighter version of Sofa. . To match this goal, we discussed a workflow this morning in connection with the branch ; https://github.com/SofaDefrost/sofa/tree/deprecating_components; and issue #346 . Concretely during the sprint we may prepare two kind of tasks:; - deprecating as much as component as possible; - stabilizing as much as component as possible . To deprecate the components we need to make a list with the following information: ; - name, some info why to deprecate it bad/redundant/etc... and the string show to the user to explain what to do/replacement and so on. . To stabilize components we need to integrate the work done in the SofaNG so I let @fredroy & @guparan say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/426#issuecomment-333146181:844,redundant,redundant,844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/426#issuecomment-333146181,1,['redundant'],['redundant']
Availability,"This is exactly what I mentionned when I said ""I strongly believe that would these paths have been properly restored by f93e2b9 (**my bad**)..."" ; It should have been restored, but I did not do it properly for the **linux** plaform because it is not my main working environment ( so it is easy to slip an error here ) and also probably because I was kind of upset to have to deal with this issue on the first place... [EDIT] I did not take the time to go back enough in the log to find back the last version which had the paths properly set. [/EDIT]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342829426:305,error,error,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342829426,1,['error'],['error']
Availability,"This scene using the Mouse interaction (*Edit->MouseManager-> attach with bilateral constraint*) illustrates the bug @alxbilger : . ``` xml; <?xml version=""1.0"" ?>; <Node name=""lroot"" gravity=""0 -9.81 0"" dt=""0.02"">; <RequiredPlugin pluginName=""Sofa.Component.Constraint.Projective Sofa.Component.LinearSolver.Iterative Sofa.Component.Mapping.Linear Sofa.Component.Mass Sofa.Component.ODESolver.Backward Sofa.Component.SolidMechanics.FEM.Elastic Sofa.Component.StateContainer Sofa.GL.Component.Rendering3D Sofa.Component.Topology.Container.Dynamic Sofa.Component.IO.Mesh Sofa.Component.Constraint.Lagrangian.Solver Sofa.Component.Constraint.Lagrangian.Correction Sofa.Component.Collision.Response.Contact Sofa.Component.Collision.Geometry Sofa.Component.Collision.Detection.Intersection Sofa.Component.Collision.Detection.Algorithm Sofa.Component.AnimationLoop"" />; <DefaultVisualManagerLoop/>. <FreeMotionAnimationLoop />; <!-- <LCPConstraintSolver tolerance=""0.001"" maxIt=""1000""/> -->; <GenericConstraintSolver tolerance=""0.001"" maxIterations=""1000"" />. <DefaultPipeline name=""CollisionPipeline"" verbose=""0"" />; <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""collision response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection/>. <MeshOBJLoader name=""LiverSurface"" filename=""mesh/liver-smooth.obj"" />. <Node name=""Liver"" gravity=""0 -9.81 0"">; <EulerImplicitSolver name=""cg_odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver name=""linear solver"" iterations=""25"" tolerance=""1e-09"" threshold=""1e-09"" />; <MeshGmshLoader name=""meshLoader"" filename=""mesh/liver.msh"" />; <TetrahedronSetTopologyContainer name=""topo"" src=""@meshLoader"" />; <MechanicalObject name=""dofs"" src=""@meshLoader"" />; <TetrahedronSetGeometryAlgorithms template=""Vec3d"" name=""GeomAlgo"" />; <DiagonalMass name=""computed using mass density"" massDensity=""1"" geometryState=""@dofs"" topology=""@topo""/>; <TetrahedralCorotationalFEMForceField template=""Vec3d"" name=""FEM"" method=""",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1169794916:949,toler,tolerance,949,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1169794916,2,['toler'],['tolerance']
Availability,"This won't be enough. All bindings made for SofaPython fail when building in C++17.; ```; [1208/2186] Building CXX object modules/SofaExporter/CMakeFiles/SofaExporter.dir/src/SofaExporter/bindings/Binding_STLExporter.cpp.o; FAILED: modules/SofaExporter/CMakeFiles/SofaExporter.dir/src/SofaExporter/bindings/Binding_STLExporter.cpp.o; < ... >; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/modules/SofaExporter/src/SofaExporter/bindings/Binding_STLExporter.cpp:24:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/modules/SofaExporter/src/SofaExporter/bindings/Binding_STLExporter.h:25:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/applications/plugins/SofaPython/../SofaPython/PythonMacros.h:29:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/applications/plugins/SofaPython/../SofaPython/PythonCommon.h:27:; In file included from /usr/include/python2.7/Python.h:88:; /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]; register PyObject *obj, /* Object */; ^~~~~~~~~; ```; See https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1284/CI_CONFIG=ubuntu_clang-6,CI_PLUGINS=options,CI_TYPE=release/2/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1284#issuecomment-603846480:1198,error,error,1198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1284#issuecomment-603846480,1,['error'],['error']
Availability,Those scene are failing in PR #3339 but from my understanding they were broken since a long time. The PR just reveal their failure.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3453#issuecomment-1301987269:123,failure,failure,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3453#issuecomment-1301987269,1,['failure'],['failure']
Availability,Those scenes were not tested? How did you detect the error?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489635041:53,error,error,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489635041,1,['error'],['error']
Availability,"To summarize, this PR #113 allows to include the latest c++11 functionalities. From now on, the sofa::helper::(list, map etc.) should not be used. The **std::** should be preferred.; However, there are drawbacks:; - it's invasive (add operators directly in std); - conflicts / redefinition / ambiguity compiler errors / silently override could arise by using SOFA in an application doing the same. So this is **TEMPORARY**.; I added a todo in the focused header files. The discussion remains open.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-275346823:311,error,errors,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-275346823,1,['error'],['errors']
Availability,"To summary this morning discussion with @guparan, @fredroy, @bcarrez, @StephaneCotin, @bruno-marques , @ErwanDouaille ...let's prepare for the sprint.; ; There is a general envy from people that want to participate to put the efforts to make a lighter version of Sofa. . To match this goal, we discussed a workflow this morning in connection with the branch ; https://github.com/SofaDefrost/sofa/tree/deprecating_components; and issue #346 . Concretely during the sprint we may prepare two kind of tasks:; - deprecating as much as component as possible; - stabilizing as much as component as possible . To deprecate the components we need to make a list with the following information: ; - name, some info why to deprecate it bad/redundant/etc... and the string show to the user to explain what to do/replacement and so on. . To stabilize components we need to integrate the work done in the SofaNG so I let @fredroy & @guparan say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-332496965:730,redundant,redundant,730,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-332496965,1,['redundant'],['redundant']
Availability,Unfortunately no. SofaPython3 builds without error on my Ubuntu 18.04; My config:; - SOFA v20.06 binaries unzipped in my home; - pybind11 2.4.3 installed in my system; - python 3.8.3 installed in my system,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656144967:45,error,error,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656144967,1,['error'],['error']
Availability,Update:; - Components/forcefield/BeamFEMForceField.scn fixed; - Components/constraint/BilateralInteractionConstraint.scn 100 1e-4; - ERRORBYDOF: 22.9926 ; - Demos/caduceus.scn 100 1e-3; - ERRORBYDOF: 2.68482; - Components/collision/FFDDistanceGridCollisionModel.scn 100 1e-4; - Moved into a plugin.; - Components/constraint/FrictionContact.scn 100 1e-4; - ERRORBYDOF: 1.45887; - Components/collision/RuleBasedContactManager.scn 100 1e-4; - ERRORBYDOF: 0.215011. 6/10 working!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/828#issuecomment-439006264:133,ERROR,ERRORBYDOF,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/828#issuecomment-439006264,4,['ERROR'],['ERRORBYDOF']
Availability,Very strange failure on macos_clang_options; [ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1210400782:13,failure,failure,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1210400782,1,['failure'],['failure']
Availability,"Waiting for a fix, Multithreading and THMPGSpatialHashing plugins have been disabled in MacOS jobs. Error output for THMPGSpatialHashing:; ```; [214/302] Building CXX object applications/plugins/THMPGSpatialHashing/CMakeFiles/THMPGSpatialHashing.dir/THMPGHashTable.cpp.o; FAILED: applications/plugins/THMPGSpatialHashing/CMakeFiles/THMPGSpatialHashing.dir/THMPGHashTable.cpp.o ; /usr/local/bin/ccache clang++ -Qunused-arguments -Wno-deprecated-declarations -DTHMPGSpatialHashing_EXPORTS -I../SofaKernel/SofaBase/../modules -Iinclude -I../SofaKernel/SofaSimulation/../modules -I../SofaKernel/framework/sofa/core/../.. -I../SofaKernel/framework/sofa/helper/../.. -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks -isystem /usr/local/include -I../SofaKernel/extlibs/eigen-3.2.7 -ISofaKernel/SofaFramework -I../SofaKernel/extlibs/tinyxml -I../SofaKernel/framework/sofa/defaulttype/../.. -I../SofaKernel/SofaCommon/../modules -isystem=/opt/local/include/Qt -Wall -W -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -mmacosx-version-min=10.11 -fPIC -DSOFA_BUILD_THMPGSPATIALHASHING -std=gnu++11 -MD -MT applications/plugins/THMPGSpatialHashing/CMakeFiles/THMPGSpatialHashing.dir/THMPGHashTable.cpp.o -MF applications/plugins/THMPGSpatialHashing/CMakeFiles/THMPGSpatialHashing.dir/THMPGHashTable.cpp.o.d -o applications/plugins/THMPGSpatialHashing/CMakeFiles/THMPGSpatialHashing.dir/THMPGHashTable.cpp.o -c ../applications/plugins/THMPGSpatialHashing/THMPGHashTable.cpp; In file included from ../applications/plugins/THMPGSpatialHashing/THMPGHashTable.cpp:1:; ../applications/plugins/THMPGSpatialHashing/THMPGHashTable.h:5:10: fatal error: 'boost/unordered/detail/util.hpp' file not found; #include <boost/unordered/detail/util.hpp>; ^; 1 error generated.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316#issuecomment-313105904:100,Error,Error,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316#issuecomment-313105904,3,"['Error', 'error']","['Error', 'error']"
Availability,Weird in the CI there is also failure on BoundingBox.cpp (that I fixed in previous pR),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2006#issuecomment-819479147:30,failure,failure,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2006#issuecomment-819479147,1,['failure'],['failure']
Availability,"Weird to get the error:; _No topology component found at path: _ with no path given, it should say : _No path to topology given in the scene_. Strange that AddingTetra2TriangleProcess AddingTrianglesProcess return:; _Object must have a Triangular Set Topology._",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1199#issuecomment-547827389:17,error,error,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1199#issuecomment-547827389,1,['error'],['error']
Availability,Well @untereiner ; the CI is not passing due to an issue of cmake version:. ```; 5.4_options_release/build/external_directories/fetched/CGoGN/CGoGN-prefix/src/CGoGN-stamp/CGoGN-configure; CMake Error at CMakeLists.txt:1 (cmake_minimum_required):; CMake 3.7.2 or higher is required. You are running version 3.5.1; ```; we will investigate this next week,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-427426994:194,Error,Error,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-427426994,1,['Error'],['Error']
Availability,"Well I found a fix, it involves `sys.excepthook` to register a toplevel handler for uncaught python errors. In this case I simply abort the test. We should be fine now, but just in case we should also:. 1. limit logging size; 2. limit simulation time for tests. I'll look into the second part. And again, my deepest apologies.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289694371:100,error,errors,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289694371,1,['error'],['errors']
Availability,"Well after a quick look in the scene you provided:. I'm not surprised the BarycentricMapping is not able to work . . Let's me explain: ; - Object.DoFs is of type Rigid3d; - Object.Mechanical model.collisionDofs is of type Vec3d. What your are specifying by setting the input & output field of BarycentricMapping is that you are driving the collisionDofs(type Vec3d) from the one from the one of type Dofs(type Rigid3). So the corresponding mapping should be Rigid3d, Vec3d (an not Vec3d, Rigid3d). ; The possible available templates shows that this is not supposed to work, because a BarycentricMapping can only have Vec3 as input. Overriding the template values with one that exists in BarycentricMapping will not work because this will lead to a mismatch between the input/output types and thes type manually set in the template. . Now about the BeamLinearMapping...the situation is a bit different. There is a valid template from Rigid3 to Vec3. This is why:; ```xml; <BeamLinearMapping template=""Rigid3d,Vec3d""/>; ```; And; ```xml; <BeamLinearMapping""/>; ```; Work the same. ; You get an error in your case because there is a typo ""@collisionDOFs"" instead of ""@collisionDoFs"".; ; Now I have no idea why the BeamLinearMapping is not working as you expect:; - maybe there is a real issue there ? . NB to anyone:; It would be nice to have PRs to improve the error messages as they are mis-leading.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487545297:513,avail,available,513,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487545297,3,"['avail', 'error']","['available', 'error']"
Availability,Well done to fix errors introduced in recent previous merge ( not detected in the reviews 😭),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1522#issuecomment-706017298:17,error,errors,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1522#issuecomment-706017298,1,['error'],['errors']
Availability,"Well initially I just reported the error and did not necessarily plan to look for the fix, so yes the the error still holds. It was just to try out the option but it was not a blocking issue as, I think, people uses double option or both.; So in the end, I decided to take a look at that. I think I solved the issue. PR to come.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2#issuecomment-299291784:35,error,error,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2#issuecomment-299291784,2,['error'],['error']
Availability,"Well, actually the 3.24 version only provide a fully working mechanism.The mechanism exists in 3.22 (I am currently using the 3.22 and it works) the only downside is that the macro `FetchContent_MakeAvailable` doesn't make it available for every target of the project a it does in the 3.24. That is why for instance I had to add this same mechanism into the `SofaMatrix` plugin. But it works fine anyway because it pull it in the same folder and compile it only once and make it available for both of the projects. . Why 3.22 you might ask ? Well because it is the version shipped in Ubuntu 22.04 LTS, so we will not require a CMake version that is greater than this one...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4586#issuecomment-2003222894:154,down,downside,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586#issuecomment-2003222894,3,"['avail', 'down']","['available', 'downside']"
Availability,"Well, it's now compiling on linux since @bcarrez installed a new version of some ffmpeg libs.; The failure on the ubuntu build is due to the lack of X. @damienmarchal @guparan @hugtalbot do we need to test this ""gui"" ? I means, others gui are not tested and the problem would be the same as we encounter with the headless recorder if we consider testing it. On centos, we need to install newer version of ffmpeg libs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360769714:99,failure,failure,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360769714,1,['failure'],['failure']
Availability,"Well, that is a fully labeled PR! ; LGTM (ignoring VS-2015 failure due to side effect).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/296#issuecomment-307724174:59,failure,failure,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/296#issuecomment-307724174,1,['failure'],['failure']
Availability,"Well, this PR does not change the status of `SofaPython`. It is still a deprecated external plugin and available on GitHub. This PR just remove the possibility to fetch it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545691436:103,avail,available,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545691436,1,['avail'],['available']
Availability,"Well:; - `doLoad()` was called three times, without clearing the lists (e.g. d_position, d_tetra...). So I had duplicated positions, triangles and tetra in my scene, which caused failures. Those calls seemed to be triggered by `addUpdateCallback` in `MeshLoader`.; - the transforms wasn't called three times, so the last positions were not transformed.... but that's not really important I guess. After digging, I found that using `getWriteOnlyAccessor()` to access the `d_positions`... instead of `beginEdit()`, like it was done in most other loaders, reduced this number of calls, which fixed everything for me. I should also mention that my scene was failing at init (when loading the scene).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713100804:179,failure,failures,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713100804,1,['failure'],['failures']
Availability,"What I would suggest :; 1. add big visible warnings generated in load() or parse() if `filename` is not empty, stating that this direct loading feature is deprecated as it is redundant with the `MeshXyzLoader` components and will be removed SOON. Bonus point if the warning message show the equivalent xml or python syntax to instantiate the corresponding component and link it.; 2. add an entry in the changelog saying this is now deprecated and will be removed SOON; 3. wait about a year; 4. then finally remove both these methods and the associated `sofa::helper::io::*` classes. It's long in calendar time, but quick and easy in term of code changes !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271674546:175,redundant,redundant,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271674546,1,['redundant'],['redundant']
Availability,"What about an isOptional() flag...? It may sounds redundant with the isRequired() flag, but a data may not be required and still have a default value. ; Otherwise, what I’m really looking for is a way to say that my data has no default value. It could also just be a hasDefaultValue() flag.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762250139:50,redundant,redundant,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762250139,1,['redundant'],['redundant']
Availability,What do you mean by available? no option on the cmake? not compiling?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3006#issuecomment-1146275689:20,avail,available,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3006#issuecomment-1146275689,1,['avail'],['available']
Availability,"Who is *we*?; The feature was used ; removing it has already been discussed many times and refused. I think the problem was: our code (e.g. CGSolver) is not numerical robust in single precision so we need to use double precision implementations, but some part of the code is (was) single precision only (e.g. Cuda forcefields). Once again the real point is why using double precision when single float should be enough?; So if you want to save compilation time and have lighter code => instantiate components only on SReal-based types (what it is already done in Flexible for example).; If you really want to make a change => clean every components that need to be robust in single float and compile sofa always in float only!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/495#issuecomment-340407493:167,robust,robust,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/495#issuecomment-340407493,2,['robust'],['robust']
Availability,"Why it is not possible to have with?. Solution:; The installer can detect:; - if there is on the machine, good; - if not, inform the user to download the good package...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454127765:141,down,download,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454127765,1,['down'],['download']
Availability,Why not using the normal git submodule for this one?; It won't be linked to cmake config/build. Just like downloading the source code and its dependencies when you clone the repository.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-510056252:106,down,downloading,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-510056252,1,['down'],['downloading']
Availability,"Within recent version of Eigen installed on most OS, there is already a cmake find_package(Eigen3) available. By create a FindEigen3.cmake you will override this. I've seen a couple of projects dealing with this kind of problem with, for example:. SofaKernel/cmake/Modules/**FindEigen3Sofa**.cmake:; ```; # try to find ""FindEigen3.cmake"" from system Eigen; find_package(Eigen3) . if (not Eigen3); # do your thing here; else(); # use system Eigen3; endif(); ```. CMakeLists.txt; `find_package(Eigen3Sofa)`. pybind11 do this for example with find_package(PythonNew) which point to their PythonNew.cmake which trigger a system find_package(Python). Maybe it could be a solution for us?. Edit: Sorry I'm polluting this fast-merge PR for that, we can discuss this elsewhere ;-D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1175#issuecomment-539446978:99,avail,available,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1175#issuecomment-539446978,1,['avail'],['available']
Availability,"Yeah, I installed QT5 with `brew install qt@5` and source the `.bashrc` with the installed path. Actually, my `cmake-gui` could find `QT5` also `QT6` which I tried to install. But the building process always occurs with errors. I tried install the QT with the source code, `brew` and the official install tools (x86), but it doesn't fix it successfully.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444:220,error,errors,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444,1,['error'],['errors']
Availability,"Yes @damienmarchal . My opinion is that introducing exception can not be done in one PR without taking the time to design a global API. If we do not only rely on the stl exceptions, we need to define the specs of the desired exception API: for documentation purposes, and most importantly to avoid having two error management systems in parallel and the exception not being well propagated and used. Let 's discuss this tomorrow ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-929278545:309,error,error,309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-929278545,1,['error'],['error']
Availability,"Yes I actually fixed it in https://github.com/sofa-framework/sofa/pull/905, see https://github.com/sofa-framework/sofa/commit/c608d441edd35f6e8eb90ebfc420cb941c3bd750 and https://github.com/sofa-framework/sofa/commit/e1b55cba5ff200c7a11f6992974159b55cec000f. The error is printed on CI but you have to open the output of a scene test to see it (Jenkins only shows the first line of an error in the ""SOFA SceneTest Errors"" view). See for example the [output of failing scene Components/forcefield/ForceMaskOff.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/636/artifact/parent_dir/build/scene-tests/examples/Components/forcefield/ForceMaskOff.scn/output.txt) (latest master build).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/922#issuecomment-461353086:263,error,error,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/922#issuecomment-461353086,3,"['Error', 'error']","['Errors', 'error']"
Availability,"Yes I have an idea... . The problem is probably because currently there is two approaches to interpret the messages send with the Message API as test failure. Fixing should be easily, will do that this evening. . More in-depth... I think this is a good opportunity to discuss how the component messages are interpreted as test...currently we have two different approaches. . One of the approach is a global message handler that interprets all errors as test failure. This handler can be ""explicitely"" deactivated when we don't need this behavior. But if we forgot to do so this behavior propagates to each _test in the same test suite (I think this is what is happening here). . I found this behavior not precise enough so I develop ExpectMessage & MessageAsTestFailure which are RAII classes to finely select which message generates test failure with the granulary of the RAII; (so it is automatically removed when the RAII is destroy). ; The good point about this approach is that:; - we can raise test failure for any kind of message (this depend on the test); - we can raise test failure is a message is expected but not send (like using a wrong filename must generate a message). ; - we behavior is only active during the RAII lifetime. . I don't know if we need to keep them both. What is your opinion ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/83#issuecomment-265156642:150,failure,failure,150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/83#issuecomment-265156642,6,"['error', 'failure']","['errors', 'failure']"
Availability,Yes I'm using that fix and I do not see errors but I didn't run all the tests.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-688179583:40,error,errors,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-688179583,1,['error'],['errors']
Availability,"Yes it will, but not for 'default' configurations, but - - for 'options' one. Those are the same as the one compiled by the PRs. It actually changes nothing but removes regression errors for 'default' configuration (only on the dashboard) because the lib was not found, which is normal because it is not compiled. . This PR comes along with two other ones on Regression and ci to remove the regression files and add the fetching for 'option' configurations.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1967722990:180,error,errors,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1967722990,1,['error'],['errors']
Availability,"You can actually refer to the issue #1243 ; The result is that this failure, leads to no creation of the edgesInTriangle structure, ie no TriangleSetAlgorithms, ie crashes in some components relying on it in the scene (MeshMatrixMass, DampingForceField etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577243956:68,failure,failure,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577243956,1,['failure'],['failure']
Availability,"You mean, you open the tab, simulate and there is no update?; Could you check if clicking on the refresh button on the bottom update the values?; I guess the gui is not calling ""continuous update"" on the Data to avoid slowing down the simulation but I'm not expert of the DataWidget.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258:226,down,down,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258,1,['down'],['down']
Availability,"You suggest to avoid wasting time normalizing a unit vector in order to speed up computations. The solution requires not to slow down the other operations. For example, adding a bool in Vec.h would add an extra instruction on any vector operation that would modify the length of the vector in order to invalidate the current length. I've checked how Eigen handles this. It does not. Eigen has a clever lazy evaluation mechanism (https://eigen.tuxfamily.org/dox/TopicLazyEvaluation.html), but I don't think it's used for vector normalization. In practice, it is hard to know that the result of a binary operation on vectors provides a normalized vector or not. For example, the cross product requires that both vectors are orthogonal AND unit. Even if you know for sure that your vectors are unit (e.g. with a bool in Vec.h), you also need to know that they are orthogonal. See https://github.com/sofa-framework/sofa/pull/2647",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2700#issuecomment-1046608127:129,down,down,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2700#issuecomment-1046608127,1,['down'],['down']
Availability,"[ERROR]&nbsp; &nbsp;[SofaPython3::SceneLoader] Unable to completely load the scene from file 'D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/python3/Cochlear-Implant-Insertion/cathter.py'.; Python exception:; &nbsp; ValueError: Object type Edge2QuadTopologicalMapping<&gt; was not created; The object is in the factory but cannot be created.; Requested template : None; Used template&nbsp; &nbsp; &nbsp; : None; Reason(s)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : Data attribute 'input' does not point to a valid mesh topology and none can be found in the parent node context. Thank you for your help. I found the following errors after following your reply. How to solve this problem?. 方得始终; ***@***.***. &nbsp;. ------------------&nbsp;原始邮件&nbsp;------------------; 发件人: ""sofa-framework/sofa"" ***@***.***&gt;;; 发送时间:&nbsp;2022年11月8日(星期二) 晚上7:11; ***@***.***&gt;;; ***@***.******@***.***&gt;;; 主题:&nbsp;Re: [sofa-framework/sofa] [ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier. (Issue #3463). ; Hi,; ; you need to add a EdgeSetTopologyModifier in your first object:; topoLines_cath.addObject('EdgeSetTopologyModifier', name='meshLinesModif'); ; Hope it helps.; ; —; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you authored the thread.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793:1,ERROR,ERROR,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793,3,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"[Modeler] :: warning and print cleaned. deprecated function removed; [Modeler] :: Set modeler cmake ON; ___________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2081487375:645,failure,failures,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2081487375,2,['failure'],['failures']
Availability,[ci-build] (because of weird CI-failure),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/840#issuecomment-446145645:32,failure,failure,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/840#issuecomment-446145645,1,['failure'],['failure']
Availability,[ci-build]. EDIT: After using std::unique the windows compilation fails... the error seems to be this one: ; https://tousu.in/qa/?qa=634250/c-deleted-function-in-std-pair-when-using-a-unique_ptr-inside-a-map. So I propose to implement the std::unique version in a future pr :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3027#issuecomment-1158899131:79,error,error,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3027#issuecomment-1158899131,1,['error'],['error']
Availability,[google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29102,redundant,redundant-member-init,29102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-member-init']
Availability,[modernize-make-shared](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:15892,redundant,redundant-void-arg,15892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-void-arg']
Availability,](https://clang.llvm.org/extra/clang-tidy/checks/readability-misleading-indentation.html) |; | [google-objc-global-variable-declaration](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-global-variable-declaration.html) | [readability-misplaced-array-index](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readabi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28229,redundant,redundant-control-flow,28229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-control-flow']
Availability,](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [re,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29243,redundant,redundant-smartptr-get,29243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-smartptr-get']
Availability,"_(clicking on ""Edit"" you will see the whole scene description, here you only see a sub-part of it)_ ; `<Node dt=""0.04"" gravity=""0 -0.1 0"" name=""root"">; <VisualStyle displayFlags=""showVisual showCollisionModels hideBehaviorModels showForceFields showInteractionForceFields showWireframe"" />. <Node name=""Topo"">; 		<RegularGridTopology name=""RGT"" min=""-6 -6 -6"" max=""6 6 6"" n=""4 4 4"" /> ; 	 <Node name=""Surface"">; 			<!-- <MeshObjLoader name=""loader"" filename=""mesh/cube.obj"" /> -->; 			<MeshObjLoader name=""loader"" filename=""mesh/liver.obj"" />; 			<MechanicalObject name=""DOF"" src=""@loader"" showObject=""false""/> ; 		</Node>; 	</Node>. <Node name=""Cube"">; 		<EulerImplicit />; 		<CGLinearSolver iterations=""500"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. 		<HexahedronSetTopologyContainer name=""HSTC"" src=""@../Topo/RGT"" />; 		<HexahedronSetGeometryAlgorithms name=""HSGA"" />; 		<MechanicalObject name=""DOF"" position=""@../Topo/RGT.position"" showObject=""true""/>; 		<HexahedronFEMForceField name=""HFF"" youngModulus=""20"" poissonRatio=""0.2"" />; 		<DiagonalMass totalMass=""5"" />. 		<PlaneForceField normal=""0 1 0"" d=""-7"" draw=""true""/>; 	 <Node name=""Cube"">; 	 	 <VisualStyle displayFlags=""hideWireframe"" />; 			<TriangleSetTopologyContainer name=""TSTC"" src=""@../../Topo/Surface/loader"" />; 			<TriangleSetGeometryAlgorithms name=""HSGA"" />; 			<MechanicalObject name=""DOF"" position=""@../../Topo/Surface/loader.position"" showObject=""true""/> ; 			<Triangle/>; 			<BarycentricMapping />; 		</Node>; 	</Node>. </Node>`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/988#issuecomment-482015505:731,toler,tolerance,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/988#issuecomment-482015505,1,['toler'],['tolerance']
Availability,"_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:1925,error,error,1925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008,1,['error'],['error']
Availability,` fatal error: 'SofaGui/initSofaGui.h'` ; I am afraid it is not as easy as only changing the CMakeFiles @hugtalbot 😅,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3624#issuecomment-1420096440:8,error,error,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3624#issuecomment-1420096440,1,['error'],['error']
Availability,"`; - Is functionnaly equivalent to the old code (if the application have installed an handler routing the message to std::cout); - It will print message in a totally consistant way with other sofa componant (which very important for users); - It is shorter to write (very important for the developer :)), ; - It benefit from the message dispatcher/handler (so it can be logger or routed or sended or whatever GUI in the end user application); - All developpers immediately know that the message is not for the end user of Sofa but for a developers. Consequently the message can be very drafty. It can also be remove by setting SOFA_DEVTOOLS to false and thus it should have a zero cost in a release . A second example: ; ```cpp; - if(this->f_printLog.getValue()) if(pos.size()) ; - std::cout<<""TopologyGaussPointSampler: ""<< pos.size() <<"" generated samples""<<std::endl;; +msg_info_when(pos.size()!=0) << "" topologyGaussPointSampler: ""<< pos.size() <<"" generated samples"" ;; ```; - Is functionnaly equivalent to the old code; - Shorter to write; - Consistant behavior with other component,; - It benefit from the message dispatcher/handler (so it can be logger or routed or sended into Backlog depending on the end user application). And one with an error:; ```cpp; if( inv.info() != Eigen::Success ){; - std::cerr << SOFA_CLASS_METHOD<<""non invertible block Schur."" << std::endl;; - std::cerr << schur << std::endl;; + msg_error(SOFA_CLASS_METHOD) << ""non invertible block Schur."" << msgendl; + << schur ;; ```; - Shorter to write (using msg_error_when() it would have to be even shorter); - Consistant way to present message to the user; - All the text is considered is a single message with a single call to msg_* ; - Is functionnaly equivalent to the old code ; - Uou can write tests that check that the message; is emitted (ExpectMessage/MessageAsTestFailure) so it become possible to test how components behave when they are ""mis-used"".... while with the old code it was just 'not done' at all.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190#issuecomment-285637960:2308,error,error,2308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190#issuecomment-285637960,1,['error'],['error']
Availability,"`FIXME: 0 unit, 757 scenes, 0 regression `; I guess something went wrong 😅. it seems that the destination of the lib is wrong, so the CI and runSofa cannot find the lib (hence the errors)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586383704:180,error,errors,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586383704,1,['error'],['errors']
Availability,`SofaKernel\modules\SofaHelper\..\SofaDefaultType\src\sofa/defaulttype/Ray.h(6): error C2429: language feature 'nested-namespace-definition' requires compiler flag '/std:c++17'`. Dependency on #1249 @damienmarchal ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1253#issuecomment-598093384:81,error,error,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1253#issuecomment-598093384,1,['error'],['error']
Availability,```; modules/SofaMiscFem/TriangularAnisotropicFEMForceField.inl:97:5: error: ‘_topology’ was not declared in this scope; _topology = this->getContext()->getMeshTopology();; ^; ```; Why? :confused:. EDIT: fixed by https://github.com/sofa-framework/sofa/pull/782/commits/b3117ad2cec31a1fcd78ee5c838f78703440dc5d but my question remains... EDIT 2: Tried to build without ccache but result was the same. EDIT 3: answer: https://github.com/SofaDefrost/SoftRobots/blob/master/component/constraint/CableConstraint.h#L141-L152 (thanks @damienmarchal),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/782#issuecomment-424250648:70,error,error,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/782#issuecomment-424250648,1,['error'],['error']
Availability,"```text; /builds/workspace/sofa-framework/PR-1980/ubuntu_gcc-7_options_release/src/SofaKernel/modules/SofaBaseTopology/src/SofaBaseTopology/TopologyData.inl:91:57: error: 'class sofa::component::topology::TopologyData<unsigned int, sofa::type::vector<double, sofa::type::CPUMemoryManager<double> > >' has no member named 'm_topology'; this->m_topologyHandler->registerTopology(this->m_topology);; ~~~~~~^~~~~~~~~~; /builds/workspace/sofa-framework/PR-1980/ubuntu_gcc-7_options_release/src/SofaKernel/modules/SofaBaseTopology/src/SofaBaseTopology/TopologyData.inl:92:21: error: 'class sofa::component::topology::TopologyData<unsigned int, sofa::type::vector<double, sofa::type::CPUMemoryManager<double> > >' has no member named 'm_topology'; else if (!this->m_topology); ~~~~~~^~~~~~~~~~ ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1980#issuecomment-814756029:164,error,error,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1980#issuecomment-814756029,2,['error'],['error']
Availability,"`asin` might be undefined, it is still better to have it crashing instead of working were it should not - again, if `y` contains a ""big"" error (greater than 10e-15 upon @raffaellatrivisonne comment). ; The question is: could `y` contain such a ""big"" error? If no, let's just assume that and round this way. If yes or don't know, let's add a tiny security with something like; ```cpp; const double epsilon = 1e-15;; Real y = Real(2.)*(q[3]*q[1] - q[2]*q[0]);; if( std::abs( double(y) ) - 1.0 > epsilon ); {; msg_error(""Quat"") << ""Unexpectedly out of bounds argument for asin: "" << y << msgendl;; }; ```; or; ```cpp; const double epsilon = 1e-15;; Real y = Real(2.)*(q[3]*q[1] - q[2]*q[0]);; if( std::abs( double(y) ) - 1.0 > epsilon ); {; Real force_round = std::max( Real(-1.0), std::min(Real(1.0), y) );; msg_warning(""Quat"") << ""Unexpectedly out of bounds argument for asin: "" << y; << ""Force rounding to "" << force_round << msgendl;; y = force_round;; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-338594103:137,error,error,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-338594103,2,['error'],['error']
Availability,"a1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.frag; [ERROR] [GLSLShader] 0(8) : warning C7555: 'varying' is deprecated, use 'in/out' instead; 0(16) : error C7616: global variable gl_Color is removed after version 140; 0(35) : warning C7533: global variable gl_FragColor is deprecated after version 120. [ERROR] [GLSLShader] ERROR: Compilation of Vertex shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.vert; [ERROR] [GLSLShader] 0(20) : error C7616: global variable gl_ModelViewProjectionMatrix is removed after version 140; 0(23) : error C7616: global variable gl_ClipVertex is removed after version 140; 0(23) : error C7616: global variable gl_ModelViewMatrix is removed after version 140; 0(23) : error C7616: global variable gl_Vertex is removed after version 140. [ERROR] [GLSLShader] ERROR: Compilation of Geometry shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra_triangles.geo; [ERROR] [GLSLShader] 0(45) : warning C7533: global variable gl_FrontColor is deprecated after version 120; 0(46) : error C7616: global variable gl_ClipVertex is removed after version 140. [ERROR] [GLSLShader] SHADER compilation failed.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; [ERROR] [Node()] Object 'OglFloat4Attribute1' already has a node (/OglFloat4Attribute1). Please remove it from this node before adding it to a new one.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] TopologyData: value already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; ```. I guess the shaders needs to be updated for version >=",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181:1102,ERROR,ERROR,1102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181,3,['ERROR'],['ERROR']
Availability,"addObject(""IdentityMapping"", input=""@.."", output=""@VisualBody""). soft_bead_node = composite_node.addChild(""soft bead""); soft_bead_node.addObject(""MeshOBJLoader"", name=""meshLoader_1"", filename=""mesh/bubille_in1.obj"", handleSeams=True); soft_bead_node.addObject(""OglModel"", name=""VisualBody1"", src=""@meshLoader_1"", normals=""0"", color=[1, 0, 0, 1]); soft_bead_node.addObject(""HexahedronCompositeFEMMapping"", input=""@.."", output=""@VisualBody1""). stiff_bead_node = composite_node.addChild(""stiff bead""); stiff_bead_node.addObject(""MeshOBJLoader"", name=""meshLoader_3"", filename=""mesh/bubille_in2.obj"", handleSeams=True); stiff_bead_node.addObject(""OglModel"", name=""VisualBody2"", src=""@meshLoader_3"", normals=""0"", color=[0, 0, 1, 1]); stiff_bead_node.addObject(""HexahedronCompositeFEMMapping"", input=""@.."", output=""@VisualBody2""). ball_node = root.addChild(""ball""); ball_node.addObject(""EulerImplicitSolver"", vdamping=0, rayleighMass=0, rayleighStiffness=0); ball_node.addObject(""CGLinearSolver"", iterations=100, tolerance=1e-5, threshold=1e-5). ball_node.addObject(""MechanicalObject"", template=""Rigid3d"", position=[0, 5, 0, 0, 0, 0, 1], showObject=True, showObjectScale=2.0); ball_node.addObject(""UniformMass"", totalMass=10000.0); ball_node.addObject(""SphereCollisionModel"", radius=0.5, group=1); ball_node.addObject(""UncoupledConstraintCorrection""); ```. As a side question: Am I even using the right components? How would you model this scene of a liver with an embedded tumor? I also tested the Heterogeneous-TetrahedronFEMForceField.scn example, but that is even more unstable. When you interact with the object through the mouse, it applies a huge force in the opposite direction. <video src=""https://github.com/sofa-framework/sofa/assets/29635054/dc863ba3-7e55-48e1-8b5d-30d078fd5b88; "" width=""200"" height=""auto"">. I also simplified the liver scene to just the SOFA liver. Same problem with the instability. ```python; import Sofa; import Sofa.Core. PLUGINS = [; ""Sofa.Component.AnimationLoop"",; ""Sof",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:6896,toler,tolerance,6896,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['toler'],['tolerance']
Availability,ading-indentation.html) |; | [google-objc-global-variable-declaration](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-global-variable-declaration.html) | [readability-misplaced-array-index](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-ti,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28312,redundant,redundant-control-flow,28312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-control-flow']
Availability,"ance using a tag class:; ; ``` c++; class BaseData {; public:; struct no_init {};; ; protected:; BaseData(no_init) : // ...; };; ```; ; This one should be easy.; 3. Add a public `Data` constructor that only initializes value, something like:; ; ``` c++; template<class T>; class Data {; public: ; Data(BaseData::no_init, const T& value = T() ) : // ...; };; ```; ; Again, easy.; 4. Provide component constructors that do not initialize their `Data` so that optimized components can be derived:; ; ``` c++; Base::Base(BaseData::no_init) : name(BaseData::no_init), //...; BaseObject::BaseObject(BaseData::no_init) : f_listening(BaseData::no_init), //... ; ; // ... BaseMapping, Mapping, etc.; ```; ; this one is tedious but not that hard. Now if all of this can be done, a derived component class will be able to manage its data on a per-class basis, and only initialize data lazily when they are actually needed (i.e. when `findData` or `getDataFields` are called). Adding/removing data would be no-ops or errors in these derived classes. ## Performance. Changing the iteration strategy incurs an extra copy of the existing `DataVec` when accessing data, but since we are likely to iterate the vector anyways there should be no visible change in; complexity. Careful allocation on the caller side should also be able to avoid most allocations during vector copy. Finally, data iteration does not seems to happen during computationally intensive sections. Should this remain an issue, it is always possible to iterate using a callback instead, which is acceptable using c++11 lambdas/`std::function`, but probably too cumbersome using c++98. **To summarize I think the performance hit for current code path is minimal.**. On the other hand, a component using `BaseData::no_init` with per-class data managemenent potentially saves up to 6 heap allocations per data per constructor call, and a fraction of this during destruction. FYI, I counted 10 `Data` members in base class `Mapping<In, Out>` alone, `",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923:2309,error,errors,2309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923,1,['error'],['errors']
Availability,anyone available for a merge?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1145#issuecomment-543905626:7,avail,available,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1145#issuecomment-543905626,1,['avail'],['available']
Availability,are you sure the additionnal scenes errors and crashes compare to master are false positive (or wrong negative... I never know)?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/950#issuecomment-480168434:36,error,errors,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/950#issuecomment-480168434,1,['error'],['errors']
Availability,arf compilation errors,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4238#issuecomment-1764557115:16,error,errors,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4238#issuecomment-1764557115,1,['error'],['errors']
Availability,arf you have a compilation error in https://github.com/sofa-framework/SofaGLFW,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308741024:27,error,error,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1308741024,1,['error'],['error']
Availability,btw why have you redundant values? This is not logical for an indice map.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4738#issuecomment-2114760464:17,redundant,redundant,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4738#issuecomment-2114760464,1,['redundant'],['redundant']
Availability,"build fail on mac ?; ```; src/modules/SofaMiscCollision/src/SofaMiscCollision/TetrahedronFrictionContact.cpp:55:40: error: duplicate explicit instantiation of 'FrictionContact<sofa::component::collision::TetrahedronCollisionModel, sofa::component::collision::SphereCollisionModel<defaulttype::Vec3Types>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >'; template class SOFA_MISC_COLLISION_API FrictionContact<TetrahedronCollisionModel, SphereCollisionModel<sofa::defaulttype::Vec3Types>>;; ^; /Volumes/Jenkins/workspace/sofa-framework/PR-2453/macos_clang_options_release/src/modules/SofaMiscCollision/src/SofaMiscCollision/TetrahedronFrictionContact.cpp:49:40: note: previous explicit instantiation is here; template class SOFA_MISC_COLLISION_API FrictionContact<TetrahedronCollisionModel, SphereCollisionModel<sofa::defaulttype::Vec3Types>>;; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2453#issuecomment-954502045:116,error,error,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2453#issuecomment-954502045,1,['error'],['error']
Availability,"busb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plu",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2396,ERROR,ERROR,2396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['ERROR'],['ERROR']
Availability,"c\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.frag; [ERROR] [GLSLShader] 0(8) : warning C7555: 'varying' is deprecated, use 'in/out' instead; 0(16) : error C7616: global variable gl_Color is removed after version 140; 0(35) : warning C7533: global variable gl_FragColor is deprecated after version 120. [ERROR] [GLSLShader] ERROR: Compilation of Vertex shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.vert; [ERROR] [GLSLShader] 0(20) : error C7616: global variable gl_ModelViewProjectionMatrix is removed after version 140; 0(23) : error C7616: global variable gl_ClipVertex is removed after version 140; 0(23) : error C7616: global variable gl_ModelViewMatrix is removed after version 140; 0(23) : error C7616: global variable gl_Vertex is removed after version 140. [ERROR] [GLSLShader] ERROR: Compilation of Geometry shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra_triangles.geo; [ERROR] [GLSLShader] 0(45) : warning C7533: global variable gl_FrontColor is deprecated after version 120; 0(46) : error C7616: global variable gl_ClipVertex is removed after version 140. [ERROR] [GLSLShader] SHADER compilation failed.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; [ERROR] [Node()] Object 'OglFloat4Attribute1' already has a node (/OglFloat4Attribute1). Please remove it from this node before adding it to a new one.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] TopologyData: value already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; ```. I guess the shaders needs to be updated for version >= 140",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181:1315,ERROR,ERROR,1315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181,7,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"damned I need to recompile it to get the full error message, sorry I will get back to you",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4724#issuecomment-2110594936:46,error,error,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4724#issuecomment-2110594936,1,['error'],['error']
Availability,dant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [readability-static-definition-in-anonymous-namespace](https://clang.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29326,redundant,redundant-smartptr-get,29326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-smartptr-get']
Availability,"ded '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/python3/site-packages' to sys.path; [INFO] [PluginManager] Loaded plugin: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/libSofaPython3.so; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtrac",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:2067,ERROR,ERROR,2067,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['ERROR'],['ERROR']
Availability,dex](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [re,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28492,redundant,redundant-declaration,28492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-declaration']
Availability,"e import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2599,ERROR,ERROR,2599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['ERROR'],['ERROR']
Availability,"e to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] T",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2016,ERROR,ERROR,2016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['ERROR'],['ERROR']
Availability,"ecified in a Sofa_test<> as well as in fact into any object or function body; - it is stack based so we restore the context when an area is left. To give you a look of how it is (the V2 stuff are just transitional of course):; ```cpp; #include <SofaTest/Sofa_test.h>; using sofa::Sofa_test;. #include <SofaTest/TestMessageHandler.h>; using sofa::helper::logging::GtestMessageHandler ;. /// We can define a default policy for a complete class this way so that if not more; /// expectation are given this generates test failures.; class Sofa_test2 : public Sofa_test<float>; {; EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;; };. class TestMessageHandler_test : public Sofa_test2; {; public:; void defaultTestBehavior(); {; msg_deprecated(""HERE"") << ""This should generate a failure"" ;; msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a failure"" ;; }. void catchingTestBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should not generate a failure"" ;; msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. /// THIS TEST SHOULD FAIL.; void expectAMessageissingBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should not generate a failure"" ;; //msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure but with line number close to "" << __LINE__ ;; msg_error(""HERE"") << ""This should generate a test falure with line number close to "" << __LINE__ ;; }. void complexTestBehavior(); {; {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should generate a failure"" ;; //msg_error(""HERE"") << ""This should generate a test failure"" ;; {; EXPECT_MSG_NOEMIT_V2(Error) ;; msg_err",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643:1342,Error,Error,1342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643,1,['Error'],['Error']
Availability,"ely on the call super pattern to work.; ; That said I strongly support the idea of cleaning the data validation mechanism. . Damien,; Nota bene:; I disagree about your saying ""I think this ""true/false implying other data fields"" mechanism is a bad design and for this case no checking solution will be clean. "" . Having complex relationship between input fields is a very common situation in user interfaces and it is not restricted to""true/false implying other data fields"" but also having mutually exclusive fields and other cases. It is so common that UI frameworks have dedicated support for that (QGroupBox (http://doc.qt.io/qt-5/qtwidgets-widgets-groupbox-example.html in Qt). And from an User interface perspective not exposing such constraints to the user is actually a bad design. So, these kind of constraint are good design, the problem is on how to implement them in Sofa :) . In Sofa the current state is that:; - the constraints resulting from the type are encoded into the read method of the field (eg: RGBAColor accept inputs like #FFAABBCC or ""red"", the input validation and error message reporting is done in the 'read' field, a dynamic cast can be used to display a color selector widget instead of a text field). ; - the ""isRequired"" constraint is encoded with a boolean in the Data field and checked in BaseObject::init(); - the ""isReadOnly"" constraint is encoded with a boolean in the Data field, it is not checked in BaseObject::init() and writing to it is allowed but it used to gray out things in the GUI. ; - other constraints (including one making relation between multiple data) are encoded with if() in the overriden init() and of course these constraints are not visible in the UI. ; - in some case it seems that using a common prefix in the field's name is used to group input together (I have only a vague remembering about that with drawEnable then drawColor and drawLine but I cannot find back the example). For that I have not solution...but we can think about one.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416637832:1389,error,error,1389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416637832,1,['error'],['error']
Availability,"er/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(360): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_deriveSPKTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addForce_kernel(int, real *, real *, const real *, __nv_bool, const real *, float, float) [with real=float]"" ; (1248): here. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(587): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_ElasticityTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addDForce_kernel(int, real *, real *, real, real, real *) [with real=float]"" ; (1266): here. 2 errors detected in the compilation of ""/tmp/tmpxft_0000044c_00000000-6_CudaStandardTetrahedralFEMForceField.cpp1.ii"".; CMake Error at SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake:275 (message):; Error generating file; /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o. ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:2073,error,error,2073,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"ere the different steps of the solving process for a dynamic solver. Hopefully this could be useful at some point. I have described this further in the documentation of Caribou's backward Euler solver [here](https://caribou.jnbrunet.com/classSofaCaribou_1_1ode_1_1BackwardEulerODESolver.html). The last two equations are the one that will be fully assembled, given any solver other than the SOFA's [un-preconditioned] conjugate gradient (this one doesn't assemble any matrices). We can simplify them for the case of only one Newton iteration, which is the same as the SOFA's EulerImplicit component:. ```; [(1+h r_m)M + hB + h(h+r_k)K] da = [r_mM + B + r_k K] v + [F - T]; (1) (2) (3); ```; where `h = dt`, `F` is the internal force vector computed by the elastic forcefields, and `T` is the external force vector computed by pressure fields, gravitational fields, collisions, etc. Here is what happens during the solve:. (1) A = [(1+h r_m)M + hB + h(h+r_k)K]. Building step:; Here we go down on the current context sub-graph and call :; 1. `ff->addKToMatrix(&A)` and `f->addBToMatrix(&A)` for every force field ""ff"" found.; 2. `pc->applyConstraint(&A)` for every BaseProjectiveConstraintSet ""pc"" found. This will set to 0 lines and columns of fixed constraints.; If a mechanical mapping ""m"" is found during the traversal, and m->areMatricesMapped() is false, the traversal stops before entering the subgraph of the mapping. Mechanical mappings step:; In case we have mapped matrices, which is, system matrix of a slave mechanical object, accumulate its contribution to the global system matrix with:; [A]ij += Jt * [A']ij * J; where `A` is the master mechanical object's matrix (top level), `A'` is the slave mechanical object matrix (linked to the top level MO using a mapping) and `J=m.getJ()`; is the mapping relation between the slave and its master. (2) [r_m M + B + r_k K] v; Go down in the current context tree calling `addMBKdx` on every force field components, then go up from the leaves ca",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263:1020,down,down,1020,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263,1,['down'],['down']
Availability,error,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/75#issuecomment-263594700:0,error,error,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/75#issuecomment-263594700,1,['error'],['error']
Availability,fast-merge but the CI reports a lot failure.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1829#issuecomment-782096370:36,failure,failure,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1829#issuecomment-782096370,1,['failure'],['failure']
Availability,"few CUDA scenes are failing, all with the messages `[ERROR] [CGLinearSolver(cGLinearSolver1)] Required data ""threshold"" has not been set. (Current value is 1e-05)` so I suppose these scenes must be updated too",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949356046:53,ERROR,ERROR,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949356046,1,['ERROR'],['ERROR']
Availability,"for every BaseProjectiveConstraintSet ""pc"" found. This will set to 0 lines and columns of fixed constraints.; If a mechanical mapping ""m"" is found during the traversal, and m->areMatricesMapped() is false, the traversal stops before entering the subgraph of the mapping. Mechanical mappings step:; In case we have mapped matrices, which is, system matrix of a slave mechanical object, accumulate its contribution to the global system matrix with:; [A]ij += Jt * [A']ij * J; where `A` is the master mechanical object's matrix (top level), `A'` is the slave mechanical object matrix (linked to the top level MO using a mapping) and `J=m.getJ()`; is the mapping relation between the slave and its master. (2) [r_m M + B + r_k K] v; Go down in the current context tree calling `addMBKdx` on every force field components, then go up from the leaves calling `applyJT` on every mechanical mappings. If the k mechanical parameter is not zero, the `applyDJT` will also be applied.; NOTE: This correspond to the force terms dependent on the velocity, i.e. the damping terms : ; [- r_m M - B + r_k K] v; where K is in fact -K by SOFA's convention, hence the positive (+) sign. (3) [F - T]; Go down in the current context tree calling `addForce` on every force field components, then go up from the leaves calling `applyJT` on every mechanical mappings.; NOTE: This correspond to the force terms dependent on the displacement, i.e. :; (-Ku + T). Now, the damping and stiffness matrices `B` and `K` are usually sparse. Knowing in advanced that `M` is also sparse (or even diagonal), I would bet that we could optimize these operations `(aM + b B + c K) v`. This is even more important for non-linear systems since a third term of the type `(aM + bB + cK) a` appears and must be computed multiples times per time steps. . Let me know if something is not clear, this part is very un-intuitive and I spent the past 2 weeks trying to understand it to implement non-linear dynamic solvers so it is fresh in my memory !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263:2368,down,down,2368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263,1,['down'],['down']
Availability,g/extra/clang-tidy/checks/misc-misplaced-const.html) |; | [clang-analyzer-core.CallAndMessage](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.CallAndMessage.html) | [misc-misplaced-widening-cast](https://clang.llvm.org/extra/clang-tidy/checks/misc-misplaced-widening-cast.html) |; | [clang-analyzer-core.DivideZero](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DivideZero.html) | [misc-new-delete-overloads](https://clang.llvm.org/extra/clang-tidy/checks/misc-new-delete-overloads.html) |; | [clang-analyzer-core.DynamicTypePropagation](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DynamicTypePropagation.html) | [misc-non-copyable-objects](https://clang.llvm.org/extra/clang-tidy/checks/misc-non-copyable-objects.html) |; | [clang-analyzer-core.NonNullParamChecker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonNullParamChecker.html) | [misc-redundant-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-redundant-expression.html) |; | [clang-analyzer-core.NonnilStringConstants](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonnilStringConstants.html) | [misc-sizeof-container](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-container.html) |; | [clang-analyzer-core.NullDereference](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NullDereference.html) | [misc-sizeof-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-expression.html) |; | [clang-analyzer-core.StackAddressEscape](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.StackAddressEscape.html) | [misc-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/misc-static-assert.html) |; | [clang-analyzer-core.UndefinedBinaryOperatorResult](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.UndefinedBinaryOperatorResult.html) | [misc-string-compare](https://clang.llvm.org/extra/clang-tidy/checks/misc-string-compare.htm,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:9076,redundant,redundant-expression,9076,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-expression']
Availability,"great @damienmarchal , unfortunately ci is down for the day !; Let's rebuild tomorrow",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314#issuecomment-315995143:43,down,down,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314#issuecomment-315995143,1,['down'],['down']
Availability,"hello @Ant0nin , are you speaking about the option: ; SOFACUDA_DOUBLE; or; SOFA_GPU_CUDA_DOUBLE_PRECISE. my version with SOFACUDA_DOUBLE activated compile on windows 10 with recent cudaToolkit. ; Maybe can you put here the error log.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484086528:223,error,error,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484086528,1,['error'],['error']
Availability,hey @EulalieCoevoet will you be available to review this PR by next week ?; This PR starts being a bit old. Thanks !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-360076166:32,avail,available,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-360076166,1,['avail'],['available']
Availability,hey @damienmarchal ; I just tried with the macro at the top of the cpp file and I still get the error (for static function):; `sofa/helper/logging/Messaging.h:177:24: note: expanded from macro 'msg_error'; #define msg_error(...) MSGERROR_CHOOSER(__VA_ARGS__)(__VA_ARGS__); `; Any idea why ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/503#issuecomment-344637137:96,error,error,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/503#issuecomment-344637137,1,['error'],['error']
Availability,"hey @guparan @alxbilger ; after investigation, the problem is the same than the one identified in #2927; the lib is generated in _build/applications/plugins/BeamAdapter/lib/_ and no example from BeamAdapter is also available ; moreover, when I do `ninja install` only BeamAdapter get installed in its own location (_build/applications/plugins/BeamAdapter/linstall/_). do you have any idea what's going on @guparan ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1132599183:215,avail,available,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1132599183,1,['avail'],['available']
Availability,"hi @fredroy, thanks for getting back. I am using Ubuntu 18.04.6 LTS. In `sofaframework/sofabuilder_ubuntu`, I clone the repo `git clone -b v22.06.00 https://github.com/sofa-framework/sofa.git sofa/src` and followed the procedure for `build SOFA on [Linux](https://www.sofa-framework.org/community/doc/getting-started/build/linux/)` and got the same error while running ./runSofa. while using `sofaframework/sofa_nightly_ubuntu:v22.06-full`, I first directly run ./runSofa without building sofa and then with building as earlier but again same error. ; Please also guide me if I have even have to build in second case `(sofaframework/sofa_nightly_ubuntu:v22.06-full)`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315420671:349,error,error,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315420671,2,['error'],['error']
Availability,hmm compilation error .. :thinking: ; ```; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicEmulator.cpp.o:(.bss+0x4): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicVisualModel.cpp.o:(.bss+0x0): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836:16,error,error,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836,1,['error'],['error']
Availability,"ib/python2.7/plat-mac; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/Extras/lib/python; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; [ERROR] [PythonScript] ImportError:; Importing the multiarray numpy extension module failed. Most; likely you are trying to import a failed build of numpy.; If you're working with a numpy git repo, try `git clean -xdf` (removes all; files not under version control). Otherwise reinstall numpy. Original error was: cannot import name multiarray. File ""test.py"", line 20, in <module>; import numpy; File ""/usr/local/lib/python2.7/site-packages/numpy/__init__.py"", line 142, in <module>; from . import add_newdocs; File ""/usr/local/lib/python2.7/site-packages/numpy/add_newdocs.py"", line 13, in <module>; from numpy.lib import add_newdoc; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/__init__.py"", line 8, in <module>; from .type_check import *; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/type_check.py"", line 11, in <module>; import numpy.core.numeric as _nx; File ""/usr/local/lib/python2.7/site-packages/numpy/core/__init__.py"", line 26, in <module>; raise ImportError(msg). [ERROR] [SofaPython] Script (file:test) import error; [ERROR] [SofaPython] scene script load error.; [INFO] [BatchGUI] Computing 1000 iterations. [INFO] [BatchGUI] Processing. [INFO] [BatchGUI] 1000 iterations done in 0.004765 s ( 209864 FPS). [INFO] [BatchGUI] 1000 iterations done in 0.004766 s ( 209820 FPS).; ```. When ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:5568,error,error,5568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['error'],['error']
Availability,"id""/> <!-- Needed to use components [RigidDistanceGridCollisionModel] -->; <DefaultPipeline name=""pipeline"" depth=""6"" verbose=""0"" />. <LCPConstraintSolver maxIt=""1000"" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. <RegularGridTopology nx=""50"" ny=""1"" nz=""50"" xmin=""-9"" xmax=""5"" ymin=""7"" ymax=""7"" zmin=""-7"" zmax=""7"" name=""Container"" />; <MechanicalObject name=""dofs"" />; <UniformMass totalMass=""100"" />; <UncoupledConstraintCorrection />; <Node name=""T"">; <include href=""Objects/TriangleSetTopology.xml"" />; <Quad2TriangleTopologicalMapping input=""@../Container"" output=""@Container"" />; <TriangularFEMForceField name=""FEM"" youngModulus=""60"" poissonRatio=""0.3"" method=""large"" />; <TriangularBendingSprings name=""FEM-Bend"" stiffness=""300"" damping=""1.0"" />; <TriangleCollisionModel contactStiffness=""20.0""/>; <PointCollisionModel />; <Node name=""Visu"">; <OglModel name=""Visual"" material=""mat1 Diffuse 1 0.5 1.0 0.75 0.8 Ambient 1 0.2 0.2 0.2 1 Specular 1 0.6 0.6 0.6 0.6 Emissive 0 0 0 0 0 Shininess 0 45"" />; <IdentityMapping input=""@../../dofs"" output=""@Visual"" />; </Node>; </Node>; </Node>; </Node>. ```. For some reasons, the free position and veloc",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:3164,toler,tolerance,3164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838,1,['toler'],['tolerance']
Availability,idy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modern,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:15969,redundant,redundant-void-arg,15969,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-void-arg']
Availability,"if msgInfoVerbosity is a level,and you have s.t. like ; > msg_info_when(printLog > 5) ; then the level is not homogeneous : first name of the macro (error, warning, info - isn't there a msg_debug() macro too ?), and then in the condition in msg_info_when() . well, this might be ""my"" concept of level (this is also the one in the qt libs I am familiar with) . about the automatic switch between ""this"" and ""string"" versions, this would be awesome, however I have no idea on how to achieve this with c++ macro (maybe a special include that would replace the string version by the this version when you are in a component source file ?) . thomas . ----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""Mention""; > <mention@noreply.github.com>; > Envoyé: Mercredi 8 Février 2017 16:01:36; > Objet: Re: [sofa-framework/sofa] Cleaning printLog mis-usage (#160). > My dream would be to have:; > msg_warning (); > msg_error(); > msg_info(). > msg_info_when(printLog > 5 ); > msg_warning_when( fileNotFound); > msg_error_when(toto==tata). > With an an automatic selection between the 'this' and 'string' version. > I in my mind msgInfoVerbosity was not a boolean but something with different; > levels (NONE, LOW, MEDIUM, HIGH) . Maybe useful as well as overkilling. > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278600119:149,error,error,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278600119,1,['error'],['error']
Availability,"ion. . I recently wrote a lot test for sofa component and it appears to me that more than half of my tests cases are in fact verifying that component correctly rise errors or warnings when they are used improperly. Making these tests is very important to avoid un-detected bugs on the error handling code paths and it bring a lot to the general quality of sofa. . About the fact that the ""error as test failure by default"" is covering 99% of our tests... to me this is an indication that our tests are only covering half of the things they should and I'm not sure we should facilitate this behavior. . This is why I came up to making the things explicit in each test because it force the test writer to specify what are his underlying assumption and expectation for each of his tests making things very clear. In addition it put in front of his eyes what he is testing.. and what he is not testing. . PS: I really like the very detailed test failure that are reported with the explicit approach, we have either the filename & lineno of the failing test as well as the location of the message emission. ; eg: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/DilateEngine_test_0/NormalBehavior/. EDIT: Your question make me think that some way to improve the things so maybe we can discuss what are the desirable features and how to expose them to the developpers. This is very hard because it is connected to lack of standardized way our code base reports errors (not exception, some uses error codes ,some uses messages). But I'm very afraid of starting such kind of very impacting discussion (I want to do UI ;)). In the meantime I suggest to use this PR. . EDIT2: what should i do with this:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/TrianglePressureForceField_test_0/trianglePressureForceFieldTest/ ? ; 1) Should I ignore the warning in the test generation ? ; 2) Should the function be pure virtual instead ? ; 3) Should the warnin",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197:978,failure,failure,978,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197,1,['failure'],['failure']
Availability,"iredPlugin name=""Sofa.Component.SolidMechanics.Spring""/> <!-- Needed to use components [TriangularBendingSprings] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TriangleSetGeometryAlgorithms TriangleSetTopologyContainer TriangleSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Quad2TriangleTopologicalMapping] -->; <RequiredPlugin name=""Sofa.GL.Component.Rendering3D""/> <!-- Needed to use components [OglModel] -->; <RequiredPlugin name=""SofaDistanceGrid""/> <!-- Needed to use components [RigidDistanceGridCollisionModel] -->; <DefaultPipeline name=""pipeline"" depth=""6"" verbose=""0"" />. <LCPConstraintSolver maxIt=""1000"" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. <RegularGridTopology nx=""50"" ny=""1"" nz=""50"" xmin=""-9"" xmax=""5"" ymin=""7"" ymax=""7"" zmin=""-7"" zmax=""7"" name=""Container"" />; <Mechanical",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:2308,toler,tolerance,2308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838,1,['toler'],['tolerance']
Availability,isplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/cla,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28574,redundant,redundant-declaration,28574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-declaration']
Availability,"issue with the config.h / macro _API I guess : ; ``` bash; error LNK2019: unresolved external symbol ""__declspec(dllimport) public: __cdecl sofa::core::future::ObjectFactoryInstance::ObjectCreator<class sofa::simulation::DefaultAnimationLoop>::ObjectCreator<class sofa::simulation::DefaultAnimationLoop>(void)"" ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2712#issuecomment-1056779082:59,error,error,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2712#issuecomment-1056779082,1,['error'],['error']
Availability,it was agreed during the meeting that this one should be merged despite it contains new failure and may cause compilation problem.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/457#issuecomment-335759427:88,failure,failure,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/457#issuecomment-335759427,1,['failure'],['failure']
Availability,"it would impact something else. Do you have any idea ? ; 2) Fatal is already part of the default mode. ; 3) I removed Warning&Deprecated by default ; 4) There is no need to change all the tests if in the future if we want to reactivate Warning&Deprecated by default, we will just have to change few lines in Sofa_test.h.; Maybe my scoping examples was not clear but the whole system is scoped per type of message so EXPECT_MSG_NOEMIT(Error) in tests have not consequence on the fact that you can add EXPECT_MSG_NOEMIT(Warning) in Sofa_test to catch all warnings. ; Do you see what I mean ? . About explicit test vs default mode... ; To me if the only aspect we care is how fast we can disable/re-enable tests failures then the default mode in Sofa_test is great. But is this the only aspect we care ? ; What about the fact that default mode is reporting useless filename&line (.../Sofa_test:93). Because of that I loose time each time I have to investigate test failures. On the contrary explicit messages specifications reports real file&line and allow to narrow the problem to very precise code location which save time. And these savings sums up each time someone is looking at tests failures. . In general I write a test once... but investigate failures several time... so I find it worth the effort of spending a bit more time on writing a good test with narrow message catching because they proved to saves time while investigating failure. . This is a totally different story with the time saving of changing the default mode by changing Sofa_test. It saves time as long as we are hesitating on what should be the default mode but after that it will slow down all failure investigations. . So... I made my best to explain why I care of explicit test but the important things to me are:; - what do I have to change so that PR can be be merged so that I can close it and move forward ? ; - do we have the time & courage to fix the 200 failing tests if we activate failure on Warning&Deprecated ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008:1317,failure,failures,1317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008,6,"['down', 'failure']","['down', 'failure', 'failures']"
Availability,ity-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28717,redundant,redundant-smartptr-get,28717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-smartptr-get']
Availability,ix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/collections:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib; [INFO] [runSofa] DataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/runSofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/qt; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs6,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:1078,ERROR,ERROR,1078,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['ERROR'],['ERROR']
Availability,lang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-memb,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:23683,down,downcast,23683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['down'],['downcast']
Availability,"lection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configur",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8296,Error,Error,8296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,1,['Error'],['Error']
Availability,"ly one line that disable them in Sofa_test.cpp and I don't see why it would impact something else. Do you have any idea ? ; 2) Fatal is already part of the default mode. ; 3) I removed Warning&Deprecated by default ; 4) There is no need to change all the tests if in the future if we want to reactivate Warning&Deprecated by default, we will just have to change few lines in Sofa_test.h.; Maybe my scoping examples was not clear but the whole system is scoped per type of message so EXPECT_MSG_NOEMIT(Error) in tests have not consequence on the fact that you can add EXPECT_MSG_NOEMIT(Warning) in Sofa_test to catch all warnings. ; Do you see what I mean ? . About explicit test vs default mode... ; To me if the only aspect we care is how fast we can disable/re-enable tests failures then the default mode in Sofa_test is great. But is this the only aspect we care ? ; What about the fact that default mode is reporting useless filename&line (.../Sofa_test:93). Because of that I loose time each time I have to investigate test failures. On the contrary explicit messages specifications reports real file&line and allow to narrow the problem to very precise code location which save time. And these savings sums up each time someone is looking at tests failures. . In general I write a test once... but investigate failures several time... so I find it worth the effort of spending a bit more time on writing a good test with narrow message catching because they proved to saves time while investigating failure. . This is a totally different story with the time saving of changing the default mode by changing Sofa_test. It saves time as long as we are hesitating on what should be the default mode but after that it will slow down all failure investigations. . So... I made my best to explain why I care of explicit test but the important things to me are:; - what do I have to change so that PR can be be merged so that I can close it and move forward ? ; - do we have the time & courage to fix t",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008:1092,failure,failures,1092,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008,1,['failure'],['failures']
Availability,"mic Sofa.Component.IO.Mesh Sofa.Component.Constraint.Lagrangian.Solver Sofa.Component.Constraint.Lagrangian.Correction Sofa.Component.Collision.Response.Contact Sofa.Component.Collision.Geometry Sofa.Component.Collision.Detection.Intersection Sofa.Component.Collision.Detection.Algorithm Sofa.Component.AnimationLoop"" />; <DefaultVisualManagerLoop/>. <FreeMotionAnimationLoop />; <!-- <LCPConstraintSolver tolerance=""0.001"" maxIt=""1000""/> -->; <GenericConstraintSolver tolerance=""0.001"" maxIterations=""1000"" />. <DefaultPipeline name=""CollisionPipeline"" verbose=""0"" />; <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""collision response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection/>. <MeshOBJLoader name=""LiverSurface"" filename=""mesh/liver-smooth.obj"" />. <Node name=""Liver"" gravity=""0 -9.81 0"">; <EulerImplicitSolver name=""cg_odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver name=""linear solver"" iterations=""25"" tolerance=""1e-09"" threshold=""1e-09"" />; <MeshGmshLoader name=""meshLoader"" filename=""mesh/liver.msh"" />; <TetrahedronSetTopologyContainer name=""topo"" src=""@meshLoader"" />; <MechanicalObject name=""dofs"" src=""@meshLoader"" />; <TetrahedronSetGeometryAlgorithms template=""Vec3d"" name=""GeomAlgo"" />; <DiagonalMass name=""computed using mass density"" massDensity=""1"" geometryState=""@dofs"" topology=""@topo""/>; <TetrahedralCorotationalFEMForceField template=""Vec3d"" name=""FEM"" method=""large"" poissonRatio=""0.3"" youngModulus=""3000"" computeGlobalMatrix=""0"" />; <FixedConstraint name=""FixedConstraint"" indices=""3 39 64"" />. <UncoupledConstraintCorrection />. <Node name=""Visu"" tags=""Visual"" gravity=""0 -9.81 0"">; <OglModel name=""VisualModel"" src=""@../../LiverSurface"" />; <BarycentricMapping name=""visual mapping"" input=""@../dofs"" output=""@VisualModel"" />; </Node>; <Node name=""Surf"" gravity=""0 -9.81 0"">; <SphereLoader filename=""mesh/liver.sph"" />; <MechanicalObject name=""spheres"" position=""@[-1].position"" />; <SphereCollisionMo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1169794916:1526,toler,tolerance,1526,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1169794916,1,['toler'],['tolerance']
Availability,"my fault, I didn't understand your point at the first time. I agree with you that managing the deprecation with specific sets in a CMakeLists can be efficient.; In my mind the place you put the code and its management are somehow connected especially when lighten ""sofa"" because nobody is defining what sofa is/contains/is reduced to. ; More I think about more I think that there is no sofa core or whatever. There are files which have a meaning to be together.; Instead of removing files/classes/components I suggested to think about moving files/classes/components and then evaluate their stage of deprecation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332180994:3,fault,fault,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332180994,1,['fault'],['fault']
Availability,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help me！. Thanks so much！",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2791,ERROR,ERROR,2791,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,2,"['ERROR', 'recover']","['ERROR', 'recovers']"
Availability,"n2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; [ERROR] [PythonScript] ImportError:; Importing the multiarray numpy extension module failed. Most; likely you are trying to import a failed build of numpy.; If you're working with a numpy git repo, try `git clean -xdf` (removes all; files not under version control). Otherwise reinstall numpy. Original error was: cannot import name multiarray. File ""test.py"", line 20, in <module>; import numpy; File ""/usr/local/lib/python2.7/site-packages/numpy/__init__.py"", line 142, in <module>; from . import add_newdocs; File ""/usr/local/lib/python2.7/site-packages/numpy/add_newdocs.py"", line 13, in <module>; from numpy.lib import add_newdoc; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/__init__.py"", line 8, in <module>; from .type_check import *; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/type_check.py"", line 11, in <module>; import numpy.core.numeric as _nx; File ""/usr/local/lib/python2.7/site-packages/numpy/core/__init__.py"", line 26, in <module>; raise ImportError(msg). [ERROR] [SofaPython] Script (file:test) import error; [ERROR] [SofaPython] scene script load error.; [INFO] [BatchGUI] Computing 1000 iterations. [INFO] [BatchGUI] Processing. [INFO] [BatchGUI] 1000 iterations done in 0.004765 s ( 209864 FPS). [INFO] [BatchGUI] 1000 iterations done in 0.004766 s ( 209820 FPS).; ```. When running it with default python in verbose mode, multiarray appears as follows:; ```; sofamacbuilder:mac_clang-3.5_default_release sofa$ cat test.out | grep multiarray; dlopen(""/usr/local/lib/python2.7/site-packages/numpy/core/multiarray.so"", 2);; import numpy.core.multiarray # dynamically loaded from /usr/local/lib/python2.7/site-packages/numpy/core/multiarray.so; # cleanup[2] numpy.core.multiarray; ```. But `/usr/local/lib/python2.7/site-packages` is in `sys.path` when running with SofaPython so **why does it fail**?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:6262,ERROR,ERROR,6262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"n27.zip; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/Extras/lib/python; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; [ERROR] [PythonScript] ImportError:; Importing the multiarray numpy extension module failed. Most; likely you are trying to import a failed build of numpy.; If you're working with a numpy git repo, try `git clean -xdf` (removes all; files not under version control). Otherwise reinstall numpy. Original error was: cannot import name multiarray. File ""test.py"", line 20, in <module>; import numpy; File ""/usr/local/lib/python2.7/site-packages/numpy/__init__.py"", line 142, in <module>; from . import add_newdocs; File ""/usr/local/lib/python2.7/site-packages/numpy/add_newdocs.py"", line 13, in <module>; from numpy.lib import add_newdoc; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/__init__.py"", line 8, in <module>; from .type_check import *; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/type_check.py"", line 11, in <module>; import numpy.core.numeric as _nx; File ""/usr/local/lib/python2.7/site-packages/numpy/core/__init__.py"", line 26, in <module>; raise ImportError(msg). [ERROR] [SofaPython] Script (file:test) ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:5266,ERROR,ERROR,5266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['ERROR'],['ERROR']
Availability,"ne.py from 'd' to 'int' already fixes the problem. For PSDEExamples/02-advanced/ I couldn’t find the error immediately. . - Regarding the question of linking and automatic deriving of data-types for Inputs my opinion is similar to Damien’s:. > Sure...what we want to do is to create a new data with the exact same type of the data pointed by a link. So making a clone of an existing data (to get its type) and then initialize its parent would do the trick without needed all the factory and datatypename things. . I also do think that the existing linking mechanism could be complemented by a cloning feature that creates a copy of a BaseData object. Probably just a clone()-function in BaseData. This would avoid the implementation of a “heavy-weight” factory, like Damien said. To add this data to the correct object (the PSDE) it is only necessary to set the owner, I think. Finally, linking is done by using setParent(). In this way the user can program freely in C++ without worrying about whether his newly defined compound type needs to be made available in the factory. - Regarding the question of linking and automatic deriving of data-types for Outputs my ideas are not as concrete, but maybe helpful. For me there exist two cases:. 1) The Output of the PSDE is connected to an Input of a sofa-object that has static datas, e.g., sofa-objects whose code is written in C++. An example for such an object would be MechanicalObject (MO) that always has the same data (position, velocity, force, …). 2) The Output of the PSDE is connected to a scripted sofa-object, like another PSDE or similar. For case 1.:. It could be possible to define a special BaseData with a name but vacant type. This is a kind of “forward declaration” for the Output. Then, by extending the linking mechanism one could think of the following: At the time of parsing, a sofa-object (e.g. MO) will establish the link between one of its Inputs to the Output of a PSDE (i.e. PSDE->MO). Since the type of the Input is clear",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416:1353,avail,available,1353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416,1,['avail'],['available']
Availability,"new bug found : . > [libx264 @ 0x561e20af02c0] height not divisible by 2 (1574x965); > Error initializing output stream 0:0 -- Error while opening encoder for output stream #0:0 - maybe incorrect parameters such as bit_rate, rate, width or height",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/883#issuecomment-467911971:87,Error,Error,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/883#issuecomment-467911971,2,['Error'],['Error']
Availability,"ng a scene. In these tests you hardly need a concrete instance of node or simulation. If you need this it may be nice to have a class to derive from which does it for you, but then again it should stay optional, because you should really think again about how you designed your component if you need a full fledged simulation to actually make some basic testing on your component. ; No matter what, these tests should be executed at each build (even for devs) and must pass. Failing in this kind of tests must be equal to a compilation error.; In that respect there is something that I am reluctant to allow for this type of tests is a lose coupling approach where you instantiate components using keys from the object factory. You may end up writing tests that in fact do not compile from a scratch build because this allows you to not take care about the dependencies between the libs. That is to say a test may instantiate a component that is not available yet, because it belongs to a library which is deeper in the build dependency tree at the time the unit test is built and executed during the compilation. - Functional tests, that require a working scene with probably more components than the one actually tested. These tests can be longer and therefore should not be mandatory during the compilation. ; They will be run only in ci machines, but can be also easily executed by any developers on its machine mostly to debug what is the nature of a new regression in these kind of tests. ; From our experience at InSimo these kinds of tests regress quite often during the development of a new feature, because you make some optimisation in the code, and you get some epsilon difference, or because you change the approach entirely and the scene is no longer relevant for you and should be changed. So you probably do not want too many of these functional tests, but there should be enough so that it is representative of the overall kind of simulations you want to support. ; But anyway it is ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337507243:1097,avail,available,1097,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337507243,1,['avail'],['available']
Availability,ng-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [readability-static-definition-in-anonymous-namespace](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-definition-in-anonymous-namespace.html) |; | | [readability-uniqueptr-delete-release](https://clang.llvm.org/extra/clang-tidy/checks/readability-uniqueptr-delete-release.html) |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29592,redundant,redundant-string-cstr,29592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,3,['redundant'],"['redundant-string-cstr', 'redundant-string-init']"
Availability,"nkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaPython.so; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/Example.py; [ OK ] Batch/Python_scene_test.sofa_python_scene_tests/0 (2544 ms); [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/1; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in node 'joint'; [ERROR] [SofaPython] Object type UniformCompliance<Vec1d> creation failed; [FATAL] [SofaPython] SP_CALL_MODULEFUNC; Traceback (most recent call last):; File ""LambdaPropagation.py"", line 90, in createScene; joint = StructuralAPI.FixedRigidJoint( ""joint"", ground.node, rigid.node ); File ""/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python/Compliant/StructuralAPI.py"", line 634, in __init__; self.compliance = self.node.createObject('UniformCompliance', name='compliance', compliance=compliance); TypeError: bad argument type for built-in operation; Build timed out (after 30 minutes). Marking the build as aborted.; Build was aborted; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; Recording test results. ####",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:2094,ERROR,ERROR,2094,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,2,['ERROR'],['ERROR']
Availability,"node with amechanical state and a mapping ; if(stopAtMechanicalmapping(node.mapping)); return; fwdMechanicalMapping(node.mapping,);; fwdMappedMechanicalState(node.mstate); ; else; /// We are in a node with amechanical state but without a mapping ; fwdMechanicalState(node.mstate); ...; /// plenty of other scenarios..; ...; for(constraint : node.constraints); fwdConstraintSet(constriant); for(forcefield : node.forcefield); fwdForceField(forcefield); ....; ```; The general idea in this BaseMechanicalVisitor is to implement custom behavior that are triggered wen specific scene ""patterns"" are recognized. The custom behavior are the virtual function (eg: fwdMechanicalState). By default these functions do nothing. It is the responsability of the visitors in-heriting from BaseMechanicalVisitor to override them to match implement the behavior they needs. In the drafted code before... you can notice the line:; ```cpp; stopAtMechanicalmapping(node.mapping); ```; This is also a function implemented in BaseMechanicalVisitor that by default, check the data fields in the provided node.mapping to control if the mechanical action has to be done or stopped. . Let's narrow now down to the constraints. To process the constraints different visitors are used, these visitors inherits from BaseMechanicalVisitors without changing the processNodeTopDown() but instead overiding things in the method fwdConstraintSet(), ; - MechanicalGetConstraintResolutionVisitor ; - MechanicalGetConstraintInfoVisitor; - MechanicalGetConstraintViolationVisitor; - MechanicalAccumulateConstraint2; - MechanicalSetConstraint; - MechanicalAccumulateJacobian. These constraint specific methods are called at the end of the processNodeTopDown() these lines are reached only if the call to stopAtMechanicalMapping() returns false. To make that happens ; all these visitors are overriding stopAtMechanicalMapping() so it returns always false. . The storeLambda was the only one not doing that (which is now fixed with the PR).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/854#issuecomment-446583409:2200,down,down,2200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/854#issuecomment-446583409,1,['down'],['down']
Availability,"ns*); sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotionAndCollisionDetection(sofa::core::ExecParams const*, sofa::core::ConstraintParams const&, double, sofa::core::TMultiVecId<(sofa::core::VecType)0, (sofa::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)0, (sofa::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)2, (sofa::core::VecAccess)1>, sofa::simulation::common::MechanicalOperations*); sofa::component::animationloop::FreeMotionAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::node::animate(sofa::simulation::Node*, double); sofa::gui::batch::BatchGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; ```. and with GDB:. ```; double free or corruption (out). Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; Download failed: Invalid argument. Continuing without source file ./nptl/./nptl/pthread_kill.c. ; 44	./nptl/pthread_kill.c: No such file or directory.; (gdb) where; #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; #1 __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78; #2 __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89; #3 0x00007ffff5242866 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #4 0x00007ffff52268b7 in __GI_abort () at ./stdlib/abort.c:79; #5 0x00007ffff5227750 in __libc_message (fmt=fmt@entry=0x7ffff53c3b34 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:150; #6 0x00007ffff52a3c67 in malloc_printerr (str=str@entry=0x7ffff53c6a20 ""double free or corruption (out)""); at ./malloc/malloc.c:5765; #7 0x00007ffff52a5c50 in _int_free_merge_chunk (av=0x7ffff53feca0 <main_arena>, p=0x5555567f2740, size=2619930050800); at ./malloc/malloc.c:4669; #8 0",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:12514,Down,Download,12514,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['Down'],['Download']
Availability,"oadSceneWithArguments(char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allo; cator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, boost::intrusive_ptr<sofa::simulation::Node>*) S; ceneLoaderPY.cpp:128; #12 0x14a8a6287 in sofa::simulation::SceneLoaderPY::load(char const*) SceneLoaderPY.cpp:88; #13 0x13a76cdee in sofa::simulation::Simulation::load(char const*) Simulation.cpp:472; #14 0x10f83fc80 in main Main.cpp:388; #15 0x7fffa5650234 in start (libdyld.dylib:x86_64+0x5234). 0x00013d5e5ee3 is located 0 bytes to the right of global variable '<string literal>' defined in '/Users/krasin/src/github.com/sofa-framework/sofa/src/SofaKernel/framework/sofa/core/; objectmodel/Context.cpp:37:37' (0x13d5e5ee0) of size 3; '<string literal>' is ascii string 'dt'; SUMMARY: AddressSanitizer: global-buffer-overflow Base.cpp:128 in sofa::core::objectmodel::Base::initData0(sofa::core::objectmodel::BaseData*, sofa::core::objectmodel::BaseData::BaseInitData&, char const*, char const*, unsigned int); ```. The code to blame (as pointed in the first message) is Base.cpp:128:. ```; uint32_t prefix = *(uint32_t*)name;. if (prefix == draw_prefix || prefix == show_prefix); res.group = ""Visualization"";; ```. I propose to fix it in a simple, though, not very elegant way:. ```; if (strlen(name) >= 3) {; uint32_t prefix = *(uint32_t*)name;. if (prefix == draw_prefix || prefix == show_prefix); res.group = ""Visualization"";; }; ```. Shall I create a PR like that?. I am currently tracking down some real issue with SOFA crashing on a VTU input, and having this buffer overflow on my way is a distraction. While it's not hard to fix it locally, this thread shows that I am not the first bitten by it, and suggests I won't be the last. It will save everyone time and effort, if we fix trivialities. Let me know, what would be the next steps here. I will be glad to follow your guidance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566:4210,down,down,4210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566,1,['down'],['down']
Availability,ok I thought I had understood the ArticulatedSystemMapping but... it seems to works fine with different input and output sizes...; I removed that check and error case.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1448#issuecomment-679205362:156,error,error,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1448#issuecomment-679205362,1,['error'],['error']
Availability,"ok fine, just could you explain why the error is sometime sent directly and sometimes it remains conditional to the _checkTopology_ data ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1353#issuecomment-631272998:40,error,error,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1353#issuecomment-631272998,1,['error'],['error']
Availability,"ok, as long as it doesn't crash and the user has error message. 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282019824:49,error,error,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282019824,1,['error'],['error']
Availability,"ok, it works if I don't build cgal, so in header only (only execute cgal-setup.exe, no visual build after this step); Otherwise it fails at compilation: error: cannot open input file 'CGal.lib' when building plugin.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476729206:153,error,error,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476729206,1,['error'],['error']
Availability,"olver name=""cs"" tolerance=""0.001"" maxIt=""500""/-->; 	<GenericConstraintSolver name=""cs"" tolerance=""0.001"" maxIt=""500""/>; 	<MyTestController name=""body"" modelName=""patient.scn"" />; </Node>; ```. I dynamically load ""patient.scn"" in the MyTestController component, the code is as follows:. ```; sofa::simulation::SceneLoader *loader = sofa::simulation::SceneLoaderFactory::getInstance()->getEntryFileName(modelPath);; if (loader); {; 	m_node = loader->load(modelPath.c_str());; 	m_node->init(sofa::core::ExecParams::defaultInstance());; }; ```; The content of ""patient.scn"" is as follows:; ```; <?xml version=""1.0""?>; <Node name=""root"" gravity=""0 0 0"" dt=""0.005"" >. 	<RequiredPlugin name=""MeshFbxLoader"" />; 	<Node name=""Patient"">; 		<MechanicalObject name=""Articulations"" template=""Vec1d"" size=""1"" />; 		<Node name=""PatientBone"">; 			<MeshFbxLoader name=""fbxloader"" filename=""Body-Bone.FBX"" />		; 			<MechanicalObject name=""Bones"" template=""Rigid3d"" position=""@fbxloader.bonePos"" showObject=""0"" />; 			<Node name=""skinning"">; 				<OglModel name=""body"" src=""@../fbxloader"" />; 				<SkinningMapping name=""skinMap"" template=""Rigid3d,ExtVec3d"" input =""@../Bones"" output =""@body"" nbRef =""@../fbxloader.nbref"" indices =""@../fbxloader.boneIds"" weight=""@../fbxloader.boneWeights""/>; 			</Node>	; 			<ArticulatedSystemMapping input1=""@../Articulations"" output=""@Bones""/>; 		</Node>; 		<ArticulatedHierarchyContainer/>; 		<Node name=""articulationCenters"">; 			<Node name=""articulationCenter1"">; 				<ArticulationCenter parentIndex=""0"" childIndex=""1"" posOnParent=""294 22 0"" posOnChild=""0 0 0"" />; 				<Node name=""articulations"">; 					<Articulation translation=""0"" rotation=""1"" rotationAxis=""0 0 -1"" articulationIndex=""0""/>; 				</Node>; 			</Node>; 		</Node>; 	</Node>; 	; </Node>; ```. When my application is started, the above pointer is empty error appears, but when the component ""GenericConstraintSolver"" is changed to ""LCPConstraintSolver"" in ""test.scn"", the above pointer is empty problem no longer occurs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696:2372,error,error,2372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696,1,['error'],['error']
Availability,"on my machine:. > [==========] Running 2 tests from 1 test case.; > [----------] Global test environment set-up.; > [----------] 2 tests from Monitor_test; > [ RUN ] Monitor_test.testInit; > [ OK ] Monitor_test.testInit (21 ms); > [ RUN ] Monitor_test.testModif; > [ OK ] Monitor_test.testModif (17 ms); > [----------] 2 tests from Monitor_test (38 ms total); > ; > [----------] Global test environment tear-down; > [==========] 2 tests from 1 test case ran. (38 ms total); > [ PASSED ] 2 tests. The purpose of this PR was initially to create a test to uncover a bug that some people in our team went through.; I personally never had the problem on my machine, but I know that @IPeterlik had it for instance.; It would be interesting to investigate deeper into this issue, but without being able to reproduce it on my workstation, I don't really know how I could do it. :/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323369942:408,down,down,408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323369942,1,['down'],['down']
Availability,"on my side it is ready whenever you want, the fact SofaPython2 was throwing did an error at the compilation because it was calling the end(...Node*) perfectly showed the principle 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1774#issuecomment-773302067:83,error,error,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774#issuecomment-773302067,1,['error'],['error']
Availability,ping @EulalieCoevoet :-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-358261757:0,ping,ping,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-358261757,1,['ping'],['ping']
Availability,ping @hugtalbot :wave:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2346#issuecomment-922933924:0,ping,ping,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2346#issuecomment-922933924,1,['ping'],['ping']
Availability,ping @olivier-goury :-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/439#issuecomment-338594778:0,ping,ping,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/439#issuecomment-338594778,1,['ping'],['ping']
Availability,ping @vmagno,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/687#issuecomment-400349730:0,ping,ping,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/687#issuecomment-400349730,1,['ping'],['ping']
Availability,"proach of the kind of pattern I'm using in the init/reinit function (actually any change to the data from the UIs should also be checked); ```cpp; void MyComponent::init(){; m_componentState = ComponentState::Valid; // By default the ComponentState is to Undefined. ; if( d_stiffness.getValue() < 0.0 ){; msg_warning(this) << ""The 'stiffness=""<< d_stiffness.getValueString() << ""' parameters is outside the validity range of [0, +INF[. Continuing with the default value=500.0 . ""; ""To remove this warning message you need to set the 'stiffness' attribute between [0, +INF[."" ; d_stiffness.setValue(500) ;; }. if( this->m_state nullptr ){; msg_error(this) << ""No mechanical state, the component is thus de-activated.""; ""To remove this error message you need to add a MechanicalObject.""; m_componentState = ComponentState::Invalid;; }; }; ```; Then for each function crashing sofa when the object is not properly initialized... ; ```cpp; void MyComponent::draw(); {; if(m_componentState == ComponentState::Deactivated); return ; ; ; if(m_componentState == ComponentState::Invalid){ ; msg_info_when(this, m_verbosityLevel == HIGH ) << ""You are calling a function on an invalid component. "" ;; return ; ; }; ....; }; ```. I agree this is a lot of code to add but I haven't yet a better solution. Now...if you implement this kind of pattern you can then do the following from the outside (eg: in the _test):; ```cpp; void myComponentInvalid_test(); {; ... make a scene with a MyComponent with an invalid '-1' param.... ; {; ExpectMessage error(Message::Error); // test failure if the component does not send an error message; ; MessageAsTestFailure warning(Message::Warning); // test failure if the component do not send a messae while it shouldn't ; ; MyComponent::init() ; } ; EXPECT_EQ( MyComponent::getComponentState(), ComponentState::Invalid ); ; }; ```. N.B: When I look carefully the ExpectMessage & MessageAsTestFailure... I have the feeling this is a kind of an asynchronous exception mechanism.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278900494:1549,error,error,1549,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278900494,5,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,ps://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://cl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28761,redundant,redundant-function-ptr-dereference,28761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-function-ptr-dereference']
Availability,ps://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [readability-static-definition-in-anonymous-namespace](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-definition-in-anonymous-namespace.html) |; | | [readability-uniqueptr-delete-release](https://clang.llvm.org/extra/clang-tidy/checks/readability-uni,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29510,redundant,redundant-string-cstr,29510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-string-cstr']
Availability,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8718,Error,Error,8718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,2,"['Error', 'error']","['Error', 'errors']"
Availability,"ractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData (2 ms); [ RUN ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected; ----------------------------------------------------------------------; Ran 1 test in 0.001s. OK; [ OK ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected (1 ms); [ RUN ] SofaPython3/Sofa.all_tests/2_Sofa_Core_Base_test_addNewDataFromParent; ======================================================================; ERROR: test_addNewDataFromParent (Base.Test); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""Base.py"", line 83, in test_addNewDataFromParent; c1 = root.addObject(""MechanicalObject"", name=""c1""); ValueError: Object type MechanicalObject<> was not created ; The object is not in the factory. . ----------------------------------------------------------------------; Ran 1 test in 0.001s. FAILED (errors=1); /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/Base.py:0: Failure; Failed; [ FAILED ] SofaPython3/Sofa.all_tests/2_Sofa_Core_Base_test_addNewDataFromParent, where GetParam() = /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/Base.py with args {test_addNewDataFromParent, } (2 ms); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:5143,ERROR,ERROR,5143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,3,"['ERROR', 'Failure', 'error']","['ERROR', 'Failure', 'errors']"
Availability,"raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)：in function‘dhdUSBGetDeviceCountList(int*, int*, int*, int)’：; dhdComUSB-libusb.cpp:(.text+0x215)：undefined reference to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1824,ERROR,ERROR,1824,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['ERROR'],['ERROR']
Availability,"re used improperly. Making these tests is very important to avoid un-detected bugs on the error handling code paths and it bring a lot to the general quality of sofa. . About the fact that the ""error as test failure by default"" is covering 99% of our tests... to me this is an indication that our tests are only covering half of the things they should and I'm not sure we should facilitate this behavior. . This is why I came up to making the things explicit in each test because it force the test writer to specify what are his underlying assumption and expectation for each of his tests making things very clear. In addition it put in front of his eyes what he is testing.. and what he is not testing. . PS: I really like the very detailed test failure that are reported with the explicit approach, we have either the filename & lineno of the failing test as well as the location of the message emission. ; eg: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/DilateEngine_test_0/NormalBehavior/. EDIT: Your question make me think that some way to improve the things so maybe we can discuss what are the desirable features and how to expose them to the developpers. This is very hard because it is connected to lack of standardized way our code base reports errors (not exception, some uses error codes ,some uses messages). But I'm very afraid of starting such kind of very impacting discussion (I want to do UI ;)). In the meantime I suggest to use this PR. . EDIT2: what should i do with this:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/TrianglePressureForceField_test_0/trianglePressureForceFieldTest/ ? ; 1) Should I ignore the warning in the test generation ? ; 2) Should the function be pure virtual instead ? ; 3) Should the warning message be a dmsg_warning instead of a msg_warning one ? . EDIT3: And this one ; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/DifferenceEngine_test_0/DataTest/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197:1520,error,errors,1520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197,2,['error'],"['error', 'errors']"
Availability,"regarding the content of the PR, we should close it; moreover, you can find a work on making this work more robust in the PR #714 ; agreed @VannesteFelix ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/625#issuecomment-404860930:108,robust,robust,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/625#issuecomment-404860930,1,['robust'],['robust']
Availability,"rning if `this` is explicitly used when initializing member variables, as it is not fully constructed yet; * however, compilers are happy with calling a method, which itself use `this`, hence the initial implementation of `initData()` (which was called `dataField()`) had the `this` pointer implicitely, but needed the `Data*` pointer to add if to the ""fields"" map, which is why it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break t",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1421,error,errors,1421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283,1,['error'],['errors']
Availability,"self.name = name; self.addNewInput('positions', datatype=""vector<Vec3d>"", value=positions, help=""test""); self.addNewOutput('average', datatype=""Vec3d"", help=""average""); ; def parse(self, arg):; pass; ; def init(self):; 	pass; ; def update(self):; value = [0, 0, 0]; for pos in self.positions:; value[0] += pos[0]; value[1] += pos[1]; value[2] += pos[2]; value[0] /= len(self.positions); value[1] /= len(self.positions); value[2] /= len(self.positions); self.cleanDirty(); self.average = [[-value[0],-value[1],-value[2]]]; pass. def createScene(rootNode):; loader = rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); psde = PyEng(rootNode, name=""PSDE"", positions=loader.findData('position').getLinkPath()); rootNode.createObject('TransformEngine', name='TE', input_position=""@loader.position"", translation=psde.findData('average').getLinkPath()); rootNode.createObject('OglModel', name=""visu"", position=""@TE.output_position"", triangles=""@loader.triangles"",; color=""1 0 0 1""); ```. With this syntax, I can create my engines definition once, and create as many as I want, on the fly, with any parameter I want for my input fields. It's actually even better, because:; - I don't have to create inputs with the fields I pass to the constructor. It could be simple data (addNewData vs addNewInput); - Construction of datafields is more explicit, thus less error-prone; - No need to go search for a decorator function somewhere in SofaPython, or to declare a dictionary of default arguments, everything is performed in the constructor. So, yeah, this PR is now virtually useless.; There's one thing I don't like with this syntax though, it's that the creation of the object is performed at the same time as it is assigned to the scene graph, which, in my opinion is not always desirable.; Something closer to this would be neat:; ```py; rootNode.addObject(PyEng(name='PSDE', positions=loader.findData('position').getLinkPath()); ```. I'll work on that in the following days :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442:1620,error,error-prone,1620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442,1,['error'],['error-prone']
Availability,"simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double)+0x124) [0x7f6588263ed4]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulationCore.so(sofa::simulation::Simulation::animate(sofa::simulation::Node*, double)+0x54) [0x7f65882c9c44]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(sofa::Python_scene_test::run(sofa::Python_test_data const&)+0x2e1) [0x7f658ebb3791]; -> ../builds/pr/all/bin/Compliant_test(sofa::Python_scene_test_sofa_python_scene_tests_Test::TestBody()+0x2e) [0x54f76e]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*)+0x33) [0x7f658ebd7223]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::Test::Run()+0xb7) [0x7f658ebca917]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::TestInfo::Run()+0x9e) [0x7f658ebca9be]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::TestCase::Run()+0xa5) [0x7f658ebcaac5]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::internal::UnitTestImpl::RunAllTests()+0x248) [0x7f658ebcd198]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::UnitTest::Run()+0x54) [0x7f658ebcd454]; -> ../builds/pr/all/bin/Compliant_test(main+0xd4) [0x4aeb84]; -> /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7f6585034f45]; -> ../builds/pr/all/bin/Compliant_test() [0x4aec6f]; bash: line 1: 11528 Terminated ../builds/pr/all/bin/Compliant_test --gtest_output=xml:../builds/pr/all/tests/Compliant_test/report.xml 2>&1; /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/scripts/ci/tests.sh: error: Compliant_test ended with code 143; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:8236,error,error,8236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,1,['error'],['error']
Availability,sorry for not replying before @jnbrunet ; yes we had some small questions. Will you be available tomorrow morning 10am (the sofa-dev meeting takes exceptionally place tomorrow)?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1258#issuecomment-594836562:87,avail,available,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1258#issuecomment-594836562,1,['avail'],['available']
Availability,"sorry for the haste, i thought that my issue was down because of no response on the discussions tab. i will keep it in mind from now onwards.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5029#issuecomment-2378825246:49,down,down,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5029#issuecomment-2378825246,1,['down'],['down']
Availability,"sorry, it looked simple and fine for me... . ----- Mail original -----. > De: ""Guillaume Paran"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""State change""; > <state_change@noreply.github.com>; > Envoyé: Jeudi 26 Janvier 2017 10:21:34; > Objet: Re: [sofa-framework/sofa] [CI] Replace 'make' by 'ninja' when; > available. (#141). > This one was merged too fast.; > I wanted to change a bit the code :(. > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/141#issuecomment-275343846:397,avail,available,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/141#issuecomment-275343846,1,['avail'],['available']
Availability,"sse,. I'm not fully sure I understand the problem...but extern declaration of template are not related to old version of gcc in any way they are related to wether or not we control where the templated code is instanciated. The default behavior is that any used templates are instanciated and code is generated in each translation unit (so in each .cpp there is the compilation of the full Vec<double, 3>, Vec<real, 3> for every templates used). The consequence is that this generates huge binary (.o) files each containing identical machine code. This duplicated machine code in every .o is removed during the link. So said differently the compiler makes a lot of work to generate machine code then the linked makes a lot of code to remove it and keep only one version. The solution in c++ is to use the ""extern"" keyword to tell the compiler not to instanciate the templated code, extern means that the machine code will be provide elsewhere. To work and not have link error it is the needed to have a least one version of the template instanciated somewhere. This is why in the .cpp files we often instanciate the same template (without the extern). ; The design pattern o use to avoid the redeclaration warnings is a bit tricky so here is an example.; In myclass.h; ```cpp; template<typename T> ; MyClass ; {; /// ...; };. /// here is the trick .. to differentiate when we include the .h everywhere in the codebase where we want the extern from where it is included from myclass.cpp where we don't want it we do the following; #ifndef MY_CLASS_CPP ; extern template MyClass<double> /// d'ont emit machinecode for this one we provides it ""somewhere else""; extern template MyClass<float> /// don't emit machinecode for this one we provides it ""somewhere else""; #endif /// ; ``` . In the myclass.cpp; ```cpp; #define MY_CLASS_CPP /// You tll the myclass.h that you are where the machine code will be emitted...so no need for the externs version... ; #include ""myclass.h"". template MyClass<double> /// s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1548#issuecomment-713560956:982,error,error,982,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1548#issuecomment-713560956,1,['error'],['error']
Availability,"ted may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::Simulation::initNode(sofa::simulation::Node*); sofa::simulation::Simulation::init(sofa::simulation::Node*); __libc_start_main; Segmentation fault (core dumped); [sergei@sergei-20hd0000fr test_scene]$",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:12030,fault,fault,12030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['fault'],['fault']
Availability,the ```return``` was added intentionally in a previous PR where mechanism to force the initialization of topology container have been added to avoid time bomb. ; Removing the return means you don't bother of the error sent just before and you continue to fill or not fill data and you will get a crash later in another component due to inconsistent topology buffers access. Can you check how many errors you get in your example without this return?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577238750:212,error,error,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577238750,2,['error'],"['error', 'errors']"
Availability,"there are new tests failure:; ```. FastTriangularBendingSprings.scn:0, Dynamic Parser, Priority: Normal; --; [EdgeSetGeometryAlgorithms(edgeSetGeometryAlgorithms1)] Unable to get a valid topology from the context. ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/973#issuecomment-480168725:20,failure,failure,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/973#issuecomment-480168725,1,['failure'],['failure']
Availability,"to fix the compilation error. ## How to use them. Create a new deprecation macro specifying the deprecation topic you are tackling.; This way, you won't have dates everywhere in your code. ## Example. ### Deprecate. I want to rename something that will break my API. ; To ease the transition for my users, I will propose a deprecation period with a fine message by using a deprecation macro.; Latest release is v20.06, next release (currently under development) is v20.12, after that will come the v21.06. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DEPRECATED( \; ""v20.12 (PR#12345)"", ""v21.06"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod();; ```. Anyone using myDeprecatedMethod will get this **warning**: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is still usable but has been DEPRECATED since v20.12 (PR#12345). You have until v21.06 to fix your code. XXX must be renamed into YYY.; ```. ### Disable. Now forward in time ...; Latest release is v20.12, next release (currently under development) is v21.06, after that will come the v21.12.; It is time to stop the deprecation period. To provide a clear message to my users, I will not just remove my deprecated method but I will disable it with `= delete` and use a deprecation macro. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DISABLED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DISABLED( \; ""v20.12 (PR#12345)"", ""v21.06 (PR#45678)"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DISABLED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod() = delete;; ```. Anyone using myDeprecatedMethod will get an **error** right after this warning: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is not usable anymore because it has been DISABLED since v21.06 (PR#45678) after being deprecated on v20.12 (PR#12345). XXX must be renamed into YYY.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249:2616,error,error,2616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249,1,['error'],['error']
Availability,"to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/build/lib/libSofaPython.dylib; [INFO] [Python_scene_test] running /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py; ERROR: wrong number of arguments; [ERROR] [PythonScript] IndexError: list index out of range; File ""/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py"", line 15, in <module>; DAMPING_COEF = float( sys.argv[1] ). [ERROR] [SofaPython] Script (file:damping) import error; [ERROR] [PythonScriptController(PythonScriptController)] load error (file '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py' not parsable); ../applications/plugins/SofaTest/Python_test.cpp:263: Failure; Failed; python error; [ FAILED ] Batch/Python_scene_test.sofa_python_scene_tests/0, where GetParam() = 48-byte object <81-00 00-00 00-00 00-00 7E-00 00-00 00-00 00-00 00-4D 60-FA C4-7F 00-00 80-4D 60-FA C4-7F 00-00 10-4E 60-FA C4-7F 00-00 10-4E 60-FA C4-7F 00-00> (1051 ms); [----------] 1 test from Batch/Python_scene_test (1051 ms total); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176:1456,ERROR,ERROR,1456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176,8,"['ERROR', 'Failure', 'error']","['ERROR', 'Failure', 'error']"
Availability,tra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/ex,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29020,redundant,redundant-member-init,29020,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-member-init']
Availability,type dependant error could result from a missing typename or template keyword,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/673#issuecomment-393540797:15,error,error,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/673#issuecomment-393540797,1,['error'],['error']
Availability,ubuntu_gcc_options seems to have a one additional scene-tests error but I can find out which one.; Else I think it's ready right @alxbilger ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903614639:62,error,error,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903614639,1,['error'],['error']
Availability,"using cmake-gui, I have now activated the plugin sofa cuda: . here is the output of cmake-gui:; `````; Found CUDA: /usr/local/cuda-11.2 (found version ""11.2"") ; SofaCUDA: Plugin VolumetricRendering was not enabled/found, therefore CudaTetrahedralVisualModel will not be compiled.; SofaCUDA: SofaDistanceGrid was not enabled, therefore CudaDistanceGridCollisionModel will not be compiled.; SofaCUDA: optional dependency SofaSphFluid not enabled. ; Autodetected CUDA architecture(s): 7.5; SofaCUDA: nvcc flags: -gencode;arch=compute_75,code=sm_75;-Xcompiler -fPIC; `````. I'm compling sofa on my laptop that has a decent graphical card (a Quadro T2000) but that maybe not inadequate in GPU memory or precision for sofa. Double precision is not activated for instance. Anyway, the same error occurs even if I delete all files from previous compilation adn regenerate the cmake files. `````; 1121/1599] Building CXX object modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglShaderVisualModel.cpp.o; FAILED: modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglShaderVisualModel.cpp.o ; /usr/bin/clang++ -DNDEBUG -DSOFA_BUILD_OPENGL_VISUAL -DSOFA_BUILD_SOFAOPENGLVISUAL -DSofaOpenglVisual_EXPORTS -I/home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src -Iinclude/SofaOpenglVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseVisual/src -Iinclude/SofaBaseVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseTopology/src -Iinclude/SofaBaseTopology -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../Sofa",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786521312:783,error,error,783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786521312,1,['error'],['error']
Availability,was it triggering an error? I expect this should fix a scene somewhere?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4711#issuecomment-2092513068:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4711#issuecomment-2092513068,1,['error'],['error']
Availability,what and how would you recommand to fix this error @matthieu-nesme ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311592430:45,error,error,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311592430,1,['error'],['error']
Availability,"y?):; ```; BTDLinearSolver.inl(84): error C2244: 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -': unable to match function definition to an existing declaration; BTDLinearSolver.inl(81): note: see declaration of 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -'; BTDLinearSolver.inl(84): note: definition; BTDLinearSolver.inl(84): note: 'sofa::defaulttype::Mat<sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,T> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(void) const'; BTDLinearSolver.inl(84): note: existing declarations; BTDLinearSolver.inl(84): note: 'sofa::defaulttype::Mat<,,real> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(const sofa::defaulttype::Mat<,,real> &) const'; BTDLinearSolver.inl(84): note: 'sofa::defaulttype::Mat<,,real> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(void) const'; BTDLinearSolver.inl(90): error C2244: 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -': unable to match function definition to an existing declaration; BTDLinearSolver.inl(87): note: see declaration of 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -'; BTDLinearSolver.inl(90): note: definition; BTDLinearSolver.inl(90): note: 'sofa::defaulttype::Mat<sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,T> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(const sofa::defaulttype::Mat<,,real> &) const'; BTDLinearSolver.inl(90): note: existing declarations; BTDLinearSolver.inl(90): note: 'sofa::defaulttype::Mat<,,real> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(const sofa::defaulttype::Mat<,,real> &) const'; BTDLinearSolver.inl(90): note: 'sofa::defaulttype::Mat<,,real> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(void) const'; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/907#issuecomment-458100984:1129,error,error,1129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/907#issuecomment-458100984,1,['error'],['error']
Availability,"yet an other option is to conditionnaly compile HighOrderTopology code in Flexible based on whether the HighOrderTopology plugin is existing or not (in cmakelists package_require(HighOrderTopology) if (HighOrderTopology_FOUND) ... ): ; - each plugin can live in its own repository ; - no need for a third plugin ; - should work whether all the plugins are compiled in the same cmake build project or are compiled/installed separately (well HighOrderTopology must be available when compiling Flexible) . thomas . ----- Mail original -----. > De: ""Matthieu Nesme"" notifications@github.com; > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > ; > Hi Hervé,; > ; > In general, I think it is a good idea to have a repo per plugin, even if it; > becomes more difficult to update them when the sofa core is modified.; > But in this specific case, it would be great to add this plugin to this; > github repo, so Flexible can still benefit from your code.; > ; > Another solution, could be to add a third plugin in your independent; > repository, that would link with both SOFA-HighOrderTopology and Flexible,; > and that would contain the high order shape functions.; > ; > What do you think?; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936:466,avail,available,466,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936,1,['avail'],['available']
Availability,"you can let it open, we will close this issue when the error message will be added. (very soon)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/768#issuecomment-421054304:55,error,error,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/768#issuecomment-421054304,1,['error'],['error']
Availability,you have some compilation error... not sure if it is relevant...; could you double check before merging; ``` /builds/workspace/sofa-framework/PR-4880/fedora_clang_options_release/src/Sofa/GUI/Common/src/sofa/gui/common/MouseOperations.cpp:104:12: error: cannot initialize return object of type 'sofa::gui::component::performer::InteractionPerformer *' with an lvalue of type 'const sofa::gui::component::performer::InteractionPerformer *'```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4880#issuecomment-2265771315:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4880#issuecomment-2265771315,2,['error'],['error']
Availability,you turn SofaCUDA plugin to on by my fault? :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2440#issuecomment-948595593:37,fault,fault,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2440#issuecomment-948595593,1,['fault'],['fault']
Availability,|; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28856,redundant,redundant-function-ptr-dereference,28856,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-function-ptr-dereference']
Availability,"Здравствуй @mariabul . The [ERROR] [XMLParser] means that the error was emitted by the xml parser. Having such error indicates that the content of the file you are trying to parse is considere as invalid xml content. . This happens when the file is empty or there is missing closing tag ```xml </>``` and all those kind of things. So I know it is trivial but can you first check that the content of the file is the one from our repository and that it was not changed ? . If it is then maybe it is a more complex issue.; I just checked the file you are trying to load and noticed that it is missing the xml prefix.; ```xml; <?xml version=""1.0"" encoding=""UTF-8""?>; ...; ```. Your github account says you are from moscow, so I wonder if this could be a character encoding issue. Maybe there is a cyrillic character encoding set on your system and as the file does not specifying the encoding of the XML parser it use the default one which result in unloadable file. . Could you try if specifying the xml encoding helps ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/569#issuecomment-360149494:28,ERROR,ERROR,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/569#issuecomment-360149494,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,🥹; ```; Test Result (2 failures / +1); SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.elasticbody.py; SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.step6.py; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082:23,failure,failures,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082,1,['failure'],['failures']
Deployability," ""showVisual"",; ""showForceFields"",; ""showBehaviorModels"",; ],; ). root.addObject(""CollisionPipeline"", depth=6, verbose=False, draw=False); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""MinProximityIntersection"", name=""Proximity"", alarmDistance=0.5, contactDistance=0.3); root.addObject(""CollisionResponse"", response=""FrictionContactConstraint""); root.addObject(""GenericConstraintSolver""). scene_node = root.addChild(""scene""). composite_node = scene_node.addChild(""composite""). mesh_files = [; ""mesh/liver.obj"",; ]. composite_node.addObject(; ""SparseGridMultipleTopology"",; n=[6, 6, 6],; fileTopology=mesh_files[0],; fileTopologies=mesh_files,; nbVirtualFinerLevels=2,; finestConnectivity=False,; stiffnessCoefs=[1] * len(mesh_files),; massCoefs=[1] * len(mesh_files),; ). composite_node.addObject(""EulerImplicitSolver"", vdamping=0, rayleighMass=0, rayleighStiffness=0); composite_node.addObject(""SparseLDLSolver""); composite_node.addObject(""MechanicalObject""); composite_node.addObject(; ""HexahedronCompositeFEMForceFieldAndMass"",; drawType=0,; lumpedMass=False,; nbVirtualFinerLevels=2,; youngModulus=600,; poissonRatio=0.3,; method=""polar"",; density=0.1,; updateStiffnessMatrix=False,; ); composite_node.addObject(""BoxROI"", box=[-1, -5, -1, 5, 5, 5]); composite_node.addObject(""FixedConstraint"", indices=""@BoxROI.indices""); composite_node.addObject(""LinearSolverConstraintCorrection""). liver_visual = composite_node.addChild(""visual""); liver_visual.addObject(""MeshOBJLoader"", filename=mesh_files[0]); liver_visual.addObject(; ""OglModel"",; src=""@MeshOBJLoader"",; material=""Transparent Diffuse 1 1 0 1 0.45 Ambient 0 1 1 1 1 Specular 1 0 0 1 1 Emissive 0 1 0 0 1 Shininess 1 100"",; ); liver_visual.addObject(""HexahedronCompositeFEMMapping""). return root; ```. <video src=""https://github.com/sofa-framework/sofa/assets/29635054/2088731c-9fe9-4d2f-a574-a71d9d615815; "" width=""200"" height=""auto"">. This is without any interaction with the scene. Cheers,; Paul",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:10238,update,updateStiffnessMatrix,10238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['update'],['updateStiffnessMatrix']
Deployability," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6990,configurat,configuration,6990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,3,"['configurat', 'install']","['configuration', 'installation', 'installed']"
Deployability," But I don't think the library should do this in the user's back without transparency. > you need to handle the case where the loaded scene already has python scripts, and let the PythonEnvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it should be avoid for now since I'm not sure what side effects this will bring. Right now doing it seems not so bad as, again, we only attach the environment to the already created python environment. ; - A ScriptController will need to be added in order to trigger script events so that the python scene's functions (initGraph, onBeginAnimationStep, etc) are called. The createScene function is called by the SceneLoaderPY so this one is fine. > (I would probably put your feature in a module separate from Sofa for this reason). I think this should be entirely a part of the SofaPython plugin in order to keep what is related to sofa in python there. > what happens when Sofa.cleanup() gets called but python objects still hold c++ objects that are to be destructed when python exits ?. This is a good questi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:1865,integrat,integrate,1865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['integrat'],['integrate']
Deployability, Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4814,Release,Release,4814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability," NG branch](https://github.com/sofa-framework/sofa/tree/ng) on sofa-framework.; Still, all the developments will go through the PR process. Reminder: your feedback is VERY important, we need it to adapt our work and minimize future rollbacks. **Do not hesitate to put any comment in the pull-requests.**. ## Refactoring and adapting SPM for Sofa.Component.Utils. SPM is the set of scripts we use to make our work easily reproducible. You can check it out [here](https://github.com/guparan/sofa2ng). This work made me realize that it will be very hard, if not impossible, to anticipate every subtle change needed by the refactoring.; - Do we want SPM to be an all inclusive script to refactor completely SOFA? ; every refactoring is unique and needs to change SPM ; -> namespace handling ; -> includes refactoring; - Or should we prefer it to be an easy-to-use script to **bootstrap** any refactoring? ; -> very specific changes will have to be done by hand. I propose to go for solution 2 and to provide a git patch covering the work done after SPM job (fixing includes, fixing namespaces, ...). The progress of this task is **85%** since I now have to create the patch and to provide everything in the PR. ## Moving on with Sofa.Helper.Bvh; Following [the latest iteration on NG architecture](https://annuel2.framapad.org/p/sofang-v3) and Damien's first draft in his [cleanTheMessStep1](https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng) branch, I started refactoring SofaFramework with Sofa.Helper.Bvh. This task needed me to heavily change/adapt SPM. It contributed to make me prefer solution 2 above. The progress of this task is **60%**. TODO:; - update the recipe with latest SPM changes (namespace handling); - adapt SPM output for smooth transition from SOFA; - create the patch; - open a PR. ## Next steps; - Finalize and merge Sofa.Component.Utils PR; - Open a new PR: Sofa.Helper.Bvh; - Continue with SofaHelper refactoring. ----------. Any feedback is more than welcome :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811:1298,patch,patch,1298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811,4,"['patch', 'update']","['patch', 'update']"
Deployability," Pluginization works are possible but they have to be done in-place (not moving the files). This will permit to simplify the dependencies between SOFA modules. . About the NG branch, to avoid big divergence, we propose to merge it with master as soon as some big step is done. The next big step is SofaFramework coverage. ## Bootstrapping scripts. Previously named SPM, the [bootstrapping scripts](https://github.com/guparan/sofa2ng) are now able to handle test folders. ## Process. Here is the process to cover one module:; 1. Create/update a recipe based on an existing one.; 2. Run the bootstrapping scripts with the recipe.; 3. Inspect the output; 4. If something is wrong or missing, edit the bootstrapping scripts and *goto 1*; 5. Do specific changes by hand like namespace aliases; 6. Create a patch of all changes made by hand; 7. Open a pull-request providing the recipe and the patch (previously pushed to sofa2ng). This process will be rewritten in Sofa.Helper.Bvh pull-request. ## Sofa.Component.Utils. The first NG pull-request has been merged to the NG branch. There is still some updates to do though, because the bootstrapping scripts changed. ## Sofa.Helper.Bvh. The recipe has been updated. ; This work will be the base of further contributions. I will detail all the bootstrapping + patching process in the pull-request. ## Next steps; - Pluginize without moving files: use plugins mechanism to work on modules dependencies ; Start with the less dependent ones and progress towards SOFA core.; Objective: simplify dependencies between modules.; - Validate Damien's architecture proposal for SofaFramework: https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel/Sofa; Particularly about Sofa.Helper.Types; - Create Sofa.Helper.Bvh pull-request; Will give a clear example and all the process to refactor parts of SofaFramework; - Progress within Sofa.Helper.*; Assign tasks to all volunteers before STC#5. ----------. As always, any feedback is more than welcome :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223:1242,update,updates,1242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223,3,"['patch', 'update']","['patching', 'updated', 'updates']"
Deployability," SOFA was going to be cut into ; several pieces that could be optionally compiled. Is this still on the radar ?. Hervé. Le 05/10/2016 à 15:27, thomas-lemaire a écrit :. > yet an other option is to conditionnaly compile HighOrderTopology code ; > in Flexible based on whether the HighOrderTopology plugin is existing ; > or not (in cmakelists package_require(HighOrderTopology) if ; > (HighOrderTopology_FOUND) ... ):; > - each plugin can live in its own repository; > - no need for a third plugin; > - should work whether all the plugins are compiled in the same cmake ; > build project or are compiled/installed separately (well ; > HighOrderTopology must be available when compiling Flexible); > ; > thomas; > ; > ----- Mail original -----; > ; > > De: ""Matthieu Nesme"" notifications@github.com; > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > ; > > Hi Hervé,; > > ; > > In general, I think it is a good idea to have a repo per plugin, ; > > even if it; > > becomes more difficult to update them when the sofa core is modified.; > > But in this specific case, it would be great to add this plugin to this; > > github repo, so Flexible can still benefit from your code.; > > ; > > Another solution, could be to add a third plugin in your independent; > > repository, that would link with both SOFA-HighOrderTopology and ; > > Flexible,; > > and that would contain the high order shape functions.; > > ; > > What do you think?; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub , or mute the thread .; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936, ; > or mute the thread ; > https://github.com/notifications/unsubscribe-auth/ASgmq2nsUCIg4ENi5a",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233:1357,update,update,1357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233,1,['update'],['update']
Deployability," ```cpp; int BatchGUI::mainLoop(); {; if (groot); { ; bool infiniteLoop = (nbIter == -1);. if (infiniteLoop); { ; msg_info(""BatchGUI"") << ""Computing "" << nbIter << "" iterations."" << msgendl;; }; else; {; msg_info(""BatchGUI"") << ""Computing infinite iterations."" << msgendl;; }. sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; msg_info(""BatchGUI"") << sofa::helper::AdvancedTimer::end(""Animate"", groot.get()) << msgendl;; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());; sofa::simulation::Visitor::ctime_t rtfreq = sofa::helper::system::thread::CTime::getRefTicksPerSec();; sofa::simulation::Visitor::ctime_t tfreq = sofa::helper::system::thread::CTime::getTicksPerSec();; sofa::simulation::Visitor::ctime_t rt = sofa::helper::system::thread::CTime::getRefTime();; sofa::simulation::Visitor::ctime_t t = sofa::helper::system::thread::CTime::getFastTime();. signed int i = 2; // one simulation step is animated above; while(infiniteLoop || i <= nbIter); {; sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());. if(infiniteLoop && i % 1000 == 0 || i == nbIter); {; t = sofa::helper::system::thread::CTime::getFastTime()-t;; rt = sofa::helper::system::thread::CTime::getRefTime()-rt;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)t)/((double)tfreq) << "" s ( "" << (((double)tfreq)*i)/((double)t) << "" FPS)."" << msgendl;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)rt)/((double)rtfreq) << "" s ( "" << (((double)rtfreq)*i)/((double)rt) << "" FPS)."" << msgendl; ; ; if(infiniteLoop); {; msg_info(""BatchGUI"") << ""Press Ctrl + C (linux)/ Command + period (mac) to stop "" << msgendl;; }; }. i++;; }; }; return 0;; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378645175:1416,update,updateVisual,1416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378645175,1,['update'],['updateVisual']
Deployability," be optionally compiled.; > ; > Is this still on the radar ?; > ; > Hervé; > ; > Le 05/10/2016 à 15:27, thomas-lemaire a écrit :; > ; > > yet an other option is to conditionnaly compile HighOrderTopology code; > > in Flexible based on whether the HighOrderTopology plugin is existing; > > or not (in cmakelists package_require(HighOrderTopology) if; > > (HighOrderTopology_FOUND) ... ):; > > - each plugin can live in its own repository; > > - no need for a third plugin; > > - should work whether all the plugins are compiled in the same cmake; > > build project or are compiled/installed separately (well; > > HighOrderTopology must be available when compiling Flexible); > > ; > > thomas; > > ; > > ----- Mail original -----; > > ; > > > De: ""Matthieu Nesme"" notifications@github.com; > > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > > ; > > > Hi Hervé,; > > > ; > > > In general, I think it is a good idea to have a repo per plugin,; > > > even if it; > > > becomes more difficult to update them when the sofa core is modified.; > > > But in this specific case, it would be great to add this plugin to this; > > > github repo, so Flexible can still benefit from your code.; > > > ; > > > Another solution, could be to add a third plugin in your independent; > > > repository, that would link with both SOFA-HighOrderTopology and; > > > Flexible,; > > > and that would contain the high order shape functions.; > > > ; > > > What do you think?; > > > ; > > > —; > > > You are receiving this because you are subscribed to this thread.; > > > Reply to this email directly, view it on GitHub , or mute the thread .; > > ; > > —; > > You are receiving this because you authored the thread.; > > Reply to this email directly, view it on GitHub; > > https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936,; > > or mute the thread; > > https://github.com/notif",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225:2081,update,update,2081,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225,1,['update'],['update']
Deployability," load all the available plugins. Loading a library in the process memory will have several side effects which are difficult to anticipate before hand. The major one is the evaluation of all the global variables, which will result in populating the `ObjectFactory` with all the components that this library contains. I would suggest something different for this kind of having a list of default plugins that are loaded directly with your application ( here `runSofa` ). - derive a sort of sofa plugin manifest file, which can be generated as a post-build step. This should be an easy to parse file which could contain the various informations exposed by the `getModuleName()`, `getModuleVersion()`... without having to load the library in the process memory. This manifest file must be stored in an easy to find location in your build tree, an be installed properly ( they need also to be bundled when you deploy your application ). That means they should be located with a similar relative path with respect to the application ( `runSofa` ) when in the build tree or in the install tree. There should be a proposal about that to define : ; - the manifest file type ( ie how are we going to parse it ? json xml text ? ); - the manifest file content itself. - any application could then define the list of predefined plugin it wants to load using a simple configuration file. A default configuration can be provided, but it could be easily overriden. With this mechanism, no recompilation is required when you want to change the list of default plugins, you just change the config file. NB : a bit unrelated but there is a small code ""snippet"" that can be used to recover all the components attached to a library in two lines ; ```cpp; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin; static std::string classes = sofa::core::ObjectFactory::getInstance()->listClassesFromTarget(sofa_tostring(SOFA_TARGET));; return classes.c_str();; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188:1422,install,install,1422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188,3,"['configurat', 'install']","['configuration', 'install']"
Deployability, plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Releas,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3994,Release,Release,3994,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability," to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [TriangularFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.Spring""/> <!-- Needed to use components [TriangularBendingSprings] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TriangleSetGeometryAlgorithms TriangleSetTopologyContainer TriangleSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Quad2TriangleTopologicalMapping] -->; <RequiredPlugin name=""Sofa.GL.Component.Rendering3D""/> <!-- Needed to use components [OglModel] -->; <RequiredPlugin name=""SofaDistanceGrid""/> <!-- Needed to use components [RigidDistanceGridCollisionModel] -->; <DefaultPipeline name=""pipeline"" depth=""6"" verbose=""0"" />. <LCPConstraintSolver maxIt=""1000"" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear so",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:2238,pipeline,pipeline,2238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838,1,['pipeline'],['pipeline']
Deployability,![image](https://acegif.com/wp-content/gifs/non-25.gif). file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-install/plugins/SceneCreator/lib.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1154#issuecomment-534740462:132,install,install,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1154#issuecomment-534740462,1,['install'],['install']
Deployability,"## Execute the latest runSofa on a Windows host (working but pretty slow). Taken from https://dev.to/darksmile92/run-gui-app-in-linux-docker-container-on-windows-host-4kde ; and https://medium.com/@potatowagon/how-to-use-gui-apps-in-linux-docker-container-from-windows-host-485d3e1c64a3. First of all, install [VcXsrv Windows X Server](https://sourceforge.net/projects/vcxsrv/). Here we use [Chocolatey](https://chocolatey.org/) but it's not mandatory.; ```powershell; choco install vcxsrv; ```; Once installation is done, run XLaunch from start menu and make sure to activate the option ""Disable access control"". Then, get your IP with `ipconfig`. Finally, in a PowerShell terminal; ```powershell; docker run --rm --user ""sofa:sofa"" -e DISPLAY=your_IP_goes_here:0.0 -t sofaframework/sofa_nightly_ubuntu:master-standard runSofa; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2485#issuecomment-1175016532:302,install,install,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2485#issuecomment-1175016532,3,['install'],"['install', 'installation']"
Deployability,"#1515 will be imminently merged, this will require to update this one",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1551#issuecomment-712369166:54,update,update,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1551#issuecomment-712369166,1,['update'],['update']
Deployability,"& navigate in the inclusion graph.: ; https://htmlpreview.github.io/?https://raw.githubusercontent.com/SofaDefrost/sofa/reduceInclude2/include_master_2017_12_18.html. It was suggested by @guparan that we could aggregate the files around their cmake ""components"" so we could identify easily the ""strengh"" (the amount of .h) between the cmake package. Then from this graph views, actions can be to guide the refactoring. ; Eg: ; 1) remove the includes that are not mandatory to make the graph more sparse (there is very easy cases that can be done during coding sprint). ; 2) when there is cycle in the graph, serious refactoring may be needed because this indicate it is not possible to properly make package out of it (this happens in Helper & DefaultType). ; 3) for the elements in the graph that are included only few time this means it is very easy to put them into ""external"" plugins without breaking a lot of code. . I practiced 1) in https://github.com/SofaDefrost/sofa/tree/reduceInclude2; I practiced 2) in https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel; I practiced 3) in several of our pluginization's PR. What I found very hard is to make that in coordinated way and in a smooth enough way not to kill anyone's projects. On the existing code base:; - make PR that unify the way to declare namespace/include guards so refactoring with string replacement instead of manually patching the code base would be faciliated.; - make PR to reduce the include's graph pressure (this will ease to cut the code into packages); - make more PR to deprecates components ; - put as real plugin the leaves of the dependency graph (starting with the leaves is easier because it indicate that only a small part of our code base needs to be updated). ; - find an agreement on the resulting structure.; - find an agreement on the amount of change and understand how this will impact third party code and code history. ; - find an agreement on the process to actually make the changes. ...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-372626690:1510,patch,patching,1510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-372626690,2,"['patch', 'update']","['patching', 'updated']"
Deployability,"&nbsp; - is DEPRECATED (so still usable) since `deprecateDate`; &nbsp;&nbsp;&nbsp; - will be removed on `removeDate`; and gives the toFixMsg instructions to fix the deprecation warning.; ; `SOFA_ATTRIBUTE_DISABLED(deprecateDate, disableDate, toFixMsg)`; To be used jointly with `= delete` to trigger an error. It is a flavored `[[deprecated]]` interface.; Warns that something ; &nbsp;&nbsp;&nbsp; - is DISABLED (so not usable anymore) since `disabledDate`; &nbsp;&nbsp;&nbsp; - was firstly deprecated on `deprecateDate`; and gives the toFixMsg instructions to fix the compilation error. ## How to use them. Create a new deprecation macro specifying the deprecation topic you are tackling.; This way, you won't have dates everywhere in your code. ## Example. ### Deprecate. I want to rename something that will break my API. ; To ease the transition for my users, I will propose a deprecation period with a fine message by using a deprecation macro.; Latest release is v20.06, next release (currently under development) is v20.12, after that will come the v21.06. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DEPRECATED( \; ""v20.12 (PR#12345)"", ""v21.06"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod();; ```. Anyone using myDeprecatedMethod will get this **warning**: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is still usable but has been DEPRECATED since v20.12 (PR#12345). You have until v21.06 to fix your code. XXX must be renamed into YYY.; ```. ### Disable. Now forward in time ...; Latest release is v20.12, next release (currently under development) is v21.06, after that will come the v21.12.; It is time to stop the deprecation period. To provide a clear message to my users, I will not just remove my deprecated method but I will disable it with `= delete` and use a deprecation macro. In my config.h.in; ```cpp; #define SOFA_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249:1287,release,release,1287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249,1,['release'],['release']
Deployability,(WARNING) When merged this PR will requires to install ninja on the build VM and force a full-build of all the branches (to force the regeneration of the build directory).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/154#issuecomment-275648244:47,install,install,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/154#issuecomment-275648244,1,['install'],['install']
Deployability,) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 39.40 89.65 53.81 3.72 53810.7 100 TOTAL; 1 0 1 39.40 89.63 53.81 3.72 53.81 99.99 .Simulation::animate; 2 0.01 1 0 0.02 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.02 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.07 0 0 0 0 ..collision; 2 0.02 1 0 0 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.06 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.02 0 0 0 0.01 ..accumulateMatrixDeriv; 2 0.04 1 39.17 89.35 53.58 3.72 53.58 99.57 ..solve; 3 0.04 1 39.17 89.34 53.57 3.72 53.57 99.56 ...Mechanical; 4 0.07 1 2.11 3.55 2.36 0.14 2.36 4.38 ....ComputeForce; 4 2.42 1 1.14 3.35 1.30 0.18 1.30 2.41 ....ComputeRHTerm; 4 3.72 1 33.78 68.54 35.78 1.50 35.78 66.50 ....MBKBuild; 5 3.73 1 33.77 68.51 35.78 1.50 35.78 66.48 .....CG-setSystemMBKMatrix; 6 3.73 1 0.03 0.14 0.04 0.01 0.04 0.07 ......getContributors; 6 3.77 1 0.02 0.21 0.02 0.01 0.02 0.04 ......buildMappingGraph; 6 3.79 1 0.26 1.60 0.70 0.10 0.70 1.29 ......InitializeSystem; 7 3.79 1 0.09 1.18 0.36 0.06 0.36 0.67 .......resizeSystem; 7 4.16 1 0.01 0.69 0.30 0.04 0.30 0.56 .......clearSystem; 7 4.46 1 0.02 0.17 0.02 0.01 0.02 0.05 .......initializeLocalMatrices; 6 4.49 1 33.12 68.12 35.01 1.48 35.01 65.06 ......AssembleSystem; 7 4.49 1 33.09 47.99 34.95 1.13 34.95 64.95 .......buildMatrices; 8 4.49 1 32.71 47.75 34.52 1.10 34.52 64.16 ........buildStiffness; 8 39.02 1 0.23 1.13 0.41 0.08 0.41 0.77 ........buildMass; 8 39.43 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 39.44 1 0 0.02 0 0 0 0 ........buildGeometricStiffness; 7 39.44 1 0 0 0 0 0 0 .......projectMappedMatrices; 7 39.44 1 0.02 20.12 0.05 0.63 0.05 0.09 .......applyProjectiveConstraint; 4 39.51 1 0.85 21.84 14.06 3.56 14.06 26.13 ....MBKSolve; 5 39.83 1 0.51 21.43 13.67 3.56 13.67 25.41 .....CG-Solve; 4 53.57 1 0.02 0.07 0.02 0 0.02 0.05 ....UpdateVAndX; ```. Thanks for having tried!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:4460,Update,UpdateVAndX,4460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532,1,['Update'],['UpdateVAndX']
Deployability,"**Update**; It was working before on Windows because we already have a user defined `FindEigen3.cmake` in sofa/cmake (on which I did some modifications not so long ago :facepalm:, sometime I have the memory of a red fish). The problem I had was probably because this `FindEigen3.cmake` isn't installed alongside SOFA, so if an external plugin links against SOFA, it will hit the `find_package(Eigen3 REQUIRED)` inside our ***Config.cmake and will fail to find it. @guparan Do you think we should install the `FindEigen3.cmake` (like CGAL is doing)?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-628708251:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-628708251,3,"['Update', 'install']","['Update', 'install', 'installed']"
Deployability,**WARNING**: I just saw that your PR is against a release (v17.06). This cannot be merged directly in v17.06 as some extra steps need to be done during a backport. Please re-create it against **master** and I will flag it to be backported in v17.06.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/444#issuecomment-334514286:50,release,release,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/444#issuecomment-334514286,1,['release'],['release']
Deployability,**WARNING**: I rebased your branch. Your local copy will need an update.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/220#issuecomment-289719027:65,update,update,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/220#issuecomment-289719027,1,['update'],['update']
Deployability,"**[ci-depends-on]** detected during [build #59](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1961/59/). . To unlock the merge button, you must; - **Edit SofaPython3/ExternalProjectConfig.cmake.in** with; GIT_REPOSITORY https://github.com/guparan/SofaPython3; GIT_TAG origin/updateDoc",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-833694387:287,update,updateDoc,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-833694387,1,['update'],['updateDoc']
Deployability,"**[generate-binaries]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [windows_vs2017_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2740#issuecomment-1059394556:289,release,release,289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2740#issuecomment-1059394556,4,['release'],['release']
Deployability,"**[generate-binaries]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115120821:286,release,release,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115120821,3,['release'],['release']
Deployability,"**[generate-binaries]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [windows_vs2017_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115875591:286,release,release,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115875591,4,['release'],['release']
Deployability,"**[generate-binaries]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115104205:286,release,release,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115104205,3,['release'],['release']
Deployability,"**[generate-binaries]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115909914:286,release,release,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115909914,3,['release'],['release']
Deployability,"**https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-850/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/2/** warnings4Result/package.-377079774/. \+ . see BUILD_URL/**artifact/parent_dir/build/scene-tests/examples/Components/constraint/FixedLMConstraint.scn/output.txt**. =. https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-850/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/2//artifact/parent_dir/build/scene-tests/examples/Components/forcefield/JointSpringForceField.scn/output.txt",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/850#issuecomment-446541019:116,release,release,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/850#issuecomment-446541019,2,['release'],['release']
Deployability,+1. . We probably simply need to install the autodump trick somewhere in Sofa_test.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/149#issuecomment-276515093:33,install,install,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/149#issuecomment-276515093,1,['install'],['install']
Deployability,", ""mo""}, {""src"", ""@grid""}}).get(); );; createObject(root, ""TetrahedronSetTopologyContainer"", {{""name"", ""topology""}});; createObject(root, ""TetrahedronSetTopologyModifier"");; createObject(root, ""TetrahedronSetGeometryAlgorithms"");; createObject(root, ""Hexa2TetraTopologicalMapping"", {{""input"", ""@grid""}, {""output"", ""@topology""}});; auto sofa_mass = dynamic_cast<sofa::component::mass::MeshMatrixMass<sofa::defaulttype::Vec3Types, sofa::defaulttype::Vec3Types::Real> *> (; createObject(root, ""MeshMatrixMass"", {{""name"", ""sofa_mass""}, {""topology"", ""@topology""}, {""massDensity"", ""2""}, {""lumping"", ""false""}}).get(); );; auto sofa_mass_diagonal = dynamic_cast<sofa::component::mass::MeshMatrixMass<sofa::defaulttype::Vec3Types, sofa::defaulttype::Vec3Types::Real> *> (; createObject(root, ""MeshMatrixMass"", {{""name"", ""sofa_mass_diagonal""}, {""topology"", ""@topology""}, {""massDensity"", ""2""}, {""lumping"", ""true""}}).get(); ); ; getSimulation()->init(root.get());. // Get residual vectors; DataVecDeriv d_f (VecDeriv(mo->getSize(), {0, 0, 0}));; DataVecDeriv d_f_dia (VecDeriv(mo->getSize(), {0, 0, 0}));. sofa_mass->addForce(&mechanical_parameters, d_f_sofa, mo->x, mo->v);; sofa_mass_diagonal->addForce(&mechanical_parameters, d_f_sofa_dia, mo->x, mo->v);. // Map residual vectors with Eigen to facilitate norm computations; Eigen::Map<const Eigen::Matrix<Real, Eigen::Dynamic, 3, Eigen::RowMajor>> f ((d_f.getValue().data()->data()), mo->getSize(), 3);; Eigen::Map<const Eigen::Matrix<Real, Eigen::Dynamic, 3, Eigen::RowMajor>> f_dia ((d_f_dia.getValue().data()->data()), mo->getSize(), 3);. // Compare the norms; EXPECT_DOUBLE_EQ(f.norm(), f_dia.norm());; }; ```. > Maybe the used topology doesn't have edges?. An edge topology should not change anything here. We are integrating the mass density times g over the volumetric domain (tetra). If you are adding edges, then you are integrating a second time the region of an edge (the edge is a part of the tetra's volume). Let me know if something isn't clear.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2301#issuecomment-901856585:2768,integrat,integrating,2768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2301#issuecomment-901856585,2,['integrat'],['integrating']
Deployability,",. I just had a look in the code and the associated paper ([link](https://hal.inria.fr/file/index/docid/394480/filename/NPF05.pdf)). @alxbilger, there are two `computeStress` methods in TriangularFEMForceField, with the following signatures :; ```; void computeStress(type::Vec<3,Real> &stress, Index elementIndex);; ```; and; ```; void computeStress(type::Vec<3,Real> &stress, const MaterialStiffness &K, const type::Vec<3,Real> &strain);; ```; Only the first one seems to use the same pattern as in `computeForce` (with the call to `computeStrainDisplacement` conditioned by `_anisotropicMaterial`), in case of small deformation, which is - as you pointed out - incoherent with what is in `computeForce`.; However this `computeStress` method with this signature is apparently used only in ; ```; void computeStressAlongDirection(Real &stress_along_dir, Index elementIndex, const Coord &direction);; ```; which itself is used only in both `computeStressAcrossDirection` methods, and (finally) these are apparently not called anywhere.; So, _bottomline_: even though the code in `computeStress` is incoherent with the code in `computeForce`, it's actually not used and - I guess - should be cleaned rather than made coherent. Regarding the initial issue, what I understand from the paper is that the strain-displacement matrix **should be updated at each time step** in case of large deformations. It seems to be clearly stated in the introduction, and demonstrated later in the text (section 2.3). I have a doubt if this is necessary in case of small displacement (for me the paper focuses on large deformation), but even in this case, the current implementation is not coherent (the update should be made in case of large displacement and could be saved in case of small displacement).; I think it's worth highlighting that it was actually the case at first, but it seems to have been changed in this [commit](https://github.com/sofa-framework/sofa/commit/b7d68ef394f703957e7a00037f88d7abeed82d24).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2706#issuecomment-1056847653:1344,update,updated,1344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2706#issuecomment-1056847653,2,['update'],"['update', 'updated']"
Deployability,",. May was quite quiet for our beloved NG project.; Don't worry, I still have some news for you :wink:. ## Discussions. Pluginization works are possible but they have to be done in-place (not moving the files). This will permit to simplify the dependencies between SOFA modules. . About the NG branch, to avoid big divergence, we propose to merge it with master as soon as some big step is done. The next big step is SofaFramework coverage. ## Bootstrapping scripts. Previously named SPM, the [bootstrapping scripts](https://github.com/guparan/sofa2ng) are now able to handle test folders. ## Process. Here is the process to cover one module:; 1. Create/update a recipe based on an existing one.; 2. Run the bootstrapping scripts with the recipe.; 3. Inspect the output; 4. If something is wrong or missing, edit the bootstrapping scripts and *goto 1*; 5. Do specific changes by hand like namespace aliases; 6. Create a patch of all changes made by hand; 7. Open a pull-request providing the recipe and the patch (previously pushed to sofa2ng). This process will be rewritten in Sofa.Helper.Bvh pull-request. ## Sofa.Component.Utils. The first NG pull-request has been merged to the NG branch. There is still some updates to do though, because the bootstrapping scripts changed. ## Sofa.Helper.Bvh. The recipe has been updated. ; This work will be the base of further contributions. I will detail all the bootstrapping + patching process in the pull-request. ## Next steps; - Pluginize without moving files: use plugins mechanism to work on modules dependencies ; Start with the less dependent ones and progress towards SOFA core.; Objective: simplify dependencies between modules.; - Validate Damien's architecture proposal for SofaFramework: https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel/Sofa; Particularly about Sofa.Helper.Types; - Create Sofa.Helper.Bvh pull-request; Will give a clear example and all the process to refactor parts of SofaFramework; - Progress within Sofa.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223:1035,patch,patch,1035,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223,1,['patch'],['patch']
Deployability,-----; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3557,install,install,3557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,". You have to take the whole picture into consideration, everyone is not using serialization/deserialization as ""pairs"". The actual default serialization format is used in a lot of other software (GUIs, scene processing tools written in python, perl and C++). If you change the behavior of the default serialization mechanism all of them will stop working and required to be updated. This is a very, very, very nasty thing to impose to other users of Sofa. A PR doing has no changes to be accepted. . Actually tests is part of our guard line because they validates the API compatibility and allow us to detect changes that breaks it. The existing tests should be considered as validating the ""the existing"" sofa API. It was normal to have them to fail on your PR because it shows that the PR was breaking the compatibility. . I really like the idea of keeping the old serialization behavior as it is and add the other deserialization as an extra feature. This will make the whole PR transparent for users that don't want to update their code base. It thus it can be merged very quickly. . About the test: ; You are right that it would be better if we had test specific tests to validate the serialization alone.; I personally would like to have tests to validate that getValueString() return ""1 2 3"" and that getValueAsPythonString() return ""[1 2 3]"" . And also as you said having tests to validate against the real values instead of their serialization would be nice. . . About the branches:; The rule is to never work directly on the sofa-framework repository. There is no reason to do so (if you really want to make two PR one in anatoscope and one in sofa ... you need to to that from two branches located in the anatoscope repo). Otherwise this consume a lot of disk space on the CI servers that we have to fix manually. Now fundamentally from my experience in playing with PR and branches I think that making two PR will be very complex for you to handle. Because the PR you issued to anatoscope",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626:1203,update,update,1203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626,1,['update'],['update']
Deployability,.. and [tag v22.06.01](https://github.com/sofa-framework/sofa/releases/tag/v22.06.01) created without binary release,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3518#issuecomment-1336961622:62,release,releases,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3518#issuecomment-1336961622,2,['release'],"['release', 'releases']"
Deployability,"......getContributors; 6 3.94 1 0.02 0.17 0.02 0.01 0.02 0.03 ......buildMappingGraph; 6 3.96 1 0.25 2.56 0.72 0.17 0.72 0.98 ......InitializeSystem; 7 3.97 1 0.06 1.35 0.36 0.10 0.36 0.50 .......resizeSystem; 7 4.33 1 0.01 1.22 0.32 0.08 0.32 0.44 .......clearSystem; 7 4.65 1 0.02 0.27 0.03 0.01 0.03 0.04 .......initializeLocalMatrices; 6 4.68 1 33.38 71.55 36 2.08 36 49.49 ......AssembleSystem; 7 4.68 1 33.35 49.36 35.94 1.80 35.94 49.41 .......buildMatrices; 8 4.68 1 32.79 49.09 35.44 1.78 35.44 48.72 ........buildStiffness; 8 40.13 1 0.25 1.33 0.49 0.12 0.49 0.67 ........buildMass; 8 40.61 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 40.62 1 0 0.02 0 0 0 0 ........buildGeometricStiffness; 7 40.62 1 0 0.02 0 0 0 0 .......projectMappedMatrices; 7 40.63 1 0.02 22.18 0.05 0.70 0.05 0.07 .......applyProjectiveConstraint; 4 40.69 1 1.38 43.66 31.78 8.31 31.78 43.69 ....MBKSolve; 5 41.19 1 0.92 43.15 31.20 8.30 31.20 42.90 .....CG-Solve; 4 72.48 1 0.02 0.15 0.03 0.01 0.03 0.04 ....UpdateVAndX; ```. ```; ParallelCGLinearSolver template=""ParallelCompressedRowSparseMatrixMat3x3d"". [INFO] [BatchGUI] 1000 iterations done in 53.883 s ( 18.5587 FPS). Steps Duration Statistics (in ms) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 39.40 89.65 53.81 3.72 53810.7 100 TOTAL; 1 0 1 39.40 89.63 53.81 3.72 53.81 99.99 .Simulation::animate; 2 0.01 1 0 0.02 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.02 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.07 0 0 0 0 ..collision; 2 0.02 1 0 0 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.06 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.02 0 0 0 0.01 ..accumulateMatrixDeriv; 2 0.04 1 39.17 89.35 53.58 3.72 53.58 99.57 ..solve; 3 0.04 1 39.17 89.34 53.57 3.72 53.57 99.56 ...Mechanical; 4 0.07 1 2.11 3.55 2.36 0.14 2.36 4.38 ....ComputeForce; 4 2.42 1 1.14 3.35 1.30 0.18 1.30 2.41 ....ComputeRHTerm; 4 3.72 1 33.78",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:2304,Update,UpdateVAndX,2304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532,1,['Update'],['UpdateVAndX']
Deployability,".7/site-packages/openalea.tissuemeca-0.9.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/openalea.deploy-2.1.4-py2.7.egg'; ]; ```; From iPython:; ```; ['', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/bin', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python27.zip', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/plat-darwin', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/plat-mac', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/plat-mac/lib-scriptpackages', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-tk', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-old', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-dynload', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/OpenAlea.Core-1.3.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/OpenAlea.SConsX-2.1.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/cycler-0.10.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/openalea.tissuemeca-0.9.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/openalea.deploy-2.1.4-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/IPython/extensions', ; '/Users/oali/.ipython']; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347201178:3800,deploy,deploy-,3800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347201178,1,['deploy'],['deploy-']
Deployability,".Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10186,Release,Release,10186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1761,Release,Release,1761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6719,Release,Release,6719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7087,install,install,7087,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_co,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4517,install,install,4517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5535,install,install,5535,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManag,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5686,Release,Release,5686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"1 - Two PRs are preferable because you want to solve two radically different issues (DataEigen and the QWT Stuff); 2- As for QWT, instead of modifying directly the source by yourself, update directly the source in extlibs to 6.1.5 which seems to solve your problem of compilation. #1496 ; Link: https://sourceforge.net/projects/qwt/files/qwt/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-700120269:184,update,update,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-700120269,1,['update'],['update']
Deployability,2 regression tests are failing : ; - Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver; - Regression_test/StateRegression_test.sceneTest/EulerImplicitSolver. Could it be that the references of these 2 scenes are bogus themselves ? (thus needing to update them?),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873004315:265,update,update,265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873004315,1,['update'],['update']
Deployability,"3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) (DefaultPipeline.cpp:238); ==91659== by 0x4BBD0D6: sofa::simulation::PipelineImpl::computeCollisionDetection() (PipelineImpl.cpp:117); ==91659== by 0x4B68E62: sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) (CollisionVisitor.cpp:78); ==91659== by 0x4B690BC: runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::co. ```. Sounds like createOutputModel is a good first spot to look at as it allocate an output vector with new... and that this one is returned to finally be stored in a map (eg: line 50 in NarrowPhaseDection).... which is not deleted when destructing object.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:2219,Pipeline,PipelineImpl,2219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654,3,['Pipeline'],"['Pipeline', 'PipelineImpl']"
Deployability,"5 Octobre 2016 17:52:58; > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > ; > OK I agree that this allows to compile Flexible without the SOFA-HighOrder.; > ; > Before moving SOFA-HighOrder to the gitHub repo, do any of you know if; > there are plans to move those plugins outside of github ?; > ; > My understanding is that at some point SOFA was going to be cut into; > several pieces that could be optionally compiled.; > ; > Is this still on the radar ?; > ; > Hervé; > ; > Le 05/10/2016 à 15:27, thomas-lemaire a écrit :; > ; > > yet an other option is to conditionnaly compile HighOrderTopology code; > > in Flexible based on whether the HighOrderTopology plugin is existing; > > or not (in cmakelists package_require(HighOrderTopology) if; > > (HighOrderTopology_FOUND) ... ):; > > - each plugin can live in its own repository; > > - no need for a third plugin; > > - should work whether all the plugins are compiled in the same cmake; > > build project or are compiled/installed separately (well; > > HighOrderTopology must be available when compiling Flexible); > > ; > > thomas; > > ; > > ----- Mail original -----; > > ; > > > De: ""Matthieu Nesme"" notifications@github.com; > > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > > ; > > > Hi Hervé,; > > > ; > > > In general, I think it is a good idea to have a repo per plugin,; > > > even if it; > > > becomes more difficult to update them when the sofa core is modified.; > > > But in this specific case, it would be great to add this plugin to this; > > > github repo, so Flexible can still benefit from your code.; > > > ; > > > Another solution, could be to add a third plugin in your independent; > > > repository, that would link with both SOFA-HighOrderTopology and; > > > Flexible,; > > > and that would contain the high order shape functions.; > > > ; > > > What do you think?; > > > ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225:1543,install,installed,1543,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225,1,['install'],['installed']
Deployability,":doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #22 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::pro",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:34331,Pipeline,Pipeline,34331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,['Pipeline'],['Pipeline']
Deployability,"> ### Problem; > **Description** hello, I wanted to use Sofa 23.06.00 in M1 Mac Book Pro But I can not use Sofa. This error message indicates: (have 'x86_64', need 'arm64e' or 'arm64')) I'd like to know the solution. I want to use Sofa 23.06.00; > ; > **Steps to reproduce** < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >; > ; > 1. install anaconda and make virtual environment; > 2. install sofa framework; > 3. define the environment variables; > 4. import Sofa in python; > ; > **Expected behavior** < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >; > ; > Success importing Sofa in python without any error.; > ; > ### Environment; > **Context**; > ; > * System: Mac OS X 14.4.1 (23E224); > * Version of SOFA:[SOFA_v23.06.00_MacOS.zip](https://github.com/sofa-framework/sofa/releases/download/v23.06.00/SOFA_v23.06.00_MacOS.zip); > * State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >; > ; > **Command called**; > ; > ```; > (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; > Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; > [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> import Sofa; > ---------------------------------------; > Checking SOFA_ROOT and SOFAPYTHON3_ROOT; > Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > ---------------------------------------; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; > import Sofa.Helper; > ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudS",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179:335,install,install,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179,5,"['INSTALL', 'Install', 'install', 'release']","['INSTALL', 'Install', 'install', 'releases']"
Deployability,"> 1. We could probably rename the ""**EulerSolver.h**"" and ""**EulerSolver.cpp**"" files to ""**EulerExplicitSolver.h**"" and ""**EulerExplicitSolver.cpp**"" to follow the name of the class.; > ; > 2. Maybe we could factor the sympletic option as a new time integrator class? I think it would be much clearer to have, for example,; > ; > ; > ```; > <EulerExplicitSolver />; > <EulerImplicitSolver />; > <EulerSemiImplicitSolver />; > ```; > ; > and might speak to more people. I definitively agree with both your suggestions.; I also thought about your second suggestion, and it was my plan to talk about it during the next dev meeting. The problem I see is that `EulerExplicitSolver` is by default symplectic. So, applying your suggestion would change the ODE solver when the user write `<EulerExplicitSolver />`. Let's discuss it on Wednesday.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-855629658:251,integrat,integrator,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-855629658,1,['integrat'],['integrator']
Deployability,> ; > ; > 2 regression tests are failing :; > ; > * Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver; > ; > * Regression_test/StateRegression_test.sceneTest/EulerImplicitSolver; > ; > ; > Could it be that the references of these 2 scenes are bogus themselves ? (thus needing to update them?). yes probably as both scenes are using MeshMatrixMass. I'll try to check the values to see if it is a regression or a fix... 🤞,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873985742:296,update,update,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873985742,1,['update'],['update']
Deployability,"> ; > ; > Is this plugin not supported by the CI? It should have failed if it was. `-DPLUGIN_SENSABLE=OFF`. If I remember well, the OpenHaptics/Geomagic SDK is bothersome (I am polite 😇) to install (more so on the CI nodes)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2113#issuecomment-846414016:190,install,install,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2113#issuecomment-846414016,1,['install'],['install']
Deployability,"> > Did you try to compile with `SReal=float` ? 🙊; > ; > Nope, I don't like to hurt myself. I did 🤐 with a minimal configuration and it *compiles* well",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3915#issuecomment-1579638820:115,configurat,configuration,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3915#issuecomment-1579638820,1,['configurat'],['configuration']
Deployability,"> > However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?; > ; > This function should be very useful in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:; > ; > 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; > ; > 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; > ; > 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not...; > ; > ; > This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices.; > ; > Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?; > ; > CC: @hugtalbot , @ChristianDuriez , @fjourdes. Thanks @jnbrunet for having looked on this issue. I rephrase your findings as a list of tasks to improve SOFA efficiency and accuracy:. - [ ] Remove EulerExplicitSolver::d_optimizedForDiagonalMatrix and replace it by fetching the result of Mass::isDiagonal; - [ ] CentralDifferenceSolver must be adapted to work with any type of mass matrix; - [ ] Implicit solvers must read the result of Mass::isDiagonal to speed up computations in case mas",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001:207,integrat,integrator,207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001,1,['integrat'],['integrator']
Deployability,"> > So, as we discussed during the dev meeting. 2 modifications:; > > ```; > > 1. Indeed, Boost, MPFR and GMP are dependencies of CGAL library itself not of the SOFA-CGAL plugin. As those dependencies are correctly handled internally in CGAL, I removed all mention of those libraries in the config file of the plugin.; > > ; > > 2. There is already a .cmake at the root dir of CGAL so the findCGAL.cmake is not necessary. Sofa just need to know ${CGAL_DIR} path. And in fact on windows, when you install CGAL this env_variable is set. So it works straight forward.; > > ```; > > ; > > ; > > @guparan can you confirm this is now ok to go?; > ; > The _FindCGAL.cmake_ was there to avoid the need to manually set the `CGAL_DIR` variable when we install CGAL via `apt install libcgal-dev`.; > ; > IIRC, it did not work straight forward with ubuntu 18.08 and centos 7, and maybe not even with recent versions of those distributions. I'll check it later today if you want with Docker, but I believe this file was useful. Ok I see, maybe we could add a test on top of ""our FindCGAL"" checking if CGAL_DIR is known or not. @guparan could you give your feedback so we can converge on that PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611393910:496,install,install,496,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611393910,3,['install'],['install']
Deployability,"> > The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?; > ; > I don't understand. Your cmake change is mostly affecting the install process, which is not tested on the CI... so did you try to install your current build ? ( to be sure that the change does not incur any error)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063:27,install,install,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063,4,"['INSTALL', 'install']","['INSTALL', 'install']"
Deployability,"> > Update SofaMacros.cmake by setting the policy CMP0057 NEW for supporting the IN_LIST operator of if().; > ; > Thanks @olivier-goury! Which version of CMake do you have?; > Since this policy was introduced in 3.3 and SOFA required 3.12 minimum according to what I've seen in the main CMakeLists of sofa, I don't see how this can cause problems. Maybe the policy should be set elsewhere though, like in the main CMakeLists.txt? @guparan. I am on cmake version 3.16.3",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677722602:4,Update,Update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677722602,1,['Update'],['Update']
Deployability,"> > ```; > > 1. We could probably rename the ""**EulerSolver.h**"" and ""**EulerSolver.cpp**"" files to ""**EulerExplicitSolver.h**"" and ""**EulerExplicitSolver.cpp**"" to follow the name of the class.; > > ; > > 2. Maybe we could factor the sympletic option as a new time integrator class? I think it would be much clearer to have, for example,; > > ```; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ```; > > <EulerExplicitSolver />; > > <EulerImplicitSolver />; > > <EulerSemiImplicitSolver />; > > ```; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > and might speak to more people.; > ; > I definitively agree with both your suggestions.; > I also thought about your second suggestion, and it was my plan to talk about it during the next dev meeting. The problem I see is that `EulerExplicitSolver` is by default symplectic. So, applying your suggestion would change the ODE solver when the user write `<EulerExplicitSolver />`. Let's discuss it on Wednesday. Unfortunately, I'm not sure I will be able to join this Wednesday and the next. Could we do something like this?. 1. If `EulerExplicitSolver` is used with default parameters or with explicit `sympletic=True`, then warn the user that he should use `EulerSemiImplicitSolver` instead, and create this new component automatically for him (this is the part where I'm not sure it's feasible..); 2. Else, the user manually specified `sympletic=False`, warn him that this option no longer exists and that he can remove it from its scene file.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-855748841:266,integrat,integrator,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-855748841,1,['integrat'],['integrator']
Deployability,> > ```c++; > > sofa::core::sptr<BaseObject>; > > ```; > ; > `sofa::core::sptr<BaseObject>` is not much longer than `BaseObjectSPtr` and have to advantage of avoiding an alias :-). This is exactly what I was thinking before actually having to do a full replacement of simulation::Node::SPtr on the whole code base. The replacement requires some care to handle correctly the namespace variations everywhere in the code base ; sofa::simulation::Node::SPtr; simulation::Node::SPtr; Node::SPtr ; I found that a mass replacement from Node::SPtr to NodeSPtr was easier to deploy (and revert) massively.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769784026:566,deploy,deploy,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769784026,1,['deploy'],['deploy']
Deployability,"> @epernod it means the function `updateOnResize()` is called at init? I fear that if we delete all DOFs during a simulation, when we add new DOFs again, `d_vertexMass` is set to zero therefore: `d_totalMass.setValue(Real(newSize) * Real(d_vertexMass.getValue()));`; > ; > the total mass will always remain null. yes that is why I remove the d_vertexMax setValue(0). If you know you will add/remove dofs, you should rely on the d_vertexMax which doesn't change inside the code.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721224696:34,update,updateOnResize,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721224696,1,['update'],['updateOnResize']
Deployability,"> @fredroy Can you have a look on the Windows build? Something made it fail. There is no problem on WIndows, the report on github is pointing to a bad build (`#3` instead of `#4`); -> https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2728/4/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2728#issuecomment-1050839798:301,release,release,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2728#issuecomment-1050839798,1,['release'],['release']
Deployability,"> @fredroy you labelled this PR as to backport. However, it leads to compilation error due to another PR which is only in master and not v23.06 :; > ; > ```; > BarycentricMapper.inl:33:19: error: 'sofa::component::mapping::linear::_barycentricmapper_::BarycentricMapper<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >::MatrixType' {aka 'class sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3, 3, double> >'} has no member named 'wblock'; did you mean 'wbloc'?; > ```; > ; > I will have to remove the commit from v23.06. No worries, this warning only ""makes sense"" with v23.12 and the integration of the CRSM anyway",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749:751,integrat,integration,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749,1,['integrat'],['integration']
Deployability,"> @olivier-roussel thanks for the conda test and the feedbacks 👍 You should have made suggestions and/or make a PR on my branch, as I cannot credit you your patches 😵. Indeed, sorry about that",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923345776:157,patch,patches,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923345776,1,['patch'],['patches']
Deployability,"> Any interest to keep newmat ? I remember a discussion during a sofadevmeeting with @jnbrunet saying that we should remove the usage of newmat. Especially because it seems this library is really old and not maintained anymore.; > http://robertnz.net/nm_intro.htm; > Latest update seems to be 2008 for newmat11 (beta)... Good point. I just saw an opportunity to easily benefit from the type-parameterized tests that I introduced for `BaseMatrix`. An option is to remove it, but it could also be moved into an external plugin. Let's discuss it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2311#issuecomment-909026838:274,update,update,274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2311#issuecomment-909026838,1,['update'],['update']
Deployability,"> Any news @nhnhan92 ?; > Note that for my remark on the header, having your project name if fine for us. What matters for us is to have first the SOFA header (LGPL) up in the file. Would this be possible?; > Let me thank you again for this nice contribution. Hi @hugtalbot,; Sorry for late response. I have recently been in the middle of some work (related to this project). Therefore, there is no progress so far, however, I plan to add the addKtoMatrix module to the FF and also try to improve coding stuffs (will be updated as soon as possible). On the other hand, I have discussed with my team member and advisor about the header. We agree with your above suggestion, but I just wonder is it possible for this FF to appear in both the SOFA source code (in the future) and our own under-developing plugin? we are not familiar with this procedure, sorry for that; If it is okay, please write the name of the contributor as:; JST/PRESTO Project: TouchIoT-Smart Tangible Sensing Enabler for Tactile Internet (Developer: Nhan Nguyen Huu); One last thing, from the previous comment, you mentioned the test. Could you please be more specific about the test? do you want to test the reliability of the FF (like coding, mathematical model, etc.)? We definitely want to certify that.; Thank you for your and SOFA team effort to review our work.; Best regards,; Nhan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-780500969:520,update,updated,520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-780500969,1,['update'],['updated']
Deployability,"> Build failure on Ubuntu is weird. Seems related to CGAL but I'm not even sure. Can you check this @hugtalbot ? https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2935/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/6/console. The system probably killed the compilation because it took too many resources. Restart the compilation could maybe make it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123785530:224,release,release,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123785530,1,['release'],['release']
Deployability,"> Could you give us more precisions regarding the need to change from enums to strings for the integration methods?. Two reasons motivated the use of strings : ; 1) Right now when specifying the type of numerical integration method in python or xml scripts the user had to use for instance numericalIntegrationMethod=""3"" which is not descriptive at all. It is preferable to use numericalIntegrationMethod=""Tetrahedron Gauss"" for the maintenance of the code. Using OptionsGroup could solve this issue I believe. 2) Inheritance. In the plugin ""SofaHighOrder"" I specify new types of numerical integration methods on triangles. While the APi allows to add a new method, the enum class cannot be extended ( I can use a number like 4 but this creates warnings and is not satisfactory). Therefore using a string class is more versatile. . > **If** the goal is to simplify the conversion from the string (passed in XML / Python scenes) to the C++ enums, wouldn't it be best to take advangate of the OptionsGroup datatype already present in SOFA?. This would not solve the inheritance problem as the type of numerical integration methods can be exhaustively listed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-466958911:95,integrat,integration,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-466958911,4,['integrat'],['integration']
Deployability,"> Does the CIs need to be updated with the new variable names?. I think the CI does not really set any GUI/Qt cmake variables.; In any case, as there is no forwarding from the new var to the old deprecated var, it should be yes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2974#issuecomment-1135319702:26,update,updated,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2974#issuecomment-1135319702,1,['update'],['updated']
Deployability,"> From what I see it would not affect the way to use it (scenes) Should the `<RequiredPlugin name=""SofaMiscExtra""/>` in the example scene(s) should also be modified?. Yes but some other scenes too (e.g those with the engines as the script from @alxbilger was executed before the engine PR was merged). So I would say we should update the scenes/run the sceneUpdater once after the SofaNG PRs have been merged.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2917#issuecomment-1117001607:327,update,update,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2917#issuecomment-1117001607,1,['update'],['update']
Deployability,"> Have you checked @alxbilger that it is well unused in InSimo ISSOFA released by @fjourdes ?. I just checked, and the file does not exist on the repository.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1994#issuecomment-816455035:70,release,released,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1994#issuecomment-816455035,1,['release'],['released']
Deployability,"> Have you checked then in the code that no access to vertexMass is done in any other function without checking the ""newSize"" ? @epernod. sorry I'm not sure to understand the point. I'm modifying the method `updateMassOnResize` which is a callback called when the number of dof has changed. From my understanding the VertexMass value should not change when the number of dof change, only the totalMass. if we need to add more check in all method to check the size, this means the callback mechanism is useless no? and if it is.. what about us @hugtalbot 😆 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1726442647:208,update,updateMassOnResize,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1726442647,1,['update'],['updateMassOnResize']
Deployability,"> Hello @ScheiklP ,; > ; > thank you for this PR. Two points:; > ; > 1. Could you explain why you have 2x the index 5 in your example?; > Is it because you are using several collision models and the index 5 is added twice from the carvingManager?; > ; > In the case of segfault, is it because the indice 5 is still to be removed but your vertex buffer last index is now 4 ?. Hi @epernod ,; The collision pipeline correctly detected collisions between index 5 on the LineCollisionModel and all indices on the SphereCollisionModels. In the other removeElement functions, the indices are put into a set to filter duplicates. In the first commit for the new features this was not the case -> 5 was in the indices list multiple times.; The new commit filters out the duplicates.; It should also quite a bit faster, because it does not need to create a set.; Just one sort at creation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1238183338:404,pipeline,pipeline,404,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1238183338,1,['pipeline'],['pipeline']
Deployability,"> Hello @alxbilger,; > ; > Thanks for the PR, removing that ""verbose"" looks fine to. As a deprecation worklfow I recommand:; > ; > * deprecate the data field (as done in the PR); > * updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ?. I agree but in the case of this PR, the Data `d_verbose` was really not used at all. So no need to do anything.; > * in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"". Yes, I will do it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205:183,update,updates,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205,1,['update'],['updates']
Deployability,"> Hello @epernod,; > ; > thank for the PR. I strongly support moving toward removing deprecated stuff in our code base (what is done in the PR); > ; > Maybe we could just keep the old deprecated name with something like:; > ; > ```; > class Base {; > [[""this is deprecated...don't use it as it does not work any more...to update your code see the migration documentation in PR#1358""]]; > DeprecatedAndRemoved m_componentstate; ; > }; > ```; > ; > Existing code will stop compiling forcing anyone to update but ppl will be able to understand easily what to do. Hi, @damienmarchal ; I was going to do what you suggested, but while reading again your comment I realized I don't remember what we said or I didn't really get it.; In this PR there are 2 potential breaking changes:. - The upper case letter S of the Data: . ```; Data< sofa::core::objectmodel::ComponentState > d_componentstate; ; into ; Data< sofa::core::objectmodel::ComponentState > d_componentState; ; ```. - And I uncomment the line [[ deprecated ... for the m_componentstate.; ```; [[deprecated(""m_componentstate was renamed to d_componentState. Please upgrade your code"")]]; Data< sofa::core::objectmodel::ComponentState >& m_componentstate{d_componentState}; ///< the object state; ```. For which one do you want to add what you suggested? And just to be sure, the idea is to create a class ""DeprecatedAndRemoved"" that does nothing so you can declare the variable but compilation will failed when using it in the code and you put a [[deprecated(""..."" above ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-634984287:322,update,update,322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-634984287,3,"['update', 'upgrade']","['update', 'upgrade']"
Deployability,"> Hey @alxbilger , thanks for this benchmark.; > ; > My guest would be that solving one big system (the merge of both objects) is slower than solving to smaller system.; > ; > However, solving two system independently should, I think, produce incorrect results as; > ; > 1. You are applying the interactions (for example, contact forces) at different solving states. For example, the first object is solved, its node positions are updated to the step t+1. Collisions are then computed. But the state of the second object is still at the time step t. Oscillation will therefore probably happen and the convergence will be delayed.; > ; > 2. In addition, the solution state with both objects merged under the same system takes into account the interaction between the two objects. For example, when both objects are merged into a same system, you can create entries inside the system matrix to create a relationship between a node in the first object and a node in the second object. This is not possible when the two objects are separated.; > ; > ; > **TLDR**: Solving two objects independently is faster than solving one big system containing both objects. However it will take longer to converge to a steady solution (in number of steps), and even probably converge to an incorrect solution. Thank you for this explanation. It makes more sense. If I understood correctly, the group manager would help the performances compared to a single system. Here, we compare to two systems (one per cube). I'll add a third scene in this benchmark with a single system, to be more rigorous. I expect the same result from ""single system"" and ""two systems + group manager"". I expect better performances only in case the two cubes are not in contact, am I right?. Can we say that the best practice would be to start the design of a simulation scene with a single system, without group manager? And if performances are poor, it can be improved with a group manager, knowing its drawbacks (such as hiding a selection ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842964385:431,update,updated,431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842964385,1,['update'],['updated']
Deployability,"> Hey @marques-bruno,; > ; > I think the idea was to have a collection of ""DDGLinks"" seen as one data. For example:; > ; > ```; > // Inputs; > DDGLink<MechanicalObject> d_mechanical_object; // One mechanical object; > DDGLinks<BaseForceField> d_forcefields; // Multiple forcefields acting on the MO; > DDGLink<BaseMass> d_mass; // One mass acting on the MO; > ; > // Outputs; > Data<VecCoord> d_solution;; > ```; > ; > Here we want to update the solution vector if either the MO, one of the forcefields, or the mass has changed. Hi @jnbrunet, that's another issue right? This PR proposes to get some sort of ""bidirectionality"" in the Data Links without breaking the ""acyclicity"" of the DDG.; I guess it would not be a problem to overload DDGLink<T> to handle a vector of links of the same type instead of a single link of type T. Just to understand a bit better: your example code would be the kind of code one would find in an ode solver for instance, right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1228#issuecomment-561199342:435,update,update,435,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1228#issuecomment-561199342,1,['update'],['update']
Deployability,"> Heyy @fredroy Yes, you got it correctly. I am trying to read a haptic device written in py2.7 into sofapython controller in SOFA. And thanks for your advice, I just tried **run as admin** when execute the runSofa.exe, and it just does not work. So usually the SofaPython could be compatible with other python packages installed from pip, right? . Hum it should be (it has been a long time I did not use the python2 plugin that I am not 100% sure). > I think I will try to debug into my python drivers and for now I am going to run these two python processes at the same time(1. a normal python console and 2. a sofapython one), and probably let the 1. console write into a .np array and let the 2. process read continuously read the array to pass the msg from haptic device. Will it work in sense of real-time property in your opinios? @fredroy Or do you have a better idea about such temporal solution. Thanks any way !!!. Hum I dont think it will work unfortunately, at least for the real-time aspect. Writting in a console is very time-consuming so the whole process `serialize -> write in a console -> read the console -> deserialize` will be too slow in my opinion.; The other `least bad way` IMO ( because directly getting the value from the device would be much better 🙃) would be to pipe or open a comm channel between the two processes either RPC or TCP/IP or unix pipes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068117938:320,install,installed,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068117938,2,"['continuous', 'install']","['continuously', 'installed']"
Deployability,"> Hi @ScheiklP; > ; > Thanks for the PR.; > ; > The SphereCollisionModel works historically without a topology (relying on the mstate). The tests are failing due to the absence of a PointSetTopology. What could be done is to change the warning into an info saying that no topology is found therefore no topological change will be supported. What do you think?; > ; > Another change in order to make the component topologically robust would be to make the data `radius` as a PointData:; > ; > ```c++; > Data< VecReal > radius; ///< Radius of each sphere; > ```; > ; > should become; > ; > ```c++; > PointData< Real > radius; ///< Radius of each sphere; > ```; > ; > (connected to a topology handler). Hi @Hugo,; the `SphereCollisionModel` are in a node together with an `EdgeSetTopologyContainer` that is now also correctly found and bound to `l_topology` and `m_topology`. . Is there something else to do, to correctly connect it to `m_mstate`?. Or maybe `updateFromTopology()` should do more than it does now? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597:956,update,updateFromTopology,956,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597,1,['update'],['updateFromTopology']
Deployability,"> Hi @marques-bruno wasn't it merging the #1407 into this one (#1408) ?; > ; > My notes on this PR were: Rebase #1407 in #1408.; > SetValue on componentState should not be required: bool parse() calls getValue on the m_repositoryPath, which in turn will call the updateCallback, which itself sets the component State. Thus setting it again would be useless.; > fileMesh to remove. That's what's been done here no? Both 1406 & 1407 are merged into this PR (see branch diffs), the parsing code has been updated in AddResourceRepository & fileMesh has been removed.; To me this should be flagged ready, as soon as @epernod validates",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643959920:263,update,updateCallback,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643959920,2,['update'],"['updateCallback', 'updated']"
Deployability,"> Hi @marques-bruno,; > ; > Thanks for this very interesting PR that is going into the right direction. Sadly the breaking part is not fun. Let's see how other will react. Agreed..; To give you some context, initially my intent was to only add a init_position / init_size, to remove the bidirectionality of this component's position / size datafields.; Basically, the rule of thumb with SOFA components should be to NEVER EVER use a datafield both as an input and an output of the component (modified by the component AND linked to a parent data for isntance). The problem is that keeping the previous behavior of the component and having the new datafields that work the right way created an asymetry in the updates that created weird logic in the callbacks. So while I'm at it I decided to go all in and refactor the whole thing with the good behavior.; I don't see how to add depreciation messages or how to handle previous behavior. If anyone has an idea, I'm all ears :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1489#issuecomment-695967930:709,update,updates,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1489#issuecomment-695967930,1,['update'],['updates']
Deployability,"> Hi,; > it seems linked to qtWebEngine, could you check in the version of Qt5 you installed (manually or using distrib packages) that QtWebEngine is installed. I build the QT5.15.2 from source manually. However, how could I check whether I have built it right? The whole process seems correct.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2253#issuecomment-881986212:83,install,installed,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2253#issuecomment-881986212,2,['install'],['installed']
Deployability,"> However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. This function should be very useful in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:. 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not... This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices. Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?. CC: @hugtalbot , @ChristianDuriez , @fjourdes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-797326125:199,integrat,integrator,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-797326125,1,['integrat'],['integrator']
Deployability,"> Hum sorry in fact FEMBAR-SVDLinearSolver.scn seems to time out: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2422/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/3/SceneTestCrashes/; > ; > https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2422/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/3/artifact/parent_dir/build/scene-tests/archive/examples/Components/linearsolver/FEMBAR-SVDLinearSolver.scn/output.txt; > ; > could you double check before merging. @epernod yes it makes sense as this solver is super slow. I'll change the number of iterations for this scene. Thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2422#issuecomment-949348641:178,release,release,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2422#issuecomment-949348641,2,['release'],['release']
Deployability,"> I confirm that having a `MeshTopology` solves the issues. @epernod You call it a workaround. Does it mean I should not do that for some reasons?. MeshTopology -> static containers in the sense, not possible to change it during simulation, XXSetTopologyContainer have lot of methods to update their content.; But if I remember well, they are both using vector",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590846893:287,update,update,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590846893,1,['update'],['update']
Deployability,"> I think from a user perspective it is easier to understand names like ""PyScriptableComponent"" or even ""PyComponent"", because that is what they are: components, just like any other in Sofa, with Datas, Inputs and Outputs and a certain behavior. This is not really correct actually:; The pythonScriptController is not really a component (i.e a Sofa class inheriting BaseObject) as it possesses extra features, such as the possibility to create the scene graph from scratch, send events to other controllers etc. It is not a purely simple 1to1 binding of its C++ methods in Python. In that way, I agree with you that calling it a PyController makes more sense than to call it a PyBaseObject for instance, or pyComponent, since it does more.; The current PSDE is actually as far from a Std sofa component (core::objectmodel::BaseObject) as the PythonScriptController: the PSDE is much closer in terms of behaviour to that of Sofa's DataEngine components: the key difference is that DataEngines, contrary to BaseObjects, is a call for action on the modification of one of its input datafield. The update method is not present in a BaseObject or in a PythonScriptController. In that way it completely mimics the behavior of the DataEngines in Sofa. Hence my suggestion :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406605755:1094,update,update,1094,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406605755,1,['update'],['update']
Deployability,"> I was wondering if there is a way to catch the missing symbols at compile-time and I found this: https://cmake.org/cmake/help/latest/module/CheckCXXSymbolExists.html#module:CheckCXXSymbolExists. It's configuration time but it could be helpful. I tried to play with it but I was not able to make it work. I added the check in the `sofa_create_package_with_targets` macro. It could be interesting to enforce that the necessary symbols are defined at configure-time yes 🤔 . EDIT: I did some tests and it is quite bothersome to set up, (the file itself needs to be compilable, the symbol need to be defined and not only declared, adding variable in cache, etc) And I think if we do that for all potential loadable libraries, it will slow down considerably the cmake configure process.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1915860120:202,configurat,configuration,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1915860120,1,['configurat'],['configuration']
Deployability,"> I' ve updated the SDK `Selecting Windows SDK version 10.0.22621.0 to target Windows 10.0.22631.` and v22.12 successfully compiled .; > ; > As a the last resort, you may; > ; > * update everything (MSVC/SDK); > * delete the build folder; > ; > and try again. thank！vs2022 default use windows11 sdk, and i change windows 10 sdk,; it's OKKK",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835619193:8,update,updated,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835619193,2,['update'],"['update', 'updated']"
Deployability,"> Is it built by the CI?. see https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2792/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/1/consoleFull; ```; -DAPPLICATION_GETDEPRECATEDCOMPONENTS=ON; -DAPPLICATION_REGRESSION_TEST=OFF; -DAPPLICATION_RUNSOFAGLFW=ON; -DAPPLICATION_SOFAPHYSICSAPI=ON; ```; Nope.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2792#issuecomment-1076222146:141,release,release,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2792#issuecomment-1076222146,1,['release'],['release']
Deployability,"> It seems to be coming from a setup/system/configuration error than something related to SOFA itself, as the error is coming from the Windows SDK itself. Which version of MS Visual Studio are you using ?. i use vs 2022(Windows SDK version 10.0.22621.0 to target Windows 10.0.19045 MSVC 19.37.32822.0)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835503584:44,configurat,configuration,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835503584,1,['configurat'],['configuration']
Deployability,"> It's really not a big feature. Granted, it's not *that* big, but still:; - you need to properly initialize/finalize sofa and core modules (see Main.cpp in the runSofa application); - you need to handle the case where the loaded scene already has python scripts, and let the `PythonEnvironment` know the interpreter is being run from the outside when initializing (and maybe deal with all the `sys.path` / `__file__` abuses down there); - probably have a good fight with the GIL down the road; - how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes? (I would probably put your feature in a module separate from `Sofa` for this reason); - what happens when `Sofa.cleanup()` gets called but python objects still hold c++ objects that are to be destructed when python exits ?. But I am really all for it, so good luck with that :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339347741:521,integrat,integrate,521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339347741,1,['integrat'],['integrate']
Deployability,> My hero! It was so frustrating to use cmake on SOFA (on Windows). Thanks a lot!; > ; > Could you tell me how you profile the cmake configuration?. https://github.com/sofa-framework/sofa/issues/1838 🥳,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277266711:133,configurat,configuration,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277266711,1,['configurat'],['configuration']
Deployability,"> Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`. Will be a very funny task to do. . EDIT: CTRL+F on 'getValue()[' shows +1000 hits.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619:18,pipeline,pipeline,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619,1,['pipeline'],['pipeline']
Deployability,"> Of course the PR will be breaking and we will need to update our code base. But this is all for the good.; > ; > Clearly congratulation @SofaFramework for such high quality management of software evolution.; > ; > So if I understand correctly, this will be merge into master the day after the official release of v22.06 right ?. It should be breaking for some yes (the ones who did not do the change of the things flagged deprecated the last version and marked removed now, like the use of sout/serr/sendl); But it should be merged just before releasing actually, now is the code of v22.06",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174746402:56,update,update,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174746402,2,"['release', 'update']","['release', 'update']"
Deployability,"> One unit test failling : https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4494/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/2/testReport/UnitTests.Sofa_Component/Topology_InciseProcessor_test/InciseTriangles/. Unit test references have been changed. The new version is more accurate.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1951953396:138,release,release,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1951953396,1,['release'],['release']
Deployability,"> Several points here:; > ; > * this PR might be breaking for plugin compilation (including move of files). No it is not. The only change that could be called ""breaking"" is the renaming of the CMake options to enable/disable libraries and modules. However, those options keep the same default behavior so it will only affect people who build their own SOFA with custom options. New option names are very close to old option name so it's pretty easy to do the transition. . > ; > * this PR changes the way we organize / name the code (which is good!); > ; > ; > It would be therefore nice to rediscuss it with you both @guparan and @fredroy to all agree on the organization and merge it, but a question comes: does this seem realistic to merge it before the release?. Yes because having everything called PLUGIN_* is a nightmare.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200963331:757,release,release,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200963331,1,['release'],['release']
Deployability,"> So, as we discussed during the dev meeting. 2 modifications:; > ; > 1. Indeed, Boost, MPFR and GMP are dependencies of CGAL library itself not of the SOFA-CGAL plugin. As those dependencies are correctly handled internally in CGAL, I removed all mention of those libraries in the config file of the plugin.; > ; > 2. There is already a .cmake at the root dir of CGAL so the findCGAL.cmake is not necessary. Sofa just need to know ${CGAL_DIR} path. And in fact on windows, when you install CGAL this env_variable is set. So it works straight forward.; > ; > ; > @guparan can you confirm this is now ok to go?. The *FindCGAL.cmake* was there to avoid the need to manually set the `CGAL_DIR` variable when we install CGAL via `apt install libcgal-dev`. IIRC, it did not work straight forward with ubuntu 18.08 and centos 7, and maybe not even with recent versions of those distributions. I'll check it later today if you want with Docker, but I believe this file was useful.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-610910985:483,install,install,483,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-610910985,3,['install'],['install']
Deployability,"> SquareDistanceMapping test fails with the introduced test : https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4897/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/1/testReport/. See #4891",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288281667:173,release,release,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288281667,1,['release'],['release']
Deployability,"> Thank you @ziqiu-zeng for the PR, I can see I did some mistake in the compat files grimacing; > ; > > Enable compilation with cuda plugins: SofaAsyncSolvers, SofaCUDALDI, SofaCUDASolvers, SofaCUDADev Please also update the plugins; > ; > Unfortunately, these plugins are private plugins from the mimesis team so we cannot access/fix/update them thinking. Hello,. I have fixed the bugs in these private plugins.; What I mean is that the users of these plugins should pull the modifications.; Sorry for the misunderstanding, I will edit the commit message.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2883#issuecomment-1102767377:214,update,update,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2883#issuecomment-1102767377,2,['update'],['update']
Deployability,"> Thank you. I have successfully run it on my laptop (MAC M2 chip with qt5). I have modified both `.bashrc` and `.zshrc` with define the `Qt5_DIR` but it does not change the value in `cmake-gui`. Thus, I modified the `QT5_DIR` in `cmake-gui` directly and it plays well. Before that, it has a small error, like `Imported target ""tinyxml"" includes non-existent path` I deleted the default one in `/usr/local/lib` and modified the `TinyXML_DIR` with the path installed by `homebrew`.; > ; > Anyway, Thanks a lot. <img alt=""sofa"" width=""1099"" src=""https://user-images.githubusercontent.com/56861752/210767352-6f43621e-1559-40da-a15d-cd28a18945ca.png"">; have you been able to run sofa python",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-2254330043:456,install,installed,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-2254330043,1,['install'],['installed']
Deployability,"> Thanks @marques-bruno ! Could you confirm that your clang-format file complies with [the astyle configuration](https://github.com/sofa-framework/sofa/blob/master/tools/astyle/sofa.astyle)?. Almost... I went through each of the options in the style sheet to make sure, but:; * *--indent-labels*: this is not supported by clang-format. This astyle option indents C-style labels (goto labels) as if it were a normal instruction in its scope. clang-format offers an option `IndentGotoLabels` but it will either align it with the root of its scope (true,) or align them at the first column in the file. for more info on this option:; [StackOverflow post](https://stackoverflow.com/a/66511380/1376968). But to me, it seems like a bad idea to indent labels the way astyle does. clang-format's makes more sense to me. * *--add-braces*: This one is more problematic: clang-format supports this option since its latest version (clang-format-15.0.0), BUT, here's what they say in the doc:. _**Warning**_. _**Setting this option to true could lead to incorrect code formatting due to clang-format’s lack of complete semantic information. As such, extra care should be taken to review code changes made by this option.**_. Linter tools, like clang-tidy, let you do that also...; Most importantly, clang-format's default package version on ubuntu is v10.0.0. v12 can be found in ubuntu's default package manager, but for v15 you gotta look for the package in external repos or compile it yourself. So I'd rather leave this option out, and keep it more as a general guideline in SOFA's documentation. Other than that my last commit updated the file to adopt the other astyle options :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2884#issuecomment-1103726034:98,configurat,configuration,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2884#issuecomment-1103726034,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"> Thanks @sergeiNikolaev for this contribution and making this nice effort of bringing back this work.; > ; > * Is any test available with these new classes?; > * is there any example scene?. @hugtalbot; Here is the test to verify polynomial springs (Python2 scripts). [polynomial_spring_test.zip](https://github.com/sofa-framework/sofa/files/4540453/polynomial_spring_test.zip). The test ""spring_verification.py"" depicts two points (p1, p2) connected with a spring. One point (p1) is fixed, another (p2) is moving in space. The external impact (f_external) to the system could be applied using LinearForceField (you need to make target_force as a Data<> object in order to collect its information, but I have this modification) or ControlPoint (third point (p_control), attached with a linear rest shape spring). In case of a second option, the external force is computed as (p_control - p2)*k_rest_shape_spring.; During the simulation process, the position ""p2"" and forces ""f2"" for point p2, and also the external force or the position of the control point are saved to data files.; The script ""spring_verification_draw_result.py"" loads all data. The strain for spring is computed as ; (norm(p2-p1) - l0) / l0 for PolynomialSpring or as norm(p2-p1) / l0 for RestShapePolynomialSpring.; I use static solver with many iterations to make spring force equal to external force, but I guess it is also possible to compute the spring force as difference f2 - f_external.; Based on this data, a force-strain relation is plotted and compared with polynomial values.; And this is the end of the test. NOTE: Please, keep in mind, that configuration parameters have to be the same for both scripts, in order to get a valid result.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-620055719:1626,configurat,configuration,1626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-620055719,1,['configurat'],['configuration']
Deployability,"> Thanks again for this nice contribution @nhnhan92; > Sorry I had prepared many similar feedback as @epernod so, some might be duplicated.; > ; > A more general remark, could you point us out the documentation you used to write this code please?; > Do you have an idea of when you would plan to consider rotations around the z axis?; > I also noticed in this paper typical tests for testing accuracy: https://sci-hub.se/10.1007/s00366-020-00974-4 it would be great to get a similar test for the continuous integration!; > ; > If this is too much questions, we can discuss about this live if you'd like. Dear, @hugtalbot,; Thank you for kind supports from you and @epernod. First, I implemented this FF mostly based on two following references:; 1. Book: ""Structural Analysis with the Finite Element Method, Linear static, Vol. 2, chapter 8""; 2. And the most recent paper of our group: https://ieeexplore.ieee.org/document/9247533; On the other hand, at this stage, this FF fairly meets our expectations for the current project. I definitely want to improve it in the near future. However, FEM is not my field (I am basically an end-user) and I have been in the middle of something else, therefore, It is gonna take time for me to be able to complete it. I would love to cooperate with SOFA team to complete it.; I'm sorry, but I'm quite unsure when you said rotation around z-axis (normal axis of the element?). Do you mean the consideration of rotating element around its normal axis? (i.e., co-rotational LARGE method (am I right?)). Right now, my priority is to take the rest two rotation dofs of a node (location rotations of around x and y direction) because, at this moment, I assumed they are zeros. But, so far, I have no idea how to include them; Finally, if it is necessary, I am willing to have a face-to-face discussion as long as I am available. Thank you ; Best,; Nhan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773702816:496,continuous,continuous,496,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773702816,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"> The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?. I don't understand",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1268330146:25,install,install,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1268330146,2,"['INSTALL', 'install']","['INSTALL', 'install']"
Deployability,"> The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI. Maybe it is random, it does not crash on mine (but I only tried like 2, 3 times) on msvc; Nevertheless, I dont think this scene is working as intended anyway.... (the particules do not interact with the static mesh)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421:154,release,release,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421,1,['release'],['release']
Deployability,"> The question is: does [VideoRecorderFFMPEG need FFMPEG_exec](https://github.com/sofa-framework/sofa/blob/master/SofaKernel/framework/sofa/helper/CMakeLists.txt#L308-L311)?. Yes it does, because, watch out.... [SofaKernel/framework/sofa/helper/gl/VideoRecorderFFMPEG.cpp](https://github.com/sofa-framework/sofa/blob/ef4114de87ccb97ad6792f553419644b5e77eb98/SofaKernel/framework/sofa/helper/gl/VideoRecorderFFMPEG.cpp#L97); ```; std::stringstream ss;; ss << FFMPEG_EXEC_FILE; << "" -r "" << m_framerate; << "" -f rawvideo -pix_fmt rgba ""; << "" -s "" << m_ffmpegWidth << ""x"" << m_ffmpegHeight; << "" -i - -threads 0 -y""; << "" -preset fast ""; << "" -pix_fmt "" << codec // yuv420p "" // "" yuv444p ""; << "" -crf 17 ""; << "" -vf vflip ""; << ""\"""" << m_filename << ""\""""; // @TODO C++14 : replace with std::quoted; ```. Yes, `FFMPEG_EXEC_FILE` is hard-coded and defined by . `add_definitions( ""-DFFMPEG_EXEC_FILE=\""${FFMPEG_EXEC_FILE}\"""" )` in [findFFMPEG_exec.cmake](https://github.com/sofa-framework/sofa/blob/ef4114de87ccb97ad6792f553419644b5e77eb98/cmake/Modules/FindFFMPEG_exec.cmake#L18). Which means that don't you ever package Sofa with FFMPEG support. If the user who installs your package has its ffmpeg elsewhere, everything will collapse.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540041015:1160,install,installs,1160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540041015,1,['install'],['installs']
Deployability,"> The right syntax is the following:; > ; > ```c++; > const auto visualHaptionDOFSPtr = sofa::core::objectmodel::New<sofa::component::statecontainer::MechanicalObject<sofa::defaulttype::Rigid3dTypes>>();; > visualHaptionDOF = visualHaptionDOFSPtr.get();; > nodeHaptionVisual->addObject(visualHaptionDOFSPtr);; > visualHaptionDOF->name.setValue(""rigidDOF"");; > ```; > ; > Note that this plugin has not been maintained for a long time. You should expect some changes in order to make it work. Here are some changes I made today to fix the configuration: #4338. But it does not fix the compilation.; > ; > If you succeed to make it work, a pull request would be very welcome ;). We are in the process of adapting the sofa22.12 plugin for homebrew devices, with reference to the Haptic plugin. No problem of course, I'll commit our code as soon as it's aligned and tested.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1841943965:537,configurat,configuration,537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1841943965,1,['configurat'],['configuration']
Deployability,"> This change makes all tests using the ConstantForceField fail due to a bug in SingleStateAccessor solved in #4917 . To solve the tests, merge #4917 first and rebase. Then, the PR should be fine. #4917 has been integrated (not rebased due to anterior conflicts) and there are still errors because of ; `No input force has been set. Please define one of both Data: forces or totalForce` 🥲. I guess there is an error of logics (if, else, etc) somewhere",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4918#issuecomment-2297674122:212,integrat,integrated,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4918#issuecomment-2297674122,1,['integrat'],['integrated']
Deployability,"> This is breaking, right @fredroy ?. Breaking in term of user configuration, yes ; as the cmake option names changed 🫤",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2974#issuecomment-1143218000:63,configurat,configuration,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2974#issuecomment-1143218000,1,['configurat'],['configuration']
Deployability,"> Update SofaMacros.cmake by setting the policy CMP0057 NEW for supporting the IN_LIST operator of if().; > . Thanks @olivier-goury! Which version of CMake do you have?; Since this policy was introduced in 3.3 and SOFA required 3.12 minimum according to what I've seen in the main CMakeLists of sofa, I don't see how this can cause problems. Maybe the policy should be set elsewhere though, like in the main CMakeLists.txt? @guparan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677718305:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677718305,1,['Update'],['Update']
Deployability,"> Updates: I just tried it once more, the caduceus scene now works well for me, I can pick the snake using the mouse with bilaterial now. I will switch to my branch and test it with my scene file now. Ah that is good to know 👍 Keep us in touch !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976821950:2,Update,Updates,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976821950,1,['Update'],['Updates']
Deployability,"> You described the usual workflow, but in this case it was not respected. The features should have been disabled in v22.06.; Before the release we discussed during a sofadevmeeting that it was not wise to disable the features at release time. The final agreement was on the ""timing"" of action (before or after the release) and not about the conformance to the three step workflow (deprecate-disable-remove) we have. . A lot of people don't read warning(deprecation) messages and only fix their code base when it does not compile I think we should stick to the workflow.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441:137,release,release,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441,3,['release'],['release']
Deployability,"> You may add a consistency check if the given path is actually a dir when it is supposed to be. I'm ok with the rest of the code. I've updated the code to check for path types according to isDirectory.; I also propagated the mechanism to DataFileNameVectors (if one of the paths in the vector is not of the right type, I simply set it to """". Dunno if thats the right way but it seems right)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1407#issuecomment-639434209:136,update,updated,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1407#issuecomment-639434209,1,['update'],['updated']
Deployability,"> `Actually, I dont even know if anybody uses the GUI with the docker installation ` why so?; > don't we need the gui for the sofa? how did we launch sofa then?. Just a thought, as for me, I use docker to build SOFA but I execute the resulting compilation into the bare-metal system (out of docker)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315549538:70,install,installation,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315549538,1,['install'],['installation']
Deployability,"> any update on the #2870 @epernod ?. @hugtalbot now that #2869 has been merged, you can review the #2870, then this one will be the following...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1110916133:6,update,update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1110916133,1,['update'],['update']
Deployability,"> few CUDA scenes are failing, all with the messages `[ERROR] [CGLinearSolver(cGLinearSolver1)] Required data ""threshold"" has not been set. (Current value is 1e-05)` so I suppose these scenes must be updated too. @fredroy ok I did not catch them. Thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949364341:200,update,updated,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949364341,1,['update'],['updated']
Deployability,"> move generic addUpdateCallback inside MeshLoader parent class.; > ; > * position; > ; > * normals; > ; > * edges; > ; > * triangles; > ; > * quads; > etc.. see Data declared in MeshLoader. Hi @epernod ! After reviewing my code a bit more, I now remember why MeshLoader doesn't contain a ""generic"" update callback: there's no ""load"" method in MeshLoader, only a set of datafield definitions, then used by other components subclassing it. thus a callback function would not be able to perform any loading operation on input changes. I agree that it is sub-optimal to have to add a specific callback for each meshLoaders (although they have custom behaviors anyway) but as-is I don't see how to better the current system. Ideally, we could imagine having a pure virtual ""load"" method overridden in the subclasses, which would then be callable from a callbackEngine, but that would probably go out of the scope of this PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643164248:299,update,update,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643164248,1,['update'],['update']
Deployability,"> not possible to use a git submodule? or another mechanism to not store the lib internally in the repo ?. I agree !. Edit: even better, give the user the choice to use its own eigen install, like Qt.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-510035069:183,install,install,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-510035069,1,['install'],['install']
Deployability,"> shift + left click. Yes I did hold shift down all the time (and I have been using the bilaterial constraints with no issues in sofa v19.12.) . In my case the pink small square shows the same as in your screenshot, however the snake doesn't follow the mouse (such that two pink squares have large distance apart while i moving the mouse). Updates:; I just tried it once more, the caduceus scene now works well for me, I can pick the snake using the mouse with bilaterial now. I will switch to my branch and test it with my scene file now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976514790:340,Update,Updates,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976514790,1,['Update'],['Updates']
Deployability,"> we will switch to something close to c++17. Can't wait for this, let's hope MSVC 2019 will be released soon !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/908#issuecomment-458899387:96,release,released,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/908#issuecomment-458899387,1,['release'],['released']
Deployability,@BehnamBinesh can you update your pull-request ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/48#issuecomment-264161178:22,update,update,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/48#issuecomment-264161178,1,['update'],['update']
Deployability,"@ChristianDuriez ; One scene was crashing in SensableEmulation plugin : testOmniDriverEmu.scn ; I fixed it by adding the option : ```solveVelocityConstraintFirst=""true""```. I have no idea why actually! Could you give some insight?. I fixed some added warnings, let me know if this was normal:; Note that : ; - in GenericConstraintSolver.cpp line 368 : none of the function parameter (cParams, res1 and res2) were unused.; - in GenericConstraintCorrection.cpp line 277 : the complianceFactor is not used. What appears really necessary, is to have some documentation on this constraint pipeline. This could be a good task for the STC#5 don't you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-390153258:584,pipeline,pipeline,584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-390153258,1,['pipeline'],['pipeline']
Deployability,@ErwanDouaille could you check (very shortly) the API of argument parser in this PR please? we would like to integrate it in v17.12 release ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/468#issuecomment-353009270:109,integrat,integrate,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/468#issuecomment-353009270,2,"['integrat', 'release']","['integrate', 'release']"
Deployability,"@ErwanDouaille your remark makes sense. ; There are several points to be aware of:; - installing a X server on the slaves will take time; - it may destabilize the build slave (?) (disc space, unforeseen problem running a GUI server on a headless machine,...); - and I agree: if we do it, the next step should be to test all existing GUIs",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360786622:86,install,installing,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360786622,1,['install'],['installing']
Deployability,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... 🧐😅",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:325,release,release,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917,3,['release'],['release']
Deployability,"@EulalieCoevoet is right, changing parameter without warning is bad ; @hugtalbot it is very easy, there is two options. One consist in adding some test in the init() function of the component to detect if the data is set or not by the user and provide the adequate message. The other is to add a dedicated rules in the SceneChecker at the following of: ; ```cpp. void SceneCheckAPIChange::installDefaultChangeSets(); {; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""BoxStiffSpringForceField"" ); msg_warning(o) << ""BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'"" ;; }) ;; ```. @fredroy Eulalie also report that there was some changes in the way shaders are pass to components and that old working behavior stopped working without warnings so adding warning in the same way would be nice (@EulalieCoevoet).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/338#issuecomment-334521674:389,install,installDefaultChangeSets,389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/338#issuecomment-334521674,1,['install'],['installDefaultChangeSets']
Deployability,"@EulalieCoevoet there is an issue with the test, do you have time within the 7 upcoming days to have a look at it ? either the test needs to be updated, or the code to be fixed. Let us know if you don't ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-365541425:144,update,updated,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-365541425,1,['update'],['updated']
Deployability,@FabienPean any update on this ?; still an issue ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2#issuecomment-298850791:16,update,update,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2#issuecomment-298850791,1,['update'],['update']
Deployability,@ThomasGosse & @hugtalbot about the nameing of DistanceGrid. The easy path:; - don't rename DistanceGridComponent . Intermediate path:; - rename DistanceGridComponent to DistanceField . The hard path (probably in a future PR if we want to):; - your component should be named DistanceGrid; - remove the alias 'DistanceGrid' on DistanceGridCollisionModel ; - update all the Scenes to use DistanceGridCollisionModel; - add a rules in the SceneChecker (see recent PR about it) that warns that for sofa version < 17.12 DistanceGrid have been changed.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/354#issuecomment-322049145:357,update,update,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/354#issuecomment-322049145,1,['update'],['update']
Deployability,"@Younesssss do you think:; - you still need to have Data<EigenMatrix> ? (it was not clear in our last sofa devmeeting); - if yes, could be nice to integrate what @jnbrunet said",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-886477819:147,integrat,integrate,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-886477819,1,['integrat'],['integrate']
Deployability,"@adagolodjo , I drop the official version, and use the brew install qt@5. When I compile in the Cmake-GUI. ; ERROR OCCURS:; CMake Error at Sofa/GUI/Qt/CMakeLists.txt:28 (message):; Sofa.GUI.Qt: Could not find either Qt5 or Qt6.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008:60,install,install,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008,1,['install'],['install']
Deployability,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:781,Release,Release,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,3,"['Install', 'Release', 'install']","['Install', 'Release', 'install']"
Deployability,"@alxbilger . In addition to have very component not relying anymore on a dependency to opengl should be moved to a generic module. ; I would suggest having a layer of compatibility/deprecation (possibly build on top of the generic module) to to tell users that scenes like:; ```console; RequiredPlugin(""Sofa.GL.Component"") ; OglModel(); OglGrid() ; ```; Are still working but displays nice guidance on how to update to more or less something of that kind:; ```console; RequiredPlugin(""Sofa.Components.Visual"") ; VisualModel() ; VisualGrid() ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1184124812:409,update,update,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1184124812,1,['update'],['update']
Deployability,"@alxbilger thanks for the carefull review, I integrated the requested changes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2976#issuecomment-1149852334:45,integrat,integrated,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2976#issuecomment-1149852334,1,['integrat'],['integrated']
Deployability,"@bakpaul I used your scene for benchmarks and updated the PR description accordingly. However, I don't observe the artefact your mention, even when going step by step.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640372331:46,update,updated,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640372331,1,['update'],['updated']
Deployability,"@bakpaul you were right, and it is fixed now in https://github.com/sofa-framework/sofa/pull/4138/commits/c349e111debbcb377c5bbb7ad68610c15f336c52. Here is my benchmark:. ```; CGLinearSolver template=""CompressedRowSparseMatrixMat3x3d"". [INFO] [BatchGUI] 1000 iterations done in 72.7944 s ( 13.7373 FPS). Steps Duration Statistics (in ms) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 40.29 110.35 72.73 8.91 72732.7 100 TOTAL; 1 0 1 40.29 110.32 72.73 8.91 72.73 100 .Simulation::animate; 2 0.01 1 0 0.07 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.03 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.02 0 0 0 0 ..collision; 2 0.03 1 0 0.03 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.07 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.03 0.01 0 0.01 0.01 ..accumulateMatrixDeriv; 2 0.04 1 40.07 109.99 72.48 8.91 72.48 99.65 ..solve; 3 0.04 1 40.07 109.98 72.47 8.90 72.47 99.65 ...Mechanical; 4 0.07 1 2.07 4.47 2.45 0.33 2.45 3.37 ....ComputeForce; 4 2.52 1 1.11 3.14 1.37 0.29 1.37 1.89 ....ComputeRHTerm; 4 3.89 1 34.04 71.94 36.80 2.11 36.80 50.60 ....MBKBuild; 5 3.90 1 34.03 71.91 36.79 2.11 36.79 50.58 .....CG-setSystemMBKMatrix; 6 3.90 1 0.03 0.21 0.04 0.01 0.04 0.05 ......getContributors; 6 3.94 1 0.02 0.17 0.02 0.01 0.02 0.03 ......buildMappingGraph; 6 3.96 1 0.25 2.56 0.72 0.17 0.72 0.98 ......InitializeSystem; 7 3.97 1 0.06 1.35 0.36 0.10 0.36 0.50 .......resizeSystem; 7 4.33 1 0.01 1.22 0.32 0.08 0.32 0.44 .......clearSystem; 7 4.65 1 0.02 0.27 0.03 0.01 0.03 0.04 .......initializeLocalMatrices; 6 4.68 1 33.38 71.55 36 2.08 36 49.49 ......AssembleSystem; 7 4.68 1 33.35 49.36 35.94 1.80 35.94 49.41 .......buildMatrices; 8 4.68 1 32.79 49.09 35.44 1.78 35.44 48.72 ........buildStiffness; 8 40.13 1 0.25 1.33 0.49 0.12 0.49 0.67 ........buildMass; 8 40.61 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 40.62 1 0 0.02 0 0 0 0 ........buildGeometri",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:591,Update,UpdateInternalDataVisitor,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532,1,['Update'],['UpdateInternalDataVisitor']
Deployability,@bcarrez there is an error with centos. Does all boost libraries are installed on it ? ; https://ci.inria.fr/sofa-ci/job/centos_clang-3.4_options/1807/console. Thanks for helping :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/513#issuecomment-346374716:69,install,installed,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/513#issuecomment-346374716,1,['install'],['installed']
Deployability,@courtecuisse maybe? interested in such an update?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1169738382:43,update,update,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1169738382,1,['update'],['update']
Deployability,"@damienmarchal , discussions during the SOFA-dev meeting lead to a question over the developed design and your opinion is needed. . The problem was that some scenes tests where crashing at exit. This is due to the SofaPython3 cache (`s_objectcache` there https://github.com/sofa-framework/SofaPython3/blob/1b5d271aa21df06c4c5ab75599e364adb0c1e9be/Plugin/src/SofaPython3/DataHelper.cpp#L252C1-L252C73) . The problem was that this is a static object containing python objects and is thus cleaned at the very end of the program exit, after the python interpreter, which is not authorized. . To fix it, following [pybind11 suggestions](https://pybind11.readthedocs.io/en/stable/advanced/misc.html) I've added a member to the module Sofa.Core that insured that the cleanup is called while the interpreter is still alive (see the PR https://github.com/sofa-framework/SofaPython3/pull/425). But is was not enough because the interpreter is not cleaned correctly either : the static method ""Release"" of SofaPython3, in charge of cleaning up python and deleting the interpreter was never called when launching scene in runSofa. . This lead to the need of cleaning up *explicitly* the plugin before exiting the main function. This design was not liked by every dev, some wanting a Raii-like cleanup, in the destructor of some member, which is in my mind not possible because the interpreter instance is static in the SofaPython3 plugin and thus we have no guaranty that it would not be deleted before any other static member.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216:983,Release,Release,983,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216,1,['Release'],['Release']
Deployability,"@damienmarchal : what you are asking is answered in the PR description, and in my comment above, explaining that now everyone will know if they need to update their code at compile-time, and decide what to do based on what I wrote. Anything else is needed ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311009550:152,update,update,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311009550,1,['update'],['update']
Deployability,"@damienmarchal @epernod, Taking @sescaida's comment into account, I tried to create an example showing the undesirable behavior related to the cleanDirty() call, unsuccessfully.; The comments for the sofa::core::DataEngine class in Sofa are very clear about the order in which the update() method should be implemented: first call update / getValue / updateIfDirty on your *inputs*, then call cleanDirty, then call setValue on your outputs. I have had issues in the past related to this specific cleanDirty() method, but for some reason I can't reproduce it. ; Does any of you understood the problem enough to create a small example causing the issue? I'll keep digging on my side.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-414978348:281,update,update,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-414978348,3,['update'],"['update', 'updateIfDirty']"
Deployability,@damienmarchal you closed and then reopened the PR: Should I change something or is it mergable?; Shouldn't this kind of API-Breaking PRs be merged only on punctual releases?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-315045191:165,release,releases,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-315045191,1,['release'],['releases']
Deployability,@damienmarchal your branch is protected. Please open it so that we can update and merge your PR; :pray:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1291711016:71,update,update,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1291711016,1,['update'],['update']
Deployability,"@damienmarchal, I move your comment here; __________________________________; To @guparan, @bcarrez, @fredroy we need to organize the merging process for efficient and smooth integration of the pending PRs. My suggestion is to now merge in row allow the pr:fix that have the pr:fast-merge ( #444 #443 #442 #436 #414 #422). There is also #423 which is a fatty one for which I don't know if we have to do it now or after the integration of the coding spring pr. . The planning I suggest is:; - integrate #444 #443 #442 #436 #414 #422 (so we have a version before deprecation); - integrate the deprecation PR; - integrate the pluginization PRs . Where to do #423 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-334467312:175,integrat,integration,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-334467312,5,['integrat'],"['integrate', 'integration']"
Deployability,"@epernod it means the function `updateOnResize()` is called at init?; I fear that if we delete all DOFs during a simulation, when we add new DOFs again, `d_vertexMass` is set to zero therefore:; `d_totalMass.setValue(Real(newSize) * Real(d_vertexMass.getValue()));`. the total mass will always remain null",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721208137:32,update,updateOnResize,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721208137,1,['update'],['updateOnResize']
Deployability,@epernod you integrated Guillaume's remark. @guparan fine for you? :traffic_light:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1359#issuecomment-631273444:13,integrat,integrated,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1359#issuecomment-631273444,1,['integrat'],['integrated']
Deployability,"@fjourdes if you have 2 sec, could you please give your feedback on the 2 lines change in the FreeAnimationLoop. ; It was done to fix a problem of position update between the mapped tool and the geomagic driver. See #1148 ; I don't have the knowledge to say if it is a real fix or if it will bring side effects. ; Thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1217#issuecomment-558076674:156,update,update,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1217#issuecomment-558076674,1,['update'],['update']
Deployability,@fredroy This is a very good question and definitely worth investigation. . To me this is related to a systematic problem we have regarding the mix between Data update through DDG or updates using toModel and fromModel. As far as can think about it is that BarycentricMapping should stop using the to and from model to compute barycentric topologies Maybe it should be refactored to be part of the Data depenency graph by adding few data field.; - control_rest_position // The vector of positions that are the control points of the interpolation space. ; - target_rest_position // The vector of positions that are embeded into interpolation space.; ; With these two it is clear that a change in the contrl_rest_position or target_rest_position should trigger the recomputation of barycentric coordinates.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1124734825:161,update,update,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1124734825,2,['update'],"['update', 'updates']"
Deployability,@fredroy thanks for the info... Here are the corresponding lines on windows: ; Adding Plugin CImgPlugin; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) . So we either need to install the imagemagick approach (I assume when CIMg cannot do something with a file it calls imagemagick) or to install the JPEG/TIFF libraries on windows/centos/macos. . I also wonder if CMakeLists.txt use conditionnal for JPEG why the tests are done unconditionally ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335465320:258,install,install,258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335465320,2,['install'],['install']
Deployability,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:168,release,releases,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833,7,"['install', 'release']","['install', 'releases']"
Deployability,"@fredroy what do you think about the feedback from @fjourdes and @JeremieA ? . This topic interests me because it is connected with a usability issue I would like to see solved one day. . Suppose you are using ""BeamAdapter"". After some time you stop using ""BeamAdapter"" and one year later you (or a collegue/successor) want to reload the scene. It will not work and the user has no idea why the scene is not working anymore (he forgot he is no compiling the plugin anymore). . There is no such problem when there is ```<RequirePlugin name=""BeamAdapter"" url=""http://www.experimental.com/BeamAdapter.html""/>``` but people forgot them too often because they are 'silently' loaded by runSofa. . In that view, the autoload system, by facilitating people not to write the ```<RequiredPlugin>``` does not seems very appealling to me making the situation worse. . This is why I suggest to add to add a mechanism that warns users each time a scene is loaded and this scene contains component based on either autoloaded (or loaded from a configuration file) plugins.; A gentle reminder like that would be great: ; ```; Warning(root): This scene is using components (Beam) from the plugin 'BeamAdapter' but ; the plugin is not indicated as required in your scene. ; Please fix your scene by cut&pasting the following line at the beggining. ; <RequiredPlugin name=""BeamAdapter"" url=""http://www.experimental.com/BeamAdapter.html""/> ; ```. To implement such warning we probably needs the kind of manifesto file @fjourdes is proposing.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-299312257:1028,configurat,configuration,1028,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-299312257,1,['configurat'],['configuration']
Deployability,"@fredroy, @guparan In this PR just wanted to have the exception message related with the Image_test. Here it is: ; ```; unknown file; C++ exception with description ""[instance(0,0,0,0,0x0,non-shared)] CImg<unsigned char>::load(): Failed to recognize format of file '/Users/sofa/jenkins/workspace/mac_clang-3.4_options/pr/all/applications/plugins/image/image_test/scenes/lena.jpg'."" thrown in the test body.; ```. Any idea why ? Could it be the image CImg library compiled without jpg support or something like that ? . EDIT: Ok I fixed this one...it is because ImageMagick is not install on some machine and thus CImg does not handle jpg. @guparan (I have installed ImageMagick on sofa-centos). . EDIT2: I updated the mac. I remember that CImg need to install external tool on windows. But don't remember which one...maybe it was imagemagick also. @guparan would you have some time to dig into that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335427052:580,install,install,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335427052,4,"['install', 'update']","['install', 'installed', 'updated']"
Deployability,@guparan & @fredroy ; I think I fixed the test failure problem on centos & ubuntu by removing the ; add_target_library( gtest ) in Sofa_test.; Don't ask me why it remove the failure at release I don't know ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-343492858:185,release,release,185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-343492858,1,['release'],['release']
Deployability,@guparan : I think it is fine to rebase with the updated issofa_constraint_solving branch. I believe the conflicts come from the `override` keyword that was added in many places in the code recently. ; The integration branch [fjourdes:insimo_freemotion_integration](https://github.com/fjourdes/sofa/tree/insimo_freemotion_integration) will still work if someone wants want to try.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-337902578:49,update,updated,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-337902578,2,"['integrat', 'update']","['integration', 'updated']"
Deployability,"@guparan ; You are right, this branch should be our integration branch with all contribution from the coding sprint and when we fell it ready we will merge it into master (but not right now). I made a PR just to see if the removale of SOFA_DECL and typedef's file was viable. . Maybe this integration branch could also contains the PR #414 #424 and #425 so that we don't have to much workload after the sprint.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/429#issuecomment-333511427:52,integrat,integration,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/429#issuecomment-333511427,2,['integrat'],['integration']
Deployability,"@guparan @epernod , I just tested the compilation again (without my patch) and I realized that SOFACUDA_DOUBLE has nothing to do with this issue, I was wrong about that. On my setup, the compilation does not works regardless of the SOFACUDA_DOUBLE option. I'm a bit surprized it works on your side. Here are information on my setup:; OS => Fedora 29; NVCC version => V10.1.105; CMake variable SOFACUDA_ARCH=sm_60; CMake variable CUDA_VERSION=10.1. And here are the output errors from ninja:. ```; [1/96] Building NVCC (Device) object applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o; FAILED: applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o ; cd /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda && /usr/bin/cmake -E make_directory /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/. && /usr/bin/cmake -D verbose:BOOL=OFF -D build_configuration:STRING=Release -D generated_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:68,patch,patch,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,1,['patch'],['patch']
Deployability,"@guparan @hugtalbot @damienmarchal I think it's ready for the 17.12 release, as an experimental feature.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-353428621:68,release,release,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-353428621,1,['release'],['release']
Deployability,"@guparan I though about that but if you switch from release to debug I'm not sure cmake will always clean the lib repository to remove the non suffixed version. This is why I choose the ordering of operation. In debug load the _d and fallback to the normal. . @fjourdes its a pity that all those nice PR are waiting unmerged. . EDIT: I don't see a lot of work to do to have a ready PR (add some unit tests on the features added in RequiredPlugin and on PluginManager, use the msg_ api). Two hours of work maybe. . EDIT2: @guparan about the InSimo PR... we should merge the easy PRs from InSimo and don't wait the hard ones to be merged.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465#issuecomment-335823292:52,release,release,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465#issuecomment-335823292,1,['release'],['release']
Deployability,"@guparan I updated the PR branch by merging the master branch into it, and it seems to solve the issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501320793:11,update,updated,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501320793,1,['update'],['updated']
Deployability,@guparan thank you for pointing that.The problem is that the CI machine *_pr3 does not have the python module 'hjson' installed consequently psl tests failed. EDIT: So you can safely ignore them...& merge the PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357269105:118,install,installed,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357269105,1,['install'],['installed']
Deployability,"@guparan what's this macro for actually (sofa_auto_set_target_properties) ? apparently it is only used in external plugins (only SoftRobots.Inverse it seems...) maybe the macro should be removed, and SoftRobots.Inverse updated..?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677723575:219,update,updated,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677723575,1,['update'],['updated']
Deployability,"@guparan you're right! We didn't see the problem because we ran the tests on the Release build and not on the Debug build. A segmentation fault occurs with the Debug build, dues to an assertion. @tgaugry currently investigates on the issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501707903:81,Release,Release,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501707903,1,['Release'],['Release']
Deployability,"@guparan, @Younesssss, @hugtalbot any volunteer to integrate the test in the normal test framework so we can merge this asap ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624093742:51,integrat,integrate,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624093742,1,['integrat'],['integrate']
Deployability,"@guparan, @hugtalbot ; I really would like to see new features for the 17.12 release and to me this is more important that having the 17.12 release released in 2017 ;) . So please @ErwanDouaille , @bcarrez (and me) please finish your work.; For those that have nearly finish work please make a PR in the WIP state so that we can see. . For the binary distribution... i think that the pre-build binaries may/should not include the experimental feature but at least the tagged version on the repository may have them. . EDIT: @fredroy the sofa from python integration should be also a nice addendum, but there is no PR yet.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/517#issuecomment-353024284:77,release,release,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/517#issuecomment-353024284,4,"['integrat', 'release']","['integration', 'release', 'released']"
Deployability,"@hdeling, @guparan, I think the idea would be to combine both the use of OptionsGroup with the wrapping of enums as described in the link Guillaume posted. Wouldn't something like this POC address your problem without manipulating strings from the C++?:. ```cpp; #include <sofa/helper/OptionsGroup.h>; #include <sofa/core/objectmodel/Data.h>. struct NumericalIntegrationMethod : public sofa::core::objectmodel::BaseObject; {; struct Method {; enum; {; One = 1,; Two,; Last; };; };. Data<sofa::helper::OptionsGroup> d_method;. NumericalIntegrationMethod(); : d_method(initData(&d_method, ""method"",; ""sets the chosen numerical integration method"")); {; sofa::helper::OptionsGroup* o = d_method.beginEdit();; o->setNames(2, ""One"", ""Two"");; o->setSelectedItem(Method::One);; d_method.endEdit();; }. unsigned method() { return d_method->getSelectedID(); }; void setMethod(unsigned m) { d_method->setSelectedItem(m); }; };. struct NewNumericalIntegrationMethod : public NumericalIntegrationMethod; {; struct Method : public NumericalIntegrationMethod::Method{; enum; {; Three = NumericalIntegrationMethod::Method::Last,; Last; };; };. NewNumericalIntegrationMethod(); {; sofa::helper::OptionsGroup* o = d_method.beginEdit();; o->setNbItems(NumericalIntegrationMethod::Method::Last + 1);; o->setItemName(3, ""Three"");; o->setSelectedItem(NewNumericalIntegrationMethod::Method::Three);; d_method.endEdit();; }. };. /*; /// From C++; NewNumericalIntegrationMethod method;; method->setMethod(NewNumericalIntegrationMethod::Method::Two);. # in Pyhton || XML:; <NewNumericalIntegrationMethod method=""Two"" />; */; ```. (I coded this quickly, didn't try nor compile it, but this should work I believe)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-474781683:625,integrat,integration,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-474781683,1,['integrat'],['integration']
Deployability,@hugtalbot I already give my opinion in #PR 330. ; And it is: please don't merge it now and give us time to find a smoother way of managing the API change. . I re-explain the situation: ; This PR add Python like serialization&deserialization ; - The de-serialization preserve backward compatibility. ; - The serizaliation is changing the behavior on how Sofa is serializing data. The new behavior is implemented in place of the old one and thus is breaking the API. This API exists since years in Sofa. It will thus cost time to fix & update external code-base. The situation is made worse because the API breaks is silent (ie the code will compile but not work as expected). Breaking the API is not mandatory to implement a python like serialization. So I strongly recommend to implement a non breaking solution as a transition... ; Alternative solutions I have in mind are:; - a cheap10 lines python approach based on repr (see previous response) (A PR with this would change two time less files and be a non breaking change).; - a full C++ version in the form of a getStringValueAsPython ; - a full C++ version in the form of an extra parameter to getStringValue; - ...other ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/332#issuecomment-318173945:535,update,update,535,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/332#issuecomment-318173945,1,['update'],['update']
Deployability,"@hugtalbot I fixed the test, is was not updated to handle the change between repr and str as well as the commit.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304#issuecomment-314798964:40,update,updated,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304#issuecomment-314798964,1,['update'],['updated']
Deployability,@hugtalbot In which release do we merge this PR?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1370738211:20,release,release,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1370738211,1,['release'],['release']
Deployability,@hugtalbot The code seems ok to me and fix test that are bugued. ; I vote for fast integration ASAP we have an all green dashboard.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/143#issuecomment-275706127:83,integrat,integration,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/143#issuecomment-275706127,1,['integrat'],['integration']
Deployability,"@hugtalbot Yes, It is related to QT configuration, and It's hard to build in MAC M2 Processor with. I tried to compile and install the qt with source code, but it is not adapted to my laptop. I hope the successful case can be provided if possible and I will follow it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698:36,configurat,configuration,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,@hugtalbot any update on the Data update callback?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-524784250:15,update,update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-524784250,2,['update'],['update']
Deployability,@hugtalbot any update on your suggestion for the method name?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2870#issuecomment-1118370772:15,update,update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2870#issuecomment-1118370772,1,['update'],['update']
Deployability,@hugtalbot will you update the regression references in an other PR ? 🙊. And there is scene test still failing on Python3 (ReadTheDocs_Example.py 😅),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1786372979:20,update,update,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1786372979,1,['update'],['update']
Deployability,"@hugtalbot you will need to update the regression file for collisionMultiple.scn, as the DefaultCollisionGroupManager seemed to have an impact in this one",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3104#issuecomment-1176961080:28,update,update,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3104#issuecomment-1176961080,1,['update'],['update']
Deployability,"@hugtalbot, the change seems to break 2 scene tests. Will you have time to check if they are false negative due to the BB change?. https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-670/CI_CONFIG=centos_clang-3.4,CI_PLUGINS=options,CI_TYPE=release/5/warnings3Result/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/670#issuecomment-400971635:247,release,release,247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/670#issuecomment-400971635,1,['release'],['release']
Deployability,@jjcasmar Do you still plan to update NBESolver? You said on Gitter it was not up-to-date.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-874192121:31,update,update,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-874192121,1,['update'],['update']
Deployability,"@jnbrunet Thanks for the explicit install tree, just what I needed :+1:; https://github.com/sofa-framework/SofaPython3/pull/83 should bring us that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-758099811:34,install,install,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-758099811,1,['install'],['install']
Deployability,"@jnbrunet To be clear, there are 2 optimizations in this solver: 1) optimization for diagonal masses, 2) multiop optimization.; I did not touch anything in the non-optimized multiop code. I changed the velocity input in the position update in the optimized multiop code. # Non-optimized multiop code. I did not change this code. ## Symplectic. ```; newVel = vec + acc * dt; newPos = pos + newVel * dt; ```. ## Non-Symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. # Optimized multiop code. ```cpp; ops_vel.second.emplace_back(vel.id(), 1.0);; ops_vel.second.emplace_back(acc.id(), dt);; ops_pos.second.emplace_back(pos.id(), 1.0);; ops_pos.second.emplace_back(d_symplectic.getValue() ? newVel.id() : vel.id(), dt);; ```; `ops_vel` is executed first if symplectic. `ops_pos` is executed first if non-symplectic. If I translate this code to formulas:. ## Symplectic. ```; newVel = vel + acc * dt; newPos = pos + newVel * dt; ```. ## Non-symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. This is exactly the same formulas than for the non-optimized code!; My change was on the line:; `ops_pos.second.emplace_back(d_symplectic.getValue() ? newVel.id() : vel.id(), dt);`; Before it was:; `ops_pos.second.emplace_back(vel.id(), dt);`. It would translate to:. ## Symplectic. ```; newVel = vel + acc * dt; newPos = pos + vel * dt <-- difference here with the non-optimized code; ```. ## Non-symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. # Conclusion. I believe that I fixed the multiop optimized symplectic version. Both optimized and non-optimized codes are now consistent. Note that this makes a difference only for the FreeMotion animation loops. @jnbrunet Regarding your math problem, I don't understand it. I don't see where you see a difference with SOFA. If you agree, I think we can merge this PR because it does not change the behavior (except for the fix). If there are some maths problems, it can probably be tackled later. What",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-867677866:233,update,update,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-867677866,1,['update'],['update']
Deployability,@jnbrunet a list of accepted types would be cool indeed. Maybe by adding a method+binding in the factory class that returns a list of all its keys in its registry? Though maybe more appropriate in a separate PR.; I'll update the doc accordingly though!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/740#issuecomment-409890732:218,update,update,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/740#issuecomment-409890732,1,['update'],['update']
Deployability,"@jnbrunet have you taken a look at this PR?. Latest proposal of Damien is to have:; - Unique identifier for topologies (as Datafield); - Create QuadratureMethod component (datafield method, datafield topology → datafield function pointer with integration points)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-600522140:243,integrat,integration,243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-600522140,1,['integrat'],['integration']
Deployability,"@jnbrunet thanks for the code. I'm wondering if canCreate is the right stage to do that because if the link can't be resolved, your FF will not be created at all. But in a ideal SOFA world, if the component is set to invalid because the link is not working you could update it in your gui, solve the link which will act like a Data and update the component. I'm also wondering if the mstate link is set in your scene, is it already usable in the ForceField constructor ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1506#issuecomment-705099048:267,update,update,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1506#issuecomment-705099048,2,['update'],['update']
Deployability,"@jnbrunet, @fredroy I updated the PR, . can you give me feedback on the implementation of error/warning promotion (in config.in.h)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1639#issuecomment-737198485:22,update,updated,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1639#issuecomment-737198485,1,['update'],['updated']
Deployability,@marques-bruno Please update/enhance the Doxygen for both methods :wink:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/822#issuecomment-438601602:22,update,update,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/822#issuecomment-438601602,1,['update'],['update']
Deployability,"@marques-bruno: can you provide examples for the behavior you describe? (maybe add them to the PR) I don't have as much experience with the update-on-demand feature. Pertaining to the discussion in PR#629 (should we use on-demand updating or events) I would also appreciate the opinion of the others. The pros of on-demand updating is consistency with the DataEngines, the pros of the event-based approach is simplicity. @marques-bruno has been raising the issue of code maintainability regarding the update-on-demand feature of DataEngines for a while and this PR seems a good opportunity to decide what the developments in the future could be. For me the questions are: Refactor the implementation? Document the behavior in a more understandable way? Simplify/Change behavior alltogether?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413554139:140,update,update-on-demand,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413554139,2,['update'],['update-on-demand']
Deployability,"@matthieu-nesme . The version is very simple...; In the constructor we:; - record the already loaded modules, ; - install a hook on the import function. . At each subsequent import we record in a second list the imported modules. ; Then when calling uninstall we remove from python module cache the one that are in this second list...(thus returning to the previous loading state). This force python to reload them next time it sees an import. About the re-init... ; Do you know how to be notified when the scene is going to be destructed and if there is no...is this something you could implement easily ? . EDIT: I cleaned the branch for a PR once the reinit stuff cleared.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/193#issuecomment-285083694:114,install,install,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/193#issuecomment-285083694,1,['install'],['install']
Deployability,@matthieu-nesme ; I'm glad you are going to a per-scene approach which is really so much better than the per-script one. ; I actually commited similar code few hours ago in my initial PR :) . The auto-install of the component is more a matter of taste on which is not a big deal to me. . To be more robust I suggest you to enforce that the autoreload component ; to be added at the scene root (easier to see if it is there) and to check that only a single component can be added per scene. . EDIT: and +1 for not hooking the import anymore.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286445017:201,install,install,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286445017,1,['install'],['install']
Deployability,@matthieu-nesme and @JeremieA many thanks for the quick updates. . @guparan I see you made a commit (15 May) about SofaCUDA. Does it means this pending issue is solved and we can merge or is there still something to do ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311022429:56,update,updates,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311022429,1,['update'],['updates']
Deployability,"@matthieu-nesme, @EulalieCoevoet . I'm trying to fix the test failure in FixConstraint_test when compiled in debug. The failure is related to SparseLDLSolver that do things like that: ; ```cpp; METIS_NodeND(&n, &xadj[0],&adj[0], NULL, NULL, perm,invperm);; ``` ; Compiling the test in debug activates the vector bound checking which rise the error message as [0] on an empty vector does not make sense. This error message makes the test fails. . Compiling the test in release mode de-activates the vector bound checking so the test is not failling anymore. But adj.size() is still zero and adj[0] is still used. According to the standard this is undefined behavior so we need to fix that. . I made a fix in which I set a minimal size of one to the faulty vectors.... but I'm not sure that having an empty adj vector is not an indication of a deeper problem (or the manifestation of a specific case) and that the right fix should to properly handle this case instead of playing with memory array to ""hide"" it. . As you have experience with solvers any feedback would be appreciated.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305611180:468,release,release,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305611180,1,['release'],['release']
Deployability,"@matthieu-nesme: After STC#3 discussions, could you update your review?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-292109219:52,update,update,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-292109219,2,['update'],['update']
Deployability,"@maxime-tournier ; I currently have tests with this pattern:; {""'aString'.join('[ ]')"", ""[aString aString]""} ; which succeed. . I also have added this one:; {""' '.join(['AA', 'BB', 'CC'])"", ""AA BB CC""}, ; Which also succeed. . I didn't managed to build something that fails...if you find some..please report so we can improve & update the tests. EDIT: I'm more concerned about the automatic conversion to getPath/getLinkPath for which I'm not sure we can find a clean semantic. I suggest we let that for a different PR...because this out of the scope of the PR initially submitted by Felix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307760074:328,update,update,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307760074,1,['update'],['update']
Deployability,"@maxime-tournier just to make things clear for me. ; You use an intermediate data structure to store the matrix values ( wherever they are coming from, mapping forcefield... ) and the mask data structure store the sparsity pattern. Since Flexible and Compliant rely extensively on the `Mapping` API, (conceptually everything can be broken down in a combination of application + linearisation around a given configuration) the only requirement in that case is to be able to express the sparsity pattern of each mapping, am I correct ? . That being said I agree that it would be ideal to have an intermediate data structure to supersede the `BaseMatrix` API, to fetch the matrix data ~~( and maybe the sparsity pattern at the same time ? )~~ that could fit with any linear algebra library with minimal overhead.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292484429:407,configurat,configuration,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292484429,1,['configurat'],['configuration']
Deployability,@olivier-goury I'm coming back to this PR as it is now crashing in the precise case where points are removed.; For example at step N we remove all the points and now d_X0 is empty but we need to update the engine to clean output Data which need to be empty now as well (but where not at step N-1). I'm checking the code of BoxROI::doUpdate and I don't see where it could crash if d_X0 was not yet set at init.; Normally no loop is done if the vector is empty.; Could you detail me where it crashes.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1031#issuecomment-493378115:195,update,update,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1031#issuecomment-493378115,1,['update'],['update']
Deployability,"@olivier-roussel thanks for the conda test and the feedbacks 👍; You should have made suggestions and/or make a PR on my branch, as I cannot credit you your patches 😵",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922632664:156,patch,patches,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922632664,1,['patch'],['patches']
Deployability,"@rgao15 I've just compiled v21.06 (patched with the commit from #2495) and the picking with the BilateralConstraint is working well (while doing the picking with Bilaterals with the caduceus scene).; By curiosity, when you try to pick, do you do shift + left click ? (left mouse operation is only activated when shifting while left-click); <img src=""https://user-images.githubusercontent.com/11028016/143003169-7a166a56-e72d-4950-b078-2790ec836ab1.png"" width=""500"" >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976347175:35,patch,patched,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976347175,1,['patch'],['patched']
Deployability,"@sescaida I just took a look at the code of the ScriptDataEngine class.; You are partially right, the current implementation is the following:. `// Ok, so in the end we're stuck with using the AnimationBeginEvent? (20.02.2018, sescaida); void PythonScriptDataEngine::handleEvent(Event *event); {; if (AnimateBeginEvent::checkEventType(event)); {; setDirtyValue();; update();; }; }`; Here clearly, update is called everytime a AnimateBegin event is sent to the component. If it were a ""normal component"" (i.e. if it were a BaseObject-based component) that would be the only moment that update() method would be called. But the ScriptDataEngine also inherits core::DataEngine.; This is what I talked about during my presentation at the STC#5:; DataEngine both inherits from DDGNode & BaseObject. The update function is ""manually called"" from handleEvent, but it actually shouldn't be, because this is redundant to how DataEngine works, which is having its update() method called **when and only when** a component, taking as an input the output data of that engine, calls getValue() on that data, WHILE any of the engine's INPUTS are flagged dirty. . So basically, while some people call update() in their handleEvent method, this should never be done, except in some (quite) twisted cases.; Btw, it took me quite some time to understand that.. few months ago, all my engines were calling update() in handleEvent, and I had a lot of problems because of that.. ^^. Technically, in the case of the scriptDataEngine, if you remove entirely the call to the update function in handleEvent, and if your dependency graph is well built, you should get the behavior you want",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407008370:365,update,update,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407008370,8,['update'],['update']
Deployability,"@sescaida Thanks for the review; The reason why I didn't add examples for this PR is because the current examples themselves, without any modification, demonstrate that it works as-is, thus showing that the call to update() in the handleEvent method was redundant with the default DDGNode's update mechanism. Basically, if your scene is well created (links are properly made between datafields & data are correctly accessed by components lower in the scene graph), everything should work just as well as before. The only difference I would say, is that the user has the hand over the cleanDirty() method, which allows him to fix use cases where a read acces is performed on an input, after setting an output's value has been set, in update(). as for whether it is a good idea to keep that system, I must say, that I agree with you, as we discussed before: Bringing the complexity of the DDGNode's mechanism in Python might be something we want to avoid.; Although, I think that the good approach to fight this issue would rather be to solve the problem on the C++ side (simplifying the Data-Update mechanism) than to diverge from it by simplifying the Python process.; I think @damienmarchal woul be the best placed to give us a feedback on this question, maybe? (When he'll be back from his holidays of course!)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413560022:215,update,update,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413560022,4,"['Update', 'update']","['Update', 'update']"
Deployability,"@sescaida as a reply to you previous comment:. - I think we should indeed remove the call to update from handleEvent, in the dataEngine. Although there are some twisted cases where it is necessary, it is not how it was designed initially I believe. I'd like @damienmarchal 's input on that, though.; Concerning the default value in addNewOutput, I totally agree with you. The only reason I kept it is because it would have even more impact on the error handling codebase in Sofa, which currently forces the existence of a ""value"" field to guarantee that the datatype can be deduced (which we are bypassing for outputs..); Overall, I think there's a decent amount of cleaning to do in this PR before it can be merged, including removing all the warnings that appear because we're working our way around the ""standard"" way to build datafields.; - I also agree with you that we need some reviews on this PR, and maybe also split it in multiple PRs for simpler reviewing. Things are getting mixed up now, between; - Populating the PSDE factory; - Deriving inputs / outputs; - passing datafields through createObject; - ...; I'll pass the PR to to_review and we can take a look at it on monday ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407791294:93,update,update,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407791294,1,['update'],['update']
Deployability,"@sescaida, I just discovered a syntax, that exists since, well ... ever, and makes this whole PR completely useless....:. ```py; import Sofa; import os. class PyEng(Sofa.PythonScriptDataEngine):; def __init__(self, ctx, name, positions):; self.name = name; self.addNewInput('positions', datatype=""vector<Vec3d>"", value=positions, help=""test""); self.addNewOutput('average', datatype=""Vec3d"", help=""average""); ; def parse(self, arg):; pass; ; def init(self):; 	pass; ; def update(self):; value = [0, 0, 0]; for pos in self.positions:; value[0] += pos[0]; value[1] += pos[1]; value[2] += pos[2]; value[0] /= len(self.positions); value[1] /= len(self.positions); value[2] /= len(self.positions); self.cleanDirty(); self.average = [[-value[0],-value[1],-value[2]]]; pass. def createScene(rootNode):; loader = rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); psde = PyEng(rootNode, name=""PSDE"", positions=loader.findData('position').getLinkPath()); rootNode.createObject('TransformEngine', name='TE', input_position=""@loader.position"", translation=psde.findData('average').getLinkPath()); rootNode.createObject('OglModel', name=""visu"", position=""@TE.output_position"", triangles=""@loader.triangles"",; color=""1 0 0 1""); ```. With this syntax, I can create my engines definition once, and create as many as I want, on the fly, with any parameter I want for my input fields. It's actually even better, because:; - I don't have to create inputs with the fields I pass to the constructor. It could be simple data (addNewData vs addNewInput); - Construction of datafields is more explicit, thus less error-prone; - No need to go search for a decorator function somewhere in SofaPython, or to declare a dictionary of default arguments, everything is performed in the constructor. So, yeah, this PR is now virtually useless.; There's one thing I don't like with this syntax though, it's that the creation of the object is performed at the same time as it is assigned to the scene gra",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442:471,update,update,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442,1,['update'],['update']
Deployability,"@sescaida, you can find [here](https://github.com/marques-bruno/snippets/blob/master/testDataEngine.cpp) a test code for Sofa showing what happens when cleanDirty is called at the wrong moment. After testing a little bit the engines, I noticed that the only case where it wouldn't work (to have all the data updates & cleanDirty() before calling the update() method would be in the very unlikely case where the update() method would fetch an earlier engine in the dependency graph through getContext, and set its output value. this is very unlikely, which means that, apart for some performance reasons, I don't see why it would be important to bind the cleanDirty() method in python. Since python is much slower anyway, I think this PR does not make much sense anymore. although, I still insist on removing the call to update() from handleEvent, since it is redundant with its normal on-demand calling mechanism. :) I'll update the PR soon!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372:308,update,updates,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372,5,['update'],"['update', 'updates']"
Deployability,@sofa-framework/consortium-staff hotfix for 22.06?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1229231608:33,hotfix,hotfix,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1229231608,1,['hotfix'],['hotfix']
Deployability,@sofa-framework/consortium-staff hotfix in 22.06?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3240#issuecomment-1227083514:33,hotfix,hotfix,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3240#issuecomment-1227083514,1,['hotfix'],['hotfix']
Deployability,@thomas-lemaire currently I see that some components are doing; ```cpp; if(printLog) sout << ; ```; While the 'sout' is already checking the printLog which is redundant. This is what I'm refering as mis-usagse. To me the cleaning consist in defining what is the right pattern to employ and this may (or not) result in removing the if(printLog) from the component and replace them with the use of 'sout'. . About the link with PR106. With the PR a dedicated message handler has to be installed in the application or the scene to activate loggin into component... this is done with the following code ; ```cpp; MessageDispatcher::addHandler(&MainPerComponentLoggingMessageHandler::getInstance()) ;; ```; But currently this is not done in runSofa or any other app and the messages are not added to the log. This is why I'm saying the PR is independent and is without side effect. . When the printLog expected behavior is clear the current log 'to the big string' should be removed and replaced by installing the logging proposed in PR106.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276932662:483,install,installed,483,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276932662,2,['install'],"['installed', 'installing']"
Deployability,"@untereiner thank for the question. . What I would dream of some kind of consensus about how we proceed and I'm totally open for suggestions. I see the goods of making smooth transition in a code base (user of the code base will praise you) and the bad of maintaining the transitional package. On my side... I would say: ; - we remove the transitional packages after 1 year and at each Sofa release we make their use more and more ""verbose"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328465144:391,release,release,391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328465144,1,['release'],['release']
Deployability,"A first implementation is proposed in PR #276. This work aims at handling sparse matrices in all components like mapping, forcefields and so on. It is based on the existing functions applyJ and applyJT. The idea is to handle sparse matrices at the solver level, and could find the information of sparsity within forcefield (addKToMatrix for assembled cases). Work remains todo. The PR adds a new function into the MechanicalObject (buildIdentityBlocksInJacobian), but this is a work in progress to make a proof of concept. PR will therefore be merged (after 17.06) but a mention “experimental” must be first added. Since the implementation and the concept is open to discussion while a POC is implemented, it would be nice to have more updates in the associated GitHub discussion. A final POC will be presented at the STC#4. It looks to me that the most important aspect is to **discuss here technical aspect and the global implementation, and keep people updated of the progress**. @JeremieA I add you since the topic was of interest for you as well. Thank you all for discussing it today, let's carry on the work! Nice work @olivier-goury",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-306769498:736,update,updates,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-306769498,2,['update'],"['updated', 'updates']"
Deployability,A first version of SOFA-NG has been released in https://github.com/sofa-framework/sofa-minimal-poc; Please note that this is an experimental work.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/245#issuecomment-351047830:36,release,released,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/245#issuecomment-351047830,1,['release'],['released']
Deployability,A list of tasks to do:; 1. remove SofaTest use in Sofa*_test (first in the most important modules SofaBase* and then SofaCommon and ...); 2. dispatch the existing tests in the SofaTest. I suppose 1) will involve to add/modify the new Sofa.Testing API.; This post will surely be updated heavily soon....,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1885#issuecomment-852823164:278,update,updated,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885#issuecomment-852823164,1,['update'],['updated']
Deployability,"A little update:; - added `wrap/unwrap` mechanism: there are wrapping traits in `PythonToSofa.inl` specifying wrapped type (`PySPtr` or `PyPtr`) for a given type (defaults to `PyPtr`); - wrapping traits specializations for `Base`, `BaseData` and `BaseLink`-derived classes. `Base`-derived classes are wrapped as `PySPtr<Base>`, `BaseData`-derived as `PyPtr<BaseData>`, etc. this should cover most cases.; - `unwrap<T>(py_obj)` first recovers the wrapped type and the object pointer, then `dynamic_casts<T*>` ; - `unwrap_self<T>(py_obj)` does the same but with `static_cast` (this is for `self` arguments, python enforces that `self` is an instance of this type). Extension code should look like this now:. ```c++; Node* node = sofa::py::unwrap_self<Node>(self);; BaseObject* obj = sofa::py::unwrap<BaseObject>(py_obj); if(!obj) { ... }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304#issuecomment-310324600:9,update,update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304#issuecomment-310324600,1,['update'],['update']
Deployability,A lot of regression tests are failing. Maybe their references should be updated?; @hugtalbot,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-910400785:72,update,updated,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-910400785,1,['update'],['updated']
Deployability,A more generic was asked in #3592 all scenes are usually using template=Vec3d we should use the SReal version template=Vec3 allowing us to test the float cases. Is float really useful?. A CI (nightly?) should test the float configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559:224,configurat,configuration,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559,1,['configurat'],['configuration']
Deployability,"A note for the dev meeting: would be nice to find a way to removing the [warning](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_clang,CI_PLUGINS=default,CI_TYPE=release/3822/FullBuildWarnings-Clang/folder.-1602702822/source.13f0211b-14a0-4dcf-afd8-994d4c6377ec/#114) related to this class . _**SpringForceField.h:114**_; ```; field 'd_springsIndices' is uninitialized when used here; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1236085171:194,release,release,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1236085171,1,['release'],['release']
Deployability,"A quick summary of this problem. . 1) There is multiple variation of this problem and It impact several people at Defrost.; But the underlying idea is that we are using the executatable location to deduce the plugin & data location (normally EXEC_LOC/../bin or EXEC_LOC/../share). The problem is that when building with recent VS, VS adds and extra directory (Release or Debug) so the ""../"" in ""../bin"" is ""not enough"" to go to the sofa root install directory which result in searching for plugins in PATH/bin/bin instead of PATH/bin and PATH/bin/share instead of PATH/share. 2) The problem is specific to people that are using Visual Studio build solution for their builds as VS adds Release/Debug subdirectory to the build directory. The problem was probably existing before but it was made very obvious since PR #518 & PR #502 as now we always use the relative location to the executable to find the files like plugins or resoures. 3) I assume that the problem was not visible in our CI because for windows builds we are using Ninja with VC compiler; as we don't use a real VS solution the Release/Debug extra path were not added. . 4) Erwan is working on a fix, to force CMake not to emit the extra subdirectories when using VS solution, it is currently in a private branch : ). @ErwanDouaille please complete the summary is needed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561#issuecomment-358042600:360,Release,Release,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561#issuecomment-358042600,4,"['Release', 'install']","['Release', 'install']"
Deployability,A word about organization: ; - we will work by groups of 4; - we will use specific branches (ignored by the CI) on this repository for our commits + integration branches (built by the CI); - I will create a team to handle permissions so please make sure everyone has a GitHub account,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-333149231:149,integrat,integration,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-333149231,1,['integrat'],['integration']
Deployability,"AFAIK, @bcarrez installed zmq on CI ubuntu (or maybe not, just before vacations). . For liboscpack it requires a specific version : https://github.com/SofaDefrost/sofa/blob/sofaCommunication/applications/plugins/Communication/README.md; If you install liboscpack from the repository there is some bugs in it. About windows and mac I never tested on it. Plus, I have to write a liboscpack cmake find :/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-355128157:16,install,installed,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-355128157,2,['install'],"['install', 'installed']"
Deployability,About failure by default on warning & deprecated...this is a choice. . The positive thing about this 'bold' behavior is that it force tests maker to care about warning and deprecated messages otherwise they tend to ignore them. As I prefer to specify explicitely in every test case the expected behavior I dont' feel very concerned about that 'default mode'. ; But I think this 'bold' behavior sound nice to me and from the new failure we can see in the test reports this mode is rising interesting issue that requires investigations. About the disable color while testing. I disable it only for the tests to see if it improve the readability. Now red in the console only means that a test have failed and it not obfuscated with the red from an expected error message. (I 'm not sure I'm clear here). You can change that if you prefer :) . EDIT: I update the text to be more clear :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291933636:848,update,update,848,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291933636,1,['update'],['update']
Deployability,"About sofa-spm, it is possible to submit new plugins install recipes by making PR to https://github.com/SofaDefrost/SPM-RECIPES",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1122#issuecomment-527834952:53,install,install,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1122#issuecomment-527834952,1,['install'],['install']
Deployability,"About the `[[maybe_unused]]` :; this is triggered only with clang(15), not with gcc and it seems to be because of :; `-Wunused-but-set-variable now also warns if the variable is only used by unary operators.` (https://releases.llvm.org/15.0.0/tools/clang/docs/ReleaseNotes.html); So all the added `[[maybe_unused]]` are used with variables because of the `++` later on, which is a bit weird to me too.🤓. I can just revert https://github.com/sofa-framework/sofa/pull/3627/commits/c168efba2f0ff912c3ace3ffe81c179f9712e02d if needed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347:218,release,releases,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347,2,"['Release', 'release']","['ReleaseNotes', 'releases']"
Deployability,"About the last syntax your are proposing, I think it shouldn't be hard to do. . You simply have to in the c++ construction of the PSDEMagic dedicated code that get the argument named 'update', then extract its parameters (is callable, param names), transform all that as input and generate the output.; Actually this is very similar the use of decorator except that with decorator this ""magic binding"" logic is implemented in python while in your case the ""binding"" logic is done in the c++ part. . I will continue digging in this issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380411028:184,update,update,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380411028,1,['update'],['update']
Deployability,"About this PR...please keep in mind that its target is to cut the dependency to SofaTest. . About the NumericTest base test class (I think this is the one François is refering to this one when he is saying ""I would like to discourage the use of one size fits all epsilon and comparison values for floating points arithmetic, since I prefer people to actually think about the quantities they..."") it is there because there was this functionallities in SofaTest and I didn't want to update all the tests in this PR. So I just move the features from SofaTest to SofaFramework. My strategy is to 1) cut the dependency with this PR, 2) update all the tests in modules small at a time so that they stop using SofaTest. And in a third step if NumericTest is really bad...then maybe someone will update the tests relying on it and remove the class :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338786171:481,update,update,481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338786171,3,['update'],['update']
Deployability,"According to https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html, ; version 3 is supported from CMake 3.21 which is lower than 3.22 (version supported in all the cmake files in the codebase) since ; - https://github.com/sofa-framework/sofa/pull/4586. Therefore, it makes sense to upgrade the version in any case 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4849#issuecomment-2251617387:292,upgrade,upgrade,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4849#issuecomment-2251617387,1,['upgrade'],['upgrade']
Deployability,"According to origin/defrost on the Dashboard, error appeared between 4b1f2897 and a33b4b12.; There are some LightManager changes here, we are close ;); I update my ""summary"" post. EDIT: This range is where the test was created. **This test fails on Windows since its creation.**; Please @damienmarchal give this type of information (if you know it) when you create your issue so that no time is lost searching for error appearance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263275881:154,update,update,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263275881,1,['update'],['update']
Deployability,"According to:; https://www.qt.io/blog/add-on-support-in-qt-6.0-and-beyond; Qt 6 will be feature completed for LTS release at version 6.2 which is planned for septembre 2021.; At that time QtChart Qt SerialPort, QtWebEngine, QtDataVisualition will be there.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1756#issuecomment-789573910:114,release,release,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756#issuecomment-789573910,1,['release'],['release']
Deployability,"Actually, I dont even know if anybody uses the GUI with the docker installation 😅. I think it is a matter of configuration of docker to access the local X server. You may try setting some environment variables; https://stackoverflow.com/questions/69872788/docker-could-not-connect-to-any-x-display",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495:67,install,installation,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"Actually, I got confused, I thought you were using docker to build SOFA, with https://hub.docker.com/r/sofaframework/sofabuilder_ubuntu. Anyway, my advice would be to just download the archive on the website, and directly use the binaries (instead of going through the containerisation of docker) ; in your case for Ubuntu, it would be https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510:375,release,releases,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510,1,['release'],['releases']
Deployability,"Actually, I have fixed It. Aparently I had a 19.06 installation and I was mixing library versions.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1476#issuecomment-693511374:51,install,installation,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1476#issuecomment-693511374,1,['install'],['installation']
Deployability,"Actually, I skipped the install process in the MAC M2. And I run it on my Desktop(Ubuntu 20.04)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371941172:24,install,install,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371941172,1,['install'],['install']
Deployability,After dev-meeting this PR needs to be updated to:; - use dmsg_* instead of the condition on N_DEBUG. The change for conditional code will be done a separated PR so this PR is to review again :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/255#issuecomment-300421865:38,update,updated,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/255#issuecomment-300421865,1,['update'],['updated']
Deployability,"Agreed, I don't like adding a Data in every component just for this.; I think the underlying issue of having an empty scene bounding box when there is not visual models could also by fixed relatively simply and without introducing much cost by:; - including the collision models top-most bounding boxes that are already computed during each time step (in fact this could be the only information used by default, as it is cheaper in practice to obtain than the visual bounding boxes because it's already computed for the broad phase); - and/or having a flag in `DrawTool` to look at the given coordinates to compute a bounding box of all non-visual but visible elements. As the DrawTool API is quite inefficient anyway the overhead may be insignificant, and it will disappear in cases where there is no debug information visualised. To me this could be controlled by one of the master component in the root node, either the `AnimationLoop` (as the issue is when `UpdateBBox` happens and how it is implemented, bonus point is that this component would then have the ability to schedule it in parallel with the other computations), or the `VisualManager` (as the current use cases for bounding boxes are currently exclusively to setup the scene rendering bounds and/or show bounds of a subgraph). This control could either be by implementing this update directly, or providing the choice that is setup for this particular scene (which alternative to use, which frequency of bbox updates).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/29#issuecomment-261507387:962,Update,UpdateBBox,962,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/29#issuecomment-261507387,3,"['Update', 'update']","['UpdateBBox', 'update', 'updates']"
Deployability,"Aha! Well, just to be clear, my suggestion would have been PythonScriptDataEngine-> PyComponent and PythonScriptController -> PyController. I understand that in terms of implementation, even conceptually, a DataEngine is different from a BaseObject. But, this information is of no use to the user in my opinion. When he sees the PSDE he expects it to be updated when the Datas have changed. If I'm new to Sofa and I see a component that is called ""PythonScriptDataEngine"" I figure that it must be something very specific, related to an engine of some sorts. If I see ""PyComponent"" I understand immediately that this is a component in my scene whose behavior I can implement in python. But granted, it doesn't take much to explain in a documentation that what is hidden behind the name ""PythonScriptDataEngine"" is just that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406614649:354,update,updated,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406614649,1,['update'],['updated']
Deployability,"Alright, it seems the config.h is also needed. This is what I have by simply putting back SofaSimulationCore in SofaFramework. **CMakeLists.txt**; ```; cmake_minimum_required(VERSION 3.1); project(mymy). find_package(SofaFramework); add_executable(${PROJECT_NAME} main.cpp); target_link_libraries(${PROJECT_NAME} SofaSimulationCore); ```. **main.cpp**; ```; #include <sofa/simulation/MechanicalMatrixVisitor.h>; int main () { return 0;} ; ```; **Result**; ```; sofa/build/install/include/SofaFramework/sofa/simulation/simulationcore.h:25:10: fatal error: sofa/simulation/config.h: No such file or directory; 25 | #include <sofa/simulation/config.h>; | ^~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540633645:472,install,install,472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540633645,1,['install'],['install']
Deployability,An example of a plugin update further to this PR: https://github.com/SofaDefrost/SoftRobots/pull/213,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1541472870:23,update,update,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1541472870,1,['update'],['update']
Deployability,And you have to make sure that the GL buffers are created/updated/modified while having an OpenGL context (so either in initVisual()/updateVisual()/drawVisual()...),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1423#issuecomment-644625370:58,update,updated,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1423#issuecomment-644625370,2,['update'],"['updateVisual', 'updated']"
Deployability,AnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sof,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6077,install,install,6077,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"Another suggestion from @JeremieA is that actually the list of all the plugins that are being compiled could be derived at CMake configure/generate time, and therefore a configuration file containing that list could be issued as the default list of plugins to load.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-297004128:170,configurat,configuration,170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-297004128,1,['configurat'],['configuration']
Deployability,"Another thought about this issue:; If penality forces are integrated implicitly (`addKToMatrix` is implemented and matrices are mapped), the structure of the linear system can change between 2 time steps. In that case, the matrix will need a new symbolic factorization each time it changes. This is very costly, and it will slow down the simulation a lot. It is the same problem occurring after a topological change.; Some solutions (such as https://dl.acm.org/doi/abs/10.1145/3478513.3480505) exist, but require a lot of work (and a dedicated solver).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-996545343:58,integrat,integrated,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-996545343,1,['integrat'],['integrated']
Deployability,"Another way to fix this could be by disabling the native menu bar and use the Qt one. That would also have the benefit of having the same menu bar for every version. Here is one way to do it:. ```; diff --git a/applications/sofa/gui/qt/RealGUI.cpp b/applications/sofa/gui/qt/RealGUI.cpp; index b6546a8..efb29c5 100644; --- a/applications/sofa/gui/qt/RealGUI.cpp; +++ b/applications/sofa/gui/qt/RealGUI.cpp; @@ -221,6 +221,7 @@ void RealGUI::InitApplication( RealGUI* _gui); QString pathIcon=(sofa::helper::system::DataRepository.getFirstPath() + std::string( ""/icons/SOFA.png"" )).c_str();. application->setWindowIcon(QIcon(pathIcon));; + _gui->menubar->setNativeMenuBar(false);. // show the gui; _gui->show(); // adding extra line in the console?; ```. This works perfectly on my mac. The menu bar will be directly on the Sofa's interface like it would with another OS. <img width=""1095"" alt=""screen shot 2017-04-29 at 11 09 38 pm"" src=""https://cloud.githubusercontent.com/assets/6951981/25561053/0eb91f68-2d31-11e7-975b-d80fcf977a9a.png"">. Edit : I can add this patch as a pull request if you want to go forward with this solution.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/183#issuecomment-298208141:1063,patch,patch,1063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/183#issuecomment-298208141,1,['patch'],['patch']
Deployability,Any interest to keep newmat ? I remember a discussion during a sofadevmeeting with @jnbrunet saying that we should remove the usage of newmat. Especially because it seems this library is really old and not maintained anymore. ; http://robertnz.net/nm_intro.htm; Latest update seems to be 2008 for newmat11 (beta)...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2311#issuecomment-908719567:269,update,update,269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2311#issuecomment-908719567,1,['update'],['update']
Deployability,Any update @jjcasmar on this work?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-971457092:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-971457092,1,['update'],['update']
Deployability,Any update @maddin200 ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1968#issuecomment-814727721:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1968#issuecomment-814727721,1,['update'],['update']
Deployability,Any update here ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-592179782:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-592179782,1,['update'],['update']
Deployability,Any update on the discussion @damienmarchal @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565#issuecomment-359736499:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565#issuecomment-359736499,1,['update'],['update']
Deployability,Any update on this? Could we revert https://github.com/sofa-framework/sofa/pull/1268 in the meantime?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-630012571:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-630012571,1,['update'],['update']
Deployability,Any update on your side @EulalieCoevoet?; Or could you just share a simple scene for us to test and reproduce the problem?; Thanks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-810881801:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-810881801,1,['update'],['update']
Deployability,Anyone has plan for this PR to be updated and merged ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/980#issuecomment-537869723:34,update,updated,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/980#issuecomment-537869723,1,['update'],['updated']
Deployability,"Apparently, a bug with gcc12 and/or Ubuntu 23.04, just upgraded to Ubuntu 23.10 (with gcc13.2) and it works well 😅",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4283#issuecomment-1797946598:55,upgrade,upgraded,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4283#issuecomment-1797946598,1,['upgrade'],['upgraded']
Deployability,Are all pluginisation finished? I would wait for it otherwise you will need to re-update all the scene.; By the way I would be happy to set an option to automatically include the main plugin...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1802#issuecomment-776631559:82,update,update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1802#issuecomment-776631559,1,['update'],['update']
Deployability,"As I was not ready to kill all the existing tests I solved the issue in a different way that I found simple. ; The idea is based on a small api that mimick the Python API and then to use it to re-implement the SceneCreator functionnality. This is in the STC4 branch. If you are curious it look like that:; ```cpp; #include<SceneCreator/SimpleAPI.h> . Node::SPtr root = simulation::getSimulation()->createNewGraph(""root"");; simpleapi::createObject(root, ""DefaultPipeline"", {{""name"",""Collision Pipeline""}}) ;; simpleapi::createObject(root, ""BruteForceDetection"", {{""name"",""Detection""}}) ;; simpleapi::createObject(root, ""MinProximityIntersection"", {{""name"",""Proximity""},; {""alarmDistance"", ""0.3""},; {""contactDistance"", ""0.2""}}) ;. simpleapi::createObject(root, ""DefaultContactManager"", {; {""name"", ""Contact Manager""},; {""response"", responseType}; });. simpleapi::createObject(root, ""DefaultCollisionGroupManager"", {{""name"", ""Collision Group Manager""}});; ```. I'm quite sure we should be able to make much nicer things with a proper eDSLinstead of mimicking the python API but I'm not sure I have time for that. My target was to remove all dependencies between Sofa & SceneCreator and this make the job.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334524331:492,Pipeline,Pipeline,492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334524331,1,['Pipeline'],['Pipeline']
Deployability,"As a conclusion, what is needed:; - [ ] Upgrade CMake >= 3.24 (@bakpaul is working on it); - [ ] Then use find_or_fetch",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1767961987:40,Upgrade,Upgrade,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1767961987,1,['Upgrade'],['Upgrade']
Deployability,"As an additional thread management pattern, I would like to add a thread pool with persistent worker threads, which also uses ""Task"" instances to encapsulate single work items as in the Multithreading plugin.; The motivation for this alternative to the existing work-stealing approach in the Multithreading plugin is to use it for a simple parallelization scheme in the collision detection pipeline.; There are currently two Task types available:; * For running bounding volume hierarchy updates in parallel; * For running collision pair checks in parallel. Both task implementations require no modifications to the existing collision model implementations (especially not within the CubeModel class).; However, the implementation is not complete yet, as I have yet to find a reliable alternative to generate DetectionOutputVector instances after all collision pair checks have finished their computations.; I have implemented this as a separate library and plugin, largely independent of changes in SOFA core classes and completely independent of the existing MultiThreading plugin.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-263825437:390,pipeline,pipeline,390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-263825437,2,"['pipeline', 'update']","['pipeline', 'updates']"
Deployability,"As an information, we are working on a first set of basic components, implementing the main virtual classes defined in SofaFramework and SofaSimulation. This first step helps us in detecting unexpected/undesired dependencies. The list of these basic components will soon be presented and the resulting SOFA NG sources released as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/226#issuecomment-295246847:318,release,released,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/226#issuecomment-295246847,1,['release'],['released']
Deployability,"As discussed, one problem remains: ; In installed SOFA, relocatable plugins can't find SOFA libraries because RPATH is not set to handle dependencies like `<install-dir>/plugins/SofaValidation/lib/SofaValidation.so -> <install-dir>/lib/SofaLoader.so`; To be fixed in another PR...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1604#issuecomment-726817111:40,install,installed,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1604#issuecomment-726817111,3,['install'],"['install-dir', 'installed']"
Deployability,"As far as I know, the dependency with `TopologyData.inl` comes from the fact that changes in topology within a MechanicalObject is handled differently compared to the rest of the components that support topology changes. See [MechanicalObject::handleStateChange](https://github.com/sofa-framework/sofa/blob/master/SofaKernel/modules/SofaBaseMechanics/MechanicalObject.inl#L391-L573); This constrats with the way most of the components are being notified of changes is the topology, by first encapsulating their topology sensitive state variable in the appropriate topology data container ( `PointData`, `EdgeData`, `TriangleData` ... ) and then by implementing a callback method which to update the topology state variable with respect to the change in the topology. For example in a `TriangularFEM` this means computing the variables related to the rest configuration when new triangles are added. See [TriangularFEMForceFieldOptim.inl](https://github.com/sofa-framework/sofa/blob/master/modules/SofaGeneralSimpleFem/TriangularFEMForceFieldOptim.inl#L54-L70) for the related code. ; An attempt to uniform this design has been tried in `MechanicalObject`, but stopped because it would have required some other drastic changes, namely that it would no longer be possible to have a `MechanicalObject`, without any `TopologyContainer` of some sort either in its local context or in its parent context.; With the current implementation ( which does not rely on `TopologyData` ) if no `TopologyContainer` is specified, it is therefore implicit that the topology is a point topology, no `PointSetTopologyContainer` is required to describe that fact.; However working with `TopologyData` ( or at least clarifying why ultimately it was decided not to use it ) API to store the state vectors of a `MechanicalObject` would have the benefit of removing the need to call the `resize()` method ( it is usually done during `apply` methods of mapping ).; Ultimately it would also lead to rework the current implement",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295286672:688,update,update,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295286672,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"At meeting it was asked me to update minor details...and was returned to wip...I have done the requested change so I change the tag to to-review.I didn't wanted to set it to ready because I prefer to have third ""eye"" looking at the change even if they are minor. . I think if you think it is ok then the pr is ready and you can merge it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/255#issuecomment-301121460:30,update,update,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/255#issuecomment-301121460,1,['update'],['update']
Deployability,"Basically, when i compile sofa using cmake it says that it is adding sofapython3 and it seems not to have any problems. But when i run runSofa.exe sofapython3 is not in the plugin list and i cannot open python scenes in sofa. I can't load it manually fromn the plugin manager either. I tried also to follow the guide to install python3 on github but the problem still remains.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1785018217:320,install,install,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1785018217,1,['install'],['install']
Deployability,"Because ""data update"" is considered as a background task since STC#2 ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80#issuecomment-264854155:14,update,update,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80#issuecomment-264854155,1,['update'],['update']
Deployability,Because we build SofaPython3 on SOFA CI. ; It's the starting point of all my work on ExternalProject update workflow that we have been discussing for 3 weeks. ; We want to ease the pain of handling ExternalProject pointers while still building those external project on SOFA CI.; See https://github.com/sofa-framework/sofa/pull/1961,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820438695:101,update,update,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820438695,1,['update'],['update']
Deployability,Best way to do this in my opinion is to move those plugins in their own repo and use GitHub Actions for continuous integration.; How to do that? See [SofaPython3 workflow](https://github.com/sofa-framework/SofaPython3/blob/master/.github/workflows/ci.yml),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1285#issuecomment-971439906:104,continuous,continuous,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1285#issuecomment-971439906,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"Bold of you to set ""fast merge"" on a PR about DDGNode (and its update mechanism) 🤠",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2822#issuecomment-1084330602:63,update,update,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2822#issuecomment-1084330602,1,['update'],['update']
Deployability,"Build failed with old error already seen in build [220](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/220/console).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/719#issuecomment-405310319:169,release,release,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/719#issuecomment-405310319,1,['release'],['release']
Deployability,"Build failure on Ubuntu is weird. Seems related to CGAL but I'm not even sure.; Can you check this @hugtalbot ?; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2935/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/6/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123779219:224,release,release,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123779219,1,['release'],['release']
Deployability,"But @damienmarchal , shall we validate this pull-request since it concerns the v16.12 release?; We will re-arrange the ChangeLog for the future 17.06.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/121#issuecomment-271328265:86,release,release,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/121#issuecomment-271328265,1,['release'],['release']
Deployability,C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5378,Release,Release,5378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"CG is already in the list my bad, I forgot it sorry!. The description corresponds to a 1st level / layer of SOFA NG.; We intend to have (still in SOFA NG) a second layer of components. This second layer would focus on : ; - state of the art algorithm (like EulerImplicit); - advanced, efficient and validated algorithms (cf Project https://github.com/sofa-framework/sofa/projects/6). I would rather see the EulerImplicit in this second level.; The first level would propose only one implementation per category (e.g. one integration scheme). @matthieu-nesme, you would then rather like to see one explicit and one implicit integration scheme, right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/247#issuecomment-295709649:521,integrat,integration,521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/247#issuecomment-295709649,2,['integrat'],['integration']
Deployability,"CGAL is not available in CentOS official repos. On Ubuntu 18.04, a custom findCGAL.cmake is not necessary.; With a dumb project like; ```cmake; project(test); cmake_minimum_required(VERSION 3.6). find_package(CGAL REQUIRED). get_cmake_property(_variableNames VARIABLES); list (SORT _variableNames); foreach (_variableName ${_variableNames}); if(_variableName MATCHES ""^CGAL_""); message(""${_variableName} = ${${_variableName}}""); endif(); endforeach(); ```. I got this output:; ```bash; root@90bf513426c7:~/project/build# cmake ..; CGAL_3RD_PARTY_DEFINITIONS = ; CGAL_3RD_PARTY_INCLUDE_DIRS = /usr/include; CGAL_3RD_PARTY_LIBRARIES = ; CGAL_3RD_PARTY_LIBRARIES_DIRS = /usr/lib; CGAL_BUGFIX_VERSION = 0; CGAL_BUILD_SHARED_LIBS = TRUE; CGAL_BUILD_TYPE_INIT = Release; CGAL_BUILD_VERSION = 1000; CGAL_Boost_USE_STATIC_LIBS = OFF; CGAL_COMPONENT = ; CGAL_CONFIG = /usr/lib/x86_64-linux-gnu/cmake/CGAL/CGALConfig.cmake; CGAL_CONFIGURED_LIBRARIES = CGAL_Core;CGAL_ImageIO;CGAL_Qt5; CGAL_CONFIG_DIR = /usr/lib/x86_64-linux-gnu/cmake/CGAL; CGAL_CONFIG_LOADED = TRUE; CGAL_CONSIDERED_CONFIGS = /usr/lib/x86_64-linux-gnu/cmake/CGAL/CGALConfig.cmake; CGAL_CONSIDERED_VERSIONS = 4.11.1000; CGAL_CXX_FLAGS_DEBUG_INIT = -g; CGAL_CXX_FLAGS_INIT = -g -O2 -fdebug-prefix-map=/build/cgal-ZyilPF/cgal-4.11=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -frounding-math; CGAL_CXX_FLAGS_RELEASE_INIT = -O3 -DNDEBUG; CGAL_DIR = /usr/lib/x86_64-linux-gnu/cmake/CGAL; CGAL_DISABLE_GMP = ; CGAL_ENABLE_PRECONFIG = OFF; CGAL_ESSENTIAL_3RD_PARTY_LIBRARIES = GMP;MPFR;GMPXX; CGAL_EXT_LIB_Coin3D_PREFIX = COIN3D; CGAL_EXT_LIB_Eigen3_PREFIX = EIGEN3; CGAL_EXT_LIB_QGLViewer_PREFIX = QGLVIEWER; CGAL_EXT_LIB_Qt5_PREFIX = QT; CGAL_FOUND = 1; CGAL_GIT_SHA1 = ; CGAL_GRAPHICSVIEW_PACKAGE_DIR = /usr//include/CGAL/; CGAL_HEADER_ONLY = OFF; CGAL_INCLUDE_DIRS = /usr//include; CGAL_INSTALL_PREFIX = /usr/; CGAL_ImageIO_USE_ZLIB = ON; CGAL_LIB = CGAL; CGAL_LIBRARIES_DIR = /usr//lib/x86_64-linux",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611416421:756,Release,Release,756,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611416421,1,['Release'],['Release']
Deployability,"CI is clear now. ; This PR triggers following error:; ```; applications/plugins/SofaSphFluid/src/SofaSphFluid/SPHFluidForceField.inl:34:10: fatal error: execution: No such file or directory; #include <execution>; ^~~~~~~~~~~; compilation terminated.; ```; see https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1249/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/7/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-598091418:375,release,release,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-598091418,1,['release'],['release']
Deployability,"CI seems not happy:; ```; Edge2QuadTopologicalMapping.cpp.obj; J:\0\src\modules\SofaTopologyMapping\src\SofaTopologyMapping\Edge2QuadTopologicalMapping.cpp(85): error C2146: syntax error: missing ')' before identifier 'and'; J:\0\src\modules\SofaTopologyMapping\src\SofaTopologyMapping\Edge2QuadTopologicalMapping.cpp(85): error C2065: 'and': undeclared identifier; ```. See [full log](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1861/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/1/console) here",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1861#issuecomment-785683796:504,release,release,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861#issuecomment-785683796,1,['release'],['release']
Deployability,"CIMg use convert or gm as a fallback scenario which happens when the plugin is not compiled with libjpeg et libtiff support. Conclusion 1: we need to update our VM to install libjpeg et libtiff installs on centos & windows. . Conclusion 2: we need to replace the current error message saying that ""convert"" or ""gm.exe"" cannot be found by one explaining that to have jpg/tiff support we need to re-compile the plugin in the right way. EDIT: thanks @fredroy for the infos about CImg.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305175116:150,update,update,150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305175116,3,"['install', 'update']","['install', 'installs', 'update']"
Deployability,Can one of the admins verify this patch?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/6#issuecomment-232028269:34,patch,patch,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/6#issuecomment-232028269,2,['patch'],['patch']
Deployability,"Cannot reproduce this issue (or seems to be fixed in the latest release) on Windows 10/MSVC207/Cmake 3.15.; Closing the issue, and if it is still happening, feel free to reopen it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1235#issuecomment-777513013:64,release,release,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1235#issuecomment-777513013,1,['release'],['release']
Deployability,ChangeLog is updated by the committer.; People external from the PR could not properly describe the work done.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-270319951:13,update,updated,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-270319951,1,['update'],['updated']
Deployability,Changes done in this PR will be integrated in PR #2086,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2013#issuecomment-841260799:32,integrat,integrated,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013#issuecomment-841260799,1,['integrat'],['integrated']
Deployability,Closed as no update regarding https://github.com/sofa-framework/sofa/issues/1148; The fix concerning #1213 has been merged with #1247,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1217#issuecomment-672729743:13,update,update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1217#issuecomment-672729743,1,['update'],['update']
Deployability,"Closing & Re-opning was a mistake :). You are right, breaking changes should be done only for punctual release...I wanted to discuss that in issue #318. But given the amount of breaking changes people want to merge...It think maybe the 17.16 will be a ""breaking"" release. To make the change more manageable by user I introduced a recent PR #329 for which I would like to have feedback (or support or thumb-up :)). ; ; Can you describe what exactly are the breaking and if you have time it would be super great if with #PR329 you can provide a custom hook to warn inform user of which changes happens.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-315047276:103,release,release,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-315047276,2,['release'],['release']
Deployability,"Compiling on sofa-ci-dev-macos: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-727/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/5/console; TODO (when build done): time Multithreading_test execution",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/727#issuecomment-408447499:145,release,release,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/727#issuecomment-408447499,1,['release'],['release']
Deployability,"Conclusion of several .. years of discussion with @damienmarchal :. such circular dependencies should be handled by defining clear input data which update output data.; For instance for a Mass:; - input data: `d_inputMassDensity` and `d_inputTotalMass` (input prefix would make it clear that a circular dependency is avoided); - actual data used in computations (outputs): `d_massDensity` and `d_totalMass`. When `d_inputMassDensity` is modified, it triggers a callback like:; ``` cpp; addUpdateCallback(""updateFromTotalMass"", {&d_inputTotalMass}, [this](const core::DataTracker& ); {; .. /// do the computation; return sofa::core::objectmodel::ComponentState::Valid;; }, {&d_massDensity, &d_totalMass});; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2173#issuecomment-1564102951:148,update,update,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2173#issuecomment-1564102951,2,['update'],"['update', 'updateFromTotalMass']"
Deployability,"Conflict because you removed the files of QGLViewer and https://github.com/sofa-framework/sofa/pull/4844 did edit the CMakefile.; I think you will have to update the CMakefile in the fork of QGLViewer with the content of the PR4844. And an other note about the fork of QGLViewer, I feel a bit conflicted calling the branch `2.8.1` with the sofa modifications inside (calling `sofa_*` macros, etc). I guess this branch should be called `2.8.1_sofa` or something like that",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4840#issuecomment-2268262112:155,update,update,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4840#issuecomment-2268262112,1,['update'],['update']
Deployability,Congrats Lionel for this nice integration PR !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/501#issuecomment-339616673:30,integrat,integration,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/501#issuecomment-339616673,1,['integrat'],['integration']
Deployability,"Corrected again...; This code is pure c++, no need for special assignees.; I let you update your changelog if you want to incorporate this PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-270319148:85,update,update,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-270319148,1,['update'],['update']
Deployability,Could you please manually rebase your branch to the updated upstream/master? Some changes on master prevent GitHub from auto-rebasing.; ```; git checkout newtests_week49; git fetch upstream/master; git rebase upstream/master; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/97#issuecomment-266778341:52,update,updated,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/97#issuecomment-266778341,1,['update'],['updated']
Deployability,Could you share your CMakeCache.txt please @MingshanHe ?; It could be related to your Qt configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1296256287:89,configurat,configuration,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1296256287,1,['configurat'],['configuration']
Deployability,"Could you try downgrading setuptools and wheel?; It sounds a bit like this problem here: https://stackoverflow.com/questions/76129688/why-is-pip-install-gym-failing-with-python-setup-py-egg-info-did-not-run-succ. Even though I am not quite sure, why it complains about `extras_require`, if you do not pass it at all.; Maybe this can give more insights https://github.com/freqtrade/freqtrade/issues/8078. I am currently porting sofa_env to gymnasium, so that problem is only temporary.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757852952:145,install,install-gym-failing-with-python-setup-py-egg-info-did-not-run-succ,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757852952,1,['install'],['install-gym-failing-with-python-setup-py-egg-info-did-not-run-succ']
Deployability,"Dashboard is showing good progress, only one scene crash on ubuntu & centos in an easy to fix issue.; Still one unknown test-failure on centos (but it may be a configuration problem related to LANG).; One test failure on windows is still because this machine does not have libjpeg/libtiff installed (or we need a full build ?). Three are test problem. The big dark spot is now the 26 remaining crashes ? Can someone with MacOS investigate the issues please ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357504599:160,configurat,configuration,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357504599,2,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"Dear @faichele ,. Following the SOFA dev meeting 25/01/2017.; Multi-threading plugin proposed by @faichele. Your new plugin implements a static scheduling for collision detection. The implementation does not require any change of the existing collision components of SOFA. The bounding volume hierarchy methods is parallelized. It should be easy to use. Compared to the approach used in the MultiThreading plugin using the ""work-stealing"" scheduling pattern (https://en.wikipedia.org/wiki/Work_stealing), Fabian's implementation is based on ""conventional"" work-sharing, with a ""round-robin"" assignment of collision pair checks per thread. One extension is the fact that worker threads are persistent: they do not terminate after processing all assigned tasks, and no new threads are spawned when new collision pair check tasks are added to the thread pool. Instead, worker threads enter a ""sleeping"" state to avoid using CPU cycles when no tasks are processed. This avoids unnecessary respawning of threads every 10 to 50 ms, since the collision detection is typically called very often and in quick succession. @faichele , you mentioned it will be released under open-source license and with standalone for beta testing. Tests on potential performance gains remain to do (number of per checks).; Do not hesitate to correct me. In the context of the recent coding sprint, some new feature around multithreading were added in a branch ( https://github.com/sofa-framework/sofa/tree/issofa_multithreading ), not merged yet. This should be discussed and merged at the upcoming STC. @JeremieA , would you agree to prepare a short illustration/explanation of the API changes of your multithreading feature branch?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830:1149,release,released,1149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830,1,['release'],['released']
Deployability,"Dear @michael-barrow . Normally the grayed out entries means that the corresponding data field has the ""readOnly"" flag set, so it is surprising the this behave differently in Modeller & runSofa. Maybe this is caused by some non-initialized variable somewhere in the Modeller, in runSofa or in the Data itself. . When I will have time I will give a lookt at that to be sure it is not in the Data. If it turns out to be a problem specific to the Modeller well...as the Modeller is deprecated and should be replaced by runSofa2 (code it here https://github.com/sofa-framework/SofaQtQuick) I prefer to devote more time to this one :) . Anyhow Michael, thanks again for your investigation, feel free also to update the issue if you notice similar problem. . Regards,; Damien. ; EDIT: I changed my mind, so I changed the comment :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/686#issuecomment-397544653:703,update,update,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/686#issuecomment-397544653,1,['update'],['update']
Deployability,"Dear all, @faichele @fjourdes @JeremieA . Should we include this as a new plugin in SOFA ? How should it be articulated and integrated in SOFA ?; Thanks for your input.; Cheers.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-265508540:124,integrat,integrated,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-265508540,1,['integrat'],['integrated']
Deployability,"Dependencies packages were updated, we are testing it with standard builds.; And then we will launch new checks on this PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-289724146:27,update,updated,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-289724146,1,['update'],['updated']
Deployability,"Dependency tracking between libraries is a very serious issue and the state in Sofa is bad. We are currently mixing system specific management (apt get install someLibs, manual install on windows) all combined with hard copy of other ones in extlibs. . I found https://hackernoon.com/approaches-to-c-dependency-management-or-why-we-built-buckaroo-26049d4646e7 to be an interesting reading to understand a bit more the dependency problem in c/c++. . To improve the Sofa situation are :; - git submodule; - CMake's ExternalProject_add ; - buckaroo. The best is probably buckaroo but, given that it is a big work to use it and we have much higher priority task, CMake ExternalProject_add sound's a good improvement with a reduced cost.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369914314:152,install,install,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369914314,2,['install'],['install']
Deployability,Did you have some time to test my patch @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476541612:34,patch,patch,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476541612,1,['patch'],['patch']
Deployability,Do this means that the meshes loader will not read the textures correctly if the plugin is not loaded ? ; For coherency I thinkg the loader should be transformed into plugin as well with a dependency to the ; CImagePlugin. . Just a small side note... on the CI it seems that to fully function CImage requires imagemagick or graphicsmagick to be installed and available in the path on the machine...is it an annoying dependency ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305157679:345,install,installed,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305157679,1,['install'],['installed']
Deployability,Do you know if another collision pipeline ever existed?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1386645313:33,pipeline,pipeline,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1386645313,1,['pipeline'],['pipeline']
Deployability,"Doing the same as for Eigen, boost is definitely the way to go. Given that I want to stay focused on other tasks I let anyone with free time to do that nicer move. And if no one has time..then I suggest merging the updated version.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1687#issuecomment-754530497:215,update,updated,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1687#issuecomment-754530497,1,['update'],['updated']
Deployability,Draft of a proposition to enforce the API for a clear thread friendly semantics. ; ```cpp; class SOFA_CORE_API DetectionOutputVector; {; public:; ; virtual int acquireAddContact(){}; virtual releaseAddContact(int){}; virtual void addContact(DetectionOutput* detectionOutput){; if(getHasBeenAcquired){ fail }; if(notAcquired) { warn }; ; ...; }. /// ; virtual const DetectionOutput& getContacts(){; if(noToken) return array;; return nullptr; ; }; virtual void releaseGetContact(DetectionOutput& r){; ....; }; };; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965#issuecomment-474772645:191,release,releaseAddContact,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965#issuecomment-474772645,2,['release'],"['releaseAddContact', 'releaseGetContact']"
Deployability,"Eh, let us note that, one is a [tractive force](https://en.wikipedia.org/wiki/Tractive_force), while the other is a [pressure](https://en.wikipedia.org/wiki/Pressure). The force direction of the pressure field will change with respect of the updated surface normal. The force direction of the tractive forcefield won't change.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1303#issuecomment-606616400:242,update,updated,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1303#issuecomment-606616400,1,['update'],['updated']
Deployability,"Error of one test involving topological change : TopologicalChangeProcessor_test.Incise; ```; [ RUN ] TopologicalChangeProcessor_test.Incise; [DEPRECATED] [Sofa_test] Sofa_test & BaseSofa_test are now deprecated classes. To fix this message you should replace their usage by BaseTest, NumericTest or BaseSimulationTest to implement your tests; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1150/mac_clang-3.5_options_release/src/modules/SofaMiscTopology/SofaMiscTopology_test/scenes/IncisionTrianglesProcess.scn; [WARNING] [DiagonalMass(default5)] Negative value of vertexMass vector: vertexMass[357] = -0.138459; [ERROR] [DiagonalMass(default5)] doUpdateInternal: incorrect update from vertexMass; ```. maybe nodes/elements which are removed twice ... @epernod",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1150#issuecomment-534008149:689,update,update,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1150#issuecomment-534008149,1,['update'],['update']
Deployability,"Even in the eventuality that more changes are needed to actually clean the installation of SOFA, these changes still are needed.; So LGTM :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/609#issuecomment-373022322:75,install,installation,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/609#issuecomment-373022322,1,['install'],['installation']
Deployability,"Except it is not !. `install/include/SofaSimulation/sofa/simulation/config.h`; `install/include/SofaFramework/sofa/simulation/simulationcore.h`. **SofaSimulation** include path is only included if I link against **SofaSimulationCommon**, **SofaSimulationTree** or **SofaSimulationGraph**. Here I don't need those targets, but only the **SofaSimulationCore** target.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-541027343:21,install,install,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-541027343,2,['install'],['install']
Deployability,FO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9260,Release,Release,9260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,FO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1628,Release,Release,1628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"First of all, you should try to get rid of the `[WARNING] [ObjectFactory] Class already registered`; It usually means you already loaded a library with the same components inside.; In your case, you have a mixup between your build version and an installed version.; Indeed, you are running **runSofa** from the build (`/home/sergei/Source_code/Sofa_development/sofa/build_release/bin/runSofa`) and SOFA_ROOT is set to `SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install`. Either run from your install (and keep SOFA_ROOT); or set SOFA_ROOT to your build directory.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1110162371:246,install,installed,246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1110162371,3,['install'],"['install', 'installed']"
Deployability,Fix with patch; [SofaNonUniformFem] Remove shadow variable; pr: clean pr: fast merge status: ready; #1874 by maddin200 was merged yesterday • Approved,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1855#issuecomment-788859878:9,patch,patch,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1855#issuecomment-788859878,1,['patch'],['patch']
Deployability,"Fixed in a99443a98fed8052fe1159487d73639a6a6e2624. I finally changed DataFileNameVector that is now a SVector<string>, so be aware its string serialization changed. I made this choice because only OglShader is using DataFileNameVector in sofa-public, so the consequences of this change are small, and at least future usage of DataFileNameVector will be ok.; Of course if your private code is using DataFileNameVector, you have to update it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/21#issuecomment-256926937:430,update,update,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/21#issuecomment-256926937,1,['update'],['update']
Deployability,"Following our discussions:; SimpleDataEngine's update method now looks like this:. ```cpp; void update() final; {; updateAllInputs() // a method that calls `updateIfDirty()` on all inputs: can be overridden, but rarely necessary; DDGNode::cleanDirty() // same as cleanDirty(), but does NOT call m_datatracker->clean() so counters are still valid after; doUpdate() // actual magic; m_datatracker->clean() // cleaning the counters; }; ```. To my understanding, DataTrackerDDGNode's `cleanDirty()` method becomes useless in DataEngines at this point, making the workflow much smoother for the user's impl of `doUpdate()`. I believe there would be no side effects (apart from being BRAKING...) if we would replace `core::DataEngine` with `core::SimpleDataEngine`, and rename all engine's `udpate()` methods to `doUpdate()`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/760#issuecomment-424761403:47,update,update,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/760#issuecomment-424761403,4,['update'],"['update', 'updateAllInputs', 'updateIfDirty']"
Deployability,"For me those 2 components are the ONLY one updated right now. If a topology is **needed** for the good behavior of the component, it should be set using the link, otherwise you end up with unsure behavior.; Removing the warning will just let lazy people continue putting mass in the node without taking attention to what they are doing.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3116#issuecomment-1180079346:43,update,updated,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3116#issuecomment-1180079346,1,['update'],['updated']
Deployability,"For the coherency, I totally agree that mesh loaders should be gathered in a plugin.; As for the dependency, I would just warn the user that if find_package() in CMake does not find CImgPlugin, then texturing will just be disabled. (i.e no REQUIRED flag) ; you could wish to load meshes just for pure mechanical scene. As for the CimgPlugin and CImg, CMake detects if libpng/libjpeg/libtiff are present and enable/disable preprocessor flag directly. ; So for example if libjpeg is not present, the user is informed of it through CMake configuration process, and the ImageFactory does not add the *.jpg format into its supported image list. Finally, I would say that imagemagick dependency is quite annoying, especially for windows users.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305191404:535,configurat,configuration,535,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305191404,1,['configurat'],['configuration']
Deployability,"For the future, the work on improving the SOFA API has to be done to ensure a good initialization / update of components.; A good test would be to run sequentially: `storeResetState()` and `reset()`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1189978414:100,update,update,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1189978414,1,['update'],['update']
Deployability,"From gitter:; ```; initData(data1, callback=myUnion), ; initData(data2, callback=myUnion), ; initData(data3, callback=myUnion), . void myUnion(BaseData* d){ changedData.push_back(d) ; }; bool needUpdate() { return changedData.size() != 0; }; ```. The idea here was to allow users to add different, per data callback function still allowing ; a way to implement a ""centralized"" update. The idea was also to specify in the initData which data are ""cached"" and thus should trigger update/reinit on change.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367266862:377,update,update,377,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367266862,2,['update'],['update']
Deployability,"From what I know, it is supposed to tell if the indices included in the BoxROI must be updated at each time step or not. So it's not the expected behavior.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-257834318:87,update,updated,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-257834318,1,['update'],['updated']
Deployability,Full doc updated in readme: https://github.com/sofa-framework/regression,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/830#issuecomment-440640198:9,update,updated,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/830#issuecomment-440640198,1,['update'],['updated']
Deployability,"Glad to see someone asking question on that topic. Since the release of sofapython3, I'm waiting someone having interest on that topic so we can modernize the prefab's using the added feature of sp3 and experience gained since sofapython2. . Short answers to your questions: ; - should they be located in the SofaPython3 plugin?; It is unclear to me about what you are talking about, prefab are already in SofaPython3. Are you in fact talking about the prefab that are in stlib ? ; If this is the case, it make sense to have prefab in SofaPython3 to demonstrate a ""standard"" way of doing a prefab through ""examples"", there could also have a standard prefab library, but I see no problem in having that in stlib or any other third party plugin. That's said, I don't consider the prefab in stlib mature enough for such move, first, because they are still implemented as they were back to python2 time, and up to now, not a lot of people have expressed interest in changing that to move forward; . - should we create many level of abstractions/prefabs?; From the experience in stlib there is always a trade-off between abstraction and usability and the overhead of modularization. But yes, there is always an interest in being able to build prefab from other prefab to make complex systems. . - definition of current prefabs, e.g. ElasticObject using a UniformMass?; Prefab just means you have an ""all-in-one"" object. There is no more constraint except from that. So it the choice of the one that make a prefab to decide prefabricating ""what"". That's said it is highly desirable to have set of prefabs that shares common structures and idioms so they are interoperable in the same scene. . Additional point:; - the prefabs implementation in SofaPython3 is only partially working and some fix are required; - there is a far too much limited support for prefab in our user interface, if we are going for generalize their use then additional support should be added.(eg: right-click navigating itno prefab s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4206#issuecomment-1740442279:61,release,release,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4206#issuecomment-1740442279,1,['release'],['release']
Deployability,"Glad you like it :-) . But first I need to figure out why it works on our fork but not on this one though :-/ . After that, it would be super sweet to add finer grained GIL release as you suggest, but since we also have the monstro-SofaPython-PR pending I anticipate many merge conflicts, so the plan was to keep this one as small as possible. BTW do we have actual costly or I/O-bound c++ operations exposed in python? And if so, do these happen during simulation or only during scene initialization?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313602996:173,release,release,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313602996,1,['release'],['release']
Deployability,"Good to me, ready!; We finally have a nice update mechanisms for Data in components others than Engines!; Thanks @marques-bruno 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-676025850:43,update,update,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-676025850,1,['update'],['update']
Deployability,"Great contribution, . I fully support any step toward smoother integration of Sofa with Python and this PR is one.; I also like the cleaning & factoring work with stuff like get_base function. . Really minor details: ; In SOFA we have plenty of TODOs forgotten since years that no one is responsible for, without any idea when this was added and when this will be done. To avoid that I suggest replacing things like; ```cpp; // TODO FIXME self is commented; ```; With one with more details; ```cpp; //TODO(mtournier 2017-05-30) Self, is commented there is possibly a problem (if not done in two years, you can remove this comment); ``` ; Or; ```cpp; //DEFECT(mtournier 2017-05-30) Self, is commented there is a problem when...; ``` ; To help general code maintenance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306728456:63,integrat,integration,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306728456,1,['integrat'],['integration']
Deployability,Hand made tracking. By adding a DataTracker to each component and either overload the HandleEvent function or specific overloads from BaseObject(draw/drawVisual/etc...) to check if the tracked data have changed and trigger an update function if this is the case.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367275078:226,update,update,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367275078,1,['update'],['update']
Deployability,Have you checked @alxbilger that it is well unused in InSimo ISSOFA released by @fjourdes ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1994#issuecomment-816058401:68,release,released,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1994#issuecomment-816058401,1,['release'],['released']
Deployability,"Hello ! ; I've read your PR and I am currently compiling it on my side to test the GUI and the Modeler. . Some changes will need to be performed in order to accept your PR : ; 1. You have added some commented code that need to be removed. ; 2. You have expended the namespaces of some files, which is not in accordance with our standard, it is certainly your IDE. But could you please revert those changes ? ; 3. You have set default value to attributes directly in the class declaration, this should be done only in the constructor. ; 4. You have made some breaking changes: for instance, you removed the call to the superinit of ConfigurationSetting. Do you have any justification for that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2097577135:631,Configurat,ConfigurationSetting,631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2097577135,1,['Configurat'],['ConfigurationSetting']
Deployability,Hello @Camille-K and @chhas thanks for very well done and helpfull analysis. . At first sight I would say that this change has nothing to do with the vector3 to vec3 change so it must be removed asap.; I will do that. That says the change is in fact this change was for a separated PR fixing this issue ttps://github.com/sofa-framework/sofa/issues/3384 ; But as the fix was breaking it was not supposed to be integrated that way;,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1339023892:409,integrat,integrated,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1339023892,1,['integrat'],['integrated']
Deployability,"Hello @JeremieA, the current approach about the changelog management is to have a description of the changes in the PR's description so that @guparan & @hugtalbot can easily integrate them into the CHANGELOG.md file in a (more or less :)) weekly basis. . You can add a dedicated CHANGELOG section in the PR description in which there is a summary of the changes and, in case of behavior or API changes, the mecanism used to notify other's and minimal guideline/example on how they should fix their code. You already provided this informations into the comments feeds...but, having that in the comments feed makes them hard to find so it is better if all that is summarized. . EDIT: I just updated the PR description up to my understanding.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311016705:174,integrat,integrate,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311016705,2,"['integrat', 'update']","['integrate', 'updated']"
Deployability,"Hello @alxbilger . Nice PR. . This is outside of the scope of the PR but the use of the very intrusive; ```cpp; if (this->d_componentState.getValue() != sofa::core::objectmodel::ComponentState::Valid); return;; ```; makes me thing one day we will have to do something. The way to go is probably to make clear when the component state validation/update issupposed to happen. The two choice are: ""everytime/everywhere"", update all the time including ""in-between"" timestep or only once at beginning of timestep (with visitor in the BeginAnimationStep event ?).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232:345,update,update,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232,2,['update'],['update']
Deployability,"Hello @alxbilger,. Thank for the careful review, I will integrate that if the feature is considered worth for inclusion. . About the ""addTargetName"" question. . The initial version proposed was using automatic registration of the target name and I can revert back to this one. ; But I proposed a second, explicit, approach for two reasons:; - the automatic mecanism force the deployement of the new approach for all the sofa code components at once... which I was not sure we agreed at this point. ; - the existing mecanism to define the target in ObjectFactory.h is buggy because two identical ObjectFactory::register<XX> compiled in different compilation units produces different getTarget() functions. There was an agreement we should remove it, so this PR was a good opporunity to trying such a thing. . Hope this clarify things. EDIT:; I just found a funny bug related to the automatic registration. Because it rely on the use of a backward macro expansion. There is currently more than 20 components that does not have their target properly set.; Eg: DataDisplay.cpp the code is like that:; ```cpp; #include <sofa/core/ObjectFactory.h>; #include <sofa/defaulttype/VecTypes.h>. #include <SofaOpenglVisual/config.h>; #include <SofaOpenglVisual/DataDisplay.h>; #include <sofa/core/visual/VisualParams.h>. namespace sofa::component::visual::model; {; int DataDisplayClass = core::RegisterObject(""Rendering of meshes colored by data""); .add< DataDisplay >();; }; ```. The problem is that the ```SOFA_TARGET``` macro is used in ```ObjetFactory``` but is actually initialized in ```<SofaOpenglVisual/config.h>```; To fix the code it is needed to move the inclusion of the config.h before the one of ObjectFactory so that RegisterObject behave as expected. ; ```cpp; #include <SofaOpenglVisual/config.h>; #include <sofa/core/ObjectFactory.h>; #include <sofa/defaulttype/VecTypes.h>. #include <SofaOpenglVisual/DataDisplay.h>; #include <sofa/core/visual/VisualParams.h>; ```. Given all that, I'm wonder i",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-982527615:56,integrat,integrate,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-982527615,2,"['deploy', 'integrat']","['deployement', 'integrate']"
Deployability,"Hello @alxbilger,. Thanks for the PR, removing that ""verbose"" looks fine to. ; As a deprecation worklfow I recommand:; - deprecate the data field (as done in the PR); - updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ? ; - in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923:169,update,updates,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923,1,['update'],['updates']
Deployability,"Hello @epernod,. thank for the PR. I strongly support moving toward removing deprecated stuff in our code base (what is done in the PR) . Maybe we could just keep the old deprecated name with something like:; ```; class Base {; [[""this is deprecated...don't use it as it does not work any more...to update your code see the migration documentation in PR#1358""]]; DeprecatedAndRemoved m_componentstate; ; }; ``` ; Existing code will stop compiling forcing anyone to update but ppl will be able to understand easily what to do.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-624500753:299,update,update,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-624500753,2,['update'],['update']
Deployability,"Hello @flm8620 . It is very interesting, I didn't even knew that stuff in a pair of "" "" could cause compilation problem. ; I'm also surprised that our Continuous integration system is compiling sofa with VS2015 but didn't reported a problem. Maybe something related with the language you use on your system ? . Anyway, thank you very much for your report. If you have time maybe you can submit a pull-request to fix that otherwise I will do it. . Regards,",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/323#issuecomment-313322372:151,Continuous,Continuous,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/323#issuecomment-313322372,2,"['Continuous', 'integrat']","['Continuous', 'integration']"
Deployability,"Hello @jjcasmar, . thanks for reporting an issue. . My first guess is that this is not related to sofapython3 but more on the design of MechanicalObject that does not update the different data fields (position, rest_position, etc) in a coherent manner. ; I think that the recent PR made by @marques-bruno try to fix that: https://github.com/sofa-framework/sofa/pulls . Damien",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1517#issuecomment-703699909:167,update,update,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1517#issuecomment-703699909,1,['update'],['update']
Deployability,"Hello @rodriguesvinay ,. It seems it comes from the fact that Qt could not connect to the display (`Warning [Qt] could not connect to display`).; And xcb is linked to X11, so I think your docker configuration cannot connect to your X server (if existing).; Whats your system you are trying to launch the docker on ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315400680:195,configurat,configuration,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315400680,1,['configurat'],['configuration']
Deployability,"Hello @zhanglepy, I am really sorry but this release is not supported anymore. This means that not only we don't compile it anymore but also any other issue you'll face when using it will be resolved as 'This is not supported anymore'. If new version are released every 6 months it is because we are fixing such issue commit after commit, so if you face anything in this old version, it is certainly already fixed in recent releases... So my first advice would be to update SOFA and try to compile Optimus with the new SOFA, this will be cumbersome for sure, but at the end, you'll get better support. If Optimus is not up to date it is because no one is using it since this release. Anyway, I'll quickly try to compile it on my computer. I won't promise anything, if the issue takes too much time I'll certainly not try to fix it for this old release. I'll keep you updated !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4941#issuecomment-2311876875:45,release,release,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4941#issuecomment-2311876875,7,"['release', 'update']","['release', 'released', 'releases', 'update', 'updated']"
Deployability,"Hello Erik,. Sorry to reply late... the idea is to have something like that:; ```cpp; class DeprecatedAndRemoved {};; ```; Then in Base you can:; ```cpp; class Base; {; ///....; [[deprecated(""m_componentstate was renamed to d_componentState in PR#1358. Please upgrade your code"")]]; DeprecatedAnremove & m_componentstate ; . [[deprecated(""d_componentstate was renamed to d_componentState in PR#1358. Please upgrade your code"")]]; DeprecatedAnremove & d_componentstate ; ; };; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-644716475:260,upgrade,upgrade,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-644716475,2,['upgrade'],['upgrade']
Deployability,Hello Erwan & @guparan . Was zmq installed on the CI ? ; I installed it on centos3 and ubuntu but not on macos & windows. ; It seems there is also a dependency on liboscpack that also needs to be installed Am I wrong ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-355120307:33,install,installed,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-355120307,3,['install'],['installed']
Deployability,"Hello Eulalie,. - `isRequired()` should be true by default [OK]; - `hasDefaultValue()` should be true by default as well [OK]; - `setRequired(false)` should also change things so that `hasDefaultValue()` returns false ; To me this is independant; - current `setRequired(true)` should be replaced by `setHasDefaultValue(false)` or something like that... ; Same here, the two things are separated I don't see why we should couple them. . - in BaseObject::init() print a warning/error message...; I was more thinking for `if (data->isRequired() && !(data->hasDefaultValue() || data->isSet()) )`; So the message prints if the field is required (i.e not optional) and there is neither a default value nor a user provided data. . - finally update the GUI to handle `hasDefaultValue()` and display an empty field if it returns false; actually in my tests I tried with a ""light gray text"" showing something like: ""<optional, type to set>""; ; I think one PR could be done to implement the described behavior in Data.h including tests for then ; then a second one update the runSofa widgets so they can take profit of that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767133475:734,update,update,734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767133475,2,['update'],['update']
Deployability,"Hello François, . Here is a summary of my current understanding of your comments. ; It seems that you want to:; 1 - cut the dependency to SofaTest; 2 - have a clear separation between unittest vs functionaltest; 3 - cut the dependency to SofaFramework (ie not having the test inheriting from SofaFramework/BaseTest or something like that) for the unittests. . Initially this PR was only about -1- cutting the dependency to SofaTest. My thinking is that the SofaTest dependency is a major problem for everyone using the master branch of sofa because of the high impact on code coupling. . About -2- Following your remarks I'm in favor of improving a more clear separation between unit-test and functional test but as this is something new and maybe this should discussed that in the ""issues"" section of github instead of inside a specific PR. . About -3- cutting the dependency to SofaFramework. This is something that was never discussed before and worse than that, up to now the general consensus that, as we are in Sofa, we should inherit from a single BaseTest that install all the may be needed to do the test. A good reason for this scenario is nothing related to Scene/Simulation management but because BaseTest provides a default handler for EXPECT_MSG_EMIT/NOEMIT. Of course if your code is not using at all those elements, then you should feel free to use gtest. . As said in previous comment compared to the current Sofa code base I would be very happy to have -1- and -2- done. . It seems that -3- is not a big deal for people using the CMakelists.txt from Sofa but it may be of importance for your specific workflow in which, if I understand your previous answers, you integrate unittest as compilation failure. Maybe you can provide us more details on your workflow so that we can see the drawback of having the tests written in SofaFramework to be inheriting from a BaseTest (which is also defined in SofaFramework). Damien.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338697814:1069,install,install,1069,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338697814,2,"['install', 'integrat']","['install', 'integrate']"
Deployability,"Hello Hugo, . GG for this PR. ; As you announced it, this PR is severaly breaking...either at API level as well as in the user interface (as it breaks users scenes). You provide a script to update scene but it is only covering .scn (not .pyscn or .psl) so to me we need other ways to warns user how to manually update their scene. In the past we were overriding the 'parse' method for each object that have data field's name change and found the solution very nice as it 1) warn user to update their scene, 2) provide a minimal compatibility layer if they don't. . Example of what we did in OglLabel: ; ```cpp; void OglLabel::parse(BaseObjectDescription *arg); {; // BACKWARD COMPATIBILITY April 2017; const char* value = arg->getAttribute(""color"") ;; if(value==nullptr || strcmp(value, ""contrast"")){; VisualModel::parse(arg);; return ;; }. arg->setAttribute(""selectContrastingColor"", ""true"");; arg->removeAttribute(""color"") ;. VisualModel::parse(arg);. /// A send the message after the parsing of the base class so that the ""name"" of the component; /// is correctly reported in the message.; msg_deprecated() << ""Attribute color='contrast' is deprecated since Sofa 17.06. "" << msgendl; << ""Using deprecated attributes may result in lower performance or un-expected behaviors"" << msgendl; << ""To remove this message you need to update your scene by replacing color='contrast' with ""; "" selectConstrastingColor='true'"" ;; }; ```. Now about the API breaks....I will try your branch on top of our plugins to see if it compile or not.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637#issuecomment-392199041:190,update,update,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637#issuecomment-392199041,4,['update'],['update']
Deployability,"Hello Jean-Nicolas,. Thank you for your PR. ; I think we already activate c++11 on all compilers. About the c++ level to use. Guillaume suggest to support the last two version of MSVC. When MSVC 2019 will be release we will switch to something close to c++17.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/908#issuecomment-458896804:208,release,release,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/908#issuecomment-458896804,1,['release'],['release']
Deployability,"Hello Olivier,. As said by Antoine Furetière in the the XVII century... it is the small PRs that make the big release.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1031#issuecomment-490919768:110,release,release,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1031#issuecomment-490919768,1,['release'],['release']
Deployability,"Hello guys! Is there any news regarding the updated features? @marques-bruno : Can you make a small update to the PR with some examples for the functionality:. - Normal type inheritance (PSDE Input type is inherited from existing component); - ""Forwarded"" type inheritance (PSDE Output type is inherited from a component linking to it). I'll discuss with Damien about the forwarded inheritance mechanism to verify that we are on the right track.Then, after checking the PR with examples, we can see the next steps more clearly, i think.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406574236:44,update,updated,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406574236,2,['update'],"['update', 'updated']"
Deployability,"Hello! ; Thanks for reporting the issue; I've not seen such error during my SOFA compilations and I'm not sure it is CUDA related...; I'll keep an eye out when configuring a new PC for an intern on Monday 💻 . @valeryozenne, I'd like to ask just to be sure.; Did you install the libraries needed for SOFA Core (as shown [here](https://www.sofa-framework.org/community/doc/getting-started/build/linux/)):; ```; sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev; ```; There might be something off with`libglew-dev` in special since CMake is looking for it in a CUDA samples folder",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786798561:266,install,install,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786798561,2,['install'],['install']
Deployability,"Hello!; It seems your issue has just been fixed in the latest merged PR (#2065).; So you should either update your master branch (if you are following the master), or cherry-pick the change if not.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2075#issuecomment-837963417:103,update,update,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075#issuecomment-837963417,1,['update'],['update']
Deployability,"Hello, . This is the first I'm installing sofa so I might I forget something. But the libraries below have been installed. ; sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev . Don't hesitate to tell if need precision on my paltform, driver, etc...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786803927:31,install,installing,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786803927,3,['install'],"['install', 'installed', 'installing']"
Deployability,"Hello, ; yes sorry I messed up with my git client.; I cherry picked the right modifications, but I integrated many older commits somehow.; I guess we can close this PR, and pull Matthieu's one instead.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/76#issuecomment-263826376:99,integrat,integrated,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/76#issuecomment-263826376,1,['integrat'],['integrated']
Deployability,"Hello, I tried on a MBA M1, macOS 11.3.1 and ; ```shell ; brew list --versions qt5; qt@5 5.15.2; ```; and the 3D viewport is displaying the expected scene.; Maybe the 11.3 update fixed few things about OpenGL ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2028#issuecomment-833487148:172,update,update,172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028#issuecomment-833487148,1,['update'],['update']
Deployability,"Hello, it could also mean that one of CGALPlugin's dll dependencies were not found as well (namely gmp or mpfr).; Add [Where your cgal install is]\auxiliary\gmp\lib to your system PATH.; Or copy paste those dlls alongside CGALPlugin.dll (not recommended)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402#issuecomment-636457829:135,install,install,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402#issuecomment-636457829,1,['install'],['install']
Deployability,"Hello,. A simple [blame](https://github.com/sofa-framework/sofa/blame/25f245b2383a86f097cabdea13697aa42665568e/modules/SofaConstraint/BilateralInteractionConstraint.cpp) shows the 2 commits where these values where last set:; https://github.com/sofa-framework/sofa/commit/bb99399cba47a95301025531577c2e3ac3f728ab; https://github.com/sofa-framework/sofa/commit/8b294f75884a0216ce26f5457b8689da57dd081a. They were done for a PhD work, tuning for specific cases but without giving real reasons in the log. So this is not something that was really meant to be preserved like that, indeed it does not make sense that the value is much higher for double that floats. But the actual refactoring that is needed is to expose this tolerance as a Data instead of hiding it within the code itself, so that it can be tuning within the simulations that require it instead of requiring a patch within Sofa. Ideally the value in the Data should preserve the current behaviour in order not to break existing scenes, possibly with the isRequired flag set such that others will know that they should set the value specifically instead of relying on the previously hidden and inconsistent default. Jeremie.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/45#issuecomment-257955683:873,patch,patch,873,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/45#issuecomment-257955683,1,['patch'],['patch']
Deployability,"Hello,. Before I explain the bug, let me give a bit of context (it is a bit long, but I hope it is useful ;)). The point of this change was to make it transparent which topology is used by which state, and allow for correct initialization and most importantly topological changes propagation. One issue with the initial implementation, associating a state to the first topology found in its parents and then ignoring it if it is not in the same context (hopefully in all codes using state->m_topology, but who checked?), is that this make it impossible to share the same topology (and topological changes) with multiple states in different (children) nodes. One such example is when you use an IdentityMapping (or a Rigid <-> Vec3 mapping or any other mapping that produce the same number of outputs as its inputs), previously to get correct topology association and changes propagation you would need to replicate the topology (and the topological mappings) with a topology both before and after the mapping (but beware if they end up with different sizes, or updated in the wrong order...). With our changes, there is a clear(er) method BaseContext::getActiveMeshTopology() that you can call from any context and will give you the topology that is relevant for this context, i.e. either the topology at this exact node, or from a parent node but only if there is no mapping in between (or if there are only mappings whose sameTopology() method returns true). Using this method, state->l_topology is initialized (and you can inspect its result in the GUI), and if it is not NULL it will be used by all computations for the state without extra hidden checks. Now back to this bug, the last issue here was that the tested mapping (TetrahedronVolumeMapping) was not preserving the topology, but its output state was somehow linked to its input topology. The solution is not to go back to the old (broken) behavior, but instead to understand what is the actual root cause here. Theoretically, if the logi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-335477201:1061,update,updated,1061,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-335477201,1,['update'],['updated']
Deployability,"Hello,. Here are a few remarks and suggestions regarding this topic:. 1. I would be wary about relying on performance measurements from a blog post that is 8 years old and does not mention the exact platform and compilers used. Thread Local Storage (TLS) is highly dependent on OS, ABI, compiler, flags. Here is for instance a quick test using compiler explorer: https://godbolt.org/z/6ObfHR.; 2. one usage requiring ExecParams to have a thread-local storage was to be able to do asynchronous loops (mainly simulation and rendering) with full access to the scene graph without copies, by using copy-on-write for large Data and having each thread be assigned a ""version"" (called ""aspect"" per the published work that was used). See the MultithreadGUI for an example of this mechanism.; 3. As far as I know, all asynchronous/external rendering engines integrations that are used with Sofa relied instead on a design where the Sofa scene graph is not exposed but only visual meshes (based on SofaPhysicsAPI), therefore this feature was never enabled/tested in real applications so it can make sense to remove it.; 4. It would be interesting to measure if there are any performance gained from just removing the TLS qualifier (as done in PR #1129). I expect it to not be measurable, but performances can be surprising, which is why any optimization efforts should measure before and after ;); 5. If the TLS part of ExecParams is removed, then you should also remove everything that depends on it: MultithreadGUI, ExecParams::threadID, aspectID, AspectPool, *AspectVisitor, DDGNode::currentAspect()/copyAspect()/..., and all the aspect-related features in Data and Link. Otherwise all these code will be silently broken by the change.; 6. Note that this also makes ExecParams itself a bit pointless. The initial rational was that this provides a thread-safe way to set parameters controlling all codes in such a way that even if it is not explicitly passed in to all API calls, it can be queried with ExecPa",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748:849,integrat,integrations,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748,1,['integrat'],['integrations']
Deployability,"Hello,. We had a very similar problem in a slightly different context (relying on python virtualenv on Linux).; The root cause was that the multiarray native lib is apparently expecting to be run from an executable that already export the python API symbols, either from the executable itself, or with libpython loaded with the RTLD_GLOBAL flag. So the solution on Linux (found by @Ngautier) was to add a call to `dlopen(""<LIBPYTHONSONAME>"", RTLD_LAZY | RTLD_GLOBAL)` before initializing the embedded python interpreter (replacing LIBPYTHONSONAME by the internal name of the python library, such as `libpython2.7.so.1.0`). For some reason, this was only an issue if not using the default system-installed python environment (maybe something similar is done automatically in this case). On mac I don't know if the root cause is the same (it could be determined by looking if mutliarray.so does indeed have undefined symbols, using `otool` or similar), and if a similar solution would fix it. But maybe it can help ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-409518620:695,install,installed,695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-409518620,1,['install'],['installed']
Deployability,"Hello @alxbilger,. Thanks for the PR. . I looked at the implementation and I'm not sure the Observer/Observable mechanism is needed.; At current time is seem to be used to notify that, when a mass change, the component using the mass need to be updated. . Tracking component and data changes can already be done using the Directed Dependency Graph (DDG) mechanisms. . When I want a component (B) to track component (A) and detect it changes I connect A.componentState (the observable) by adding B as a DDG output of A.componentState (so B is the obsever). By using the DDG machinery you can have the choice of when the updates is done... when A.componentState is changed or when B is needed ... (thanks the lazy DDG update mechanism). Finally if using the DDG it too heavy, it is also possible to use the DataTracker, this allows to detect data change (eg: A.componentState has changed) when you need to invalidate the cache.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4625#issuecomment-2042182871:245,update,updated,245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625#issuecomment-2042182871,3,['update'],"['update', 'updated', 'updates']"
Deployability,"Here all what I am making sure is that, if no value is given to min and max then:; - you compute them from the mesh info (2x2x2); - you compute/update the BB including the safety margin. i.e. min and max are not directly used to compute the BBox to avoid the shifting effect",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/308#issuecomment-355937944:144,update,update,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/308#issuecomment-355937944,1,['update'],['update']
Deployability,"Here are binaries of this PR to test:; [Linux binaries](https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/547/CI_CONFIG=ubuntu_gcc-7,CI_TYPE=release/artifact/build/SOFA_v20.06.99_Linux.zip); [Windows binaries](https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/547/CI_CONFIG=windows10_vs-2017,CI_TYPE=release/artifact/build/SOFA_v20.06.99_Win64.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1570#issuecomment-718797548:139,release,release,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1570#issuecomment-718797548,2,['release'],['release']
Deployability,"Here is a first version of a MagicEngine in python. ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-; from MagicEngine import *; ; def myupdate(a, b, c): ; """"""This is so cute to have a single point documentation in our code""""""; return a + b + c; ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'). MagicEngine(rootNode, myupdate, a=1.0, b=2.0, c=3.0); ```. With the following in MagicEngine.py:; ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-. import Sofa; import os; import inspect; ; class MagicEngine(Sofa.PythonScriptDataEngine):; def __init__(self, node, fct, **kwargs):; self.addNewData(""Description"", ""Properties"", """", ""s"", inspect.getdoc(fct)) . argspec = inspect.getargspec(fct); for arg in argspec.args:; argval = None; if arg in kwargs:; argval = kwargs[arg] ; elif argspec.defaults != None and arg in argspec.defaults:; argval = argspec.defaults[arg] ; ; if argval != None: ; self.addNewInput(arg, datatype=""f"", value=argval) ; else:; Sofa.msg_error(""Unable to create an input for parameter: ""+str(arg)) ; ; self.lastreturnedvalue = False ; self.name = str(fct) ; self.params = argspec.args; self.fct=fct; ; def update(self):; calld = []; for param in self.params: ; calld.append(self.findData(param).value) ; ; tmp = self.fct(*calld) ; if not self.lastreturnedvalue:; self.addNewOutput(""output"", datatype=""f"", value=tmp) ; self.lastreturnedvalue = True; self.findData(""output"").value = tmp; ```. Basically it creates MagicEngine engine that is a DataEngine, pass the function and argument to it. ; In the constructor of this MagicEngine the function is introspected to add the needed inputs. As there is no type inference I used fload but this should be easy to add. The output is a bit tricky and I don't like it...as it requires the MagicEngine to be executed a least one time before to work. I will try a different approach where we can specify manually the types of intput & output.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380451603:1204,update,update,1204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380451603,1,['update'],['update']
Deployability,Here is a rebased + cleaned + updated version without CGoGN: https://github.com/sofa-framework/sofa/compare/master...guparan:cmtopology_rebased_cleaned. To be mixed with this extracted CGoGN: https://github.com/guparan/sofa_cgogn. Please tell me if it works :-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-404463333:30,update,updated,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-404463333,1,['update'],['updated']
Deployability,"Here is an update on our efforts to perform an automatic parallelization on Sofa. **Parallelism at the Visitor level :** . **General idea :**; Some visitors execute functions on multiple components (example : BaseMechanicalVisitor launches MechanicalVisitor::fwdForceField on a list of BaseForceFields).; The implementation of the function can vary depending on the actual type of the component. Usually, a function executing on different components will access the same data vectors while executing on each component (for example MechanicalVisitor::fwdForceField, calls addForce or addDForce on each component, each one modifying the force vector).; We define a **Parallel Section** as the execution of a given visitor function on a list of components.; We define a **Task** as the execution of a visitor function on a component. Therefore a parallel section is decomposed in an ordered list of tasks.; Each task accesses a given set of vectors (read or write accesses), and a given set of locations in these vectors. We can split the tasks in **phases** such that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:11,update,update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,1,['update'],['update']
Deployability,"Here is an updated version: ; [chainAll2.txt](https://github.com/sofa-framework/sofa/files/2900999/chainAll2.txt); Three main changes:; - decrease the damping,; - set a total mass to the rigid tori; - decrease the time step",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/900#issuecomment-467039133:11,update,updated,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/900#issuecomment-467039133,1,['update'],['updated']
Deployability,"Here you go.; It may be better to check if FFMPEG and X11 are installed before enabling the plugin.; EDIT: I'll add an `if` block to enable only on Linux, my bad.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-358017590:62,install,installed,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-358017590,1,['install'],['installed']
Deployability,"Hey @AlbanOdot ,. From the [documentation](https://www.sofa-framework.org/community/doc/getting-started/build/linux/#core-required):. > - Boost (>= 1.65.1); `sudo apt install libboost-all-dev`. So you need to install **libboost-all-dev** and not just **libboost-dev**. J-N",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462#issuecomment-680828677:167,install,install,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462#issuecomment-680828677,2,['install'],['install']
Deployability,Hey @EmDash00 your error shows that you do not properly link with csparse.; Do you have it installed?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419#issuecomment-655380222:91,install,installed,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419#issuecomment-655380222,1,['install'],['installed']
Deployability,"Hey @alxbilger , thanks for this benchmark. My guest would be that solving one big system (the merge of both objects) is slower than solving to smaller system. However, solving two system independently should, I think, produce incorrect results as . 1. You are applying the interactions (for example, contact forces) at different solving states. For example, the first object is solved, its node positions are updated to the step t+1. Collisions are then computed. But the state of the second object is still at the time step t. Oscillation will therefore probably happen and the convergence will be delayed. ; 2. In addition, the solution state with both objects merged under the same system takes into account the interaction between the two objects. For example, when both objects are merged into a same system, you can create entries inside the system matrix to create a relationship between a node in the first object and a node in the second object. This is not possible when the two objects are separated. **TLDR**: Solving two objects independently is faster than solving one big system containing both objects. However it will take longer to converge to a steady solution (in number of steps), and even probably converge to an incorrect solution.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842947771:410,update,updated,410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842947771,1,['update'],['updated']
Deployability,"Hey @alxbilger . Taking another look at this issue, and I realized that :; - contacts are created as SUB-nodes and connected to the associated object though a mapping; - then (if `response='default'` meaning Penality approach is chosen for the ContactResponse), a PenalityContactForceField is added in the root node with a BarycentricPenalityContact which distributes the spring forces on the SUB-node MechanicalObject. As stiffness matrices (implicit force contributions) are not propagated through mappings (yet), only the addForce is used and the need of a AddKToMatrix never arose. I tried an implementation shortly but I would need to test it which is yet not possible. Hope this updates this issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-908068228:685,update,updates,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-908068228,1,['update'],['updates']
Deployability,Hey @fbridault @dweckmann ; I am writing again on this issue since our Technical Committee is approaching and its associated coding spring (29-30th April). Any update on your side?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-614735966:160,update,update,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-614735966,1,['update'],['update']
Deployability,"Hey @guparan ,. I would merge both at the same time (automatically), the trigger being the SOFA merge:. 4. ~~SP3 PR is merged first (to ensure that SOFA/master always succeeds on SOFA CI)~~ ; SOFA PR is manually merged ; 5. SP3 PR is merged automatically (we can setup a workflow for this, or if you have something ready on the CI); 6. All the other SOFA PRs should be fine. Just to emphasis the problem with the alternative (hard-coded commit number instead of a branch):; 1. PRs in SP3 can be merged in the master branch before the correction SP3 PR is merged , which means that SOFA will point to an older version of SP3, example:; a. Bob opens a SOFA PR that breaks SP3; b. Bob opens a SP3 PR with the correction; c. Paul comes in an open a SP3 PR; d. Paul's PR is accepted and merged; e. Paul opens a SOFA PR to update the commit number; f. Paul's PR get accepted and merged; g. Bob's PR get accepted and merged; f. SOFA commit number is now pointing to Bob's SP3 branch number, which misses Paul's commit; 2. How do you deal with squash/rebase merges in SP3? Will your script use the merged commit number? Or the latest commit number of the SP3 PR's branch?; 3. How do you deal with release branches? Will we need to manually edit the commit number for each new commit in release branches?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821232724:817,update,update,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821232724,3,"['release', 'update']","['release', 'update']"
Deployability,"Hey @guparan ,. Thanks a lot for this. I've tested it very quickly. In order to use this for SofaPython3, we would need to be able to specify where to install some targets and files relative to the install prefix. For example, the binding libraries should be installed in `lib/python3/site-packages/...` . Here is the installation tree that we would need for SofaPython3:; ```; .; ├── bin; │   ├── Bindings.Modules.Tests; │   ├── Bindings.SofaRuntime.Tests; │   ├── Bindings.Sofa.Tests; │   ├── Bindings.SofaTypes.Tests; │   ├── Components; │   │   └── Components.py; │   ├── Core; │   │   ├── BaseData.py; │   │   ├── BaseLink.py; │   │   ├── BaseObject.py; │   │   ├── Base.py; │   │   ├── Controller.py; │   │   ├── DataEngine.py; │   │   ├── ForceField.py; │   │   ├── ForceField.py.orig; │   │   ├── MyRestShapeForceField.py; │   │   └── PythonRestShapeForceField.py; │   ├── Helper; │   │   ├── FileRepository.py; │   │   └── Message.py; │   ├── pyfiles; │   │   └── vector_test.py; │   ├── Simulation; │   │   ├── Node.py; │   │   └── Simulation.py; │   ├── SofaDeformable; │   │   ├── LinearSpring.py; │   │   └── SpringForceField.py; │   ├── tests; │   │   └── Base.py; │   └── Types; │   ├── BoundingBox.py; │   ├── RGBAColor.py; │   └── Vec3.py; ├── include; │   └── SofaPython3; │   ├── config.h; │   ├── DataCache.h; │   ├── DataHelper.h; │   ├── initModule.h; │   ├── Prefab.h; │   ├── PythonEnvironment.h; │   ├── PythonFactory.h; │   ├── PythonTestExtractor.h; │   ├── PythonTest.h; │   ├── SceneLoaderPY3.h; │   ├── Sofa; │   │   ├── Components; │   │   │   └── Submodule_Components.h; │   │   ├── Core; │   │   │   ├── Binding_BaseCamera_doc.h; │   │   │   ├── Binding_BaseCamera.h; │   │   │   ├── Binding_BaseContext.h; │   │   │   ├── Binding_BaseData_doc.h; │   │   │   ├── Binding_BaseData.h; │   │   │   ├── Binding_Base_doc.h; │   │   │   ├── Binding_Base.h; │   │   │   ├── Binding_BaseLink_doc.h; │   │   │   ├── Binding_BaseLink.h; │   │   │   ├── Binding_BaseObject_doc.h;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592:151,install,install,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592,4,['install'],"['install', 'installation', 'installed']"
Deployability,"Hey @hugtalbot , would you mind elaborate a little bit more on this? What was the problem? . We definitely need some doc on those integrating factors...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-625124639:130,integrat,integrating,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-625124639,1,['integrat'],['integrating']
Deployability,"Hey @hugtalbot,. As I remember, the communication plugin is imo ready to merge. ; It still need some polish like, code cleaning, avoid some useless copy, use some boost things ... but it´s working. . On CI, AFAIK only the core communication plugin is compiled. We don´t want to install libs for all the protocols implemented. What you need to know is, there is still pending PR (https://github.com/SofaDefrost/sofa/pull/20 with another one) for this plugin. But they are not working and I don´t have any news from the contributor (Rupesh gsoc).; This is not a big deal because the content of the PR is an addon for the plugin Qt serial protocol. Let me know if you have any question :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-441108533:278,install,install,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-441108533,1,['install'],['install']
Deployability,"Hey @m4n4n,. Thanks for your updated PR!. Did you check this remark from @tgaugry on your previous PR?; > I kinda see what you went through. The argument parser isn't that intuitive TBO.; > ; > I recently had to do a similar task, so if you still want the ""infinite"" flag, you can check this [line](https://github.com/tgaugry/sofa/commit/326f4f4c8fea61783e40225cb4abac648e569922#diff-5904f9a1380b53f6de2fdc644b6b1a48R112) and the `parseSkipOption` function in the same file. ; > Maybe this would solve your problem ?. It would indeed be better to not allow a `-1` value to the `n` option but instead to create a new option like `-infinite`. It doesn't have to be a value of the `n` option ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-375686179:29,update,updated,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-375686179,1,['update'],['updated']
Deployability,"Hey @marques-bruno, any update on this issue?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/581#issuecomment-374878459:24,update,update,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/581#issuecomment-374878459,1,['update'],['update']
Deployability,"Hey @marques-bruno,. I think the idea was to have a collection of ""DDGLinks"" seen as one data. For example:. ```; // Inputs; DDGLink<MechanicalObject> d_mechanical_object; // One mechanical object; DDGLinks<BaseForceField> d_forcefields; // Multiple forcefields acting on the MO; DDGLink<BaseMass> d_mass; // One mass acting on the MO. // Outputs; Data<VecCoord> d_solution;; ```. Here we want to update the solution vector if either the MO, one of the forcefields, or the mass has changed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1228#issuecomment-561085994:397,update,update,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1228#issuecomment-561085994,1,['update'],['update']
Deployability,"Hey @vr3dvr !; Any news? keep us updated, we will have to temporarily set it as wip.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-689419989:33,update,updated,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-689419989,1,['update'],['updated']
Deployability,"Heyy @fredroy . Thanks for your reply and i adopt a similar solution: **multiprocessing** in the python library, which basically allows two python processes to communicate through the **sockets**. And it works well for now, not so perfect as getting the value from the device directly tho. And for sure I will also give SOFA 20 with python3 a try. I will update this post at that time. Thanks again for your help! You are so great! ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068976789:355,update,update,355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068976789,1,['update'],['update']
Deployability,"Heyy @fredroy ; Yes, you got it correctly. I am trying to read a haptic device written in py2.7 into sofapython controller in SOFA.; And thanks for your advice, I just tried **run as admin** when execute the runSofa.exe, and it just does not work. So usually the SofaPython could be compatible with other python packages installed from pip, right?; I think I will try to debug into my python drivers and for now I am going to run these two python processes at the same time(1. a normal python console and 2. a sofapython one), and probably let the 1. console write into a .np array and let the 2. process read continuously read the array to pass the msg from haptic device. Will it work in sense of real-time property in your opinios? @fredroy Or do you have a better idea about such temporal solution.; Thanks any way !!!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068043598:321,install,installed,321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068043598,2,"['continuous', 'install']","['continuously', 'installed']"
Deployability,"Hi , ; would be fine with me if your guys could provide the patch.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-527578294:60,patch,patch,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-527578294,1,['patch'],['patch']
Deployability,"Hi @ErwanDouaille . Could you update us about the status of this PR shall it be pursued, cleaned and merged ?; Cheers Hugo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-384214596:30,update,update,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-384214596,1,['update'],['update']
Deployability,Hi @ErwanDouaille . How are you doing? It's been some time since your last update. Any news on the Communication plugin?; @tgaugry did you use this work on Communication for your own purposes ?. Best!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-440994462:75,update,update,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-440994462,1,['update'],['update']
Deployability,"Hi @EulalieCoevoet . Thanks for the PR.; You mentioned in #1534 that ""The problem I have is that the component is not working with the update callback mechanism"". What was the update process you were expecting? Could you detail what you meant by not working please?. After this PR we will take a look at the MeshGmsh one.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713089550:135,update,update,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713089550,2,['update'],['update']
Deployability,"Hi @Gabriele111,; How do you install gym? `pip install gym==0.21.0`?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757826356:29,install,install,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757826356,2,['install'],['install']
Deployability,Hi @JavadZallaghi ; You are here on the GitHub issues. GitHub and its issues are made for developers. . I see that you already have an open topic on the [forum](https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/). We will provide a reply there as soon as possible. Best wishes.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1943#issuecomment-803979219:250,install,installation,250,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1943#issuecomment-803979219,1,['install'],['installation']
Deployability,"Hi @Neustradamus,. Thank you a lot for taking time to report the issue. . I think @guparan is the one to handle this issue.; @guparan any update ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-451481277:138,update,update,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-451481277,1,['update'],['update']
Deployability,"Hi @Neustradamus,; Shipping Python with SOFA binaries is not a priority for now but I will definitely improve the installation instructions to make it very clear that users have to set their Python env by themselves and how to do it.; But actually I may have closed this one too quickly, the solution you proposed should be implemented. Let's re-open and put a more generic title. No promise on when I will tackle this though.; Do not hesitate to help in any way :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-486572133:114,install,installation,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-486572133,1,['install'],['installation']
Deployability,"Hi @ScheiklP ,. `MeshROI` is a SOFA engine, it inherite from ... `DataEngine` I think (without looking at the code).; The design of the the engine is to call the method `DataEngine::update` when one of the output Data is accessed and if any of the input Data is dirty. Meaning we need to recompute the output from new input value. . But as several mechanisms are required for this design, the `update `method is calling the method `doUpdate `which has to be implemented in each specific engine in middle of other code. So it is normal you don't see call of doUpdate inside the MeshRoi. DO you have a scenario which doesn't work as expected?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053:182,update,update,182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053,2,['update'],['update']
Deployability,"Hi @ScheiklP, sorry to bother you again. I am trying to install sofa from source so that i can use a =>3.9 version of python as you suggested. I'm facing some problems though. when i compile sofa with cmake i get this error ; 'Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.18"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package)'",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761148804:56,install,install,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761148804,1,['install'],['install']
Deployability,"Hi @ScheiklP, thank you for your reply. I did as you said and now it seems to find sofa module and python. But it gives another error i can't solve, which happens when it tries to install gym and it says '..error in gym setup command: 'extras_require' must be a dictionary whose values are strings or lists of strings containing valid project/version requirement specifiers. '",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757820378:180,install,install,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757820378,1,['install'],['install']
Deployability,"Hi @Sihtralad, . thank you for reporting the issue. . We made some fixes for the RoboSoft conference; But in general we don't backport the fixes to old releases (the 21.12 is a past release). . Could you confirm this problem is still there with the master branches of Sofa+STLIB+SoftRobot ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2754#issuecomment-1117091916:152,release,releases,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2754#issuecomment-1117091916,2,['release'],"['release', 'releases']"
Deployability,"Hi @WilkGardariki, sorry for the late answer. The dependency packs have been updated.; Thank you for the report !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/295#issuecomment-312637459:77,update,updated,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/295#issuecomment-312637459,1,['update'],['updated']
Deployability,"Hi @alxbilger ,; quick update: The main reason behind the instability is the `nbVirtualFinerLevels` value.; If we set that to `1` -> no problem. Also for strictly convex objects, it is also no problem. But I would still love to get deformation through collision working... ; Any idea on what would have to be done there?. Cheers,; Paul",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2007827978:23,update,update,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2007827978,1,['update'],['update']
Deployability,"Hi @alxbilger @courtecuisse . We understand what this function was used for in BaseFF. However, the API for topological changes introduced by @epernod more than a year ago now uses callbacks. Such callbacks appear to me like the appropriate way to implement an optimized update of the local stiffness (only on the updated elements). This PR proposed to remove a function, which had no implementation in the core. No feature in the code base, so it was polluting the code base and making it harder for new developers to read the API. @alxbilger had explicitly asked for feedback, and the above discussion led to the confirmation of this deletion.; However, you make a point: SOFA should indeed include examples (scenes and code) of 3D cutting and such contributions are most expected. Such PRs and topics are (and were in this case) discussed weekly at the [SOFA dev meeting](https://sympa.inria.fr/sympa/subscribe/sofa-dev). . Two solutions I see: ; - pulled-request a revert of the PR introducing the feature in the core of SOFA; - use the new API and updates existing FF in SOFA",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2244#issuecomment-1171247643:271,update,update,271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244#issuecomment-1171247643,3,['update'],"['update', 'updated', 'updates']"
Deployability,"Hi @damienmarchal, thank you for this massive work.; 117 changed files in 1 commit is not easy to review so this may take a while to be merged but be sure we (I included) are going to check it out.; About the deprecation policy, I agree with your proposal of 1 year transition + highlights in releases.; I'm curious to see this PR [ci-build]'ed [with-scene-tests] 😉",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328514613:293,release,releases,293,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328514613,1,['release'],['releases']
Deployability,"Hi @damienmarchal,; Thank you for your comment. I needed the engine output to update at each time step, but I think you are right and the default lazy mechanism may be enough for my use case. I made this change together with @hugtalbot, mainly to go through the process of opening a PR :); Anyway, I think the things mentioned in the todo list (especially adding visualization part) could be helpful. But of course we could close this PR and open another later with those improvements.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1066#issuecomment-496416619:78,update,update,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1066#issuecomment-496416619,1,['update'],['update']
Deployability,Hi @dweckmann any update ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-515094912:18,update,update,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-515094912,1,['update'],['update']
Deployability,"Hi @epernod ,; thanks a lot for the explanation! :). The scenario that does not work is opening the ROI component from the scene graph in the GUI and looking at the data.; This does not seem to be updated.; ![image](https://user-images.githubusercontent.com/29635054/201955573-bca66cef-f619-4c08-a15a-c18aa0a9ec80.png); Moving the object through mouse interaction into and out of the ROI, these values do not change.; The values are only updated when I close the window of the component and opening it again. So I guess I'll close this issue.; Is there another related issue? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315459732:197,update,updated,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315459732,2,['update'],['updated']
Deployability,"Hi @epernod ; Is this the way we want to implement update process (when data changes) for non-engine components ?; Here you are doing:; - at init: `m_dataTrackerDATA.trackData(d_MYDATA);`; - a function _updateIfXXXX_ is:; - called at each physical function call (addForce, addDForce, addKToMatrix etc.); - checking if data changed; - if yes, updates data and re-compute internal vectors. My approach in MeshMatrixMass is the following.; - at init: `m_dataTrackerDATA.trackData(d_MYDATA);` (same); - a function _update_ (like in engine) is : ; - called at each EndAnimationEvent; - checking if data changed (same); - if yes, updates data and internal structures (same); - this update function is also called by reinit(). What do you think ?; I would like to have like a template to attack all important (NG related) components to apply the right internal update process ! (and kill the reinits)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-510625843:51,update,update,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-510625843,5,['update'],"['update', 'updates']"
Deployability,"Hi @etagliabue,. Thanks a lot for you pull-request. . Could you elaborate a bit more on which use case requires the changes you are proposing. For the moment I don't understand which use case you are working on which would defeat the existing lazy data update mechanism used by Sofa engines.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1066#issuecomment-496293593:253,update,update,253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1066#issuecomment-496293593,1,['update'],['update']
Deployability,"Hi @fbridault ; Did you give a try to the latest v19.12 ?; If you face any issue, please poke me directly. I want to make sure your integration is working fine.; Best.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-592187497:132,integrat,integration,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-592187497,1,['integrat'],['integration']
Deployability,"Hi @fredroy,. I fully support removing the dependency to SceneCreator. Thanks for the effort. . Small comment: ; I think that using simpleapi is a better option for scene creation than using the raw c++one:; - it reduce the need for c++ includes (so the dependency graph (aka ""the giant spaggheti bowl"") pressure). ; - it reduce the compilation time,; - in theory simple and consistant API aligned with the python one (but It haven't been updated so it match with SofaPython3... but doing such a thing is worth the effort).; ; ; EDIT: I just try how would look a modernize simpleapi (https://godbolt.org/z/9EW9dbnvn)... and think I'm going to like doing things like that (thanks to c++ std::any):; ```cpp; mo = createObject(""MechanicalObject"",; {{""name"", std::string{""myMo""}}, ; {""position"", {{1,2,3},{4,5,6}}},; {""enable"", true}});; node.addObject(mo);; ```; The syntax is nice and there is no more this ugly data to string to data creation using ""BaseObjectDescription"" and its parse method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882:439,update,updated,439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882,1,['update'],['updated']
Deployability,"Hi @fredroy,. I have an update concerning this issue. I tried compiling SOFA with SofaPython3 in Debug mode and I encountered the issue again.; Firstly, in Visual Studio, I had to add the Python3 libs folder as additional library reference to the python3 related projects. (Otherwise python39.lib was not found). In `PythonEnvironment::Init()`, the line `py::module::import(""SofaRuntime"");` causes the crash. So apparently the import fails. . I think the cause could be that the .pyd files make reference to unreachable dependencies. So I ran Dependencies and did not notice anything wrong :; ![image](https://user-images.githubusercontent.com/24836743/108839575-87195400-75d5-11eb-8438-1cbf28fe8bb2.png). I precise that I installed the Python Debug binairies (so python39_d.dll exists).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-784141337:24,update,update,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-784141337,2,"['install', 'update']","['installed', 'update']"
Deployability,Hi @fredroy. Here it is:. [INFO] [runSofa] PluginRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/plugins;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/collections;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release; [INFO] [runSofa] DataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/share;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/examples;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_sourc,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:308,Release,Release,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"Hi @guparan ; I added tests & the use of SOFA_VERSION but is this contains a real value ? On my system it was 999999; which is pretty useless. Could the value be set to the ""next release"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/329#issuecomment-315888752:179,release,release,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/329#issuecomment-315888752,1,['release'],['release']
Deployability,"Hi @guparan, I saw your comment on installation from this link https://github.com/sofa-framework/sofa/issues/2485#issuecomment-971462092. I have been struggling with the installation for a quite some time now. can you please check my comment for the procedure I have mentioned here at https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833? or from what you mentioned do I only need those 4 lines to install on ubuntu?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1318634630:35,install,installation,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1318634630,3,['install'],"['install', 'installation']"
Deployability,"Hi @hdeling,; Could you give us more precisions regarding the need to change from enums to strings for the integration methods?. **If** the goal is to simplify the conversion from the string (passed in XML / Python scenes) to the C++ enums, wouldn't it be best to take advangate of the OptionsGroup datatype already present in SOFA?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-465519581:107,integrat,integration,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-465519581,1,['integrat'],['integration']
Deployability,"Hi @hugtalbot ,; we discussed it as well with @marques-bruno and @damienmarchal on gitter, we all have several way do to it. Can't say if one is best.; I want to put a generic mechanism in BaseObject (or another child/parent) that you could call, if you want, at init to link a dataTracker and which would automatically call an update (maybe not exactly the name update to not confuse with engines) virtual method. . I suggest either we start a discussion issue on this and/or we add that discussion for the next dev meeting agenda.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-510788154:328,update,update,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-510788154,2,['update'],['update']
Deployability,"Hi @hugtalbot,. Apologies for the delayed response. I've recently updated my CMakeLists in the ext_plugin_repo, switching from sofa_add_plugin to sofa_add_subdirectory, which has successfully enabled the build of this plugin. Below is the revised CMakeLists for your reference:. ```; cmake_minimum_required(VERSION 3.12). find_package(SofaFramework REQUIRED). # Changed from sofa_add_plugin to sofa_add_subdirectory; #sofa_add_plugin(SofaTearing/ SofaTearing); sofa_add_subdirectory(plugin SofaTearing/ SofaTearing); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4461#issuecomment-1960547563:66,update,updated,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4461#issuecomment-1960547563,1,['update'],['updated']
Deployability,"Hi @hugtalbot,. Thank you for your response. I've reviewed the CMakeLists.txt file in the SofaTearing plugin and noticed that the first two lines are:. find_package(SofaFramework REQUIRED); find_package(SofaGui REQUIRED). However, I couldn't find SofaFramework and SofaGui mentioned in the SOFA-NG transition list you provided. It's possible that I've misunderstood the process for integrating a v21.06 plugin with SOFA v23.06. Could you please clarify this for me or offer further guidance?. Thank you.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4461#issuecomment-1919100009:382,integrat,integrating,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4461#issuecomment-1919100009,1,['integrat'],['integrating']
Deployability,"Hi @jjcasmar, thanks for spotting this issue :+1:; I see you installed the v20.06 binaries in your system. Did you have a previous installation before?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-655515305:61,install,installed,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-655515305,2,['install'],"['installation', 'installed']"
Deployability,Hi @jnbrunet ; Did you integrate what was done by @courtecuisse in #1549 or is it is still worth having a look at 1549 ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1682#issuecomment-752008983:23,integrat,integrate,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1682#issuecomment-752008983,1,['integrat'],['integrate']
Deployability,Hi @lakehanne . I have the impression that dependency tracking between plugins with only cmake external repo is hard. . This is why I released a sofa package manager called sofa-spm: https://github.com/SofaDefrost/SPM,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1122#issuecomment-527793805:134,release,released,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1122#issuecomment-527793805,1,['release'],['released']
Deployability,"Hi @lujaindong . Thanks for reporting this issue. . As far as I know SofaMiscForceFieldDev not part of Sofa and I bet it is a private plugin that implements the missing component ""RotatioNFinder"" and ""ShapeMatchingForceField"". . Having an example base on private plugin is problematic and we should either provide a different example with only public components or ask the author of RotationFinder & ShapeMatchingForceField to have them publicaly release and have them integrated into Sofa. I think @hugtalbot can say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307#issuecomment-311033631:447,release,release,447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307#issuecomment-311033631,2,"['integrat', 'release']","['integrated', 'release']"
Deployability,"Hi @lytyo , sorry for the delay.; Do you still have problem with the v20.12 release of SOFA ? SofaPython3 is being shipped inside and emphasis has been placed on compilation/build/install with python path, etc.; Thanks !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-780672279:76,release,release,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-780672279,2,"['install', 'release']","['install', 'release']"
Deployability,"Hi @maddin200 I would suggest that you try to do it since it is a good first issue to experience the contributing steps:; - creating a fork of SOFA; - create a specific branch, implementing the patch; - pull-requesting this branch in master of sofa-framework. If more things are to change we would assist you, but please, don't worry about making mistakes while contributing!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1133#issuecomment-529835435:194,patch,patch,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1133#issuecomment-529835435,1,['patch'],['patch']
Deployability,"Hi @maddin200, thank you for the bug report. ; I checked on Qwt website: https://sourceforge.net/p/qwt/news/; and this has been fixed in new version of the lib. I just pushed the PR #1136 to upgrade the version of Qwt. Could you have a try?; Otherwise the patch you are asking for is here:; https://github.com/sofa-framework/sofa/pull/1136/files#diff-4f1be8e83adaddcbf84145436b7d5b80",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-527683573:191,upgrade,upgrade,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-527683573,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"Hi @marques-bruno wasn't it merging the #1407 into this one (#1408) ?. My notes on this PR were: Rebase #1407 in #1408.; SetValue on componentState should not be required: bool parse() calls getValue on the m_repositoryPath, which in turn will call the updateCallback, which itself sets the component State. Thus setting it again would be useless.; fileMesh to remove",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643175509:253,update,updateCallback,253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643175509,1,['update'],['updateCallback']
Deployability,"Hi @polyakovkrylo,. When I call the plugin of the SDK/lib/release/lin-x86_64-gcc/libdhd.a version to compile, I encounter an undefined reference issue.; ``` bash; lib/libSofa.Type.so.20.12.99 lib/libSofa.Compat.so.20.12.99 lib/libSofa.Config.so.20.12.99 -Wl,-rpath-link,/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib && :; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)：in function‘dhdUSBGetDeviceCount(int, int)’：; dhdComUSB-libusb.cpp:(.text+0x9d)：undefined reference to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0xba)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0xed)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x120)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x141)：undefined reference to ‘libusb_exit’; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)：in function‘dhdUSBGetDeviceCountList(int*, int*, int*, int)’：; dhdComUSB-libusb.cpp:(.text+0x215)：undefined reference to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file o",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:58,release,release,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,3,['release'],['release']
Deployability,Hi @remibessard ; I am getting back to this topic.; I know students (Alban for instance) were struggling also with the BeamLinearMapping.; Can you update us on this topic ?; Is it working well for you?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-509667857:147,update,update,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-509667857,1,['update'],['update']
Deployability,"Hi @sescaida,; Thanks for following up on the subject :) I came back from holidays this week, that's why it didn't go much further since the STC.; I've updated the examples, that shows how to use both:; - the initial version of the PSDE (explicit data typing in the addNewInput / addNewOutput methods, but with SOFA C++-style datatype factory) ; - The new auto-detected I/O types derived from their parent / child's value types. As I said in my previous comment, I'd hope to go further now that I'm back, especially on the aspects of setting input types as kwargs to the PythonScriptDataEngine component. I will also rename the PythonScriptDataEngine into whatever we decide.; Damien suggested PythonEngine, I'd be more for PythonDataEngine to keep the consistency between the bound component's name and the Pyhton name (PythonDataEngine -> DataEngine); What do you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406585627:152,update,updated,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406585627,1,['update'],['updated']
Deployability,"Hi @sofa-framework/reviewers,. Here is a follow up of NG project for April. ; The project is huge and still requires a lot of iterations to get the best refactoring process but we are going in the right direction :+1: . ## Discussions; It was decided to push all NG changes to [a specific NG branch](https://github.com/sofa-framework/sofa/tree/ng) on sofa-framework.; Still, all the developments will go through the PR process. Reminder: your feedback is VERY important, we need it to adapt our work and minimize future rollbacks. **Do not hesitate to put any comment in the pull-requests.**. ## Refactoring and adapting SPM for Sofa.Component.Utils. SPM is the set of scripts we use to make our work easily reproducible. You can check it out [here](https://github.com/guparan/sofa2ng). This work made me realize that it will be very hard, if not impossible, to anticipate every subtle change needed by the refactoring.; - Do we want SPM to be an all inclusive script to refactor completely SOFA? ; every refactoring is unique and needs to change SPM ; -> namespace handling ; -> includes refactoring; - Or should we prefer it to be an easy-to-use script to **bootstrap** any refactoring? ; -> very specific changes will have to be done by hand. I propose to go for solution 2 and to provide a git patch covering the work done after SPM job (fixing includes, fixing namespaces, ...). The progress of this task is **85%** since I now have to create the patch and to provide everything in the PR. ## Moving on with Sofa.Helper.Bvh; Following [the latest iteration on NG architecture](https://annuel2.framapad.org/p/sofang-v3) and Damien's first draft in his [cleanTheMessStep1](https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng) branch, I started refactoring SofaFramework with Sofa.Helper.Bvh. This task needed me to heavily change/adapt SPM. It contributed to make me prefer solution 2 above. The progress of this task is **60%**. TODO:; - update the recipe with latest SPM changes (namesp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811:520,rollback,rollbacks,520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811,1,['rollback'],['rollbacks']
Deployability,"Hi @sofa-framework/reviewers,. Here is a follow-up of SOFA-NG for July. ## sofa2ng; Previously named SPM, the NG-module boostrapper has been massively updated and upgraded.; It should now able handle any standard (following conventions) SOFA module.; Check it out: https://github.com/guparan/sofa2ng. ## Sofa.Component.Utils; The recipe has been updated. ## Sofa.Helper.Bvh; The recipe has been updated.; A pull-request proposing Sofa.Helper.Bvh and explaining how to reproduce it with sofa2ng has been done: https://github.com/sofa-framework/sofa/pull/741. ## Next steps; - Follow Sofa.Helper.Bvh PR and answer questions about sofa2ng; - Discuss about SofaFramework modules refactoring with vonlunteers (who does what); - Continue refactoring SofaHelper. ---------------------------; As always, do not hesitate to comment. :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-409633414:151,update,updated,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-409633414,4,"['update', 'upgrade']","['updated', 'upgraded']"
Deployability,"Hi @sofa-framework/reviewers,. Long time no see, the NG task has been quite slow this last months.; Here is a quick follow up of October and November activity. ## Sofa.Helper.Types; I finished the refactoring for Sofa.Helper.Types. ## Next objectives; Update NG branch; Open PR for Sofa.Helper.Types; Start another Sofa.Helper.* refactoring. ---------------------------; As always, do not hesitate to comment. :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-446606942:252,Update,Update,252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-446606942,1,['Update'],['Update']
Deployability,"Hi @sofa-framework/reviewers,. May was quite quiet for our beloved NG project.; Don't worry, I still have some news for you :wink:. ## Discussions. Pluginization works are possible but they have to be done in-place (not moving the files). This will permit to simplify the dependencies between SOFA modules. . About the NG branch, to avoid big divergence, we propose to merge it with master as soon as some big step is done. The next big step is SofaFramework coverage. ## Bootstrapping scripts. Previously named SPM, the [bootstrapping scripts](https://github.com/guparan/sofa2ng) are now able to handle test folders. ## Process. Here is the process to cover one module:; 1. Create/update a recipe based on an existing one.; 2. Run the bootstrapping scripts with the recipe.; 3. Inspect the output; 4. If something is wrong or missing, edit the bootstrapping scripts and *goto 1*; 5. Do specific changes by hand like namespace aliases; 6. Create a patch of all changes made by hand; 7. Open a pull-request providing the recipe and the patch (previously pushed to sofa2ng). This process will be rewritten in Sofa.Helper.Bvh pull-request. ## Sofa.Component.Utils. The first NG pull-request has been merged to the NG branch. There is still some updates to do though, because the bootstrapping scripts changed. ## Sofa.Helper.Bvh. The recipe has been updated. ; This work will be the base of further contributions. I will detail all the bootstrapping + patching process in the pull-request. ## Next steps; - Pluginize without moving files: use plugins mechanism to work on modules dependencies ; Start with the less dependent ones and progress towards SOFA core.; Objective: simplify dependencies between modules.; - Validate Damien's architecture proposal for SofaFramework: https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel/Sofa; Particularly about Sofa.Helper.Types; - Create Sofa.Helper.Bvh pull-request; Will give a clear example and all the process to refactor parts of SofaFramew",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223:682,update,update,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223,2,"['patch', 'update']","['patch', 'update']"
Deployability,Hi @untereiner could you point us some examples scenes to run with your integration work ?; Cheers,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-400257762:72,integrat,integration,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-400257762,1,['integrat'],['integration']
Deployability,"Hi @untereiner, thanks for your PR. Actually, this feature should be contained in an option because we may not want to use ccache even if we have it installed.; Could you make that change?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/692#issuecomment-402413477:149,install,installed,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/692#issuecomment-402413477,1,['install'],['installed']
Deployability,"Hi @vmagno ; Great job, could you please update the PR to take into account the changes made in master ? ; (Small tips: Most of the the problematic files have been moved in the plugins directory :))",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/423#issuecomment-335799316:41,update,update,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/423#issuecomment-335799316,1,['update'],['update']
Deployability,"Hi Adrien,. Thank for the PR, and the detailed description. Few comments at first glance:; - are the class Callback & CallbackImpl not equivalent to the std::function and std::bind that are in the c++11 STL ? ; - about the ""if(m_updating)"" in the update function. I think it is there to avoid loops. Does it make sense to add a message warning if this happens ? ; - we don't use #pragma once in SOFA as this is not part of the standard . But I think the decision make sense 10 years ago but as the compiler support is now rather bit maybe we should switch to use it as managing the #include SOFA_SUPPER_LONG_NAME_H..is error prone. @guparan, do you think we can make a script to convert the complete code base for pragma once ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911#issuecomment-459511168:247,update,update,247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911#issuecomment-459511168,1,['update'],['update']
Deployability,"Hi Adrien,. Thanks for the PR the I think should go in fast-merge then back-ported to 17.06 release @guparan (could you do the back porting ?)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/320#issuecomment-313093165:92,release,release,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/320#issuecomment-313093165,1,['release'],['release']
Deployability,"Hi Benjamin, . Maybe I'm wrong but it seems to integrate a lot of commit touching a lot of different sofa part (SofaKernel, SofaOpenGL) which does not precisely match the pull-request description. Wouldn't it be better to separate that into several more specific pull-request ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/76#issuecomment-263724660:47,integrat,integrate,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/76#issuecomment-263724660,1,['integrat'],['integrate']
Deployability,"Hi Erik,. Nice commit. Some (cosmetic) remarks:; - you updated some attributes/data field names but the name you use are not following the sofa guidelines. Data should starts with d_ not m_ (https://github.com/sofa-framework/sofa/blob/master/GUIDELINES.md). ; - there are std::cout which should be replaced by the msg_error api ; ; +1 for the examples.; Would be nice to also have a test file validating the behavior.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273165258:55,update,updated,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273165258,1,['update'],['updated']
Deployability,"Hi Eulalie, . The template instantiation part (in the .cpp) is not synchronized with the extern template part (in MechanicalMatrixMapper.h). ; But we can update that in a separate PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1703#issuecomment-758491994:154,update,update,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1703#issuecomment-758491994,1,['update'],['update']
Deployability,"Hi Fred,. Thank for this PR. . +1 for the cleannig; +1 for the tests ; Maybe it should be told in the PR description. . I'm surprise by the C++ code in the test.glsl file. I don't think this is a good naming convention because it is really hard to understand that the content of the .gsl file is actually c++. So I suggest to rename the file with a more classical .cpp (or .cppglsl if you really want something no .cpp). . There is some place in the code that introduces new std::cerr. Can you please update to use the dmsg_* API . I will try the PR to see if it does not interfere with the livecoding features.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158#issuecomment-276338378:501,update,update,501,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158#issuecomment-276338378,1,['update'],['update']
Deployability,"Hi Hervé,. In general, I think it is a good idea to have a repo per plugin, even if it becomes more difficult to update them when the sofa core is modified.; But in this specific case, it would be great to add this plugin to this github repo, so Flexible can still benefit from your code. Another solution, could be to add a third plugin in your independent repository, that would link with both SOFA-HighOrderTopology and Flexible, and that would contain the high order shape functions. What do you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251653905:113,update,update,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251653905,1,['update'],['update']
Deployability,"Hi Hugo, This is a very challenging target. I would probably try something something like:. 1- For release 17.12; - move all the ""not core"" files in plugins. ; - for each ""SofaXX/blahblah.h"" in the old location have this kind of file with:; ```cpp; /// This file is now deprecated and have been moved in the ""SofaXX"" plugin. You need to; /// update your code to #include <SofaConstraint/blabla.h> ; #ifdef SMOOTH_TRANSITION_UNTIL_17_12; #include <applications/plugins/SofaXX/blahblah.h>; #endif; ```; - for each component you really want to deprecate add a hook in the SceneChecker saying ""component xxYYZZ is now deprecated and will be removed in sofa 18.06. Use alternative XX and if there is none please contact us open Issue in our bugtracker with tag 'sofaNG'. "". Then in 18.06...really removes the component and update the SceneChecker hook so that it simply print somehing like ""this component have been removed since sofa 18.06. Alternative component is now XXXX."" . Of course the more automated it will be through script the best it will be.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-323710481:99,release,release,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-323710481,3,"['release', 'update']","['release', 'update']"
Deployability,"Hi Hugo,. The incompatibility I was talking about few days ago were because of issimo changes integrated in master.; So I don't think there is a need to wait for merge. . DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637#issuecomment-395358419:94,integrat,integrated,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637#issuecomment-395358419,1,['integrat'],['integrated']
Deployability,"Hi Mathieu, . Thank for your review. ; InitShader or InitGLSL ? . About the InitShader function as it was containing some memory management code ; ```cpp; // If any of our shader pointers are set, let's free them first.; if(!m_hShaders.empty() || m_hProgramObject); Release();; ```; I assumed that is was already ok to be called several time and that it was not leaking memory, maybe I was wrong so I will look at that more carefully. . I will also clean the thing with the m_filelistener (even if I think the right way would be to change the API of the FileMonitoring API (but this must be done in a separated pull-request)). About InitGLSL I see no memory allocation there ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/63#issuecomment-262534138:266,Release,Release,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/63#issuecomment-262534138,1,['Release'],['Release']
Deployability,"Hi Mathieu,. - About the 'd_size' data field. It is there just to store the attribute passed by the user. As the parse function already do the resize using the raw value of the attribute it was not needed to do any resize(d_size.getValue) anywhere. . - I share your concern about the cost of adding data. ; According to the last updates in Issue https://github.com/sofa-framework/sofa/issues/44) it seems that data is not that crucial for a real simulation. . To have more insight I just made a quick test with the following result: ; The time to create 200 000 (empty) component (without calling the init function):; - with 6 Data field is 1.10sec; - with 10 Data field is 1.55sec; So one data field added to a component cost 0.05ms at component creation (it is higher than what I expected). ; Now for a more realistic scenario with 200 SphereModel created and initialized one extra data field rise the cost from 3.1 ms 3.2ms and that this is 'dialuated' in all the other cost (collision detection, mechanics). . About your suggestion to set everything to persistent by default and have each component decide what is good to save or not. This is what SOFA actually does and this behave terribly. ; I see two reason for that:; - there is a lot of component that 'forgot' to set/unset the persistent values.; - it is very hard to identify what is relevant to save, IMO because what is relevant to save is a matter of context of use, a Data 'useless' for one may be very useful for someone else. . This is why I choose to do things in the reversed way and let the client code to select what to save (so that you may eventually implement dedicated widgets to let the user select what to save). . I see at least to different context of use and thus saving strategies. . For my context of use it is more important to save scenes that are as close as possible as the one written by the user. This is why I made the XML loader and the GUI have the responsability to make persistent:; - the value given explic",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495:329,update,updates,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495,1,['update'],['updates']
Deployability,"Hi Mathieu,. Best wishes for this year. . Daccord is an old repository on gforge storing a lot of experimental feature (UI & modelling) that are pending for integration in sofa. . I fully agree with your suggestion for point first&second; for third:; - what about adding a Data for template & src ? (I really would like to preserve as much as much as possible the original scene because) ; - ""type"" I don't know but it handled specifically in (XML.cpp). I started a new branch for this task so we can work and tests : ; https://github.com/SofaDefrost/sofa/tree/xmlsave. EDIT: I have updated this branch saving is now working (at least the caduceus scene). If some of you have time please give feedback.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/41#issuecomment-270089246:157,integrat,integration,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/41#issuecomment-270089246,2,"['integrat', 'update']","['integration', 'updated']"
Deployability,"Hi Mathieu,. I see what you mean. ; ; The new implementation allows you to select precisely how gtest suceed or fail according to the messages emitted by a component by using either the MessageAsTestFailure or/and ExpectMessage RAII. . To update the old tests with *a minimal amount of effort* to restore the behavior you described. ; I think in each test setup we can simply add something like ; ```cpp; MessageAsTestFailure raii_warning(Message::Warning) ;; MessageAsTestFailure raii_error(Message::Error) ;; ```; I can devote some time to do that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/211#issuecomment-288386290:239,update,update,239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/211#issuecomment-288386290,1,['update'],['update']
Deployability,"Hi Mathieu,. Thank you for the feedback... the GLSL stuff is a mistake... I didn't knew that pull-request was for a branch and not for a specific commit. So i continued to to work in this branch (I will not do the same mistake in the future). . Now to answer your question...the overhead is near zero. ; - The GLSLListener is triggered by the file FileMonitor. ; - FileMonitor is using the event based ""select"" system API and is not actively 'polling' the files. AFAIK this is the most efficient way to monitor files. ; - If your application don't call FileMonitor::update(0) then this cost nothing. Currently only runSofa is calling FileMonitor::update(0) when started with the -i (for interactive) command line option. . So the different scenarios is:; - runSofa -i & changing the file (this cost the reload of the shader); - runSofa -i & not changing the file (this cost calling the select system call) ; - runSofa as usual...this cost nothing. . I hope I answer you question and yet again, thank you for your feedback on this PR. . Now about FileListener... it is part of the FileMonitor API that is already in Sofa. . DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/55#issuecomment-261506734:566,update,update,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/55#issuecomment-261506734,2,['update'],['update']
Deployability,"Hi Neustradamus,. Improving the packaging and installation process of binary version of Sofa is something we really would like to improve. @guparan already made great work on that but as we are short on man-power this is very slow, small step are done at each Sofa release. . Thanks for you suggestion to auto-install python (and numpy), this would definitely be nice feature. ; In case you have knowledge to do such a thing and are you interested in helping I think @guparan have dedicated github branches with the additional CMAKE scripts he use for packaging the release.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454704670:46,install,installation,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454704670,4,"['install', 'release']","['install', 'installation', 'release']"
Deployability,"Hi Quentin !; Thanks for the notice !. @untereiner I recall that you recently had a look at the VTKLoader in SOFA. Am I correct?; Did you face these warnings ?. Since the file is well loaded, we would simply need to update the loader to have only Warning (and no error msg) when facing these new metadata.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/652#issuecomment-387752616:216,update,update,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/652#issuecomment-387752616,1,['update'],['update']
Deployability,"Hi Thomas,. Currently it seems there is some problem in compiling it, but fundamentally I think this is a great objective. ; Thank you very much to tackling this. . If I understand correctly now we can have the two syntax to read vectors (the one from Python and the historical one). +Backward compatibility is preserved and you added tests to validate the new behavior. This all looks great to me. . You also changed the getStringValue...here I think this is a problem as it will break a lot of third party code. This is why you had to fix a lot of failing test. Instead of changing the behavior of an existing function it would be much better to offer a second function to serialize to python format (or adds a parameter to the existing one to control the behavior eg: getStringValue(SerializingMode mode=SerializingMode::ClassicSofa)). The underlying idea is that by default old code will function as usual and ""awared"" users can take profit of the existing function getStringValueAsPython() or getStringValue(SerializingMode::Python). . I'm sorry because I think it probably took you a lot of time to update the failing tests but the tests shouldn't have been changed, only new one should have been added to validate the new syntax and corner case. . Minor details: ; There is some msg_error(""(S)Vector"") in vector shouldn't it be vector<> instead ?. ; Maybe you will find this pattern usefull: ; ```cpp; namespace sofa {; namespace helper {; namespace logging {; inline bool notMuted(const sofa::helper::io::MeshVTK* ){ return true; }; inline ComponentInfo::SPtr getComponentInfo(const sofa::helper::io::MeshVTK*); {; return ComponentInfo::SPtr(new ComponentInfo(""MeshVTK"")) ;; }; } /// logging; } /// helper; } /// sofa; ```. It allows to write the implicit (this) msg_* as in ; ```cpp; msg_error() << ""Blahblah""; ```. Instead of; ```cpp; msg_error(""MeshVTK"") << ""Blahblah""; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-314893430:1105,update,update,1105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-314893430,1,['update'],['update']
Deployability,"Hi Thomas,. You said:; ""As long as the deserialization operator is compatible with the serialization one, I do not see any issue. And no example scene is failing because of that."". You have to take the whole picture into consideration, everyone is not using serialization/deserialization as ""pairs"". The actual default serialization format is used in a lot of other software (GUIs, scene processing tools written in python, perl and C++). If you change the behavior of the default serialization mechanism all of them will stop working and required to be updated. This is a very, very, very nasty thing to impose to other users of Sofa. A PR doing has no changes to be accepted. . Actually tests is part of our guard line because they validates the API compatibility and allow us to detect changes that breaks it. The existing tests should be considered as validating the ""the existing"" sofa API. It was normal to have them to fail on your PR because it shows that the PR was breaking the compatibility. . I really like the idea of keeping the old serialization behavior as it is and add the other deserialization as an extra feature. This will make the whole PR transparent for users that don't want to update their code base. It thus it can be merged very quickly. . About the test: ; You are right that it would be better if we had test specific tests to validate the serialization alone.; I personally would like to have tests to validate that getValueString() return ""1 2 3"" and that getValueAsPythonString() return ""[1 2 3]"" . And also as you said having tests to validate against the real values instead of their serialization would be nice. . . About the branches:; The rule is to never work directly on the sofa-framework repository. There is no reason to do so (if you really want to make two PR one in anatoscope and one in sofa ... you need to to that from two branches located in the anatoscope repo). Otherwise this consume a lot of disk space on the CI servers that we have to fix manual",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626:554,update,updated,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626,1,['update'],['updated']
Deployability,"Hi Vlad. We have discussed your PR during the sofa dev meeting. And this is what came out : ; This is of interest but would require an example/context (plugin using it) of use to see how you use it. More over, it still need a lot to do to integrate it in a more standardized way to be more generic regarding the type of element. And finally, and we could help you for this, this feature would need unit tests. This pr is currently set to WIP, waiting for further comment from you.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4226#issuecomment-1757148121:239,integrat,integrate,239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226#issuecomment-1757148121,1,['integrat'],['integrate']
Deployability,"Hi all, . Just a quick update asked by @hugtalbot on how we handled this issue at Anatoscope. It's been a while so our fork drifted quite a bit since the opening of this issue:. - `Data` are only allowed in `BaseObject` instances (i.e. `Nodes` have no data), which simplified many things; - We removed `initData/initLink` altogether, most constructors are now `(BaseObject* owner, const char* name, const char* doc, const T& value = {})`. A pleasant consequence in c++17 is that you may directly declare datas in the class like this:; ```c++; class Object: public BaseObject {; public:; Data<double> foo = {this, ""foo"", ""a foo that bars"", 1.0};; };; ```; - `BaseData` now maintains shareable information (like name/doc/etc) in a shared object, which can be shared between several data instances. In practice doing so is still very ad-hoc so we don't use it much, but it is possible in case we want to optimize dynamic component creation; - Dependency relations between `DDGNodes` no longer use the `Link` mechanism. ; - In fact component links and `Links` in general are mostly gone, and will be removed in the future as they're yet another dependency graph and we would like *everything* to use the data/engine graph instead; - Our `Data` have at most one input (another data or its owner engine), so we may move the `inputs` handling of `DDGNode` to derived classes to avoid needless allocations for `Data`. It's not done yet though. As you can see, things don't quite look the same, but I think old-timers would still recognize what's going on ;) By the same token I think this issue can be closed, but please don't hesitate if you have any question.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-1033777336:23,update,update,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-1033777336,1,['update'],['update']
Deployability,"Hi all, . This PR is getting old, would it be possible to:; - Fix the conflict; - Update the reviewer's status if it is now ok. Thanks. . EDIT: @matthieu-nesme Are you still requesting changes on this PR ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-303540954:82,Update,Update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-303540954,1,['Update'],['Update']
Deployability,"Hi all, ; after some thinking, would it be possible to have this PR merged for release 19.06. ; Because some of the componets it contains have been tagged as ""to be removed"" ; for 18.12 and are still there and generates a warning each time we use them so having everything in a real plugin for 19.06 seems a better move that these messages.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1071#issuecomment-499391583:79,release,release,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1071#issuecomment-499391583,1,['release'],['release']
Deployability,"Hi all,. Here are the result why BarycentricMapping<> is failing in the BarycentricMappingTruss example. Summary on how object are registered in the factory in sofa/master: ; 1) BarycentricMapping<Vec3d,Vec3d> is added into the factory using ""BarycentricMapping"" as entry name; Then ; 2) BarycentricMapping<Vec3d, Rigid3d> is aded into the factory using ""BarycentricMapping"" as entry name (so this actually adds a new template to the existing one). With the PR this is what happens:; 1) BarycentricMapping<Vec3d,Vec3d> is added into the factory using ""SofaBaseMechanics.BarycentricMapping"" as entry name. ; 2) Then, for compatibility, it adds an alias from BarycentricMapping to SofaBaseMechanics.BarycentricMapping. ; 3) Then BarycentricMapping<Vec3d, Rigid3d> is added into the factory using ""SofaMiscMapping.BarycentricMapping"" as entry name. This is actually correct (as SofaMiscMapping is the target where this mapping lies in). But the alias is not updated to point both to SofaBaseMechanics.BarycentricMapping and SofaMIscMapping.BarycentricMapping...which, actually seems pretty logic...one name - one object. . Maybe we can change the alias mechanism so we allow an alias to point to multiple different object...which I'm not very convinced this will not get into troubles.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-1007333869:955,update,updated,955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-1007333869,1,['update'],['updated']
Deployability,Hi all. @EulalieCoevoet @epernod @matthieu-nesme @thomas-lemaire @hugtalbot @guparan @fredroy . I suggest we use this issue for general communication about what is happening on the UX group either on github and/or on gitlab. . Please tell anyone interested to join/. Our general target for the next sofa release (17.06) is to ship a runSofa2 application. ; This means we only have less than 3 month. ; I suggest that in April & first day of May we add the missing features and we keep the last month to test and bug fix the software. . DM.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/187#issuecomment-291478457:304,release,release,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/187#issuecomment-291478457,1,['release'],['release']
Deployability,"Hi everyone, sorry for taking so long to further explain my PR. I fully agree with @Camille-K, the referenced paper states it clearly that the matrix should be updated at each time step.; Thanks for merging my PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2706#issuecomment-1060361474:160,update,updated,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2706#issuecomment-1060361474,1,['update'],['updated']
Deployability,"Hi guys, sorry for the late answer. . We do not ship Python with SOFA. You have to install it yourself. ; Be sure to select the appropriate version and platform: [2.7.15_64-bit](https://www.python.org/ftp/python/2.7.15/python-2.7.15.amd64.msi) or [2.7.15_32-bit](https://www.python.org/ftp/python/2.7.15/python-2.7.15.msi). ; When asked by the installer, accept to add Python to your PATH. Hope that helps :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454071028:83,install,install,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454071028,2,['install'],"['install', 'installer']"
Deployability,"Hi guys,. Actually I think this PR should not be merged in this state. It is a proof of concept to show the possibilities.; I just updated a scene that you can use to test the new components. The scene called ""TetrahedralCorotationalFEMForceField"" has two nodes. The first one uses ; the components ""VolumeTopologyContainer"" and ""CMTetrahedralCorotationalFEMForceField"" that are completely written using cgogn and ""MapTetrahedronSetTopologyContainer"" a compatibility wrapper that allows to use ""classical"" sofa components with cgogn. @damienmarchal concerning your questions:. - what the PR does precisely ?; - This PR adds a new data structure for handling meshes. This data structure is designed to handle dynamic (with topological changes) meshes.; - what is the existing state on this topic in Sofa (the title speak about dynamic topology...isn't there dynamic topology in Sofa since year) ?; - I think there is a pipeline for topological changes in Sofa. I do not know much about the efficiency of this pipeline. What I can say (I should provide figures) is that this data structure is as effective as the sofa ones in ""static"" scenarios and more effective and reliable in ""dynamic"" scenarios.; - how this PR handle the problem,; - by changing to a more appropriate data structure; - use CGOGN library... what is this CGOGN library ?; - a topological modeling kernel (see https://cgogn.github.io). I am not sure you need more information about it.; - argument on why the PR is it useful/mandatory/improvement, trying to convince people why they should spend time testing it,; - this work has been in progress since 3 years now. His interest has already been debated. I do not want to debate an infinite time on it. If someone is interested in topological changes, it should save him time.; - provide some idea on how invasive the PR will be (non breaking at all, breaking the SofaCore API, breaking existing scenes); - depends on the meaning of beaking. It does not change the sofa API for topolo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402690583:131,update,updated,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402690583,3,"['pipeline', 'update']","['pipeline', 'updated']"
Deployability,"Hi raffaella,. We really appreciate feedback & suggestion, so thank you. . On the Python side we are currently actively working on improving the whole way to report error. This take place in PR #304 ; So it is the right moment to have that to be improved because release the next sofa release (17.12) will change things. . More generally Sofa messages are from ok to really bad but we lack (wo)man-power to fix all that so If you or anyone feel the envy to participate on this kind of task please don't hesitate because it is very important to have good error messages. . Damien.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/333#issuecomment-315892439:263,release,release,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/333#issuecomment-315892439,2,['release'],['release']
Deployability,Hi thanks for help - any update is fine go ahead :-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2987#issuecomment-1152200600:25,update,update,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2987#issuecomment-1152200600,1,['update'],['update']
Deployability,"Hi there, . I would bet on a mismatch between system python and user-installed python (osx, right?). You can probably find out by printing `sys.path` from a test sofa scene, and from a regular python script. If the path for the standard lib don't match you should see it, then adapt the python path in the cmake command.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347198220:69,install,installed,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347198220,1,['install'],['installed']
Deployability,"Hi thomas,. Maybe the use of 'printLog' in my example was ambiuous sorry... . To me the 'error', 'warning', 'info' specifiers is the message 'type' and the set of types is un-ordred so it cannot be controlled via a single level. ; Eg of valid pattern: ; ```cpp; msg_info_when( msgInfoVerbosity < LOW ) << ""This is printed often"";; msg_info_when( msgInfoVerbosity >= HIGH ) << ""This is printed not so often"";; ``` . Eg of in-valid pattern (should be rejected in the PR :)): ; ```cpp; msg_error_when( msgInfoVerbosity < LOW ) << ""This is printed often"";; ``` . 'msgInfoVerbosity' only control the amount of info messages emitted so is nothing related to ; error/warning. . Instead of level we may also have a 'verbosityMask' to control precisely which message are emitted ; Eg:; ```cpp; msg_info_when( verbosityMask & INFO ) << ""blabha"";; ```; but I think *we shouldn't do that*. About the 'msg_debug'...it is problematic because there is also a different set of macro for developers that are called dmsg_info, dmsg_warning, dmsg_error()...these dmsg_* macros leads to NO-op when compiled in RELEASE. So my thinking is that we should remove the msg_debug macro and use their dmsg_* ones instead.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278609429:1090,RELEASE,RELEASE,1090,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278609429,1,['RELEASE'],['RELEASE']
Deployability,"Hi, I'm working with SOFA through SofaPython3 and I've been experiencing the same change in behavior on Ubuntu 20.04 after I (re)built SOFA from the master branch on November 25th.; I didn't have this issue with a previous SOFA build from October 11th at commit ae42db86fbfc9ff70682b46dc8a2279de25361bd .; Since I also updated some Ubuntu packages and SofaPython3 in the meantime, I'm not sure what is causing this change in behavior as well.; However, `git bisect` led me to #3299, i.e. commit 18149f4407fd78359eead7b64ae23470687c40c4 from October 28th, which modified some Qt/GUI-related files like [QtGLViewer](https://github.com/sofa-framework/sofa/blob/18149f4407fd78359eead7b64ae23470687c40c4/Sofa/GUI/Qt/src/sofa/gui/qt/viewer/qgl/QtGLViewer.cpp#L826).; I'm not familiar with the code base enough to investigate further, but I also built SOFA at commit 58d37e9726187f4f8662fe4786c039443b306bd1 which is the one before #3299 and the change in interactive control behavior does not seem to be present there for me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332895974:319,update,updated,319,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332895974,1,['update'],['updated']
Deployability,"Hi, just wanted to add something here, I am now facing with a similar issue related Background setting object, with same error as above(object not in factory). I am using a .py file for scene creation. I can run it using runSofa, but not able to run it with python3 for integrating with gym. You can find the implementation here https://github.com/ScheiklP/sofa_env; the file I am trying to run : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/reach_env.py",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050:270,integrat,integrating,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050,1,['integrat'],['integrating']
Deployability,"Hi, this is not a bug but a new feature I introduced in https://github.com/sofa-framework/sofa/pull/913 to provide (in build and install dirs) a folder that shall always be scanned by PluginManager when searching for a plugin (like the bin/ folder is). The idea was to get an easy way to add/remove plugin binaries in an installed SOFA **without polluting the bin/ folder** which contains stuff I'm not supposed to touch (or scared to touch). The typical use case is: ; I have SOFA binaries (downloaded from sofa-framework.org or provided by someone) and I have a plugin binaries. How to run the examples of the plugin in runSofa?. Many ways to do that:; 1. launch runSofa, open Plugin Manager, load the plugin, open the scene; 2. edit the scene to add `<AddPluginRepository path=""/path/to/the/plugin""/>` and `<RequiredPlugin name=""the_plugin""/>`, launch the scene in runSofa ; 3. copy/paste the plugin binaries (library or complete folder) in the bin/ folder of SOFA, add `<RequiredPlugin name=""the_plugin""/>` or add the_plugin in bin/plugin_list.conf.default, launch the scene in runSofa ; 4. **[NEW]** copy/paste the plugin binaries (library or complete folder) in the plugins/ folder of SOFA, add `<RequiredPlugin name=""the_plugin""/>` or add the_plugin in bin/plugin_list.conf.default, launch the scene in runSofa . (1) is perfect for a new user but becomes heavy quite soon; (2) is more agile but has limitations for plugins that need to be loaded **before** the scene creation (e.g. for Python env init); (3) solves the limitation of (2) if we use plugin_list.conf but, as I said, putting stuff in bin/ is scary; (4) is what I proposed to separate ""plugins that came with SOFA"" from ""plugins I add myself"". So now about this PR. What you proposed here is to install ALL the sources of applications/plugins into this new plugins folder. ~~Why? ; @jnbrunet You got a bug yesterday, what was it?~~. EDIT: Understood what the bug is, see my review :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/959#issuecomment-470886865:129,install,install,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/959#issuecomment-470886865,3,['install'],"['install', 'installed']"
Deployability,"Hi,. Thanks for this PR and nice work. . This PR: ; - [ ] succeed to be compiled on each configuration on the CI.; - [ ] does not generates new warnings or test failure. ; - [ ] does not break existing scenes.; - [ ] does not break API compatibility. ; - [x] is now 1 week old. Once the CI will confirm nothing is broken and upon @matthieu-nesme agreement I suggest we merge this PR without waiting 1 week :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139#issuecomment-273764567:89,configurat,configuration,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139#issuecomment-273764567,1,['configurat'],['configuration']
Deployability,"Hi,. have you followed the instructions on the documentation page?; https://sofapython3.readthedocs.io/en/latest/content/Installation.html#using-python3",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1750314113:121,Install,Installation,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1750314113,1,['Install'],['Installation']
Deployability,"Hi,. nice to have you back!. I think the fact that the ```doLoad``` is called 3 times is because your callback is not connected to all your output data at the same time. So each time you ask for a data independently it will relaunch the callback. Then the second point is because you don't override the method ```doClearBuffers```. you can see how ```meshObjLoader``` has been updated in commit ca3a1a4 (I don't know how to link the commit here...); date of the commit: Date: Wednesday, June 24, 2020 2:26:41 PM. I didn't know this loader. It would be nice if you could push a small example with it's mesh in the main repository of SOFA. Like for the other meshloader in: examples/Components/loader/ ; Moreover as soon as a scene is set, it would be tested by the CI of SOFA.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1534#issuecomment-711993815:377,update,updated,377,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1534#issuecomment-711993815,1,['update'],['updated']
Deployability,"Hi,. static const int solves the inheritance of enum class, but cannot really ; be used for the purpose of typing a categorical variable. For instance we can have this :. class NumericalIntegrationMethod { public : static const int methodOne=1;};. class NewNumericalIntegrationMethod : public NumericalIntegrationMethod  ; { public : static const int methodTwo=2; };. but the integration method has to be described as :. int method=NumericalIntegrationMethod::methodOne; or int ; method=NewNumericalIntegrationMethod ::methodTwo;. but not as : NumericalIntegrationMethod method; (which would be done ; with enum). Anyway, the use of string instead of enums is also motivated with the ; issue of having descriptive labels in python or xml files. See my previous comments below :. > Right now when specifying the type of numerical integration method in ; > python or xml scripts the user had to use for instance ; > numericalIntegrationMethod=""3"" which is not descriptive at all. It is ; > preferable to use numericalIntegrationMethod=""Tetrahedron Gauss"" for ; > the maintenance of the code. Hervé. Le 13/03/2019 à 10:16, Guillaume Paran a écrit :; >; > Hi guys, what about replacing the enum by a class containing static ; > int members?; > see https://stackoverflow.com/a/644639; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub ; > <https://github.com/sofa-framework/sofa/pull/936#issuecomment-472340591>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/ASgmq8xcftMg8X0iZv9ijlhfWBJGHFwCks5vWMHsgaJpZM4a_sTV>.; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-472604359:376,integrat,integration,376,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-472604359,2,['integrat'],['integration']
Deployability,"Hi,; I suggest you give a look to this repository: https://github.com/InfinyTech3D/SofaUnity; You can also open an issue or a GH discussion on this repository related to SOFA-Unity integration.; Thank you",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4621#issuecomment-2438943844:181,integrat,integration,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4621#issuecomment-2438943844,1,['integrat'],['integration']
Deployability,"Hi,; it seems linked to qtWebEngine, could you check in the version of Qt5 you installed (manually or using distrib packages) that QtWebEngine is installed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2253#issuecomment-881226191:79,install,installed,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2253#issuecomment-881226191,2,['install'],['installed']
Deployability,"Hi,; the 21.06 release will not be upgraded anymore. Please use the 22.12 or the incoming 23.06. CGalPlugin now have soem github action to make sure it compiles using SOFA release/master branches",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2480#issuecomment-1562784168:15,release,release,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2480#issuecomment-1562784168,3,"['release', 'upgrade']","['release', 'upgraded']"
Deployability,"Hi. . Regarding the update of the plugin for newest version of SOFA : we are a small team of developer for this open source project. The maintenance of all the plugins that are actually used by the community takes most of our time. We need to focus on what most of the community needs and so, if only one person is interested in an old plugin, we cannot take a lot of time on updating it. . This being said, because SOFA is an open-source project, you can contribute by updating it yourself and the making pul-requests to give you fix to the community ! Or wait that more people gain interest in the same plugin as yourself so that it becomes a priority for us. . I am sorry if this answer is not very helpful, and I wished I could help you more. If you encounter any big issue while trying to update it, you can come and seek help, we will help you in such journey.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4934#issuecomment-2311981772:20,update,update,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4934#issuecomment-2311981772,2,['update'],['update']
Deployability,Hi; i use plugin manager in release and debug mode without any problem,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/713#issuecomment-494716530:28,release,release,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/713#issuecomment-494716530,1,['release'],['release']
Deployability,"Hmm I don't know the specifics, but usually config files used to initialise paths exist in two versions, one for the build tree, and one for the install tree. ; - On the build tree you can do pretty much what you want and use absolute paths.; - Only the install tree requires relative paths, so that it is portable. So technically if you use configuration files for the lookup of the directories where the resources are located, it can be dealt by ; - having a config file for the build tree which points to the absolute location of these ressources, ; - for the install tree two options; - no config file required provided you make sure the the install takes place in the expected relative paths location; - another config file generated with relative paths from the install binary dir to the installed resources directory",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561#issuecomment-358252038:145,install,install,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561#issuecomment-358252038,7,"['configurat', 'install']","['configuration', 'install', 'installed']"
Deployability,"Hmmmm, it's a bit hard debugging that remotely.; Personally, I would try; - looking through the system to see if there are multiple installs of cmake, and get rid of them all.; - install cmake fresh with your desired version.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761329065:132,install,installs,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761329065,2,['install'],"['install', 'installs']"
Deployability,"Hum, you would be better to have a look at VisualModelImpl, which is the real location managing the data, especially updateVisual().",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1423#issuecomment-644619454:117,update,updateVisual,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1423#issuecomment-644619454,1,['update'],['updateVisual']
Deployability,"Hum... After thinking it through a little longer, I realize that this PR is absolutely non-functional in practice. When deploying the ""installed"" config.h, the preprocessor macro is indeed replaced with the correct path in the config.h file, but, the preprocessor / compiler is not ran again for the deployment step, of course.. which means that in the binaries, SHARE_DIR is still equal to the build step value. Hence the use of a .ini file... So I'm closing this dumb PR...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/651#issuecomment-387054680:120,deploy,deploying,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/651#issuecomment-387054680,3,"['deploy', 'install']","['deploying', 'deployment', 'installed']"
Deployability,I Updated the change to take into account's guillaume comments,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1727#issuecomment-768216185:2,Update,Updated,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1727#issuecomment-768216185,1,['Update'],['Updated']
Deployability,"I added here a second version based on having a single PythonEnvironment in the scene. . This component have in charge the cleaning of python environment when the scene is about to be destroyed. . Conceptually it is quite ok, the drawback is that to be installled in the scene it have to check it does not yet existing using the getNodeObject function which is a non-constant time one. ; So compared to the 'reinit' based approach it have overhead.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/198#issuecomment-286415062:253,install,installled,253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/198#issuecomment-286415062,1,['install'],['installled']
Deployability,I agree with Hugo this make sense to be able to control if the update happens or not. . So I finally fixed the doUpdate behavior. If you want to have a look at this happens in commit: ; https://github.com/sofa-framework/sofa/commit/111e21cc23a76c7d3c0844ce7b64aa81e381d614,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258116723:63,update,update,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258116723,1,['update'],['update']
Deployability,"I agree with this idea. ; The only drawback is that all current `setRequired(true)` would require an update... To sum up, if I get it right:. - `isRequired()` should be true by default; - `hasDefaultValue()` should be true by default as well; - `setRequired(false)` should also change things so that `hasDefaultValue()` returns false; - current `setRequired(true)` should be replaced by `setHasDefaultValue(false)` or something like that...; - in BaseObject::init() print a warning/error message `if (!data->hasDefaultValue() && !data->isSet())`; - finally update the GUI to handle `hasDefaultValue()` and display an empty field if it returns false; ; Is that all, and what you had in mind?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767081198:101,update,update,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767081198,2,['update'],['update']
Deployability,I agree with you but to avoid calendar issues I would speak rather in term of release: Two releases for the transition and remove at the third one.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328523818:78,release,release,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328523818,2,['release'],"['release', 'releases']"
Deployability,"I all,. I have improved the whole mecanism so now it is off by default and we can activate it selectively (progressively) ; per component during their registration in the factory. I also added a mecanism to handle in a smooth way the deprecation of aliases as well as a update the SceneCheckUsingAlias checker. . I don't see a lot of drawback for all this work, while I see a lot of benefits, so feedback welcome.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-981677782:270,update,update,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-981677782,1,['update'],['update']
Deployability,"I also believe the find package integration is not part of cmake 3.22 for the fetch mechanism (so you can use the `FIND_PACKAGE_ARGS` option in `FetchContent_Declare`). Just trying to build the minimal example on this topic on [CMake documentation]( https://cmake.org/cmake/help/latest/module/FetchContent.html#integrating-with-find-package) will not succeed with 3.22 but won't with 3.24. With 3.22, you have no integration of this and you have to call explicitly the `find_package` manually before the fetch (as we do so far in SOFA), but this leads to the problem was citing Paul (dependence not available for all targets). Starting with 3.24, using this option solves the problem (and no need for the `find_package` call before the fetch anymore).; But I understand that we should stick to v3.22 as it is part of ubuntu22.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4586#issuecomment-2004426365:32,integrat,integration,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586#issuecomment-2004426365,3,['integrat'],"['integrating-with-find-package', 'integration']"
Deployability,"I am closing the issue for now @bcarrez . If you still encounter the issue with an updated macOS, feel free to re-open.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2028#issuecomment-834200565:83,update,updated,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028#issuecomment-834200565,1,['update'],['updated']
Deployability,"I am curious how the update of the ""original"" positions while simulating, is behaving with a barycentric mapping (which has to compute its bary coefficients from the starting position) ? 🤔",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1119316615:21,update,update,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1119316615,1,['update'],['update']
Deployability,"I am not sure it is necessary to integrate the logger. It makes the code more complex, and IMO nobody will use it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575:33,integrat,integrate,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575,1,['integrat'],['integrate']
Deployability,I am ready to rebase your branch on issofa_constraintsolving (updated with master). Are you OK for me to force push?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-337896696:62,update,updated,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-337896696,1,['update'],['updated']
Deployability,"I assume that you use MeshMatrixMass. In MeshMatrixMass, the mass integration is distributed on vertices and edges. In a hexahedron, some vertices are not connected by edges. Therefore, this type of interaction is not taken into account in the mass matrix. And that is why, you see a lot more zeros in the matrix in SOFA. I guess you will have more accurate results with tetrahedra, where this situation does not happen.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4954#issuecomment-2324019674:66,integrat,integration,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4954#issuecomment-2324019674,1,['integrat'],['integration']
Deployability,"I believe it's a hack that is probably no longer required. It was forcing an update at each step, probably from an ancien time when this code was not an Engine or when Engines were not implemented correctly. Now the Engine is automatically updated when someone read its output and any input changed so that this flag should no longer make any difference.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-257963158:77,update,update,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-257963158,2,['update'],"['update', 'updated']"
Deployability,"I can see two errors:; - one is that it seems you switched on SOFA_FETCH_PYTHON, which was the plugin related to python2 and which is not supported anymore -> just switch `SOFA_FETCH_PYTHON` off, and disable `PLUGIN_SOFAPYTHON` if it is present; - `Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS` it seems you did not install the package developement for python3 ; did your execute `sudo apt-get install python3-dev` (or `sudo apt-get install python3.8-dev`) ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612:340,install,install,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612,3,['install'],['install']
Deployability,"I cleaned the VisualModelOBJExporter alias, using the SOFA_DEPRECATED_ATTRIBUTE macro.; Doing that, I also updated the status of SOFAEXPORTER_NAMESPACE deprecation (from deprecated to disabled).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-982892045:107,update,updated,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-982892045,1,['update'],['updated']
Deployability,I confirm the configuration is way faster. Still too slow on Windows though. Thanks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277302677:14,configurat,configuration,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277302677,1,['configurat'],['configuration']
Deployability,"I consider the fetch mechanism within the Sofa subdirectories as a flawned design that is causing more troubles than it solved. And it is the n°1 cause of ""Can you help me, I updated SOFA from master it does not compile anymore "" at DEFROST (eg: https://github.com/sofa-framework/sofa/issues/4343). . This fetch mechanism is simplifing the initial ""fetch"" of the plugins but it complexify a lot every subsequent updates for each of them. . So to me, the fetches should be done outside the sofa directory structures (or not be used at all).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4409#issuecomment-1870264380:175,update,updated,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409#issuecomment-1870264380,2,['update'],"['updated', 'updates']"
Deployability,I did like for QtChart. As it is not a module installed by default in Qt. ; Otherwise be sure to tell user to install that module when installing Qt.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1315#issuecomment-608321347:46,install,installed,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1315#issuecomment-608321347,3,['install'],"['install', 'installed', 'installing']"
Deployability,I do not get why the regression on the scene [EulerExplicitSolver.scn](https://github.com/sofa-framework/sofa/pull/3928/files#diff-9816efcdf2c6953cfaef9ddaf0ed1ad8614a6527e33b2989ffa0ed956a3ffaa2) .. ever worked. It seems to diverge on both my current SOFA master and the SOFA release v24.06,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2370314650:277,release,release,277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2370314650,1,['release'],['release']
Deployability,"I don't agree, the correct way to have BoxROI not update itself, like any other engine, is to link it to inputs that are not changing, i.e. rest_position instead of position. Otherwise this will break updates after topological changes for instance...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258117944:50,update,update,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258117944,2,['update'],"['update', 'updates']"
Deployability,"I don't think the current behaviour is wrong. The order of event in the animationloop is:; ```; 1. AnimateBeginEvent; 2. SetTime(StartTime + dt); 3. AnimateEndEvent; ```. The `WriteState` component uses `AnimateBeginEvent`, so in that case, as @hugtalbot said, you should set the proper periodicity as an argument. This hardcoded fix will break the periodicity of everyone who set their `WriteState` relative to the `AnimateBeginEvent` (at the very beginning of the animation loop, before the time is updated).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/625#issuecomment-380028607:501,update,updated,501,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/625#issuecomment-380028607,1,['update'],['updated']
Deployability,"I don't think,. Graying out things, and more generally having them grouped in logical block, (as in http://doc.qt.io/qt-5/qtwidgets-widgets-groupbox-example.html) allow the user to very easily quickly understand the underlying logic that connect the fields. In addition graying things out is part of the user interface which, if well done should be separated as much as possible from your the functional logic of the component. Consequently I'm not sure that refactoring the internal logic of a component to please the GUI level is the way to go. . The difficulty with Sofa is that the components's data field (BaseObject) coherency checking is done by the component during init/reinit and the logic behind can be really complex (i.e. not just exclusive relation). We don't want to duplicate this logic at the GUI level. So...now I wonder if one solution could be to just set the ReadOnly flag in the Data during the init/reinit as well as when data changes and refresh the widget panel each time we are changing something. . This would result in the following processing: ; GUI -> Data(enableShadow) -> reinit()/update() -> change other data to be readOnly -> GUI redisplay",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/235#issuecomment-378953698:1113,update,update,1113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/235#issuecomment-378953698,1,['update'],['update']
Deployability,I don't understand this conflict because I have no conflict on my machine even when I took an update. I resolved then the conflict on github interface. Thanks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/288#issuecomment-323303622:94,update,update,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/288#issuecomment-323303622,1,['update'],['update']
Deployability,"I encountered a problem which I think is related: on my setup (Windows, debug) runSofa_d.exe crashes because it expects to find zlibd.dll, and only finds zlib.dll in build/bin/Debug. I manually copied zlibd.dll to try a quick fix, but then CImgPlugin could not load. Going to see it's dependencies, it seems to link with the non debug version zlib (which I had replaced), instead of zlibd, in the same way as it does for libpng16.; Trying to investigate, I found in the CImgPlugin CMakeLists.txt two lines (74-75) which could explain this :; ```; # Always link dependency targets in Release to avoid a Zlib debug/release mix.; # Because tiff needs zlib and tiff is only in Release in WinDepPack.; sofa_set_targets_release_only(${DEP_TARGETS}); target_link_libraries(${PROJECT_NAME} PUBLIC ${DEP_TARGETS}); ```; If someone can check, I'm not entirely sure it is the same issue though",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1851#issuecomment-790656198:583,Release,Release,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1851#issuecomment-790656198,3,"['Release', 'release']","['Release', 'release']"
Deployability,"I found the problem: the binaries shipped with the dependencies packages are compiled with a version of VS which is not 2013 or 2015. ; And if you dont use the same CRT version between fopen/fread/.... , libpng will crash.; http://stackoverflow.com/questions/29208826/libpng-1-616-crashing-on-png-read-png-in-vs2012-c :. > ; > You are passing a (FILE*) to libpng, probably using png_init_io. Visual Studio crashes inside fread when it tries to access the underlying FILE structure.; > ; > This is because you created the FILE* using fopen from one Visual Studio runtime but libpng is linked against a different Visual Studio runtime (msvcrt or something like that); the two runtimes are incompatible. And it is currently wokring with the present ImagePNG because this class set its own read function() to libpng using ; `png_set_read_fn(PNG_reader, file, png_my_read_data);`; But CImg does not.; The solution is to built new version of the binaries for each supported Visual Studio version (2013 and 2015 in our case). Moreover, we need to ship as well the debug version of those libraries, as libpng is incompatible between release and debug configurations (e.g you compile Sofa in debug and load it with libpng.dll, it will crash if you use libpng ; and vice-versa)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-286420546:1125,release,release,1125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-286420546,2,"['configurat', 'release']","['configurations', 'release']"
Deployability,"I got the problem with Windows (no Eigen3Config.cmake) with a custom out-of-tree plugin.; The problem is that this file is ""unconfigured"" (Eigen3Config.cmake.in) while extracting the Eigen archive directly.; You need a pass of Cmake/""compilation""/install to have a full directory with a configured Eigen3Config.cmake.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-619366757:247,install,install,247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-619366757,1,['install'],['install']
Deployability,I guess this is just because the first fetchable plugins' configuration file started with `3.11` and with the game of copy-paste....,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4886#issuecomment-2270108490:58,configurat,configuration,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4886#issuecomment-2270108490,1,['configurat'],['configuration']
Deployability,"I have an implementation suggestion, but it depends on the update callback mechanism (that we haven't yet merged into SOFA:; - We could plug in callbacks in the sofa::simulation::Node methods to guarantee that all bboxes in child nodes and child objects are connected to the bounding box field of their parent nodes; - We could use isPersistent() instead of isSet() to check for user input override (because isSet() doesn't tell you whether the user wrote down a value or not, but just whether or not the datafield has been modified. ANY call to beginEdit() basically sets the isSet flag to true... ); - We could leave the updateBoundingBoxVisitor as-is (except for swapping the isSet check for a isPersistent). Here would be the code:. ```cpp; // Bounding box update system proposal based on the updateCallback trackerEngines API:; // Making use of the persistent flag, if the bbox is given at component's creation (through an addObject call for instance, or manually edited through runSofa2), the bbox won't recalculate. DAGNode::doRemoveChild(BaseNode* c); {; [...];; removeUpdateCallback(""bbox_"" + c->getName());; }. DAGNode::doAddChild(BaseNode* c); {; [...];; addUpdateCallback(""bbox_"" + c->getName(), {&(c->f_bbox)}, [this]() {; sofa::defaulttype::BoundingBox* bbox = f_bbox.beginEdit();; if (!f_bbox.isPersistent()); 	bbox->invalidate();; for (auto child : this->child); 	bbox->include(child->f_bbox.getValue());; for (auto object : this->object); 	bbox->include(object->f_bbox.getValue());; f_bbox.endEdit();; return sofa::core::objectmodel::ComponentState::Valid;; }, {&(f_bbox)});; }. DAGNode::doRemoveObject(BaseObject* o); {; [...];; removeUpdateCallback(""bbox_"" + o->getName());; }. DAGNode::doAddObject(BaseObject* o); {; [...];; addUpdateCallback(""bbox_"" + o->getName(), {&(o->f_bbox)}, [this]() {; sofa::defaulttype::BoundingBox* bbox = f_bbox.beginEdit();; if (!f_bbox.isPersistent()); 	bbox->invalidate();; for (auto child : this->child); 	bbox->include(child->f_bbox.getValue());; ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-621885183:59,update,update,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-621885183,4,['update'],"['update', 'updateBoundingBoxVisitor', 'updateCallback']"
Deployability,"I have created a pull request with an initial working solution to this problem. I have updated the references to the unknown library _std::filesystem_ and rewrite them as namespace _fs_. Additionally, I have include the old headers for this library from its experimental version at **gcc-8**, so there is a possibility to use the correct ones depending on the compiler version it is used. I have created a pull request [#3994](https://github.com/sofa-framework/sofa/pull/3944).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3943#issuecomment-1587255019:87,update,updated,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3943#issuecomment-1587255019,1,['update'],['updated']
Deployability,I have faced this issue as I'm using the install of sofaPhysicsAPI. I will give a look,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/114#issuecomment-272140198:41,install,install,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/114#issuecomment-272140198,1,['install'],['install']
Deployability,"I have identified the actual issue in ```$sofa_dir/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - line 124 has a few mentions of ```/${PROJECT_NAME}``` too much, removing these at least reduces the header install path to ```$sofa_dir/build/install/include/extlibs/QGLViewer/QGLViewer/*.h```; - for some reason the ```MOC_HEADER_FILES``` (line 21 ff.) are not considered for copying by your ```sofa_create_package_with_targets``` macro. For testing I have simply copied the headers listed in ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES```. This does not affect the build and finally copies the previously missing MOC headers to the install include directory. I can make a pull request for this. Or I can wait a bit if someone has an idea on how to properly copy/install the MOC_HEADERS without the redundant mentioning in both header lists.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674:215,install,install,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674,4,['install'],['install']
Deployability,"I have no idea...is this the current master or the pre-build ? ; Since last release there was some change on RequiredPlugin (issofa_, ...). Anyhow thanks for reporting....we will investigate.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/558#issuecomment-356391607:76,release,release,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/558#issuecomment-356391607,1,['release'],['release']
Deployability,I integrated most of your changes @fredroy but changes in Data field of OmniDriver and others is really bigger work. I would like to keep the PR simple and do this in another PR later,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1019#issuecomment-487891721:2,integrat,integrated,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1019#issuecomment-487891721,1,['integrat'],['integrated']
Deployability,I just hadn't updated my workspace. but now that it's done I no longer have these warnings so it's fine,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1231329334:14,update,updated,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1231329334,1,['update'],['updated']
Deployability,I just integrated your changes @epernod,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1522#issuecomment-712304971:7,integrat,integrated,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1522#issuecomment-712304971,1,['integrat'],['integrated']
Deployability,I just merged #1052. Now you can update Regression_test commit anytime in applications/projects/Regression/ExternalProjectConfig.cmake.in :wink:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1061#issuecomment-496159792:33,update,update,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1061#issuecomment-496159792,1,['update'],['update']
Deployability,"I just replaced the nasty `add_definitions( ""-DFFMPEG_EXEC_FILE=\""${FFMPEG_EXEC_FILE}\"""" )` by a dynamic `.ini` file. ; Could you update your review @fredroy ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540442502:130,update,update,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540442502,1,['update'],['update']
Deployability,"I just tested this on SP3/Windows out-of-tree, and it works. Not sure why the Windows CI post-job failed, but it looks unrelated to this PR. I will merge this now since we need it quickly for the release.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1708#issuecomment-759584141:196,release,release,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1708#issuecomment-759584141,1,['release'],['release']
Deployability,I just updated the title of this issue,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/996#issuecomment-486112953:7,update,updated,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/996#issuecomment-486112953,1,['update'],['updated']
Deployability,"I just updated this PR. To be reviewed again.; @courtecuisse if you are not willing to read/acknowledge the work done by reviewers, then I will take the decisions and potentially (surely?) mess your work.; Cheers :v:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1549#issuecomment-882671884:7,update,updated,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1549#issuecomment-882671884,1,['update'],['updated']
Deployability,I mean the runSofa.exe( i'm using windows right now) binary placed in the ../sofa/build/bin/Release directory,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1784883754:92,Release,Release,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1784883754,1,['Release'],['Release']
Deployability,"I ment using assimp to avoid redondency. Of course we need to keep the formats not supported by assimp! ; I do not understand exactly the package dependency problem, cmake can try to find the package if not dowload / compile / install it ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369909286:227,install,install,227,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369909286,1,['install'],['install']
Deployability,"I quickly looked at SubsetTopology.inl and at first sight I wonder if there is interaction between the ; data.setParent() and the update() function. . Before the PR it is:; mydata.setParent(), addInput(mydata), then mark all dirty. . Now it is:; addInput(mydata), mydata.setParent(). It is unclear to me but I think that if something try to access one of the output data of the engine then the update function is called; with a partially valid input data.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2825#issuecomment-1088788811:130,update,update,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2825#issuecomment-1088788811,2,['update'],['update']
Deployability,I really suggest to really start deprecating all the hard coded transformation code in component for release 22.06 for complete removal in 22.12 or 23.06 :). This is relatively trivial to do it just requires an explicit deprecation workflow and a planning for that.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/259#issuecomment-1117086905:101,release,release,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/259#issuecomment-1117086905,1,['release'],['release']
Deployability,I see that @jnbrunet updated the PR..so is this PR still in WIP because it would be nice to have it merged for Sofa release 19.06.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990#issuecomment-502017027:21,update,updated,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990#issuecomment-502017027,2,"['release', 'update']","['release', 'updated']"
Deployability,"I see the benefit of having generic msg_xyz_when(cond) message, maybe they should be more general and not tied to a ""this"" pointer, like msg_xyz_when(sender, cond). In the component itself, I would rather see; component_msg_info() if (printLog) msg_info(this); with ""printLog"" data name updated; I also think ""warning"" and above (error...) levels should not depend on a flag; And last, I would call that flag ""msgInfoVerbose"" to better match what is a boolean flag name. here my 2 cents ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278334017:287,update,updated,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278334017,1,['update'],['updated']
Deployability,"I see what you want to do and of course it would be much more faster and simpler to add a new feature.; But I'm very relunctant to add an extra flag if it is redundant with others. . I would prefer to see a solution based on refactoring isRequired(), possibly with an hasDefaultValue() so we come up with a consistant and clear behavior. . EDIT:; My current thinking is thus:; - set isRequired() to true by default; - add an hasDefaultValue() (possibly implemented by using std::optional<> around Data::defaultvalue)); - change the code in BaseObject::init(); ```cpp; for(auto data: this->m_vecData); {; if (data->isRequired() && !data->isSet()); {; msg_error() << ""Required data \"""" << data->getName() << ""\"" has not been set. (Current value is "" << data->getValueString() << "")"" ;; }; }; ```; So it only warn if required and there is no default value. ; Update the GUI's so it can handle the isRequired + hasDefaultValue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762259707:856,Update,Update,856,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762259707,1,['Update'],['Update']
Deployability,"I see. :) What do you guys think about a CMake option for explicitly allowing to include non-LGPL parts in the SOFA build (default ON to stay compatible, and maybe even tag it as advanced option)? The idea is that if this switch is off, all the non-LGPL parts (or non-compatible parts) like the applications and a few plugins don't even show up for configuration anymore (technically the add_directory() call into these directories is never made in that case). Currently I have to bundle our own SOFA tarball for the purpose of getting rid of the non-LGPL parts and patch the build system a little bit to, in a nutshell, accept that parts are missing. I can continue to do so, but I'm also interested in contributing something like that. I imagine to follow the license rule mentioned in the top-level readme file: Exclude a few directories in principle and dynamically lookup the plugins if they are LGPL or not. This way, plugin developers wouldn't need to add a list entry somewhere depending on the license. They would just need to follow a convention in order to make the license determinable by the script. Could be as simple as a LICENSE.txt file or even the implementation of the getModuleLicense() function, which should be easy to parse (and is only missing in a single plugin at the moment). Opinions?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139#issuecomment-275626943:349,configurat,configuration,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139#issuecomment-275626943,2,"['configurat', 'patch']","['configuration', 'patch']"
Deployability,"I solved this problem with remove the cmake which is installed with apt, and re-install it with source file. Thanks for your information",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517523369:53,install,installed,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517523369,2,['install'],"['install', 'installed']"
Deployability,"I tested different scenarios:; If `ComponentA` is defined before `ComponentB`:. 1. A Data of `ComponentA` referring to a Data of `ComponentB` is not linked properly: the numeric value is not the right one, and Data that depends on the first Data are not updated accordingly.; 2. A Data of `ComponentB` referring to a Data that does not exist (and will not exist) does not warn the user. The link is created (pointing to nothing) with a default numeric value. Therefore, I suggest to restore the `else` statement with a warning to the user that the link does not have a parent. It seems that the case when a Data points to a Data that will be initialized later is not supported.; What do you think @damienmarchal ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2211#issuecomment-872029650:254,update,updated,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2211#issuecomment-872029650,1,['update'],['updated']
Deployability,"I tested the update of the scene graph and the msg icon, both features seem to work :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3026#issuecomment-1172259093:13,update,update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3026#issuecomment-1172259093,1,['update'],['update']
Deployability,I think - except by implementing a complicated check on time step change in both of the above components - we are good here. Only one thing remain TMO as discussed with @alxbilger : we could create a test scene inspired from caduceus using a python controller decreasing progressively the time step to check that in this configuration the simulation smoothly handles the change of time step. Anything else?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074:321,configurat,configuration,321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074,1,['configurat'],['configuration']
Deployability,"I think I have another sofa installation, but I have tested pointing CMAKE_PREFIX_PATH to /usr/local and also to /SOFA_DIR/build/install dependending on where I installed v20.06. In both cases failed. . Have u been able to replicate?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-655812712:28,install,installation,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-655812712,3,['install'],"['install', 'installation', 'installed']"
Deployability,"I think I like the PR :smile: but I lack of knowledge .. does it mean that we can use these accessor on any type not event Data?. > I added unit tests for the default class, for the vector types specialization and for the Data specialization. is this the mechanism used when the flag readOnly is set on a Data?. well.. I need to get a technical update on this!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850:345,update,update,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850,1,['update'],['update']
Deployability,"I think so; @damienmarchal do you know why the status postponed was added? I guess to wait for the release v22.12 .. If so, it should be ready",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1385189241:99,release,release,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1385189241,1,['release'],['release']
Deployability,I think that this task is connected to several topics:. - connection of SOFA with other libraries (other modeling / visualization / collision tools); - adapt the simulation pipeline and have more control on it (ASSIST..) ; - hot restart of the simulation ; - helping the debug (which is not due to C++ problem but wrong parametrization / init of the simulation),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2005#issuecomment-1559256805:173,pipeline,pipeline,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005#issuecomment-1559256805,1,['pipeline'],['pipeline']
Deployability,"I think the problem you are raising here is a more general issue in Sofa. ""Engine components"" should be used seamlessly in Sofa, without the need for a distinction. After all, as you said, they are nothing but ""components"" in the sense that they are put in your python scene just like the others, with a createObject, and are visible in the scene graph, just like the others.; Sadly, DataEngines in Sofa needs to be manipulated with care, because their behavior changes drastically from their BaseObject counterpart: They do not respect the classical execution order of the scene graph, they can be called multiple times per animation steps (or not at all), etc. If their use in Sofa wasn't so different from the rest of the Sofa components, I would also vote for a simpler name, such as PyComponent vs PyScript for the current PythonScriptController. Newcomers in Sofa tend to mix up DataEngines with standard components, ending up with behaviors that they do not understand, as their code in not executed when they expect it to be for instance.; But I guess the subject is drifting a little bit towards the Data-update topic on gitter ;); Maybe for now it's not so important to rename anything, and we should maybe wait to see how things evolve with the animation loop and usages of DDGNodes in Sofa...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406624802:1114,update,update,1114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406624802,1,['update'],['update']
Deployability,"I think this has some benefits:; - the features are already merged in the master branch and *should* work without the hassle of merging different dev branches; - they are OFF by default, so they are not disturbing anyone. But we should take care of the following:; - they must be tested (at least ONE ci config should activate them); - they are not meant to stay ""experimental"" forever, so there is an implicit contract to move them to ""non-experimental"" as soon as they are ready and working. ""EXPERIMENTAL_FEATURES"" must not be the carpet above the decisions we don't make. Typically, an ""experimental"" feature in release N should be merged in release N+1.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/517#issuecomment-345207607:616,release,release,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/517#issuecomment-345207607,2,['release'],['release']
Deployability,"I took into account @damienmarchal 's comment; Scene updated, tested and working properly. Regarding changes (refactoring) proposed by @epernod, this must be done in another PR. I do not want to refactor only obj export, otherwise SOFA would be inconsistent (look at STLExporter, VTKExporter).; I would therefore like to refactor all exporters as a clean I/O API! This will take some efforts and this is not related to this PR (which just fix and add the obj export in MeshExporter). I set this one as to review again then.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1789#issuecomment-785262772:53,update,updated,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1789#issuecomment-785262772,1,['update'],['updated']
Deployability,"I tried both with pip install gym==0.21.0 , with git clone and conda install",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757832816:22,install,install,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757832816,2,['install'],['install']
Deployability,"I understand why VS2013 does not compile (it does not support `constexpr`); But as for VS2015 ????, the GLEW error seems unrelated.... (I am compiling on VS2015 Update 1 64b with no problem)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-283614108:161,Update,Update,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-283614108,1,['Update'],['Update']
Deployability,I update my master straightaway to give it a try !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/541#issuecomment-356541350:2,update,update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/541#issuecomment-356541350,1,['update'],['update']
Deployability,I updated (again) the CI jobs to ensure new dependency packs are installed.; I also launched a rebuild for Windows last builds.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-292208317:2,update,updated,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-292208317,2,"['install', 'update']","['installed', 'updated']"
Deployability,I updated the CHANGELog.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/108#issuecomment-274531916:2,update,updated,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/108#issuecomment-274531916,1,['update'],['updated']
Deployability,"I was able to reproduce this issue, when compiling Sofa and SofaPython3 in Debug mode. When trying to add `libSofaPython3.so` through the PluginManager, it first warns the user, that the `.so` was compiled in debug mode, while Sofa was compiled in Release mode (which is incorrect).; Then, on adding the library, the above mentioned error is printed. I confirmed with `ldd libSofaPython3.so` that ` libpython3.9.so.1.0` is actually `not found`. In Release mode, it also does not find it, but does not seem to care. When adding the path to `libpython3.9.so.1.0` to the `LD_LIBRARY_PATH`, it finds it, but `SofaRuntime` is missing required functions/attributes.; In Release; ```python; >>> dir(SofaRuntime); ['DataRepository', 'PluginRepository', 'Sofa', 'SofaRuntime', 'Timer', '__SofaPythonEnvironment_importedModules__', '__SofaPythonEnvironment_modulesExcludedFromReload', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'formatStackForSofa', 'getCategories', 'getPythonCallingPoint', 'getPythonCallingPointAsString', 'getSofaFormattedStringFromException', 'getStackForSofa', 'importPlugin', 'importlib', 'init', 'inspect', 'os', 'sendMessageFromException', 'sofaExceptHandler', 'sofaFormatHandler', 'sys', 'traceback', 'unloadModules']; ```; In Debug, only `'DataRepository', 'PluginRepository'` are present (error is thrown, that `unloadModules` is missing).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858:248,Release,Release,248,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858,3,['Release'],['Release']
Deployability,"I was thinking that the ""not merging is own PR rules"" is to avoid having people merging things that have not been reviewed and received merge approval. . If the PR was agree to be merged (as was 255) and the merge order was defined (as we did during last meeting) I see no problem to merge his own PR because in this scenario, merging is just a matter of [ci-building] and clicking on the merge button. Who-ever is available to do is welcome to allow the more smooth & continuous merging of the different PR between two meeting. . But maybe there is other consequence I didn't noticed, if so could you elaborate ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/261#issuecomment-302723181:469,continuous,continuous,469,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/261#issuecomment-302723181,1,['continuous'],['continuous']
Deployability,I was wondering if there is a way to catch the missing symbols at compile-time and I found this: https://cmake.org/cmake/help/latest/module/CheckCXXSymbolExists.html#module:CheckCXXSymbolExists. It's configuration time but it could be helpful. I tried to play with it but I was not able to make it work. I added the check in the `sofa_create_package_with_targets` macro.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1914295607:200,configurat,configuration,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1914295607,1,['configurat'],['configuration']
Deployability,"I would like to schedule a hangout in the coming days to synchronize everyone's job on CI. I have the feeling that everyone is not up-to-date with the current CI status, and I came to the point I would not touch anything until I understand clearly what has been done recently. ; This includes jenkins updates, use of tests ci scripts, etc.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186#issuecomment-282669576:301,update,updates,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186#issuecomment-282669576,1,['update'],['updates']
Deployability,I would say for the v22.12 release @alxbilger ; It would suit @Camille-K @fredroy,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1372729092:27,release,release,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1372729092,1,['release'],['release']
Deployability,"I would say that we should drop Qt4 support (Qt5 has been released 5 years ago), and the new GUI will need Qt5.7 anyway....",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/311#issuecomment-311992201:58,release,released,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/311#issuecomment-311992201,1,['release'],['released']
Deployability,"I would vote for yes too. This has been discussed for a long time now. Online documentation is already updated to ""use your own Boost"".; Cleaning as much as possible Boost dependencies that are redundant with C++11 features is another topic in my opinion.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/33#issuecomment-258135230:103,update,updated,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/33#issuecomment-258135230,1,['update'],['updated']
Deployability,"I' ve updated the SDK; `Selecting Windows SDK version 10.0.22621.0 to target Windows 10.0.22631.` ; and v22.12 successfully compiled . As a the last resort, you may; - update everything (MSVC/SDK); - delete the build folder. and try again",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835616437:6,update,updated,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835616437,2,['update'],"['update', 'updated']"
Deployability,I'll try later with a docker image to ensure there is no rest of previous installs,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656196361:74,install,installs,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656196361,1,['install'],['installs']
Deployability,I'm a bit confused about config.h inclusion pipeline. Could you explain the necessity of having both initModule.h and config.h headers?; see #904,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/915#issuecomment-460980431:44,pipeline,pipeline,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/915#issuecomment-460980431,1,['pipeline'],['pipeline']
Deployability,"I'm always having a hard time designing this type of workflow...; I agree with you that it's way easier to have a branch than a commit in GIT_TAG.; What will happen though is that SOFA CI could be failing because of changes in SP3/master. . For instance, this will happen:; ~~1. Bob opens a SOFA PR that breaks SP3~~; ~~-> the SOFA PR fails on SOFA CI~~; ~~2. Bob opens a SP3 PR to propose a fix to this future change in SOFA that will break SP3~~; ~~-> the SP3 PR fails on SP3 CI (because it fixes something that is not broken yet)~~; ~~3. Thanks to my work on ExternalProject, SOFA CI is able to test the SOFA PR with a custom version for SP3 (the version of the SP3 PR)~~; ~~-> the SOFA PR succeeds on SOFA CI~~; ~~4. Both PRs are merged (in any order)~~; ~~5. **All the other SOFA PRs are now failing on SOFA CI** and must be updated with SOFA/master~~. EDIT: corrected version below",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821081219:830,update,updated,830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821081219,1,['update'],['updated']
Deployability,I'm ok to deprecate PSL until it is updated to SofaPython3 :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545470894:36,update,updated,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545470894,1,['update'],['updated']
Deployability,I'm ready to rollback some of the removals. Does it concern **all** SofaOpenglVisual ones?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/905#issuecomment-458464405:13,rollback,rollback,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/905#issuecomment-458464405,1,['rollback'],['rollback']
Deployability,I'm using sofaCUDA on windows. Will try to install it on my ubuntu 18.04,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484829462:43,install,install,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484829462,1,['install'],['install']
Deployability,"I've added the `v5.1.0-ModernInstall` branch to our fork. Actually this code wasn't on the repo itself so I just copied the files presents in SOFA and added my CMake configuration files. It compiles, you can try to add the find or fetch mechanism using this",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1938474654:166,configurat,configuration,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1938474654,1,['configurat'],['configuration']
Deployability,"I've put this PR in wip to avoid overloading the CI while you integrate all the comments. Once you've finished all the review, you can change the tag back to to review and then trigger the CI with the usual comment.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4679#issuecomment-2083052979:62,integrat,integrate,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4679#issuecomment-2083052979,1,['integrat'],['integrate']
Deployability,INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2150,Release,Release,2150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"In f93e2b9 I wanted to restore the default behavior of ca0402d which had PluginRepository initialised with ; - the current working directory ( hence the ""./"" ) of the applications since on windows platform. By default, on windows the dlls are located in the same directory as the application. For example `runSofa` and `SofaPython.dll` are both in the same directory; - the `../lib` directory for other platforms like linux, where the plugins are usually stored in a `lib` sub folder of the parent directory where the application reside. For example from the directory where the `runSofa` executable is, you can look for the directory where `SofaPython.lib` is located by doing `cd ../lib`. These paths are relative and are compatible both with a build tree and an install tree. Prior to f93e2b9 the PluginRepository was empty by default, leaving all the executables the responsibility to fill it with these values. Behavior which was changed multiple times compared to ca0402d for a reason yet to be explained. The side effect this change introduced was the requirement to have every unit test executable which attempts to load a plugin to explicitly fill the PluginRepository with the paths where the libraries are located with respect to the executable. This requirement was covered by having most of the unit tests depend on SofaGTest which initialize these default paths for you, so that test scenes that use a ` RequiredPlugin` component do not utterly fail. ; Unless a **valid** argument is raised, the aforementioned paths should be the default ones to use to initialize the `PluginRepository` global object. ; I strongly believe that would these paths have been properly restored by f93e2b9 (my bad), this PR would have never existed on the first place. I mean how much time has been lost already in fixes, and discussions because of this ! Just to in the end roll back to the implementation that was done 5 years ago which was **just working**. The other thing I mentionned in the comment ht",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342557659:765,install,install,765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342557659,1,['install'],['install']
Deployability,In last commits:; - DataTrackerEngine is deprecated; - CallbackEngine is renamed as DataTrackerCallback & tests use it instead of the deprecated DataTrackerEngine; - Updated doc for the DataTrackerCallback; - const DataTracker& passed as argument to callback function: this makes it possible to call hasChanged() on datafields using the dataTracker in each DataTrackerCallback. @jnbrunet @damienmarchal if that's OK with you. If it passes I think that should be all on this PR,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1406#issuecomment-645446057:166,Update,Updated,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1406#issuecomment-645446057,1,['Update'],['Updated']
Deployability,"In my opinion, all *GridTopology should be removed, and replaced with an engine computing a grid and then set into a Topology.; In this case, the bug comes from the facts that the ""position"" field (a Data called seqPoints in the code) is used both as input and output. So I strongly suspect that the update mechanism is overwritting the values. If you remove the oglmodel (and add the facets...), it works. ```xml; <MeshObjLoader name=""loader1"" filename=""mesh/cylinder-1.obj"" translation=""0 2 0""/>; <SparseGridTopology name=""grid1"" n=""4 2 4"" src=""@loader1"" drawHexahedra=""1"" />; ; <MeshObjLoader name=""loader2"" filename=""mesh/cylinder-1.obj"" translation=""0 0 0""/>; <SparseGridTopology name=""grid2"" n=""4 2 4"" src=""@loader2"" drawHexahedra=""1"" />; ``` ; <img src=""https://user-images.githubusercontent.com/11028016/114160763-90614480-9927-11eb-9ba8-4961a83a5fac.png"" width=""300"" >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1975#issuecomment-816556748:300,update,update,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1975#issuecomment-816556748,1,['update'],['update']
Deployability,"In terminal, I check the cmake version is 3.26 using ""cmake --version"". But I don't know why the cmake 3.16 is used by cmake-gui (I installed it with `sudo apt-get install cmake-gui` which is mentioned in sofa build website documentation)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517410385:132,install,installed,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517410385,2,['install'],"['install', 'installed']"
Deployability,"Indeed, in the paper they say that they use the initial volume of each element, instead of recomputing it. I'm not sure I understand it correctly, but it seems to me that this is not actually 'the good way', just something made possible by the fact that the volume can be directly multiplied to the Strain Displacement matrix, without creating artificial torque. So you can make the assumption that the volume of the element doesn't change much, and that using its initial volume during the whole deformation is a good approximation, which saves computational time.; It would be better if someone could comment on this, because I really don't know if I'm right. That being said, when looking in the code of `TriangleFEMForceField`, the area of the triangles seems to be recomputed anyway in `computeStrainDisplacement`, with:; ```; Real determinant = b[0] * c[1]; // Surface * 2; ```; which is used to update the Strain Displacement matrix at each time step. By comparison, the difference with `computeStrainDisplacement` in `TriangularFEMForceField` is juste the next line; ```; determinant = b[0] * c[1];; triangleInf[elementIndex].area = determinant*0.5f;; ```; Following the paper, I think the computation of `determinant` at each time step should also be replaced by the triangle initial area. Or alternatively, follow the same version as in `TriangularFEMForceField` and update the triangle's area to make use of the computation. Finally, but not related, the 'area' used in the material behaviour matrix of `TriangleFEMForceField` is actually a 'volume' with a default thickness of 1. I don't know if this feature is actually used, but if so it changes a bit the physical interpretation between `TriangleFEMForceField` and `TriangularFEMForceField`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2275#issuecomment-1061899813:902,update,update,902,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275#issuecomment-1061899813,2,['update'],['update']
Deployability,"Indeed, it can be cumbersome to change simple values in the data inspector. Good point the video ;) but YouTube does not show it, is it private ?; When you change the data value, the data is updated as soon as the mouse moves left&right, correct ? I am no expert in UX, but it this the best way to do it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/750#issuecomment-413484007:191,update,updated,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/750#issuecomment-413484007,1,['update'],['updated']
Deployability,"Instead of adding `libjpeg` as a dependency on the core of Sofa, I would support doing the opposite, i.e. removing `libpng+zlib` by only keeping the abstract `Image` class in `sofa::helper`, and including the derived classes in plugins, where we could only use by default the Qt-based implementation, so only for projects choosing not to include the Qt GUI they would have to enable the other implementations based on libpng/libjpeg, or CImg, or whatever is easier to integrate, given that it's a nearly trivial piece of code to implement to plug any image library. But it does require to be consistent in the resulting format (in particular whether the data is provided `TopDown` or `BottomUp`).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/51#issuecomment-261507665:468,integrat,integrate,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/51#issuecomment-261507665,1,['integrat'],['integrate']
Deployability,"Interesting, I compiled on the CI with just the FAST_MATH option enabled and those tests fails; ```; [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta2ExplicitSolverDynamic_test.rungeKutta2ExplicitSolverDynamicTest_high_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta2ExplicitSolverDynamic_test/rungeKutta2ExplicitSolverDynamicTest_high_dt_0/); [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta4ExplicitSolverDynamic_test.rungeKutta4ExplicitSolverDynamicTest_medium_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta4ExplicitSolverDynamic_test/rungeKutta4ExplicitSolverDynamicTest_medium_dt_0/); [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta4ExplicitSolverDynamic_test.rungeKutta4ExplicitSolverDynamicTest_small_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta4ExplicitSolverDynamic_test/rungeKutta4ExplicitSolverDynamicTest_small_dt_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralImplicitOdeSolver_test_VariationalSymplecticExplicitSolverDynamic_test/variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_medium_dt_with_damping/0](https://ci.inria.fr/sofa-ci-dev/jo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769:347,release,release,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769,2,['release'],['release']
Deployability,Interesting. . My first investigation trials would be to check the scene in debug vs release (be sure that --fastmath is not activated).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3036#issuecomment-1152512851:85,release,release,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3036#issuecomment-1152512851,1,['release'],['release']
Deployability,"Is not the problem that the PluginRepository should contain ""../lib"" instead of ""./"" on gcc ? I do not remember where libraries are installed on this platform ( ./bin ? ../lib ? ). If ../lib I guess there is already built in trick (maybe in CMake) so that the LD_LIBRARY_PATH ( or RPATH ) is properly set.; Also I believe there is some kind of code duplicate which also brings confusion between PluginRepository global variable and the Utils::getPluginRepository. They should always return the same thing so why not . ```; Utils::getPluginDirectory(); {; return PluginRepository::getFirstPath(); ; }; ```. Or is there some legitimate reason for doing otherwise ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502#issuecomment-340518769:132,install,installed,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502#issuecomment-340518769,1,['install'],['installed']
Deployability,"Is this CI error is related to the PR ? ; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1034/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/6/testReport/(root)/Assembly_test/testDecomposedString/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1034#issuecomment-494401840:156,release,release,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1034#issuecomment-494401840,1,['release'],['release']
Deployability,"Is this fine as a new way to manage renaming of C++ data in SOFA @alxbilger ? does the need of overload of the destructor is fine ?; If so, the PR is fine and we should update the [deprecation documentation](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/#removing-a-datafield)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1641625273:169,update,update,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1641625273,1,['update'],['update']
Deployability,"It is probably using the rest area since it is working with a Lagrangian formulation. This is also what we use in other FEM code (tetra and hexa) where the integral is computed on the rest (undeformed) domain. For linear elements (triangle, tetra), it will multiply the integrand with the initial volume (or area for triangle) to get the integral result over an element. For trilinear or higher degree elements, it will use Gauss integration points where derivatives of the shape function, and the determinant of the jacobian of the transformation matrix are computed at the initial (undeformed) domain. Kinematics quantities from the current state are transformed into the initial domain using a transformation matrix. . I would therefore think that the `TriangleFEMForceField ` is the ""good"" one in the sens that it is following the big majority of SOFA code with a Lagrangian formulation. . You could always compare the result against another FE software such as FEBio and FEnIcs which are free. I can help you with that if you want.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2275#issuecomment-1063094133:430,integrat,integration,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275#issuecomment-1063094133,1,['integrat'],['integration']
Deployability,It looks like it never tried to load SofaPython3 (even with the flag I told you) which is really weird. Last thing you can try is edit the file `C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default` and add `SofaPython3` inside,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1793886110:202,Release,Release,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1793886110,1,['Release'],['Release']
Deployability,"It looks like the intialization of the MO when nothing is given in input is a problem .. not sure. I see [this test](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1977/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/1/testReport/UnitTests/SofaDeformable_test_RestStiffSpringsForceField_test/defaultBehaviorVec3/)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-816682682:235,release,release,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-816682682,1,['release'],['release']
Deployability,"It looks like: ""explicit Data(const BaseData::BaseInitData& init)"" allow you to easily copy data without value. Then you can add a parent and update value from the parent value. But, this is not what I'm looking for since BaseInitData flag the parent data's owner to add the new data. Meaning you can have troubles when inspect the component with two data having the same name (crash). . So, I decided to not implement a copy/clone function since I want something too specific.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/582#issuecomment-364945775:142,update,update,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/582#issuecomment-364945775,1,['update'],['update']
Deployability,It might have been breaking becausr the configuration file might have changed. I prefered to put this tag if in the future we see that we havr issue regarding this we will find this pr quickly.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4842#issuecomment-2252112860:40,configurat,configuration,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4842#issuecomment-2252112860,1,['configurat'],['configuration']
Deployability,"It seems to be coming from a setup/system/configuration error than something related to SOFA itself, as the error is coming from the Windows SDK itself.; Which version of MS Visual Studio are you using ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835458410:42,configurat,configuration,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835458410,1,['configurat'],['configuration']
Deployability,"It should be zero by default in my opinion. ; There is also a little confusion because there are currently two ways to specify the rayleigh damping parameters. ; If you use `EulerImplicitSolver` rayleigh damping is specified at the solver level. ; However both the `ForceField` and `Mass` API in SofaCore also implements rayleigh damping... provided you use `kfactorIncludingRayleighDamping` instead of `kfactor` when assembling the stiffness and the mass. This changed was introduced quite a long time ago, because in the Compliant plugin, the solvers for time integration do not implement global Rayleigh damping, but a more ""local"" one, delegated to each of the `Mass` and `Forcefield` components. ; So short answer is : yes should be zero. But it could break a **lot** of scenes that extensively rely on the default damping values to actually work... which mostly happens when you do not pay attention about the unit system you want to use in your scene ( e.g meters and kilograms versus millimetres and grams ) . I would also like to have the opinion of someone knowledgeable in that particular area. Rayleigh stiffness factor, contrary to Rayleigh mass factor, is not unit less. It is s^-1 as far as I can remember. Would it be better to specify it as unit less factor instead (and then have it internally divided by the current time step value), so that the value has a sort of consistent meaning regardless of the time step chosen ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/338#issuecomment-316636803:562,integrat,integration,562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/338#issuecomment-316636803,1,['integrat'],['integration']
Deployability,It took me time but I think I finally got the working of the collision responses stuff. As this PR change the way the component behave do you think it is possible to detect when a scene is using the old-style to print a warning message telling the users to update their scene ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/91#issuecomment-265487181:257,update,update,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/91#issuecomment-265487181,1,['update'],['update']
Deployability,"It was supposed to be supported from VS2015: https://docs.microsoft.com/en-us/cpp/build/reference/zc-cplusplus?view=vs-2015 . But according to https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/ , it seems to be enabled only from VS2017 Update 15.7 . For now, this option is not needed while the C++ standard is still c++11. ; And the moment we enable c++17 will be the same time we will abandon VS2015, so everything should be OK (in theory)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1192#issuecomment-544416773:264,Update,Update,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1192#issuecomment-544416773,1,['Update'],['Update']
Deployability,"It's probably due to the version of CUDA. You can try to downgrade to cuda 11. But you can also upgrade SOFA (v23.12), as it is now compatible with CUDA 12.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4579#issuecomment-1991585902:96,upgrade,upgrade,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579#issuecomment-1991585902,1,['upgrade'],['upgrade']
Deployability,"It's something that is too general to make it specific to BoxROI. What about SphereROI, EllipsoidROI, ... ?; There are several ways to handle this use case (using an Engine to compute something once or only at specific triggers):; 1. don't use a link but copy the data manually (but easily) using python for instance; 2. add a new link syntax that would not automatically trigger updates, or that would break itself after the first update / the init is done (which is a common request for use-cases for computing initial positions for instance); 3. add a new component that can be used instead of a Link for use cases where we want more control. In our codes we use the third option, we added a trivial component that we call `ValueStore`, which has a Data `value` inside with the ability to copy the value (and implicitly request the update of an Engine linked to it) to another Data manually (but as efficiently as a Link) at specific times (currently after each time step, but it could be customised).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258131540:380,update,updates,380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258131540,3,['update'],"['update', 'updates']"
Deployability,"Just a bit of explanation:; -> fetching matrices using glGetFloatv(GL_{MODELVIEW/PROJECTION}_MATRIX is really, really old-style OpenGL and should be avoided. That's why one should use the stored matrices in visualParams. ; In this case, the matrices were not updated during the 2nd viewport rendering ; code using glGetMatrix() was fine but code using things stored in visualparams was not.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1500#issuecomment-700519121:259,update,updated,259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1500#issuecomment-700519121,1,['update'],['updated']
Deployability,"Just got the issue myself in Release mode, and this fixed the problem.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1839#issuecomment-783344160:29,Release,Release,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1839#issuecomment-783344160,1,['Release'],['Release']
Deployability,Just had a look and it seems not messing with installation nor packaging :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/766#issuecomment-419160373:46,install,installation,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/766#issuecomment-419160373,1,['install'],['installation']
Deployability,"Just my 2 cents, if there is an option to disable it, I'll probably use it even tho I have Qt5WebEngine installed, since I like to keep only the minimum options activated to reduce compilation time and I don't think I'll use this feature.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1315#issuecomment-608321479:104,install,installed,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1315#issuecomment-608321479,1,['install'],['installed']
Deployability,"Just my 2 cents, on macOS 10.14.5, Xcode 10.2.1 , Cmake 3.15.0 and Sofa sync with master, I don't have any error with the configuration.; **BUT** Cmake 3.15.0 wants to link the OpenGL framework from a non-existing /Applications/Xcode-beta.app (I dont have any beta version of XCode), and obviously breaks the make process.; So I suppose there are some bugs in the 3.15.0 version of cmake.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-514153931:122,configurat,configuration,122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-514153931,1,['configurat'],['configuration']
Deployability,"Just one small concern ( that can be included if that is not already the case ).; Does the functionnality currently also work with a debug compilation ? ; There may be also some extra care to be taken with multi configurations ide like visual studio, where the same build tree can generate multiple binairies in different folder, and possibly with different names ( for example the '_d' suffix that usually comes along with debug librairies ). On the ""bright side"", if the functionality is not yet there in this PR, I presume all the necessary informations can be extracted from the cmake target properties, so it **should** be feasible. Also it would be more generic since the cmake target name, and the name of the generated binary can differ ( even if this is not a common practice )",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301#issuecomment-312257491:212,configurat,configurations,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301#issuecomment-312257491,1,['configurat'],['configurations']
Deployability,"Just pushing the problem, but a solution could be to just update QWT to 6.1.5.; Extract of the Changelog of Qwt 6.1.5: ; `- Missing includes of QPainterPath ( Qt 5.15 ) added`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1496#issuecomment-698234678:58,update,update,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1496#issuecomment-698234678,1,['update'],['update']
Deployability,Just updated it @jnbrunet let me know if the explanations suit you,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1830#issuecomment-783558014:5,update,updated,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830#issuecomment-783558014,1,['update'],['updated']
Deployability,Just updated with master to resolve conflicts. I hope I didn't break anything :grimacing: ; EDIT: Of course I did break everything. I'm on it.; EDIT2: Fixed!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2896#issuecomment-1128631640:5,update,updated,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2896#issuecomment-1128631640,1,['update'],['updated']
Deployability,"Looking at this plugin's CMakefile, I can see; ```; ...; AddCompilerDefinitions(""SOFA_BUILD_OPTICALFLOW""); AddLinkerDependencies(${OpenCV_LIBRARIES}); ...; ```. which is wayyyyy too old, these keywords have not been used since SOFA's v15.12 (7 years ago).; So you (or this plugin creator @rouge1616 Nazim 🤗) need to update it for your current version of SOFA (which I guess is v22.06). And the code itself will certainly need to be updated as well...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824:316,update,update,316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824,2,['update'],"['update', 'updated']"
Deployability,"Looks good to me, any idea what is the issue with the `emptyForceField.py` (unrelated to this PR) ?. https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2804/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/8/testReport/SceneTests/applications_plugins_SofaPython3_examples/emptyForceField_py/. thanks @fredroy for the change and @alxbilger for the vigilance :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1108841718:216,release,release,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1108841718,1,['release'],['release']
Deployability,"MFC/ATL SDK is needed to get this header (it is proposed in Visual Studio installer).; I tried to remove it once and had an issue, will retry and log here.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/448#issuecomment-334512592:74,install,installer,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/448#issuecomment-334512592,1,['install'],['installer']
Deployability,"Make sense that this error does not appear on the CI, as the assert() is not processed by the compiler in other mode than Debug (and I suppose the CI compiles in Release mode with MSVC); and the ambiguity comes from the fact there are two invalidID things, one defined in the sofa namespace and one other defined in the defaulttype namespace for compatibility.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1577#issuecomment-719695958:162,Release,Release,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1577#issuecomment-719695958,1,['Release'],['Release']
Deployability,"Make sure you have Python 3.8.; Overall, read carefully the documentation: https://sofapython3.readthedocs.io/en/latest/content/Installation.html",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4159#issuecomment-1716050172:128,Install,Installation,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4159#issuecomment-1716050172,1,['Install'],['Installation']
Deployability,"Max, if I follow correctly, the way you propose would not break existing code? And we could have both regular Data and Class-handled Data at the same time? So we could update components little by little? It definitively worth trying it. Something tricky with actual Data is the multithreading management, maybe someone at InSimo could tell us a word about that?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255388630:168,update,update,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255388630,1,['update'],['update']
Deployability,Maybe we should add in the object factory a way to detect the use of Vec3f and warn user that it needs to update its scene to use Vec3 instead. So we can start simplifying the code base ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/495#issuecomment-440306342:106,update,update,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/495#issuecomment-440306342,1,['update'],['update']
Deployability,MeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/S,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5719,install,install,5719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"Minor comment otherwise fine to me.; Just the scene [_CarvingTool.scn_](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1110/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/2/warnings3Result/) is now failing due with the new checks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1110#issuecomment-520876839:186,release,release,186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1110#issuecomment-520876839,1,['release'],['release']
Deployability,"Minor remaining change use pre processor #if condition instead of #ifdef (since it allows to detect more various cases: is defined and true, defined and false or undefined); CGAL : remove changes and integrate changes from #1308; → back to wip",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1281#issuecomment-607121544:200,integrat,integrate,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1281#issuecomment-607121544,1,['integrat'],['integrate']
Deployability,"My 2 cents... . Taking ""16 days to merge 20 lines of code is a waste of time"" is true...and this is the consequence that no-one ever took time to handle that properly. As usual no one's concerns tend to become everyone's waste of time. . My suggestion to fix that is:; - 0) make a style sheet that matches the Sofa guideline (or change the guideline to match an automated formatter style sheet which is much easier :)); - 1) apply an automated style sheet to format the whole code base. ; - 2) when making PR, everyone should apply the provided style sheet.; - 3) when merging a PR, the automated stylesheet should be applied again. . But ho wait ! ; Some told me here is already a stylesheet for astyle (to use in qtcreator) since years in the tools/astyle ; directory. ; This may be a good starting point for (0) and (1). . What about having 0 et 1 done for 17.16 release ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353068497:866,release,release,866,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353068497,1,['release'],['release']
Deployability,"My bad for Windows error, the dependency pack was updated too soon. #566 needs to be merged. In the meantime I restart your build with the old dependency pack ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565#issuecomment-358918900:50,update,updated,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565#issuecomment-358918900,1,['update'],['updated']
Deployability,"My contribution to the discussion:; - sofa; - core (no more components are in the core except stuff like RequirePlugin and few others); - plugins (here are all the components); - sofastandard; - the pluginized version of all the modules (but at first without reorganizing them) ; - plugin1; - plugin2; - myplugin (organized as in my previous contribution); - ...; - ...; - . To me this kind of first step can be make without breaking anything in sofa and with great benefit. ; Let me explaine: the include path can have SofaStandard so that external code using the ""modules"" (eg: #include<SofaMiscFem/TheFEMILike.h>) don't need to be updated and only adding something like find_package(SofaStandard) or more specifically find_package(SofaStandardMiscFem). . The immediate benefit of that is:; - people that don't want all the stuff in SofaStandard can disable the plugin (and compile sofa in 1min). ; - people that want only the minimal set of good component component in SofaStandard compile sofa with the componentset ""light"" (and compile sofa in 3 min); - people that want the existing sofa with all the deprecated (but still working) compile it with the SofaStandard plugin and componentset ""full"" (and compile sofa in 30 min). Of course doing this easy step shouldn't prevent us from further refactoring, people that likes the SofaStandard components can re-organize and clean things. But this can be done incrementally when ones have time to devote to that. . DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/426#issuecomment-334453375:634,update,updated,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/426#issuecomment-334453375,1,['update'],['updated']
Deployability,My guess is this PR is really a kick in the 💩 ; I came up to this single line fix because Data update were looping between engine using dofs as input and forcefield and mapping....; In the list of failing test could you pick one that you know is supposed to work and I'll check what changed.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-815097407:95,update,update,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-815097407,1,['update'],['update']
Deployability,My hero! It was so frustrating to use cmake on SOFA (on Windows). Thanks a lot!. Could you tell me how you profile the cmake configuration?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277254445:125,configurat,configuration,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277254445,1,['configurat'],['configuration']
Deployability,"My point is that the discussion is not whether or not a PR can be breaking or not...because on that everyone agrees...the conclusion is that of course a PR can be breaking.; ; The real discussion is more on:; - how do we manage breaking change to avoid messing others code base and activity because of a sudden change. On that, please have a look at PR #329 ; - what kind of integration & merge flow we can have to facilitate merging of complex/changing PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/318#issuecomment-315894097:375,integrat,integration,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/318#issuecomment-315894097,1,['integrat'],['integration']
Deployability,NFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManage,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4945,Release,Release,4945,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,NFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sof,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2437,Release,Release,2437,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"NG1 update: (v20.12 & master). <img src=""https://user-images.githubusercontent.com/11028016/106576513-842ec480-653d-11eb-91ee-7ffb3228b72f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106576614-a7597400-653d-11eb-897b-e206951575ba.png"" width=""350"" >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527#issuecomment-771480416:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527#issuecomment-771480416,1,['update'],['update']
Deployability,"Nice job, it is indeed faster on my computer too. ; For the artifact, it still appears at the top of the beam on the contact, at step 46 (see image) event with your modified scene (I saw only the ShewchukPCGLinearSolver that was different). . ![image](https://github.com/sofa-framework/sofa/assets/30337881/45010585-c1e3-4f89-9e9b-f201bd700a29). Would be great to know what are the difference between our compilation configurations.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640447331:417,configurat,configurations,417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640447331,1,['configurat'],['configurations']
Deployability,No need to this PR anymore...because it was for integration into stc5 branch. I will re-open a new one against master.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/836#issuecomment-444484072:48,integrat,integration,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/836#issuecomment-444484072,1,['integrat'],['integration']
Deployability,No update since two month. I close the issue unless someone want to say something more.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/318#issuecomment-331409975:3,update,update,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/318#issuecomment-331409975,1,['update'],['update']
Deployability,"No, clicking refresh does not update the values. :(",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315489270:30,update,update,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315489270,1,['update'],['update']
Deployability,"No, the PR #797 is included in this one. ; I just wanted to split both contributions to ease the review somehow. ; It compiles on my two computers, isn't it a problem with plugins? The cleaning indeed could break some not updated code.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/798#issuecomment-432562220:222,update,updated,222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/798#issuecomment-432562220,1,['update'],['updated']
Deployability,"No, we should upgrade the CI to support this PR :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-584161233:14,upgrade,upgrade,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-584161233,1,['upgrade'],['upgrade']
Deployability,Not for myself:; registerTopologicalData() add handler to the full list of handler which launch; updateTopologyHandlerGraph; updateDataEngineGraph; and add the handler between topology Data and output of handler. So register is needed after linkToTriangleDataArray methods.; Need to change all that mechanism.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2013#issuecomment-826008753:97,update,updateTopologyHandlerGraph,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013#issuecomment-826008753,2,['update'],"['updateDataEngineGraph', 'updateTopologyHandlerGraph']"
Deployability,"Not really, #461 was a quick fix.; The real fix is to update libQGLViewer to latest version.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/464#issuecomment-350731008:54,update,update,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/464#issuecomment-350731008,1,['update'],['update']
Deployability,"Not really, but only because of my lack of understanding of these integration factors :-). I'm sure this PR is fine, I was just curious. Really looking forward to our next white board meeting !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-626135738:66,integrat,integration,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-626135738,1,['integrat'],['integration']
Deployability,Not yet indeed; It would take the update / cleaning by @remibessard then we could start having it,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2484#issuecomment-1500285063:34,update,update,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2484#issuecomment-1500285063,1,['update'],['update']
Deployability,Note that the graph is not updated if a slave is added during a time step. The tab switch is still a workaround.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-964067255:27,update,updated,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-964067255,1,['update'],['updated']
Deployability,"Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240:16,pipeline,pipeline,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240,1,['pipeline'],['pipeline']
Deployability,Nothing much ; as everybody is debugging in ReleaseWithDebugInfo mode 🤔 ; I will let it on stand-by for now.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1328#issuecomment-665128049:44,Release,ReleaseWithDebugInfo,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1328#issuecomment-665128049,1,['Release'],['ReleaseWithDebugInfo']
Deployability,Now I also have this issue for Release build on v22.06.00 of SOFA and v22.06 of SofaPython3. @guparan Is there a CI check for loading a SofaPython3 scene after a fresh SOFA build in either SOFA or SofaPython3 repo?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1212543654:31,Release,Release,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1212543654,1,['Release'],['Release']
Deployability,"OK I agree that this allows to compile Flexible without the SOFA-HighOrder. Before moving SOFA-HighOrder to the gitHub repo, do any of you know if ; there are plans to move those plugins outside of github ?. My understanding is that at some point SOFA was going to be cut into ; several pieces that could be optionally compiled. Is this still on the radar ?. Hervé. Le 05/10/2016 à 15:27, thomas-lemaire a écrit :. > yet an other option is to conditionnaly compile HighOrderTopology code ; > in Flexible based on whether the HighOrderTopology plugin is existing ; > or not (in cmakelists package_require(HighOrderTopology) if ; > (HighOrderTopology_FOUND) ... ):; > - each plugin can live in its own repository; > - no need for a third plugin; > - should work whether all the plugins are compiled in the same cmake ; > build project or are compiled/installed separately (well ; > HighOrderTopology must be available when compiling Flexible); > ; > thomas; > ; > ----- Mail original -----; > ; > > De: ""Matthieu Nesme"" notifications@github.com; > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > ; > > Hi Hervé,; > > ; > > In general, I think it is a good idea to have a repo per plugin, ; > > even if it; > > becomes more difficult to update them when the sofa core is modified.; > > But in this specific case, it would be great to add this plugin to this; > > github repo, so Flexible can still benefit from your code.; > > ; > > Another solution, could be to add a third plugin in your independent; > > repository, that would link with both SOFA-HighOrderTopology and ; > > Flexible,; > > and that would contain the high order shape functions.; > > ; > > What do you think?; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub , or mute the thread .; > ; > —; > You are receiving this because ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233:849,install,installed,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233,1,['install'],['installed']
Deployability,OK I'll update mine ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1089#issuecomment-504909034:8,update,update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1089#issuecomment-504909034,1,['update'],['update']
Deployability,"OK,; I updated the PR with a few things:; 1 / the test now checks the content of the generated files for error; 2 / Monitor has an additional data field ""fileName"" through which one can override the default path to the generated files; 3 / Monitor now respects basic coding guidelines; Looks a bit better now",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828:7,update,updated,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828,1,['update'],['updated']
Deployability,O] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManage,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5083,Release,Release,5083,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"Of course the PR will be breaking and we will need to update our code base. ; But this is all for the good. ; ; Clearly congratulation @SofaFramework for such high quality management of software evolution. So if I understand correctly, this will be merge into master the day after the official release of v22.06 right ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174731843:54,update,update,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174731843,2,"['release', 'update']","['release', 'update']"
Deployability,Ok after review... I closed #1012 and updated only this one as it contains the all the commit history..,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1013#issuecomment-489234802:38,update,updated,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1013#issuecomment-489234802,1,['update'],['updated']
Deployability,Ok it would be nice :+1: my point is only not to brake NG roadmap progress; Let's update about it within the next days,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1799#issuecomment-786747437:82,update,update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799#issuecomment-786747437,1,['update'],['update']
Deployability,Ok it's fixed now. Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/ :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1891#issuecomment-790873391:38,update,update,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891#issuecomment-790873391,1,['update'],['update']
Deployability,"Ok thanks for the udpate, I was wondering where it was coming from. ; For the record this is the info from the version of visual studio express 2015 I am using. Microsoft Visual Studio Express 2015 for Windows Desktop; Version 14.0.25425.01 Update 3; Microsoft .NET Framework; Version 4.7.02046. Installed Version: Desktop Express. Visual Basic 2015 00325-20000-00000-AA919; Microsoft Visual Basic 2015. Visual C# 2015 00325-20000-00000-AA919; Microsoft Visual C# 2015. Visual C++ 2015 00325-20000-00000-AA919; Microsoft Visual C++ 2015. Common Azure Tools 1.8; Provides common services for use by Azure Mobile Services and Microsoft Azure Tools. NuGet Package Manager 3.4.4; NuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/. SQL Server Data Tools 14.0.60519.0; Microsoft SQL Server Data Tools",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/448#issuecomment-334517509:241,Update,Update,241,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/448#issuecomment-334517509,2,"['Install', 'Update']","['Installed', 'Update']"
Deployability,"Ok the PR' works, I looked at each build on jenkins...no failure...but the formatter is not launched but I think we can ignore the formatting stuff to move forward the release. @guparan @bcarrez do you agree ?. PS: the sofa dashboard doesn't like PR with weird name & symbols :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/556#issuecomment-357174976:168,release,release,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/556#issuecomment-357174976,1,['release'],['release']
Deployability,"Ok the following works: . ```c++; static std::string convert_string(PyObject* object) {; if( PyString_Check(object) ) {; // strings will be strings; return PyString_AsString(object);; }; ; if( PySequence_Check(object) ) {; std::stringstream ss;. for(Py_ssize_t i = 0, n = PySequence_Length(object); i < n; ++i) {; if(i > 0) ss << ' ';; ss << convert_string(PySequence_GetItem(object, i));; }; ; return ss.str();; }. // fallback to python string conversion; PyObject* str = PyObject_Str(object);; std::string res = PyString_AsString(str);; Py_DECREF(str);; ; return res;; }; ```. `Binding_BaseObject.cpp:`. ```c++; SP_CLASS_METHODS_END;. static struct patch {; patch() {; // set __str__ slot for BaseObject; SP_SOFAPYTYPEOBJECT(BaseObject).tp_str = [](PyObject* self) {; return BaseObject_getLinkPath(self, nullptr);; };; }; } patcher;. SP_CLASS_TYPE_SPTR(BaseObject, BaseObject, Base); ```; It does breaks some python tests in Compliant, but this is due to errors there. I can push code to another PR that does the whole thing if needed (I don't think I have push access to this one).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307775648:651,patch,patch,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307775648,3,['patch'],"['patch', 'patcher']"
Deployability,"Ok, I think you are touching on stuff which is a little bit beyond my current knowledge about Sofa. In the current implementation of the PSDE update() is triggered by the onBeginAnimationStep-event. I'm not sure update() is triggered by a change in some of the Data. I'll look into it when I check your current version. . As you said, if there's some more fundamental discussions going on it makes sense to stick to the current naming convention for consistency's sake.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406629667:142,update,update,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406629667,2,['update'],['update']
Deployability,"Ok, I've just tried to compile SOFA v21.12 with Optimus v21.12 and STLIB v21.12. I've cleanly cloned them three and configured cmake with the following : `cmake /path/to/sofa -DSOFA_EXTERNAL_DIRECTORIES=/path/to/Optimus;/path/to/STLIB` and cmake works like a charm. Didn't compile it though, but the cmake shouldn't crash at least. So I suggest you to delete your cloned repositories and clone them again and then directly checkout v21.12. . Your issue is due to the fact that you are adding the project using this macro `sofa_add_subdirectory` which didn't exist at the time. I think the closes one was `sofa_add_plugin`. But using this macro is not mandatory, you can add such plugins with `SOFA_EXTERNAL_DIRECTORIES` if you don't have to much of them... . Sometimes, cloning first master then switching branch can generate issues, if so you can use this command line instead `git clone -b v21.12 --single-branch git@github.com:sofa-framework/sofa.git`. From now, I won't provide more help on this old release, if you face anything else, I highly suggest you to update your SOFA version.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4941#issuecomment-2311917765:1004,release,release,1004,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4941#issuecomment-2311917765,2,"['release', 'update']","['release', 'update']"
Deployability,"Ok, i was actually not sure if it was not updated... or not used at all :) ; So maybe we can move faster on that one by already DeprecatedAndRemove d_verbose ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556745945:42,update,updated,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556745945,1,['update'],['updated']
Deployability,"Ok, so I will make a cuda install on my laptop this weekend to check some simulations.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/665#issuecomment-449049972:26,install,install,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/665#issuecomment-449049972,1,['install'],['install']
Deployability,"Ok, very nasty...; So I agree with your PR, we should not impose the `find_package(FFMPEG_exec)` to dependencies.; But it is not enough. We should clean this hardcoded path by installing the executable.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540045862:176,install,installing,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540045862,1,['install'],['installing']
Deployability,"Okay, I guess we will also need to change SofaSimulationCommon and others since right now they are installing into the package SofaSimulation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540491073:99,install,installing,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540491073,1,['install'],['installing']
Deployability,"On 14/02/2017 09:29, erik pernod wrote:; >; > closed?; >; unmerged...because it is minor and I have no time to understand why it ; does not compile... I will open it again one day...; But if you are willing to you can make it work in the meantime :). > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub ; > <https://github.com/sofa-framework/sofa/pull/169#issuecomment-279639584>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/AMDyEmabTubGf2uk8Mg_N_ufzjqkfcLWks5rcWX-gaJpZM4L9dhW>.; >; > {""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/sofa-framework/sofa"",""title"":""sofa-framework/sofa"",""subtitle"":""GitHub ; > repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open ; > in ; > GitHub"",""url"":""https://github.com/sofa-framework/sofa""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@epernod ; > in #169: closed?""}],""action"":{""name"":""View Pull ; > Request"",""url"":""https://github.com/sofa-framework/sofa/pull/169#issuecomment-279639584""}}}",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/169#issuecomment-279646432:1139,update,updates,1139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/169#issuecomment-279646432,1,['update'],['updates']
Deployability,On that I can contribute by installing the stylechecker on a CI machine. ; This is on my todo list before summer.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/232#issuecomment-297517107:28,install,installing,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/232#issuecomment-297517107,1,['install'],['installing']
Deployability,"On the BFM it compile perfectly!; There are just some errors related to update & doUpdate function that will need to be fixed but this doesn't come from this MR. (@EulalieCoevoet); I also test some examples and still no error for me, so it should be ok.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/834#issuecomment-441579131:72,update,update,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/834#issuecomment-441579131,1,['update'],['update']
Deployability,"One unit test failling : ; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4494/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/2/testReport/UnitTests.Sofa_Component/Topology_InciseProcessor_test/InciseTriangles/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1943419526:138,release,release,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1943419526,1,['release'],['release']
Deployability,PR description and code updated with respect to the review!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1898#issuecomment-807081692:24,update,updated,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898#issuecomment-807081692,1,['update'],['updated']
Deployability,PR just got updated.; Several points are below this PR:; - define a new design for managing colors by component; - should the color API allow for new colors; - Should Prefab be refactored in Sofa.Core ? . → wip : PR should keep only the 2-line change,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4536#issuecomment-2022230108:12,update,updated,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536#issuecomment-2022230108,1,['update'],['updated']
Deployability,"Plugin SofaCoreAsync; https://github.com/SofaDefrost/sofa/blob/pluginSofaCoreAsync/applications/plugins/SofaCoreAsync/Sofa/Core/Async/tests/AsyncComponentTracker_test.cpp. Associate to the component a Data<'state'>. This data state can be used to keep track of component state change and propagate lazy update so that the component that depend on other can be updated appropriately. The general design was attempting to combine both synchonous and asynchronous components in the same scene so that ""normal"" Sofa object can still interact with the one using asynchronous updates. . In the following example a change in python1,2,3 file is reloaded and the ImplicitFeldRenderer & MeshGeneration are updated, each in an asynchronous way. ; ```qml; Node : {; ImplicitField : { name : ""python1"", src : ""python1.py"" }; ImplicitField : { name : ""python2"", src : ""python2.py"" }; ImplicitField : { name : ""python3"", src : ""python3.py"" }; ; ImplicitFieldRenderer : { src : ""@python1"" }; ImplicitFieldRenderer : { src : ""@python2"" }; ImplicitFieldRenderer : { src : ""@python2"" }. TetrahedralMeshGeneration : { src : ""@python1"", name = ""mesh1"" }; SurfaceMeshGeneration : { src : ""@python2"", name = ""mesh2"" }; TetrahedralMeshGeneration : { src : ""@python1"", name = ""mesh3"" }; ; MechanicalFEM3D : { src : ""@mesh1"" }; MechanicalFEM2D : { src : ""@mesh2"" }; MechanicalFEM3D : { src : ""@mesh3"" }; }; ```. Note 1: When used in asyncrhonous mode, the current approach does not guarante that a change is propagated immediately. So one change in a component at a given IDLEEvent may be updated in this or an other IDLEEvent. It depend on ""when"" the dependencies checks the validity of their input. . Node 2: To fix that a queue may be used to keep track of what still needs to be done. Looks good on paper but this kind of implementation are often much more complex than their initial drafted idea.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367274769:303,update,update,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367274769,5,['update'],"['update', 'updated', 'updates']"
Deployability,"PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckCollisionResponse, SceneCheckDeprecatedComponents, SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:11308,Release,Release,11308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,3,['Release'],['Release']
Deployability,"QTrackbarWidget is also a custom class that looks like this; ```(C++); template<int C>; class QTrackBarWidget : public QWidget {; // Q_OBJECT //Cannot declare a Q_OBJECT as the object is template; public:; typedef Data<TTrackBar<C> > MyData;. QTrackBarWidget(sofa::gui::qt::DataWidget * parent,const MyData & /*data*/) : QWidget(parent); ```. If I'm not mistaken, the result is an image Data in SOFA associated with a trackbar to update some parameter (eg. filter parameter)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2019#issuecomment-821262631:430,update,update,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2019#issuecomment-821262631,1,['update'],['update']
Deployability,Ready :+1: ; @alxbilger it would be cool to have the doc updated accordingly,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4172#issuecomment-1746395138:57,update,updated,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4172#issuecomment-1746395138,1,['update'],['updated']
Deployability,Ready but waiting the CI to be upgraded with #2251 to be sure that all tests are OK,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2240#issuecomment-880523148:31,upgrade,upgraded,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240#issuecomment-880523148,1,['upgrade'],['upgraded']
Deployability,Ready but we keep it to review on purpose to postpone its merge after stable release v22.06,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1175970858:77,release,release,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1175970858,1,['release'],['release']
Deployability,"Really good cleaning.; Should not break scenes, but could eventually break components in private plugins, but they should be easy to update.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/206#issuecomment-291868805:133,update,update,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/206#issuecomment-291868805,1,['update'],['update']
Deployability,Regarding last review comments (as I'm not sure to be there for the next review):. - I would like to remove those header directly... do we have to go through the 6 months of deprecated before... ?; - Do you want me to put keep empty headers with the SOFA_DEPRECATED_HEADER macro? ; - I would keep the xxxSetGeometryAlgorithms and not put everything inside xxxSetTopologyXXX because the name Geometry make sense here to indicate we depend on the type of dof (aka mechanicalObject). Tests and scenes have been updated.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1546#issuecomment-725923633:508,update,updated,508,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1546#issuecomment-725923633,1,['update'],['updated']
Deployability,Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anacon,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6422,Release,Release,6422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,See #613 for updated version.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/610#issuecomment-375683767:13,update,updated,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/610#issuecomment-375683767,1,['update'],['updated']
Deployability,"Seems this PR doesn't change the algorithm, so should be non breaking. It is however weird that the pointer get changed by the solver... While this patch will work around this, I would be quite interested to know why it was happening in the first place. @fredroy , could you just change `WriteAccessor` to `WriteOnlyAccessor` so that we do not trigger a data update every time (we are overriding every entries of the position vector).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1230#issuecomment-564526435:148,patch,patch,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1230#issuecomment-564526435,2,"['patch', 'update']","['patch', 'update']"
Deployability,"Setting to WIP, trying the installation process. Edit: good thing I tried, there was a problem in a cmake.in 🤥; Back to review",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2717#issuecomment-1067824499:27,install,installation,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2717#issuecomment-1067824499,1,['install'],['installation']
Deployability,"Several points here: ; - this PR might be breaking for plugin compilation (including move of files); - this PR changes the way we organize / name the code (which is good!). It would be therefore nice to rediscuss it with you both @guparan and @fredroy to all agree on the organization and merge it, but a question comes:; does this seem realistic to merge it before the release?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1189985975:370,release,release,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1189985975,1,['release'],['release']
Deployability,"Should fix Ubuntu clang: [sofa-framework/sofa#3460](https://github.com/sofa-framework/sofa/pull/3460) (see https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_clang,CI_PLUGINS=options,CI_TYPE=release/3983/console)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3468#issuecomment-1308504394:219,release,release,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3468#issuecomment-1308504394,1,['release'],['release']
Deployability,"Small update: seems like the recursive thing is not even the source of the problem. The following object is enough to cause the issue:. ```c++; class TestComponent : public BaseObject {; public:; SOFA_CLASS(TestComponent, BaseObject);; using DataTypes = sofa::defaulttype::Vec3Types;; using VecCoord = DataTypes::VecCoord;; TestComponent() : d_position(initData(&d_position, ""position"", ""Position vector"")){}. void init() override {; Inherit1::init();; ReadAccessor<Data<VecCoord>> a(d_position);; }; private:; Data<VecCoord> d_position;; };; ```; with ; ```python; root.addObject(""MechanicalObject"", name=""MO"", template=""Vec3d"", position=[1, 0, 0]); root.addObject(""TestComponent"", position=""@MO.position""); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1059834227:6,update,update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1059834227,1,['update'],['update']
Deployability,"Smoothing the syntax of PSDE:; ```python. #sofadataengine ferrait un truc du genre scanner les paramètre de la fonction, créerait des ; # data input du même nom, créerait un (ou plusieurs) data output et dans la fonction update ; # appelle myenginefunction. @sofadataengine; def myenginefunction(indata1, indata2):; return indata1 + indata2 . def createScene(rootNode):; a = rootNode.createObject(""OglModel"", name=""a""); b = rootNode.createObject(""OglModel"", name=""b""); rootNode.addObject( myenginefunction(""@a.position"", ""@b.position"") ); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380386015:221,update,update,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380386015,1,['update'],['update']
Deployability,"So I took a look at the SleepController. It simply puts context to sleep where the mechanical object has a max velocity under a certain threshold. Then wake them up again only when a collision occurs with another object that is moving. ; Three remarks : ; - Being put to sleep disables any mechanical visitor to be applied on the node and deactivates its constraint corrections. So no more computing (no system build, no integration, only collision detection); - This works well only for scenes where external interaction only arise between two objects colliding, neither by the mean of a change of external forces (dynamic vector field for instance), or of constraint state changes not managed by the collision pipeline (for instance statically defined interaction constraints such as cable constraints). ; - The code seems overly complicated for what it performs but certainly does what it says it does. I didn't try it but it looks ok. . Sincerely, I cannot see myself advising anyone to use it in their scene given the fact that the use case doesn't apply for the majority of the scenes (especially for soft robotics). So I wouldn't mind never seeing it again...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4813#issuecomment-2236872106:421,integrat,integration,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4813#issuecomment-2236872106,2,"['integrat', 'pipeline']","['integration', 'pipeline']"
Deployability,"So I tried to play a bit with CGALPlugin and realized we can use CGAL in header-only mode. So, why should we copy some dlls?; I made a branch here: https://github.com/guparan/sofa/tree/clean_cgalplugin_cmake. EDIT: here is a patch to try my changes in this branch: [cgal-plugin_fix.patch.txt](https://github.com/sofa-framework/sofa/files/2983964/cgal-plugin_fix.patch.txt)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958#issuecomment-474399758:225,patch,patch,225,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958#issuecomment-474399758,3,['patch'],['patch']
Deployability,So let Guillaume finish...; But is the autodump stuff useful or not ?; If Backtrace is not installed by default how a failing test will print anything ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/191#issuecomment-284087037:91,install,installed,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/191#issuecomment-284087037,1,['install'],['installed']
Deployability,So that it can update if its parent has changed,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4876#issuecomment-2269077328:15,update,update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4876#issuecomment-2269077328,1,['update'],['update']
Deployability,So this PR is merged...but the CI configuration needs to be updated to rename PLUGIN_XXX into MODULE_XXX this is the cause of the failing test on the CI.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/732#issuecomment-410245860:34,configurat,configuration,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/732#issuecomment-410245860,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,So we probably need to update our CI machines with QT5.7... @bcarrez it is for you :). EDIT: we cannot merge that before the update of CI.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/311#issuecomment-312254579:23,update,update,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/311#issuecomment-312254579,2,['update'],['update']
Deployability,"So, after discussion it was decided to avoid the #ifdef can you update that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/100#issuecomment-267002225:64,update,update,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/100#issuecomment-267002225,1,['update'],['update']
Deployability,"So, as we discussed during the dev meeting. 2 modifications:; 1. Indeed, Boost, MPFR and GMP are dependencies of CGAL library itself not of the SOFA-CGAL plugin. As those dependencies are correctly handled internally in CGAL, I removed all mention of those libraries in the config file of the plugin.; 2. There is already a .cmake at the root dir of CGAL so the findCGAL.cmake is not necessary. Sofa just need to know ${CGAL_DIR} path. And in fact on windows, when you install CGAL this env_variable is set. So it works straight forward. . @guparan can you confirm this is now ok to go?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-610868358:469,install,install,469,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-610868358,1,['install'],['install']
Deployability,"Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/ana",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10312,Release,Release,10312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,SofaDistanceGrid has been pluginized and (seems that) is now well exported at sofa install.; Closing,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1219#issuecomment-774163498:83,install,install,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1219#issuecomment-774163498,1,['install'],['install']
Deployability,SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6755,install,install,6755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,Sofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3719,install,install,3719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,Some news from DEFROST for 17.12; - I'm still working hard one SofaImplicitField & PSL ; - Bruno will make an extra effort to finalize the PR of a SofaPython3 plugin.; - Erwan will do the same for the Communication plugin. ; And Eulalie splitted ou soft-robots plugins in a public and a private part (the pattented one) so we can release it. . And you.. what are your plan for 17.12 ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/517#issuecomment-348446764:330,release,release,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/517#issuecomment-348446764,1,['release'],['release']
Deployability,"Some scenes crash at the end (but not related to this PR):; - [testOmniDriverEmu.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=centos_clang-5,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/applications/plugins/SensableEmulation/examples/testOmniDriverEmu.scn/output.txt); - [HexahedronForceFieldTopologyChangeHandling.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/examples/Components/topology/TopologicalModifiers/HexahedronForceFieldTopologyChangeHandling.scn/output.txt). The Quater_test is also failing on CentOS but we think it could be related to the rand() bringing the angle too close to in the gimbal lock ToEulerVector in SOFA. If that's the issue, the fix is described here: http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/ and should be applied to Quater::toEulerVector (l. 573 in Quater.inl)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-676066963:201,release,release,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-676066963,2,['release'],['release']
Deployability,"Something is broken here. See tests results: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1275/CI_CONFIG=ubuntu_gcc-7,CI_PLUGINS=options,CI_TYPE=release/3/testReport/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1275#issuecomment-603862893:158,release,release,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1275#issuecomment-603862893,1,['release'],['release']
Deployability,"Sorry for the delay !. First, I have some precisions regarding Fred's remark: with the modification I suggested, I see a critical performance drop in the caduceus scene, going from ~150-200 FPS before the change, to ~25 FPS after. I expect that, indeed, the barycentric mapping accesses the `m_positions` field of the `OGLmodel`, consequently causing extensive triggering of the callback at each time step. So the solution I first suggested should be discarded anyway. @hugtalbot, using the `m_restPositions` field for the callback doesn't have the same performance issue. However I believe that this field is not used in the rendering process of the `OglModel`. Or, at least, calling `initVisual()` after a change of `m_restPositions` doesn't change the visual. So this solution doesn't solve the initial issue I had. I tried to look into how the `BarycentricMapping` works in details, but I'm afraid it is a bit too complexe for me with the time I have at the moment... My idea was to find how the barycentric mapping makes sure that the visual OGLModel is updated at each time step, and mimick this. If someone is familiar with the process ?. In the meantime, regarding the specific scenario I was working on, I'm using another workaround. Instead of dynamically changing the source file of the loader, I'm creating as many loaders as mesh files I have, and I dynamically change the loader I need at a given time during the simulation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1137038775:1059,update,updated,1059,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1137038775,1,['update'],['updated']
Deployability,"Sorry fred you are right, the PR contains both the pluginization of the SofaOpenglVisual in area module/plugin and the removal of the GLEW all around and updating the code that had dependencies to SofaOpenglVisual. I updated the description.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1071#issuecomment-499398346:217,update,updated,217,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1071#issuecomment-499398346,1,['update'],['updated']
Deployability,Sorry this PR went under the radar. I actually added `FindEigen3.cmake` to the install of SOFA in #1397. ; See https://github.com/sofa-framework/sofa/blob/master/CMakeLists.txt#L74-L80. I guess we can close this PR now @jnbrunet ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-665092279:79,install,install,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-665092279,1,['install'],['install']
Deployability,"SquareDistanceMapping test fails with the introduced test : https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4897/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/1/testReport/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288223285:171,release,release,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288223285,1,['release'],['release']
Deployability,"Still some problems with the scene on the CI, probably because tkinter is not installed. ```; Python exception: ; ModuleNotFoundError: No module named 'tkinter'; ```. tkinter must be removed from the scene OR this scene should be ignored by the CI.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1103840513:78,install,installed,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1103840513,1,['install'],['installed']
Deployability,"Strange error on Mac clang: ; ```; Adding module SofaOpenglVisual; CMake Error at /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1239/mac_clang-3.5_options_release/build/cmake/SofaFrameworkConfig.cmake:76 (find_package):; Could not find a package configuration file provided by ""GTest"" with any of; the following names:. GTestConfig.cmake; gtest-config.cmake. Add the installation prefix of ""GTest"" to CMAKE_PREFIX_PATH or set; ""GTest_DIR"" to a directory containing one of the above files.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572047709:260,configurat,configuration,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572047709,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"Super great contrib :) The as-clean-as-possible way to implement a controller. From a quick review, everything looks good to me. A few suggestions:; 1- what about adding a python-based layer (inherited class) that would, in its `__init__`, set the Data member (like the name) from the kwargs + call an eventual 'createGraph' function + print a warning if 'onLoaded' exists ;); 2- check that everything is ok with the destruction and the reference counter (maybe it is, I am not yet sure); 3- update the ControllerVariable.py example; 4- mark the SofaPython.script.Controller as deprecated",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283#issuecomment-305540410:492,update,update,492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283#issuecomment-305540410,1,['update'],['update']
Deployability,"Sure, I am including that file. My point is that to be able to include that file correctly I need to find the SofaBase package and then link against SofaBaseTopology. ; If I dont link against that target, I still can include; ```; #include <SofaBase/SofaBaseTopology/MeshTopology>; ```; which looks completely okay but it fails in a inner include; This happens because when you install SOFA in usr/local/ you get the following directory `usr/local/SofaBase/SofaBaseTopology/`; If you for example install something else in usr/local, lets say CGAL, you get the following directory `usr/local/include/CGAL` and when linking against `CGAL::CGAL` target, you get the following include dir: `usr/local/include`. ; Since you get that include, it looks like you could include `SofaBase/SofaBaseTopology/MeshTopology.h`, but this fails as in reality you should include `SofaBaseTopology/MeshTopology.h`. If you are going to create extra directories in usr/include when installed, I would suggest naming them in lowercase, as for example Eigen does. When you install Eigen it creates the following structure `usr/local/eigen3/Eigen` so even if you add `usr/include` to you include dirs, you still know that you shouldn't include `eigen3/Eigen/Dense.h`. . Also, its hard to know in which cmake package and in which target each file is. I would suggest creating, for example, some global targets:; Sofa::Sofa would link against everything; SofaBase::SofaBase would link against everything in SofaBase package; SofaBase::SofaBaseTopology would link only against the SofaBaseTopology; Probably this would simplify linking against SOFA in general",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1288#issuecomment-607161514:378,install,install,378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1288#issuecomment-607161514,4,['install'],"['install', 'installed']"
Deployability,"Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901:842,update,updated,842,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901,1,['update'],['updated']
Deployability,T and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3387,install,install,3387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,TODO:. - [x] update cxxopts version from 2.2.1 to 3.1.1; - [x] add command line argument (`hideProgressBar`); - [x] add lib license,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1736889249:13,update,update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1736889249,1,['update'],['update']
Deployability,"TODO:; - ~~check removed functions and insure compatibility layer~~; - ~~new creation mechanism of GravityForceField~~; - ~~self, GravityForceField checks if one is already here~~; - ~~have a callback and save the norm : if 0 exit all loops~~; - ~~what happens if no mass for GFF~~; - ~~update dates in messages (v22.12 -> v23.12)~~; - ~~update PR description~~; - test when a node is added. One issue remains in my tests :; - simulation starting without gravity, and then gravity is added; - mass added using python, since no init, the link in GravityForceField to the local mass is no performed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1238134724:287,update,update,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1238134724,2,['update'],['update']
Deployability,"Testing this with the Visual Studio compiler, on my (getting old) desktop (4 cores, 16GB RAM, Windows) I obtained :. ```; - MSVC/debug: 23:52; - MSVC/debug/pch: 14:50; - MSVC/debug/unity: 15:10; - MSVC/debug/pch+unity: 12:46. - MSVC/release: 34:44; - MSVC/release/pch: 23:51; - MSVC/release/unity: 28:52; - MSVC/release/pch+unity: 23:52; ```. So this gives me a 20 to 50% decrease in build time (:+1:), and I would say that performances obtained either with unity, pch, or both are comparable.; Aside from that, when using the unity build, I get only one error while compiling SofaMeshCollision (for multiply defined symbols)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404:233,release,release,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404,4,['release'],['release']
Deployability,"Tests (2) I think are failing. We could check in other PRs if the tests failing for them as well; - constraint.FrictionContact_VelocityConstraints.scn; - examples/Components/constraint.InextensiblePendulum.scn. (see [CentOS here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1992/CI_CONFIG=centos_clang-5,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/))",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1992#issuecomment-828294302:345,release,release,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992#issuecomment-828294302,1,['release'],['release']
Deployability,"Thank Mathieu for this pull-request,. It seems interesting and at a first sight I would use your approach internally to a component to implement fine-grain update in the reinit function.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/60#issuecomment-262620090:156,update,update,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/60#issuecomment-262620090,1,['update'],['update']
Deployability,"Thank for your feedback, . As you I don't understand the SofaKernel/SofaFramework stuff and I'm always searching for the right component in the wrong place so I fully support you on that, the reason is that Misc vs Advanced vs NG have different meaning for different person so it is a totally arbitrary segmentation. . But I'm not really talking about this here. What I have in mind is more or less orthogonal to this aspect (and it is fully compatible with the existing scheme or one you could define in the future grouping stuff like Qt). What I would like to discuss is more about how do we management the components life-time (from integration to deprecation) and not where to put them. I'm not sure I'm very clear sorry for that. . Here is our working branch: ; https://github.com/SofaDefrost/sofa/tree/deprecating_components. You can see there that there is no more CMakeLists than what we have now (or what we could have in some future if some serious cleaning and refactoring is done to organize the component 'à la Qt'...but I have no time for that ;)). . The goods I see of the proposed approach, in addition to be orthogonal to the other concerns, is that it is very progressive. It change nothing for existing user of Sofa while at the same time we can progressively deprecated components from Sofa by just moving them from one set to one other (and updating the scenechecker). In a symetric way we can also progressively integrate in the core set of components the one that have been ""elected"" by the SofaNG workgroup. And for the other component...well nothing change. . My dream is that by doing so we could small step after small step, remove 50% of the components that should be deprecated and that, combined with the pluginization lighten sofa.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332175148:636,integrat,integration,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332175148,2,['integrat'],"['integrate', 'integration']"
Deployability,"Thank you @damienmarchal :-); It would be better to create the integration branch with these commits instead of merging in master, don't you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/429#issuecomment-333493357:63,integrat,integration,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/429#issuecomment-333493357,1,['integrat'],['integration']
Deployability,Thank you @fangzhouzisb for raising this again and your investigation.; Unfortunately I didn't had time to work on that issue specifically and I'm not expert of the constraint resolution pipeline. But I'm in a middle of a deadline involving the Geomagic plugin and I also found several wrong behavior that I'm trying to fix. ; I'm going to try your fix and merge all that in one PR. maybe @hugtalbot could you poke someone expert in FreeMotion and constraint pipeline to see if this fix will have side effects?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1148#issuecomment-533503989:187,pipeline,pipeline,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1148#issuecomment-533503989,2,['pipeline'],['pipeline']
Deployability,"Thank you @ziqiu-zeng for the PR, I can see I did some mistake in the compat files 😬. > Enable compilation with cuda plugins: SofaAsyncSolvers, SofaCUDALDI, SofaCUDASolvers, SofaCUDADev Please also update the plugins; > . Unfortunately, these plugins are private plugins from the mimesis team so we cannot access/fix/update them 🤔",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2883#issuecomment-1102753225:198,update,update,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2883#issuecomment-1102753225,2,['update'],['update']
Deployability,"Thank you Erik!; Indeed, we are not installing enough in our CI. Continuous delivery could be a nice task to start in the future (after our Jenkins 2 migration). 😉",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/194#issuecomment-284767994:36,install,installing,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/194#issuecomment-284767994,2,"['Continuous', 'install']","['Continuous', 'installing']"
Deployability,"Thank you for this PR, it highlights a more serious bug when adding elements in TopologySubsetData. A PR to fix the TopologySubsetData is coming, then we will update this PR to adapt UniformMass with the good callbacks. Right now the callback on PointRemoved event proposed in this PR will crash as the TopologySubsetData already has an internal mechanism to update its size. So you perform the deletion twice.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1097837525:159,update,update,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1097837525,2,['update'],['update']
Deployability,"Thank you for your report @louise-scherrer . This segmentation fault is indeed a bug, and should be prevented. Here is the call stack to the fault:. ```; -> return m_trianglesAroundVertex[i];; const MeshTopology::TrianglesAroundVertex& MeshTopology::getTrianglesAroundVertex(PointID i); bool LocalMinDistance::testValidity(Point &p, const Vector3 &PQ); int LocalMinDistance::computeIntersection(Point& e1, Point& e2, OutputVector* contacts); int MemberElementIntersector<Point, Point, LocalMinDistance>::intersect(core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, DetectionOutputVector* contacts); void BruteForceDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void NarrowPhaseDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void DefaultPipeline::doCollisionDetection(const helper::vector<core::CollisionModel*>& collisionModels); void PipelineImpl::computeCollisionDetection(); ...; void CollisionAnimationLoop::computeCollision(const core::ExecParams* params); void FreeMotionAnimationLoop::step(const sofa::core::ExecParams* params, SReal dt); ```. I'll try to further look into this. We should try to find the best place to prevent this kind of fault without impacting too much the computation time.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329:966,Pipeline,PipelineImpl,966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329,1,['Pipeline'],['PipelineImpl']
Deployability,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:295,Install,Install,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,2,"['Install', 'install']","['Install', 'install']"
Deployability,"Thank you for your update @nhnhan92 ; I added two reviews in the code. Regarding the license, we need the SOFA header to be added in order to display the official license of the project. If this is not possible, an alternative would be to create a dedicated plugin which could have its own open-source license. Finally, a last question would be : would it be possible to have a regression test comparing your material with a analytical/manufactured solution?. Thanks again for this nice piece of work.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-776748349:19,update,update,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-776748349,1,['update'],['update']
Deployability,"Thank you. I have successfully run it on my laptop (MAC M2 chip with qt5).; I have modified both `.bashrc` and `.zshrc` with define the `Qt5_DIR` but it does not change the value in `cmake-gui`.; Thus, I modified the `QT5_DIR` in `cmake-gui` directly and it plays well.; Before that, it has a small error, like `Imported target ""tinyxml"" includes non-existent path`; I deleted the default one in `/usr/local/lib` and modified the `TinyXML_DIR` with the path installed by `homebrew`. Anyway, Thanks a lot.; <img width=""1099"" alt=""sofa"" src=""https://user-images.githubusercontent.com/56861752/210767352-6f43621e-1559-40da-a15d-cd28a18945ca.png"">",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159:458,install,installed,458,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159,1,['install'],['installed']
Deployability,Thanks @damienmarchal . I guess you tried to run the tests on SP3 to see if your patch was fixing the original issue?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1668#issuecomment-748716799:81,patch,patch,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1668#issuecomment-748716799,1,['patch'],['patch']
Deployability,Thanks @fredroy. Uninstalling qt6 solved the problem. Will SOFA be compatible with an installed version of qt6 in the future?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916#issuecomment-800096466:86,install,installed,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916#issuecomment-800096466,1,['install'],['installed']
Deployability,Thanks @hugtalbot for this PR !. Were there any example scenes in the sofa/examples folder that would need to be updated and maybe move in this plugin?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1659#issuecomment-743116925:113,update,updated,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1659#issuecomment-743116925,1,['update'],['updated']
Deployability,Thanks @marques-bruno !; Could you confirm that your clang-format file complies with [the astyle configuration](https://github.com/sofa-framework/sofa/blob/master/tools/astyle/sofa.astyle)?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2884#issuecomment-1103588809:97,configurat,configuration,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2884#issuecomment-1103588809,1,['configurat'],['configuration']
Deployability,"Thanks @sergeiNikolaev, I just updated my first comment with a new screenshot 😉",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/369#issuecomment-324312876:31,update,updated,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/369#issuecomment-324312876,1,['update'],['updated']
Deployability,Thanks Fabian for the quick update of the PR...; [ci-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-302614206:28,update,update,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-302614206,1,['update'],['update']
Deployability,Thanks a lot for your contribution @dennis2society ; Last check using the MacOS continuous integration. [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4198#issuecomment-1746423490:80,continuous,continuous,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4198#issuecomment-1746423490,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"Thanks again for this nice contribution @nhnhan92 ; Sorry I had prepared many similar feedback as @epernod so, some might be duplicated. A more general remark, could you point us out the documentation you used to write this code please?; Do you have an idea of when you would plan to consider rotations around the z axis?; I also noticed in this paper typical tests for testing accuracy: https://sci-hub.se/10.1007/s00366-020-00974-4 it would be great to get a similar test for the continuous integration!. If this is too much questions, we can discuss about this live if you'd like",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773359209:482,continuous,continuous,482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773359209,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,Thanks erwan for the test.; The warning is also there in release. Maybe the problem is specific to Thomas application. ; Each application has to define and set-up its way to handle the messages. Have a look in runSofa on how it is one.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328104201:57,release,release,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328104201,1,['release'],['release']
Deployability,"Thanks for the answer,. Actually we are using c++17 in our plugins since years. . The problem is that not having sofa supporting c+17 means that when we want to make PRs to integrate some features into the sofa master we have to convert all the code to c++11. As it was agreed to allow Sofa to support c++17 a year ago I think it would be nice to have it asap, as it would free the contributors from reverting their codebase to c++11 to make PRs. . So good luck to Guillaume.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-593389797:173,integrat,integrate,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-593389797,1,['integrat'],['integrate']
Deployability,Thanks for the heads up @epernod .; I just updated [my CLangFormat config](https://gist.github.com/pedroperrusi/f85f0d0db94a2b046716ec0e759c3550) to use Allman break before brackets as the [Guidelines](https://github.com/sofa-framework/sofa/blob/master/GUIDELINES.md) request.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2020#issuecomment-822360243:43,update,updated,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2020#issuecomment-822360243,1,['update'],['updated']
Deployability,Thanks for the patch.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-529117207:15,patch,patch,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-529117207,1,['patch'],['patch']
Deployability,"Thanks for the review @alxbilger, @epernod. I integrated your remarks.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3020#issuecomment-1150340086:46,integrat,integrated,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3020#issuecomment-1150340086,1,['integrat'],['integrated']
Deployability,"Thanks for the review @alxbilger,. I integrates your comments.; More generally do you have any opinion on how we could improve the exceptions/component error in Sofa ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-927720383:37,integrat,integrates,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-927720383,1,['integrat'],['integrates']
Deployability,"Thanks for the tip! It's been some time since I've used `git bisect`, so I might be mistaking, but for me the only way to judge if a commit is 'good', is to recompile and test the scene I was mentioning at each iteration of bisect, right ? In which case the process could take a bit of time... I'll keep you updated if I go through !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332408866:308,update,updated,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332408866,1,['update'],['updated']
Deployability,"Thanks for vigilance @hugtalbot. @lamriaimen as you can see in the following report, most of the deprecation warnings are in targets that you probably did not enable. I suggest that you activate in CMake ""internal"" plugins (the ones provided with the sources in `applications/plugins`), and I take care of the external plugins (such as ModelOrderReduction). https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4771/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/13/FullBuildWarnings-Clang/category.2119183113/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4771#issuecomment-2182125913:471,release,release,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4771#issuecomment-2182125913,1,['release'],['release']
Deployability,"Thanks for your detailled report. ; This definitely looks like a bug of SOFA related to DAGNode; we don't have centOS on our CI yet, but we will put a Centos7 config on our continuous integration system and look into this problem.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/127#issuecomment-271823673:173,continuous,continuous,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/127#issuecomment-271823673,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,Thanks for your reply. I have installed the following docker images according to https://hub.docker.com/r/sofaframework/sofabuilder_ubuntu/tags.; sofaframework/sofa_nightly_ubuntu master-standard 1feb9eeaf1ab 12 hours ago 3.06GB; sofaframework/sofabuilder_ubuntu latest fe182d39bb54 5 days ago 8.65GB; sofaframework/sofabuilder_ubuntu v23.06 ca308031fc67 7 weeks ago 8.62GB; My question is I do not how to runSofa in the docker container. Do you have any suggestions how to use the sofa docker images?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4230#issuecomment-1757833241:30,install,installed,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4230#issuecomment-1757833241,1,['install'],['installed']
Deployability,"Thanks, that's a start but not quite refactored. Here is a proposal (not tested):; ```cpp; int BatchGUI::mainLoop(); {; if (groot); { ; bool infiniteLoop = (nbIter == -1);. if (infiniteLoop); { ; msg_info(""BatchGUI"") << ""Computing "" << nbIter << "" iterations."" << msgendl;; }; else; {; msg_info(""BatchGUI"") << ""Computing infinite iterations."" << msgendl;; }. sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; msg_info(""BatchGUI"") << sofa::helper::AdvancedTimer::end(""Animate"", groot.get()) << msgendl;; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());; sofa::simulation::Visitor::ctime_t rtfreq = sofa::helper::system::thread::CTime::getRefTicksPerSec();; sofa::simulation::Visitor::ctime_t tfreq = sofa::helper::system::thread::CTime::getTicksPerSec();; sofa::simulation::Visitor::ctime_t rt = sofa::helper::system::thread::CTime::getRefTime();; sofa::simulation::Visitor::ctime_t t = sofa::helper::system::thread::CTime::getFastTime();. signed int i = 2; // one simulation step is animated above; while(infiniteLoop || i <= nbIter); {; sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());. if(infiniteLoop && i % 1000 == 0 || i == nbIter); {; t = sofa::helper::system::thread::CTime::getFastTime()-t;; rt = sofa::helper::system::thread::CTime::getRefTime()-rt;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)t)/((double)tfreq) << "" s ( "" << (((double)tfreq)*i)/((double)t) << "" FPS)."" << msgendl;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)rt)/((double)rtfreq) << "" s ( "" << (((double)rtfreq)*i)/((double)rt) << "" FPS)."" << msgendl; ; ; if(infiniteLoop); {; msg_info(""BatchGUI"") << ""Press Ctrl + C (linux)/ ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378645175:678,update,updateVisual,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378645175,1,['update'],['updateVisual']
Deployability,"That's an interesting explanation @fjourdes and it seems you raise an issue to solve if we need an efficient way to manage points/vertices/whatever in the MechanicalObject.; However as you say, TopologyData is actually NOT used in MechanicalObject. Therefore it is totally safe to comment/remove `#include SofaBaseTopology/TopologyData.inl` . I assume that it was forgotten when people attempted to use the new topology engine system for MechanicalObject (and unfortunately gave up). A PR should be issued with the removal, in order to be sure that everything does not change at all (I checked on my setup and the tests ran smoothly; but it would be better to test with the ""options"" configuration)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295322091:684,configurat,configuration,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295322091,1,['configurat'],['configuration']
Deployability,"That's great !. An improvement would be to release the GIL also in the sofa binded functions : when a binding is called, it should release the GIL, do its potentially costly C++ stuff then acquire the GIL back to safely return in the python script.; This way, we release even more the pressure on the GIL and we can do other things in another thread ... even loading another sofa python scene from another C++ thread.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313536191:43,release,release,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313536191,3,['release'],['release']
Deployability,"That's were it goes non-logical...; Historically, in SOFA we have:; ```; SofaFramework package; SofaCore: SofaKernel/framework/sofa/core; SofaDefaultType: SofaKernel/framework/sofa/defaulttype; SofaHelper: SofaKernel/framework/sofa/helper; SofaSimulationCore: SofaKernel/framework/sofa/simulation; SofaSimulation package; SofaSimulationCommon: SofaKernel/modules/SofaSimulation/SofaSimulationCommon; SofaSimulationGraph: SofaKernel/modules/SofaSimulation/SofaSimulationGraph; SofaSimulationTree: SofaKernel/modules/SofaSimulation/SofaSimulationTree; ```. So by just changing the install dir of SofaSimulationCore we will retrieve consistency between install architecture and CMake packages.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540495837:579,install,install,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540495837,2,['install'],['install']
Deployability,"The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1267755068:23,install,install,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1267755068,2,"['INSTALL', 'install']","['INSTALL', 'install']"
Deployability,The PR is all right to me. . In the recent pr experiment I'm doing I tend to have a combo like this one; ```cpp; sofa::core::objectmodel ; {; class BaseObject;; typedef sofa::core::sptr<BaseObject> BaseObjectSPtr ; }; ```; It is much more easier to update the code with mass replacement of BaseObject::SPtr with BaseObjectSPtr.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769773114:249,update,update,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769773114,1,['update'],['update']
Deployability,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:391,install,installed,391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154,3,['install'],['installed']
Deployability,"The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458:152,release,release,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458,1,['release'],['release']
Deployability,"The added function is used in a few places in plugins I would like to make available in addition to the ROS connector. It is not specifically tied to the multithreaded collision pipeline, but it is potentially useful independent of the relation to the plugins in question, and easy to patch into a core class as it introduces no further dependencies on additional modifications.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1383#issuecomment-628533144:178,pipeline,pipeline,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1383#issuecomment-628533144,2,"['patch', 'pipeline']","['patch', 'pipeline']"
Deployability,"The binaries from the sofa-framework.org website were compiled using Ubuntu20.04, which got a glibc update.; Unfortunately, it is not possible to run executables compiled with a glibc version newer than the one on your system...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3169#issuecomment-1196232646:100,update,update,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3169#issuecomment-1196232646,1,['update'],['update']
Deployability,"The broken tests are caused by new error messages introduced by converting serrs into msg_errors. the number of errors should be updated in the tests. @epernod has a waiting PR doing just that, so I suggest that we merge and wait for erik's fixes in his own PR, as he suggested himself ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916#issuecomment-461874062:129,update,updated,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916#issuecomment-461874062,1,['update'],['updated']
Deployability,"The crash in distanceFieldFilter.scn is no longer here. It makes sense because this PR has nothing to do with the crashing code (but we never know...). Another crash on Windows appeared, but it is also on master (https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/3949/testReport/SceneTests/). So I think this PR is ready to be reviewed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1293166614:327,release,release,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1293166614,1,['release'],['release']
Deployability,"The current approach increments the counter of the componentState data to track when a message is received by a component so that the GUI can update accordingly by setting itself as an output of the componentState data. **TODO**: use the counter of a new generic data as the componentState does not seem a fine-enough level to be able to track and differentiate properly message reception, real change of state etc. Outsourcing the messaging outside the component in a singleton could be the solution : the GUI could then connect to this singleton for any message-related information/update, while connecting to the components for a status information/update. @damienmarchal might propose an alternative approach",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2398#issuecomment-953195106:142,update,update,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2398#issuecomment-953195106,3,['update'],['update']
Deployability,The current version we now have in extlibs 1.9...but actually the update didn't needed anychange so I assume that with the old gtest we had the fix would have work equally well.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369868322:66,update,update,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369868322,1,['update'],['update']
Deployability,The failing test is under investigation but let's merge and create the release branch,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4322#issuecomment-1832076559:71,release,release,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322#issuecomment-1832076559,1,['release'],['release']
Deployability,"The fails again... the mac_clang-3.4 succeeded (I restarted but the previous build was here; https://ci.inria.fr/sofa-ci/job/mac_clang-3.4_options_pr3/25/console); And the additional failure in test scenes is because some machines still don't have the libjpeg/tiff library installed (se macos pr3 ) :) . @guparan, @hugtalbot if you are passing by please considere merging the PR because we need it monday morning for our group writing of tutorials for Sofa :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357312877:273,install,installed,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357312877,1,['install'],['installed']
Deployability,The inheritance to DataEngine brings Components (inherits from BaseObject) within a component.; Change inheritance for DDGNode to exploit only update mechanisms.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1898#issuecomment-805954669:143,update,update,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898#issuecomment-805954669,1,['update'],['update']
Deployability,"The one which use a decorator to specify the return types.. The look&feel for the client code:; ```python; from TypedMagic import *. @sofaengine( ret=(""customout"", ""s""), inputs={""a"" : ""i"", ""b"" : ""i""} ) ; def typedupdate(a, b, c): ; """"""This is so cute to have a single point documentation in our code""""""; print(""MY UPDATE:"" + str(a)) ; return ""Yolo"" + str(a + b + c); ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); TypedMagicEngine(rootNode, typedupdate, a=1.0, b=2.0, c=3.0); ```; EDIT: the ""customout"" will be the name of the output field. With more or less this in TypedMagic; ```python. class TypedMagicEngine(Sofa.PythonScriptDataEngine):; def __init__(self, node, sofaengine, **kwargs):; fct = sofaengine.function; retinfo = sofaengine.retinfo; argsinfo = sofaengine.argsinfo; self.addNewData(""Description"", ""Properties"", """", ""s"", inspect.getdoc(fct)) . argspec = inspect.getargspec(fct); for arg in argspec.args:; argval = None; ### Get the name & default value; if arg in kwargs:; argval = kwargs[arg] ; elif argspec.defaults != None and arg in argspec.defaults:; argval = argspec.defaults[arg] . ### Get the type ; datatype = ""f""; if arg in argsinfo:; datatype = argsinfo[arg]; ; if argval != None: ; self.addNewInput(arg, datatype=datatype, value=argval) ; else:; Sofa.msg_error(""Unable to create an input for parameter: ""+str(arg)) ; ; if retinfo != None:; self.addNewOutput(retinfo[0], datatype=retinfo[1]) ; ; self.retinfo = retinfo[0]; self.name = fct.__name__ ; self.params = argspec.args; self.fct=fct; ; def update(self):; calld = []; for param in self.params: ; calld.append(self.findData(param).value) ; ; self.findData(self.retinfo).value = self.fct(*calld) . ; class sofaengine(object):; def __init__(self, ret=(""output"",None), inputs=[]): ; self.retinfo = ret; self.argsinfo = inputs; ; def __call__(self, fn):; self.function = fn; return self ; ```. Of course this is just a POC (lot of corner cases are not handle",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380470372:314,UPDATE,UPDATE,314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380470372,1,['UPDATE'],['UPDATE']
Deployability,"The problem comes from the compilation of SofaPython3. In particular, it is related to one of its dependency `pybind11`. It is missing from your computer.; I recommend you to read the documentation: https://sofapython3.readthedocs.io/en/latest/menu/Compilation.html. You must install pybind11.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486749758:276,install,install,276,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486749758,1,['install'],['install']
Deployability,The problem is to have the uninstall function called when we need to reload the files (when the end user application is reloading). . This can be done per PythonScriptController in the 'cleanup' code. But the cost will be repeated each time a PythonScriptController is created/destructed in the scene so I'm not a big fan of it. Neither for the explicit reinit.; ; I don't understand your suggestion. A pure python solution may be to install a kind of hook in python that count the number of PythonScriptController that is created...and count the number of cleanup...and if this cleanup count is zero...it means we need to force a plugin reload. It may work but I'm not sure this is very good because creating PythonScriptController on the fly and deleting them would force module reload. . The last solution I can think abou tis to have the PythonEnvironment inheriting from BaseObject and thus...be part of the scene (automatically added in the root) ... this PythonEnvironment will thus receive a single cleanup event and do the cleaning when it deserve to. ; This solution sound conceptually ok to me if we accept that our scene contains an automatically added object.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/198#issuecomment-285720340:434,install,install,434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/198#issuecomment-285720340,1,['install'],['install']
Deployability,"The problem with the approach to have a name helper in each Node is that the Node must exist before using it. And it's not the case in the XML loader. A name is required before the object creation, and no Node is available at that time. Therefore, I used a single name helper inside the XML loading for all the components. In this case, the counter suffix does not depend on the Node. A problem with this approach (other than it's not consistent), Nodes' counters are not updated...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028170905:472,update,updated,472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028170905,1,['update'],['updated']
Deployability,"The pull-request #95 contains code that automatically install the dispatcher needed in tests. ; So normally it is not needed any more to clearHandlers (unless you really want a specific behavior). . EDIT: The Pull request #95 was not clean so I did a new one, sorry for the noise.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/94#issuecomment-265592897:54,install,install,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/94#issuecomment-265592897,1,['install'],['install']
Deployability,"The questions of conditional compilation (plugin selection at cmake), and repository split are distinct, the idea is flying in the air, but nothing concrete, the main issue (I think) is integrating the several repositories in a single continuous integration platform, not a big deal, but it has to be done . thomas . ----- Mail original -----. > De: ""hdeling"" notifications@github.com; > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > Cc: ""thomas-lemaire"" thomas.lemaire@inria.fr, ""Comment""; > comment@noreply.github.com; > Envoyé: Mercredi 5 Octobre 2016 17:52:58; > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > ; > OK I agree that this allows to compile Flexible without the SOFA-HighOrder.; > ; > Before moving SOFA-HighOrder to the gitHub repo, do any of you know if; > there are plans to move those plugins outside of github ?; > ; > My understanding is that at some point SOFA was going to be cut into; > several pieces that could be optionally compiled.; > ; > Is this still on the radar ?; > ; > Hervé; > ; > Le 05/10/2016 à 15:27, thomas-lemaire a écrit :; > ; > > yet an other option is to conditionnaly compile HighOrderTopology code; > > in Flexible based on whether the HighOrderTopology plugin is existing; > > or not (in cmakelists package_require(HighOrderTopology) if; > > (HighOrderTopology_FOUND) ... ):; > > - each plugin can live in its own repository; > > - no need for a third plugin; > > - should work whether all the plugins are compiled in the same cmake; > > build project or are compiled/installed separately (well; > > HighOrderTopology must be available when compiling Flexible); > > ; > > thomas; > > ; > > ----- Mail original -----; > > ; > > > De: ""Matthieu Nesme"" notifications@github.com; > > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > > ; > > > Hi Hervé,; > > > ; > > > In general, I think it is a good ide",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225:186,integrat,integrating,186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225,3,"['continuous', 'integrat']","['continuous', 'integrating', 'integration']"
Deployability,"The right syntax is the following:. ```C++; const auto visualHaptionDOFSPtr = sofa::core::objectmodel::New<sofa::component::statecontainer::MechanicalObject<sofa::defaulttype::Rigid3dTypes>>();; visualHaptionDOF = visualHaptionDOFSPtr.get();; nodeHaptionVisual->addObject(visualHaptionDOFSPtr);; visualHaptionDOF->name.setValue(""rigidDOF"");; ```. Note that this plugin has not been maintained for a long time. You should expect some changes in order to make it work. Here are some changes I made today to fix the configuration: https://github.com/sofa-framework/sofa/pull/4338. But it does not fix the compilation. If you succeed to make it work, a pull request would be very welcome ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1840404388:513,configurat,configuration,513,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1840404388,1,['configurat'],['configuration']
Deployability,"The screenshots on the repo look mad 🤩 (even asm views of statement 😶‍🌫️); I am especially interested of the multi-threading part, as the profiler of MSVC (and the valgrind/callgrind on linux) does not really handle it well. - ~~Do you need to compile with debug info?~~; - It is tracing so obviously there will be overhead, but can you say how much is the performance hit (if any) ? (msvc's is almost as fast but requires RelWithDebugInfo and callgrind is slow like hell). EDIT: tried myself, works in Release mode as well 😎👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4182#issuecomment-1726711676:503,Release,Release,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4182#issuecomment-1726711676,1,['Release'],['Release']
Deployability,"The status indicating if it is input or output is not hard coded in the data structure.; During the STC it was decided that we should have it. Several category of inputs have been decided: input, output, input-and-output, unknow (see the STC reports for the precise naming). To me the easiest is to export everything with the ""unknow"" type (which indicate ... the ""we don't know exactly"" current state. As you pointed for DataEngine, you can then use the fact a data is part of the ""Input"" / ""Output""... but it is only an heuristic. It is possible to have better heuristic... eg: detecting through the DDG superclass of a data field if this data is an input in an update callback.... but I think this is too complex... and purposeless given that the information should be added (soon) in BaseData.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4775#issuecomment-2178390642:664,update,update,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4775#issuecomment-2178390642,1,['update'],['update']
Deployability,The updated scene fails at the regression step 😑,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2092#issuecomment-843520295:4,update,updated,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2092#issuecomment-843520295,1,['update'],['updated']
Deployability,The upgrade of METIS does not fix the differences between OS'.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3050#issuecomment-1163217733:4,upgrade,upgrade,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3050#issuecomment-1163217733,1,['upgrade'],['upgrade']
Deployability,The upgrade of the VS2015 machines is now done. ; Compilation time for a full build is now 3h30 (instead of 9h30). ; ; Please report any problem encountere to this list;,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186#issuecomment-284981136:4,upgrade,upgrade,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186#issuecomment-284981136,1,['upgrade'],['upgrade']
Deployability,"There is a patch in the daccord repository on forge. . Here are the commit messages (which contains possible interaction with other sofa part):. ```; [FIX]: Allow sofa to save in xml & pyscn the scene. This may break some scene. Once stabilized this may go to the main Sofa. Several issues needed to be adresse to make this system work. first (to try to minimize the amount of un-needed saved informations making the file unreadable) ):; - all the Data<> are now non persistent by default.; - a Data<> become persistent if:; * it is loaded from a file or from a python script.; * it is modified in the GUI. second (hacky stuff on top of old hack stuff):; during the parsing of xml some component ""converts"" XML attributes to other (and possibility none) dataField). As only the dataField can be saved...these attributes are ""lost"". ; The solution was to stop doing with a minimal number of changes the Sofa behavior. . third (quirck stuffs on pile of quirck stuffs):; some important XML attributes are interpreted on the fly and have very specific meaning but there is no associated data field. The solution was to add the corresponding datafield to allow them to be saved.; This is the case for ""src"", ""template"", ""name"", ""type"" .... Given the amount of changed on base classes logics...some scene may have problem to load or save. Please tell if this is the case.; ```. The case that probably could cause some problem is the replacement of the 'src', 'template' with real data field.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/41#issuecomment-254789868:11,patch,patch,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/41#issuecomment-254789868,1,['patch'],['patch']
Deployability,"There is one error on the dashboard:; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3366/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/2/testReport/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/. do you think it is linked to your change or is it a blinking error on the CI?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824:153,release,release,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824,1,['release'],['release']
Deployability,"These files are not in the CMakeLists of SofaGeneralEngine, and were not updated for 14mo.; And the good BoxROI is still in SofaEngine, still updated and tested. So I guess there is no problem with deleting those (and it seems this PR does it well 🐱‍🐉)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1333#issuecomment-613972165:73,update,updated,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1333#issuecomment-613972165,2,['update'],['updated']
Deployability,"These two components were added as a tool to smooth the transition between the use of hard-coded alias in our code base to ""no alias"" at all. The underlying idea was to propose our users, and more specifically the one complaining about the disappearance of the alias they are using, a simple way to restore it (if they don't want to update their complete scene base). . About the fact is it not used... this is not surprising as we are not removing the aliases as it was planned and when we do it we are updating all the scenes in our code base (removing the need for MakeAlias). I personally think that the approach proposed in (#PR 2512: https://github.com/sofa-framework/sofa/pull/2512) is much elegant compared to the MakeAlias (and would advocate to remove MakeAlias when something similar to 2512 is merged) . In any case (either with MakeAlias *or* the Import component) hard-coding multiple aliases for a single component in our c++ code is an UX mistake while letting user specify their aliases is an UX feature, so I would be more in favor for having a clear roadmap to remove the aliases.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648:333,update,update,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648,1,['update'],['update']
Deployability,This PR has been merged but status was not updated due to GitHub service degradation.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1299#issuecomment-617621892:43,update,updated,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1299#issuecomment-617621892,1,['update'],['updated']
Deployability,This PR is connected with:; https://github.com/sofa-framework/sofa/issues/61. I refresh the build to see if this still work then integrate it as no one gave negative feedbacks. ; [ci-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80#issuecomment-267016624:129,integrat,integrate,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80#issuecomment-267016624,1,['integrat'],['integrate']
Deployability,"This PR now fixes the issue cleanly. It would be interesting though, to figure out how many sofa libs are badly installed because of similar issues...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/887#issuecomment-454029284:112,install,installed,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/887#issuecomment-454029284,1,['install'],['installed']
Deployability,This PR: ; - [ ] successfully compile on each configuration on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not break existing scenes.; - [x] does not break API compatibility. ; - [x] is now 1 week old.; - [x] has been reviewed and agreed to be transitional.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-273725996:46,configurat,configuration,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-273725996,1,['configurat'],['configuration']
Deployability,This bug may affect every windows VS builds.; @guparan we investigate and found than the problem come from visual studio build directory named Release/Debug. I´m testing my PR and see if everything works well. I added some specific MSVC code inside the main CMakefile to enforce VS to not create release/debug directory.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561#issuecomment-357989953:143,Release,Release,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561#issuecomment-357989953,2,"['Release', 'release']","['Release', 'release']"
Deployability,"This comes from comit 570b09b. > UPDATE: PointSetTopologyContainer maintains a list of point indices, accessible through the data points. Move data nbPoints to private so that only dedicated methods setNbPoints and getNbPoints are accessible to derived / friend classes. Indeed, not sure if Data is needed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/529#issuecomment-423549647:33,UPDATE,UPDATE,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/529#issuecomment-423549647,1,['UPDATE'],['UPDATE']
Deployability,This feature was already integrated directly into the two (lagrangian) ConstraintSolvers so this component is a bit superfluous. Closing,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1710899770:25,integrat,integrated,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1710899770,1,['integrat'],['integrated']
Deployability,"This is a comment from @damienmarchal in #413 about deprecation task; __________________________________________; To summary this morning discussion with @guparan, @fredroy, @bcarrez, @StephaneCotin, @bruno-marques , @ErwanDouaille ...let's prepare for the sprint.; ; There is a general envy from people that want to participate to put the efforts to make a lighter version of Sofa. . To match this goal, we discussed a workflow this morning in connection with the branch ; https://github.com/SofaDefrost/sofa/tree/deprecating_components; and issue #346 . Concretely during the sprint we may prepare two kind of tasks:; - deprecating as much as component as possible; - stabilizing as much as component as possible . To deprecate the components we need to make a list with the following information: ; - name, some info why to deprecate it bad/redundant/etc... and the string show to the user to explain what to do/replacement and so on. . To stabilize components we need to integrate the work done in the SofaNG so I let @fredroy & @guparan say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/426#issuecomment-333146181:975,integrat,integrate,975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/426#issuecomment-333146181,1,['integrat'],['integrate']
Deployability,"This is the new call stack after last commit, calling applyTransform at the end of load method... To be discussed. ```; SphereLoader::load; SphereLoader::applyTransform; !! addUpdateCallback filename; m_filename has changed: 1; SphereLoader::load; SphereLoader::applyTransform; SphereLoader::applyTransform exit; SphereLoader::load exit; !! addUpdateCallback exit valid; !! updateTransformPosition; d_translation has changed: 0; d_rotation has changed: 0; d_scale has changed: 1; SphereLoader::applyTransform; SphereLoader::applyTransform exit; !! updateTransformPosition exit; SphereLoader::applyTransform exit; SphereLoader::load exit; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-716717800:374,update,updateTransformPosition,374,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-716717800,2,['update'],['updateTransformPosition']
Deployability,This issue can be closed as the unittests are activated now as advised by @fjourdes since ... I dont remember but few releases ago.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/489#issuecomment-1050660937:118,release,releases,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/489#issuecomment-1050660937,1,['release'],['releases']
Deployability,"This issue has been fixed (or should have been 😛) since the release of the v20.12.; Install and out-of-tree compilation have been a priority for this release.; If there is still some issue on this topic, please don't hesitate to re-open this issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1560#issuecomment-780660230:60,release,release,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1560#issuecomment-780660230,3,"['Install', 'release']","['Install', 'release']"
Deployability,"This merge is not possible. Hervé, first you have to know your own fork (or a more global fork you could create for asclepios) can be compiled in the sofa continuous integration system. To include your work about high order topology in the sofa-public w/o breaking existing stuff, my suggestion is to create a new plugin in your fork, then to propose it here as a pull request. Once you'll have created the PR, we'll be able to possibly fix the glue with Flexible.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-263809969:155,continuous,continuous,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-263809969,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"This won't be enough. All bindings made for SofaPython fail when building in C++17.; ```; [1208/2186] Building CXX object modules/SofaExporter/CMakeFiles/SofaExporter.dir/src/SofaExporter/bindings/Binding_STLExporter.cpp.o; FAILED: modules/SofaExporter/CMakeFiles/SofaExporter.dir/src/SofaExporter/bindings/Binding_STLExporter.cpp.o; < ... >; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/modules/SofaExporter/src/SofaExporter/bindings/Binding_STLExporter.cpp:24:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/modules/SofaExporter/src/SofaExporter/bindings/Binding_STLExporter.h:25:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/applications/plugins/SofaPython/../SofaPython/PythonMacros.h:29:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/applications/plugins/SofaPython/../SofaPython/PythonCommon.h:27:; In file included from /usr/include/python2.7/Python.h:88:; /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]; register PyObject *obj, /* Object */; ^~~~~~~~~; ```; See https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1284/CI_CONFIG=ubuntu_clang-6,CI_PLUGINS=options,CI_TYPE=release/2/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1284#issuecomment-603846480:1452,release,release,1452,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1284#issuecomment-603846480,1,['release'],['release']
Deployability,Those Configurations are also meant to be used by the CI to easily set the type of build. The full build will be the one used for PR and Releases. While plugin will be deactivated by the bash script depending on the installed dependencies on the OS.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4766#issuecomment-2150330645:6,Configurat,Configurations,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4766#issuecomment-2150330645,3,"['Configurat', 'Release', 'install']","['Configurations', 'Releases', 'installed']"
Deployability,"Those issues could be fixed when the OglFluidModel will be a VisualManager or something like that, to do multitexturing with the current FrameBuffer in Sofa.; This rendering is mostly a Proof of Concept so I shall upgrade it when I have time in the future ;); Or if it is deemed necessary...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1194#issuecomment-544897706:214,upgrade,upgrade,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1194#issuecomment-544897706,1,['upgrade'],['upgrade']
Deployability,"Timeout on tests was disabled in 2bc5db53 with commit message ""I have the intuition that this timeout mess might be the reason why continuous builds on Windows are so long. Let's see...""; Should we re-enable this?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289726033:131,continuous,continuous,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289726033,1,['continuous'],['continuous']
Deployability,"To answer directly the question of @epernod , yes 🫠. I think it was designed to mimic https://cmake.org/cmake/help/latest/module/FetchContent.html (kind of), at a time where it did not exist in CMake yet ; as `ExternalProject_Add` https://cmake.org/cmake/help/latest/module/ExternalProject.html have existed since much longer time ago (CMake 3.0 ?). Now that it is been introduced few years from now (2018 I think), I think the `ExternalProject_Add` mechanism should be phased out and replaced by the `FetchContent` one.; It would save the problem of getting the source being pulled into the source dir of SOFA (hence the .gitignore file); **AND** also the problem of plugins' updates, as (normally) the cmake configure step updates the source (except if `FETCHCONTENT_UPDATES_DISCONNECTED` is set)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4409#issuecomment-1886033453:677,update,updates,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409#issuecomment-1886033453,2,['update'],['updates']
Deployability,"To anyone (@guparan and @hugtalbot, @fredroy, @bcarrez ) Can you please check how the formatting sheet should be updated to stick the the sofa guidelines (or withdrawn some rule from the guidelines) so we have an up-to date sheet to use.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353082986:113,update,updated,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353082986,1,['update'],['updated']
Deployability,To do: update the deprecation dates,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4771#issuecomment-2178054391:7,update,update,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4771#issuecomment-2178054391,1,['update'],['update']
Deployability,"To me compiler's specific default configuration shouldn't have consequence in our code base and we shouldn't design software architecture *because* of a specific compiler issue (which is actually not an issue..because it is something that can be change with command arguments). Compiler's options exists to be used and so I see no problem in using them. . Said differently, setting compiler's option in the CMake to have more inlining is much more legitimate ""and the good way"" than putting ""inline"" in front of every declaration. . EDIT: what surprise me is that this seems related to inlining... while I would have bet it would be more related to LTO/GO.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3343#issuecomment-1265270806:34,configurat,configuration,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3343#issuecomment-1265270806,1,['configurat'],['configuration']
Deployability,To me this PR is to merge once updated.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-459502721:31,update,updated,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-459502721,1,['update'],['updated']
Deployability,"To redo/update this PR, go in SOFA sources and run ; ```bash; ./scripts/licenseUpdater/licenseUpdater.sh . auto; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1375#issuecomment-627320642:8,update,update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1375#issuecomment-627320642,1,['update'],['update']
Deployability,"To summary this morning discussion with @guparan, @fredroy, @bcarrez, @StephaneCotin, @bruno-marques , @ErwanDouaille ...let's prepare for the sprint.; ; There is a general envy from people that want to participate to put the efforts to make a lighter version of Sofa. . To match this goal, we discussed a workflow this morning in connection with the branch ; https://github.com/SofaDefrost/sofa/tree/deprecating_components; and issue #346 . Concretely during the sprint we may prepare two kind of tasks:; - deprecating as much as component as possible; - stabilizing as much as component as possible . To deprecate the components we need to make a list with the following information: ; - name, some info why to deprecate it bad/redundant/etc... and the string show to the user to explain what to do/replacement and so on. . To stabilize components we need to integrate the work done in the SofaNG so I let @fredroy & @guparan say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-332496965:861,integrat,integrate,861,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-332496965,1,['integrat'],['integrate']
Deployability,"Too bad, I was just searching for this feature and discovered it was not integrated.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033#issuecomment-1164402707:73,integrat,integrated,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033#issuecomment-1164402707,1,['integrat'],['integrated']
Deployability,TopologicalChangeProcessor_test needs an update since the number of points is then known. @epernod,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1232712940:41,update,update,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1232712940,1,['update'],['update']
Deployability,Tracy integration in https://github.com/sofa-framework/SofaGLFW/pull/89,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4200#issuecomment-1765861726:6,integrat,integration,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4200#issuecomment-1765861726,1,['integrat'],['integration']
Deployability,Two regression tests are failing :; - Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver; - Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver_diagonal. I suppose this is because you moved them into a new folder and the Regression project has not been updated accordingly.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-873010397:284,update,updated,284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-873010397,1,['update'],['updated']
Deployability,Unfortunately no. SofaPython3 builds without error on my Ubuntu 18.04; My config:; - SOFA v20.06 binaries unzipped in my home; - pybind11 2.4.3 installed in my system; - python 3.8.3 installed in my system,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656144967:144,install,installed,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656144967,2,['install'],['installed']
Deployability,"Unfortunately, I won't be able to come to Sophia Antipolis for the next STC... But if I haven't investigated the issue until then, I'll try to block 1 or 2 days during the STC to work on it from distance.; I'll keep you updated in the meantime.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-489441938:220,update,updated,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-489441938,1,['update'],['updated']
Deployability,Update (as bench on scenes is unreliable); - Linux/clang: `15.5sec` (master) vs `16.5sec` (pr); - Windows/cl: `17.5sec` (master) vs `18.2sec` (pr). Much less difference after all,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2550#issuecomment-1011986258:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2550#issuecomment-1011986258,1,['Update'],['Update']
Deployability,Update ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270089387:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270089387,1,['Update'],['Update']
Deployability,Update documentation (supported version) : see [pages](https://www.sofa-framework.org/community/doc/getting-started/build/linux/); and make sure that the CI is following these (Guillaume will work on this),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-585110991:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-585110991,1,['Update'],['Update']
Deployability,"Update is done.; Good to know: Git Bash added itself at the end of PATH, **after** MinGW. This brings me a question: why MinGW? We don't need all these duplicated tools (sh.exe, bash.exe, ...). @damienmarchal, did you install MinGW only for Ninja?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/234#issuecomment-291490914:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/234#issuecomment-291490914,2,"['Update', 'install']","['Update', 'install']"
Deployability,Update of FixedConstraint in PR #1806,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1589#issuecomment-784952675:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1589#issuecomment-784952675,1,['Update'],['Update']
Deployability,Update of my suggestion:; - Analyze: output data resulting from the analysis of input ones; - Process: output data coming from computations using input data; - Mesh: all operation on topologies/meshes; - Rigid (possibly to merge into Process); - Select; - Transform. any alternative suggestion else Fred will have a gooooo; @epernod @alxbilger,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2812#issuecomment-1108846225:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2812#issuecomment-1108846225,1,['Update'],['Update']
Deployability,"Update of my suggestion:; - Analyze; - Process; - Mesh; - Rigid (possibly to merge into Process); - Select; - Transform. It ""merges"" your proposals more or less. If no other feedback Fred will do the changes and ... :arrow_down: merge !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2812#issuecomment-1106528695:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2812#issuecomment-1106528695,1,['Update'],['Update']
Deployability,Update the FIX but now this PR depends on change done in PR #2870,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1098890010:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1098890010,1,['Update'],['Update']
Deployability,Update:; - Components/forcefield/BeamFEMForceField.scn fixed; - Components/constraint/BilateralInteractionConstraint.scn 100 1e-4; - ERRORBYDOF: 22.9926 ; - Demos/caduceus.scn 100 1e-3; - ERRORBYDOF: 2.68482; - Components/collision/FFDDistanceGridCollisionModel.scn 100 1e-4; - Moved into a plugin.; - Components/constraint/FrictionContact.scn 100 1e-4; - ERRORBYDOF: 1.45887; - Components/collision/RuleBasedContactManager.scn 100 1e-4; - ERRORBYDOF: 0.215011. 6/10 working!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/828#issuecomment-439006264:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/828#issuecomment-439006264,1,['Update'],['Update']
Deployability,Updated one last time and moved to https://github.com/sofa-framework/Communication; Feel free to open issues and pull-requests there.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-853156278:0,Update,Updated,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-853156278,1,['Update'],['Updated']
Deployability,"Updated to Qt6, and fixed on macos. This required some fixes in upstream nixpkgs: https://github.com/NixOS/nixpkgs/pull/348549, so until this is merged we have to use its source.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2416486756:0,Update,Updated,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2416486756,1,['Update'],['Updated']
Deployability,Upgraded to which version? Folder is still `metis-5.1.0`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1164220172:0,Upgrade,Upgraded,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1164220172,1,['Upgrade'],['Upgraded']
Deployability,"Very nice work @Wall-E-76 ! Impressive !; Thank you very much, let's wait the continuous integration !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1116#issuecomment-516328823:78,continuous,continuous,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1116#issuecomment-516328823,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,WIP to update data comments and other locations,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2798#issuecomment-1082772455:7,update,update,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2798#issuecomment-1082772455,1,['update'],['update']
Deployability,"Wait for CI: https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/CI_CONFIG=windows10_vs-2017,CI_TYPE=release/1274/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1949#issuecomment-809382816:97,release,release,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949#issuecomment-809382816,1,['release'],['release']
Deployability,Waiting for CI but I think it's better now:; used enable_if<is_base_of> to compile or not the doUpdate / update methods in the test. should be clean enough,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/760#issuecomment-423956245:105,update,update,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/760#issuecomment-423956245,1,['update'],['update']
Deployability,"Waiting for merge.; Should answer every points of the ""data update"" workgroup (not listed in the issues?).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80#issuecomment-264838982:60,update,update,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80#issuecomment-264838982,1,['update'],['update']
Deployability,"We already talked about that, and indeed you explained very well the nature of the problem and how to solve it. I don't think of a better approach. It is important to note that this pattern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at `BarycentricMapping`, derived from `Mapping`, for example: it calls `Inherit1::doBaseObjectInit`, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252283975:698,update,update,698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252283975,1,['update'],['update']
Deployability,"We are good to go thanks to @fredroy ; **do not mind the build** dashboard is not displaying the right builds, e.g. for windows take a look at : https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/18/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/. LGTM when you agree dear reviewers!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1179664988:263,release,release,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1179664988,1,['release'],['release']
Deployability,"We can't do that 😞 ; Anyway, we all agree that a ""pr: wip"" pull request must not be merged. See the recently updated [PR Lifecycle section](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#lifecycle) of our Contributing.md file.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-304831827:109,update,updated,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-304831827,1,['update'],['updated']
Deployability,"We discussed a lot about it...but we never did a PR on that topic probably fearing the refactoring work and the amount of workload it would generates. . > It is important to note that this pattern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at BarycentricMapping, derived from Mapping, for example: it calls Inherit1::doBaseObjectInit, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Yes, all call-super need to be fixed that way (which I didn't in the PR), I will not do that unless it is clear we are really going to do such a breaking change in the sofa code base ;) . > Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get docum",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:889,update,update,889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162,1,['update'],['update']
Deployability,"We don't have anymore the history unfortunately, but for the reference the main author is madurand (Marie Durand, PhD at Grenoble at that time), and main patches are from allardj (Jeremie Allard), hcourtecuisse (Hadrien Courtecuisse)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2535#issuecomment-990934380:154,patch,patches,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2535#issuecomment-990934380,1,['patch'],['patches']
Deployability,"We tested this scene in debug and release, and both displays a warning message.; The warning message is consistent because it use a default template (aka double). Here is a log on debug :; ` [WARNING] [MergeVectors(merge)] Template <tartempion> incorrect, used <double>; `",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328103188:34,release,release,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328103188,1,['release'],['release']
Deployability,"We will also need to install metis library to distribute it with the binaries. I didn't have time to make it work, I'll try tomorrow.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1952885406:21,install,install,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1952885406,1,['install'],['install']
Deployability,"Weird because Metis sources are shipped with SOFA (see https://github.com/sofa-framework/sofa/tree/master/Sofa/Component/LinearSolver/Direct/extlibs/metis-5.1.0). On my CMake, I see . ![image](https://user-images.githubusercontent.com/10572752/194084610-64eabe13-19a2-4ea8-ace9-6511748851d3.png). I also have `metis_DIR-NOTFOUND` for `metis_DIR`. But `Metis_DIR` is correctly filled. I noticed you try to compile v21.06. The latest release is v22.06. You could try updating your SOFA. And let us know if you succeeded in fixing your problem. Thanks.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3213#issuecomment-1268511413:432,release,release,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3213#issuecomment-1268511413,1,['release'],['release']
Deployability,"Well in this case, the bug was a wrongfully warning printed only when Sofa is built in debug. Can we create tests that are that specific?. I could try to do some regex ninja tests on the application output, but it would have to be executed on debugged configurations. Let me know if this is something you would like to see for this PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329789709:252,configurat,configurations,252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329789709,1,['configurat'],['configurations']
Deployability,"Well it's not critical at all to me (4 years of Shacra-Defrost work with the code and simulation tool). I just saw that the tutorials are out of the releases so I understand that the coming soon 17.12 is more important now. However, these tutorials are the direction new interns (or other new people) are given to discover Sofa. Therefore, I think that ensuring the good functionality of this tool/scene should be added to future priorities [which you did by tagging with v18.06]. Anyway, keep up the good work guys",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/445#issuecomment-343604100:149,release,releases,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/445#issuecomment-343604100,1,['release'],['releases']
Deployability,"Well spotted @jnbrunet :+1: . This is due to the fact that SofaSimulationCore is part of the SofaFramework package and NOT the SofaSimulation package.; I think I wanted to make things simpler by installing SofaSimulationCore under SofaSimulation but I forgot to set the target_include_directories accordingly (as you saw by yourself). I think the most consistent solution is to install SofaSimulationCore back in SofaFramework by setting, in sofa/simulation/CMakeLists.txt, `sofa_install_targets(SofaFramework ${PROJECT_NAME} ""SofaFramework/sofa/simulation"")`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540482203:195,install,installing,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540482203,2,['install'],"['install', 'installing']"
Deployability,"Well to my understanding it's supposed to be `install(DIRECTORY <dir> DESTINATION include/<dir>)`. Taken from [CMake's Doc](https://cmake.org/cmake/help/v3.0/command/install.html):; ""The DIRECTORY form installs contents of one or more directories to a given destination. The directory structure is copied verbatim to the destination."". Obviously though, it's not working in this case. I can't figure out why not",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/887#issuecomment-454019268:46,install,install,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/887#issuecomment-454019268,3,['install'],"['install', 'installs']"
Deployability,"Well, . If I had to choose between a new release with no new features and post-poning the release by 15 days I would definitely prefer the release to be post-poned. . The general idea is that plugins that are tagged experimental and does not change the existing behavior should be integrated... :) ; And I would dream to see people making extra effort to have that happen.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/541#issuecomment-353020245:41,release,release,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/541#issuecomment-353020245,4,"['integrat', 'release']","['integrated', 'release']"
Deployability,"Well, here is the updated log. (I also did small corrections in scene to remove warnings I know how to remove. Anyway, the issue is still there).; The scene with corrections is attached.; [test_scene.zip](https://github.com/sofa-framework/sofa/files/8573660/test_scene.zip). **Full output**. ```txt. [sergei@sergei-20hd0000fr test_scene]$ /home/sergei/Source_code/Sofa_development/sofa/build_release/install/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so /home/sergei/Source_code/test_scene/test_scene.py ; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/runSofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:18,update,updated,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['install', 'update']","['install', 'updated']"
Deployability,"Well, it's now compiling on linux since @bcarrez installed a new version of some ffmpeg libs.; The failure on the ubuntu build is due to the lack of X. @damienmarchal @guparan @hugtalbot do we need to test this ""gui"" ? I means, others gui are not tested and the problem would be the same as we encounter with the headless recorder if we consider testing it. On centos, we need to install newer version of ffmpeg libs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360769714:49,install,installed,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360769714,2,['install'],"['install', 'installed']"
Deployability,"Well...can someone explain briefly how this PR will affect other person's code, how will they be award something have changed and that they need to update something ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311000014:148,update,update,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311000014,1,['update'],['update']
Deployability,"What about ?; ```cpp; void update() final; {; updateAllInputs(); // a method that calls `updateIfDirty()` on all inputs: can be overridden, but rarely necessary; cleanAllInputsDirty(); // same as cleanDirty(), but does NOT call m_datatracker->clean() so counters are still valid after; doUpdate() // actual magic; cleanAllInputsCounter() // cleaning the counters; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/760#issuecomment-428487686:27,update,update,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/760#issuecomment-428487686,3,['update'],"['update', 'updateAllInputs', 'updateIfDirty']"
Deployability,When running caduceus scene for 100 time steps:. | Calls to updateIfDirty() | Before | After | | |; |-------------------------------------------|----------|----------|------|---|; | MechanicalObject::position | 2269573 | 515920 | -77% | |; | SparseGridRamificationTopology::hexahedra | 646323 | 77430 | -88% | |; | SparseGridRamificationTopology::position | 644268 | 24473 | -96% | |; | RegularGridTopology::n | 19981966 | 10347192 | -48% | |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263555229:60,update,updateIfDirty,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263555229,1,['update'],['updateIfDirty']
Deployability,"When you are working on Mac M1, install Qt5 using ` brew install qt@5`, avoid using the official version. @caimingxue @MingshanHe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246:32,install,install,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246,2,['install'],['install']
Deployability,"Why it is not possible to have with?. Solution:; The installer can detect:; - if there is on the machine, good; - if not, inform the user to download the good package...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454127765:53,install,installer,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454127765,1,['install'],['installer']
Deployability,Will require a PR to https://github.com/sofa-framework/ci to fetch/activate it for the right configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4573#issuecomment-1987931651:93,configurat,configuration,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573#issuecomment-1987931651,1,['configurat'],['configuration']
Deployability,Will require a PR to https://github.com/sofa-framework/ci to fetch/activate them for the right configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4575#issuecomment-1987930649:95,configurat,configuration,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575#issuecomment-1987930649,1,['configurat'],['configuration']
Deployability,With the example used in PR #1093; here is the time of the visitor when no update is done. (green line); ![image](https://user-images.githubusercontent.com/21199245/64020981-3dac8d80-cb33-11e9-9707-5c4b09500975.png),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1131#issuecomment-526584524:75,update,update,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1131#issuecomment-526584524,1,['update'],['update']
Deployability,"Within recent version of Eigen installed on most OS, there is already a cmake find_package(Eigen3) available. By create a FindEigen3.cmake you will override this. I've seen a couple of projects dealing with this kind of problem with, for example:. SofaKernel/cmake/Modules/**FindEigen3Sofa**.cmake:; ```; # try to find ""FindEigen3.cmake"" from system Eigen; find_package(Eigen3) . if (not Eigen3); # do your thing here; else(); # use system Eigen3; endif(); ```. CMakeLists.txt; `find_package(Eigen3Sofa)`. pybind11 do this for example with find_package(PythonNew) which point to their PythonNew.cmake which trigger a system find_package(Python). Maybe it could be a solution for us?. Edit: Sorry I'm polluting this fast-merge PR for that, we can discuss this elsewhere ;-D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1175#issuecomment-539446978:31,install,installed,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1175#issuecomment-539446978,1,['install'],['installed']
Deployability,Working on it ! I should be able to release it next week !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/36#issuecomment-290764107:36,release,release,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/36#issuecomment-290764107,1,['release'],['release']
Deployability,Would be grant if somebody can provide the patch - may be there are more things to change. Thanks for asking.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1133#issuecomment-529117142:43,patch,patch,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1133#issuecomment-529117142,1,['patch'],['patch']
Deployability,"Wow, green dashboard, is it Xmas already ?; Very nice work @damienmarchal ! 👏 . Could you update your review @matthieu-nesme ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-303038710:90,update,update,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-303038710,1,['update'],['update']
Deployability,"Wow, this SofaCUDA for ConstraintCorrection is exactly what I want! Is there any update here?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3004#issuecomment-1189717472:81,update,update,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3004#issuecomment-1189717472,1,['update'],['update']
Deployability,"Yeah but if you don't do it, than we need to manually update the commit number each time SofaPython3 upgrades. They should follow each others.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820398880:54,update,update,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820398880,2,"['update', 'upgrade']","['update', 'upgrades']"
Deployability,"Yeah, I installed QT5 with `brew install qt@5` and source the `.bashrc` with the installed path. Actually, my `cmake-gui` could find `QT5` also `QT6` which I tried to install. But the building process always occurs with errors. I tried install the QT with the source code, `brew` and the official install tools (x86), but it doesn't fix it successfully.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444:8,install,installed,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444,6,['install'],"['install', 'installed']"
Deployability,"Yes I actually fixed it in https://github.com/sofa-framework/sofa/pull/905, see https://github.com/sofa-framework/sofa/commit/c608d441edd35f6e8eb90ebfc420cb941c3bd750 and https://github.com/sofa-framework/sofa/commit/e1b55cba5ff200c7a11f6992974159b55cec000f. The error is printed on CI but you have to open the output of a scene test to see it (Jenkins only shows the first line of an error in the ""SOFA SceneTest Errors"" view). See for example the [output of failing scene Components/forcefield/ForceMaskOff.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/636/artifact/parent_dir/build/scene-tests/examples/Components/forcefield/ForceMaskOff.scn/output.txt) (latest master build).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/922#issuecomment-461353086:628,release,release,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/922#issuecomment-461353086,1,['release'],['release']
Deployability,"Yes I know, and I'm not questioning your work nor the 3 weeks of discussions. But, if you are going to automatically merge the related PR in SP3 to its master branch, than why hard code the commit number? You can automatically update it on the CI, but not actually commit it. Once it passes, no need to change the ""origin/master"" since it contains your automatically merged SP3 PR. If you don't do it, then upgrades in SP3 (bug fixes, new features) that do not have a related PR in SOFA won't be taken into account unless we go do a PR in SOFA to update this pointer. I can guarantee you that nobody will think of doing it. Which means that fetching SP3 within SOFA has great chance to be pointing to an old version. In fact, the reason I asked this to Damien is exactly because of this, SOFA fetched me an outdated version of SP3, which didn't contain the latest bug fix in SP3.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820454841:227,update,update,227,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820454841,3,"['update', 'upgrade']","['update', 'upgrades']"
Deployability,"Yes because the mechanicalObject is translating the topology:; `<MechanicalObject dx=""0"" dy=""20"" dz=""29"" rz=""64"" />`; z= 29 - 1.75 = 27.25. The problem is in fact that the position in the regularGrid are not transformed... which is weird as they should be updated by the data graph.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/308#issuecomment-315024975:256,update,updated,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/308#issuecomment-315024975,1,['update'],['updated']
Deployability,Yes it is: actions making changes in the repo (here a comment) are forbidden as long as it is not merged; See the end of the message: `Resource not accessible by integration`. You need to trust me :see_no_evil:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4267#issuecomment-1785524462:162,integrat,integration,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4267#issuecomment-1785524462,1,['integrat'],['integration']
Deployability,"Yes it will, but not for 'default' configurations, but - - for 'options' one. Those are the same as the one compiled by the PRs. It actually changes nothing but removes regression errors for 'default' configuration (only on the dashboard) because the lib was not found, which is normal because it is not compiled. . This PR comes along with two other ones on Regression and ci to remove the regression files and add the fetching for 'option' configurations.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1967722990:35,configurat,configurations,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1967722990,3,['configurat'],"['configuration', 'configurations']"
Deployability,"Yes, I don't have the exact commit but, after the version 5.1.0, some changes lead to a crash. Before the changes, it works.; It has been fixed later in this commit: https://github.com/KarypisLab/METIS/commit/36262adecaa9720a4417a67124428061c367fd3f. It means the versions in between both commits cannot be used without a crash. Note also that the version number (in the code) has not been updated properly along the history of the repository: https://github.com/KarypisLab/METIS/commit/f5ae915a84d3bbf1508b529af90292dd7085b9ec. It went from 5.1.0 to 5.2.1, whereas there is a 5.1.1 release. Finally, less importantly, in SOFA we need a portable random generator in METIS for reproductible results. It is enabled via a compilation option `METIS-GKLIB_GKRAND`. This is not enabled by default in releases.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1905527144:390,update,updated,390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1905527144,3,"['release', 'update']","['release', 'releases', 'updated']"
Deployability,"Yes, closing.; I'll update again the doc after my future changes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2048#issuecomment-854618528:20,update,update,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2048#issuecomment-854618528,1,['update'],['update']
Deployability,"Yes, the CI builder generating the binaries is an intel mac. This is a compatibility choice, to enable the use of our binaries by every one. ; To use them on a arm64 you need to install Rosetta on your mac to run x86 libraries. But it will not run at full speed because of the compatibility layer. To have optimized binaries for your architecture, you'll need to compile them yourself.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2082051094:178,install,install,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2082051094,1,['install'],['install']
Deployability,"You are right about the case of 1 iteration. I broke it by starting `i` to 2. Handling the 1 iteration case differently is a bit overkill though. Here is my update (still not tested):; ```cpp; int BatchGUI::mainLoop(); {; if (groot); { ; if (nbIter != -1); { ; msg_info(""BatchGUI"") << ""Computing "" << nbIter << "" iterations."" << msgendl;; }; else; {; msg_info(""BatchGUI"") << ""Computing infinite iterations."" << msgendl;; }; ; sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; msg_info(""BatchGUI"") << ""Processing."" << sofa::helper::AdvancedTimer::end(""Animate"", groot.get()) << msgendl;; // As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());; sofa::simulation::Visitor::ctime_t rtfreq = sofa::helper::system::thread::CTime::getRefTicksPerSec();; sofa::simulation::Visitor::ctime_t tfreq = sofa::helper::system::thread::CTime::getTicksPerSec();; sofa::simulation::Visitor::ctime_t rt = sofa::helper::system::thread::CTime::getRefTime();; sofa::simulation::Visitor::ctime_t t = sofa::helper::system::thread::CTime::getFastTime();; ; signed int i = 1; // one simulation step is animated above ; ; while (i <= nbIter || nbIter == -1); {; if (i != nbIter); {; sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());; }. if ( i == nbIter || (nbIter == -1 && i%1000 == 0) ); {; t = sofa::helper::system::thread::CTime::getFastTime()-t;; rt = sofa::helper::system::thread::CTime::getRefTime()-rt;. msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)t)/((double)tfreq) << "" s ( "" << (((double)tfreq)*i)/((double)t) << "" FPS)."" << msgendl;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)rt)/((double)rtfreq) << "" s ( "" << (((double)rtfr",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378860087:157,update,update,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378860087,2,['update'],"['update', 'updateVisual']"
Deployability,"You are right and it is shitting for the person on whom it falls :); Haa! A stylesheet! But, as usual with sofa, it takes some time to set it up (install astyle, install the QtCreator plugin, add the configuration file). ; I agree with you to make for 17.16 on the whole repository",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353076573:146,install,install,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353076573,3,"['configurat', 'install']","['configuration', 'install']"
Deployability,You are right that the spheres are too dark ; I forgot to add the ambient component in the final color computation ; I will submit a patch right away.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/170#issuecomment-283982065:133,patch,patch,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/170#issuecomment-283982065,1,['patch'],['patch']
Deployability,"You can see an example of regression test results here: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-830/11/CI_CONFIG=windows7_vs-2015_amd64,CI_PLUGINS=options,CI_TYPE=release/testReport",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/830#issuecomment-440201586:181,release,release,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/830#issuecomment-440201586,1,['release'],['release']
Deployability,"You mean, you open the tab, simulate and there is no update?; Could you check if clicking on the refresh button on the bottom update the values?; I guess the gui is not calling ""continuous update"" on the Data to avoid slowing down the simulation but I'm not expert of the DataWidget.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258:53,update,update,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258,4,"['continuous', 'update']","['continuous', 'update']"
Deployability,"You weren't there this morning @marques-bruno but if your proposal is both :. - specifying in a descriptive way the type of numerical integration method; - the inheritance issue. and I think it does. We should go for it. I did not know the OptionsGroup class.; If not, we keep and merge Hervé's work. Hugo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-595246361:134,integrat,integration,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-595246361,1,['integrat'],['integration']
Deployability,[INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUI,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9521,Release,Release,9521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,[INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [IN,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9390,Release,Release,9390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,[ci-build]. I will merge the PR if it compile nicely. . @maxime-tournier can you add a synthetic CHANGELOG section at the end of the description of this PR so that @hugtalbot & @guparan can easily update the CHANGELOG.md file in in sofa.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283#issuecomment-307798058:197,update,update,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283#issuecomment-307798058,1,['update'],['update']
Deployability,[ci-build]; @matthieu-nesme could you update your review?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/288#issuecomment-313442661:38,update,update,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/288#issuecomment-313442661,1,['update'],['update']
Deployability,"[ci-build]; Given the long discussion in ; https://github.com/sofa-framework/sofa/issues/81. It is unclear to me if PR is a WIP or something ready to merge and maybe updated in some future. . @raphaeldeimel, @maxime-tournier, @matthieu-nesme what is your opinion ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/91#issuecomment-267017883:166,update,updated,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/91#issuecomment-267017883,1,['update'],['updated']
Deployability,[ci-build][with-scene-tests]; Regression needs to be updated. . PR to update Regression is: https://github.com/sofa-framework/regression/pull/6,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1794#issuecomment-780168810:53,update,updated,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794#issuecomment-780168810,2,['update'],"['update', 'updated']"
Deployability,"] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [IN",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9457,install,install,9457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [Plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5228,Release,Release,5228,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4670,Release,Release,4670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4258,Release,Release,4258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Componen,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9120,Release,Release,9120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6998,Release,Release,6998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"`Actually, I dont even know if anybody uses the GUI with the docker installation ` why so? ; don't we need the gui for the sofa? how did we launch sofa then?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315525997:68,install,installation,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315525997,1,['install'],['installation']
Deployability,"`SOFA_ROOT` should be set at the root of your install folder; here in your case, you have to do ; `export SOFA_ROOT=/home/sofa/SOFA_v23.06.00` before launching python ; ( or you can set the env.var directly in your python script before importing SOFA)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905#issuecomment-2277774514:46,install,install,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905#issuecomment-2277774514,1,['install'],['install']
Deployability,"```. class MatrixStructure {; public:; MatrixStructure() : version(0) {}. void updateStructure() {; // Update the matrix structure (e.g., due to user interaction); // You can update indices, dimensions, or any relevant information here; version++;; }. int getVersion() const {; return version;; }. private:; int version;; };. // Usage example:; MatrixStructure matrixStructure;. // Update the matrix structure when changes occur; matrixStructure.updateStructure();. // Check if the matrix structure has changed before performing a computation; int currentVersion = matrixStructure.getVersion();; if (currentVersion != previousVersion) {; // The matrix structure has changed, perform necessary updates; // For example, recompute matrix intersections or mappings; // ... // Update the previous version to the current one; previousVersion = currentVersion;; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2687#issuecomment-1873489792:79,update,updateStructure,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2687#issuecomment-1873489792,7,"['Update', 'update']","['Update', 'update', 'updateStructure', 'updates']"
Deployability,"```; void NarrowPhaseDetection::endNarrowPhase(); {; for (auto it = m_outputsMap.begin(); it != m_outputsMap.end();); {; DetectionOutputVector *do_vec = (it->second);; if (!do_vec || do_vec->empty()); {; if (do_vec); {; do_vec->release();; }; m_outputsMap.erase(it++);; }; else; {; ++it;; }; }; }; ```. The intended behavior of this is ""if the vector is empty, or it's a nullpointer, remove it from the map. If it is not a nullpointer, also release the vector"", right?. Since the `do_vec->clear()` is in `beginNarrowPhase`, the vector is never released correctly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333:228,release,release,228,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333,3,['release'],"['release', 'released']"
Deployability,a/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded pl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6115,Release,Release,6115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,a/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5977,Release,Release,5977,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"a/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/so",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10945,Release,Release,10945,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,a/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/li,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7243,install,install,7243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,a_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7135,Release,Release,7135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,aconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8572,Release,Release,8572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,aconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [Plu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5533,Release,Release,5533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,aded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Rele,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4130,Release,Release,4130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,ager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8345,install,install,8345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,ager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3867,install,install,3867,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,ager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3700,Release,Release,3700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,alizeSystem; 7 	 3.23	 1 	 0.15	 0.40	 0.19	 0.04	 0.19	 0.30	.......resizeSystem; 7 	 3.41	 1 	 0.07	 0.40	 0.11	 0.05	 0.11	 0.18	.......clearSystem; 7 	 3.53	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.02	.......initializeLocalMatrices; 6 	 3.54	 1 	 50.34	 52.60	 50.89	 0.41	 50.89	 81.62	......AssembleSystem; 7 	 3.54	 1 	 50.31	 52.58	 50.87	 0.41	 50.87	 81.58	.......buildMatrices; 8 	 3.54	 1 	 50.03	 52.24	 50.56	 0.40	 50.56	 81.10	........buildStiffness; 8 	 54.11	 1 	 0.28	 0.45	 0.30	 0.03	 0.30	 0.48	........buildMass; 8 	 54.40	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildDamping; 8 	 54.40	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildGeometricStiffness; 7 	 54.41	 1 	 0 	 0 	 0 	 0 	 0 	 0 	.......projectMappedMatrices; 7 	 54.41	 1 	 0.02	 0.03	 0.02	 0 	 0.02	 0.03	.......applyProjectiveConstraint; 4 	 54.43	 1 	 7.47	 8.01	 7.68	 0.11	 7.68	 12.32	....MBKSolve; 5 	 54.57	 1 	 7.31	 7.85	 7.52	 0.11	 7.52	 12.06	.....CG-Solve; 4 	 62.12	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.02	....UpdateVAndX. --- . Normal : 27.3678 FPS. 2 	 0.04	 1 	 37.97	 39.96	 38.38	 0.34	 38.38	 99.38	..solve; 3 	 0.04	 1 	 37.96	 39.95	 38.38	 0.34	 38.38	 99.37	...Mechanical; 4 	 0.06	 1 	 1.70	 2.24	 1.88	 0.12	 1.88	 4.88	....ComputeForce; 4 	 1.94	 1 	 0.94	 1.23	 1.04	 0.06	 1.04	 2.68	....ComputeRHTerm; 4 	 2.98	 1 	 22.20	 23.41	 22.47	 0.18	 22.47	 58.17	....MBKBuild; 5 	 2.98	 1 	 22.20	 23.40	 22.46	 0.18	 22.46	 58.16	.....CG-setSystemMBKMatrix; 6 	 2.98	 1 	 0.01	 0.03	 0.02	 0 	 0.02	 0.04	......getContributors; 6 	 3 	 1 	 0.01	 0.01	 0.01	 0 	 0.01	 0.02	......buildMappingGraph; 6 	 3.01	 1 	 0.25	 0.56	 0.30	 0.04	 0.30	 0.77	......InitializeSystem; 7 	 3.01	 1 	 0.13	 0.28	 0.16	 0.03	 0.16	 0.41	.......resizeSystem; 7 	 3.17	 1 	 0.09	 0.25	 0.12	 0.02	 0.12	 0.32	.......clearSystem; 7 	 3.29	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.04	.......initializeLocalMatrices; 6 	 3.31	 1 	 21.92	 22.80	 22.13	 0.15	 22.13	 57.31	......AssembleSystem; 7 	 3.31	 1 	 21.90	 22.77	 22.11	 0.14	 ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958:1782,Update,UpdateVAndX,1782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958,1,['Update'],['UpdateVAndX']
Deployability,"alue(d_b.getValue() - 1);; }; };; ```. And here's what happens in the base class:. - The SOFAOR_CALLBACK_SYSTEM is a macro that creates a callback functor:; ```; class CallbackFunctor; {; public:; virtual void call(sofa::core::objectmodel::BaseData* o) = 0;; };. #define SOFAOR_CALLBACK_SYSTEM(T) \; typedef T SOFAOR_CLASS; \; class Callback : public sofaor::common::CallbackFunctor \; { \; typedef void (SOFAOR_CLASS::*Func)(sofa::core::objectmodel::BaseData * o); \; \; SOFAOR_CLASS* m_obj; \; Func m_func; \; \; public: \; Callback(SOFAOR_CLASS* _this, Func f) : m_obj(_this), m_func(f) {} \; void call(sofa::core::objectmodel::BaseData* data = 0) \; { \; (m_obj->*m_func)(data); \; } \; }. #define SOFAOR_ADD_CALLBACK(data, callback) \; addDataCallback(data, new Callback(this, callback)). #define SOFAOR_ADD_INPUT_CALLBACK(data, callback, trackOnly) \; addInput(data, trackOnly, new Callback(this, callback)); ```. When reinit is called on the component, all callbacks are called and the update class is called (maybe it's a mistake, maybe only the callbacks should be called..). Then outputs are set to dirty, and an IdleEvent visitor is propagated:; ```; void ImplicitDataEngine::reinit(); {; cleanTrackers();; update();; setDirtyOutputs();; sofa::core::objectmodel::IdleEvent ie;; sofa::simulation::PropagateEventVisitor v(; sofa::core::ExecParams::defaultInstance(), &ie);; this->getContext()->getRootContext()->executeVisitor(&v);; }; ``` . This allows for a complete and instant refresh of all components taking as an input the dirty outputs without calling the previous components in the pipeline again.; Limitations are that those following components have to be initialized AFTER (in terms of scene graph, so either in subnodes, or after the current engine, in the same node). Another feature that I don't like much but that was requested by someone who was supposed to use and contribute to my plugin but never did, is the ""autolink"" feature:. <MySofaORComponent name=""mycomp"" autolink",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816:2332,update,update,2332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816,1,['update'],['update']
Deployability,alyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is depreca,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9782,Release,Release,9782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3288,Release,Release,3288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"anager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9765,install,install,9765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"anager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::comp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9607,install,install,9607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,any update on the #2870 @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1106307398:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1106307398,1,['update'],['update']
Deployability,any update on this @ruiliang-gao ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1186879153:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1186879153,1,['update'],['update']
Deployability,"ase""); root.addObject(""MinProximityIntersection"", name=""Proximity"", alarmDistance=0.5, contactDistance=0.3); root.addObject(""CollisionResponse"", response=""FrictionContactConstraint""); root.addObject(""GenericConstraintSolver""). composite_node = root.addChild(""composite""); composite_node.addObject(; ""SparseGridMultipleTopology"",; n=[6, 3, 3],; fileTopology=""mesh/bubille_out.obj"",; fileTopologies=[""mesh/bubille_out.obj"", ""mesh/bubille_in1.obj"", ""mesh/bubille_in2.obj""],; nbVirtualFinerLevels=3,; finestConnectivity=False,; stiffnessCoefs=[1, 0.0001, 50],; massCoefs=[1, 1, 1],; ); composite_node.addObject(""EulerImplicitSolver"", vdamping=0, rayleighMass=0, rayleighStiffness=0); composite_node.addObject(""SparseLDLSolver""); composite_node.addObject(""MechanicalObject""); composite_node.addObject(; ""HexahedronCompositeFEMForceFieldAndMass"",; drawType=""0"",; lumpedMass=False,; nbVirtualFinerLevels=2,; youngModulus=600,; poissonRatio=0.3,; method=""polar"",; density=0.1,; updateStiffnessMatrix=False,; printLog=False,; ); composite_node.addObject(""BoxROI"", box=""-5 -2.1 -10 10 -1.9 10""); composite_node.addObject(""FixedConstraint"", indices=""@BoxROI.indices""); composite_node.addObject(""LinearSolverConstraintCorrection""). collision_node = composite_node.addChild(""collision""). collision_node.addObject(""MeshOBJLoader"", name=""loader"", filename=""mesh/bubille_out.obj""); collision_node.addObject(""MeshTopology"", src=""@loader""); collision_node.addObject(""MechanicalObject"", src=""@loader""); collision_node.addObject(""HexahedronCompositeFEMMapping""); # collision_node.addObject(""TriangleCollisionModel"", group=0); collision_node.addObject(""SphereCollisionModel"", group=0, radius=0.3). visual_node = collision_node.addChild(""visual""); visual_node.addObject(""MeshOBJLoader"", name=""meshLoader_2"", filename=""mesh/bubille_out.obj"", handleSeams=True); visual_node.addObject(""OglModel"", name=""VisualBody"", src=""@meshLoader_2"", normals=""0"", color=[0.1, 0.8, 0.3, 0.6]); visual_node.addObject(""IdentityMapping"", input=",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:4894,update,updateStiffnessMatrix,4894,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['update'],['updateStiffnessMatrix']
Deployability,ase/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5373,install,install,5373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"ation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #12 0x7fc300356054 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:607; #13 0x7fc2ff15304b in sofa::simulation::Node::executeVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #14 0x7fc2ff10c119 in sofa::simulation::Node::execute(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:197; #15 0x7fc2ff109df1 in sofa::simulation::AnimateVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:94; #16 0x7fc2ff10a179 in sofa::simulation::AnimateVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:125; #17 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #18 0x7fc300356054 in sofa::simulation::grap",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:6967,Pipeline,Pipeline,6967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['Pipeline'],['Pipeline']
Deployability,"ation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #24 0x7fc300356054 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:607; #25 0x7fc2ff15304b in sofa::simulation::Node::executeVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #26 0x7fc2ff10c119 in sofa::simulation::Node::execute(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:197; #27 0x7fc2ff109df1 in sofa::simulation::AnimateVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:94; #28 0x7fc2ff10a179 in sofa::simulation::AnimateVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:125; #29 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685. SUMMARY: AddressSanitizer: 9831480 byte(s) l",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:36938,Pipeline,Pipeline,36938,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['Pipeline'],['Pipeline']
Deployability,"backup discussion for logs:. here is the call stack of sphereLoader:; ```; SphereLoader::load; SphereLoader::load END; SphereLoader::updateFileNameAndTransformPosition; - m_filename changed: 1; - d_translation changed: 0; - d_rotation changed: 0; - d_scale changed: 0; SphereLoader::load; SphereLoader::load END; SphereLoader::applyTransform; SphereLoader::applyTransform END; SphereLoader::Callback exit with load(); ```. So as you can see the file is loaded once at parse time (because of the ```canLoad``` mechanism of the Loader) but the m_filename is still flaged as changed in the tracker so it will call the method load a second time when the Data position/radius are pulled from other components. . This was avoided in my previous version by adding ```m_internalEngine[""filename""].cleanDirty();``` at begining of the Load method. . However it is not looping anymore like in the initial version. Maybe we can say that this double call of load is special due to the Loader mechanism at parse stage (which should be replaced by a nice Data grah update...); For the log from epernod@sophia.inria.fr . Loader are loading file/mesh at parse stage to ensure they are ready and all their data are filled before any other component start linking and using the loader data. You can see it like a ""pre-init"" visitor... in comparison to the bwdInit.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1666#issuecomment-746000345:133,update,updateFileNameAndTransformPosition,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1666#issuecomment-746000345,2,['update'],"['update', 'updateFileNameAndTransformPosition']"
Deployability,"btw, maybe one VM of each OS should do a make install to test the cpack config.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/194#issuecomment-284471982:46,install,install,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/194#issuecomment-284471982,1,['install'],['install']
Deployability,"by the way @alxbilger it would be great if you feel it's necessary to update the associated pages ([DirectSAP](https://www.sofa-framework.org/community/doc/components/collisions/detection-sweep-and-prune/), IncrSAP, BruteForce)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2030#issuecomment-825192122:70,update,update,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030#issuecomment-825192122,1,['update'],['update']
Deployability,"c\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.frag; [ERROR] [GLSLShader] 0(8) : warning C7555: 'varying' is deprecated, use 'in/out' instead; 0(16) : error C7616: global variable gl_Color is removed after version 140; 0(35) : warning C7533: global variable gl_FragColor is deprecated after version 120. [ERROR] [GLSLShader] ERROR: Compilation of Vertex shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.vert; [ERROR] [GLSLShader] 0(20) : error C7616: global variable gl_ModelViewProjectionMatrix is removed after version 140; 0(23) : error C7616: global variable gl_ClipVertex is removed after version 140; 0(23) : error C7616: global variable gl_ModelViewMatrix is removed after version 140; 0(23) : error C7616: global variable gl_Vertex is removed after version 140. [ERROR] [GLSLShader] ERROR: Compilation of Geometry shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra_triangles.geo; [ERROR] [GLSLShader] 0(45) : warning C7533: global variable gl_FrontColor is deprecated after version 120; 0(46) : error C7616: global variable gl_ClipVertex is removed after version 140. [ERROR] [GLSLShader] SHADER compilation failed.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; [ERROR] [Node()] Object 'OglFloat4Attribute1' already has a node (/OglFloat4Attribute1). Please remove it from this node before adding it to a new one.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] TopologyData: value already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; ```. I guess the shaders needs to be updated for version >= 140",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181:2183,update,updated,2183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181,1,['update'],['updated']
Deployability,can you update the PR @maddin200 ? we have not write access on your PR,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2435#issuecomment-948582568:8,update,update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2435#issuecomment-948582568,1,['update'],['update']
Deployability,"ce.; Warns that something; &nbsp;&nbsp;&nbsp; - is DEPRECATED (so still usable) since `deprecateDate`; &nbsp;&nbsp;&nbsp; - will be removed on `removeDate`; and gives the toFixMsg instructions to fix the deprecation warning.; ; `SOFA_ATTRIBUTE_DISABLED(deprecateDate, disableDate, toFixMsg)`; To be used jointly with `= delete` to trigger an error. It is a flavored `[[deprecated]]` interface.; Warns that something ; &nbsp;&nbsp;&nbsp; - is DISABLED (so not usable anymore) since `disabledDate`; &nbsp;&nbsp;&nbsp; - was firstly deprecated on `deprecateDate`; and gives the toFixMsg instructions to fix the compilation error. ## How to use them. Create a new deprecation macro specifying the deprecation topic you are tackling.; This way, you won't have dates everywhere in your code. ## Example. ### Deprecate. I want to rename something that will break my API. ; To ease the transition for my users, I will propose a deprecation period with a fine message by using a deprecation macro.; Latest release is v20.06, next release (currently under development) is v20.12, after that will come the v21.06. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DEPRECATED( \; ""v20.12 (PR#12345)"", ""v21.06"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod();; ```. Anyone using myDeprecatedMethod will get this **warning**: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is still usable but has been DEPRECATED since v20.12 (PR#12345). You have until v21.06 to fix your code. XXX must be renamed into YYY.; ```. ### Disable. Now forward in time ...; Latest release is v20.12, next release (currently under development) is v21.06, after that will come the v21.12.; It is time to stop the deprecation period. To provide a clear message to my users, I will not just remove my deprecated method but I will disable it with `= delete` and use a deprecation macro. I",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249:1263,release,release,1263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249,1,['release'],['release']
Deployability,ce/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8441,Release,Release,8441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"ces; 8 4.68 1 32.79 49.09 35.44 1.78 35.44 48.72 ........buildStiffness; 8 40.13 1 0.25 1.33 0.49 0.12 0.49 0.67 ........buildMass; 8 40.61 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 40.62 1 0 0.02 0 0 0 0 ........buildGeometricStiffness; 7 40.62 1 0 0.02 0 0 0 0 .......projectMappedMatrices; 7 40.63 1 0.02 22.18 0.05 0.70 0.05 0.07 .......applyProjectiveConstraint; 4 40.69 1 1.38 43.66 31.78 8.31 31.78 43.69 ....MBKSolve; 5 41.19 1 0.92 43.15 31.20 8.30 31.20 42.90 .....CG-Solve; 4 72.48 1 0.02 0.15 0.03 0.01 0.03 0.04 ....UpdateVAndX; ```. ```; ParallelCGLinearSolver template=""ParallelCompressedRowSparseMatrixMat3x3d"". [INFO] [BatchGUI] 1000 iterations done in 53.883 s ( 18.5587 FPS). Steps Duration Statistics (in ms) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 39.40 89.65 53.81 3.72 53810.7 100 TOTAL; 1 0 1 39.40 89.63 53.81 3.72 53.81 99.99 .Simulation::animate; 2 0.01 1 0 0.02 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.02 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.07 0 0 0 0 ..collision; 2 0.02 1 0 0 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.06 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.02 0 0 0 0.01 ..accumulateMatrixDeriv; 2 0.04 1 39.17 89.35 53.58 3.72 53.58 99.57 ..solve; 3 0.04 1 39.17 89.34 53.57 3.72 53.57 99.56 ...Mechanical; 4 0.07 1 2.11 3.55 2.36 0.14 2.36 4.38 ....ComputeForce; 4 2.42 1 1.14 3.35 1.30 0.18 1.30 2.41 ....ComputeRHTerm; 4 3.72 1 33.78 68.54 35.78 1.50 35.78 66.50 ....MBKBuild; 5 3.73 1 33.77 68.51 35.78 1.50 35.78 66.48 .....CG-setSystemMBKMatrix; 6 3.73 1 0.03 0.14 0.04 0.01 0.04 0.07 ......getContributors; 6 3.77 1 0.02 0.21 0.02 0.01 0.02 0.04 ......buildMappingGraph; 6 3.79 1 0.26 1.60 0.70 0.10 0.70 1.29 ......InitializeSystem; 7 3.79 1 0.09 1.18 0.36 0.06 0.36 0.67 .......resizeSystem; 7 4.16 1 0.01 0.69 0.30 0.04 0.30 0.56 .......clearSystem; 7 4.46 1 0.02 0.17 0.02 0.01 0.02 0.0",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:2758,Update,UpdateInternalDataVisitor,2758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532,1,['Update'],['UpdateInternalDataVisitor']
Deployability,"ch/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-tk', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-old', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-dynload', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/OpenAlea.Core-1.3.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/OpenAlea.SConsX-2.1.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/cycler-0.10.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/openalea.tissuemeca-0.9.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/openalea.deploy-2.1.4-py2.7.egg'; ]; ```; From iPython:; ```; ['', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/bin', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python27.zip', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/plat-darwin', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/plat-mac', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/plat-mac/lib-scriptpackages', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-tk', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-old', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-dynload', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347201178:2140,deploy,deploy-,2140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347201178,1,['deploy'],['deploy-']
Deployability,"ck(SOFAOR_CLASS* _this, Func f) : m_obj(_this), m_func(f) {} \; void call(sofa::core::objectmodel::BaseData* data = 0) \; { \; (m_obj->*m_func)(data); \; } \; }. #define SOFAOR_ADD_CALLBACK(data, callback) \; addDataCallback(data, new Callback(this, callback)). #define SOFAOR_ADD_INPUT_CALLBACK(data, callback, trackOnly) \; addInput(data, trackOnly, new Callback(this, callback)); ```. When reinit is called on the component, all callbacks are called and the update class is called (maybe it's a mistake, maybe only the callbacks should be called..). Then outputs are set to dirty, and an IdleEvent visitor is propagated:; ```; void ImplicitDataEngine::reinit(); {; cleanTrackers();; update();; setDirtyOutputs();; sofa::core::objectmodel::IdleEvent ie;; sofa::simulation::PropagateEventVisitor v(; sofa::core::ExecParams::defaultInstance(), &ie);; this->getContext()->getRootContext()->executeVisitor(&v);; }; ``` . This allows for a complete and instant refresh of all components taking as an input the dirty outputs without calling the previous components in the pipeline again.; Limitations are that those following components have to be initialized AFTER (in terms of scene graph, so either in subnodes, or after the current engine, in the same node). Another feature that I don't like much but that was requested by someone who was supposed to use and contribute to my plugin but never did, is the ""autolink"" feature:. <MySofaORComponent name=""mycomp"" autolink=""true"" />. This field allows you to *implicitely* link your data, so that you could avoid setting dozens of fields in your scene description file. The way if works is quite basic:; If autolink is true, then when calling addInput, the internal code checks if the variable has been set. If it has been it doesn't do anything, but if it has:; a previous ImplicitDataEngine in the graph is searched for and if it contains a matching variable with a similar name, it binds them together by calling setParent() on the data. If not, the ne",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816:2939,pipeline,pipeline,2939,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816,1,['pipeline'],['pipeline']
Deployability,conda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7724,Release,Release,7724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"copy pasting discussion (+ automatic translation) for the record:. > The bboxes are actually used to calculate the znear / far of the camera but in a well licked interface you want to be able to select nodes / components in the scenegraph and have a visual feedback in the 3D scene in SQQ we do this by displaying the bbox of the selected object and its descendants. > if you calculate only 1 global bbox in the camera, you lose this granularity. > If we want to fix the bbox at the beginning we do it via another component (""BoundingBox"") connected to the bbox field of ddgnode. To avoid having a boolean indicating if we want to update or not ... we clean the system of ""parent"" of Data to implement the following mechanism:; > - if connected parent the data is copied from the parent.; > - if have setValue the value of a data field which has a parent ... the relationship is broken.; > - if you want to cut the relationship, one can use the setParent (null) function.; > - the visitor who recursively updates the bboxes check if the box has a settled parent to avoid calling setValue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-601643981:631,update,update,631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-601643981,2,['update'],"['update', 'updates']"
Deployability,core.uninitialized.UndefReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.uninitialized.UndefReturn.html) | [misc-throw-by-value-catch-by-reference](https://clang.llvm.org/extra/clang-tidy/checks/misc-throw-by-value-catch-by-reference.html) |; | [clang-analyzer-cplusplus.NewDelete](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-cplusplus.NewDelete.html) | [misc-unconventional-assign-operator](https://clang.llvm.org/extra/clang-tidy/checks/misc-unconventional-assign-operator.html) |; | [clang-analyzer-cplusplus.NewDeleteLeaks](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-cplusplus.NewDeleteLeaks.html) | [misc-undelegated-constructor](https://clang.llvm.org/extra/clang-tidy/checks/misc-undelegated-constructor.html) |; | [clang-analyzer-cplusplus.SelfAssignment](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-cplusplus.SelfAssignment.html) | [misc-uniqueptr-reset-release](https://clang.llvm.org/extra/clang-tidy/checks/misc-uniqueptr-reset-release.html) |; | [clang-analyzer-deadcode.DeadStores](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-deadcode.DeadStores.html) | [misc-unused-alias-decls](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-alias-decls.html) |; | [clang-analyzer-llvm.Conventions](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-llvm.Conventions.html) | [misc-unused-parameters](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-parameters.html) |; | [clang-analyzer-nullability.NullPassedToNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullPassedToNonnull.html) | [misc-unused-raii](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-raii.html) |; | [clang-analyzer-nullability.NullReturnedFromNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullReturnedFromNonnull.html) | [misc-unused-using-decls](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-using-decl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:12958,release,release,12958,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['release'],['release']
Deployability,"cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o ; cd /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda && /usr/bin/cmake -E make_directory /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/. && /usr/bin/cmake -D verbose:BOOL=OFF -D build_configuration:STRING=Release -D generated_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(360): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_deriveSPKTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addForce_kernel(int, real *, real *, const real *, __nv_bool, const real *, float, float) [with real=float]"" ; (1248): here. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(587): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_ElasticityTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addDForce_kernel(int, real *, real *, real, real,",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:1731,Release,Release,1731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,1,['Release'],['Release']
Deployability,current hypothesis is that this may be related to the order in which the compiler is doing template instanciation vs un-used code removal. . Now the big picture is that any link force in the .h force to include the full definition of the target object which is way to much. ; Eg: from Node.h (which is included in hundreds of compilation units); ```cpp; #include <sofa/core/behavior/ForceField.h>; #include <sofa/core/behavior/BaseInteractionForceField.h>; #include <sofa/core/behavior/Mass.h>; #include <sofa/core/behavior/BaseProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseConstraintSet.h>; #include <sofa/core/topology/Topology.h>; #include <sofa/core/topology/BaseTopologyObject.h>; #include <sofa/core/topology/BaseMeshTopology.h>; #include <sofa/core/behavior/LinearSolver.h>; #include <sofa/core/behavior/OdeSolver.h>; #include <sofa/core/behavior/ConstraintSolver.h>; #include <sofa/core/behavior/BaseAnimationLoop.h>; #include <sofa/core/visual/VisualLoop.h>; #include <sofa/core/collision/Pipeline.h>; #include <sofa/core/loader/BaseLoader.h>; #include <sofa/core/objectmodel/Event.h>. class Sequence : MultiLink {} ;. Sequence<sofa::core::BehaviorModel> behaviorModel;; Sequence<sofa::core::BaseMapping> mapping;. Sequence<sofa::core::behavior::OdeSolver> solver;; Sequence<sofa::core::behavior::ConstraintSolver> constraintSolver;; Sequence<sofa::core::behavior::BaseLinearSolver> linearSolver;. Single<sofa::core::topology::Topology> topology;; Single<sofa::core::topology::BaseMeshTopology> meshTopology;; Sequence<sofa::core::topology::BaseTopologyObject> topologyObject;. Single<sofa::core::BaseState> state;; Single<sofa::core::behavior::BaseMechanicalState> mechanicalState;; Single<sofa::core::BaseMapping> mechanicalMapping;; Single<sofa::core::behavior::BaseMass> mass;; Sequence<sofa::core::behavior::BaseForceField> forceField;; Sequence<sofa::core::behavior::BaseInteractionForceField> interactionForceField;; Sequence<sofa::core::behavior::BaseProjectiveConstrai,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334378104:1189,Pipeline,Pipeline,1189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334378104,1,['Pipeline'],['Pipeline']
Deployability,d plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/li,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8981,install,install,8981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,d plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Com,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8844,Release,Release,8844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,d/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/User,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6266,Release,Release,6266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"de/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/runSofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded pl",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2492,install,install,2492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,2,['install'],['install']
Deployability,ded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/l,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8667,install,install,8667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,ded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8507,install,install,8507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,ded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/g,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4529,Release,Release,4529,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"defrost-macos1011-0 (Defrost machine): AppleClang 8.0.0.8000042; sofa-ci-dev-macos109-0 (VM): AppleClang 6.0.0.6000051. The machine on which a build was done is printed at the beginning of the log.; Example: ""Building remotely on sofa-ci-dev-macos109-0"" in https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-792/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/1/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/792#issuecomment-428505978:370,release,release,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/792#issuecomment-428505978,1,['release'],['release']
Deployability,do you want to milestone it for the v22.12 release or for 23.06 @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3519#issuecomment-1337525238:43,release,release,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3519#issuecomment-1337525238,2,['release'],['release']
Deployability,dy/checks/misc-swapped-arguments.html) |; | [clang-analyzer-core.uninitialized.UndefReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.uninitialized.UndefReturn.html) | [misc-throw-by-value-catch-by-reference](https://clang.llvm.org/extra/clang-tidy/checks/misc-throw-by-value-catch-by-reference.html) |; | [clang-analyzer-cplusplus.NewDelete](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-cplusplus.NewDelete.html) | [misc-unconventional-assign-operator](https://clang.llvm.org/extra/clang-tidy/checks/misc-unconventional-assign-operator.html) |; | [clang-analyzer-cplusplus.NewDeleteLeaks](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-cplusplus.NewDeleteLeaks.html) | [misc-undelegated-constructor](https://clang.llvm.org/extra/clang-tidy/checks/misc-undelegated-constructor.html) |; | [clang-analyzer-cplusplus.SelfAssignment](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-cplusplus.SelfAssignment.html) | [misc-uniqueptr-reset-release](https://clang.llvm.org/extra/clang-tidy/checks/misc-uniqueptr-reset-release.html) |; | [clang-analyzer-deadcode.DeadStores](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-deadcode.DeadStores.html) | [misc-unused-alias-decls](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-alias-decls.html) |; | [clang-analyzer-llvm.Conventions](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-llvm.Conventions.html) | [misc-unused-parameters](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-parameters.html) |; | [clang-analyzer-nullability.NullPassedToNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullPassedToNonnull.html) | [misc-unused-raii](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-raii.html) |; | [clang-analyzer-nullability.NullReturnedFromNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullReturnedFromNonnull.html) | [misc-unused-using-decls](https://c,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:12881,release,release,12881,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['release'],['release']
Deployability,"e to point out specifically the most problematic points in which you think that the remplacement will not do the work so that I can propose solutions to be closer to the ""semantic you want"". . I looked into the Flexible/Compliant and it seems to me that only a dozen of replacement (out of hundreds) are not equivalent to the old code. . If you take time pointing me which one are causing you troubles I will gladely help in how fixing them to use the msg_api AND and preserving the existing behavior. To convince you that this is worth the effort I took examples from Flexible/Compliant to illustrate the benefit of the changes. ; ==== ====; ```cpp; - if(this->f_printLog.getValue()==true); - std::cout << SOFA_CLASS_METHOD << std::endl;; + dmsg_info() << SOFA_CLASS_METHOD ;; ```; - Is functionnaly equivalent to the old code (if the application have installed an handler routing the message to std::cout); - It will print message in a totally consistant way with other sofa componant (which very important for users); - It is shorter to write (very important for the developer :)), ; - It benefit from the message dispatcher/handler (so it can be logger or routed or sended or whatever GUI in the end user application); - All developpers immediately know that the message is not for the end user of Sofa but for a developers. Consequently the message can be very drafty. It can also be remove by setting SOFA_DEVTOOLS to false and thus it should have a zero cost in a release . A second example: ; ```cpp; - if(this->f_printLog.getValue()) if(pos.size()) ; - std::cout<<""TopologyGaussPointSampler: ""<< pos.size() <<"" generated samples""<<std::endl;; +msg_info_when(pos.size()!=0) << "" topologyGaussPointSampler: ""<< pos.size() <<"" generated samples"" ;; ```; - Is functionnaly equivalent to the old code; - Shorter to write; - Consistant behavior with other component,; - It benefit from the message dispatcher/handler (so it can be logger or routed or sended into Backlog depending on the end user a",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190#issuecomment-285637960:1131,install,installed,1131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190#issuecomment-285637960,1,['install'],['installed']
Deployability,e/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/Sofa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6921,install,install,6921,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"e/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:97; #16 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:33778,Pipeline,PipelineImpl,33778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,['Pipeline'],['PipelineImpl']
Deployability,"eAnimationLoop.h>; #include <sofa/core/visual/VisualLoop.h>; #include <sofa/core/collision/Pipeline.h>; #include <sofa/core/loader/BaseLoader.h>; #include <sofa/core/objectmodel/Event.h>. class Sequence : MultiLink {} ;. Sequence<sofa::core::BehaviorModel> behaviorModel;; Sequence<sofa::core::BaseMapping> mapping;. Sequence<sofa::core::behavior::OdeSolver> solver;; Sequence<sofa::core::behavior::ConstraintSolver> constraintSolver;; Sequence<sofa::core::behavior::BaseLinearSolver> linearSolver;. Single<sofa::core::topology::Topology> topology;; Single<sofa::core::topology::BaseMeshTopology> meshTopology;; Sequence<sofa::core::topology::BaseTopologyObject> topologyObject;. Single<sofa::core::BaseState> state;; Single<sofa::core::behavior::BaseMechanicalState> mechanicalState;; Single<sofa::core::BaseMapping> mechanicalMapping;; Single<sofa::core::behavior::BaseMass> mass;; Sequence<sofa::core::behavior::BaseForceField> forceField;; Sequence<sofa::core::behavior::BaseInteractionForceField> interactionForceField;; Sequence<sofa::core::behavior::BaseProjectiveConstraintSet> projectiveConstraintSet;; Sequence<sofa::core::behavior::BaseConstraintSet> constraintSet;; Sequence<sofa::core::objectmodel::ContextObject> contextObject;; Sequence<sofa::core::objectmodel::ConfigurationSetting> configurationSetting;. Sequence<sofa::core::visual::Shader> shaders;; Sequence<sofa::core::visual::VisualModel> visualModel;; Sequence<sofa::core::visual::VisualManager> visualManager;; ```. This is why I'm searching for a way to fix SingleLink/MultiLink to make it forward declaration friendly. . More fundamentally the Link implementation is interesting but it is also very complex. This complexity and its consequence in term of maintainability (very few of the sofa developpers can understand it easily) and compilation cost make me wonder if we shouldn't investigate/consider simpler approach. . So to anyone @JeremieA, @bcarrez , @maxime-tournier , @matthieu-nesme, @hugtalbot , @StephaneCotin, ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334378104:2375,Configurat,ConfigurationSetting,2375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334378104,2,"['Configurat', 'configurat']","['ConfigurationSetting', 'configurationSetting']"
Deployability,e_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7405,install,install,7405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,eated directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/a,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2018,Release,Release,2018,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,efault; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2286,Release,Release,2286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,elopment/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4857,install,install,4857,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"er != -1); { ; msg_info(""BatchGUI"") << ""Computing "" << nbIter << "" iterations."" << msgendl;; }; else; {; msg_info(""BatchGUI"") << ""Computing infinite iterations."" << msgendl;; }; ; sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; msg_info(""BatchGUI"") << ""Processing."" << sofa::helper::AdvancedTimer::end(""Animate"", groot.get()) << msgendl;; // As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());; sofa::simulation::Visitor::ctime_t rtfreq = sofa::helper::system::thread::CTime::getRefTicksPerSec();; sofa::simulation::Visitor::ctime_t tfreq = sofa::helper::system::thread::CTime::getTicksPerSec();; sofa::simulation::Visitor::ctime_t rt = sofa::helper::system::thread::CTime::getRefTime();; sofa::simulation::Visitor::ctime_t t = sofa::helper::system::thread::CTime::getFastTime();; ; signed int i = 1; // one simulation step is animated above ; ; while (i <= nbIter || nbIter == -1); {; if (i != nbIter); {; sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());; }. if ( i == nbIter || (nbIter == -1 && i%1000 == 0) ); {; t = sofa::helper::system::thread::CTime::getFastTime()-t;; rt = sofa::helper::system::thread::CTime::getRefTime()-rt;. msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)t)/((double)tfreq) << "" s ( "" << (((double)tfreq)*i)/((double)t) << "" FPS)."" << msgendl;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)rt)/((double)rtfreq) << "" s ( "" << (((double)rtfreq)*i)/((double)rt) << "" FPS)."" << msgendl;; ; if (nbIter == -1) // Additional message for infinite iterations; {; msg_info(""BatchGUI"") << ""Press Ctrl + C (linux)/ Command + period (mac) to stop "" << msgendl;; }; }. i++;; }; }; return 0;; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378860087:1528,update,updateVisual,1528,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378860087,1,['update'],['updateVisual']
Deployability,"er/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(360): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_deriveSPKTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addForce_kernel(int, real *, real *, const real *, __nv_bool, const real *, float, float) [with real=float]"" ; (1248): here. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(587): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_ElasticityTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addDForce_kernel(int, real *, real *, real, real, real *) [with real=float]"" ; (1266): here. 2 errors detected in the compilation of ""/tmp/tmpxft_0000044c_00000000-6_CudaStandardTetrahedralFEMForceField.cpp1.ii"".; CMake Error at SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake:275 (message):; Error generating file; /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o. ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:2976,Release,Release,2976,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,1,['Release'],['Release']
Deployability,er] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8187,install,install,8187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,er] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/li,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8827,install,install,8827,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,eralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6237,install,install,6237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,ergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_c,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4355,install,install,4355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"es/RGBAColor.cpp"", ""Sofa/Helper/Types/src/sofa/helper/types/RGBAColor.cpp""],; [""commit"", ""Moving all the file to their new location""],; [""spm"", ""package"", ""Sofa.Helper.Types"", ""property"", ""source_files"", ""add-to"", ""Sofa/Helper/Types/src/sofa/helper/types/OptionsGroup.cpp""],; [""spm"", ""package"", ""Sofa.Helper.Types"", ""property"", ""header_files"", ""add-to"", ""Sofa/Helper/Types/src/sofa/helper/types/OptionsGroup.h""],; [""spm"", ""package"", ""Sofa.Helper.Types"", ""property"", ""source_files"", ""add-to"", ""Sofa/Helper/Types/src/sofa/helper/types/RGBAColor.h""],; [""spm"", ""package"", ""Sofa.Helper.Types"", ""property"", ""header_files"", ""add-to"", ""Sofa/Helper/Types/src/sofa/helper/types/RGBAColor.cpp""],; [""commit"", ""Registering the file to the package...""],; [""rename"", ""Sofa/Helper/Types"", ""#include <sofa/helper/OptionsGroup.h>"", ""#include <sofa/helper/types/OptionsGroup.h>""],; [""rename"", ""Sofa/Helper/Types"", ""#include <sofa/helper/RGBAColor.h>"", ""#include <sofa/helper/types/RGBAColor.h>""],; [""commit"", ""Change the includes""],; [""fixheader"", ""Sofa/Helper/Types/src/sofa/helper/types/OptionsGroup.h"", ""SOFA_HELPER_TYPES_OPTIONSGROUP_H""],; [""fixheader"", ""Sofa/Helper/Types/src/sofa/helper/types/RGBAColors.h"", ""SOFA_HELPER_TYPES_RGBACOLOR_H""],; [""fixheader"", ""Sofa/Helper/Types/src/sofa/helper/types/options.h"", ""SOFA_HELPER_CONFIG_H"", ""SOFA_HELPER_TYPES_CONFIG_H""], ; [""commit"", ""Change the guards""],; [""spm"", ""package"", ""Sofa.Helper.Types"", ""generate-cmakelists""],; [""commit""]; ]; }; ``` . I'm not fully convinced by I wonder if this could help us in making the move. ; Eg: we start having a sofa ng branch of sofa, this branch being automatically generated from the master branch. And, if/when we are satisfied of the generating script can be re-order adequately to make a good looking history and a recipe for users to update their code base. I'm hesitating because it somehow remind me git rebase -i and I wonder if this is not doing in the wrong way something that having the right workflow in git would sold.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-372290133:3264,update,update,3264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-372290133,1,['update'],['update']
Deployability,fa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Rel,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8166,Release,Release,8166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,fa/build/plugins;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/collections;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release; [INFO] [runSofa] DataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/share;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/examples;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Compone,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1216,Release,Release,1216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,fa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1892,Release,Release,1892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"fa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneChe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:11068,Release,Release,11068,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"factory. . In the following is a simple proposal to replace the problematic code: ; ```cpp; namespace simpleapi; {. BaseObject::SPtr createObject(Node::SPtr self, const std::string& type, const std::map<std::string, std::string>& params={}); {; /// temporarily, the name is set to the type name.; /// if a ""name"" parameter is provided, it will overwrite it.; BaseObjectDescription desc(type.c_str(),type.c_str());; for(auto& kv : params); {; desc.setAttribute(kv.first.c_str(), kv.second.c_str());; }. /// Create the object.; BaseObject::SPtr obj = ObjectFactory::getInstance()->createObject(self.get(), &desc);; if (obj==0); {; std::stringstream msg;; msg << ""create: component '"" << desc.getName() << ""' of type '"" << desc.getAttribute(""type"","""")<< ""' in node '""<<self->getName()<<""'"" ;; for (std::vector< std::string >::const_iterator it = desc.getErrors().begin(); it != desc.getErrors().end(); ++it); msg << "" "" << *it << msgendl ;; return NULL;; }. return obj ;; }. Node::SPtr createChild(Node::SPtr& node, const std::string& name, const std::map<std::string, std::string>& params={}); {; BaseObjectDescription desc(""Node"", ""Node"");; for(auto& kv : params); {; desc.setAttribute(kv.first.c_str(), kv.second.c_str());; }; Node::SPtr tmp = node->createChild(name); ; tmp->parse(desc);; return tmp;; }; }. Node::SPtr createRootWithCollisionPipeline(const std::string& responseType); {; root = simulation::getSimulation()->createNewGraph(""root"");; simpleapi::createObject(root, ""DefaultPipeline"", {{""name"",""Collision Pipeline""}}) ;; simpleapi::createObject(root, ""BruteForceDetection"", {{""name"",""Detection""}}) ;; simpleapi::createObject(root, ""MinProximityIntersection"", {{""name"",""Proximity""},; {""alarmDistance"", ""0.3""},; {""contactDistance"", ""0.2""}}) ;. simpleapi::createObject(root, ""DefaultContactManager"", {; {""name"", ""Contact Manager""},; {""response"", responseType}; });. simpleapi::createObject(root, ""DefaultCollisionGroupManager"", {{""name"", ""Collision Group Manager""}});; return root;; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/427#issuecomment-333236901:1795,Pipeline,Pipeline,1795,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/427#issuecomment-333236901,1,['Pipeline'],['Pipeline']
Deployability,"few CUDA scenes are failing, all with the messages `[ERROR] [CGLinearSolver(cGLinearSolver1)] Required data ""threshold"" has not been set. (Current value is 1e-05)` so I suppose these scenes must be updated too",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949356046:198,update,updated,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949356046,1,['update'],['updated']
Deployability,"fferently labeled commands invoke different function"". . "" Another problem with putting the same command on multiple name is that it misleads users into believing that the application is more complex than it really is"". On my side I not that Jeff Johson is right and this is exactly the behavior I observed with new-comers to sofa. They are always puzzled and annoyed but the alias and this generates a lot of troubles and frustration. . So I think from an usability point of view this a bigger deal than what we, as developper, are thinking. . To improve the situation maybe we could: ; - each time an alias is used print a message using msg_info. This message should say:. ```; [INFO] Using of the data ""rest_position"" which is an alias (http://thedoctosofa/alias) pointing to the ""position' data field. To remove this message you can replace in myscele.xml:30 :; ""<MechanicalObject rest_position='0 1 2 3 '> with ""<MechanicalObject 'position'=; ```; - each time an alias is used to for backward compatibility from previous name we should print a message using msg_warning:. ```; [WARNING] Using of the data ""rest_position"" is now deprecated. ; To remove this message you must update your scene and replace in myscele.xml:30 : ""<MechanicalObject rest_position='0 1 2 3 '> with ""<MechanicalObject 'position'=; ```; - indicate in the GUI the alternative names (because some user may search the alias name in the GUI) ; - we could also totally remove the addAlias from the sofa core (unless for developement convenience) and implement a component that explicitely give data alias in a scene (I don't know if this is hard to implement) ; Maybe something like:. ```; <DataAlias src='@position.postion' 'rest_position'> ; <ComponentAlias src='OGLModel' dest='VisualModel'>; ```. At the beginning of a scene with OGLModel and ""rest_position"" would be enough to make the alias obvious to the user preserving the convenience of Alias to the developpers. What do you think about the differnt appraoch ? ; DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/35#issuecomment-255722194:1402,update,update,1402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/35#issuecomment-255722194,1,['update'],['update']
Deployability,ger] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscF,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8031,install,install,8031,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,ger] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Comp,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8983,Release,Release,8983,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,ger] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_sour,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3554,Release,Release,3554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,ger] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/s,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3843,Release,Release,3843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,gin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4037,install,install,4037,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,gin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Com,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8706,Release,Release,8706,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,gine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_relea,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6421,install,install,6421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"good job @coolteemf ; All you have to do is, go on your branch and revert your commit:; ```; # Make sure you are on the right branch; git checkout Improve_MeshBarycentricMapperEngine. # Undo the desired commit; git revert 130a13d. # Update the remote with the undo of the code; git push origin Improve_MeshBarycentricMapperEngine; ```; Cheers",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1487#issuecomment-694692149:233,Update,Update,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1487#issuecomment-694692149,1,['Update'],['Update']
Deployability,great news this new plugin :); Flexible will need to be updated before merging this PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/220#issuecomment-289693393:56,update,updated,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/220#issuecomment-289693393,1,['update'],['updated']
Deployability,"hey @MaximeMoge,; From now on, could you update us about the progress on this workgroup?; Do not hesitate to use issues and the Project MT to describe you tasks and progress.; Cheers,",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-292116327:41,update,update,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-292116327,1,['update'],['update']
Deployability,hey @damienmarchal could this[ forum topic ](https://www.sofa-framework.org/community/forum/topic/cgal-plugin-install/#post-9114)be related to your PR ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/264#issuecomment-300833513:110,install,install,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/264#issuecomment-300833513,1,['install'],['install']
Deployability,"hey @epernod I see a lot of type updates but I am not sure to identify the exact location of the fix you mention, thanks; (anyway looks perfectly fine to me!)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1780#issuecomment-776775591:33,update,updates,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1780#issuecomment-776775591,1,['update'],['updates']
Deployability,"hey @guparan @alxbilger ; after investigation, the problem is the same than the one identified in #2927; the lib is generated in _build/applications/plugins/BeamAdapter/lib/_ and no example from BeamAdapter is also available ; moreover, when I do `ninja install` only BeamAdapter get installed in its own location (_build/applications/plugins/BeamAdapter/linstall/_). do you have any idea what's going on @guparan ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1132599183:254,install,install,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1132599183,2,['install'],"['install', 'installed']"
Deployability,https://www.sofa-framework.org/community/doc/programming-with-sofa/start-coding/create-your-component/; Doc updated,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/822#issuecomment-440602060:108,update,updated,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/822#issuecomment-440602060,1,['update'],['updated']
Deployability,i forgot to mention that i installed sofa from binary for ubuntu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1750415224:27,install,installed,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1750415224,1,['install'],['installed']
Deployability,i managed to solve it using 'conda install -c conda-forge gym==0.21.0'. But it tells me it needs python3.9 to work but i used python3.8. Does sofa need python3.8 to use python plugin or i can use python3.9 as well?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757861144:35,install,install,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757861144,1,['install'],['install']
Deployability,i/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3231,install,install,3231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"ibusb.cpp:(.text+0x9d)：undefined reference to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0xba)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0xed)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x120)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x141)：undefined reference to ‘libusb_exit’; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)：in function‘dhdUSBGetDeviceCountList(int*, int*, int*, int)’：; dhdComUSB-libusb.cpp:(.text+0x215)：undefined reference to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1488,release,release,1488,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['release'],['release']
Deployability,"icitSolverDynamicTest_medium_dt_0/); [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta4ExplicitSolverDynamic_test.rungeKutta4ExplicitSolverDynamicTest_small_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta4ExplicitSolverDynamic_test/rungeKutta4ExplicitSolverDynamicTest_small_dt_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralImplicitOdeSolver_test_VariationalSymplecticExplicitSolverDynamic_test/variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_medium_dt_with_damping/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralImplicitOdeSolver_test_VariationalSymplecticExplicitSolverDynamic_test/variationalSymplecticExplicitSolverDynamicTest_medium_dt_with_damping_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_high_dt_with_damping/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralImplicitOdeSolver_test_VariationalSymplecticExplicitSolverDynamic_test/variationalSymplecticExplicitSolverDynamicTest_high_dt_with_damping_0/); ```. for a reallllly slight variation in the result (6.106226635438361e-16 diff); actually the unit tests checker is really tight 😛",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769:2082,release,release,2082,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769,2,['release'],['release']
Deployability,"if it is not explicitly passed in to all API calls, it can be queried with ExecParams::defaultInstance(), with the guarantee that this will always provide exactly the correct values (as there is a single copy per thread). For instance, this could allow to change the ExecMode in order to trace/profile a specific part of the computation. Without TLS, all calls done in parallel in other threads would now share the same mode. But as ExecMode was only ever used for KAAPI support (now removed), it is possible to decide to remove this as well without losing much.; 7. As a final point, one alternative fix (that I would personally prefer, but I am no longer involved directly so it is not up to me) would be to redesign this such that checkValidStorage() is no longer needed. The core issue is more related to the multithread TaskScheduler, where if a MechanicalParams (or another child of ExecParams) is copied from one thread to another as part of a Task, we can have functions that are called with the wrong ""storage"" pointer belonging to the calling thread. This is a very bad situation because the other thread might have moved on to other codes that changed the values, and more importantly ExecParams::defaultInstance() method used in many placed would see a different set of values. Currently this is fixed manually by calling mparams.update() at the beginning of the Task, but this is not always done, hence the check in the visitors as many Sofa computations end up using visitors somewhere. But if that could be the responsibility of the Task/TaskScheduler, they we could remove this check. This could be done for example by adjusting the ExecParams handling in a way that guarantees that inter-thread copies are by value of the storage (i.e. the value of ExecMode/.. but excluding threadID) instead of by reference, and known to the scheduler so that the parameters are correctly copied in the thread executing each runTask() without relying on manual updates. I hope this helps,. Jeremie.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748:3262,update,update,3262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748,2,['update'],"['update', 'updates']"
Deployability,ild/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gf,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6864,Release,Release,6864,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,iles.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3085,install,install,3085,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"imulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulatio",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:1823,pipeline,pipeline,1823,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147,1,['pipeline'],['pipeline']
Deployability,in/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaco,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6574,Release,Release,6574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"ine SOFAOR_CALLBACK_SYSTEM(T) \; typedef T SOFAOR_CLASS; \; class Callback : public sofaor::common::CallbackFunctor \; { \; typedef void (SOFAOR_CLASS::*Func)(sofa::core::objectmodel::BaseData * o); \; \; SOFAOR_CLASS* m_obj; \; Func m_func; \; \; public: \; Callback(SOFAOR_CLASS* _this, Func f) : m_obj(_this), m_func(f) {} \; void call(sofa::core::objectmodel::BaseData* data = 0) \; { \; (m_obj->*m_func)(data); \; } \; }. #define SOFAOR_ADD_CALLBACK(data, callback) \; addDataCallback(data, new Callback(this, callback)). #define SOFAOR_ADD_INPUT_CALLBACK(data, callback, trackOnly) \; addInput(data, trackOnly, new Callback(this, callback)); ```. When reinit is called on the component, all callbacks are called and the update class is called (maybe it's a mistake, maybe only the callbacks should be called..). Then outputs are set to dirty, and an IdleEvent visitor is propagated:; ```; void ImplicitDataEngine::reinit(); {; cleanTrackers();; update();; setDirtyOutputs();; sofa::core::objectmodel::IdleEvent ie;; sofa::simulation::PropagateEventVisitor v(; sofa::core::ExecParams::defaultInstance(), &ie);; this->getContext()->getRootContext()->executeVisitor(&v);; }; ``` . This allows for a complete and instant refresh of all components taking as an input the dirty outputs without calling the previous components in the pipeline again.; Limitations are that those following components have to be initialized AFTER (in terms of scene graph, so either in subnodes, or after the current engine, in the same node). Another feature that I don't like much but that was requested by someone who was supposed to use and contribute to my plugin but never did, is the ""autolink"" feature:. <MySofaORComponent name=""mycomp"" autolink=""true"" />. This field allows you to *implicitely* link your data, so that you could avoid setting dozens of fields in your scene description file. The way if works is quite basic:; If autolink is true, then when calling addInput, the internal code checks if the vari",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816:2557,update,update,2557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816,1,['update'],['update']
Deployability,"ine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10053,Release,Release,10053,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,is there a need to update the changelog ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/269#issuecomment-301470083:19,update,update,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/269#issuecomment-301470083,1,['update'],['update']
Deployability,"ision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #22 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:38; #23 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::S",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:34905,Pipeline,Pipeline,34905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,4,['Pipeline'],['Pipeline']
Deployability,"isionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:34058,Pipeline,Pipeline,34058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['Pipeline'],['Pipeline']
Deployability,"issofa_multithreading is a few commits behind our public integrated branch. ; Almost all the commits are directly related to the `Multithreading` plugin, see https://github.com/InSimo/sofa/commits/issofa_integration_2017/applications/plugins/MultiThreading. There is also one particular fix related to the concurrent call to `DDGNode::update` method ; https://github.com/InSimo/sofa/commit/2e8d6f33b597ff6dbd568c67dfac7715850f8015",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-292126228:57,integrat,integrated,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-292126228,2,"['integrat', 'update']","['integrated', 'update']"
Deployability,"it's not compiling on the CI due to incompatibility of gcc 5.4 with C++17; otherwise I would appreciate a feedback from @epernod and @marques-bruno, especially about the updateIfDirty (and no clean dirty) thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1131#issuecomment-526506834:170,update,updateIfDirty,170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1131#issuecomment-526506834,1,['update'],['updateIfDirty']
Deployability,"licitSolverDynamicTest_high_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta2ExplicitSolverDynamic_test/rungeKutta2ExplicitSolverDynamicTest_high_dt_0/); [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta4ExplicitSolverDynamic_test.rungeKutta4ExplicitSolverDynamicTest_medium_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta4ExplicitSolverDynamic_test/rungeKutta4ExplicitSolverDynamicTest_medium_dt_0/); [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta4ExplicitSolverDynamic_test.rungeKutta4ExplicitSolverDynamicTest_small_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta4ExplicitSolverDynamic_test/rungeKutta4ExplicitSolverDynamicTest_small_dt_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralImplicitOdeSolver_test_VariationalSymplecticExplicitSolverDynamic_test/variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_medium_dt_with_damping/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralImplicitOdeSolver_test_VariationalSymplecticExplicitSolverDynamic_tes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769:1162,release,release,1162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769,1,['release'],['release']
Deployability,"llision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #10 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:38; #11 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::St",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:4934,Pipeline,Pipeline,4934,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,4,['Pipeline'],['Pipeline']
Deployability,"llisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:4089,Pipeline,Pipeline,4089,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['Pipeline'],['Pipeline']
Deployability,lugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEx,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7881,install,install,7881,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"ment a new library dedicated to the abstraction api for testing with sofa, ie a kind of lightweight SofaTest library.; I was not really aware that there was code inside SofaKernel libraries that directly depend on gtest, I thought it was still kept ""optional"" (ie that gtest has become mandatory on master for some time, wether or not you build and execute unit tests). ; We are still used to developping with the ""idea"" that gtest is optional, even though in reality there is no use case were we do not include it. Coming back at this PR, to be honest I don't believe there is a functionality in the BaseTest classes (apart from the fact that it removes dependencies) that I would like to use, because mostly : ; - we do not currently have a use for message api, or at least we do not have any idea about why it could be beneficial for us to start using it.; - I d like to discourage the use of one size fits all epsilon and comparison values for floating points arithmetic, since I prefer people to actually think about the quantities they want to compare. Comparing floats in a consistent fashion is harder than it looks, with the exception when you expect that the quantities you want to compare to be strictly equal. So having a Base test class which provides these comparison facilities is also not something I am particularly looking for. There are some abstractions attempts in SofaTest that I find interesting ( linearisation tests for the most part ) but it got snowed under a dependency bloat. . However that being said, the only thing I'd like, is that if I implement a test just using the ""vanilla"" gtest library, it can be merged, built and run easily on the master. With the current state of things, integrating a new test in `framework_test`, requires you to build all sofa, and not just `SofaCore` as I would have expected. So in return you have to wait a loooong time before you can actually check that the functionality you want to integrate in master actually works as you expect.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338710224:1848,integrat,integrating,1848,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338710224,2,['integrat'],"['integrate', 'integrating']"
Deployability,n: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2876,Release,Release,2876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,naconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7867,Release,Release,7867,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"nager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9927,install,install,9927,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,nda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginMan,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7273,Release,Release,7273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,ndition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5903,install,install,5903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"ne::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #10 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::proce",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:4361,Pipeline,Pipeline,4361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,['Pipeline'],['Pipeline']
Deployability,"nerate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Load",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9920,Release,Release,9920,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,ng-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [readability-static-definition-in-anonymous-namespace](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-definition-in-anonymous-namespace.html) |; | | [readability-uniqueptr-delete-release](https://clang.llvm.org/extra/clang-tidy/checks/readability-uniqueptr-delete-release.html) |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:30447,release,release,30447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['release'],['release']
Deployability,"nment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it should be avoid for now since I'm not sure what side effects this will bring. Right now doing it seems not so bad as, again, we only attach the environment to the already created python environment. ; - A ScriptController will need to be added in order to trigger script events so that the python scene's functions (initGraph, onBeginAnimationStep, etc) are called. The createScene function is called by the SceneLoaderPY so this one is fine. > (I would probably put your feature in a module separate from Sofa for this reason). I think this should be entirely a part of the SofaPython plugin in order to keep what is related to sofa in python there. > what happens when Sofa.cleanup() gets called but python objects still hold c++ objects that are to be destructed when python exits ?. This is a good question. PythonEnvironment::Release is called when python exits (called by the static raii destructor...). I'll have to check this. > But I am really all for it, so good luck with that :-). Thanks!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:2926,Release,Release,2926,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['Release'],['Release']
Deployability,non je refuse un award pour un patch sur un design de qtwidget aussi compliqué! Alors qu'il y a tellement moyen de faire simple avec qt....,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1181#issuecomment-540592456:31,patch,patch,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1181#issuecomment-540592456,1,['patch'],['patch']
Deployability,"not so great. ; - It also has the major downside of having to load the library to know if the plugin is auto-loadable, which in the end results in having to load all the available plugins. Loading a library in the process memory will have several side effects which are difficult to anticipate before hand. The major one is the evaluation of all the global variables, which will result in populating the `ObjectFactory` with all the components that this library contains. I would suggest something different for this kind of having a list of default plugins that are loaded directly with your application ( here `runSofa` ). - derive a sort of sofa plugin manifest file, which can be generated as a post-build step. This should be an easy to parse file which could contain the various informations exposed by the `getModuleName()`, `getModuleVersion()`... without having to load the library in the process memory. This manifest file must be stored in an easy to find location in your build tree, an be installed properly ( they need also to be bundled when you deploy your application ). That means they should be located with a similar relative path with respect to the application ( `runSofa` ) when in the build tree or in the install tree. There should be a proposal about that to define : ; - the manifest file type ( ie how are we going to parse it ? json xml text ? ); - the manifest file content itself. - any application could then define the list of predefined plugin it wants to load using a simple configuration file. A default configuration can be provided, but it could be easily overriden. With this mechanism, no recompilation is required when you want to change the list of default plugins, you just change the config file. NB : a bit unrelated but there is a small code ""snippet"" that can be used to recover all the components attached to a library in two lines ; ```cpp; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188:1194,install,installed,1194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188,2,"['deploy', 'install']","['deploy', 'installed']"
Deployability,nothing on CImgPlugin... 😢 ; Still have my problem of install on windows...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1114#issuecomment-515915971:54,install,install,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1114#issuecomment-515915971,1,['install'],['install']
Deployability,nstraint; 4 	 54.43	 1 	 7.47	 8.01	 7.68	 0.11	 7.68	 12.32	....MBKSolve; 5 	 54.57	 1 	 7.31	 7.85	 7.52	 0.11	 7.52	 12.06	.....CG-Solve; 4 	 62.12	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.02	....UpdateVAndX. --- . Normal : 27.3678 FPS. 2 	 0.04	 1 	 37.97	 39.96	 38.38	 0.34	 38.38	 99.38	..solve; 3 	 0.04	 1 	 37.96	 39.95	 38.38	 0.34	 38.38	 99.37	...Mechanical; 4 	 0.06	 1 	 1.70	 2.24	 1.88	 0.12	 1.88	 4.88	....ComputeForce; 4 	 1.94	 1 	 0.94	 1.23	 1.04	 0.06	 1.04	 2.68	....ComputeRHTerm; 4 	 2.98	 1 	 22.20	 23.41	 22.47	 0.18	 22.47	 58.17	....MBKBuild; 5 	 2.98	 1 	 22.20	 23.40	 22.46	 0.18	 22.46	 58.16	.....CG-setSystemMBKMatrix; 6 	 2.98	 1 	 0.01	 0.03	 0.02	 0 	 0.02	 0.04	......getContributors; 6 	 3 	 1 	 0.01	 0.01	 0.01	 0 	 0.01	 0.02	......buildMappingGraph; 6 	 3.01	 1 	 0.25	 0.56	 0.30	 0.04	 0.30	 0.77	......InitializeSystem; 7 	 3.01	 1 	 0.13	 0.28	 0.16	 0.03	 0.16	 0.41	.......resizeSystem; 7 	 3.17	 1 	 0.09	 0.25	 0.12	 0.02	 0.12	 0.32	.......clearSystem; 7 	 3.29	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.04	.......initializeLocalMatrices; 6 	 3.31	 1 	 21.92	 22.80	 22.13	 0.15	 22.13	 57.31	......AssembleSystem; 7 	 3.31	 1 	 21.90	 22.77	 22.11	 0.14	 22.11	 57.25	.......buildMatrices; 8 	 3.31	 1 	 21.62	 22.44	 21.82	 0.14	 21.82	 56.50	........buildStiffness; 8 	 25.13	 1 	 0.27	 0.33	 0.28	 0.01	 0.29	 0.74	........buildMass; 8 	 25.42	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildDamping; 8 	 25.42	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildGeometricStiffness; 7 	 25.42	 1 	 0 	 0 	 0 	 0 	 0 	 0 	.......projectMappedMatrices; 7 	 25.42	 1 	 0.02	 0.02	 0.02	 0 	 0.02	 0.05	.......applyProjectiveConstraint; 4 	 25.45	 1 	 12.80	 13.57	 12.96	 0.12	 12.96	 33.55	....MBKSolve; 5 	 25.63	 1 	 12.61	 13.31	 12.75	 0.11	 12.75	 33 	.....CG-Solve; 4 	 38.41	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.03	....UpdateVAndX; ```. Here is the scene. ; [4000-Cantilever-CG.scn.zip](https://github.com/sofa-framework/sofa/files/12594473/4000-Cantilever-CG.scn.zip),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958:3440,Update,UpdateVAndX,3440,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958,1,['Update'],['UpdateVAndX']
Deployability,nt/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/ser,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5203,install,install,5203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,nts.cpython-39-x86_64-linux-gnu.so; │   │   ├── constants; │   │   │   ├── __init__.py; │   │   │   ├── KeyCode.py; │   │   │   └── Key.py; │   │   ├── Core.cpython-39-x86_64-linux-gnu.so; │   │   ├── Gui.cpython-39-x86_64-linux-gnu.so; │   │   ├── Helper.cpython-39-x86_64-linux-gnu.so; │   │   ├── __init__.py; │   │   ├── livecoding.py; │   │   ├── prefab.py; │   │   ├── PyTypes; │   │   │   ├── __init__.py; │   │   │   ├── RGBAColor.py; │   │   │   └── Vec3.py; │   │   ├── Simulation.cpython-39-x86_64-linux-gnu.so; │   │   ├── SofaBaseTopology.cpython-39-x86_64-linux-gnu.so; │   │   ├── SofaDeformable.cpython-39-x86_64-linux-gnu.so; │   │   ├── test.py; │   │   └── Types.cpython-39-x86_64-linux-gnu.so; │   ├── SofaRuntime; │   │   ├── __init__.py; │   │   └── SofaRuntime.cpython-39-x86_64-linux-gnu.so; │   ├── SofaTypes; │   │   ├── __init__.py; │   │   └── SofaTypes.cpython-39-x86_64-linux-gnu.so; │   └── splib; │   ├── animation; │   │   ├── animate.py; │   │   ├── easing.py; │   │   └── __init__.py; │   ├── caching; │   │   ├── cacher.py; │   │   └── __init__.py; │   ├── __init__.py; │   └── meshing; │   ├── cgal_sofa.py; │   ├── data; │   │   └── meshes; │   │   ├── gallbladder.stl; │   │   ├── parametric_mesh_example.step; │   │   └── surface_mesh_example.stl; │   ├── gmsh_sofa.py; │   ├── __init__.py; │   └── pygalmesh_sofa.py; └── share; └── SofaPython3; ├── documentation; │   ├── Contributing.rst; │   ├── CustomModule.rst; │   ├── index.rst; │   ├── install.rst; │   ├── SofaModule.rst; │   └── SofaPlugin.rst; └── examples; ├── backend_pygame.py; ├── BaseCamera.py; ├── CMakeLists.txt; ├── ControllerScene.py; ├── easingSceneMatplotlib.py; ├── easingScene.py; ├── emptyController.py; ├── emptyDataEngine.py; ├── emptyForceField.py; ├── example-forcefield2.py; ├── example-forcefield.py; ├── example.pyscn; ├── example-scriptcontroller.py; ├── keyEvents.py; ├── pygame_test.py; ├── ReadTheDocs_Example.py; ├── realTimeClockScene.py; ├── SofaGui.py; └── test.scn. ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592:6021,install,install,6021,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592,1,['install'],['install']
Deployability,oaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/b,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2734,Release,Release,2734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,oaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/en,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4391,Release,Release,4391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"ofa/build_release/install/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so /home/sergei/Source_code/test_scene/test_scene.py ; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/runSofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYT",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:1089,install,install,1089,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,9,['install'],['install']
Deployability,ofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8016,Release,Release,8016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"ok here is the new call stack with your version @hugtalbot :; ```; SphereLoader::load; SphereLoader::load END; SphereLoader::updateFileNameAndTransformPosition; - m_filename changed: 1; - d_translation changed: 0; - d_rotation changed: 0; - d_scale changed: 0; SphereLoader::load; SphereLoader::load END; SphereLoader::applyTransform; SphereLoader::applyTransform END; SphereLoader::Callback exit with load(); ```. So as you can see the file is loaded once at parse time (because of the ```canLoad``` mechanism of the Loader) but the m_filename is still flaged as changed in the tracker so it will call the method load a second time when the Data position/radius are pulled from other components. . This was avoided in my previous version by adding ```m_internalEngine[""filename""].cleanDirty();``` at begining of the Load method. . However it is not looping anymore like in the initial version. Maybe we can say that this double call of load is special due to the Loader mechanism at parse stage (which should be replaced by a nice Data grah update...); For the log from epernod@sophia.inria.fr . Loader are loading file/mesh at parse stage to ensure they are ready and all their data are filled before any other component start linking and using the loader data. You can see it like a ""pre-init"" visitor... in comparison to the bwdInit.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-744821434:125,update,updateFileNameAndTransformPosition,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-744821434,2,['update'],"['update', 'updateFileNameAndTransformPosition']"
Deployability,"ok sorry, got it. Yes I have duplicated this method in #1223. In the idea of deleting both. The idea was to make a smooth transition period:; - All updated component use now a SingleLink to the topology they want (allowing multiple topologies in the same context) and if not set, use GetMeshTopologyLink() with a warning telling that the result is uncertain.; - Component still using the old method GetMeshTopology should have a deprecated method message in 19.12 before deletion in 20.06. I let that unfinished. ; So as you want either we put the deprecated message or we replace directly both methods by a new one like ""GetFirstEncounteredTopology"" inside a breaking PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1297#issuecomment-605896582:148,update,updated,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1297#issuecomment-605896582,1,['update'],['updated']
Deployability,"ok, could you test by removing the line:; 323 or 324 in the GeomagicDriver.cpp. remove this call: ```updatePosition(); ```; because I saw it is called at SOFA component init when the device thread is not yet well init so it init the manager position with trash position of the device.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/996#issuecomment-484090622:101,update,updatePosition,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/996#issuecomment-484090622,1,['update'],['updatePosition']
Deployability,"ok, this might be due to recent changes in the SofaMacros done for the recent release.; Let me add @guparan in the discussion !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-513288655:78,release,release,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-513288655,1,['release'],['release']
Deployability,ok... I think we should do an afternoon of brainless coding sprint to update all those components with the good guidelines... ; so this one is ready to go I guess. ; LGTM !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1939#issuecomment-803903671:70,update,update,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1939#issuecomment-803903671,1,['update'],['update']
Deployability,oller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9644,Release,Release,9644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"ome/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #9 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:3810,Pipeline,PipelineImpl,3810,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,['Pipeline'],['PipelineImpl']
Deployability,ome/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopol,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7717,install,install,7717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,onda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_sourc,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3156,Release,Release,3156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"onda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckCollisionResponse, SceneCheckDeprecatedComponents, SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneChe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:11189,Release,Release,11189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"ow fixing them to use the msg_api AND and preserving the existing behavior. To convince you that this is worth the effort I took examples from Flexible/Compliant to illustrate the benefit of the changes. ; ==== ====; ```cpp; - if(this->f_printLog.getValue()==true); - std::cout << SOFA_CLASS_METHOD << std::endl;; + dmsg_info() << SOFA_CLASS_METHOD ;; ```; - Is functionnaly equivalent to the old code (if the application have installed an handler routing the message to std::cout); - It will print message in a totally consistant way with other sofa componant (which very important for users); - It is shorter to write (very important for the developer :)), ; - It benefit from the message dispatcher/handler (so it can be logger or routed or sended or whatever GUI in the end user application); - All developpers immediately know that the message is not for the end user of Sofa but for a developers. Consequently the message can be very drafty. It can also be remove by setting SOFA_DEVTOOLS to false and thus it should have a zero cost in a release . A second example: ; ```cpp; - if(this->f_printLog.getValue()) if(pos.size()) ; - std::cout<<""TopologyGaussPointSampler: ""<< pos.size() <<"" generated samples""<<std::endl;; +msg_info_when(pos.size()!=0) << "" topologyGaussPointSampler: ""<< pos.size() <<"" generated samples"" ;; ```; - Is functionnaly equivalent to the old code; - Shorter to write; - Consistant behavior with other component,; - It benefit from the message dispatcher/handler (so it can be logger or routed or sended into Backlog depending on the end user application). And one with an error:; ```cpp; if( inv.info() != Eigen::Success ){; - std::cerr << SOFA_CLASS_METHOD<<""non invertible block Schur."" << std::endl;; - std::cerr << schur << std::endl;; + msg_error(SOFA_CLASS_METHOD) << ""non invertible block Schur."" << msgendl; + << schur ;; ```; - Shorter to write (using msg_error_when() it would have to be even shorter); - Consistant way to present message to the user; - All t",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190#issuecomment-285637960:1749,release,release,1749,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190#issuecomment-285637960,1,['release'],['release']
Deployability,"pedupdate(a, b, c): ; """"""This is so cute to have a single point documentation in our code""""""; print(""MY UPDATE:"" + str(a)) ; return ""Yolo"" + str(a + b + c); ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); TypedMagicEngine(rootNode, typedupdate, a=1.0, b=2.0, c=3.0); ```; EDIT: the ""customout"" will be the name of the output field. With more or less this in TypedMagic; ```python. class TypedMagicEngine(Sofa.PythonScriptDataEngine):; def __init__(self, node, sofaengine, **kwargs):; fct = sofaengine.function; retinfo = sofaengine.retinfo; argsinfo = sofaengine.argsinfo; self.addNewData(""Description"", ""Properties"", """", ""s"", inspect.getdoc(fct)) . argspec = inspect.getargspec(fct); for arg in argspec.args:; argval = None; ### Get the name & default value; if arg in kwargs:; argval = kwargs[arg] ; elif argspec.defaults != None and arg in argspec.defaults:; argval = argspec.defaults[arg] . ### Get the type ; datatype = ""f""; if arg in argsinfo:; datatype = argsinfo[arg]; ; if argval != None: ; self.addNewInput(arg, datatype=datatype, value=argval) ; else:; Sofa.msg_error(""Unable to create an input for parameter: ""+str(arg)) ; ; if retinfo != None:; self.addNewOutput(retinfo[0], datatype=retinfo[1]) ; ; self.retinfo = retinfo[0]; self.name = fct.__name__ ; self.params = argspec.args; self.fct=fct; ; def update(self):; calld = []; for param in self.params: ; calld.append(self.findData(param).value) ; ; self.findData(self.retinfo).value = self.fct(*calld) . ; class sofaengine(object):; def __init__(self, ret=(""output"",None), inputs=[]): ; self.retinfo = ret; self.argsinfo = inputs; ; def __call__(self, fn):; self.function = fn; return self ; ```. Of course this is just a POC (lot of corner cases are not handled) ...It is also very easy to implement the two TypedMagic and MagicEngine in a single piece of code instead of two very similar ones.... and in python 3 we could use annotation...but as we are 2.7..we cannot.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380470372:1589,update,update,1589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380470372,1,['update'],['update']
Deployability,"plicitDataEngine mother class of mine:. ```; struct TestEngine : public ImplicitDataEngine; {; SOFAOR_CALLBACK_SYSTEM(TestEngine); // Required to setup the callback mechanism. public:; sofa::Data<int> d_a;; sofa::Data<int> d_b;; sofa::Data<int> d_c;; sofa::Data<int> d_a_out;; sofa::Data<int> d_b_out;. SOFA_CLASS(TestEngine, ImplicitDataEngine);. TestEngine(); : d_a(initData(&d_a, 0, ""a"", ""An input with a callback method"")),; d_b(initData(&d_b, 0, ""b"", ""An input without callback methods"")),; d_c(initData(&d_c, 0, ""c"", ""A simple data field with a callback"")); d_d(initData(&d_d, 0, ""d"", ""A simple data field without callback"")); {; d_a_out.setName(""a_out""); // the processed output of a; d_b_out.setName(""a_out""); // the processed output of b; }. void init(); {; SOFAOR_ADD_INPUT_CALLBACK(&d_a, &TestEngine::increment, false);; addInput(&d_a);; addInput(&d_b);; SOFAOR_ADD_CALLBACK(&d_c);. addOutput(&d_a_out);; addOutput(&d_b_out);; addOutput(&d_c_out);; }. void update(); {; // do something that's generic for any of the data fields. Called AFTER the data callbacks; }. private:; void increment(sofa::core::objectmodel::BaseData* data); {; d_a.setValue(d_a.getValue() + 1);; }; void decrement(sofa::core::objectmodel::BaseData* data); {; d_b.setValue(d_b.getValue() - 1);; }; };; ```. And here's what happens in the base class:. - The SOFAOR_CALLBACK_SYSTEM is a macro that creates a callback functor:; ```; class CallbackFunctor; {; public:; virtual void call(sofa::core::objectmodel::BaseData* o) = 0;; };. #define SOFAOR_CALLBACK_SYSTEM(T) \; typedef T SOFAOR_CLASS; \; class Callback : public sofaor::common::CallbackFunctor \; { \; typedef void (SOFAOR_CLASS::*Func)(sofa::core::objectmodel::BaseData * o); \; \; SOFAOR_CLASS* m_obj; \; Func m_func; \; \; public: \; Callback(SOFAOR_CLASS* _this, Func f) : m_obj(_this), m_func(f) {} \; void call(sofa::core::objectmodel::BaseData* data = 0) \; { \; (m_obj->*m_func)(data); \; } \; }. #define SOFAOR_ADD_CALLBACK(data, callback) \; addDataC",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816:1055,update,update,1055,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816,1,['update'],['update']
Deployability,"plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with ch",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9301,install,install,9301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,pment/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5027,install,install,5027,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"ranslationTex; Vec2i | localRange; Vec3d | direction; Vec3f | scale3d; Vec3i | dataResolution; Vec4f | showColor; vector&lt;double> | compliance; vector&lt;Edge> | edges; vector&lt;fixed_array&lt;string,2>> | suffixMap; vector&lt;fixed_array&lt;unsigned int,4>> | highOrderEdgePositions; vector&lt;fixed_array&lt;unsigned int,5>> | highOrderTrianglePositions; vector&lt;fixed_array&lt;unsigned int,6>> | highOrderTetrahedronPositions; vector&lt;fixed_array&lt;unsigned int,8>> | highOrderHexahedronPositions; vector&lt;float> | projectionMatrix; vector&lt;Hexahedron> | hexahedra; vector&lt;int> | indices; vector&lt;Mat&lt;24,24,double>> | stiffnessMatrices; vector&lt;Pentahedron> | pentahedra; vector&lt;Pyramid> | pyramids; vector&lt;Quad> | quads; vector&lt;string> | pluginName; vector&lt;Tetrahedron> | tetrahedra; vector&lt;Triangle> | triangles; vector&lt;unknown> | groups; vector&lt;Vec2d> | uv; vector&lt;Vec3d> | reset_velocity; vector&lt;vector&lt;int>> | facets; vector&lt;vector&lt;unsigned int>> | polygons. Interesting to see that there are some ""unknown"" typenames in Sofa... Concerning the idea of reducing the syntax to its minimum when creating 1-instruction engines, I think that in terms of user experience, it would be ideal if an engine could be created by doing something like this:; ```; node.createObject('Component1', name=""1""); e = node.createEngine('PSDEMagic', name='2', myIntVector=""@1.vector_out""); e.addNewOutput('myIntOutput'); e.update = lambda e: e.myIntOutput = e.myIntVector[0]; node.createObject('AnotherComponent', name=""3"", myInt=""@2.myIntOutput); ```. Or even better but I don't see any technical approach for it:; ```; node.createObject('Component1', name=""1""); node.createEngine('PSDEMagic', name='2', myIntVector=""@1.vector_out"", update=lambda magic:(magic.myIntOutput = magic.myIntVector[0]) ); node.createObject('AnotherComponent', name=""3"", myInt=""@2.myIntOutput); ```. **EDIT: markdown didn't like the angle brackets.. now it shows all the types!**",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380402613:2252,update,update,2252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380402613,2,['update'],['update']
Deployability,"ration scheme). But I fear how slow may be generators compared to more classical iteration mechanisms. . About your question regarding the implementation: ; I wrote most of the change using the C-python API but after some time I was fed-up on how ugly it is and terminated the implementation using python. Mixing the python and c++ code was actually very simple thanks to the cython ability to generate dual-bindings... where a c++ function is exposed in python as well as having python functions exposed to C++ (so a .h is generated to include and use the python code in your c++ code base). ; That's said cython is not magic and the generated .cpp/.h are containing 100% python C-api ...so everything implemented in cython could be implemented exactly the same using the C-python API. ; It is just 10x longer to write an equivalent code. . As you ask I pushed a branch (https://github.com/SofaDefrost/sofa/tree/sofa_refactorSofaPython) with the implementation don't expect the branch to compile today as it contains irrelevant code that are wip to support the buffer protocol for seamless integration with numpy. . For the syntax about Data...everything is implemented in 'Binding_Data.cpp'. ; The function SofaData_asMapping_ass_subscript is the one called when using the [aaa] = operation. ; ```cpp; static int SofaData_asMapping_ass_subscript(PyObject *o, PyObject *key, PyObject *value); {; ....; /// This line is actually calling the ""python"" part implementation because I was too lazy; /// to implement it using C-Python API. So the function is really implemented partially with python ; /// and partially with c++ :) ; if( Data_ass_subscript(o,key,value) ); return 0;; ; /// after that it is a lot of ugly c-python api code. ; ....; ```. And the corresponding cython code (in Binding_DataArray.pyx); ```python; def sliceToRange(c, end):; start = 0; stop = end; if c.start != None:; start = c.start; if c.stop != None:; stop = c.stop; return xrange(start, stop) . cdef public bool Data_ass_sub",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/767#issuecomment-419024819:1699,integrat,integration,1699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/767#issuecomment-419024819,1,['integrat'],['integration']
Deployability,"release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/l",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2794,install,install,2794,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,remove ownerClass and update number in config.h ; EDIT: done.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1253426985:22,update,update,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1253426985,1,['update'],['update']
Deployability,rgei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_develo,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4207,install,install,4207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,rgei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/se,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4681,install,install,4681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,rs/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7415,Release,Release,7415,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,s/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/g,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7568,Release,Release,7568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,s/sofa_source/sofa/src/examples;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Releas,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1486,Release,Release,1486,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"se/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfur",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10439,Release,Release,10439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglV,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7557,install,install,7557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"sing sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"")",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:3432,pipeline,pipeline,3432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147,2,"['Pipeline', 'pipeline']","['Pipeline', 'pipeline']"
Deployability,"sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta4ExplicitSolverDynamic_test/rungeKutta4ExplicitSolverDynamicTest_medium_dt_0/); [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta4ExplicitSolverDynamic_test.rungeKutta4ExplicitSolverDynamicTest_small_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta4ExplicitSolverDynamic_test/rungeKutta4ExplicitSolverDynamicTest_small_dt_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralImplicitOdeSolver_test_VariationalSymplecticExplicitSolverDynamic_test/variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_medium_dt_with_damping/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralImplicitOdeSolver_test_VariationalSymplecticExplicitSolverDynamic_test/variationalSymplecticExplicitSolverDynamicTest_medium_dt_with_damping_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_high_dt_with_damping/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralImplicitOdeSolver_test_VariationalSymplecticExplicitSolve",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769:1605,release,release,1605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769,1,['release'],['release']
Deployability,"sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10659,Release,Release,10659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"still a test failing : [UnitTests.Sofa/LoggingTest.checkBaseObjectMsgAPI](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3299/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/14/testReport/UnitTests/Sofa_LoggingTest/checkBaseObjectMsgAPI/)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1282863772:187,release,release,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1282863772,1,['release'],['release']
Deployability,"sure @jnbrunet ; These integration factors are not widely used (actually almost not used at all!). These factors define how to bring back the results of the constraint problem (Lagrange multipliers ) as position or velocity field. These factors usually only depend on the scheme.; For practical reason (I guess), these factors can be manually tuned in the UncoupledCC. The API in ODESolver (integration schemes) defining these factors is unclear and could be updated. See the functions:; - *getPositionIntegrationFactor*; - *getVelocityIntegrationFactor*; - *getIntegrationFactor*; - *getSolutionIntegrationFactor*. Does this answer your point?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-625827145:23,integrat,integration,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-625827145,3,"['integrat', 'update']","['integration', 'updated']"
Deployability,"t that. On my setup, the compilation does not works regardless of the SOFACUDA_DOUBLE option. I'm a bit surprized it works on your side. Here are information on my setup:; OS => Fedora 29; NVCC version => V10.1.105; CMake variable SOFACUDA_ARCH=sm_60; CMake variable CUDA_VERSION=10.1. And here are the output errors from ninja:. ```; [1/96] Building NVCC (Device) object applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o; FAILED: applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o ; cd /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda && /usr/bin/cmake -E make_directory /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/. && /usr/bin/cmake -D verbose:BOOL=OFF -D build_configuration:STRING=Release -D generated_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(360): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_deriveSPKTensor"" is",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:1134,Release,Release,1134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,1,['Release'],['Release']
Deployability,tOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6589,install,install,6589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,thanks a lot for improving your PR @maddin200 ; I made some suggestions to improve the readability of the code. FYI you could have updated your original PR #3224 it would avoid closing / reopening PRs,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3267#issuecomment-1236084796:131,update,updated,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3267#issuecomment-1236084796,1,['update'],['updated']
Deployability,"the failing scenes was coming from the perf regression, I just needed to update the branch from master",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3315#issuecomment-1271130512:73,update,update,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3315#issuecomment-1271130512,1,['update'],['update']
Deployability,"the install(DIRECTORY ... DESTINATION ...) was never called actually, since the pre-check ; `if(""${public_header}"" STREQUAL ""public_header-NOTFOUND"")` returned false because of the set_target_properties(PUBLIC_HEADER) declared before calling the sofa_install_targets macro...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/887#issuecomment-454027302:4,install,install,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/887#issuecomment-454027302,1,['install'],['install']
Deployability,"ths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/runSofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2263,install,install,2263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"ting node ""root"" with checks:; [SceneCheckAPIChange, SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckAPIChange] No 'APIVersion' component in scene. Using the default APIVersion level:; 17.06; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [FixedConstraint(default3)] Can not find the topology, won't be able to handle topological changes; [WARNING] [FixedConstraint(default3)] Index 0 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 3 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 6 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 9 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 12 not valid, should be [0,0]; [WARNING] [RealGUI] Global Bounding Box seems very small; Your viewer settings (based on the bbox) are likely invalid, switching to default value of [-1,-1,-1,1,1,1].This is caused by using component which does not implement properly the updateBBox function.You can remove this warning by manually forcing a value in the parameter bbox=""minX minY minZ maxX maxY maxZ"" in your root node. ########## SIG 11 - SIGSEGV: segfault ##########; 54: sofa::helper::BackTrace::dump - 0x7ffbf5c001e053:; sofa::helper::BackTrace::sig - 0x7ffbf5c0034052:; seh_filter_exe - 0x7ffc2b60d4e051:; seh_filter_exe - 0x7ffc2b60d4e050:; _C_specific_handler - 0x7ffc1c9ab86049:; _chkstk - 0x7ffc2e51457048:; RtlWalkFrameChain - 0x7ffc2e47373047:; KiUserExceptionDispatcher - 0x7ffc2e5133d046:; sofa::component::projectiveconstraintset::FixedConstraint<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3,double>,sofa::defaulttype::Vec<3,double>,double> >::draw - 0x7ffbe600fe3045:; sofa::simulation::DefaultVisualManagerLoop::HeaderFileLocation - 0x7ffbf7d3d18044:; sofa::simulation::VisualDrawVisitor::processNodeTopDown - 0x7ffbf7d76ea043:; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal - 0x7ffc1c3199c042:; sof",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746#issuecomment-475536396:1384,update,updateBBox,1384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746#issuecomment-475536396,1,['update'],['updateBBox']
Deployability,"to fix the compilation error. ## How to use them. Create a new deprecation macro specifying the deprecation topic you are tackling.; This way, you won't have dates everywhere in your code. ## Example. ### Deprecate. I want to rename something that will break my API. ; To ease the transition for my users, I will propose a deprecation period with a fine message by using a deprecation macro.; Latest release is v20.06, next release (currently under development) is v20.12, after that will come the v21.06. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DEPRECATED( \; ""v20.12 (PR#12345)"", ""v21.06"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod();; ```. Anyone using myDeprecatedMethod will get this **warning**: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is still usable but has been DEPRECATED since v20.12 (PR#12345). You have until v21.06 to fix your code. XXX must be renamed into YYY.; ```. ### Disable. Now forward in time ...; Latest release is v20.12, next release (currently under development) is v21.06, after that will come the v21.12.; It is time to stop the deprecation period. To provide a clear message to my users, I will not just remove my deprecated method but I will disable it with `= delete` and use a deprecation macro. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DISABLED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DISABLED( \; ""v20.12 (PR#12345)"", ""v21.06 (PR#45678)"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DISABLED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod() = delete;; ```. Anyone using myDeprecatedMethod will get an **error** right after this warning: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is not usable anymore because it has been DISABLED since v21.06 (PR#45678) after being deprecated on v20.12 (PR#12345). XXX must be renamed into YYY.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249:1964,release,release,1964,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249,2,['release'],['release']
Deployability,trying to update qt without updating the whole system (OSx builder is on OSx 10.9...),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/311#issuecomment-312259969:10,update,update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/311#issuecomment-312259969,1,['update'],['update']
Deployability,ugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with conte,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9145,install,install,9145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,ugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3418,Release,Release,3418,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,uginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2587,Release,Release,2587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,uild/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Relea,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8308,Release,Release,8308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,uild/bin/Release; [INFO] [runSofa] DataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/share;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/examples;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.C,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1345,Release,Release,1345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,urn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_s,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3016,Release,Release,3016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,vs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginMa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5828,Release,Release,5828,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"we pass it to ""wip"" @EulalieCoevoet but poke us as soon as you updated the PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2908#issuecomment-1117133112:63,update,updated,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2908#issuecomment-1117133112,1,['update'],['updated']
Deployability,when this one is merged we should update #2616 to add the new scenes and remove the old one.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2598#issuecomment-1016249464:34,update,update,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2598#issuecomment-1016249464,1,['update'],['update']
Deployability,with normal installation there was problem in the configuring step where we choose unix /ninja and assign C & C++ compilers. it was not able to locate the compilers even though I browsed that. I also tried with gcc/g++. ; which procedure should I follow? I am frustrated. ; Is Unbuntu 18.04 causing problem?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315531153:12,install,installation,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315531153,1,['install'],['installation']
Deployability,"with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolve",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2931,install,install,2931,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,yeah sorry @jnbrunet (good to hear from you as always!) this fix has not been integrated into v22.06 and regarding to the timing we might very probably wait for the v22.12 (at least for having the fix in the binary version),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485#issuecomment-1326853997:78,integrat,integrated,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485#issuecomment-1326853997,1,['integrat'],['integrated']
Deployability,"yet an other option is to conditionnaly compile HighOrderTopology code in Flexible based on whether the HighOrderTopology plugin is existing or not (in cmakelists package_require(HighOrderTopology) if (HighOrderTopology_FOUND) ... ): ; - each plugin can live in its own repository ; - no need for a third plugin ; - should work whether all the plugins are compiled in the same cmake build project or are compiled/installed separately (well HighOrderTopology must be available when compiling Flexible) . thomas . ----- Mail original -----. > De: ""Matthieu Nesme"" notifications@github.com; > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > ; > Hi Hervé,; > ; > In general, I think it is a good idea to have a repo per plugin, even if it; > becomes more difficult to update them when the sofa core is modified.; > But in this specific case, it would be great to add this plugin to this; > github repo, so Flexible can still benefit from your code.; > ; > Another solution, could be to add a third plugin in your independent; > repository, that would link with both SOFA-HighOrderTopology and Flexible,; > and that would contain the high order shape functions.; > ; > What do you think?; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936:413,install,installed,413,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936,2,"['install', 'update']","['installed', 'update']"
Deployability,"you rock @damienmarchal , thank you for all your updates on the ChangeLog.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/108#issuecomment-274549839:49,update,updates,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/108#issuecomment-274549839,1,['update'],['updates']
Deployability,"you're right, but if i check cmake --version it tells it's 3.26.4. that's strange. Anyway i tried to uninstall and install it again but the version doesn't change",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761317874:115,install,install,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761317874,1,['install'],['install']
Deployability,~~Need to update all scenes~~; done :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3891#issuecomment-1563481310:10,update,update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3891#issuecomment-1563481310,1,['update'],['update']
Deployability,"👍 for removing sofa::helper::io::Mesh*. There is however an issue that the support for loading texture coordinates was removed from MeshObjLoader, so the OglModel version on the master can only have textures when using these deprecated loaders. In our latest integration branch we reverted this removal of texcoords support and fixed it to have the same level of support using MeshObjLoader+OglModel as when loading the file directly in OglModel (most notably handling of ""seams"" where a single vertex has multiple texture coordinates). The relevant commits are:; - https://github.com/InSimo/sofa/commit/915ee46368efe140b242759a0110682f71200dc1; - https://github.com/InSimo/sofa/commit/08493b9ab5c8ea376ba9a7f9a2cea3e81f513511; - https://github.com/InSimo/sofa/commit/e6bec10562ab797963027003c2282cbc24a53bb9; - https://github.com/InSimo/sofa/commit/1925b381b7d8cb939d250ab24e92fb28df918c0b. To be merged to the master the first commit need to be done in a cleaner way than a full revert, which removed later refactorings like apparently the introduction of a File class.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/42#issuecomment-298865553:259,integrat,integration,259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/42#issuecomment-298865553,1,['integrat'],['integration']
Energy Efficiency," NG branch](https://github.com/sofa-framework/sofa/tree/ng) on sofa-framework.; Still, all the developments will go through the PR process. Reminder: your feedback is VERY important, we need it to adapt our work and minimize future rollbacks. **Do not hesitate to put any comment in the pull-requests.**. ## Refactoring and adapting SPM for Sofa.Component.Utils. SPM is the set of scripts we use to make our work easily reproducible. You can check it out [here](https://github.com/guparan/sofa2ng). This work made me realize that it will be very hard, if not impossible, to anticipate every subtle change needed by the refactoring.; - Do we want SPM to be an all inclusive script to refactor completely SOFA? ; every refactoring is unique and needs to change SPM ; -> namespace handling ; -> includes refactoring; - Or should we prefer it to be an easy-to-use script to **bootstrap** any refactoring? ; -> very specific changes will have to be done by hand. I propose to go for solution 2 and to provide a git patch covering the work done after SPM job (fixing includes, fixing namespaces, ...). The progress of this task is **85%** since I now have to create the patch and to provide everything in the PR. ## Moving on with Sofa.Helper.Bvh; Following [the latest iteration on NG architecture](https://annuel2.framapad.org/p/sofang-v3) and Damien's first draft in his [cleanTheMessStep1](https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng) branch, I started refactoring SofaFramework with Sofa.Helper.Bvh. This task needed me to heavily change/adapt SPM. It contributed to make me prefer solution 2 above. The progress of this task is **60%**. TODO:; - update the recipe with latest SPM changes (namespace handling); - adapt SPM output for smooth transition from SOFA; - create the patch; - open a PR. ## Next steps; - Finalize and merge Sofa.Component.Utils PR; - Open a new PR: Sofa.Helper.Bvh; - Continue with SofaHelper refactoring. ----------. Any feedback is more than welcome :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811:1843,adapt,adapt,1843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811,2,['adapt'],['adapt']
Energy Efficiency," data vectors while executing on each component (for example MechanicalVisitor::fwdForceField, calls addForce or addDForce on each component, each one modifying the force vector).; We define a **Parallel Section** as the execution of a given visitor function on a list of components.; We define a **Task** as the execution of a visitor function on a component. Therefore a parallel section is decomposed in an ordered list of tasks.; Each task accesses a given set of vectors (read or write accesses), and a given set of locations in these vectors. We can split the tasks in **phases** such that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined as the execution of the visitor function on a component; 2. Execute the first time step sequentially, logging/profiling all accesses to vectors; - create parallel sections and tasks; - in each task, log all accesses to vectors using and overloaded helper::vector::operator[]; 3. During the second time step, we launch a parallel thread that ; - splits each task in phase each phase doing a (statically) given number of vector accesses.; - for each phase, identify the bl",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:1470,schedul,schedule,1470,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,1,['schedul'],['schedule']
Energy Efficiency," that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined as the execution of the visitor function on a component; 2. Execute the first time step sequentially, logging/profiling all accesses to vectors; - create parallel sections and tasks; - in each task, log all accesses to vectors using and overloaded helper::vector::operator[]; 3. During the second time step, we launch a parallel thread that ; - splits each task in phase each phase doing a (statically) given number of vector accesses.; - for each phase, identify the blocks of vectors accessed; - for each parallel section, build a dependency graph between task phases; - for each parallel section, schedule the parallel execution of the different task phases so that we keep the order of the operations and independent phases can run in parallel; 4. When the scheduling is computed, we run the following time steps in parallel; 5. When there is a change in the topology, we do the logging and scheduling phases again, while the simulation run sequentially. This is a work in progress. As you can imagine, designing and implementing this is far from trivial.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:2601,schedul,schedule,2601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,3,['schedul'],"['schedule', 'scheduling']"
Energy Efficiency,""" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. <RegularGridTopology nx=""50"" ny=""1"" nz=""50"" xmin=""-9"" xmax=""5"" ymin=""7"" ymax=""7"" zmin=""-7"" zmax=""7"" name=""Container"" />; <MechanicalObject name=""dofs"" />; <UniformMass totalMass=""100"" />; <UncoupledConstraintCorrection />; <Node name=""T"">; <include href=""Objects/TriangleSetTopology.xml"" />; <Quad2TriangleTopologicalMapping input=""@../Container"" output=""@Container"" />; <TriangularFEMForceField name=""FEM"" youngModulus=""60"" poissonRatio=""0.3"" method=""large"" />; <TriangularBendingSprings name=""FEM-Bend"" stiffness=""300"" damping=""1.0"" />; <TriangleCollisionModel contactStiffness=""20.0""/>; <PointCollisionModel />; <Node name=""Visu"">; <OglModel name=""Visual"" material=""mat1 Diffuse 1 0.5 1.0 0.75 0.8 Ambient 1 0.2 0.2 0.2 1 Specular 1 0.6 0.6 0.6 0.6 Emissive 0 0 0 0 0 Shininess 0 45"" />; <IdentityMapping input=""@../../dofs"" output=""@Visual"" />; </Node>; </Node>; </Node>; </Node>. ```. For some reasons, the free position and velocity of a second mechanical object is not allocated. So, when we want to access an element of this vector, it crashes. I need more time to debug it. I'll let you know",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:4182,allocate,allocated,4182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838,1,['allocate'],['allocated']
Energy Efficiency,"## Execute the latest runSofa on a Windows host (working but pretty slow). Taken from https://dev.to/darksmile92/run-gui-app-in-linux-docker-container-on-windows-host-4kde ; and https://medium.com/@potatowagon/how-to-use-gui-apps-in-linux-docker-container-from-windows-host-485d3e1c64a3. First of all, install [VcXsrv Windows X Server](https://sourceforge.net/projects/vcxsrv/). Here we use [Chocolatey](https://chocolatey.org/) but it's not mandatory.; ```powershell; choco install vcxsrv; ```; Once installation is done, run XLaunch from start menu and make sure to activate the option ""Disable access control"". Then, get your IP with `ipconfig`. Finally, in a PowerShell terminal; ```powershell; docker run --rm --user ""sofa:sofa"" -e DISPLAY=your_IP_goes_here:0.0 -t sofaframework/sofa_nightly_ubuntu:master-standard runSofa; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2485#issuecomment-1175016532:457,power,powershell,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2485#issuecomment-1175016532,3,"['Power', 'power']","['PowerShell', 'powershell']"
Energy Efficiency,"& navigate in the inclusion graph.: ; https://htmlpreview.github.io/?https://raw.githubusercontent.com/SofaDefrost/sofa/reduceInclude2/include_master_2017_12_18.html. It was suggested by @guparan that we could aggregate the files around their cmake ""components"" so we could identify easily the ""strengh"" (the amount of .h) between the cmake package. Then from this graph views, actions can be to guide the refactoring. ; Eg: ; 1) remove the includes that are not mandatory to make the graph more sparse (there is very easy cases that can be done during coding sprint). ; 2) when there is cycle in the graph, serious refactoring may be needed because this indicate it is not possible to properly make package out of it (this happens in Helper & DefaultType). ; 3) for the elements in the graph that are included only few time this means it is very easy to put them into ""external"" plugins without breaking a lot of code. . I practiced 1) in https://github.com/SofaDefrost/sofa/tree/reduceInclude2; I practiced 2) in https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel; I practiced 3) in several of our pluginization's PR. What I found very hard is to make that in coordinated way and in a smooth enough way not to kill anyone's projects. On the existing code base:; - make PR that unify the way to declare namespace/include guards so refactoring with string replacement instead of manually patching the code base would be faciliated.; - make PR to reduce the include's graph pressure (this will ease to cut the code into packages); - make more PR to deprecates components ; - put as real plugin the leaves of the dependency graph (starting with the leaves is easier because it indicate that only a small part of our code base needs to be updated). ; - find an agreement on the resulting structure.; - find an agreement on the amount of change and understand how this will impact third party code and code history. ; - find an agreement on the process to actually make the changes. ...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-372626690:1568,reduce,reduce,1568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-372626690,1,['reduce'],['reduce']
Energy Efficiency,"'); Collis.addObject('EdgeSetTopologyModifier',name='colliseEdgeModifier'); Collis.addObject('MechanicalObject',name='CollisionDOFs'); Collis.addObject('MultiAdaptiveBeamMapping',name='collisMap', controller='../m_ircontroller',useCurvAbs='1',printLog='0'); Collis.addObject('LineCollisionModel',proximity=0.0,group='1'); Collis.addObject('PointCollisionModel', proximity=0.0, group='1'). VisuCatheter = InstrumentCombined.addChild('VisuCatheter'); VisuCatheter.activated= True; VisuCatheter.addObject('MechanicalObject',name='Quads'); VisuCatheter.addObject('QuadSetTopologyContainer',name='ContainerCath'); VisuCatheter.addObject('QuadSetTopologyModifier',name='Modifier'); VisuCatheter.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuCatheter.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=2,input='@../../topoLines_cath/meshLinesCath',output='@ContainerCath',flipNormals=True); VisuCatheter.addObject('AdaptiveBeamMapping',name='VisuMapCath',useCurvAbs='1', printLog='0', interpolation='@../InterpolCatheter', input='@../DOFs', output='@Quads', isMechanical=False); VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.activated= True; VisuOgl.addObject('OglModel',name='Visual',color='0.7 0.7 0.7', quads='@../ContainerCath.quads',material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). VisuGuide = InstrumentCombined.addChild('VisuGuide'); VisuGuide.activated= True; VisuGuide.addObject('MechanicalObject',name='Quads'); VisuGuide.addObject('QuadSetTopologyContainer',name='ContainerGuide'); VisuGuide.addObject('QuadSetTopologyModifier',name='Modifier'); VisuGuide.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuGuide.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=1,input='@../../topoLines_guide/meshLinesGuide',output",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:6413,Adapt,AdaptiveBeamMapping,6413,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['AdaptiveBeamMapping']
Energy Efficiency,"(edited); No problem for me since boost is now mandatory. ; As seen in the main CMakeLists.txt, line 158:; `find_package(Boost REQUIRED)`. Does the job, no test broken, fixes one failing test: green light for me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/99#issuecomment-266968755:193,green,green,193,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/99#issuecomment-266968755,1,['green'],['green']
Energy Efficiency,"3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) (DefaultPipeline.cpp:238); ==91659== by 0x4BBD0D6: sofa::simulation::PipelineImpl::computeCollisionDetection() (PipelineImpl.cpp:117); ==91659== by 0x4B68E62: sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) (CollisionVisitor.cpp:78); ==91659== by 0x4B690BC: runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::co. ```. Sounds like createOutputModel is a good first spot to look at as it allocate an output vector with new... and that this one is returned to finally be stored in a map (eg: line 50 in NarrowPhaseDection).... which is not deleted when destructing object.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:2644,allocate,allocate,2644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654,1,['allocate'],['allocate']
Energy Efficiency,": Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [FATAL] [Qt] Could not initialize GLX. ########## SIG 6 - SIGABRT: usually caused by an abort() or assert() ##########; sofa::helper::BackTrace::sig(int); gsignal; abort; _Z13qErrnoWarningPKcz+0; QOpenGLContext::create(); QRhiGles2InitParams::newFallbackSurface(QSurfaceFormat const&); QBackingStoreRhiSupport::create(); QWidgetPrivate::create(); QWidget::create(unsigned long long, bool, bool); QWidgetPrivate::setVisible(bool); sofa::gui::qt::RealGUI::InitApplication(sofa::gui::qt::RealGUI*); sofa::gui::qt::RealGUI::CreateGUI(char const*, boost::intrusive_ptr<sofa::simulation::Node>, char const*); sofa::gui::common::GUIManager::createGUI(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; Aborted (core dumped); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:13754,green,greenBufferSize,13754,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['green'],['greenBufferSize']
Energy Efficiency,":+1: CI is busy, so let's wait a bit but light is green!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1436#issuecomment-666320495:50,green,green,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1436#issuecomment-666320495,1,['green'],['green']
Energy Efficiency,"> ; > ; > > EDIT: I ran the performance monitor of VS and indeed it takes a lot of time in the resize() function of MechanicalObject; > ; > Indeed, this looks like a nice bug 😎; > ; > However, I'm not sure this is impacting the _simulation_ time. The same multivectors are used (x_rest, x, v, etc.) and the newly (and very wrongly) created vectors are simply, well, created...; > ; > But we must definitely fix this bug 😁. Agreed for the simulation time itself, but the created vectors are not only created; in the resize function, it tried to resize ALL the vectors every time step, so after a thousand steps for example, it tried to resize like 2000 vectors... Interestingly, the useless vectors are all V_DERIV so something related to the velocities?; ![Capture_collis2](https://user-images.githubusercontent.com/11028016/118618533-03ca6180-b7c4-11eb-9332-0ce4c316fc23.PNG)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842970198:40,monitor,monitor,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842970198,1,['monitor'],['monitor']
Energy Efficiency,"> @fspadoni Is the task scheduler designed to have local schedulers? For example, can I have a task scheduler specific to a component? Is it restricted to have only one instance per derived type?. There is only one global instance of the task scheduler class and this is shared between all components. ; Any components can create and submit tasks to task scheduler. ; The tasks are queued and process by the worker threads.; The task scheduler manages the worker threads (only one per cpu core by default)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1927#issuecomment-801783837:24,schedul,scheduler,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927#issuecomment-801783837,6,['schedul'],"['scheduler', 'schedulers']"
Energy Efficiency,"> EDIT: I ran the performance monitor of VS and indeed it takes a lot of time in the resize() function of MechanicalObject. Indeed, this looks like a nice bug :sunglasses: . However, I'm not sure this is impacting the _simulation_ time. The same multivectors are used (x_rest, x, v, etc.) and the newly (and very wrongly) created vectors are simply, well, created... But we must definitely fix this bug :grin:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842965195:30,monitor,monitor,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842965195,1,['monitor'],['monitor']
Energy Efficiency,"> Have you tested it still works with Qt5?. it is still Qt5 on the CI so if it is green, it should be ok ✌️",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4330#issuecomment-1836137261:82,green,green,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4330#issuecomment-1836137261,1,['green'],['green']
Energy Efficiency,"> Hey @nhnhan92; > Thank you so much for your patience and your efforts regarding the headers. It is great to have homogeneous headers for the project, especially for people to use SOFA under one single LGPL license.; > ; > To my best knowledge, it is not really possible to have ""two versions"" of the code in SOFA and a plugin of yours. But here is what I would recommend: once this PR is merged, create a specific branch in your fork where you can implement / test new evolutions. Each time you think the time is appropriate to contribute it back, you can simply pull-request your branch. This is the power of Git!; > ; > Finally, regarding my remark about the test, I was thinkg about a C++ test (that we run on the CI, you can have a look to the C++ files _***_test.cpp_. In this test, it would be ideal to have a numerical validation, assessing that the shell model is following the theoretical behavior (e.g. using method of manufactured solutions (MMS)); > See: https://link.springer.com/article/10.1007/s00366-017-0572-4; > ; > Let us know what you think about it. We can make it step by step!. Dear @hugtalbot,; Thank you for your recommendation, we think that would be a proper option for our case. ; On the other hand, regarding the test, we want nothing more than that, but we are not familiar with the testing procedure. Therefore, we are willing to follow your guidance. Hope to hear your response soon.; Best regards,; Nhan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-787447454:603,power,power,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-787447454,1,['power'],['power']
Energy Efficiency,"> However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. This function should be very useful in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:. 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not... This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices. Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?. CC: @hugtalbot , @ChristianDuriez , @fjourdes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-797326125:1116,efficient,efficiently,1116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-797326125,1,['efficient'],['efficiently']
Energy Efficiency,"> I don't understand the differences here. That's the problem, this is supposed to do the same thing : either calling the delete operator with size or not size, because in this end both of them call the same code in the StdTaskAllocator https://github.com/sofa-framework/sofa/blob/d855365c71b4b83190ca4af3ce412bd4dbdc1b2f/Sofa/framework/Simulation/Core/src/sofa/simulation/DefaultTaskScheduler.cpp#L47. But in the end calling the version without size fixes the leak 😶‍🌫️; caduceus.scn with 1000steps: ; Before: (operator delete with size); ```; Direct leak of 63936 byte(s) in 999 object(s) allocated from:; #0 0x7fdeaeac0488 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:95; #1 0x7fdea4253138 in _M_create<sofa::component::animationloop::FreeMotionAnimationLoop::FreeMotionAndCollisionDetection(const sofa::core::ExecParams*, const sofa::core::ConstraintParams&, SReal, sofa::core::MultiVecId, sofa::core::MultiVecId, sofa::core::MultiVecDerivId, sofa::simulation::common::MechanicalOperations*)::<lambda()> > /usr/include/c++/12/bits/std_function.h:161; #2 0x7fdea4253138 in _M_init_functor<const sofa::component::animationloop::FreeMotionAnimationLoop::FreeMotionAndCollisionDetection(const sofa::core::ExecParams*, const sofa::core::ConstraintParams&, SReal, sofa::core::MultiVecId, sofa::core::MultiVecId, sofa::core::MultiVecDerivId, sofa::simulation::common::MechanicalOperations*)::<lambda()>&> /usr/include/c++/12/bits/std_function.h:215; #3 0x7fdea4253138 in _M_manager /usr/include/c++/12/bits/std_function.h:198; #4 0x7fdea4253138 in _M_manager /usr/include/c++/12/bits/std_function.h:282; #5 0x7fdea81a4486 in std::function<void ()>::function(std::function<void ()> const&) /usr/include/c++/12/bits/std_function.h:391; #6 0x7fdea81a4486 in sofa::simulation::TaskScheduler::addTask; <lots and lots of other leaks...>; ...; SUMMARY: AddressSanitizer: 808967 byte(s) leaked in 15938 allocation(s).; ```; After: (operator delete without size); ```; <no ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3643#issuecomment-1428898636:591,allocate,allocated,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3643#issuecomment-1428898636,1,['allocate'],['allocated']
Energy Efficiency,"> If I understood correctly, the group manager would help the performances compared to a single system. Here, we compare to two systems (one per cube). I'll add a third scene in this benchmark with a single system, to be more rigorous. I expect the same result from ""single system"" and ""two systems + group manager"". I expect better performances only in case the two cubes are not in contact, am I right?. Well, if I understood correctly, the group manager is doing just that: take two objects usually solved with their own solver, and merge them into one. So in this case, your third scene should produce the same result as the one with a group manager. Here is a screen shot of the advanced timer monitor for your two scenes:; ![image](https://user-images.githubusercontent.com/6951981/118618298-c239b680-b7c3-11eb-9f4d-aeaa23aaa916.png). See the mechanical nodes? In the scene with the group manager, the two mechanical nodes have been merged into one. > Can we say that the best practice would be to start the design of a simulation scene with a single system, without group manager? And if performances are poor, it can be improved with a group manager, knowing its drawbacks (such as hiding a selection of solver properties to the user). Again, one big system should be the same as what the group manager those. However, I do think it should be best practice to manually do it instead of relying on the group manager to do it...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842971418:699,monitor,monitor,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842971418,1,['monitor'],['monitor']
Energy Efficiency,"> Nobody reacted to my screenshot, but I suppose that a part of the slowdown comes from the fact that the mechanical object is resizing more and more vectors.... raised_eyebrow; > ; > EDIT: I ran the performance monitor of VS and indeed it takes a lot of time in the resize() function of MechanicalObject. Wow I did not notice the vector tabs in your screenshot! I'll have a look also.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842966190:212,monitor,monitor,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842966190,1,['monitor'],['monitor']
Energy Efficiency,"> Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`. Will be a very funny task to do. . EDIT: CTRL+F on 'getValue()[' shows +1000 hits.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619:60,reduce,reduce,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619,1,['reduce'],['reduce']
Energy Efficiency,"> Thanks again @ScheiklP for these investigations !; > ; > Normally the reset function is not supposed to have any cleanup results as it is only there to set again (re-set) the component in a previous state.; > ; > It is the ""cleanup"" that is called before removal/deletion of the component from the graph. Most of these components also do not have a `cleanup` function :D . I adapted the `sofaProjectExample` to match the python scene above to make memory profiling and debugging a bit easier. Same memory leak occurs. The code:; ```cpp; #include <sofa/defaulttype/VecTypes.h>. #include <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::com",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:377,adapt,adapted,377,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147,1,['adapt'],['adapted']
Energy Efficiency,"> The right syntax is the following:; > ; > ```c++; > const auto visualHaptionDOFSPtr = sofa::core::objectmodel::New<sofa::component::statecontainer::MechanicalObject<sofa::defaulttype::Rigid3dTypes>>();; > visualHaptionDOF = visualHaptionDOFSPtr.get();; > nodeHaptionVisual->addObject(visualHaptionDOFSPtr);; > visualHaptionDOF->name.setValue(""rigidDOF"");; > ```; > ; > Note that this plugin has not been maintained for a long time. You should expect some changes in order to make it work. Here are some changes I made today to fix the configuration: #4338. But it does not fix the compilation.; > ; > If you succeed to make it work, a pull request would be very welcome ;). We are in the process of adapting the sofa22.12 plugin for homebrew devices, with reference to the Haptic plugin. No problem of course, I'll commit our code as soon as it's aligned and tested.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1841943965:701,adapt,adapting,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1841943965,1,['adapt'],['adapting']
Energy Efficiency,"> yeah, happy to see the profiler is used!; > Nice improvement! I hope one day we will be able to display consumption per thread!!. That is also something in my mind",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2141#issuecomment-852810706:106,consumption,consumption,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141#issuecomment-852810706,1,['consumption'],['consumption']
Energy Efficiency,"@damienmarchal , discussions during the SOFA-dev meeting lead to a question over the developed design and your opinion is needed. . The problem was that some scenes tests where crashing at exit. This is due to the SofaPython3 cache (`s_objectcache` there https://github.com/sofa-framework/SofaPython3/blob/1b5d271aa21df06c4c5ab75599e364adb0c1e9be/Plugin/src/SofaPython3/DataHelper.cpp#L252C1-L252C73) . The problem was that this is a static object containing python objects and is thus cleaned at the very end of the program exit, after the python interpreter, which is not authorized. . To fix it, following [pybind11 suggestions](https://pybind11.readthedocs.io/en/stable/advanced/misc.html) I've added a member to the module Sofa.Core that insured that the cleanup is called while the interpreter is still alive (see the PR https://github.com/sofa-framework/SofaPython3/pull/425). But is was not enough because the interpreter is not cleaned correctly either : the static method ""Release"" of SofaPython3, in charge of cleaning up python and deleting the interpreter was never called when launching scene in runSofa. . This lead to the need of cleaning up *explicitly* the plugin before exiting the main function. This design was not liked by every dev, some wanting a Raii-like cleanup, in the destructor of some member, which is in my mind not possible because the interpreter instance is static in the SofaPython3 plugin and thus we have no guaranty that it would not be deleted before any other static member.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216:1011,charge,charge,1011,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216,1,['charge'],['charge']
Energy Efficiency,"@damienmarchal yes, we should schedule a discussion between you, alex, us (Hugo and/or me) and anyone interested, but outside the sofa dev meeting to come to a solution.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1651456950:30,schedul,schedule,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3938#issuecomment-1651456950,1,['schedul'],['schedule']
Energy Efficiency,"@damienmarchal, I move your comment here; __________________________________; To @guparan, @bcarrez, @fredroy we need to organize the merging process for efficient and smooth integration of the pending PRs. My suggestion is to now merge in row allow the pr:fix that have the pr:fast-merge ( #444 #443 #442 #436 #414 #422). There is also #423 which is a fatty one for which I don't know if we have to do it now or after the integration of the coding spring pr. . The planning I suggest is:; - integrate #444 #443 #442 #436 #414 #422 (so we have a version before deprecation); - integrate the deprecation PR; - integrate the pluginization PRs . Where to do #423 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-334467312:154,efficient,efficient,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-334467312,1,['efficient'],['efficient']
Energy Efficiency,"@epernod Sorry for that I'm quite sure this is not related to your PR. . EDIT: This week end we were upgrading all windows machine to faster ones. The problem you saw was specific to the memory consumption of vs2013 which, at certain moment larger than the allocated 12GB. This problem problem was solved by adding a larger virtual memory.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/164#issuecomment-284359668:194,consumption,consumption,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/164#issuecomment-284359668,2,"['allocate', 'consumption']","['allocated', 'consumption']"
Energy Efficiency,"@fredroy I had the same idea to add a template parameter. However, this class is used as a main type in all DataTypes (Vec3d, Rigid3d etc). Which means there is no mechanism to choose which version of the map (ordered or unordered) will be used. The type is imposed to all the component using the same DataTypes.; Also, this class days are counted. It has to be replaced by an efficient sparse matrix data structure. But when?; I am ready to add the template parameter if you think it is necessary.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2641#issuecomment-1024009369:377,efficient,efficient,377,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2641#issuecomment-1024009369,1,['efficient'],['efficient']
Energy Efficiency,"@fspadoni Is the task scheduler designed to have local schedulers? For example, can I have a task scheduler specific to a component? Is it restricted to have only one instance per derived type?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1927#issuecomment-801058602:22,schedul,scheduler,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927#issuecomment-801058602,3,['schedul'],"['scheduler', 'schedulers']"
Energy Efficiency,@guparan & @fjourdes ; Can someone be in charge of solving this ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/463#issuecomment-342444593:41,charge,charge,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/463#issuecomment-342444593,1,['charge'],['charge']
Energy Efficiency,"@hugtalbot ; Normally color scales for ""importance"" are always from green to red passing by yellow and orange. So blue is bad because it is just out of scale :); So yellow and orange are probably better ones as they convey ""importance"". But, now on the readability side, some colors are very visible on a dark theme but not at all on very poorly on white one. On that side cyan (the blue that was used) and yellow (you are suggesting in this PR) perform poorly. Some orange may work well in both cases. I found this which could help https://www.thoughtco.com/contrasting-foreground-background-colors-4061363 to find color scheme that work good enough.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1576298426:68,green,green,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1576298426,1,['green'],['green']
Energy Efficiency,"@hugtalbot Correct! This actually works with the IdentityMapping, but I'd be interested in using a reduced topology for the collision model.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487895951:99,reduce,reduced,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487895951,1,['reduce'],['reduced']
Energy Efficiency,@hugtalbot The code seems ok to me and fix test that are bugued. ; I vote for fast integration ASAP we have an all green dashboard.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/143#issuecomment-275706127:115,green,green,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/143#issuecomment-275706127,1,['green'],['green']
Energy Efficiency,"@hugtalbot Yes, It is related to QT configuration, and It's hard to build in MAC M2 Processor with. I tried to compile and install the qt with source code, but it is not adapted to my laptop. I hope the successful case can be provided if possible and I will follow it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698:170,adapt,adapted,170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698,1,['adapt'],['adapted']
Energy Efficiency,"@marques-bruno Great list of types :). I think it would make sense to make this data factory a real factory with its own .h/.cpp, and set of method to add/remove element to it. This PSDEFactory (Actually a DataFactory) may be an attribute of PythonEnvironment. . Now about merging the PSDE with the PythonFactory, this sound is a different issue to me. As far as I can say the PythonFactory is in charge of generating the python binding of the 'right' type for an object (so a BaseObject* to the right SofaPython.Binding_SpecificObject) while the PSDEFactory is more in charge of allocating the right Data<> type (a string to Data<something>). I think a closer factory to look is how the Data<> are converted to and from python type (eg when we are accessing them with the getattr/findData). . I didn't investigated to much but I also have several worries about the existing PythonFactory: ; - the long sequence of if-else to detect among a set of ""hard code"" (why those ones, why there is an implicit ordering), ; - the complexity to match a type seems to be linear with the number of type (so the more type there will be in the factory the slowest it will be).; - this linear search is done *each time* an object is crossing the Sofa to Python border (which means each time we use Python to access Sofa object we pay this price).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-389395402:397,charge,charge,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-389395402,2,['charge'],['charge']
Energy Efficiency,"@raphaeldeimel That would be the idea. Note you can do it w/o modifying the collision model class.; Each object has a Data named ""tags"" dedicated to quickly hack these kinds of functionalities. Note that it is not an integer, so the lookup in a table would be less efficient. Note also that collision models have a Data 'group', that is here to decide who should collide with who, and you could certainly hack it too. More globally some parameters should be in external tables (not only the contact parameters but also the method to detect the collision, and the method to answer the contact, etc.) And an elegant way to do so should be discussed, but it is a quite big project.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/81#issuecomment-266072587:265,efficient,efficient,265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/81#issuecomment-266072587,1,['efficient'],['efficient']
Energy Efficiency,"After some tests on a cantilever beam with a LDL solver and a scalar CSR matrix:. - `addKToMatrix` takes a large part of the time for low number of elements; - `addKToMatrix` takes less and less part of the time as the number of elements grows; - The time consuming operation (more than 90% of the time) in `addKToMatrix` is `r.matrix->add(i, j, v)`. In the test, `r.matrix` is of type `CompressedRowSparseMatrix<double>`, and I did not test a bloc-based matrix. ; - In `r.matrix->add`, `wbloc` is the time consuming function. My profiler did not tell me more information inside this function. I tried to pre-allocate `btemp` before all the `add` calls, but it does not help. I suspect the bad performances come from the algorithm itself which must find an element in sorted arrays at each `add` call.; - Since the bad performances come from `CompressedRowSparseMatrix<double>::add`, it would be interesting to parallelize the calls to `add`. However, I doubt `CompressedRowSparseMatrix` is thread-safe...; - My tests are in https://github.com/alxbilger/sofa/commit/41584bceaf5d5666c362cdfb28238318c750af9e. But I don't plan to merge it since it does not improve the performances",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-868309098:609,allocate,allocate,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-868309098,1,['allocate'],['allocate']
Energy Efficiency,"Agreed, I don't like adding a Data in every component just for this.; I think the underlying issue of having an empty scene bounding box when there is not visual models could also by fixed relatively simply and without introducing much cost by:; - including the collision models top-most bounding boxes that are already computed during each time step (in fact this could be the only information used by default, as it is cheaper in practice to obtain than the visual bounding boxes because it's already computed for the broad phase); - and/or having a flag in `DrawTool` to look at the given coordinates to compute a bounding box of all non-visual but visible elements. As the DrawTool API is quite inefficient anyway the overhead may be insignificant, and it will disappear in cases where there is no debug information visualised. To me this could be controlled by one of the master component in the root node, either the `AnimationLoop` (as the issue is when `UpdateBBox` happens and how it is implemented, bonus point is that this component would then have the ability to schedule it in parallel with the other computations), or the `VisualManager` (as the current use cases for bounding boxes are currently exclusively to setup the scene rendering bounds and/or show bounds of a subgraph). This control could either be by implementing this update directly, or providing the choice that is setup for this particular scene (which alternative to use, which frequency of bbox updates).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/29#issuecomment-261507387:1075,schedul,schedule,1075,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/29#issuecomment-261507387,1,['schedul'],['schedule']
Energy Efficiency,"All green, ready",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1185038429:4,green,green,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1185038429,1,['green'],['green']
Energy Efficiency,"As Guillaume open the sofa refactoring pandora box by submitting this PR and we are full of energy after holiday here is a bit unrelated question... . Do we seriously needs bwdInit ? . I looked into the code base and ; init() => 1057 matches; reinit() => 388 matches; bwdInit() => 60 matches. on the 60 match, half of that is for .h, in the 30 remaining... lot of other seems 'weird'. So, should keep this mechanism ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416993613:92,energy,energy,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416993613,1,['energy'],['energy']
Energy Efficiency,"As a reaction to your proposition I adapted my scene and dropped the .scn file and now it works, thank you for your work! . PS (another issue?): Since createScene does not have the argument self - that I am using to communicate values between the different functions - I inserted a python script controller, i.e. ; ```python; def createScene(rootNode) :; rootNode.createObject('PythonScriptController',classname=""convergenceBeam_Template"", ; filename=""convergenceBeam_TemplatePython.py"", ... , ; name=""convergenceBeam_Template"", variables=sys.argv[1]+"" ""+sys.argv[2]); ```; and ; ```python; class convergenceBeam_Template (Sofa.PythonScriptController):; def createGraph(self,rootNode):; self.defineDataFromJson(self.findData(""variables"").value[0][0]); self.outputJsonAtTimeStep = ast.literal_eval(self.findData(""variables"").value[1][0]); ```; This does not seem to be very elegant.; 1. Could self be used as well as an argument for createScene and createSceneAndController?; 2. Is there another way to communicate values between the functions (e.g. createScene and onBeginAnimationStep)?. If there is none, I am open to write another issue (I discussed with a colleague of mine and he had the same problem before)!. [@maxime-tournier edit: fixed formatting]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356#issuecomment-324711750:36,adapt,adapted,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356#issuecomment-324711750,1,['adapt'],['adapted']
Energy Efficiency,"CG is already in the list my bad, I forgot it sorry!. The description corresponds to a 1st level / layer of SOFA NG.; We intend to have (still in SOFA NG) a second layer of components. This second layer would focus on : ; - state of the art algorithm (like EulerImplicit); - advanced, efficient and validated algorithms (cf Project https://github.com/sofa-framework/sofa/projects/6). I would rather see the EulerImplicit in this second level.; The first level would propose only one implementation per category (e.g. one integration scheme). @matthieu-nesme, you would then rather like to see one explicit and one implicit integration scheme, right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/247#issuecomment-295709649:285,efficient,efficient,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/247#issuecomment-295709649,1,['efficient'],['efficient']
Energy Efficiency,Change has been done. CI is fine. Green light.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1396#issuecomment-640439789:34,Green,Green,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1396#issuecomment-640439789,1,['Green'],['Green']
Energy Efficiency,"Cool, green is my favorite color ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369890402:6,green,green,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369890402,1,['green'],['green']
Energy Efficiency,Dashboard is down but status checks are green. Soooo ... ready?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1181442289:40,green,green,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1181442289,1,['green'],['green']
Energy Efficiency,"Dear @faichele ,. Following the SOFA dev meeting 25/01/2017.; Multi-threading plugin proposed by @faichele. Your new plugin implements a static scheduling for collision detection. The implementation does not require any change of the existing collision components of SOFA. The bounding volume hierarchy methods is parallelized. It should be easy to use. Compared to the approach used in the MultiThreading plugin using the ""work-stealing"" scheduling pattern (https://en.wikipedia.org/wiki/Work_stealing), Fabian's implementation is based on ""conventional"" work-sharing, with a ""round-robin"" assignment of collision pair checks per thread. One extension is the fact that worker threads are persistent: they do not terminate after processing all assigned tasks, and no new threads are spawned when new collision pair check tasks are added to the thread pool. Instead, worker threads enter a ""sleeping"" state to avoid using CPU cycles when no tasks are processed. This avoids unnecessary respawning of threads every 10 to 50 ms, since the collision detection is typically called very often and in quick succession. @faichele , you mentioned it will be released under open-source license and with standalone for beta testing. Tests on potential performance gains remain to do (number of per checks).; Do not hesitate to correct me. In the context of the recent coding sprint, some new feature around multithreading were added in a branch ( https://github.com/sofa-framework/sofa/tree/issofa_multithreading ), not merged yet. This should be discussed and merged at the upcoming STC. @JeremieA , would you agree to prepare a short illustration/explanation of the API changes of your multithreading feature branch?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830:144,schedul,scheduling,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830,2,['schedul'],['scheduling']
Energy Efficiency,"Dependency tracking between libraries is a very serious issue and the state in Sofa is bad. We are currently mixing system specific management (apt get install someLibs, manual install on windows) all combined with hard copy of other ones in extlibs. . I found https://hackernoon.com/approaches-to-c-dependency-management-or-why-we-built-buckaroo-26049d4646e7 to be an interesting reading to understand a bit more the dependency problem in c/c++. . To improve the Sofa situation are :; - git submodule; - CMake's ExternalProject_add ; - buckaroo. The best is probably buckaroo but, given that it is a big work to use it and we have much higher priority task, CMake ExternalProject_add sound's a good improvement with a reduced cost.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369914314:719,reduce,reduced,719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369914314,1,['reduce'],['reduced']
Energy Efficiency,Did you had time to work on this so that we have a super green dashboard for 17.12 :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/575#issuecomment-361520309:57,green,green,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/575#issuecomment-361520309,1,['green'],['green']
Energy Efficiency,Done and all green,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1387#issuecomment-632301551:13,green,green,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1387#issuecomment-632301551,1,['green'],['green']
Energy Efficiency,Dot-to-underscore replacement had to be done earlier in the macro. Fixed it.; If CI is green then ready!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1701#issuecomment-758110542:87,green,green,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1701#issuecomment-758110542,1,['green'],['green']
Energy Efficiency,Dreams do come true ... It's green !!!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-369698486:29,green,green,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-369698486,1,['green'],['green']
Energy Efficiency,Fast-merge + all green = 👍,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1578#issuecomment-719918526:17,green,green,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1578#issuecomment-719918526,1,['green'],['green']
Energy Efficiency,"For some reasons, the static task scheduler could not be destroyed by the end of the program because it results into a deadlock: the worker threads are not woken up by the destructor of the task scheduler. I did not find how to fix this issue. Therefore, I clear the task schedulers before the end of the program, in the module `cleanup` function. It did not happened before because the task scheduler was never destroyed resulting in a memory leak and not-joined idle threads.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347:34,schedul,scheduler,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1315357347,4,['schedul'],"['scheduler', 'schedulers']"
Energy Efficiency,"Found it, this is my fault (sorry):. - we have some mappings implemented in python in Compliant; - setting up the mapping uses scipy, which is not the expected version on some plateform (mostly osx for now), which triggers a python error; - the python code returns to c++ before having a chance to finish the test and keeps going on forever. I fixed the offending script, assuming it is the only one. I'll monitor the builds to see if there's more. I'll try to add some mechanism to detect uncaught python exceptions during test execution, and fail the script should this happen. With all my apologies for killing the CI engine :-/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289499063:406,monitor,monitor,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289499063,1,['monitor'],['monitor']
Energy Efficiency,Green dashboard ... hold your breath !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/478#issuecomment-337484233:0,Green,Green,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/478#issuecomment-337484233,1,['Green'],['Green']
Energy Efficiency,Green green green... may I ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1485#issuecomment-694629313:0,Green,Green,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1485#issuecomment-694629313,3,"['Green', 'green']","['Green', 'green']"
Energy Efficiency,"Hello, I copied the 3 instruments on the Beam Adapter plug-in_ collis. The scn xml format is converted to the python format, and then it can be opened normally through SOFA, but it is stuck when you click animate. What is the reason?; import sys; import Sofa. def createScene(rootNode):; rootNode.addObject('RequiredPlugin',; pluginName='BeamAdapter SofaMeshCollision SofaBoundaryCondition SofaConstraint SofaMiscCollision SofaDeformable SofaGeneralLinearSolver SofaImplicitOdeSolver SofaLoader SofaOpenglVisual SofaTopologyMapping'); rootNode.addObject('VisualStyle', displayFlags='showVisualModels showBehaviorModels showCollisionModels hideMappings hideForceFields'). rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('FreeMotionAnimationLoop'). rootNode.addObject('LCPConstraintSolver',mu='0.1',tolerance='1e-10',maxIt='1000',build_lcp='false'); rootNode.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance',name='localmindistance',alarmDistance='2',contactDistance='1',angleCone='0.8',coneFactor='0.8'); rootNode.addObject('DefaultContactManager',name='Response',response='FrictionContact'); rootNode.addObject('DefaultCollisionGroupManager',name='Group'). topoLines_cath = rootNode.addChild('topoLines_cath'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',template='Rigid3d',printLog='0',length=1000.0, straightLength=600,spireDiameter=4000.0,spireHeight=0.0,densityOfBeams=[40,10],numEdges=200, numEdgesCollis=[40,20],youngModulus=10000 ,youngModulusExtremity=10000); topoLines_cath.addObject('EdgeSetTopologyContainer',name='meshLinesCath'); topoLines_cath.addObject('EdgeSetTopologyModifier', name='Modifier'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo',template='Rigid3d'); topoLines_cath.addObject('MechanicalObject',template='Rigid3d',name='dofTopo1'). topoLines_guide = rootNode.addChild('topoL",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:46,Adapt,Adapter,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['Adapter']
Energy Efficiency,"Here are the screenshots:. Before:; ![Screenshot 2021-11-09 092420](https://user-images.githubusercontent.com/10572752/140892200-629ad881-ecda-4566-8e6f-565194cec7cb.png). After:; ![Screenshot 2021-11-09 094012](https://user-images.githubusercontent.com/10572752/140892246-c1d4909b-d5df-44b5-9dbe-5ec36da16549.png). As you can see, the graph is more visible, but the application window is no longer centered on the screen. I fixed it in another PR. Notes:; - The viewer size does not change with this PR; - The window size (changed from 800x600 to 1280x900 in this PR) has no effect because it is overwritten when setting the viewer resolution. With this PR, it remains unchanged (still 800x600), so no effect on the final window size.; - The minimum window height (changed from 481 to 700) seems to have an effect when the window is dragged from one monitor to the other and back (at least on Windows). During this movement, the window is resized (probably to adapt to the resolution of the other monitor). If the window is dragged from monitor 1 to monitor 2, and then from monitor 2 to monitor 1, the window size is different from the initial window size. This does not happen when the minimum window height is 481. Since it does not change the initial window size, I recommend to keep the value to 481.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2416#issuecomment-964013103:851,monitor,monitor,851,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2416#issuecomment-964013103,7,"['adapt', 'monitor']","['adapt', 'monitor']"
Energy Efficiency,"Here is a doc for you to start from:. Forward declaration; ===============; To reduce the amount of file inclusion in Sofa and thus compilation time it is possible to use forward declaration. ; A forward declaration is a an incomplete type ta complete definition is not provided. ; ```cpp; class AClass; ///< this is a forward declaration of a type. /// This is the full declaration + definition of a type; class AClass ; {; public:; }; ```; Forward declaration can be used in place of the complete type (declaration+definition) when the ""inner"" details of the type are not needed. A classical scenario is the following; ```cpp; #include <sofa/core/objectmodel/BaseObject>; bool myFunction1(BaseObject* a); {; return doSomethingWith(a);; }; ```; As we are manipulating the 'a' object via a pointer and passing it to the doSomethingWith function there is no need to know any details of the BaseObject to compile that properly. Using a forward declaration for BaseObject would save us from the inclusion of the file ```#include <sofa/core/objectmodel/BaseObject>```. Where to put forward declaration; --------------------------------------------; Forward declaration must be in a file called ```fwd.h```. The fwd.h can be located at the module root directory.; Eg:; ```; sofa/core/fwd.h; ```; If there is a lot of forward declaration it is allowed to have a per sub-module ```fwd.h``` file. ; Eg:; ```; sofa/core/objectmodel/fwd.h; sofa/core/behavior/fwd.h; ```; In that case it is mandatory that the module file contains them all. In our example ; ```cpp; sofa/core/fwd.h; #include<sofa/core/objectmodel/fwd.h>; #include<sofa/core/behavior/fwd.h>; ```. Opaque API ; =========; When it is not desirable to have access the full type definition it is possible to make or use what is called an opaque API. The Opaque API mimmics the methods provided by a class but relying only on forward declaration. ; Exemple of the ""transparent"" API: ; ```cpp; #include <Context>; #include <BaseNode>; namespace sofa::s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1764#issuecomment-780848561:79,reduce,reduce,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764#issuecomment-780848561,1,['reduce'],['reduce']
Energy Efficiency,"Hey @nhnhan92 ; Thank you so much for your patience and your efforts regarding the headers. It is great to have homogeneous headers for the project, especially for people to use SOFA under one single LGPL license. To my best knowledge, it is not really possible to have ""two versions"" of the code in SOFA and a plugin of yours. But here is what I would recommend: once this PR is merged, create a specific branch in your fork where you can implement / test new evolutions. Each time you think the time is appropriate to contribute it back, you can simply pull-request your branch. This is the power of Git!. Finally, regarding my remark about the test, I was thinkg about a C++ test (that we run on the CI, you can have a look to the C++ files _\*\*\*\_test.cpp_. In this test, it would be ideal to have a numerical validation, assessing that the shell model is following the theoretical behavior (e.g. using method of manufactured solutions (MMS)); See: https://link.springer.com/article/10.1007/s00366-017-0572-4. Let us know what you think about it. We can make it step by step!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-786281204:593,power,power,593,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-786281204,1,['power'],['power']
Energy Efficiency,Hi @Gabriele111 I do not have any experience with the cmake-gui. That's also why I did not include it in the sofa_env instructions on how to build SOFA. ;); https://github.com/ScheiklP/sofa_env_devel/blob/main/docs/source/setting_up_sofa.rst. Also the default plugin list is manually adapted AFTER compiling SOFA.; https://github.com/ScheiklP/sofa_env_devel/blob/main/docs/source/setting_up_sofa.rst#:~:text=Add%20SofaPython3%20to%20the%20list%20of%20default%20plugins%20so%20that%20SOFA%20loads%20it%20by%20default.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1768316751:284,adapt,adapted,284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1768316751,1,['adapt'],['adapted']
Energy Efficiency,"Hi @fjourdes, thanks for the suggestion. I used HOBAK for the implementation, adapting it to SOFA `TetrahedronHyperelasticityFEMForceField`. I implemented only the material. Therefore, everything outside of the material, such as matrix clamping, is not yet implemented. Note that HOBAK has also a test suite, with some similarities with mine (test derivative against finite differences). I guess we can check that both test suites match for the same input.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2024912176:78,adapt,adapting,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2024912176,1,['adapt'],['adapting']
Energy Efficiency,"Hi @fredroy,. I fully support removing the dependency to SceneCreator. Thanks for the effort. . Small comment: ; I think that using simpleapi is a better option for scene creation than using the raw c++one:; - it reduce the need for c++ includes (so the dependency graph (aka ""the giant spaggheti bowl"") pressure). ; - it reduce the compilation time,; - in theory simple and consistant API aligned with the python one (but It haven't been updated so it match with SofaPython3... but doing such a thing is worth the effort).; ; ; EDIT: I just try how would look a modernize simpleapi (https://godbolt.org/z/9EW9dbnvn)... and think I'm going to like doing things like that (thanks to c++ std::any):; ```cpp; mo = createObject(""MechanicalObject"",; {{""name"", std::string{""myMo""}}, ; {""position"", {{1,2,3},{4,5,6}}},; {""enable"", true}});; node.addObject(mo);; ```; The syntax is nice and there is no more this ugly data to string to data creation using ""BaseObjectDescription"" and its parse method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882:213,reduce,reduce,213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882,2,['reduce'],['reduce']
Energy Efficiency,"Hi @sofa-framework/reviewers,. Here is a follow up of NG project for April. ; The project is huge and still requires a lot of iterations to get the best refactoring process but we are going in the right direction :+1: . ## Discussions; It was decided to push all NG changes to [a specific NG branch](https://github.com/sofa-framework/sofa/tree/ng) on sofa-framework.; Still, all the developments will go through the PR process. Reminder: your feedback is VERY important, we need it to adapt our work and minimize future rollbacks. **Do not hesitate to put any comment in the pull-requests.**. ## Refactoring and adapting SPM for Sofa.Component.Utils. SPM is the set of scripts we use to make our work easily reproducible. You can check it out [here](https://github.com/guparan/sofa2ng). This work made me realize that it will be very hard, if not impossible, to anticipate every subtle change needed by the refactoring.; - Do we want SPM to be an all inclusive script to refactor completely SOFA? ; every refactoring is unique and needs to change SPM ; -> namespace handling ; -> includes refactoring; - Or should we prefer it to be an easy-to-use script to **bootstrap** any refactoring? ; -> very specific changes will have to be done by hand. I propose to go for solution 2 and to provide a git patch covering the work done after SPM job (fixing includes, fixing namespaces, ...). The progress of this task is **85%** since I now have to create the patch and to provide everything in the PR. ## Moving on with Sofa.Helper.Bvh; Following [the latest iteration on NG architecture](https://annuel2.framapad.org/p/sofang-v3) and Damien's first draft in his [cleanTheMessStep1](https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng) branch, I started refactoring SofaFramework with Sofa.Helper.Bvh. This task needed me to heavily change/adapt SPM. It contributed to make me prefer solution 2 above. The progress of this task is **60%**. TODO:; - update the recipe with latest SPM changes (namesp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811:485,adapt,adapt,485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811,2,['adapt'],"['adapt', 'adapting']"
Energy Efficiency,"Hi @thomas-lemaire,. About the ""\n"" ... why would it breaks windows console printing ? Windows and linux does not have the same ""\n"" but a windows app emits the ""\n"" the windows system understand. About using ""\n"" or better std::endl. My target was to supports messages written with a simple markdown syntax for which the ""\n"" is not an explicit line break, it is "" \n"" (double-space before the \n) . So i replaced std::endl/sendl by this "" \n"" ; But I found that ugly and hard to read so I finally made 'msgendl' that contains the explicit markdown line break, but I forgot to remove the old manually placed "" \n"" I used all around. . Now I will have to re-fix the old "" \n"" all around (but this is nothing :)). Do you think msgendl is ok ? ; Do you like the msgendl ?. The change on how the messages are printed in runSofa is visible here: ; ![newmessage](https://cloud.githubusercontent.com/assets/12644882/23545144/72df7122-fffa-11e6-8c53-fc9a4415c493.png). The two panels Output/Error are now merged into a single ""Message"" one and the panel now shows in its title the number of messages (in this PR I removed the column with ""suggest a better message). In the Graph view there is also a small alert (green, yellow, red) on top of the icons showing the kind of message an object have. . EDIT: I fixed the "" \n""",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190#issuecomment-283905162:1206,green,green,1206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190#issuecomment-283905162,1,['green'],['green']
Energy Efficiency,"Hi Damien,. Actually, Jenkins is already doing this, here is a regression: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/3955/testReport/(root)/ImagePNG_test/ImagePNG_NoFile/. We can also access this results with a GET request: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/3955/testReport/api/json?pretty=true; Just search for ""REGRESSION"". So it is possible to count them in the ""post build"" step :). About colors, I don't agree with you because it would make people think ""It's green, I don't care about new tests failing"". If we are adding (failing) tests, it is precisely because we want to warn people that something is broken and needs to be fixed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/52#issuecomment-258823053:499,green,green,499,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/52#issuecomment-258823053,1,['green'],['green']
Energy Efficiency,"Hi Damien,. Thanks a lot for your answer!. Regarding the BarycentricMapping, I indeed wasn't sure of which of the input and the output was driving the other (although I knew that the mechanical model was supposed to drive the collision model). It is definitely clear with your explanation. So I understand that there is no bug regarding the behaviour of the BarycentricMapping (as you pointed out), as it is not suppose to work for another input types than Vec3d.; For me, the (very minor) issue would rather be with the error message, as you said in your NB. My apologies for the typo, indeed, I hadn't paid attention...; As for the unexpected behaviour, I haven't tried yet to track down what is happening. As I'm looking to use a reduced topology for my collision model, I might investigate it more in a near future. If so, I'll report here anything I find unsettling.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487582657:733,reduce,reduced,733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487582657,1,['reduce'],['reduced']
Energy Efficiency,"Hi Damien,; Thanks for the input,I see now why a different type naming was used for the factory, I didn't know it was the type ""encoding"" for python. I also think that explicit data typing is a necessary feature to override an implicit type introspection. In my plugin for instance I have some ""relatively complex"" data structures that are reduced to basic numpy arrays when passed to python, and for which type introspection from python back to cpp wouldn't give the correct type. Also, wouldn't it make sense to completely override the datatype::name() string for the python style typename, already in the sofa DataTypeInfo, not just in the python factory?; It would break scenes that explicits template types, but it would be more consistent. Looking fwd to see how things goes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380074977:340,reduce,reduced,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380074977,1,['reduce'],['reduced']
Energy Efficiency,"Hi Mathieu,. Thank you for the feedback... the GLSL stuff is a mistake... I didn't knew that pull-request was for a branch and not for a specific commit. So i continued to to work in this branch (I will not do the same mistake in the future). . Now to answer your question...the overhead is near zero. ; - The GLSLListener is triggered by the file FileMonitor. ; - FileMonitor is using the event based ""select"" system API and is not actively 'polling' the files. AFAIK this is the most efficient way to monitor files. ; - If your application don't call FileMonitor::update(0) then this cost nothing. Currently only runSofa is calling FileMonitor::update(0) when started with the -i (for interactive) command line option. . So the different scenarios is:; - runSofa -i & changing the file (this cost the reload of the shader); - runSofa -i & not changing the file (this cost calling the select system call) ; - runSofa as usual...this cost nothing. . I hope I answer you question and yet again, thank you for your feedback on this PR. . Now about FileListener... it is part of the FileMonitor API that is already in Sofa. . DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/55#issuecomment-261506734:486,efficient,efficient,486,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/55#issuecomment-261506734,2,"['efficient', 'monitor']","['efficient', 'monitor']"
Energy Efficiency,"Hi Neustradamus,. Improving the packaging and installation process of binary version of Sofa is something we really would like to improve. @guparan already made great work on that but as we are short on man-power this is very slow, small step are done at each Sofa release. . Thanks for you suggestion to auto-install python (and numpy), this would definitely be nice feature. ; In case you have knowledge to do such a thing and are you interested in helping I think @guparan have dedicated github branches with the additional CMAKE scripts he use for packaging the release.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454704670:207,power,power,207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454704670,1,['power'],['power']
Energy Efficiency,"Hi bruno, thanks for this PR :). - It compiles nicely on the different targets on the CI,; - The implementation follows the unit-test of file monitor. . So it looks ok to me. @guparan ; Is there a way to make something like ([ci-fullbuild]) so that we see if there is compiler's warning in the PR code ? This could be really useful.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/109#issuecomment-267908657:142,monitor,monitor,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/109#issuecomment-267908657,1,['monitor'],['monitor']
Energy Efficiency,"Hi damien !. It's a great news that it reduces the compilation time. Indeed, I didn't see that this way :); I think my problem can easily be fixed taking a vector of string and doing the parse in the graph myself to get basedata pointers. I have a specific component that exports a list of data at specific time using the << opereator. I previously used the datalink feature on basedata to get the pointers, but indeed it's maybe a specific need that does not justify 20% additional compilation time ! . Therefore, thanks for your job and I will implement the string version for this specific component. . Hadrien.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1503#issuecomment-707185890:39,reduce,reduces,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1503#issuecomment-707185890,1,['reduce'],['reduces']
Energy Efficiency,"Hi guillaume, . Many thanks for the links to the jenkins API, this will helps us in differentiating the tests. . I think the meaning of the colors depend on what the dash board is used for:; a) if the dash board is used to know what is the current state of the sofa code base (so answer the question: ""is this version of sofa good"") then, as you say, it should be red showing that something is bad. . b) but, if the dash board is used to get feedback of a given (personal) contribution (answering the question: ""did I introduced regression or is my contribution positive""). In this perspective a transition from green-to-red will be considered as:; - ""SHIT, I did something wrong !""; - ""OMG, other people will see that !""; - ""I quickly need to revert or fix that mess"". ; - ""But I have no time to fix the Sofa bug...so I remove the test i made showing an existing defect"" . From what I see in the defrost team the dash board is only use in the (b) situation and I regularly see people not commiting because they are afraid of putting the dash board to red. . Consequently and if we want to increase the number of commits (containing tests showing existing sofa defect) we should reward contributor with an positive feedback mecanism (whatever it is). DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/52#issuecomment-258838277:612,green,green-to-red,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/52#issuecomment-258838277,1,['green'],['green-to-red']
Energy Efficiency,"Hi mathieu,. The provided code force a reload of the dependencies *each* time the runFile function is called. . I see two problem with this approach: ; - there is a large 'un-needed' overhead that will be linear with the number of PythonScriptController in the scene as well as in the amount of modules to reload (the depth of import dependency graph). . - there is *possibly* memory problems here. Let's me explain, normally all PythonScriptController are binded to functions that are from the same module set (the groupe of imported modules), this is made possible because python is caching the imported modules. In the PR we flush the module set at each runFile so each PythonScriptController will be binded to its own reloaded (""private"") version of the module. . So for the moment I think that adding a single PythonEnvironment object automatically in a scene with a cleanup function to unload the module will be either conceptually cleaner and more efficient. . EDIT: What do you think about the idea of having the PythonEnvironment as an object in the scene ? I can easily code that but if you don't think it good I don't want to waste time.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286119842:955,efficient,efficient,955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286119842,1,['efficient'],['efficient']
Energy Efficiency,"Hi raffaella,. We really appreciate feedback & suggestion, so thank you. . On the Python side we are currently actively working on improving the whole way to report error. This take place in PR #304 ; So it is the right moment to have that to be improved because release the next sofa release (17.12) will change things. . More generally Sofa messages are from ok to really bad but we lack (wo)man-power to fix all that so If you or anyone feel the envy to participate on this kind of task please don't hesitate because it is very important to have good error messages. . Damien.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/333#issuecomment-315892439:398,power,power,398,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/333#issuecomment-315892439,1,['power'],['power']
Energy Efficiency,"Hi there, . I would bet on a mismatch between system python and user-installed python (osx, right?). You can probably find out by printing `sys.path` from a test sofa scene, and from a regular python script. If the path for the standard lib don't match you should see it, then adapt the python path in the cmake command.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347198220:277,adapt,adapt,277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347198220,1,['adapt'],['adapt']
Energy Efficiency,"Hi there,. Unless you really have to, I would suggest you drop `.scn` files altogether and work with python files directly: it's easier to work with and waaay more powerful. If it were just me, I'd have dropped `.scn` support a long time ago or rewritten it with 100 lines of python :-) Some people may disagree though. I'm not sure there is a nice way of forwarding command line args from the `.scn` scene to the python script. It seems possible though, but I don't want to mess with existing code passing arguments to python scripts as it may break older scenes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356#issuecomment-324084837:164,power,powerful,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356#issuecomment-324084837,1,['power'],['powerful']
Energy Efficiency,"Hi, as scheduled I just reverted the last commit already fix or redundant with #556",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356617616:7,schedul,scheduled,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356617616,1,['schedul'],['scheduled']
Energy Efficiency,Ho damn...two full build + scene that are green builds... and not one to cheers (deep sadness); https://www.sofa-framework.org/dash/?branch=pr/fixTestScene,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357966795:42,green,green,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357966795,1,['green'],['green']
Energy Efficiency,"I added here a second version based on having a single PythonEnvironment in the scene. . This component have in charge the cleaning of python environment when the scene is about to be destroyed. . Conceptually it is quite ok, the drawback is that to be installled in the scene it have to check it does not yet existing using the getNodeObject function which is a non-constant time one. ; So compared to the 'reinit' based approach it have overhead.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/198#issuecomment-286415062:112,charge,charge,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/198#issuecomment-286415062,1,['charge'],['charge']
Energy Efficiency,"I don't know about the status of this component, but I just want to keep the compatibility with this component in my matrix refactoring branch. Note that there is a similar component in BeamAdapter: AdaptiveBeamForceFieldAndMass",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1272876179:199,Adapt,AdaptiveBeamForceFieldAndMass,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1272876179,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Energy Efficiency,"I have advance a bit on this and I have a robus implementation. But there is an issue regarding rayleigh damping. If we consider implicit damping forces, we would have something like f = - (a*M + b*K)*v_new. That M and K are constants (for example, they can be the M and K of the current point (M0 and K0 for instance)). They must remain constant, or we should take their derivatives. . That means that during the linear solve, we have to compute M and K of the current linealization point and M0 and K0 of the point where we compute the damping forces. That is not efficient at all. For example, with a CG solver, we would need to change the state of the mechanical objects for each CG iteration",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-908783028:566,efficient,efficient,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-908783028,1,['efficient'],['efficient']
Energy Efficiency,"I have identified the actual issue in ```$sofa_dir/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - line 124 has a few mentions of ```/${PROJECT_NAME}``` too much, removing these at least reduces the header install path to ```$sofa_dir/build/install/include/extlibs/QGLViewer/QGLViewer/*.h```; - for some reason the ```MOC_HEADER_FILES``` (line 21 ff.) are not considered for copying by your ```sofa_create_package_with_targets``` macro. For testing I have simply copied the headers listed in ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES```. This does not affect the build and finally copies the previously missing MOC headers to the install include directory. I can make a pull request for this. Or I can wait a bit if someone has an idea on how to properly copy/install the MOC_HEADERS without the redundant mentioning in both header lists.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674:196,reduce,reduces,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674,1,['reduce'],['reduces']
Energy Efficiency,"I made the code more concise, more efficient and clearer to me. It also removes the need of the variable which was initially shadowed. Let me know if you agree/disagree.; I also merged master.; I suggest also to move the methods definitions in the cpp file, but I did not want to be out of the scope of this PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2987#issuecomment-1152101840:35,efficient,efficient,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2987#issuecomment-1152101840,1,['efficient'],['efficient']
Energy Efficiency,"I recommand a fast-merge on this one. With this we will be able to add -j3 on windows builds...and on ""heap"" error we will reduce ""locally"" the number of jobs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/254#issuecomment-297685948:123,reduce,reduce,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/254#issuecomment-297685948,1,['reduce'],['reduce']
Energy Efficiency,I stopped the builds myself. CI power is needed for other PRs.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/644#issuecomment-384290207:32,power,power,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/644#issuecomment-384290207,1,['power'],['power']
Energy Efficiency,"I suggest using the memory sensitization tools provided by GCC or Clang - it is less hassle than valgrind. It also provides more detail regarding memory leaks. To do this, build Sofa with the additional flag: `cmake .. -DCMAKE_CXX_FLAGS=""${CMAKE_CXX_FLAGS} -fsanitize=address""`. Here is the output when running the example (CPP) scene provided by @ScheiklP. The 15 object(s) that are detected are come from the number of unloads performed (I decreased it to 15 from the original 1000 used in the scene by @ScheiklP). ```; =================================================================; ==445057==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 480 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d4160 in sofa::core::collision::TDetectionOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >* sofa::core::collision::BaseIntersector::createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:687,allocate,allocated,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['allocate'],['allocated']
Energy Efficiency,"I think that it is a good idea to treat the overall pb, not to miss something.; - removing msg buffers from Base; - removing printLog Data (but reading it from a parse function for backward compatibility.; - no need for sdebug, you can directly use msg_debug (or whatever). serr/sout can be kept not to become crazy, but no need to add more.; - It should be powerful enough to move some of the Data you added in Base directly in the msghandler (and set more globally these parameters).; - updating the gui to use the new msghandler buffers. Something else ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276954541:358,power,powerful,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276954541,1,['power'],['powerful']
Energy Efficiency,I think that this task is connected to several topics:. - connection of SOFA with other libraries (other modeling / visualization / collision tools); - adapt the simulation pipeline and have more control on it (ASSIST..) ; - hot restart of the simulation ; - helping the debug (which is not due to C++ problem but wrong parametrization / init of the simulation),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2005#issuecomment-1559256805:152,adapt,adapt,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005#issuecomment-1559256805,1,['adapt'],['adapt']
Energy Efficiency,"I tried with some scenes with BeamAdapter and there are crashes & stuff 😬; - the one in RestShapeSS was quite easy to spot.; - got problem too with `AdaptiveBeamForceFieldAndMass<DataTypes>::addForce` too when trying `SingleBeamDeployment.scn`.; I am suspecting there are some problems with size/resize/topologyChange because SingleBeam.scn works well (I think 😅); - the much more complicated scene `scenes/3instruments_collis.scn` has a problem with AdvancedTimer, while trying to find an id in the idmap. I am suspecting a corruption going somewhere else but no idea where.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1432511853:149,Adapt,AdaptiveBeamForceFieldAndMass,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1432511853,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Energy Efficiency,"I would like to schedule a hangout in the coming days to synchronize everyone's job on CI. I have the feeling that everyone is not up-to-date with the current CI status, and I came to the point I would not touch anything until I understand clearly what has been done recently. ; This includes jenkins updates, use of tests ci scripts, etc.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186#issuecomment-282669576:16,schedul,schedule,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186#issuecomment-282669576,1,['schedul'],['schedule']
Energy Efficiency,"I'm looking for the ""-"" in the read to detect the intervals syntax:; 0-5 or 0-10-2 as well as --5-5 or 10--10. This intervals syntax using '-' was not of my own and I'm actually quite surprised and happy it was possible to fix the crash & endless loop that were in the code while preserving the syntax and backward compatibility. . Now all this discussion about performance rise my interest as I wonder if all this discussion have a measurable impact on performances. As usual I cannot prevent myself to make a small benchmark. ; The benchmark is implemented in the test class so that we will be able to detect performance regression in the future. . First there is a +200ms variation between the same run so I average several runs which gaves these numbers: ; strtoll alone tooks 1645 ms to ""read"" 1 000 000 time a size 10 array. ; strtoll+early check of '-' tooks 1654 ms to ""read"" 1 000 000 times the same array. ; ; strtoll alone tooks 7758 ms to ""read"" 100 000 time a size 1000 array. ; strtoll+early check of '-' tooks 7719 ms to ""read"" 100 000 times the same array. . strtoll alone tooks 8464 ms to ""read"" 1000 time a size 100 000 array. ; strtoll+early check of '-' tooks 8403 ms to ""read"" 10000 times the same array. . So we are discussing about un-measurable effect and I switched to your version because it contains less lines of code and looks simpler which is a very good property. . Is there still question about this PR? . EDIT: and the dashboard is now green on linux. @bcarrez please finish #267 :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302814828:1469,green,green,1469,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302814828,1,['green'],['green']
Energy Efficiency,"I'm ok with the change regarding the edges. I can't see some border effect right now... and as all the non regression tests are green I'm 99% confident!; I just added some additional warning and tests inside the tetrahedron methods you fixed to match what has been done inside the TriangleSetTopologyContainer. You could double check if needed.; Thanks, I missed those one.; :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1008#issuecomment-490437324:128,green,green,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1008#issuecomment-490437324,1,['green'],['green']
Energy Efficiency,"I'm sorry, I missed part of the conversation on this topic during the sofa-dev meeting. Here's my suggestion:. What if we would set a `Check()` method (and maybe also a `Parse(), Init(), fwdInit(), bwdInit()` and all other method that kind of expect a ""call super"" code smell to work...) in `SOFA_ABSTRACT_CLASS_DECL`, similar to this:. ```cpp; #define SOFA_ABSTRACT_CLASS_DECL \; [...]; void doCheck() { this->check(); static_cast<Inherit1*>(this)->doCheck(); }	\; virtual void Check() { this->doCheck(); }; ```; ; `Check()` would be a virtual method, so that when called from a casted `BaseObject` ptr or from a visitor, the child's method would be called.; `check()` and `doCheck()` on the other hand would not be virtual, so that when called from `this` casted as `Parent*`, the method of the current pointer cast would be called, thus triggering the recursion when static_casting the pointer. . It's the same as the ""call super"" pattern, with the exception that it is this time bug-free, because the API's user is not in charge of calling manually the parent's method. A small example here if you want to test the concept:. ```cpp; #include <iostream>. #define SOFA_BASE_CLASS(T) \; virtual void Init() {} \; void doInit() { this->init(); }. #define SOFA_CLASS(T, Parent) \; typedef Parent Inherit1; \; void doInit() { this->init(); static_cast<Inherit1*>(this)->doInit(); }	\; virtual void Init() { this->doInit(); }; . struct BaseObject; {; SOFA_BASE_CLASS(BaseObject); void init() { std::cout << ""BaseObejct::init()"" << std::endl; }; };. struct A : public BaseObject; {; SOFA_CLASS(A, BaseObject); void init() { std::cout << ""A::init()"" << std::endl; }; };. struct B : public A; {; SOFA_CLASS(B, A); void init() { std::cout << ""B::init()"" << std::endl; }; };. main(); {; BaseObject* b = new B();; b->Init();; }; ```. The imact in terms of implementation would be a bit huge though.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416907185:1026,charge,charge,1026,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416907185,1,['charge'],['charge']
Energy Efficiency,INFO MESSAGE: ; We are now updating the VS-2015 machine that are in charge of the the PRs. ; In case you detect any problem please report.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186#issuecomment-283613384:68,charge,charge,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186#issuecomment-283613384,1,['charge'],['charge']
Energy Efficiency,If CI and Alex approved it sounds green,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3635#issuecomment-1424753936:34,green,green,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3635#issuecomment-1424753936,1,['green'],['green']
Energy Efficiency,"Indeed. I am not a big fan of having a member function `invert`; Anyway, to fix the problem you can test that the address of reference passed as an argument is different from the address of the object instance. e.g. ```lang=cpp. template< std::size_t L, std::size_t C, typename real = double >; bool Mat<L,C,real>::invert(const Mat<L,C,real>& m ); {; if(&m == this ); {; // do something clever to handle ""in-place"" invert; }; else; {; invertMatrix(*this, m );; }; }; ```. NB: it is an usual pattern when for instance you must overload the assignment operator of a class (because it has to manage some heap allocated memory for example ), and therefore handle the special case when you self assign.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/280#issuecomment-305173227:606,allocate,allocated,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/280#issuecomment-305173227,1,['allocate'],['allocated']
Energy Efficiency,"It is always the same problem, ; to reduce dependency between software components (header included in header) you may want to use forward declaration.; Such forward declaration allows to write code manipulating pointer or reference to the forwarded declared object. Not doing that requires to include the full definition of the manipulated class. Reducing the amount of edges in the dependency graph favor a good separation between software components, reducing compilation speed and reducing the need to recompile when something change. . D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1509#issuecomment-704962809:36,reduce,reduce,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1509#issuecomment-704962809,1,['reduce'],['reduce']
Energy Efficiency,It is the return of green in our dashboard... Bruno is the hero of the day !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/478#issuecomment-336868632:20,green,green,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/478#issuecomment-336868632,1,['green'],['green']
Energy Efficiency,"It should be zero by default in my opinion. ; There is also a little confusion because there are currently two ways to specify the rayleigh damping parameters. ; If you use `EulerImplicitSolver` rayleigh damping is specified at the solver level. ; However both the `ForceField` and `Mass` API in SofaCore also implements rayleigh damping... provided you use `kfactorIncludingRayleighDamping` instead of `kfactor` when assembling the stiffness and the mass. This changed was introduced quite a long time ago, because in the Compliant plugin, the solvers for time integration do not implement global Rayleigh damping, but a more ""local"" one, delegated to each of the `Mass` and `Forcefield` components. ; So short answer is : yes should be zero. But it could break a **lot** of scenes that extensively rely on the default damping values to actually work... which mostly happens when you do not pay attention about the unit system you want to use in your scene ( e.g meters and kilograms versus millimetres and grams ) . I would also like to have the opinion of someone knowledgeable in that particular area. Rayleigh stiffness factor, contrary to Rayleigh mass factor, is not unit less. It is s^-1 as far as I can remember. Would it be better to specify it as unit less factor instead (and then have it internally divided by the current time step value), so that the value has a sort of consistent meaning regardless of the time step chosen ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/338#issuecomment-316636803:964,meter,meters,964,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/338#issuecomment-316636803,1,['meter'],['meters']
Energy Efficiency,"It's a topic I wanted to get back, so that we could support adaptive time step solvers.; Do you remember what on a theoretical standpoint makes it not supported? I do not recall",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1541510463:60,adapt,adaptive,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1541510463,1,['adapt'],['adaptive']
Energy Efficiency,"It's something that is too general to make it specific to BoxROI. What about SphereROI, EllipsoidROI, ... ?; There are several ways to handle this use case (using an Engine to compute something once or only at specific triggers):; 1. don't use a link but copy the data manually (but easily) using python for instance; 2. add a new link syntax that would not automatically trigger updates, or that would break itself after the first update / the init is done (which is a common request for use-cases for computing initial positions for instance); 3. add a new component that can be used instead of a Link for use cases where we want more control. In our codes we use the third option, we added a trivial component that we call `ValueStore`, which has a Data `value` inside with the ability to copy the value (and implicitly request the update of an Engine linked to it) to another Data manually (but as efficiently as a Link) at specific times (currently after each time step, but it could be customised).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258131540:902,efficient,efficiently,902,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258131540,1,['efficient'],['efficiently']
Energy Efficiency,"Just my 2 cents, if there is an option to disable it, I'll probably use it even tho I have Qt5WebEngine installed, since I like to keep only the minimum options activated to reduce compilation time and I don't think I'll use this feature.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1315#issuecomment-608321479:174,reduce,reduce,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1315#issuecomment-608321479,1,['reduce'],['reduce']
Energy Efficiency,Many thanks Matthieu for the time you spend on carefully reviewing this PR I appreciate. . For the movement of function in a file...my mistake I should have clean that...I tried other changes (like extern template specialization) that I finally not took into consideration in this PR but forgot to clean the file so they seems to have moved more than what they actually did. . You are right about performance issues and your suggestion for checking the first non-empty char in getUnsignedInteger looks ok so I will make the change. . Now about the getInteger vs atoi aspect my first impression is that there will be a small performance difference at the cost of scarifying correctness and code security so I really advocate for using getInteger/getUnisgnedInteger and not atoi. . To go further we probably have to measure the performance but I wouldn't be surprised to be less than a 10% speed difference so it is not worth the loss of good error reporting to user. If high performance is really an issue I prefer to put energy to implement a raw binary storage of indices because this would make things like 10x or more faster speedup as well as have less memory consumption.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302655856:1021,energy,energy,1021,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302655856,2,"['consumption', 'energy']","['consumption', 'energy']"
Energy Efficiency,"Nobody reacted to my screenshot, but I suppose that a part of the slowdown comes from the fact that the mechanical object is resizing more and more vectors.... 🤨. EDIT: I ran the performance monitor of VS and indeed it takes a lot of time in the resize() function of MechanicalObject",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842958951:191,monitor,monitor,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842958951,1,['monitor'],['monitor']
Energy Efficiency,"Not really related to your issue itself (GUI) but are you sure that `DefaultCollisionGroupManager ` is working well? last time I tried, if you let the simulation running, you can see in `MechanicalObjects` keeping allocating vectors (without deleting them)... leading to a big slowdown and memory consumption.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2066#issuecomment-834141984:297,consumption,consumption,297,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2066#issuecomment-834141984,1,['consumption'],['consumption']
Energy Efficiency,"Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240:58,reduce,reduce,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240,1,['reduce'],['reduce']
Energy Efficiency,"Now regarding the topic of the bfactor :arrow_down: . If we use the `implicit=""1""` in the UniformVelocityDampingForceField from the [DampingForceField](https://github.com/sofa-framework/sofa/blob/master/examples/Component/SolidMechanics/FEM/DampingForceField.scn) example, we find a vertex point (node ""uniform (green)"") moving according to the following equation of motion:. $$ \frac{d^2 x}{dt^2} + 0.1 \frac{dx}{dt} = 0 $$. Given the initial conditions:. $$ x(0) = 0 $$. $$ v(0) = \frac{dx}{dt}\bigg|_{t=0} = 1.0 $$. This is a second-order linear homogeneous differential equation with constant coefficients. To solve this, we assume a solution of the form:. $$ x(t) = Ae^{\lambda t} $$ . Taking the IC into account. $$ x(t) = 10 - 10 e^{-0.1 t} $$. Which gives the final position:. $$ x(\infty) = 10 - 10 \cdot 0 = 10 $$. Since the mass is 0.5 in the example .. $$ x(\infty) = \frac{10}{2} = 5$$ . which is now the case with this PR !; Thanks Paul",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2263947900:312,green,green,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2263947900,1,['green'],['green']
Energy Efficiency,"OK,; I updated the PR with a few things:; 1 / the test now checks the content of the generated files for error; 2 / Monitor has an additional data field ""fileName"" through which one can override the default path to the generated files; 3 / Monitor now respects basic coding guidelines; Looks a bit better now",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828:116,Monitor,Monitor,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828,2,['Monitor'],['Monitor']
Energy Efficiency,"Ok, I am no expert in design and I did not understand this data flow meaning of Engines.; Well, third option is ok, and the first one is yet basic but more efficient.; Thank you for the discussion.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258133556:156,efficient,efficient,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258133556,1,['efficient'],['efficient']
Energy Efficiency,"On a quite heavy scene of mine with five SparseLDLSolvers, I have the following results : . Before:; ```; [INFO] [BatchGUI] 1000 iterations done in 118.746 s ( 8.42137 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 25.65	 1 	 90.97	 136.87	 97.36	 9.53	 97.36	 76.30	.....Get Compliance; ```. After:; ```; [INFO] [BatchGUI] 1000 iterations done in 115.418 s ( 8.6642 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 25 	 1 	 88.55	 104.93	 93.89	 3.04	 93.89	 75.91	.....Get Compliance; ```. So there's an improvement both in the percentage and in the standard deviation meaning that it is more stable and thus the distribution seems to be more efficient. Nice !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4220#issuecomment-1755446173:689,efficient,efficient,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4220#issuecomment-1755446173,1,['efficient'],['efficient']
Energy Efficiency,"Other significant singletons:; - message mechanism (dispatchers/handlers),; - idFactory from timers; - Factories (contact, intersectors); - scheduling (TaskScheduler, registry); - scene loaders",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562569604:140,schedul,scheduling,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562569604,1,['schedul'],['scheduling']
Energy Efficiency,Roadmap for a totally green dashboard:; - fix the last centos bug (I heard about bruno started digging into this one); - fix the 14 ubuntu_options_debug (I made #465 that fix it but @fjourdes pointed that one of the pending InSimo PR was doing that in a more powerful/general way...so ...I praise that someone will nudge the InSimo and merge it :)); - fix the windows (well these are my fault...so I will have to spend time on that). But after that...well happy.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/478#issuecomment-337485994:22,green,green,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/478#issuecomment-337485994,2,"['green', 'power']","['green', 'powerful']"
Energy Efficiency,STC is over. ; @guparan & @bcarrez are in charge to have to split the deprecation_branch where we have worked into severals: ; (1) one that deprecate components; (2) one that pluguinize some modules. . I assume we should have (1) done before starting to merge PR,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/426#issuecomment-334382294:42,charge,charge,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/426#issuecomment-334382294,1,['charge'],['charge']
Energy Efficiency,Several lines of thought:; + Proposal around a new way of adding contribution in addKtoMatrix in SOFA and avoid a virtual call at each call; + Merge MatrixDeriv with a sparse matrix representation; + SparseVectors in SOFA; + Simplify the (quite complex) multi-matrix things as a lot of the initial intentions have never been really implemented and can be (maybe) solved in a more simple way using efficient sparse matrices and sparse vectors.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292212265:397,efficient,efficient,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292212265,1,['efficient'],['efficient']
Energy Efficiency,"Sorry, I haven't done anything about this yet for SOFA. I am currently using the solver in my own project and right now I am testing it works correctly. I have some cases where the energy of the system seems to grow and I am not sure if its because of the solver or I have issues somewhere else, so I would say its not ready yet.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-895036698:181,energy,energy,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-895036698,1,['energy'],['energy']
Energy Efficiency,"Thank you Jeremie for this valuable feedback. . I started working towards a faster initialization path for `Data` and `Link` in a separate branch, I will post some results here if I get anything meaningful. The main use-case is a scene with many contacts, thus many components/data are added and removed at each time step due to collision handling. We'll see whether this is worth the effort. A small thing: I've seen that the DataTypeInfo for fixed array-like types (RigidCoord, Vec, and the like) all enable the CopyOnWrite flag, which makes any Data holding such type allocate on the heap on construction. Is this needed?. Thanks again for your help.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-256399737:571,allocate,allocate,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-256399737,1,['allocate'],['allocate']
Energy Efficiency,"Thank you for this PR, it highlights a more serious bug when adding elements in TopologySubsetData. A PR to fix the TopologySubsetData is coming, then we will update this PR to adapt UniformMass with the good callbacks. Right now the callback on PointRemoved event proposed in this PR will crash as the TopologySubsetData already has an internal mechanism to update its size. So you perform the deletion twice.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1097837525:177,adapt,adapt,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1097837525,1,['adapt'],['adapt']
Energy Efficiency,"Thanks Bruno,. To me the pro in this PR:; - the design seems clearer with the use of final and the delegates. ; - more efficient (no listener in each Nodes, no need to maintaint).; - more consistent with begin/end notifications. . The bad:; - no backward compatibility (can one be implemented ?), but this listener are not used so much (only in GUI).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917#issuecomment-461186420:119,efficient,efficient,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917#issuecomment-461186420,1,['efficient'],['efficient']
Energy Efficiency,"Thanks Damien, I had a glance to #13 and I think @JeremieA proposal is nice to reduce bloat in sofa: keeping the current MeshObj and its visitor mechanism to export obj for rendering (video...), so no need for a BaseSimulationExporter since only the MeshObjExporter would have this behavior. On the other hand the MeshExporter component does not support any of the 2 formats we usually need, obj and stl... grrrr...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/372#issuecomment-324559169:79,reduce,reduce,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/372#issuecomment-324559169,1,['reduce'],['reduce']
Energy Efficiency,"Thanks for the PR @alxbilger,. Looks good to me. ; More generally I'm very surprised we didn't notice performance drop by have more and more explicit template instantiation. To me this is an indication that either the lto/gto are now very efficient or that our old code without the explicit template instantiation was not optimized by the compiler as we were expecting.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1256718726:239,efficient,efficient,239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1256718726,1,['efficient'],['efficient']
Energy Efficiency,That looks great ! I did not have the time yet to test. Maybe we could have a look at the following implementation for the test bench ? ; [HOBAK](https://github.com/theodorekim/HOBAKv1) the code repository used by the paper authors; [Libgl](https://github.com/iyht/Stable-Neo-hookean-Flesh-Simulation) implementation of Stable Neo hookean energy,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2024881248:339,energy,energy,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2024881248,1,['energy'],['energy']
Energy Efficiency,"That's an interesting explanation @fjourdes and it seems you raise an issue to solve if we need an efficient way to manage points/vertices/whatever in the MechanicalObject.; However as you say, TopologyData is actually NOT used in MechanicalObject. Therefore it is totally safe to comment/remove `#include SofaBaseTopology/TopologyData.inl` . I assume that it was forgotten when people attempted to use the new topology engine system for MechanicalObject (and unfortunately gave up). A PR should be issued with the removal, in order to be sure that everything does not change at all (I checked on my setup and the tests ran smoothly; but it would be better to test with the ""options"" configuration)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295322091:99,efficient,efficient,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295322091,1,['efficient'],['efficient']
Energy Efficiency,"The #1080 is merged, green light",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1081#issuecomment-504001359:21,green,green,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1081#issuecomment-504001359,1,['green'],['green']
Energy Efficiency,"The Monitor test is failing, it seems it should investigated @lagarkane",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323333990:4,Monitor,Monitor,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323333990,1,['Monitor'],['Monitor']
Energy Efficiency,"The PR is obviously fine :+1: ; but it made me raise a question : which component should be actually in charge of the computation of the BBox ?; if this is the mstate which implements this feature, shouldn't it be the only one to trigger the computation at each time step ?. or is it a naive question?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4061#issuecomment-1645551046:104,charge,charge,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4061#issuecomment-1645551046,1,['charge'],['charge']
Energy Efficiency,"The Rigid SphereModel was added ""recently"" and the comment is not up-to-date. Rigid Spheres can rotate (Particle spheres cannot), and modeling the contact directly at their surfaces allows extra behaviors such as friction. On the other hand, adding contact points at the surfaces of particle spheres would only add unnecessary extra cost (mapping+mstate). Creating a spring/constraint directly between the particle sphere centers is more efficient w/o restriction.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/47#issuecomment-261506881:438,efficient,efficient,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/47#issuecomment-261506881,1,['efficient'],['efficient']
Energy Efficiency,"The advantage of a component specific macro/stream (like sdebug to stay in the current spirit) would be to automatically add the component as the ""sender"" of the message. ; Which is BTW required by the gui to get and display messages coming from a given component. . ----- Mail original -----. > De: ""Matthieu Nesme"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""Mention""; > <mention@noreply.github.com>; > Envoyé: Jeudi 2 Février 2017 14:18:28; > Objet: Re: [sofa-framework/sofa] [SofaKernel] Add; > PerComponentLoggingMessageHandler to keep and history of messages. (#106). > I think that it is a good idea to treat the overall pb, not to miss; > something. > * removing msg buffers from Base; > * removing printLog Data (but reading it from a parse function for backward; > compatibility.; > * no need for sdebug, you can directly use msg_debug (or whatever). serr/sout; > can be kept not to become crazy, but no need to add more.; > * It should be powerful enough to move some of the Data you added in Base; > directly in the msghandler (and set more globally these parameters).; > * updating the gui to use the new msghandler buffers. > Something else ?. > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276982614:1039,power,powerful,1039,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276982614,1,['power'],['powerful']
Energy Efficiency,"The checklist is almost green, the issues on windows7 are not related to this PR; I merge it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/161#issuecomment-278254440:24,green,green,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/161#issuecomment-278254440,1,['green'],['green']
Energy Efficiency,"The problem with this function is that you cannot trust the returned value forever due to pointer invalidation. `std::vector` allocates dynamically the memory depending of the need. At creation, it allocates a small chunk of memory. If the memory is full when you try to insert an element, it will allocate a bigger chunk of memory and move everything in this new memory space. Everything that was in the previous memory space is invalidated. It stills points to something, but it is invalid. And using it leads to a crash. I made a small example on godbolt of this situation: https://godbolt.org/z/aqec8Krzo. You can see that the result of `data()` is invalidated after elements insertions. Conclusion: your solution is better than the previous. But this function must be used appropriately.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328698963:126,allocate,allocates,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1328698963,3,['allocate'],"['allocate', 'allocates']"
Energy Efficiency,"The rational of the PR is sounded and the existing design in sofa that mix the base class with a kind of hardcoded singleton/registry is bad and should be refactored (thank for the PR so). . From my experience the refactoring step in such situation depends if the static part is actually implementing kind of singleton or a kind registry of instances. But in both case the refactoring consists in moving all the static methods and static attributes in a new class with the sole purpose of handle the registry/singleton. . In your PR you are moving the static method and the singleton into TaskSchedulerFactory. ; If found using ""factory"" is confusing as to me a factory's roles (and design pattern) is to map to different construction methods and not holding the created instances. In order to keep the registry separated from the factory part I recommend keeping the two concerns separated in different classes. . To me a clean layout separating implementions and concerns is the following:; ```cpp; class TaskScheduler {}; // The base class for a scheduler; class TaskSchedulerRegistry:: {}; // The class implementing a registry of taskschedulers; class TaskSchedulerFactory:: {}; // The class implementing a factory for taskscheduler; class MainTaskSchedulerRegistry::{}; // The ""static"" class which contains a singleton of a TaskSchedulerRegistry ; // and public static methods to manipulate it (with mutex in each of them) ; class MainTaskSchedulerFactory::{} // The ""static"" class which contains a singleton of a TaskSchedulerFactory; // and pubic static methods to manipulate it. ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905:1049,schedul,scheduler,1049,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480#issuecomment-1324884905,1,['schedul'],['scheduler']
Energy Efficiency,There is few new warning during the compilation process thats need to be fixed. . These warnings are really minor details but I think it is important to do our best to decrease the general number of trivial warnings so that we can more efficiently detect the non-trivial one.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/276#issuecomment-304642032:236,efficient,efficiently,236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/276#issuecomment-304642032,1,['efficient'],['efficiently']
Energy Efficiency,"This PR makes me think that msg_info() << ""message"" is in fact something like:; ```cpp; if(notMuted(Base*)); info::queue << ""message""; ```; With notMuted implemented like that:; ```cpp; Base::noMuted() ; { ; f_printLog().getValue(). ; }; ``` ; ; So either we don't use msg_info in loops (which is a good idea by the way, but not easy to track and enforce in our code base) or we reduce the cost of notMuted by using internal caching of the state.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848:379,reduce,reduce,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848,1,['reduce'],['reduce']
Energy Efficiency,"This op* mechanism may be ""complex"" but it was a reasonable attempt at implementing common matrix/vector operations generically while maintaining some efficiency (inspecting the sparsity and block size of the matrix being operated on instead of blindly doing a O(n^3) loop over all possible element combinaisons). It is useful (we do use it in a couple of places in our solver codes), even if not critical (it is more efficient to call directly the right methods with the specific types of matrix and vectors that are being used).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1279209917:418,efficient,efficient,418,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1279209917,1,['efficient'],['efficient']
Energy Efficiency,"Visitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #8 0x7fc2ff15a33c in void sofa::simulation::Node::execute<sofa::simulation::InitVisitor, sofa::core::ExecParams>(sofa::core::ExecParams const*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:17833,allocate,allocated,17833,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['allocate'],['allocated']
Energy Efficiency,"Visitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #8 0x7fc2ff15a33c in void sofa::simulation::Node::execute<sofa::simulation::InitVisitor, sofa::core::ExecParams>(sofa::core::ExecParams const*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/Local",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:14597,allocate,allocated,14597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['allocate'],['allocated']
Energy Efficiency,We want green dashboard :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/478#issuecomment-337161487:8,green,green,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/478#issuecomment-337161487,1,['green'],['green']
Energy Efficiency,"Well:; - `doLoad()` was called three times, without clearing the lists (e.g. d_position, d_tetra...). So I had duplicated positions, triangles and tetra in my scene, which caused failures. Those calls seemed to be triggered by `addUpdateCallback` in `MeshLoader`.; - the transforms wasn't called three times, so the last positions were not transformed.... but that's not really important I guess. After digging, I found that using `getWriteOnlyAccessor()` to access the `d_positions`... instead of `beginEdit()`, like it was done in most other loaders, reduced this number of calls, which fixed everything for me. I should also mention that my scene was failing at init (when loading the scene).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713100804:553,reduce,reduced,553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713100804,1,['reduce'],['reduced']
Energy Efficiency,With the example used in PR #1093; here is the time of the visitor when no update is done. (green line); ![image](https://user-images.githubusercontent.com/21199245/64020981-3dac8d80-cb33-11e9-9707-5c4b09500975.png),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1131#issuecomment-526584524:92,green,green,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1131#issuecomment-526584524,1,['green'],['green']
Energy Efficiency,"Wow, green dashboard, is it Xmas already ?; Very nice work @damienmarchal ! 👏 . Could you update your review @matthieu-nesme ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-303038710:5,green,green,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-303038710,1,['green'],['green']
Energy Efficiency,"Wow, such green, very stable, many thanks! ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-358011228:10,green,green,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-358011228,1,['green'],['green']
Energy Efficiency,Yes... with the CImgPlugin fix you are doing the windows platform will be green :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369887992:74,green,green,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369887992,1,['green'],['green']
Energy Efficiency,"You forgot to ask **what** and that's the main point of this issue. - No worries about where, we handle it internally (you can use your Lillois powers to influence the choice though) ;-); - When: tuesday 3 afternoon (setting up and starting) + wednesday 4 whole day (coding like beasts).; - Who: this may influence the tasks but doesn't avoid us to propose everything we want :-) For now I can say we should be around 20-30.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-330850319:144,power,powers,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-330850319,1,['power'],['powers']
Energy Efficiency,[ci-build][with-all-tests]. yes all green :muscle: :green_circle:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3891#issuecomment-1563454307:36,green,green,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3891#issuecomment-1563454307,1,['green'],['green']
Energy Efficiency,"`ExtVec3f/ExtVec3d` is not enough.; In the most general case, you could want a part of the simulation in float and another one in double (where the dofs can be anything, vec1, deformation gradients...) ; Optionally each one with their own solvers, but not necessarily, mappings can map from float to double.; I think remembering that this was important for GPU/CUDA simulations to be able to map to float. It is easy enough to let the code as now, and compiling only in double, or to remove the extra template instantiations to keep only the one based on SReal as suggested by Max with a possibility to let the other ones that are really required. I repeat the ultimate goal would be to work only with single float, they are more efficient (using less bandwidth, serialization will handle more computations at the same time...) and they are numerically enough in 99.999%. cases We are using double because we never tried to tackle the numerical challenges.; For instance https://www.youtube.com/watch?v=etAYNa6DLKw is only using float.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/495#issuecomment-340375049:730,efficient,efficient,730,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/495#issuecomment-340375049,1,['efficient'],['efficient']
Energy Efficiency,"about `warmStart = true`: it biases the solution towards constant acceleration, whereas `warmStart = false` biases towards zero acceleration (when stopping early ofc). energy-wise, it is probably safer to go for the latter and let the user opt-in if she knows what's she's doing.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/365#issuecomment-325746502:168,energy,energy-wise,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/365#issuecomment-325746502,1,['energy'],['energy-wise']
Energy Efficiency,"all green guys, ready for review",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1167#issuecomment-538376783:4,green,green,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1167#issuecomment-538376783,1,['green'],['green']
Energy Efficiency,"ation::Node::executeVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #20 0x7fc2ff12b381 in sofa::simulation::Node::execute(sofa::simulation::Visitor&, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:191; #21 0x7fc2ff12aa43 in sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/DefaultAnimationLoop.cpp:113; #22 0x7fc2ff205eb1 in sofa::simulation::Simulation::animate(sofa::simulation::Node*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:242; #23 0x5646e6e19751 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:166; #24 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:9149,allocate,allocated,9149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['allocate'],['allocated']
Energy Efficiency,"d',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObject('LinearSolverConstraintCorrection',printLog='false',wire_optimization='true'); InstrumentCombined.addObject('FixedConstraint',name='FixedConstraint',indices='0'); InstrumentCombined.addObject('RestShapeSpringsForceField',points='@m_ircontroller.indexFirstNode',stiffness=1e8,angularStiffness=1e8). Collis = InstrumentCombined.addChild('Collis'); Collis.activated= True; Collis.addObject('EdgeSetTopologyContainer', name='collisEdgeSet'); Collis.addObject('EdgeSetTopologyModifier',name='colliseEdgeModifier'); Collis.addObject('MechanicalObject',name='CollisionDOFs'); Collis.addObject('Mul",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:4561,Adapt,AdaptiveBeamForceFieldAndMass,4561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Energy Efficiency,"e STC : . **First strategy :** Model the Data accesses using ORWL's concepts + high level task parallelism (coarse grain parallelism); - use abstract Data accesses stored in FIFOs to extract parallelism : thread safe data accesses allowing concurrent reads.; - ensures that the semantic of the program is preserved.; - tasks defined at Visitor level : a Task is defined as the execution of a Visitor on a component.; - this strategy should apply to all visitors and components, as it does not depend on the nature of the component. **Issues :** ; - We wanted to use the Data class, since all accesses to a data object in sofa should be done using this class. Problem : this is not true, some components use vectors directly, or use Data methods / ReadAccessor / WriteAccessor not as intended (this is possible since for now some methods such as Data::endEdit do nothing) -> we would need to look at all sofa components to make sure that the Data are properly used; - To properly model the data accesses using ORWL's concepts we need to slightly modify the API of the Data class; - sofa Engine mecanisms are complex to handle using FIFOs; - it is difficult to predict the data dependencies as the Visitors are launched dynamically and can launch Visitors -> we can't predict the data accesses in a preprocessing phase, so we need to adapt ORWL.; - This approach would not induce significant performance gains on simulations with only 1 object or with 1 ""main"" object since all the computationally intensive tasks inside a given object access the same Data object (Write access) and thus are inherently sequential. **Conclusion :** the potential speedup is not good enough to invest more time on this strategy given the difficulty. **Second strategy :** finer-grain parallelization; To extract parallelism from highly data-dependent tasks we need to divide these tasks into less-dependent subtasks.; To achieve that, we are currently implementing parallel vectors to allow some kind of domain decomposit",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792:1386,adapt,adapt,1386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792,1,['adapt'],['adapt']
Energy Efficiency,"econfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [FATAL] [Qt] Could not initial",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:12900,green,greenBufferSize,12900,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['green'],['greenBufferSize']
Energy Efficiency,"ection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/Loca",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:11360,allocate,allocated,11360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['allocate'],['allocated']
Energy Efficiency,"ection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection(",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20043,allocate,allocated,20043,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['allocate'],['allocated']
Energy Efficiency,"ese tests should be executed at each build (even for devs) and must pass. Failing in this kind of tests must be equal to a compilation error.; In that respect there is something that I am reluctant to allow for this type of tests is a lose coupling approach where you instantiate components using keys from the object factory. You may end up writing tests that in fact do not compile from a scratch build because this allows you to not take care about the dependencies between the libs. That is to say a test may instantiate a component that is not available yet, because it belongs to a library which is deeper in the build dependency tree at the time the unit test is built and executed during the compilation. - Functional tests, that require a working scene with probably more components than the one actually tested. These tests can be longer and therefore should not be mandatory during the compilation. ; They will be run only in ci machines, but can be also easily executed by any developers on its machine mostly to debug what is the nature of a new regression in these kind of tests. ; From our experience at InSimo these kinds of tests regress quite often during the development of a new feature, because you make some optimisation in the code, and you get some epsilon difference, or because you change the approach entirely and the scene is no longer relevant for you and should be changed. So you probably do not want too many of these functional tests, but there should be enough so that it is representative of the overall kind of simulations you want to support. ; But anyway it is still nice to have a record of the regressions that occur during the overall development, because you can then document better when you actually introduced changes in the code that are significant, which certainly is hard to track by unit tests only, unless you have a coverage of 100%, which is a target that in my opinion is a waste of energy to aim at, provided you have some functional tests also.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337507243:2485,energy,energy,2485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337507243,1,['energy'],['energy']
Energy Efficiency,"flag ready, green builds, I merge it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-317027449:12,green,green,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-317027449,1,['green'],['green']
Energy Efficiency,green green green!!!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/719#issuecomment-406546628:0,green,green,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/719#issuecomment-406546628,3,['green'],['green']
Energy Efficiency,"if it is not explicitly passed in to all API calls, it can be queried with ExecParams::defaultInstance(), with the guarantee that this will always provide exactly the correct values (as there is a single copy per thread). For instance, this could allow to change the ExecMode in order to trace/profile a specific part of the computation. Without TLS, all calls done in parallel in other threads would now share the same mode. But as ExecMode was only ever used for KAAPI support (now removed), it is possible to decide to remove this as well without losing much.; 7. As a final point, one alternative fix (that I would personally prefer, but I am no longer involved directly so it is not up to me) would be to redesign this such that checkValidStorage() is no longer needed. The core issue is more related to the multithread TaskScheduler, where if a MechanicalParams (or another child of ExecParams) is copied from one thread to another as part of a Task, we can have functions that are called with the wrong ""storage"" pointer belonging to the calling thread. This is a very bad situation because the other thread might have moved on to other codes that changed the values, and more importantly ExecParams::defaultInstance() method used in many placed would see a different set of values. Currently this is fixed manually by calling mparams.update() at the beginning of the Task, but this is not always done, hence the check in the visitors as many Sofa computations end up using visitors somewhere. But if that could be the responsibility of the Task/TaskScheduler, they we could remove this check. This could be done for example by adjusting the ExecParams handling in a way that guarantees that inter-thread copies are by value of the storage (i.e. the value of ExecMode/.. but excluding threadID) instead of by reference, and known to the scheduler so that the parameters are correctly copied in the thread executing each runTask() without relying on manual updates. I hope this helps,. Jeremie.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748:3764,schedul,scheduler,3764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748,1,['schedul'],['scheduler']
Energy Efficiency,"ion::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::cor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22267,allocate,allocated,22267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['allocate'],['allocated']
Energy Efficiency,isn't it green ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1436#issuecomment-666327296:9,green,green,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1436#issuecomment-666327296,1,['green'],['green']
Energy Efficiency,"l in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:; > ; > 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; > ; > 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; > ; > 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not...; > ; > ; > This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices.; > ; > Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?; > ; > CC: @hugtalbot , @ChristianDuriez , @fjourdes. Thanks @jnbrunet for having looked on this issue. I rephrase your findings as a list of tasks to improve SOFA efficiency and accuracy:. - [ ] Remove EulerExplicitSolver::d_optimizedForDiagonalMatrix and replace it by fetching the result of Mass::isDiagonal; - [ ] CentralDifferenceSolver must be adapted to work with any type of mass matrix; - [ ] Implicit solvers must read the result of Mass::isDiagonal to speed up computations in case mass is diagonal. If we do that, we can assume in this PR that Mass::isDiagonal must not be removed. If you all agree with this list of tasks, I can open the issues.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001:1855,adapt,adapted,1855,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001,1,['adapt'],['adapted']
Energy Efficiency,"my fault, I didn't understand your point at the first time. I agree with you that managing the deprecation with specific sets in a CMakeLists can be efficient.; In my mind the place you put the code and its management are somehow connected especially when lighten ""sofa"" because nobody is defining what sofa is/contains/is reduced to. ; More I think about more I think that there is no sofa core or whatever. There are files which have a meaning to be together.; Instead of removing files/classes/components I suggested to think about moving files/classes/components and then evaluate their stage of deprecation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332180994:149,efficient,efficient,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332180994,2,"['efficient', 'reduce']","['efficient', 'reduced']"
Energy Efficiency,"nical=False); VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.activated= True; VisuOgl.addObject('OglModel',name='Visual',color='0.7 0.7 0.7', quads='@../ContainerCath.quads',material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). VisuGuide = InstrumentCombined.addChild('VisuGuide'); VisuGuide.activated= True; VisuGuide.addObject('MechanicalObject',name='Quads'); VisuGuide.addObject('QuadSetTopologyContainer',name='ContainerGuide'); VisuGuide.addObject('QuadSetTopologyModifier',name='Modifier'); VisuGuide.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuGuide.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=1,input='@../../topoLines_guide/meshLinesGuide',output='@ContainerGuide', flipNormals=True,listening=True); VisuGuide.addObject('AdaptiveBeamMapping',name='visuMapGuide',useCurvAbs='1',printLog='0',interpolation='@../InterpolGuide',input='@../DOFs',output='@Quads',isMechanical=False); VisuOgl = VisuGuide.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.2 0.8' , material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20', quads='@../ContainerGuide.quads'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'). VisuCoils = InstrumentCombined.addChild('VisuCoils'); VisuCoils.activated= True; VisuCoils.addObject('MechanicalObject',name='Quads'); VisuCoils.addObject('QuadSetTopologyContainer',name='ContainerCoils'); VisuCoils.addObject('QuadSetTopologyModifier',name='Modifier' ); VisuCoils.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo',template='Vec3d'); VisuCoils.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=0.3, input='@../../topoLines_coils/meshLinesCoils',outpu",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:7526,Adapt,AdaptiveBeamMapping,7526,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['AdaptiveBeamMapping']
Energy Efficiency,not super green...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2851#issuecomment-1092167888:10,green,green,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2851#issuecomment-1092167888,1,['green'],['green']
Energy Efficiency,"of a definitive list of components that have to be keep. We can already, small step after small step, moving the ones for which there is a agreement into the right set (and people not using the set will stop being bothered with them). ; - it is bi-directionnal, so people can work in parallel either to move the components into ""stable"" or into ""deprecated"". So team looking for the ""future"" should put their time on making a good ""stable set""; - the approach also cares about users because until a component is removed from the deprecated set"" a Sofa version can still be compiled with the deprecated components. ; - it is reversible, and each time a component is put into the ""deprecated"" set users of the component are warned when loading their scene, and thus, they can complain to sofa-dev that we shouldn't have deprecated a specific component (or that they are going to invest themself to maintain it). ; - it is complementary to organizing component sharing functionalities into module or plugins or packages (group of plugins) which also help to reduce the compilation time of sofa. . @untereiner I think in the existing sofa we have used component grouping (with modules or plugins) to handle lifetime management & functionally grouping & level of quality, which are different concerns, with a single tool (the modules). ; As you are proposing I dream of a clear re-organization of the different modules/plugins but I this sound very ambitious to me and I remember of a meeting 2 years ago where this was already discussed...and nothing moved. My assumption is that this is because the step is so big that no-one can afford it. . This is why I'm trying to find less ambitious but more incremental approach. . Eg with the current approach if you have 1 hour time to offer you can: ; - locate the leaves of the #include graph (these are component that have low coupling and thus are easy to remove); - move the file to the deprecated set (if you think it should); - add the component into the",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332339715:1822,reduce,reduce,1822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332339715,1,['reduce'],['reduce']
Energy Efficiency,"ofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::Detection",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22660,allocate,allocate,22660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['allocate'],['allocate']
Energy Efficiency,"ok, I agree with your choice ! ; thomas . ----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""Mention""; > <mention@noreply.github.com>; > Envoyé: Vendredi 3 Mars 2017 10:18:55; > Objet: Re: [sofa-framework/sofa] [all] Improve msg_api and logging of message; > (#190). > Hi @thomas-lemaire ,. > About the ""\n"" ... why would it breaks windows console printing ? Windows and; > linux does not have the same ""\n"" but a windows app emits the ""\n"" the; > windows system understand. > About using ""\n"" or better std::endl. My target was to supports messages; > written with a simple markdown syntax for which the ""\n"" is not an explicit; > line break, it is "" \n"" . So i replaced std::endl/sendl by "" \n""; > But I found that ugly and hard to read so I finally made 'msgendl' that; > contains the explicit markdown line break, but I forgot to remove the old; > manually placed "" \n"" I used all around. > Now I will have to re-fix the old "" \n"" all around (but this is nothing :)). > Do you think msgendl is ok ?; > Do you like the msg_endl. > The change on how the messages are printed in runSofa is visible here:. > The two panels are merged and the panel now shows in its title the number of; > messages.; > (in this PR I removed the column with ""suggest a better message). > In the Graph view there is now a small alert (green, yellow, red) on top of; > th icons showing the kind of message an object have. > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190#issuecomment-284326211:1447,green,green,1447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190#issuecomment-284326211,1,['green'],['green']
Energy Efficiency,"on/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be i",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22478,allocate,allocate,22478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['allocate'],['allocate']
Energy Efficiency,"r] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [FATAL] [Qt] Could not initialize GLX. ########## SIG 6 - SIGABRT: usually caused by an abort() or assert() ##########; sofa::helper::BackTrace::sig(int); gsignal; abort; _Z13qErrnoWarningPKcz+0; QOpenGLContext::create(); QRhiGles2InitParams::newFallbackSurface(QSurfaceFormat const&); QBackingStoreRhiSupport::create(); QWidgetPrivate::create(); QWidget::create(unsigned long long, bool, bool); QWidgetPrivate::setVisible(bool); sofa::gui::qt::RealGUI::Ini",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:13327,green,greenBufferSize,13327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['green'],['greenBufferSize']
Energy Efficiency,"rumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); InstrumentCombined.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); InstrumentCombined.addObject('RegularGridTopology',name='meshLinesCombined',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObject('LinearSolverConstraintCorrection',printLog='false',wire_optimization='true'); InstrumentCombined.addObject('FixedConstraint',name='FixedConstraint',indices='0'); InstrumentCombined.addObject('RestShapeSpringsForceField',points='@m_ircontroller.indexFirstNode',stiffness=1e8,angularStiffness=1e",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:4267,Adapt,AdaptiveBeamForceFieldAndMass,4267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Energy Efficiency,"sCoils'); topoLines_coils.addObject('EdgeSetTopologyModifier',name='Modifier'); topoLines_coils.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo', template='Rigid3d'); topoLines_coils.addObject('MechanicalObject',template='Rigid3d',name='dofTopo3'). InstrumentCombined = rootNode.addChild('InstrumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); InstrumentCombined.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); InstrumentCombined.addObject('RegularGridTopology',name='meshLinesCombined',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObj",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:3966,Adapt,AdaptiveBeamForceFieldAndMass,3966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Energy Efficiency,"se); VisuOgl = VisuGuide.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.2 0.8' , material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20', quads='@../ContainerGuide.quads'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'). VisuCoils = InstrumentCombined.addChild('VisuCoils'); VisuCoils.activated= True; VisuCoils.addObject('MechanicalObject',name='Quads'); VisuCoils.addObject('QuadSetTopologyContainer',name='ContainerCoils'); VisuCoils.addObject('QuadSetTopologyModifier',name='Modifier' ); VisuCoils.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo',template='Vec3d'); VisuCoils.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=0.3, input='@../../topoLines_coils/meshLinesCoils',output='@ContainerCoils', flipNormals=True,listening=True); VisuCoils.addObject('AdaptiveBeamMapping', name='visuMapCoils',useCurvAbs='1',printLog='0',interpolation='@../InterpolCoils',input='@../DOFs',output='@Quads',isMechanical='false'); VisuOgl = VisuCoils.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.8 0.2', material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20',quads='@../ContainerCoils.quads'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). CollisionModel = InstrumentCombined.addChild('CollisionModel'); CollisionModel.addObject('MeshObjLoader',name='meshLoader',filename='D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/mesh/phantom.obj',triangulate='true',flipNormals='1'); CollisionModel.addObject('MeshTopology', position='@meshLoader.position', triangles='@meshLoader.triangles'); CollisionModel.addObject('MechanicalObject', name='DOFs1', positi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:8640,Adapt,AdaptiveBeamMapping,8640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['AdaptiveBeamMapping']
Energy Efficiency,super green!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1102#issuecomment-510383097:6,green,green,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1102#issuecomment-510383097,2,['green'],['green']
Energy Efficiency,"tion should be very useful in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:; > ; > 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; > ; > 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; > ; > 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not...; > ; > ; > This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices.; > ; > Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?; > ; > CC: @hugtalbot , @ChristianDuriez , @fjourdes. Thanks @jnbrunet for having looked on this issue. I rephrase your findings as a list of tasks to improve SOFA efficiency and accuracy:. - [ ] Remove EulerExplicitSolver::d_optimizedForDiagonalMatrix and replace it by fetching the result of Mass::isDiagonal; - [ ] CentralDifferenceSolver must be adapted to work with any type of mass matrix; - [ ] Implicit solvers must read the result of Mass::isDiagonal to speed up computations in case mass is diagonal. If we do that, we can assume in this PR that Mass::isDiagonal must not be removed. If you all agree with this list of task",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001:1142,efficient,efficiently,1142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001,1,['efficient'],['efficiently']
Energy Efficiency,we have a green light here @alxbilger @fredroy,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2474#issuecomment-965704268:10,green,green,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2474#issuecomment-965704268,1,['green'],['green']
Energy Efficiency,"yeah, happy to see the profiler is used!; Nice improvement! I hope one day we will be able to display consumption per thread!!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2141#issuecomment-852807052:102,consumption,consumption,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141#issuecomment-852807052,1,['consumption'],['consumption']
Energy Efficiency,you are the voice of the consortium now! so I take that as a green light 🛩️,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1538#issuecomment-709906220:61,green,green,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1538#issuecomment-709906220,1,['green'],['green']
Energy Efficiency,👍; I am ok with that but I don't really use a lot of the topology POWER 💪,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1538#issuecomment-709137125:66,POWER,POWER,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1538#issuecomment-709137125,1,['POWER'],['POWER']
Integrability," (mainly simulation and rendering) with full access to the scene graph without copies, by using copy-on-write for large Data and having each thread be assigned a ""version"" (called ""aspect"" per the published work that was used). See the MultithreadGUI for an example of this mechanism.; 3. As far as I know, all asynchronous/external rendering engines integrations that are used with Sofa relied instead on a design where the Sofa scene graph is not exposed but only visual meshes (based on SofaPhysicsAPI), therefore this feature was never enabled/tested in real applications so it can make sense to remove it.; 4. It would be interesting to measure if there are any performance gained from just removing the TLS qualifier (as done in PR #1129). I expect it to not be measurable, but performances can be surprising, which is why any optimization efforts should measure before and after ;); 5. If the TLS part of ExecParams is removed, then you should also remove everything that depends on it: MultithreadGUI, ExecParams::threadID, aspectID, AspectPool, *AspectVisitor, DDGNode::currentAspect()/copyAspect()/..., and all the aspect-related features in Data and Link. Otherwise all these code will be silently broken by the change.; 6. Note that this also makes ExecParams itself a bit pointless. The initial rational was that this provides a thread-safe way to set parameters controlling all codes in such a way that even if it is not explicitly passed in to all API calls, it can be queried with ExecParams::defaultInstance(), with the guarantee that this will always provide exactly the correct values (as there is a single copy per thread). For instance, this could allow to change the ExecMode in order to trace/profile a specific part of the computation. Without TLS, all calls done in parallel in other threads would now share the same mode. But as ExecMode was only ever used for KAAPI support (now removed), it is possible to decide to remove this as well without losing much.; 7. As a final p",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748:1477,depend,depends,1477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748,1,['depend'],['depends']
Integrability," :** Model the Data accesses using ORWL's concepts + high level task parallelism (coarse grain parallelism); - use abstract Data accesses stored in FIFOs to extract parallelism : thread safe data accesses allowing concurrent reads.; - ensures that the semantic of the program is preserved.; - tasks defined at Visitor level : a Task is defined as the execution of a Visitor on a component.; - this strategy should apply to all visitors and components, as it does not depend on the nature of the component. **Issues :** ; - We wanted to use the Data class, since all accesses to a data object in sofa should be done using this class. Problem : this is not true, some components use vectors directly, or use Data methods / ReadAccessor / WriteAccessor not as intended (this is possible since for now some methods such as Data::endEdit do nothing) -> we would need to look at all sofa components to make sure that the Data are properly used; - To properly model the data accesses using ORWL's concepts we need to slightly modify the API of the Data class; - sofa Engine mecanisms are complex to handle using FIFOs; - it is difficult to predict the data dependencies as the Visitors are launched dynamically and can launch Visitors -> we can't predict the data accesses in a preprocessing phase, so we need to adapt ORWL.; - This approach would not induce significant performance gains on simulations with only 1 object or with 1 ""main"" object since all the computationally intensive tasks inside a given object access the same Data object (Write access) and thus are inherently sequential. **Conclusion :** the potential speedup is not good enough to invest more time on this strategy given the difficulty. **Second strategy :** finer-grain parallelization; To extract parallelism from highly data-dependent tasks we need to divide these tasks into less-dependent subtasks.; To achieve that, we are currently implementing parallel vectors to allow some kind of domain decomposition.; Work in progress...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792:1875,depend,dependent,1875,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792,2,['depend'],['dependent']
Integrability," But I don't think the library should do this in the user's back without transparency. > you need to handle the case where the loaded scene already has python scripts, and let the PythonEnvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it should be avoid for now since I'm not sure what side effects this will bring. Right now doing it seems not so bad as, again, we only attach the environment to the already created python environment. ; - A ScriptController will need to be added in order to trigger script events so that the python scene's functions (initGraph, onBeginAnimationStep, etc) are called. The createScene function is called by the SceneLoaderPY so this one is fine. > (I would probably put your feature in a module separate from Sofa for this reason). I think this should be entirely a part of the SofaPython plugin in order to keep what is related to sofa in python there. > what happens when Sofa.cleanup() gets called but python objects still hold c++ objects that are to be destructed when python exits ?. This is a good questi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:1865,integrat,integrate,1865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['integrat'],['integrate']
Integrability," Pluginization works are possible but they have to be done in-place (not moving the files). This will permit to simplify the dependencies between SOFA modules. . About the NG branch, to avoid big divergence, we propose to merge it with master as soon as some big step is done. The next big step is SofaFramework coverage. ## Bootstrapping scripts. Previously named SPM, the [bootstrapping scripts](https://github.com/guparan/sofa2ng) are now able to handle test folders. ## Process. Here is the process to cover one module:; 1. Create/update a recipe based on an existing one.; 2. Run the bootstrapping scripts with the recipe.; 3. Inspect the output; 4. If something is wrong or missing, edit the bootstrapping scripts and *goto 1*; 5. Do specific changes by hand like namespace aliases; 6. Create a patch of all changes made by hand; 7. Open a pull-request providing the recipe and the patch (previously pushed to sofa2ng). This process will be rewritten in Sofa.Helper.Bvh pull-request. ## Sofa.Component.Utils. The first NG pull-request has been merged to the NG branch. There is still some updates to do though, because the bootstrapping scripts changed. ## Sofa.Helper.Bvh. The recipe has been updated. ; This work will be the base of further contributions. I will detail all the bootstrapping + patching process in the pull-request. ## Next steps; - Pluginize without moving files: use plugins mechanism to work on modules dependencies ; Start with the less dependent ones and progress towards SOFA core.; Objective: simplify dependencies between modules.; - Validate Damien's architecture proposal for SofaFramework: https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel/Sofa; Particularly about Sofa.Helper.Types; - Create Sofa.Helper.Bvh pull-request; Will give a clear example and all the process to refactor parts of SofaFramework; - Progress within Sofa.Helper.*; Assign tasks to all volunteers before STC#5. ----------. As always, any feedback is more than welcome :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223:1577,depend,dependencies,1577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223,3,['depend'],"['dependencies', 'dependent']"
Integrability," blatant mistake is when designers put the same command onto different menus, but label it differently ... It is fairly serious because users almost always assume that differently labeled commands invoke different function"". . "" Another problem with putting the same command on multiple name is that it misleads users into believing that the application is more complex than it really is"". On my side I not that Jeff Johson is right and this is exactly the behavior I observed with new-comers to sofa. They are always puzzled and annoyed but the alias and this generates a lot of troubles and frustration. . So I think from an usability point of view this a bigger deal than what we, as developper, are thinking. . To improve the situation maybe we could: ; - each time an alias is used print a message using msg_info. This message should say:. ```; [INFO] Using of the data ""rest_position"" which is an alias (http://thedoctosofa/alias) pointing to the ""position' data field. To remove this message you can replace in myscele.xml:30 :; ""<MechanicalObject rest_position='0 1 2 3 '> with ""<MechanicalObject 'position'=; ```; - each time an alias is used to for backward compatibility from previous name we should print a message using msg_warning:. ```; [WARNING] Using of the data ""rest_position"" is now deprecated. ; To remove this message you must update your scene and replace in myscele.xml:30 : ""<MechanicalObject rest_position='0 1 2 3 '> with ""<MechanicalObject 'position'=; ```; - indicate in the GUI the alternative names (because some user may search the alias name in the GUI) ; - we could also totally remove the addAlias from the sofa core (unless for developement convenience) and implement a component that explicitely give data alias in a scene (I don't know if this is hard to implement) ; Maybe something like:. ```; <DataAlias src='@position.postion' 'rest_position'> ; <ComponentAlias src='OGLModel' dest='VisualModel'>; ```. At the beginning of a scene with OGLModel and ""rest_posi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/35#issuecomment-255722194:1044,message,message,1044,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/35#issuecomment-255722194,1,['message'],['message']
Integrability," convention as the one used in DataTypeInfo<>. So ```f``` instead of ```float```, ```vector<f>``` instead of ```vector<float>```, ```Vec3d``` instead of ```Vec<3, double>```. Unifying the other way around would have implied to use ```Vec<3, double>``` in our scene templates... which was a bit too much :); With that in mind, the current implementation of DataExchange is behaving exactly as it should. . The unittest you are pointing is showing a normal behavior. This behavior is that the template type that does not have a Name() static method and used in a class that is not implementing GetCustomTemplate will fall back to the automatic generation decoded from the typeid(). But this automatic generation is the code we want to get rid of (if one day someone has enough time to fix that) and not desired behavior to align with. Automatic decoding function to avoid breaking too much things until future evolution. . So currently the DataExchange implementation is using GetCustomClassName in order to implement consistent templates name with the other sofa components and not relying on the automatic generation. . If you are interested in unifying things i would recommend:; short term: implement a way to automatically use the DataTypeInfo<>::name() in the NameDecoder. If I remember well initially we didn't wanted to... because sofa::defaulttype was not a dependency of sofa::helper but now we have cleaned a lot that part it is possible to make something quickly. This would allow to remove all the GetCustomClassName in our code base to directly forward to DataTypeInfo<DataType>::name() when available instead of falling back. middleterm: add deprecation management to the falling back code to warn user it will disapear (when it was done we didn't has deprecation menagement...maybe it is worth having a look at that part nowaydays). longterm: remove all that crappy template DataTypeInfo<DataType>::name() and use the thing introduced in https://github.com/sofa-framework/sofa/pull/3289",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952:1620,depend,dependency,1620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952,1,['depend'],['dependency']
Integrability," data vectors while executing on each component (for example MechanicalVisitor::fwdForceField, calls addForce or addDForce on each component, each one modifying the force vector).; We define a **Parallel Section** as the execution of a given visitor function on a list of components.; We define a **Task** as the execution of a visitor function on a component. Therefore a parallel section is decomposed in an ordered list of tasks.; Each task accesses a given set of vectors (read or write accesses), and a given set of locations in these vectors. We can split the tasks in **phases** such that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined as the execution of the visitor function on a component; 2. Execute the first time step sequentially, logging/profiling all accesses to vectors; - create parallel sections and tasks; - in each task, log all accesses to vectors using and overloaded helper::vector::operator[]; 3. During the second time step, we launch a parallel thread that ; - splits each task in phase each phase doing a (statically) given number of vector accesses.; - for each phase, identify the bl",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:1396,depend,dependencies,1396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,2,['depend'],"['dependencies', 'dependency']"
Integrability," it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break the compatibility to the current `initData()` API, I would strongly suggest to remove this issue, by removing the two optional bool flags which are seldom used anyway (and can be replaced by a call to `setDisplayed()` or `setReadOnly()`).; * compared to when this code was originally written, c++ now allows to put initializers of member variables in the class declaration direct",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1637,message,messages,1637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283,1,['message'],['messages']
Integrability," mparams) Line 123	C++; 	Sofa.Core.dll!sofa::core::behavior::BaseMatrixLinearSystem::buildSystemMatrix(const sofa::core::MechanicalParams * mparams) Line 38	C++; 	Sofa.Component.LinearSolver.Direct.dll!sofa::component::linearsolver::MatrixLinearSolver<sofa::linearalgebra::BTDMatrix<6,double>,sofa::linearalgebra::BlockVector<6,double>,sofa::component::linearsolver::NoThreadManager>::setSystemMBKMatrix(const sofa::core::MechanicalParams * mparams) Line 241	C++; 	Sofa.Simulation.Core.dll!sofa::simulation::common::MechanicalOperations::m_setSystemMBKMatrix(double mFact, double bFact, double kFact) Line 455	C++; 	[Inline Frame] Sofa.Component.ODESolver.Backward.dll!sofa::core::behavior::MultiMatrix<sofa::simulation::common::MechanicalOperations>::setSystemMBKMatrix(const sofa::core::behavior::MechanicalMatrix & m) Line 71	C++; 	Sofa.Component.ODESolver.Backward.dll!sofa::component::odesolver::backward::EulerImplicitSolver::solve(const sofa::core::ExecParams * params, double dt, sofa::core::TMultiVecId<1,1> xResult, sofa::core::TMultiVecId<2,1> vResult) Line 154	C++; 	Sofa.Simulation.Core.dll!sofa::simulation::SolveVisitor::processSolver(sofa::simulation::Node * node, sofa::core::behavior::OdeSolver * s) Line 37	C++; 	Sofa.Simulation.Core.dll!sofa::simulation::Visitor::runVisitorTask<sofa::simulation::SolveVisitor,sofa::simulation::Node,sofa::core::behavior::OdeSolver>(sofa::simulation::SolveVisitor * visitor, sofa::simulation::Node * ctx, void(sofa::simulation::SolveVisitor::*)(sofa::simulation::Node *, sofa::core::behavior::OdeSolver *) task, sofa::core::behavior::OdeSolver * ptr, const std::string & typeInfo) Line 247	C++. ```. It crashes when BaseForceField warns about buildStiffnessMatrix not implemented ; https://github.com/sofa-framework/sofa/blob/c4387feeb9e4a9f303b8cb63359ba31f1fd00493/Sofa/framework/Core/src/sofa/core/behavior/BaseForceField.cpp#L57. I think you already suspected that there was a problem with multithreading and the message mechanism somewhere...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1436394850:4333,message,message,4333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1436394850,1,['message'],['message']
Integrability," not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break the compatibility to the current `initData()` API, I would strongly suggest to remove this issue, by removing the two optional bool flags which are seldom used anyway (and can be replaced by a call to `setDisplayed()` or `setReadOnly()`).; * compared to when this code was originally written, c++ now allows to put initializers of member variables in the class declaration directly, which for Data members could be preferable to initializing them in the constructor (the name and help message would be visible in the header instead of the implementation, it does not need to be duplicated in case there are multiple constructors, and there would no longer be any unhelpful warnings on some compilers about mismatched initialization orderings). I'm not suggesting to do that in all the components in this PR (as the diff would be horible to review), but any new designs of `initData` should check that this is possible (last time I looked at that, gcc and msvc did not agree on if we needed to write `Data<> d = initData(...)` versus `Data<> d { initData(...) }` versus `Data<> d = { initData(...) }`, but it was a long time ago...)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:2826,message,message,2826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283,1,['message'],['message']
Integrability," that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined as the execution of the visitor function on a component; 2. Execute the first time step sequentially, logging/profiling all accesses to vectors; - create parallel sections and tasks; - in each task, log all accesses to vectors using and overloaded helper::vector::operator[]; 3. During the second time step, we launch a parallel thread that ; - splits each task in phase each phase doing a (statically) given number of vector accesses.; - for each phase, identify the blocks of vectors accessed; - for each parallel section, build a dependency graph between task phases; - for each parallel section, schedule the parallel execution of the different task phases so that we keep the order of the operations and independent phases can run in parallel; 4. When the scheduling is computed, we run the following time steps in parallel; 5. When there is a change in the topology, we do the logging and scheduling phases again, while the simulation run sequentially. This is a work in progress. As you can imagine, designing and implementing this is far from trivial.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:2534,depend,dependency,2534,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,1,['depend'],['dependency']
Integrability,"# Deprecation macros. ## The 2 base macros. **Do not use them directly in your code**, see ""how to use them"" below. `SOFA_ATTRIBUTE_DEPRECATED(deprecateDate, removeDate, toFixMsg)`; To be used to trigger a deprecation warning. It is a simple `[[deprecated]]` interface.; Warns that something; &nbsp;&nbsp;&nbsp; - is DEPRECATED (so still usable) since `deprecateDate`; &nbsp;&nbsp;&nbsp; - will be removed on `removeDate`; and gives the toFixMsg instructions to fix the deprecation warning.; ; `SOFA_ATTRIBUTE_DISABLED(deprecateDate, disableDate, toFixMsg)`; To be used jointly with `= delete` to trigger an error. It is a flavored `[[deprecated]]` interface.; Warns that something ; &nbsp;&nbsp;&nbsp; - is DISABLED (so not usable anymore) since `disabledDate`; &nbsp;&nbsp;&nbsp; - was firstly deprecated on `deprecateDate`; and gives the toFixMsg instructions to fix the compilation error. ## How to use them. Create a new deprecation macro specifying the deprecation topic you are tackling.; This way, you won't have dates everywhere in your code. ## Example. ### Deprecate. I want to rename something that will break my API. ; To ease the transition for my users, I will propose a deprecation period with a fine message by using a deprecation macro.; Latest release is v20.06, next release (currently under development) is v20.12, after that will come the v21.06. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DEPRECATED( \; ""v20.12 (PR#12345)"", ""v21.06"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod();; ```. Anyone using myDeprecatedMethod will get this **warning**: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is still usable but has been DEPRECATED since v20.12 (PR#12345). You have until v21.06 to fix your code. XXX must be renamed into YYY.; ```. ### Disable. Now forward in time ...; Latest release is v20.12, next release (curr",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249:259,interface,interface,259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249,2,['interface'],['interface']
Integrability,"& navigate in the inclusion graph.: ; https://htmlpreview.github.io/?https://raw.githubusercontent.com/SofaDefrost/sofa/reduceInclude2/include_master_2017_12_18.html. It was suggested by @guparan that we could aggregate the files around their cmake ""components"" so we could identify easily the ""strengh"" (the amount of .h) between the cmake package. Then from this graph views, actions can be to guide the refactoring. ; Eg: ; 1) remove the includes that are not mandatory to make the graph more sparse (there is very easy cases that can be done during coding sprint). ; 2) when there is cycle in the graph, serious refactoring may be needed because this indicate it is not possible to properly make package out of it (this happens in Helper & DefaultType). ; 3) for the elements in the graph that are included only few time this means it is very easy to put them into ""external"" plugins without breaking a lot of code. . I practiced 1) in https://github.com/SofaDefrost/sofa/tree/reduceInclude2; I practiced 2) in https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel; I practiced 3) in several of our pluginization's PR. What I found very hard is to make that in coordinated way and in a smooth enough way not to kill anyone's projects. On the existing code base:; - make PR that unify the way to declare namespace/include guards so refactoring with string replacement instead of manually patching the code base would be faciliated.; - make PR to reduce the include's graph pressure (this will ease to cut the code into packages); - make more PR to deprecates components ; - put as real plugin the leaves of the dependency graph (starting with the leaves is easier because it indicate that only a small part of our code base needs to be updated). ; - find an agreement on the resulting structure.; - find an agreement on the amount of change and understand how this will impact third party code and code history. ; - find an agreement on the process to actually make the changes. ...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-372626690:1733,depend,dependency,1733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-372626690,1,['depend'],['dependency']
Integrability,"): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_C",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3691,Message,Message,3691,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['Message'],['Message']
Integrability,"**[ci-depends-on]** detected during [build #100](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/100/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1508189222:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1508189222,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #101](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/101/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1511034701:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1511034701,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #102](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/102/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1514461081:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1514461081,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #103](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/103/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1514862938:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1514862938,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #107](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/107/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/343**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0a5bae50f5f9b66fef5becbe36a6460da49069fc_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1517077493:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1517077493,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #108](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/108/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1522925821:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1522925821,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2050/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/147**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56f8258ff0b6d1f19d24f2231eb3868d7b10fa31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-845754855:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-845754855,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2199/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/15**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG b2ab6375727242ddf63721f62ec36b363e93e5f0_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876441899:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876441899,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2419/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Compliant/pull/4**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG aa799839804a3860135eb30c88ab8c39bf388ec1_; - **Merge or close https://github.com/sofa-framework/Flexible/pull/3**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG fbc130904462023496cbd330c7d815f0dfd95af1_; - **Merge or close https://github.com/sofa-framework/SofaPython/pull/2**; _For this build, SofaPython/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython; GIT_TAG ac7e23fb6aec5979c97b84a4feecdbb9dd340256_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/211**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ec9320ca0a3bec4ffc5e55abe5cd099ccdbff18f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949425223:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949425223,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2505/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-990767792:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-990767792,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2532/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/21**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 90f4931413269a48944f967d0cf0c48dd2eabff2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-990926995:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-990926995,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2631/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/228**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 6abdfdf5dc33d253157dc0b5bf2b0e9081e9404c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1048760732:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1048760732,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076458415:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076458415,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2776/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/23**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 2281b660044053cf0ac3e716561573436365caac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1077318937:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1077318937,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1091603512:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1091603512,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 031154805e814e1b08ae761773c8eb701270b8ac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1112721363:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1112721363,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0c27e04e106485e281259c4572a83c13659add84_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1191527540:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1191527540,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 50efba04a2b1e2b987cf88358884713aff79f17e_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 6237f73861a9a668fbcf04213d8c521ae0faab82_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1173473489:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1173473489,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288912041:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288912041,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/6**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 1623e8023d58313e5b30e244fb998797e057e352_; - **Merge or close https://github.com/sofa-framework/Registration/pull/6**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 1edd80521f6493f4716a922e5b9f552e4f7e41e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286890386:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286890386,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386941374:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386941374,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 30b463128985a76fdb4a8a28dec3c2c80cff8310_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429789161:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429789161,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG e37db0bdc037abbb339f6e371d60df26fc391b83_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589519335:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589519335,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564882829:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564882829,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714805666:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714805666,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055257:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055257,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785421218:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785421218,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/378**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG bc5b042b7d98baa7ee82a793b0610d6a2637011a_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/119**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG afd60931feaf1509be7c8469a888f78991bc9b76_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822364007:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822364007,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4471/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922888922:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922888922,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4495/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/397**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0926fe46474630a1775f5ba67e825dc11110f214_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1955908736:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1955908736,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966175549:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966175549,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4651/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/106**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG f9315099803ad0e7083d695854a3698f42187724_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2084806339:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2084806339,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2222587889:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2222587889,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 4e59e1351995920e3f2e16fedf6a9cec2ff407ec_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251166999:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251166999,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 68f14ba14c960c04c536912ac250549c10ae5e57_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2283014413:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2283014413,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4848/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2303534170:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2303534170,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2257866241:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2257866241,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5003/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/142**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 5cc3118b3daf2be9bf4045902aed54a0f2a13442_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2373408117:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2373408117,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5012/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2393681389:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2393681389,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5033/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2403796765:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2403796765,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5052/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2439441584:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2439441584,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #110](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/110/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1526781670:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1526781670,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #111](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/111/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1526980828:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1526980828,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #112](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/112/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1530630051:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1530630051,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2050/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/147**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56f8258ff0b6d1f19d24f2231eb3868d7b10fa31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846028265:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846028265,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2193/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/regression/pull/14**; _For this build, regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/regression; GIT_TAG e5a26110de8e6213228cae08bcbc0d1da4716beb_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-874571694:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-874571694,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868365619:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868365619,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2199/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/15**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG b2ab6375727242ddf63721f62ec36b363e93e5f0_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876455901:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876455901,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2419/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949464888:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949464888,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2532/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/21**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 90f4931413269a48944f967d0cf0c48dd2eabff2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-992259671:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-992259671,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076520191:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076520191,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1091754333:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1091754333,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 031154805e814e1b08ae761773c8eb701270b8ac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1112925746:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1112925746,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0c27e04e106485e281259c4572a83c13659add84_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1192576772:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1192576772,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 50efba04a2b1e2b987cf88358884713aff79f17e_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 12db17a2aed146cae57e58de08d99f8a298c01d9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174610164:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174610164,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3216/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/34**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 8d35ce10069c2f7b220be31fa96c8039e767cd7d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239131582:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239131582,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289124350:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289124350,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/6**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 231198ab18ca3efb8c1042cbc8abbe08c1d89551_; - **Merge or close https://github.com/sofa-framework/Registration/pull/6**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 1edd80521f6493f4716a922e5b9f552e4f7e41e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286932948:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286932948,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386994988:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386994988,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 30b463128985a76fdb4a8a28dec3c2c80cff8310_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429790999:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429790999,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1f4bc22558fcf26b998c9f31b82723c33bf0f9f7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590847999:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590847999,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1567657374:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1567657374,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1736845464:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1736845464,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785430670:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785430670,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/378**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG bc5b042b7d98baa7ee82a793b0610d6a2637011a_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/119**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG afd60931feaf1509be7c8469a888f78991bc9b76_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822751697:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822751697,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4495/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1956213999:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1956213999,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966308036:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966308036,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4651/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2097853691:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2097853691,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225309022:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225309022,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0d51e42c961405fceedf5c78904fa76b419f572a_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251704062:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251704062,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f7af4f78a5111fed68705eeb588983e42d6cdc85_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2301878977:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2301878977,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2257940882:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2257940882,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5003/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/142**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 5cc3118b3daf2be9bf4045902aed54a0f2a13442_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2383080620:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2383080620,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5033/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2406884809:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2406884809,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2050/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/147**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56f8258ff0b6d1f19d24f2231eb3868d7b10fa31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846036890:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846036890,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868392059:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868392059,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2199/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/15**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG b2ab6375727242ddf63721f62ec36b363e93e5f0_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876984172:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876984172,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2532/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/21**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 90f4931413269a48944f967d0cf0c48dd2eabff2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-992620172:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-992620172,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076548324:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076548324,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102256772:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102256772,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 5c716bcfa72a407dca8c9e939313545bd45b2d99_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1114676083:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1114676083,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0c27e04e106485e281259c4572a83c13659add84_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1192579408:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1192579408,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 1618e2d553b18252895c2910e98b08ade136eb3a_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef554bf2dcda87220946c3e6fedabb0a9b2bbff2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174693766:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174693766,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289172460:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289172460,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290061212:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290061212,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1387495245:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1387495245,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 030e1d89dd26deeedae60c40c109138a59ec1f3d_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG a2ebbd6e68e9cea086e5f365651f9b24d6b283af_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1604338261:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1604338261,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568403041:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568403041,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1740905944:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1740905944,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785431985:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785431985,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/378**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG bc5b042b7d98baa7ee82a793b0610d6a2637011a_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/119**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG afd60931feaf1509be7c8469a888f78991bc9b76_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822896400:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822896400,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966316632:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966316632,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225636836:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225636836,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0d51e42c961405fceedf5c78904fa76b419f572a_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251777571:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251777571,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2274613721:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2274613721,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5003/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/142**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 5cc3118b3daf2be9bf4045902aed54a0f2a13442_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2383533524:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2383533524,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2050/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/147**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56f8258ff0b6d1f19d24f2231eb3868d7b10fa31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846056178:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846056178,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868400678:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868400678,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2199/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/15**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG b2ab6375727242ddf63721f62ec36b363e93e5f0_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-877005133:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-877005133,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2532/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-993346123:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-993346123,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076553376:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076553376,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102556902:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102556902,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/13**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 918df4fbed8665f1cdd7f3772d4427234c297f50_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1164193056:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1164193056,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1116265701:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1116265701,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0c27e04e106485e281259c4572a83c13659add84_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1209150358:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1209150358,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef2a8b1094f977eb60b43efcc631aa3f6b6b74c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1175812851:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1175812851,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289264437:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289264437,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290113913:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290113913,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1399331346:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1399331346,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7b22ab5eccbe128bad20b9b68c4e2c7c3aaa0236_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 57d081401afdf553ec167d03d213b8a4074309c5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620005425:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620005425,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568439978:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568439978,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 255fb151774d9480fe30bb16fb0d4bbefbd5b3c7_; - **Merge or close https://github.com/sofa-framework/Registration/pull/14**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 65188decc71b7d49e792415b6f3e6cdf058744f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2041929699:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2041929699,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/362**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 51a2a5bfb15a74c930ab28b24e64eadc0a1752c8_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1647500211:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1647500211,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1744539037:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1744539037,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1787932394:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1787932394,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1824442451:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1824442451,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966335062:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966335062,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225772662:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225772662,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0d51e42c961405fceedf5c78904fa76b419f572a_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2255268240:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2255268240,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2276017391:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2276017391,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2050/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/147**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56f8258ff0b6d1f19d24f2231eb3868d7b10fa31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-848018942:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-848018942,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868516297:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868516297,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1077784096:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1077784096,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102732188:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102732188,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/14**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 8d6531fa6c5fe4f790a4acbf1ab8919b5cdf3278_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1164562491:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1164562491,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122285797:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122285797,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 8d45f3362d5ae9a44c669a7cd9a3d009c5f0bf31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1210355253:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1210355253,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef2a8b1094f977eb60b43efcc631aa3f6b6b74c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1175997464:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1175997464,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289303652:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289303652,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290198557:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290198557,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1403518300:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1403518300,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7b22ab5eccbe128bad20b9b68c4e2c7c3aaa0236_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1c5f59c1f1809038f087f994e5f6ddba4999824c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620294324:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620294324,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1582400008:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1582400008,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 255fb151774d9480fe30bb16fb0d4bbefbd5b3c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042130212:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042130212,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/362**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 2d5f82603ca0ff8a45abe813e9908b1b2944cd43_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653271576:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653271576,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1788024055:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1788024055,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4471/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1928605070:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1928605070,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG b45ee24754d78223533bea5cd04bae6a8c3441c6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 8261e01ea5c338bc065fbf1af007418b022bf2ae_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966791015:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966791015,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2255283562:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2255283562,2,['depend'],"['dependencies', 'depends-on']"
Integrability,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2288212830:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2288212830,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868532668:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868532668,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1079162712:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1079162712,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1104890560:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1104890560,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/18**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 5644b81aa81bb243573316bced498fcfb565486e_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1177176844:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1177176844,1,['depend'],['depends-on']
Integrability,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122286799:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122286799,2,['depend'],"['dependencies', 'depends-on']"
Integrability,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f1539b7ebeccfe891801157f08baa8a18bf573f2_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 18dd43b27567027dae4face72fac47752c80b862_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1253465542:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1253465542,1,['depend'],['depends-on']
Integrability,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef2a8b1094f977eb60b43efcc631aa3f6b6b74c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1176949215:6,depend,depends-on,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1176949215,1,['depend'],['depends-on']
