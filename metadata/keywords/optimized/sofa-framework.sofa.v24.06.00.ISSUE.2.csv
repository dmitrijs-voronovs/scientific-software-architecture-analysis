quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"ontext manager is provided to commit modifications back, should the sparsity pattern change, as shown in the example below. The binding is somewhat unconventional as it uses `ctypes` for simplicity. Perhaps a cleaner version could be made using regular bindings + passing Eigen matrix pointers through python capsules if someone is motivated. # Example; ```python; from SofaPython import sparse; import numpy as np. import Sofa; Sofa.loadPlugin('Flexible'). def createScene(node):; template = 'Affine'. dofs = node.createObject('MechanicalObject', template = template, size = 1); dofs.init(); ; mass = node.createObject('AffineMass', template = template); mass.init(); mass.bwdInit(). ref = np.identity(12); ; with sparse.data_view(mass, 'massMatrix') as m:; assert (m == ref).all(). m[10, 10] = 14; ref[10, 10] = 14. # assert our in-place modifications are reflected; with sparse.data_view(mass, 'massMatrix') as mm:; assert (mm == ref).all(). m[0, 10] = 14; ref[0, 10] = 14. # sparsity change: scipy matrix reallocates, no longer aliases ; with sparse.data_view(mass, 'massMatrix') as mm:; assert not (mm == ref).all(); ; # modification commit happens here. with sparse.data_view(mass, 'massMatrix') as m:; assert (m == ref).all(); ```. # Changelog. - Added `DataTypeInfo` for `EigenBaseSparseMatrix` derived classes; - Added a bunch of C functions in `SofaPython/ctypes.cpp` for aliasing logic; - Added a ctypes binding for aliasing + contexts in `SofaPython.sparse`; - Added an example in `SofaPython/examples/sparse.py`; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/411:2091,failure,failures,2091,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/411,2,['failure'],['failures']
Availability,"ood as it is misleading on the purpose of the function.; In the following example ; ```cpp; MyObject* ptr;; Base::className(ptr); ; ```; You don't see this is a templated method and you have no idea what 'ptr' is for, and you don't even know if putting a nullptr will work or not. ; Using the templated only syntax is more clear on the role of the function; ```cpp; Base::className<MyObject>(); ; ```; Or if you have an object instance; ```cpp; Base::className<declspec(obj)>(); ; ```. Most common code update pattern; ============================; The most common compilation problem you will encounter with non updated external plugin is related to the overriding of getTemplateName or templateName() method. This method is now now considered as final and thus it is not possible to override it anymore. ; To update old code like this: ; ```cpp; MyClass : public BaseObject; virtual std::string getTemplateName() const { return templateName(); } ; static std::string templateName(const CapsuleCollisionModel<DataTypes>* = nullptr); {; return DataTypes::Name();; }; ```; You can remove the code as the default name generation mecanisme can handle that for you automatically using the ""Name"" . . In the case if your DataTypes does not have a Name() function or if some of the class template parameters should not be exposed as runtime template then you need to implement your custom naming scheem by implementing the following function; ```cpp; static const std::string CustomTemplateName(); { ; return ""CustomName"";; }; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1283:4498,failure,failures,4498,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1283,2,['failure'],['failures']
Availability,"otations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2250:2030,failure,failures,2030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250,2,['failure'],['failures']
Availability,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4255:2310,failure,failures,2310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255,2,['failure'],['failures']
Availability,"penglVisual'/> <!-- Needed to use components [OglModel, ]-->; 	; 	; 	<!-- The object to export -->; 	<Node name=""MyRegularGrid"">. 		<MechanicalObject name=""mo""/> ; 		<UniformMass vertexMass=""0.2"" />; 		<RegularGrid name=""hexaGrid"" nx=""6"" ny=""6"" nz=""4"" xmin=""-10.0"" xmax=""10.0"" ymin=""-10.0"" ymax=""10.0"" zmin=""0"" zmax=""0.50""/>; 		<HexahedronSetTopologyContainer name=""Topo"" src=""@hexaGrid"" />		; 		<HexahedralFEMForceField name=""FEM"" youngModulus=""1e13"" poissonRatio=""0.3"" method=""large"" />; 		; 		<!-- Visual node to allow the exportation -->; 		<Node name=""VisualNode"" >; 			<OglModel name=""Visual"" color=""green"" />; 			<IdentityMapping input=""@.."" output=""@Visual"" /> ; 		</Node>; 		; 		<OBJExporter name=""export_OBJ"" filename=""C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/regularGrid5x5"" exportAtBegin=""true"" exportEveryNumberOfSteps=""0"" />; 		; 	</Node>; 	. </Node>. ```. **Env vars**. ```bash; echo ""SOFA_ROOT = C:\Users\jducr\Documents\Librairies\sofa\build\bin\Release""; echo ""PYTHONPATH = C:\Users\jducr\Documents\Librairies\Python\Python37""; echo ""python3 -V = Python 3.7.7""; ```. ```txt; The scene is working fine, just the normals are exported wrong. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpem",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:3409,echo,echo,3409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,3,['echo'],['echo']
Availability,ping @EulalieCoevoet :-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-358261757:0,ping,ping,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-358261757,1,['ping'],['ping']
Availability,ping @hugtalbot :wave:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2346#issuecomment-922933924:0,ping,ping,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2346#issuecomment-922933924,1,['ping'],['ping']
Availability,ping @olivier-goury :-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/439#issuecomment-338594778:0,ping,ping,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/439#issuecomment-338594778,1,['ping'],['ping']
Availability,ping @vmagno,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/687#issuecomment-400349730:0,ping,ping,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/687#issuecomment-400349730,1,['ping'],['ping']
Availability,"plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: exit /b %1; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :VCEnd"" exited with code 1.; 1>Done building project ""INSTALL.vcxproj"" -- FAILED.; ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. ```. #1114; ______________________________________________________. Sugges",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:3115,error,error,3115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,2,['error'],"['error', 'errorlevel']"
Availability,"pological changes for compliance vector; - Container : add accessor to the topology type; - SubsetMapping : add resizeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/217:1919,failure,failures,1919,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/217,1,['failure'],['failures']
Availability,"polygon cube intersection is a utility file only used with SparseGridTopology.; Even more confusing as it has a ""vec.h"" file with lots of macro defined inside. I did not put any stub files with the usual ""this file move there"" because I did not see the priority for it.; But I can do it if requested. Breaking flag to be ""consistent"" but I guess 99(.99)% of users wont even flinch at it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1772:932,failure,failures,932,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1772,2,['failure'],['failures']
Availability,"ponent.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Con",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1953,ERROR,ERROR,1953,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"ponents [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4234:3627,failure,failures,3627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234,2,['failure'],['failures']
Availability,"ported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to us",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1894,Error,Error,1894,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['Error'],['Error']
Availability,"pp) the static typeinfos. So in short...it is abstract by default and static after a specific include. Bying abstract by default ...make that the dependencies is reduced a lot. . This PR:; - add DataTypeId<xxxx> so we can have an unique id per data type. This unique id is statically allocated and is used a way to access the DataTypeInfoRegistry in an efficiant way. ; - add a unique storage repository (DataTypeInfoRegistry). This storage is holding all the typeinfo use in Sofa. There is two way ; to be registered in the repository, the first one consist consist in explcitly adding a typeinfo instance in the storage. This is what to do when we want to be sure the fully defined data type is registered. ; - the other was implemented to mimick at best the the existing behavior in Sofa while fixing some of its error. It works the following way... when a Data<Type> is used this automatically trigs the setting of the typeinfo in the repository. If no DataTypeInfo<> is available this fallback to the default one but the data info cannot be used... if in a subsequent compilation unit (.cpp) the same Data<Type> is used with the complete type, the registring is done again...and if the type is more complete...then the old (partial) type is replaced with the new one. ; - the common data type info are now in their own file in sofa/defaulttype/typeinfo/TypeInfo_XXXX.h/cpp; - the templated code shared between multiple data type info are now in the sofa/defaulttype/typeinfo/models/XXXXX.h; - there is no more dependency to some specific contained data type (eg: RGBAcolor, Vec, Matrice, Set,) in AbstractDataTypeInfo or DataTypeInfo.; - there is a mechanism to get the list of registered typeinfo and wheter the are fully defined or only partially. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate ne",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:3261,avail,available,3261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['avail'],['available']
Availability,"proach of the kind of pattern I'm using in the init/reinit function (actually any change to the data from the UIs should also be checked); ```cpp; void MyComponent::init(){; m_componentState = ComponentState::Valid; // By default the ComponentState is to Undefined. ; if( d_stiffness.getValue() < 0.0 ){; msg_warning(this) << ""The 'stiffness=""<< d_stiffness.getValueString() << ""' parameters is outside the validity range of [0, +INF[. Continuing with the default value=500.0 . ""; ""To remove this warning message you need to set the 'stiffness' attribute between [0, +INF[."" ; d_stiffness.setValue(500) ;; }. if( this->m_state nullptr ){; msg_error(this) << ""No mechanical state, the component is thus de-activated.""; ""To remove this error message you need to add a MechanicalObject.""; m_componentState = ComponentState::Invalid;; }; }; ```; Then for each function crashing sofa when the object is not properly initialized... ; ```cpp; void MyComponent::draw(); {; if(m_componentState == ComponentState::Deactivated); return ; ; ; if(m_componentState == ComponentState::Invalid){ ; msg_info_when(this, m_verbosityLevel == HIGH ) << ""You are calling a function on an invalid component. "" ;; return ; ; }; ....; }; ```. I agree this is a lot of code to add but I haven't yet a better solution. Now...if you implement this kind of pattern you can then do the following from the outside (eg: in the _test):; ```cpp; void myComponentInvalid_test(); {; ... make a scene with a MyComponent with an invalid '-1' param.... ; {; ExpectMessage error(Message::Error); // test failure if the component does not send an error message; ; MessageAsTestFailure warning(Message::Warning); // test failure if the component do not send a messae while it shouldn't ; ; MyComponent::init() ; } ; EXPECT_EQ( MyComponent::getComponentState(), ComponentState::Invalid ); ; }; ```. N.B: When I look carefully the ExpectMessage & MessageAsTestFailure... I have the feeling this is a kind of an asynchronous exception mechanism.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278900494:1549,error,error,1549,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278900494,5,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,ps://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://cl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28761,redundant,redundant-function-ptr-dereference,28761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-function-ptr-dereference']
Availability,ps://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [readability-static-definition-in-anonymous-namespace](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-definition-in-anonymous-namespace.html) |; | | [readability-uniqueptr-delete-release](https://clang.llvm.org/extra/clang-tidy/checks/readability-uni,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29510,redundant,redundant-string-cstr,29510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-string-cstr']
Availability,"quadsInHexahedronArray was not really used. ; QuadsOrientationInHexahedronArray is the good one. Quick way to fix #2003. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2995:665,failure,failures,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2995,2,['failure'],['failures']
Availability,"quick PR from the pool regarding discussion #4561. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4576:595,failure,failures,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576,2,['failure'],['failures']
Availability,"r, there was no explanation what attributes can be used for position and orientation. There was even no explanation which order Euler rotation is using. Finally, I figured out them by trial and error, not by documentation. What I want to know is as follow:; 1. What components does SOFA have?; For example, in the code below, there are components: `DefaultAnimationLoop`, `MeshGmshLoader`, `EulerImplicitSolver`, `CGLinearSolver`, `PointSetTopologyContainer`, `MechanicalObject`, `UniformMass`, and `ConstantForceField`.; 2. Which attributes are usable in each component?; For example, in the code below, the component `MechanicalObject` has three attributes: `template`, `name`, and `showObject`.; 3. What data should each attribute have?; For example, in the code below, the attribute `totalForce` of the component `ConstantForceField` has six floats: `""1 0 0 0 0 0""`. ```; <?xml version=""1.0"" ?>. <!-- Loader and topology -->; <Node name=""root"" dt=""0.01"" gravity=""0 0 0"">. <RequiredPlugin name=""Sofa.Component.Mass""/>; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/>; <RequiredPlugin name=""Sofa.Component.StateContainer""/>; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/>; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/>; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/>; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/>; ; <DefaultAnimationLoop computeBoundingBox=""false""/>. <MeshGmshLoader name=""meshLoaderCoarse"" filename=""mesh/liver.msh"" />. <Node name=""Liver"">. <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>. <PointSetTopologyContainer name=""topo"" src=""@../meshLoaderCoarse"" />. <MechanicalObject template=""Rigid3d"" name=""MechanicalModel"" showObject=""1""/>. <UniformMass totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />. </Node>; </Node>. ```. Is there any documentation available for reference to find all information about components, attributes, and data in the simulation?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4647:2357,toler,tolerance,2357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4647,2,"['avail', 'toler']","['available', 'tolerance']"
Availability,"r/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node-c-api.h. Finally, if you observe strange consequence please report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1764:2614,failure,failures,2614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764,2,['failure'],['failures']
Availability,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8718,Error,Error,8718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,2,"['Error', 'error']","['Error', 'errors']"
Availability,"ractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData (2 ms); [ RUN ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected; ----------------------------------------------------------------------; Ran 1 test in 0.001s. OK; [ OK ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected (1 ms); [ RUN ] SofaPython3/Sofa.all_tests/2_Sofa_Core_Base_test_addNewDataFromParent; ======================================================================; ERROR: test_addNewDataFromParent (Base.Test); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""Base.py"", line 83, in test_addNewDataFromParent; c1 = root.addObject(""MechanicalObject"", name=""c1""); ValueError: Object type MechanicalObject<> was not created ; The object is not in the factory. . ----------------------------------------------------------------------; Ran 1 test in 0.001s. FAILED (errors=1); /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/Base.py:0: Failure; Failed; [ FAILED ] SofaPython3/Sofa.all_tests/2_Sofa_Core_Base_test_addNewDataFromParent, where GetParam() = /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/Base.py with args {test_addNewDataFromParent, } (2 ms); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:5143,ERROR,ERROR,5143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,3,"['ERROR', 'Failure', 'error']","['ERROR', 'Failure', 'errors']"
Availability,"raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)：in function‘dhdUSBGetDeviceCountList(int*, int*, int*, int)’：; dhdComUSB-libusb.cpp:(.text+0x215)：undefined reference to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1824,ERROR,ERROR,1824,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['ERROR'],['ERROR']
Availability,"rane.addObject('MeshTopology', src='@../membraneCoarse'); collisionMembrane.addObject('MechanicalObject', name='collMembrane'); collisionMembrane.addObject('TriangleCollisionModel'); collisionMembrane.addObject('LineCollisionModel'); collisionMembrane.addObject('PointCollisionModel'); #collisionMembrane.addObject('SubsetMapping'); collisionMembrane.addObject('IdentityMapping', name=""collMapping"", input='@collMembrane', output='@../mechMembrane'); ; # Visual model; visualMembrane=membrane.addChild(""VisualMembrane""); visualMembrane.addObject('MeshObjLoader', name='membraneFine', ; filename='FossaOvalisV1.obj', translation=[-10., -10., 0.]); visualMembrane.addObject('OglModel', name='visuMembrane', src='@../membraneCoarse', color='1 0 0'); visualMembrane.addObject('BarycentricMapping', name=""visuMapping"", input='@../mechMembrane', output='@visuMembrane'). # Needle; needle=rootNode.addChild(""needle""). needle.addObject(""EulerImplicitSolver""); needle.addObject(""CGLinearSolver"", iterations='2000', tolerance='1e-9', threshold='1e-9'). needle.addObject('MeshGmshLoader', name='needleCoarse', ; filename='NeedleV2.msh'); ; needle.addObject('TetrahedronSetTopologyContainer', ; name='needleTopo', src='@needleCoarse'); needle.addObject('TetrahedronSetTopologyModifier'); needle.addObject('TetrahedronSetGeometryAlgorithms',; name='needleAlgo'). needle.addObject('MechanicalObject', name='mechNeedle',template='Vec3d', showObject='1'); needle.addObject('StiffSpringForceField', name=""Springs"", stiffness=""1000"", damping=""10""); needle.addObject('TetrahedronFEMForceField', name='FEMNeedle', ; youngModulus='1000', poissonRatio='0.4'); needle.addObject('MeshMatrixMass', massDensity=""1"", name=""densityNeedle""). needle.addObject(""LinearSolverConstraintCorrection"", name='solvConstrNeed', template='Vec3d'). # Collider; collisionNeedle=needle.addChild(""CollisionNeedle""); collisionNeedle.addObject('MeshSTLLoader', name='needleFineSTL', ; filename='NeedleV2.stl'); collisionNeedle.addObject('MeshTopol",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:5209,toler,tolerance,5209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['toler'],['tolerance']
Availability,rapid fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/343:267,failure,failures,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/343,2,['failure'],['failures']
Availability,raries were hiding the system's ones. Example of CMake warnings from the out-of-tree plugins:. ```cmake; Cannot generate a safe runtime search path for target MyProject; because files in some directories may conflict with libraries in implicit; directories:. runtime library [libGLEW.so.2.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_filesystem.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_program_options.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_thread.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_date_time.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_chrono.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_system.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_atomic.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; ```. See https://github.com/sofa-framework/sofa/issues/1153 for more details. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1387:1998,failure,failures,1998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1387,2,['failure'],['failures']
Availability,"rc/sofa/core/objectmodel/Link.h:302: warning: bitwise operation between different enumeration types ‘sofa::core::objectmodel::TLink<sofa::core::objectmodel::BaseObject, sofa::core::objectmodel::BaseObject, 7>::<unnamed enum>’ and ‘sofa::core::objectmodel::BaseLink::LinkFlagsEnum’ is deprecated [-Wdeprecated-enum-enum-conversion]; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:302:37: warning: bitwise operation between different enumeration types ‘sofa::core::objectmodel::TLink<sofa::core::objectmodel::BaseObject, sofa::core::objectmodel::BaseObject, 7>::<unnamed enum>’ and ‘sofa::core::objectmodel::BaseLink::LinkFlagsEnum’ is deprecated [-Wdeprecated-enum-enum-conversion]; 302 | #define ACTIVEFLAG(f) ((ActiveFlags & (f)) != 0); | ~~~~~~~~~~~~~^~~~~~; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:305:81: note: in expansion of macro ‘ACTIVEFLAG’; 305 | typedef LinkTraitsValueType<DestType, DestPtr, ACTIVEFLAG(FLAG_STRONGLINK), ACTIVEFLAG(FLAG_STOREPATH)> TraitsValueType;; | ^~~~~~~~~~; ```; (I dont know why it was only appearing only for the plugin compilation, maybe some warnings flags are added by an external cmake target); Anyway the macro to enable flags was quite dirty to me so I have changed it a little bit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3714:2057,failure,failures,2057,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3714,2,['failure'],['failures']
Availability,"re used improperly. Making these tests is very important to avoid un-detected bugs on the error handling code paths and it bring a lot to the general quality of sofa. . About the fact that the ""error as test failure by default"" is covering 99% of our tests... to me this is an indication that our tests are only covering half of the things they should and I'm not sure we should facilitate this behavior. . This is why I came up to making the things explicit in each test because it force the test writer to specify what are his underlying assumption and expectation for each of his tests making things very clear. In addition it put in front of his eyes what he is testing.. and what he is not testing. . PS: I really like the very detailed test failure that are reported with the explicit approach, we have either the filename & lineno of the failing test as well as the location of the message emission. ; eg: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/DilateEngine_test_0/NormalBehavior/. EDIT: Your question make me think that some way to improve the things so maybe we can discuss what are the desirable features and how to expose them to the developpers. This is very hard because it is connected to lack of standardized way our code base reports errors (not exception, some uses error codes ,some uses messages). But I'm very afraid of starting such kind of very impacting discussion (I want to do UI ;)). In the meantime I suggest to use this PR. . EDIT2: what should i do with this:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/TrianglePressureForceField_test_0/trianglePressureForceFieldTest/ ? ; 1) Should I ignore the warning in the test generation ? ; 2) Should the function be pure virtual instead ? ; 3) Should the warning message be a dmsg_warning instead of a msg_warning one ? . EDIT3: And this one ; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/DifferenceEngine_test_0/DataTest/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197:1520,error,errors,1520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197,2,['error'],"['error', 'errors']"
Availability,"regarding the content of the PR, we should close it; moreover, you can find a work on making this work more robust in the PR #714 ; agreed @VannesteFelix ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/625#issuecomment-404860930:108,robust,robust,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/625#issuecomment-404860930,1,['robust'],['robust']
Availability,"regression was Introduced in; - #4601 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4643:584,failure,failures,584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4643,2,['failure'],['failures']
Availability,"related to https://github.com/SofaDefrost/SoftRobots/pull/283. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4763:607,failure,failures,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4763,2,['failure'],['failures']
Availability,"remove [ ] operator and some constructors. Warning as discussed, this will not be merged directly in master but in a PoC topology branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2082:682,failure,failures,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2082,2,['failure'],['failures']
Availability,remove all unnecessary warnings in CUDA files; The extern declaration o template was necessary for old gcc but it raise warnings with newer version.; I don't know the behavior on windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1548:444,failure,failures,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1548,2,['failure'],['failures']
Availability,"remove call to setValue using execParams which has been depreciate. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2033:612,failure,failures,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2033,2,['failure'],['failures']
Availability,remove deprecated macro:; - SOFA_TRANGLEFEM; - SOFA_TRANGLEFEM_MSG. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1233:324,failure,failures,324,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1233,2,['failure'],['failures']
Availability,"remove shadow varaible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5085:568,failure,failures,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5085,2,['failure'],['failures']
Availability,"remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2091:568,failure,failures,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2091,2,['failure'],['failures']
Availability,"rename variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1874:561,failure,failures,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874,4,['failure'],['failures']
Availability,"replace all beginEdit by WriteOnlyAccessor to avoid updateIfDirty while modifying the data. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2414:636,failure,failures,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2414,2,['failure'],['failures']
Availability,"resize(Size s, bool) is error-prone because of a similar function in std::vector but with different behavior: resize(size_type count, const value_type& value). See https://en.cppreference.com/w/cpp/container/vector/resize. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3373:24,error,error-prone,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3373,3,"['error', 'failure']","['error-prone', 'failures']"
Availability,"revert PR #1268. And Fix #1277 (👍 @epernod ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1803:590,failure,failures,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1803,2,['failure'],['failures']
Availability,"rning if `this` is explicitly used when initializing member variables, as it is not fully constructed yet; * however, compilers are happy with calling a method, which itself use `this`, hence the initial implementation of `initData()` (which was called `dataField()`) had the `this` pointer implicitely, but needed the `Data*` pointer to add if to the ""fields"" map, which is why it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` will incorrectly use the `initData()` version without default value but with one boolean flag, as `""mydefaultvalue""` is a `const char*` which requires a ""user-defined"" conversion to `std::string`, while `""help message""` is implicitely convertible to `bool` without any ""user-defined"" conversion, so preferred by the compiler. So if we break t",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1421,error,errors,1421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283,1,['error'],['errors']
Availability,"roduces more optimized binaries.; Results are not always good, and really depends on the situation/scene. Few cases where cl is slightly faster than clang-cl; Some bench:; - `caduceus.scn -g batch -n 10000`; - cl: `21.2541 s ( 470.498 FPS)`; - clang-cl: `19.6914 s ( 507.836 FPS)`; - MeshMatrixMass.scn with 4096 steps (from SofaBenchmark); - cl: `25504 ms`; - clang-cl: `18161 ms`; - `examples/Benchmark/Performance/benchmark_cubes.scn -g batch -n 1000`; - cl: `36.7404 s ( 27.218 FPS`; - clang-cl: ` 37.8146 s ( 26.4448 FPS)`; - `examples/Benchmark/Performance/TorusFall.scn -g batch -n 1000`; - cl: `8.63699 s ( 115.781 FPS)`; - clang-cl: ` 7.72771 s ( 129.404 FPS)`; - `applications/plugins/SofaCUDA/examples/beam16x16x76-fem-implicit-CPU.scn -g batch -n 1000`; - cl: ` 113.022 s ( 8.8478 FPS))`; - clang-cl: ` 100.645 s ( 9.93587 FPS)`; - SofaBenchmark, a lot shows only improvement around 10-15% but some are interesting:; - `BM_FixedArray_construct<sofa::type::Vec3f>/8192`; - cl: ` 10.5 us`; - clang-cl: ` 6.42 us`; - `BM_Matrix_typemat3x3f_assign/512` this one is weird (the same bench with eigenmat is much closer); - cl: ` 3.44 us`; - clang-cl: ` 1.18 us`. ## Warning; pybind is not compatible with clang-cl (and I am sure a lot of other libraries), even gtest as it is was not compatible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2563:2465,failure,failures,2465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2563,2,['failure'],['failures']
Availability,rojectToPointConstraint; - QuadPressureForceField ; - SurfacePressureForceField; - TaitSurfacePressureForceField ; - TrianglePressureForceField; - ParabolicConstraint; - ConstantForceField ; - LinearForceField; - EdgePressureForceField ; - OscillatingTorsionPressureForceField; - HermiteSplineConstraint ; - LinearVelocityConstraint; - [SofaConstraint] ; - DOFBlockerLMConstraint ; - FixedLMConstraint; - UncoupledConstraintCorrection; - [SofaMiscFem] ; - TriangleFEMForceField; - TriangularAnisotropicFENForceField; - TriangularFEMForceField; - [SofaMiscFem]; - FastTetrahedralCorotationalForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - [SofaMiscForceField] ; - MeshMatrixMass; - [SofaExporter] ; - WriteTopology; - [SofaMiscTopology] ; - TopologyChangeProcessor; - [SofaGeneralEngine] ; - SmoothMeshEngine; - [SofaDeformable] ; - MeshSpringForceField. Component previously upgraded in #1183 : ; - DiagonalMass; - [SofaGeneralSimpleFEM]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaSimpleFEM]; - HexahedronFEMForceField; - TetrahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - NonUniformHexahedronFEMForceField; - [SofaGeneralDeformable] ; - QuadBendingSpring; - QuadularBendingSprings; - VectorSpringFF; - FastTriangularBendingSpring; - TriangleBendingSpring; - TriangularBendingSpring; - TriangularBiquadraticSpringFF; - TriangularQuadraticSpringFF; - TriangularTensorMassFF; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1199:2156,failure,failures,2156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1199,2,['failure'],['failures']
Availability,"rror happen:; ```cmake; CMake Error at /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake:91 (message):; The imported target ""runSofa"" references the file. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/bin/runSofa-22.06.00"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake"". but not all the files it references. Call Stack (most recent call first):; /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiConfig.cmake:55 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/Bindings.SofaGuiConfig.cmake:36 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/BindingsConfig.cmake:34 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); CMakeLists.txt:5 (find_package); ```. **Steps to reproduce**; 1. Unzip the latest SOFA release for MacOS inside `$SOFA_ROOT`; 2. Create an empty c++ project with the following CMakeLists.txt:; ```cmake; cmake_minimum_required(VERSION 3.20); project(test). find_package(SofaFramework); find_package(SofaPython3). ```; 3. Call cmake using `cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT .`. **Expected behavior**; No cmake error. ---------------------------------------------. ### Environment. **Context**. - System: MacOS; - Version of SOFA: release 22.06.00. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/10013148/CMakeCache.txt)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485:1367,Down,Downloads,1367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485,3,"['Down', 'error']","['Downloads', 'error']"
Availability,"rt (; ModuleNotFoundError: No module named 'numpy.core._multiarray_umath'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 144, in <module>; from numpy.__config__ import show as show_config; File ""C:\SOFA\Lib\site-packages\numpy\__config__.py"", line 4, in <module>; from numpy.core._multiarray_umath import (; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 50, in <module>; raise ImportError(msg); ImportError:. IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!. Importing the numpy C-extensions failed. This error can happen for; many reasons, often due to issues with your setup or how NumPy was; installed. We have compiled some common reasons and troubleshooting tips at:. https://numpy.org/devdocs/user/troubleshooting-importerror.html. Please note and check the following:. * The Python version is: Python3.10 from ""C:\Users\JetsLab\.pyenv\pyenv-win\versions\3.10.11\python3.exe""; * The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:5541,error,error,5541,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,2,"['Error', 'error']","['Error', 'error']"
Availability,"runSofa is now using a two column view to separate type and name in the graph view. ; by default the size is to short to visualize the types. ; In this PR i increase it. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2416:716,failure,failures,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2416,2,['failure'],['failures']
Availability,"runSofa's QtViewer and the new SofaQtQuick interface create a ""Core Profile"" OpenGL context on Linux, with Intel GPUs, with the following error messages:. > QtViewer: OpenGL 4.5 (Core Profile) Mesa 17.0.2 context created.; > Error: GL_ARB_multitexture not supported; > ########## SIG 11 - SIGSEGV: segfault ##########. A core profile context isn't likely to support the ARB_multitexture extension because that extension is specific to the fixed-function pipeline. (For more information: [Check this thread on OpenGL's forum](https://www.opengl.org/discussion_boards/showthread.php/199472-GL_ARB_multitexture-not-supported?p=1286582). Bug reproduced on 3 laptops with intel graphics, with Intel's drivers installed, on Ubuntu 16.04 and Arch linux.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/238:138,error,error,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/238,2,"['Error', 'error']","['Error', 'error']"
Availability,runSofa.exe system error :; - python27.dll is missing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879:19,error,error,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879,1,['error'],['error']
Availability,"s afterwards. It is a reopening of #429 (sort of).; I started from https://github.com/SofaDefrost/sofa/commits/deprecating_components beheaded until 456d88343e210ce89d9f7436c290be92fe438313 and merged it with master.; ________________________________________________________________. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. ; - add an InfoComponent in the loaded scene to indicate when an object failed to be created. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and #425. Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453:1198,down,down,1198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453,1,['down'],['down']
Availability,"s. ### [[All] CLEAN extlibs integration and install](https://github.com/sofa-framework/sofa/commit/40669c610100a67f46b1405a972b39fe13291eba); - extlib headers are now installed in include/extlibs; - Windows dependency pack headers are now installed in include/WinDepPack; - SOFA now always tries to `find_package` an extlib before using the embedded one; - header-only extlibs too are now easier to override (see extlibs/CMakelists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOF",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:1460,error,error,1460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['error'],['error']
Availability,"s\numpy\core\__init__.py"", line 24, in <module>; from . import multiarray; File ""C:\SOFA\Lib\site-packages\numpy\core\multiarray.py"", line 10, in <module>; from . import overrides; File ""C:\SOFA\Lib\site-packages\numpy\core\overrides.py"", line 8, in <module>; from numpy.core._multiarray_umath import (; ModuleNotFoundError: No module named 'numpy.core._multiarray_umath'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 144, in <module>; from numpy.__config__ import show as show_config; File ""C:\SOFA\Lib\site-packages\numpy\__config__.py"", line 4, in <module>; from numpy.core._multiarray_umath import (; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 50, in <module>; raise ImportError(msg); ImportError:. IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!. Importing the numpy C-extensions failed. This error can happen for; many reasons, often due to issues with your setup or how NumPy was; installed. We have compiled some common reasons and troubleshooting tips at:. https://numpy.org/devdocs/user/troubleshooting-importerror.html. Please note and check the following:. * The Python version is: Python3.10 from ""C:\Users\JetsLab\.pyenv\pyenv-win\versions\3.10.11\python3.exe""; * The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:1219,error,error,1219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,2,['error'],['error']
Availability,"sceneTransform() in VisualParams has been deleted for v21.12 (and while deprecated was doing nothing anyway). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2539:654,failure,failures,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2539,2,['failure'],['failures']
Availability,"self.name = name; self.addNewInput('positions', datatype=""vector<Vec3d>"", value=positions, help=""test""); self.addNewOutput('average', datatype=""Vec3d"", help=""average""); ; def parse(self, arg):; pass; ; def init(self):; 	pass; ; def update(self):; value = [0, 0, 0]; for pos in self.positions:; value[0] += pos[0]; value[1] += pos[1]; value[2] += pos[2]; value[0] /= len(self.positions); value[1] /= len(self.positions); value[2] /= len(self.positions); self.cleanDirty(); self.average = [[-value[0],-value[1],-value[2]]]; pass. def createScene(rootNode):; loader = rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); psde = PyEng(rootNode, name=""PSDE"", positions=loader.findData('position').getLinkPath()); rootNode.createObject('TransformEngine', name='TE', input_position=""@loader.position"", translation=psde.findData('average').getLinkPath()); rootNode.createObject('OglModel', name=""visu"", position=""@TE.output_position"", triangles=""@loader.triangles"",; color=""1 0 0 1""); ```. With this syntax, I can create my engines definition once, and create as many as I want, on the fly, with any parameter I want for my input fields. It's actually even better, because:; - I don't have to create inputs with the fields I pass to the constructor. It could be simple data (addNewData vs addNewInput); - Construction of datafields is more explicit, thus less error-prone; - No need to go search for a decorator function somewhere in SofaPython, or to declare a dictionary of default arguments, everything is performed in the constructor. So, yeah, this PR is now virtually useless.; There's one thing I don't like with this syntax though, it's that the creation of the object is performed at the same time as it is assigned to the scene graph, which, in my opinion is not always desirable.; Something closer to this would be neat:; ```py; rootNode.addObject(PyEng(name='PSDE', positions=loader.findData('position').getLinkPath()); ```. I'll work on that in the following days :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442:1620,error,error-prone,1620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442,1,['error'],['error-prone']
Availability,serialisation work on color datatype. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/472:294,failure,failures,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/472,2,['failure'],['failures']
Availability,"setMechanical() and isMechanical() use the boolean states of forces, masses and constraints.; But the ""meta-alias""(?) `isMechanical` only link forces and masses. So it would make sense to add constraints 🤔. Avoid cases like https://github.com/fredroy/BeamAdapter/commit/58b3db1eb11dab501eec7d6a50b6cce3fcaf9a51. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4360:856,failure,failures,856,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4360,2,['failure'],['failures']
Availability,"setParent is called on Datas when parsing BaseObjectDescriptions on BaseObjects.; The default behavior is incompatible with the Data-based API we want to substitute to the current Link system between components. I thus want to be able to override the default setParent() behavior in my ObjectLink POC (see [here](https://github.com/SofaDefrost/ComponentData_POC/pull/1) for draft implementation). Please, don't hesitate to comment on the PR on the POC repository's pull request mentioned above. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1224:751,failure,failures,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1224,2,['failure'],['failures']
Availability,"simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double)+0x124) [0x7f6588263ed4]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulationCore.so(sofa::simulation::Simulation::animate(sofa::simulation::Node*, double)+0x54) [0x7f65882c9c44]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(sofa::Python_scene_test::run(sofa::Python_test_data const&)+0x2e1) [0x7f658ebb3791]; -> ../builds/pr/all/bin/Compliant_test(sofa::Python_scene_test_sofa_python_scene_tests_Test::TestBody()+0x2e) [0x54f76e]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*)+0x33) [0x7f658ebd7223]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::Test::Run()+0xb7) [0x7f658ebca917]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::TestInfo::Run()+0x9e) [0x7f658ebca9be]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::TestCase::Run()+0xa5) [0x7f658ebcaac5]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::internal::UnitTestImpl::RunAllTests()+0x248) [0x7f658ebcd198]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::UnitTest::Run()+0x54) [0x7f658ebcd454]; -> ../builds/pr/all/bin/Compliant_test(main+0xd4) [0x4aeb84]; -> /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7f6585034f45]; -> ../builds/pr/all/bin/Compliant_test() [0x4aec6f]; bash: line 1: 11528 Terminated ../builds/pr/all/bin/Compliant_test --gtest_output=xml:../builds/pr/all/tests/Compliant_test/report.xml 2>&1; /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/scripts/ci/tests.sh: error: Compliant_test ended with code 143; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:8236,error,error,8236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,1,['error'],['error']
Availability,"since PR #1268 ; setting the data bbox manually in root node is not working anymore:. For example: in SPHParticleSing.scn; ```<Node dt=""0.01"" gravity=""0 -10 0"" bbox=""-4 -4 -4 4 4 4"">```. style gives the error:; ```[WARNING] [RealGUI] Global Bounding Box seems very small; Your viewer settings (based on the bbox) are likely invalid, switching to default value of [-1,-1,-1,1,1,1].This is caused by using component which does not implement properly the updateBBox function.You can remove this warning by manually forcing a value in the parameter bbox=""minX minY minZ maxX maxY maxZ"" in your root node```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1277:203,error,error,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1277,1,['error'],['error']
Availability,"sity? Its reference is commented in the CMakeLists. I did not touch it. - SofaKernel/modules/SofaCore/src/sofa/core/behavior/InertiaForce.h -> removed because not used and not referenced in CMakeLists. - SofaKernel/modules/SofaCore/src/sofa/core/collision/ParallelPipeline.h and .cpp -> removed because empty class, not used and not referenced in CMakeLists. - DevBaseMonitor: appears to be used but not referenced in CMakeLists -> added. - SofaKernel/modules/SofaHelper/src/sofa/helper/io/MassSpringLoader.h -> removed; - SofaKernel/modules/SofaHelper/src/sofa/helper/io/bvh -> removed. - SofaKernel/modules/SofaHelper/src/sofa/helper/logging/LoggerMessageHandler.h and .cpp -> removed because not used and not referenced in CMakeLists. - SofaKernel/modules/SofaHelper/src/sofa/helper/FnDispatcher.cpp -> removed because empty, and not referenced in CMakeLists. - SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/ChangeListener.h and .cpp -> removed because not used, and not referenced in CMakeLists. - SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/MechanicalMatrixVisitor.h -> removed because empty, and not referenced in CMakeLists. - SofaKernel/modules/Sofa.Type/src/sofa/type/Color.cpp -> removed because not referenced in CMakeLists. The code in this file is not required. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2333:2357,failure,failures,2357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2333,2,['failure'],['failures']
Availability,"size() != indices.size()` in the RestShapeSpringsForceField and tried to improve the overall error management on this component. I ended up doing the following changes:. - Call reinit() in bwdInit; - Using componentState to set the state to invalid when necessary (no stiffness set, out of bounds indices etc & check for component state in addForce / addDForce / addKToMatrix ..); - Improvement of warning messages (IMHO); - refactor code duplication; - remove warnings by changing int -> size_t for BaseMatrix::Index (got carried away here, sorry about that). **### BREAKING because:**. - Change in behavior in specific cases:. 1. empty stiffness vector: **Before:** setting arbitrary stiffness at 100.0 for all indices ; **Now:** msg_error & invalid state. ; 2. stiffness.size() != indices.size(): **Before:** applying stiffness[0] to all indices ; **Now:** ; ```py; if len(stiffness) > len(indices): ; crop(stiffness); else if len(stiffness) == 1:; stiffness.resize(len(indices), stiffness[0]); else if len(stiffness < len(indices):; ```; Generalized to angularStiffness on Rigids. - size_t in methods signature break API compatibility. I wouldn't call this component ""clean"" after those changes though, but it's a start. As stuff still to do to improve, I see:. - Using DataTrackers to call reinit() when necessary; - get rid of bwdInit by using componentState + datatrackers to reinit component; - remove those ugly getContext to retrieve the external mstate used for rest shape, by replacing them with a data or a link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1103:1909,failure,failures,1909,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1103,2,['failure'],['failures']
Availability,"small PR to remove function handleTopologyChange() from BaseMaterial component, where it is implemented but empty.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/817:372,failure,failures,372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/817,2,['failure'],['failures']
Availability,"so they can be used by Tracy profiler as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4203:591,failure,failures,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4203,2,['failure'],['failures']
Availability,sofa.helper compiler error(SOFA 22.12),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329,1,['error'],['error']
Availability,"sofa::core can be confused with sofa::simulation::core, so I added sofa:: in front of core namespace. This confusion arose when compiling using a jumbo build. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1959:703,failure,failures,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1959,2,['failure'],['failures']
Availability,"sofa::helper::afficheResult definition no longer exists, resulting in unresolved external link error with msvc during debug compilation. I stumbled upon an unresolved external which apparently was introduced by a42dcec ; I guess the initial intent was to replace this method by a new method called `resultToString`, but its declaration did not make it through the header file. I suspect the unresolved external should have been caught by other compilers, but am I the only one; to compile in debug mode sometimes ?; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/473:95,error,error,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/473,3,"['error', 'failure']","['error', 'failures']"
Availability,sofa\applications\plugins\SofaHAPI\CMakeList.txt; Line 81: endif(); Error: ; endif An ENDIF command was found outside of a proper IF ENDIF structure.; Or its arguments did not match the opening IF command. I believe we should remore this line. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1074:68,Error,Error,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1074,3,"['Error', 'failure']","['Error', 'failures']"
Availability,"sofa_add_plugin required the ""name"" argument to be the same as the target; We can now handle non-target names, aliases and custom OUTPUT_NAME. Related to this forum topic: https://www.sofa-framework.org/community/forum/topic/problem-compiling-sofa-with-python3-2/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1584:809,failure,failures,809,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1584,2,['failure'],['failures']
Availability,"sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""Sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1512,ERROR,ERROR,1512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['ERROR'],['ERROR']
Availability,"sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. I already checked the suggested troubleshooting, but I couldn't fix the error.; Can you help me?; Thank you!. **Steps to reproduce**; `py -3.11 -m venv C:/SOFA`; `SOFA\Scripts\Activate`; `git clone https://github.com/ScheiklP/sofa_env.git `; `cd sofa_env`; `pip install -e .`; `python3 sofa_env/scenes/controllable_object_example/controllable_env.py`. **Expected behavior**; I would have expected that no errors would appear. ---------------------------------------------. ### Environment. **Context**. - System: OS Name	Microsoft Windows 11 Home; - Version of SOFA: I compiled SOFA with Cmake to be able to use with Geomagic Touch; - State: Install directory: C:\sofa. **Command called**. ```txt. python3 sofa_env/scenes/controllable_object_example/controllable_env.py. ```. **Env vars**. ```txt. import sys; print(sys.path); ['', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\idlelib', 'C:\\SOFA\\Lib\\site-packages', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\python311.zip', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\DLLs', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages']. ```. ---------------------------------------------. ### Logs.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:2966,error,errors,2966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['error'],['errors']
Availability,"some day a warning-free SOFA!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3227:575,failure,failures,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3227,2,['failure'],['failures']
Availability,sorry for not replying before @jnbrunet ; yes we had some small questions. Will you be available tomorrow morning 10am (the sofa-dev meeting takes exceptionally place tomorrow)?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1258#issuecomment-594836562:87,avail,available,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1258#issuecomment-594836562,1,['avail'],['available']
Availability,"sorry for the haste, i thought that my issue was down because of no response on the discussions tab. i will keep it in mind from now onwards.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5029#issuecomment-2378825246:49,down,down,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5029#issuecomment-2378825246,1,['down'],['down']
Availability,"sorry, it looked simple and fine for me... . ----- Mail original -----. > De: ""Guillaume Paran"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""State change""; > <state_change@noreply.github.com>; > Envoyé: Jeudi 26 Janvier 2017 10:21:34; > Objet: Re: [sofa-framework/sofa] [CI] Replace 'make' by 'ninja' when; > available. (#141). > This one was merged too fast.; > I wanted to change a bit the code :(. > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/141#issuecomment-275343846:397,avail,available,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/141#issuecomment-275343846,1,['avail'],['available']
Availability,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2292:1386,failure,failures,1386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292,2,['failure'],['failures']
Availability,speaks for itself. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1511:275,failure,failures,275,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1511,2,['failure'],['failures']
Availability,"ss has three ambiguous constructors:. ```c++; vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; ```; effectively making the constructor taking a `sofa::Size` useless: using it will result in an ambiguous call since it can be implicitly converted to both `int` and `long`. This PR remove two of them and keep only the `vector(Size n, const T& value)` one. Steps to reproduce; 1. **main.cpp**; ```c++; #include <sofa/type/vector.h>; #include <iostream>. int main() {; using namespace sofa::type;; vector<double> d_v (sofa::Size(5), 0);; std::cout << d_v << std::endl;; return 0;; }; ```; 2. **Compile**; ```sh; $ gcc -isystem $SOFA_ROOT/include/Sofa.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, MemoryManager>::Size = long unsigned",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2270:958,error,error,958,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270,1,['error'],['error']
Availability,"sse,. I'm not fully sure I understand the problem...but extern declaration of template are not related to old version of gcc in any way they are related to wether or not we control where the templated code is instanciated. The default behavior is that any used templates are instanciated and code is generated in each translation unit (so in each .cpp there is the compilation of the full Vec<double, 3>, Vec<real, 3> for every templates used). The consequence is that this generates huge binary (.o) files each containing identical machine code. This duplicated machine code in every .o is removed during the link. So said differently the compiler makes a lot of work to generate machine code then the linked makes a lot of code to remove it and keep only one version. The solution in c++ is to use the ""extern"" keyword to tell the compiler not to instanciate the templated code, extern means that the machine code will be provide elsewhere. To work and not have link error it is the needed to have a least one version of the template instanciated somewhere. This is why in the .cpp files we often instanciate the same template (without the extern). ; The design pattern o use to avoid the redeclaration warnings is a bit tricky so here is an example.; In myclass.h; ```cpp; template<typename T> ; MyClass ; {; /// ...; };. /// here is the trick .. to differentiate when we include the .h everywhere in the codebase where we want the extern from where it is included from myclass.cpp where we don't want it we do the following; #ifndef MY_CLASS_CPP ; extern template MyClass<double> /// d'ont emit machinecode for this one we provides it ""somewhere else""; extern template MyClass<float> /// don't emit machinecode for this one we provides it ""somewhere else""; #endif /// ; ``` . In the myclass.cpp; ```cpp; #define MY_CLASS_CPP /// You tll the myclass.h that you are where the machine code will be emitted...so no need for the externs version... ; #include ""myclass.h"". template MyClass<double> /// s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1548#issuecomment-713560956:982,error,error,982,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1548#issuecomment-713560956,1,['error'],['error']
Availability,"st; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; __________________________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2210,Error,Error,2210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['Error'],['Error']
Availability,"steps, which makes the code more consistent. Note also the introduction of `ComputeIsolatedForceVisitor` (see the comments in the code to understand its purpose). # Multithreading. Since `AnimateVisitor` is no longer used, `SolveVisitor` is used instead, providing optional multithreading, i.e. solving each ODE in parallel. Similar to what was done in the `FreeMotionAnimationLoop`. ## Benchmark. Measured on `examples/Component/SolidMechanics/FEM/TetrahedronFEMForceField.scn`. Without parallelism; ```; [INFO] [BatchGUI] 1000 iterations done in 14.7031 s ( 68.0128 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 0.03 1 10.57 27.32 11.94 2.11 11.94 82.14 ..solve; ```. With parallelism; ```; [INFO] [BatchGUI] 1000 iterations done in 7.13825 s ( 140.09 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 0.03 1 3.53 6.85 4.45 0.81 4.45 63.60 ..solve; ```. The simulation is 2x faster. But there are 4 different objects, so we expected a speed-up of 4x. However, the speed-up is only about the `solve` function. Another time consuming function is the `end event` when computing the von Misses stresses. Still, the solve function only shows a speedup of 2.68x, instead of 4x. I cannot explain it for now... [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/362]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959:3515,failure,failures,3515,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959,2,['failure'],['failures']
Availability,"struction of triplets, needed to construct an Eigen matrix, is avoided using a custom proxy on the `CompressedRowSparseMatrix` uncompressed data. Here are the new timings (to compare to #2362):. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 63 99.14 66.64 2.64 66643 100 TOTAL; ...; 4 0.87 1 27.68 58.27 30.91 2.28 30.91 46.38 ....MBKBuild; 5 1.08 1 26.76 57.31 29.90 2.23 29.90 44.86 .....MMM-addKToMatrix; 6 1.08 1 1.73 2.94 1.98 0.18 1.98 2.98 ......jacobian; 6 3.07 1 6.94 35.47 8.01 1.25 8.01 12.02 ......stiffness; 6 11.08 1 2.68 17.13 3.43 0.81 3.43 5.15 ......copyKToEigen; 7 11.08 1 2.67 17.12 3.42 0.81 3.42 5.14 .......KfromTriplets; 6 14.51 1 0.25 0.92 0.30 0.06 0.30 0.45 ......copyJ1J2ToEigen; 7 14.74 1 0.06 0.29 0.07 0.02 0.07 0.10 .......copyJ2ToEigen; 6 14.81 1 9.50 25.79 11.23 1.54 11.23 16.85 ......Multiplication; 7 14.81 1 4.88 18.44 5.80 0.96 5.80 8.71 .......J1tKJ1; 7 20.62 1 0.76 4.52 0.99 0.23 0.99 1.49 .......J2tKJ2; 7 21.62 1 2.71 16.34 3.46 0.92 3.46 5.19 .......J1tKJ2; 7 25.07 1 0.77 12.89 0.97 0.41 0.97 1.46 .......J2tKJ1; 6 26.05 1 2.71 7.73 3.04 0.24 3.04 4.56 ......J1tKJ1-copy; 6 29.09 1 0 0.02 0 0 0 0 ......J2tKJ2-copy; 6 29.09 1 0.01 0.06 0.02 0 0.02 0.02 ......J1tKJ2-copy; 6 29.11 1 0.01 0.08 0.03 0.01 0.03 0.04 ......J2tKJ1-copy. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2367:2031,failure,failures,2031,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2367,2,['failure'],['failures']
Availability,system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Help,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:3967,error,error,3967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,1,['error'],['error']
Availability,"t otherwise Controllers now act as any other python object. The old behavior still works, should you need it. ```python; ; import Sofa ; class Script(Sofa.PythonScriptController):. def __init__(self, node, *args, **kwargs):; self.bacon = kwargs.pop('egg', 'spam'). def onBeginAnimationStep(self, dt):; print(self.bacon). ; def createScene(node):; script = Script(node, egg = 'spam'); . ```. Creating instances directly no longer calls `onLoaded` nor `createGraph`:. - nothing is actually loaded; - code in `createGraph` really belongs to `__init__` anyways. This behavior can be changed of course, maybe a warning can/should be emitted if the instance creation detects a derived implementation. Comments welcome :). The PR also removes heavy copypasta in some files, removes unneeded `extern ""C""` linkage and a few other cosmetic changes. # Changelog. - `PythonScriptController` and derived classes are now instantiable directly in python. The constructor requires a `Node` as first parameter.; - `onLoaded` and `createGraph` entry points are no longer called when classes are instantiated directly from python. Corresponding code belongs to the derived class constructor.; - creating instances ""the old way"" through `node.createGraph` has unchanged behavior; - the workaround module `SofaPython.script` now features a deprecation message, together with a derived class easing transition (calls `createGraph` on construction, warns if `onLoaded` is defined); - updated `ControllerVariable.py` example ; - some minor cleanups; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283:3649,failure,failures,3649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283,2,['failure'],['failures']
Availability,"t: updated `cmake-log.txt`. Last one was the wrong configuration by accident. I tried remaking the config, though it might not be 100% accurate. I used cmake-gui for the options, so here's the [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/4777146/CMakeCache.txt).; Here's the configuration process log of the `cmake [options] ..` command: [cmake-log.txt](https://github.com/sofa-framework/sofa/files/4777183/cmake-log.txt). Output is very long so I've attached it in this text file [log.txt](https://github.com/sofa-framework/sofa/files/4777142/log.txt). Probably the most notably part is on log.txt:385, which I'll post here. Note: I spaced it to make it visually easier to read. The original is all on a single line of course.; ```; /home/emdash00/Apps/git-apps/sofa/src/applications/plugins/SofaOpenCL/OpenCLIdentityMapping.cpp:71:16: error: duplicate explicit instantiation of; ‘class sofa::component::mapping::IdentityMapping<sofa::gpu::opencl::OpenCLVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float>,; 									 				 sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float> >’ [-fpermissive]; ```. I'm unsure of where the original instantiation is. I'm just trying to use the library since Ubuntu 19.10 doesn't have prebuilt packages yet. I don't think this is part of the issue; however, I'm using OpenCL for an Intel GPU. I wasn't sure how computationally intensive this library would be, but I thought might as well try to utilize my Intel HD Graphics Unit. . Here's an attachment of all relevant system specs using linux commands: [sysinfo.txt](https://github.com/sofa-framework/sofa/files/4777150/sysinfo.txt); In case of any discrepancy, here's a link to my CPU's spec page as listed by Intel: [Intel® Core™ i7-8550U Processor](https://ark.intel.com/content/www/us/en/ark/products/122589/intel-core-i7-8550u-processor-8m-cache-up-to-4-00-ghz.html)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419:1141,error,error,1141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419,1,['error'],['error']
Availability,"tSolver]; root.addObject(""RequiredPlugin"", name=""Sofa.Component.StateContainer"") # <- [MechanicalObject]; root.addObject(""RequiredPlugin"", name=""Sofa.GL.Component.Shader"") # <- [LightManager]; root.addObject(""RequiredPlugin"", name=""Sofa.Component.Visual"") # <- [InteractiveCamera]. neutral_pose = [0, 0, 0, 0, 0, 0, 1]; instrument_node = root.addChild(""instrument""). instrument_node.addObject(""EulerImplicitSolver""); instrument_node.addObject(""CGLinearSolver""). angle_mo = instrument_node.addObject(""MechanicalObject"", template=""Vec1d"", position=[-0.4, 0.4]). body_node = instrument_node.addChild(""body""). body_mo = body_node.addObject(; ""MechanicalObject"",; template=""Rigid3d"",; position=neutral_pose * 3,; showObject=True,; showObjectScale=0.1,; ). body_node.addObject(""UniformMass"", totalMass=0.05). body_node.addObject(; ""ArticulatedSystemMapping"",; input1=angle_mo.getLinkPath(),; output=body_mo.getLinkPath(),; ); # [ERROR] [PythonScript] GLError: GLError(; # err = 1283,; # description = b'stack overflow',; # baseOperation = glClear,; # cArguments = (16640,); # ); # File ""test_articulation.py"", line 146, in <module>; # simple_render(root); # File ""test_articulation.py"", line 39, in simple_render; # glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); # File ""src/errorchecker.pyx"", line 58, in OpenGL_accelerate.errorchecker._ErrorChecker.glCheckError. instrument_node.addObject(""ArticulatedHierarchyContainer""). articulation_hierarchy_node = instrument_node.addChild(""articulation_hierarchy""). articulation_center_node_1 = articulation_hierarchy_node.addChild(""center_1""); articulation_center_node_1.addObject(; ""ArticulationCenter"",; parentIndex=0,; childIndex=1,; posOnParent=[0, 0, 0],; posOnChild=[0, 0, 0],; ). articulation_node_1 = articulation_center_node_1.addChild(""articulation_1""); articulation_node_1.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotationAxis=[0, 0, 1],; articulationIndex=0,; ). articulation_center_node_2 = articulation_hierarchy_node.add",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3095:3417,ERROR,ERROR,3417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3095,1,['ERROR'],['ERROR']
Availability,"tView, in applications/sofa/gui/qt. The current implementation stores a pointer to every registered listeners in every node in the scene graph. Instead, the implementation proposed in this PR registers the listeners in the root node and child nodes forward the notifications to it. Also, the overloads are currently relying on the call super (the child class reimplements the method, then calls its base class implementation) This approach is [known to be error prone](https://en.wikipedia.org/wiki/Call_super) and can be reimplemented using delegates instead. Finally, this PR also adds extra delegates in the Nodes listeners notifications system and in the MutationListener, called *AFTER* the graph's edition. those are used in SofaQtQuick to be notified that the graph has indeed been updated. . Here are 2 quick UML diagrams showing the 2 architecture's differences. This one is the current implementation in sofa:; ![code_smell](https://user-images.githubusercontent.com/13734391/52288894-5245f000-296d-11e9-83b6-12f6ce1385f9.png). And this one is what this PR does:; ![code_clean](https://user-images.githubusercontent.com/13734391/52288978-730e4580-296d-11e9-9057-451922e971c8.png). Also, if someone could tell me what the master / slave relationship between BaseObjects are, I'd be curious to know if it is still in use in SOFA. It doesn't seem to be used in Listeners.. maybe added for Compliant / Flexible?. __This PR could potentially be breaking for plugins & projects implementing their own MutationListeners__. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917:2127,failure,failures,2127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917,2,['failure'],['failures']
Availability,"t_node = root.addChild(""instrument""). instrument_node.addObject(""EulerImplicitSolver""); instrument_node.addObject(""CGLinearSolver""). angle_mo = instrument_node.addObject(""MechanicalObject"", template=""Vec1d"", position=[-0.4, 0.4]). body_node = instrument_node.addChild(""body""). body_mo = body_node.addObject(; ""MechanicalObject"",; template=""Rigid3d"",; position=neutral_pose * 3,; showObject=True,; showObjectScale=0.1,; ). body_node.addObject(""UniformMass"", totalMass=0.05). body_node.addObject(; ""ArticulatedSystemMapping"",; input1=angle_mo.getLinkPath(),; output=body_mo.getLinkPath(),; ); # [ERROR] [PythonScript] GLError: GLError(; # err = 1283,; # description = b'stack overflow',; # baseOperation = glClear,; # cArguments = (16640,); # ); # File ""test_articulation.py"", line 146, in <module>; # simple_render(root); # File ""test_articulation.py"", line 39, in simple_render; # glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); # File ""src/errorchecker.pyx"", line 58, in OpenGL_accelerate.errorchecker._ErrorChecker.glCheckError. instrument_node.addObject(""ArticulatedHierarchyContainer""). articulation_hierarchy_node = instrument_node.addChild(""articulation_hierarchy""). articulation_center_node_1 = articulation_hierarchy_node.addChild(""center_1""); articulation_center_node_1.addObject(; ""ArticulationCenter"",; parentIndex=0,; childIndex=1,; posOnParent=[0, 0, 0],; posOnChild=[0, 0, 0],; ). articulation_node_1 = articulation_center_node_1.addChild(""articulation_1""); articulation_node_1.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotationAxis=[0, 0, 1],; articulationIndex=0,; ). articulation_center_node_2 = articulation_hierarchy_node.addChild(""center_2""); articulation_center_node_2.addObject(; ""ArticulationCenter"",; parentIndex=0,; childIndex=2,; posOnParent=[0, 0, 0],; posOnChild=[0, 0, 0],; ). articulation_node_2 = articulation_center_node_2.addChild(""articulation_2""); articulation_node_2.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotati",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3095:3817,error,errorchecker,3817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3095,1,['error'],['errorchecker']
Availability,"ted may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::Simulation::initNode(sofa::simulation::Node*); sofa::simulation::Simulation::init(sofa::simulation::Node*); __libc_start_main; Segmentation fault (core dumped); [sergei@sergei-20hd0000fr test_scene]$",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:12030,fault,fault,12030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['fault'],['fault']
Availability,"ted with each of the mapping parent dofs. - ContactMappers : It is (very) questionable to let contact mappers propagate the unconstrained dynamics solution vector towards contact dofs by calling `updateXfree()` since it will induce inconsistencies in mapping linearisation if the contact mappers are non linear, since contact mappings will therefore be linearised around the free motion configuration, and the rest being linearised around the configuration at the beginning of the time step. This PR does not address this problem which is left for future work. It arises only with non linear contact mappers (like the `RigidContactMapper` for instance), but this should be kept in mind. - LinearSolver API : As a general note, I believe the LinearSolver API is a bloated with virtual methods which are difficult to understand since they are not directly related to the computation / factorisation of a positive definite matrix, and are mostly optional especially for non assembled solver like CG. Most of the methods should reside in the ConstraintCorrection API, and concrete instance of ConstraintCorrection should be templated on the type of LinearSolver in my opinion, since it is the only objects that actually make use of these methods, and really what you want is to have access to the concrete type of Matrix and Vector used by the solver. Also from my understanding only `LinearSolver` instances that derive from `MatrixLinearSolver` implement these kind of methods, so maybe a first step would be to move them here. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:8814,failure,failures,8814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,2,['failure'],['failures']
Availability,"terror.html. Please note and check the following:. * The Python version is: Python3.10 from ""C:\Users\JetsLab\.pyenv\pyenv-win\versions\3.10.11\python3.exe""; * The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controllable_env.py"", line 1, in <module>; import gymnasium.spaces as spaces; File ""C:\SOFA\Lib\site-packages\gymnasium\__init__.py"", line 5, in <module>; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. I already checked the suggested troubleshooting, but I couldn't fix the error.; Can you help me?; Thank you!. **Steps to reproduce**; `py -3.11 -m venv C:/SOFA`; `SOFA\Scripts\Activate`; `git clone https://github.com/ScheiklP/sofa_env.git `; `cd sofa_env`; `pip install -e .`; `python3 sofa_env/scenes/controllable_object_example/controllable_env.py`. **Expected behavior**; I would have expected that no errors would appear. ---------------------------------------------. ### Environment. **Context**. - System: OS Name	Microsoft Windows 11 Home; - Version of SOFA: I compiled SOFA with Cmake to be able to use with Geomagic Touch; - State: Install directory: C:\sofa. **Command called**. ```txt. python3 sofa_env/scenes/controllable_object_example/controllable_env.py. ```. **Env vars**. ```txt. import sys; print(sys.path); ['', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:2390,Error,Error,2390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['Error'],['Error']
Availability,"test concurrent access to LCPForceFeedback computeforce from another thread. This PR depends on #1576 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1581:648,failure,failures,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1581,2,['failure'],['failures']
Availability,"thanks to #2989 and debug mode, a bug could be detected when the topology handler registers data for quad.; (I suppose this should fix data updates when a quad container has topological changes). Based on : ; - #2989 (to fix compilation). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2990:783,failure,failures,783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2990,2,['failure'],['failures']
Availability,"the POINTREMOVED event to all topologyHandler registered. Including the deleted one from the mouse attached constraint. The pointer to the topologyHandler is not null but pointed to a deleted object. ### PR changes description; This PR and the PR #3271 (included in this on) are introducing a mechanism to better register and unregister a TopologyHandler from the TopologyContainer.; 1. register is done at creation of the TopologyHandler; 2. If TopologyHandler has well been added to the list manged by the Container, a internal bool m_isRegisterd is set to true.; 3. When the TopologyHandler is deleted (meaning its component owner is deleted). If m_isRegisterd == true, the TopologyHandler will unregister itself.; 4. When the TopologyContainer is deleted, it will go through each TopologyHandler it is managing and turn m_isRegisted to false. And then clear the list without deleting the Handler. The bool m_isRegisterd is used because to unregister itself, the handler need to access the topologyContainer which could have already been destroyed (depending on the graph order). But the TopologyHandler doesn't now the container is null. That's why if the TopologyContainer is deleted first it sets all its topologyHander as unregistered. ### Linked issues; Based on PR #3271 ; Fixes #3370 #3202. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3369:3067,failure,failures,3067,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369,2,['failure'],['failures']
Availability,the ```return``` was added intentionally in a previous PR where mechanism to force the initialization of topology container have been added to avoid time bomb. ; Removing the return means you don't bother of the error sent just before and you continue to fill or not fill data and you will get a crash later in another component due to inconsistent topology buffers access. Can you check how many errors you get in your example without this return?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577238750:212,error,error,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577238750,2,['error'],"['error', 'errors']"
Availability,"the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837:2177,failure,failures,2177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837,2,['failure'],['failures']
Availability,"there are new tests failure:; ```. FastTriangularBendingSprings.scn:0, Dynamic Parser, Priority: Normal; --; [EdgeSetGeometryAlgorithms(edgeSetGeometryAlgorithms1)] Unable to get a valid topology from the context. ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/973#issuecomment-480168725:20,failure,failure,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/973#issuecomment-480168725,1,['failure'],['failure']
Availability,this PR depends on #1351 where Data d_checkTopology has been introduced. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1353:329,failure,failures,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1353,2,['failure'],['failures']
Availability,"this PR is based on #2869 . Sevral fixes in `TopologyData `/ `TopologySubsetData `/ `TopologySubsetIndices`. - Fix: `TopologyData::m_lastElementIndex` was set to invalid when passing empty buffer size. keep value to 0 in this case.; - Rename: `TopologySubSetData `option **isConcerned** by **addNewelements**. This method is used to allow TopologySubsetData to growth following topological changes; - Fix: TopologySubSetData **add** methods. Value where not really set but using default constructor instead of value in callback.; - Clean: TopologySubSetData **remove** method from unecessary checks/loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2870:1149,failure,failures,1149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2870,2,['failure'],['failures']
Availability,"thub.com/sofa-framework/sofa/pull/2394):. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 48.83 558.52 52.87 16.28 52873.1 100 TOTAL; ...; 4 0.97 1 16.13 510.42 18.89 15.73 18.89 35.72 ....MBKBuild; 5 1.16 1 15.20 501.11 17.93 15.46 17.93 33.91 .....MMM-addKToMatrix; 6 1.18 1 5.92 26.88 7.26 1.67 7.26 13.74 ......stiffness; 6 8.44 1 2.84 7.27 3.59 0.62 3.59 6.78 ......copyKToEigen; 6 12.03 1 0 0 0 0 0 0 ......waitJacobian; 6 12.03 1 3.07 487.77 3.76 15.32 3.76 7.11 ......Multiplication; 7 12.03 1 2.62 479.92 3.28 15.08 3.28 6.21 .......J1tKJ1; 7 15.32 1 0.34 4.83 0.36 0.15 0.36 0.68 .......J2tKJ2; 7 15.68 1 0.09 2.57 0.09 0.08 0.09 0.18 .......J1tKJ2; 7 15.77 1 0.01 0.43 0.02 0.01 0.02 0.03 .......J2tKJ1; 6 15.79 1 2.54 5.45 2.72 0.18 2.72 5.15 ......copy; 7 15.79 1 2.50 5.38 2.68 0.18 2.68 5.07 .......J1tKJ1-copy; 7 18.47 1 0 0.01 0 0 0 0 .......J2tKJ2-copy; 7 18.48 1 0.01 0.04 0.01 0 0.01 0.03 .......J1tKJ2-copy; 7 18.49 1 0.01 0.06 0.02 0 0.02 0.04 .......J2tKJ1-copy. ```. It is still possible to go further with parallel tasks between the multiplications and the copies, but:; 1) A clean implementation would require a local thread pool (and the current implementation of thread pools does not allow that); 2) The speed up in the example scene would be negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2411:2282,failure,failures,2282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2411,2,['failure'],['failures']
Availability,"tial guess was writing a 0.0 outside bounds (but I dont know why this line was here). :warning: WARNING :warning:; one needs to set the responseParams to mu=0.0 also. This is really confusing and would need to refactor somewhere.; If the LCP defines mu to 0.0 but not responseParams, funny things happen (one component expects 1contact = 1 constraint and the other 1contact = 3 constraints). Moreover:; - remove (deprecate) usage of the member `_mu` which was confusing with the data `mu`; - adds two scenes to demonstrate with and without friction, and their regression tests. [ci-depends-on https://github.com/sofa-framework/Regression/pull/47]. ![lcp_friction](https://github.com/sofa-framework/sofa/assets/11028016/eba86b90-3cfc-40f6-850f-6aba720d291d); ![lcp_nofriction](https://github.com/sofa-framework/sofa/assets/11028016/fb015cd7-54c6-4347-a07e-e5c960dc609c). Benchmarks:; As friction adds two additional constraints in the matrix, then frictionless scenes are faster:; ```; caduceus:; w/: 5000 iterations done in 52.071 s ( 96.0227 FPS); w/o: 5000 iterations done in 44.6895 s ( 111.883 FPS); ```; ```; 3instruments_collis:; w: 5000 iterations done in 69.8352 s ( 71.5971 FPS); w/o: 5000 iterations done in 43.0997 s ( 116.01 FPS); ```; Obviously, this change the behavior of the scene...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3905:1946,failure,failures,1946,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905,2,['failure'],['failures']
Availability,"ting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2010:2713,failure,failures,2713,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010,2,['failure'],['failures']
Availability,"title says all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2443:560,failure,failures,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2443,2,['failure'],['failures']
Availability,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1820:1923,failure,failures,1923,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820,2,['failure'],['failures']
Availability,"to access the data without abstraction cost, ie. accessing the object with its true type (eg: Data<T>) instead of its parent type (BaseData) and at the same time having an abstraction to manipulate BaseData. . Duplicating the same obect/point is in general a code smell indicating that something is wrong in the implementation. In general duplication complexify the implementation and error prone (because you have to garantee that the different copies are kept synchronized and interact together in a seamlessness way. . So, in this PR I addresse this duplication problem by removing the lowest type and relying on a dynamic_cast when it is needed. There is an abstraction cost...but it is on a on a very rarerly used method (actually only used for fast copy of data field...and in that context...the cost of the dynamic cast against one of copying millions of Dofs is totally neglectible). . A different pattern was initially used with a child-delegation to expose the abstraction to its parent but it appears it would have made the PR breaking. The difference is that the selected pattern allows one data to be parented to a data of different type while the pattern with child-delegation restrict the parenting to be of exactly the same time. . I personally prefer to have parent only on same type (so that data conversion must be added manually and becomes explicit) but this was not done previously in Sofa and thus breaks some scenes (somes of them are actually really funny....and probably work only by side effect). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1490:2033,failure,failures,2033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1490,2,['failure'],['failures']
Availability,to avoid breaking external plugins. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/870:292,failure,failures,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/870,2,['failure'],['failures']
Availability,"to fix the compilation error. ## How to use them. Create a new deprecation macro specifying the deprecation topic you are tackling.; This way, you won't have dates everywhere in your code. ## Example. ### Deprecate. I want to rename something that will break my API. ; To ease the transition for my users, I will propose a deprecation period with a fine message by using a deprecation macro.; Latest release is v20.06, next release (currently under development) is v20.12, after that will come the v21.06. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DEPRECATED( \; ""v20.12 (PR#12345)"", ""v21.06"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod();; ```. Anyone using myDeprecatedMethod will get this **warning**: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is still usable but has been DEPRECATED since v20.12 (PR#12345). You have until v21.06 to fix your code. XXX must be renamed into YYY.; ```. ### Disable. Now forward in time ...; Latest release is v20.12, next release (currently under development) is v21.06, after that will come the v21.12.; It is time to stop the deprecation period. To provide a clear message to my users, I will not just remove my deprecated method but I will disable it with `= delete` and use a deprecation macro. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DISABLED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DISABLED( \; ""v20.12 (PR#12345)"", ""v21.06 (PR#45678)"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DISABLED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod() = delete;; ```. Anyone using myDeprecatedMethod will get an **error** right after this warning: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is not usable anymore because it has been DISABLED since v21.06 (PR#45678) after being deprecated on v20.12 (PR#12345). XXX must be renamed into YYY.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249:2616,error,error,2616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249,1,['error'],['error']
Availability,"to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Compon",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1667,ERROR,ERROR,1667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['ERROR'],['ERROR']
Availability,"to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/build/lib/libSofaPython.dylib; [INFO] [Python_scene_test] running /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py; ERROR: wrong number of arguments; [ERROR] [PythonScript] IndexError: list index out of range; File ""/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py"", line 15, in <module>; DAMPING_COEF = float( sys.argv[1] ). [ERROR] [SofaPython] Script (file:damping) import error; [ERROR] [PythonScriptController(PythonScriptController)] load error (file '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py' not parsable); ../applications/plugins/SofaTest/Python_test.cpp:263: Failure; Failed; python error; [ FAILED ] Batch/Python_scene_test.sofa_python_scene_tests/0, where GetParam() = 48-byte object <81-00 00-00 00-00 00-00 7E-00 00-00 00-00 00-00 00-4D 60-FA C4-7F 00-00 80-4D 60-FA C4-7F 00-00 10-4E 60-FA C4-7F 00-00 10-4E 60-FA C4-7F 00-00> (1051 ms); [----------] 1 test from Batch/Python_scene_test (1051 ms total); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176:1456,ERROR,ERROR,1456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176,8,"['ERROR', 'Failure', 'error']","['ERROR', 'Failure', 'error']"
Availability,"tory) and allows the user to choose the type of ImplicitShape he wants to mesh, and to change the values relating to the mesh (**facet_size**, **approximation** and **cell_size**). - Fill the scene with a shape :. `<DistanceGridComponent` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`name=""grid_cmp""`; > .tmg is our extention file which is actually a simple list of values corresponding to the function evaluated at each point : see PR #353 ; `filename=""/path/file.tmg""` . &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`nx=""243""` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ny=""243"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`nz=""243""` ; `/>` . or ; `<ImplicitSphere name=""sphere"" />`. or any class inhereting from ImplicitShape. - Modify the mesh component value's and use the correct component in the link. ` <MeshGenerationFromDG` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`name=""mesh"" `; > The 3 following parameters can change the execution time (from a few seconds to much more) ; `facet_size=""0.7"" ` ; `approximation=""0.5""` ; `cell_size=""0.4"" ` . &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`drawTetras=""false""` . > Then the link ; `function=""@sphere""` which is actually a torus ; or	 ; `grid=""@grid_cmp""`; ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`xmin_box=""0.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ymin_box=""0.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`zmin_box=""-5.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`xmax_box=""27.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ymax_box=""27.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`zmax_box=""5.0"" ` ; `/>`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/354:2288,failure,failures,2288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/354,2,['failure'],['failures']
Availability,tra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/ex,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29020,redundant,redundant-member-init,29020,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-member-init']
Availability,"transpose method was missing for matrix3 on device.; Not sure it is the best implementation but it does the job. Will fix PR #2585 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2675:677,failure,failures,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2675,2,['failure'],['failures']
Availability,type dependant error could result from a missing typename or template keyword,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/673#issuecomment-393540797:15,error,error,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/673#issuecomment-393540797,1,['error'],['error']
Availability,"typo, copy-paste is bad m'kay?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2530:576,failure,failures,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2530,2,['failure'],['failures']
Availability,"u can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead having a library which depends on gtest and SofaCore which ; - factorize some ini",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1674,failure,failures,1674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['failure'],['failures']
Availability,"uOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'); ; ; scale=1.5; rotation=[-40.0, 0.0, 0.0]; stl = 'carotids.stl'; VISUAL = True; vessels = root.addChild('Vessels'); vessels.addObject('MeshSTLLoader', filename=stl, flipNormals=False, triangulate=True, name='meshLoader', scale=scale, rotation=rotation); vessels.addObject('MeshTopology', position='@meshLoader.position', triangles='@meshLoader.triangles'); vessels.addObject('MechanicalObject', name='DOFs1', scale=1, rotation=rotation); vessels.addObject('TriangleCollisionModel', moving=False, simulated=False); vessels.addObject('LineCollisionModel', moving=False, simulated=False); vessels.addObject('PointCollisionModel', moving=False, simulated=False); vessels.addObject('OglModel', color=[1, 0, 0, 0.3], src='@meshLoader', name='Visual', rotation=rotation). # Add a sphere.; newSphere = root.addChild('FixedSphere'); newSphere.addObject('EulerImplicitSolver'); newSphere.addObject('CGLinearSolver', threshold='1e-09', tolerance='1e-09', iterations='200'); MO = newSphere.addObject('MechanicalObject', showObject=True, position=[0, 200, 200, 0, 0, 0, 0], name='Particle', template='Rigid3d'); Mass = newSphere.addObject('UniformMass', totalMass=1); Force = newSphere.addObject('ConstantForceField', name=""CFF"", totalForce=[0, 0, 0, 0, 0, 0] ); Sphere = newSphere.addObject('SphereCollisionModel', name=""SCM"", radius=30.0 ); newSphere.addObject('FixedConstraint', name='FixedConstraint', indices=0); newSphere.addObject('OglModel', color=[1, 0, 0, 0.3], name='Visual'); ; ; ; # visualizing; source = [-600,0,300]; lookAt = source+np.array([1,0,0]); orientation = [ 0, -0.70710678, 0, 0.70710678]; root.addObject(""LightManager""); root.addObject(""DirectionalLight"", direction=[-1,0,0]); root.addObject('InteractiveCamera', name='camera', position=source,; lookAt=lookAt, orientation=orientation); ; if __name__ == ""__main__"":; # Read real information from real world.; pass. # One simulation for one root. Maybe.; # Create sc",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4636:18751,toler,tolerance,18751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636,1,['toler'],['tolerance']
Availability,ubuntu_gcc_options seems to have a one additional scene-tests error but I can find out which one.; Else I think it's ready right @alxbilger ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903614639:62,error,error,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903614639,1,['error'],['error']
Availability,"ude/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmErrorLevel; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:2405,error,error,2405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['error'],['error']
Availability,"uginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:2456,failure,failures,2456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,2,['failure'],['failures']
Availability,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050:1637,avail,available,1637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050,3,"['avail', 'failure']","['available', 'failures']"
Availability,"ulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:1836,Down,Downloads,1836,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Down'],['Downloads']
Availability,"uldn't be too disturbing. The biggest is probably the fixing done in sofa::helper::vector (have a look at the allowed syntax in the _test""). . CHANGELOG:; - ADD sofa::helper::vector<int> tests validating the different possible syntax ; - ADD sofa::helper::vector<unsigned int> tests validating the different possible syntax ; - FIX sofa::helper::vector<int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<int>::read() so that there is no more endless loop for some input; - FIX sofa::helper::vector<unsigned int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<unsigned int>::read() so that there is no more endless loop for some input; - FIX in all tests the ""_OpenIssue"" suffix that I forgot to remove when I fix the tests; - FIX MassSpringLoader to refuse to load a Xsp containing a rigid object and send warning messages. ; - FIX DefaultPipeline that was allowing negative depth attribute. Now it warns the user and set it default value (6).; - FIX DiagonalMass_test that was not checking that some pointer were valid before using them. ; - CHG GenerateRigiMass.inl now sends a warning message instead of an error. ; - FIX DistanceGrid add basic validation of dimensions given to the constructors. Sends a dmsg_warning if they are invalid and returns 0. ; - FIX DistanceGrid rename the attributes' names to match the sofa guidelines. . That's all, ; if merged with #267, #264 and #257 we should have a nearly green dashboard . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271:1340,error,error,1340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271,2,"['error', 'failure']","['error', 'failures']"
Availability,"unit Test for FixConstraint class to test topologicalChanges. Fix #1589. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2136:617,failure,failures,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2136,2,['failure'],['failures']
Availability,"unload() function of PluginManager was just removing the entry of the plugin in its map, but this one was effectively still loaded in the process memory. (on Windows, you could still see it using ProcessExplorer) ; This PR fixes it (i.e really unloads from memory). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1274:522,failure,failures,522,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1274,2,['failure'],['failures']
Availability,update Regression_test repository sha and add 2 more scenes to test collisionGroup. - [References] Update references of collisionMultiple scene due to fix modification in sofa master inside collisionGroup.; - [References] Add more scene references to check collision with and without collisionGroup. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1102:556,failure,failures,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1102,2,['failure'],['failures']
Availability,"updating my branch with most recent sofa branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1877:593,failure,failures,593,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1877,2,['failure'],['failures']
Availability,"using cmake-gui, I have now activated the plugin sofa cuda: . here is the output of cmake-gui:; `````; Found CUDA: /usr/local/cuda-11.2 (found version ""11.2"") ; SofaCUDA: Plugin VolumetricRendering was not enabled/found, therefore CudaTetrahedralVisualModel will not be compiled.; SofaCUDA: SofaDistanceGrid was not enabled, therefore CudaDistanceGridCollisionModel will not be compiled.; SofaCUDA: optional dependency SofaSphFluid not enabled. ; Autodetected CUDA architecture(s): 7.5; SofaCUDA: nvcc flags: -gencode;arch=compute_75,code=sm_75;-Xcompiler -fPIC; `````. I'm compling sofa on my laptop that has a decent graphical card (a Quadro T2000) but that maybe not inadequate in GPU memory or precision for sofa. Double precision is not activated for instance. Anyway, the same error occurs even if I delete all files from previous compilation adn regenerate the cmake files. `````; 1121/1599] Building CXX object modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglShaderVisualModel.cpp.o; FAILED: modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglShaderVisualModel.cpp.o ; /usr/bin/clang++ -DNDEBUG -DSOFA_BUILD_OPENGL_VISUAL -DSOFA_BUILD_SOFAOPENGLVISUAL -DSofaOpenglVisual_EXPORTS -I/home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src -Iinclude/SofaOpenglVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseVisual/src -Iinclude/SofaBaseVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseTopology/src -Iinclude/SofaBaseTopology -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../Sofa",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786521312:783,error,error,783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786521312,1,['error'],['error']
Availability,"using failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Co",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1148,ERROR,ERROR,1148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['ERROR'],['ERROR']
Availability,"ut=""@.."" output=""@Visual"" /> ; 		</Node>; 		; 		<OBJExporter name=""export_OBJ"" filename=""C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/regularGrid5x5"" exportAtBegin=""true"" exportEveryNumberOfSteps=""0"" />; 		; 	</Node>; 	. </Node>. ```. **Env vars**. ```bash; echo ""SOFA_ROOT = C:\Users\jducr\Documents\Librairies\sofa\build\bin\Release""; echo ""PYTHONPATH = C:\Users\jducr\Documents\Librairies\Python\Python37""; echo ""python3 -V = Python 3.7.7""; ```. ```txt; The scene is working fine, just the normals are exported wrong. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:4066,ERROR,ERROR,4066,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['ERROR'],['ERROR']
Availability,"w():; s = SofaEditor.getSelection(); drawSomethingSpecialForSelectedObject(s); ```. The python binding is different to the one we have yet into Sofa s it is made totally independently to SofaPython and is done using cython (http://cython.org/) ; (for which I'm curious to see how this will survive our CI). . Other notable things are that there is unittest either on the c++ side & python side and that the CMakeLists.txt are installing everything into a single the install location with the following structure: ; module/SofaEditor/SofaEditor.so; module/SofaEditor/python/SofaEditor/__init__.py; module/SofaEditor/python/SofaEditor/SofaEditor.so ; module/SofaEditor/examples; (I'm not sure it is a good idea but this is a kind of ""package"" but I think it is an interesting way to ship plugins). . I will open other PR to integrate this feature into runSofa and runSofa2. . For the records, I was hesitating between three designs. The first one consists in using the ""context/ExecParams"" to hold the editor state. As this context is passed to the components during the scenegraph traversal this would allows them to know the status of the editor. The second approach was using flexible messages/event transmitted through the scene graph. The third design was much simpler and simply consist of using a singleton so that it can be used everywhere there is a need to know the editor status. Between the three I made the decision to use the simplest approach (simpler to implement & simpler to use) despite he is more limited. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/735:2717,failure,failures,2717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/735,2,['failure'],['failures']
Availability,was it triggering an error? I expect this should fix a scene somewhere?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4711#issuecomment-2092513068:21,error,error,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4711#issuecomment-2092513068,1,['error'],['error']
Availability,ways better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures. (This PR cannot do that...read my comment about that). ; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; - [ ] #237 should fix most of the newly failing tes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2629,robust,robust,2629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,2,"['failure', 'robust']","['failure', 'robust']"
Availability,"what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2272:2551,failure,failures,2551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272,2,['failure'],['failures']
Availability,what and how would you recommand to fix this error @matthieu-nesme ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311592430:45,error,error,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311592430,1,['error'],['error']
Availability,"when passing ""this"" as argument, forcing object copy to avoid unexpected results; Fixes #280 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317:351,failure,failures,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317,2,['failure'],['failures']
Availability,whispered to me by @fredroy :+1: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1042:291,failure,failures,291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1042,2,['failure'],['failures']
Availability,"wing image (using node stress data):; ![VisualStress04](https://user-images.githubusercontent.com/56633656/234069253-030154aa-f3c1-4bff-9d92-eccffd3dbc45.png); Compared to the visualization with ""_showVonMisesStressPerElement_"", this color map accords more with my intuition of the stress forces (while the feet are pressed).; Therefore, I would like to add a new option ""_showVonMisesStressPerNodeColorMap_"" to show this color map. 2) I would like to add an option ""_showGapBetweenElements_"" to activate/deactivate drawing the gap between the elements, in order to show a smooth color map:; ![VisualStress07](https://user-images.githubusercontent.com/56633656/234069288-96543e38-47f5-44c7-8c3d-f813fe7557cd.png). 3) I would like to add an option ""_showForceField_"" to decide if we draw the forcefield of the current object or not. This will be useful when we have several soft tissues and we want to focus on one of the objects:; ![VisualStress08](https://user-images.githubusercontent.com/56633656/234069316-194be9c0-1abb-4380-a7e0-cad443d74206.png); ![VisualStress09](https://user-images.githubusercontent.com/56633656/234069330-5e07339a-de8b-4ee0-ae73-df787b64ccbc.png). Finally I would like to note that the addition of the new functions does not change the visualization with previous settings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3821:2446,failure,failures,2446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3821,2,['failure'],['failures']
Availability,"with compatibility layer, s'il vous plait!. Fix #3378. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3891:599,failure,failures,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3891,2,['failure'],['failures']
Availability,"xml header, solver iterations, etc... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/310:294,failure,failures,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/310,2,['failure'],['failures']
Availability,"xml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240:2128,failure,failures,2128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240,2,['failure'],['failures']
Availability,"y msg_warn() ""does not support partial_solve"" only at run-time, which means there is no way to know at compile-time that a linear solver does not support partial solving. So I set the partial solving API in an interface (crudely called PartialLinearSolver, name can be gladly changed), and is implemented only by BTDLinearSolver.; As for LinearSolverConstraintCorrection, it will check at construction if the given linearsolver is able to handle partialsolving (by dynamic_cast sadly) and if not, can warn the user that the linear solver is not usable and will be in ""incorrect"" state afterwards, instead of printing ""partial_solve not implemented"" while simulating.... A nice side-effect is that linear solvers libs will be slightly smaller, as all instanciations of all linear solvers (except btd then) do not contain init_partial_solve() and partial_solve() functions anymore. EDIT: it is even worse, linear solvers not implementing partial_solve does a ""msg_info()"" so w/o printLog off, users wont even know why the ConstraintSolver/ConstraintCorrections is not doing its job....; See unit tests on LCPForceFieldback, it is using SparseLDLSolver (not implementing partial_solve) and the tests do not throw any warning, even if it is using LCPConstraintSolver and LinearSolverConstraintCorrection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3241:2307,failure,failures,2307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241,2,['failure'],['failures']
Availability,"y?):; ```; BTDLinearSolver.inl(84): error C2244: 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -': unable to match function definition to an existing declaration; BTDLinearSolver.inl(81): note: see declaration of 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -'; BTDLinearSolver.inl(84): note: definition; BTDLinearSolver.inl(84): note: 'sofa::defaulttype::Mat<sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,T> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(void) const'; BTDLinearSolver.inl(84): note: existing declarations; BTDLinearSolver.inl(84): note: 'sofa::defaulttype::Mat<,,real> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(const sofa::defaulttype::Mat<,,real> &) const'; BTDLinearSolver.inl(84): note: 'sofa::defaulttype::Mat<,,real> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(void) const'; BTDLinearSolver.inl(90): error C2244: 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -': unable to match function definition to an existing declaration; BTDLinearSolver.inl(87): note: see declaration of 'sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -'; BTDLinearSolver.inl(90): note: definition; BTDLinearSolver.inl(90): note: 'sofa::defaulttype::Mat<sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,sofa::component::linearsolver::BlocFullMatrix<N,T>::BSIZE,T> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(const sofa::defaulttype::Mat<,,real> &) const'; BTDLinearSolver.inl(90): note: existing declarations; BTDLinearSolver.inl(90): note: 'sofa::defaulttype::Mat<,,real> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(const sofa::defaulttype::Mat<,,real> &) const'; BTDLinearSolver.inl(90): note: 'sofa::defaulttype::Mat<,,real> sofa::component::linearsolver::BlocFullMatrix<N,T>::Bloc::operator -(void) const'; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/907#issuecomment-458100984:1129,error,error,1129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/907#issuecomment-458100984,1,['error'],['error']
Availability,"yet an other option is to conditionnaly compile HighOrderTopology code in Flexible based on whether the HighOrderTopology plugin is existing or not (in cmakelists package_require(HighOrderTopology) if (HighOrderTopology_FOUND) ... ): ; - each plugin can live in its own repository ; - no need for a third plugin ; - should work whether all the plugins are compiled in the same cmake build project or are compiled/installed separately (well HighOrderTopology must be available when compiling Flexible) . thomas . ----- Mail original -----. > De: ""Matthieu Nesme"" notifications@github.com; > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > ; > Hi Hervé,; > ; > In general, I think it is a good idea to have a repo per plugin, even if it; > becomes more difficult to update them when the sofa core is modified.; > But in this specific case, it would be great to add this plugin to this; > github repo, so Flexible can still benefit from your code.; > ; > Another solution, could be to add a third plugin in your independent; > repository, that would link with both SOFA-HighOrderTopology and Flexible,; > and that would contain the high order shape functions.; > ; > What do you think?; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936:466,avail,available,466,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936,1,['avail'],['available']
Availability,"you can let it open, we will close this issue when the error message will be added. (very soon)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/768#issuecomment-421054304:55,error,error,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/768#issuecomment-421054304,1,['error'],['error']
Availability,you have some compilation error... not sure if it is relevant...; could you double check before merging; ``` /builds/workspace/sofa-framework/PR-4880/fedora_clang_options_release/src/Sofa/GUI/Common/src/sofa/gui/common/MouseOperations.cpp:104:12: error: cannot initialize return object of type 'sofa::gui::component::performer::InteractionPerformer *' with an lvalue of type 'const sofa::gui::component::performer::InteractionPerformer *'```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4880#issuecomment-2265771315:26,error,error,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4880#issuecomment-2265771315,2,['error'],['error']
Availability,you turn SofaCUDA plugin to on by my fault? :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2440#issuecomment-948595593:37,fault,fault,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2440#issuecomment-948595593,1,['fault'],['fault']
Availability,"zeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . This is the re-opening of [previous issofa_topology pull-request](https://github.com/sofa-framework/sofa/pull/217). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243:1967,failure,failures,1967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243,1,['failure'],['failures']
Availability,|; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28856,redundant,redundant-function-ptr-dereference,28856,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redundant'],['redundant-function-ptr-dereference']
Availability,"~~Last one (?) 🤔~~. #1527 . based on:; - #2813 . Deprecates _**SofaBaseVisual**_, ; Deprecates partially **SofaUserInteraction** and **_SofaGraphComponent_**. Gathers ""general"" configuration settings component in **Sofa.Component.Setting**; and Controller related things in **Sofa.Component.Controller**. The rest of configuration setting was originally present as well, plus the ""performer"" (inciseperformer, addcameraperformer...) but those will be added in a separate Sofa.GUI family modules). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2843:1041,failure,failures,1041,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2843,2,['failure'],['failures']
Availability,~~The PR is based on #1003 (merged)~~ . CHANGELOG:; - [SofaPython] Add vector<Rigid3> to the addNewData in Binding_Base.cpp; - [SofaPython] Base.addNewData returns the created data or set an exception in case of failure. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1004:212,failure,failure,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1004,3,['failure'],"['failure', 'failures']"
Availability,"~~To push immediately after merging #1734~~. Remove all references to defaulttype::Vec (and helper::fixed_array) and remove all ""deprecation"" messages. Breaking for the same reason with #1730 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1740:738,failure,failures,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1740,2,['failure'],['failures']
Availability,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1834:1029,failure,failures,1029,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834,2,['failure'],['failures']
Availability,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4582:1091,failure,failures,1091,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582,2,['failure'],['failures']
Availability,"Здравствуй @mariabul . The [ERROR] [XMLParser] means that the error was emitted by the xml parser. Having such error indicates that the content of the file you are trying to parse is considere as invalid xml content. . This happens when the file is empty or there is missing closing tag ```xml </>``` and all those kind of things. So I know it is trivial but can you first check that the content of the file is the one from our repository and that it was not changed ? . If it is then maybe it is a more complex issue.; I just checked the file you are trying to load and noticed that it is missing the xml prefix.; ```xml; <?xml version=""1.0"" encoding=""UTF-8""?>; ...; ```. Your github account says you are from moscow, so I wonder if this could be a character encoding issue. Maybe there is a cyrillic character encoding set on your system and as the file does not specifying the encoding of the XML parser it use the default one which result in unloadable file. . Could you try if specifying the xml encoding helps ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/569#issuecomment-360149494:28,ERROR,ERROR,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/569#issuecomment-360149494,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4487:839,failure,failures,839,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487,2,['failure'],['failures']
Availability,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4395:762,failure,failures,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395,2,['failure'],['failures']
Availability,"…Sofa_Test. #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2144:564,failure,failures,564,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2144,2,['failure'],['failures']
Availability,"…ion warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1726:558,failure,failures,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1726,2,['failure'],['failures']
Availability,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2179:1554,failure,failures,1554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179,2,['failure'],['failures']
Availability,"⚠-For MSVC only; ⚠-in Release mode only; ⚠-with CMake flag SOFA_ENABLE_LINK_TIME_OPTIMIZATION. Enable Link-time optimization to whole SOFA project.; (with caduceus.scn : w/o: 170fps, w/: 190fps). WARNING: typical SOFA compilation takes 20GB!🥴. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1468:500,failure,failures,500,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1468,2,['failure'],['failures']
Availability,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4496:135,failure,failures,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496,3,['failure'],['failures']
Availability,🥹; ```; Test Result (2 failures / +1); SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.elasticbody.py; SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.step6.py; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082:23,failure,failures,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082,1,['failure'],['failures']
Deployability,	 2.29	 0.27	 0.08	 0.27	 5.59	....CollisionResponse; 4 	 3.06	 1 	 0.01	 0.06	 0.01	 0 	 0.01	 0.20	....end collision; 3 	 3.07	 9 	 0 	 0.03	 0 	 0 	 0.01	 0.13	...InteractionFF; 3 	 3.08	 2 	 0.19	 1.48	 0.76	 0.18	 1.51	 31.59	...Mechanical; 4 	 3.11	 2 	 0.05	 0.14	 0.06	 0.01	 0.12	 2.53	....ComputeForce; 4 	 3.17	 2 	 0.03	 0.11	 0.04	 0.01	 0.08	 1.68	....ComputeRHTerm; 4 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.09	....MBKBuild; 5 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.03	.....CG-setSystemMBKMatrix; 4 	 3.22	 2 	 0.06	 1.24	 0.60	 0.16	 1.21	 25.25	....MBKSolve; 5 	 3.25	 2 	 0.04	 1.20	 0.57	 0.16	 1.14	 23.86	.....CG-Solve; 4 	 3.94	 2 	 0 	 0.02	 0 	 0 	 0.01	 0.15	....UpdateVAndX; 2 	 4.60	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.23	..UpdateSimulationContextVisitor; 2 	 4.62	 1 	 0.02	 0.07	 0.02	 0.01	 0.02	 0.46	..UpdateMapping; 3 	 4.62	 26.67	 0 	 0.02	 0 	 0 	 0 	 0.05	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 4.64	 1 	 0.12	 0.44	 0.14	 0.03	 0.14	 3.02	..UpdateBBox; 3 	 4.64	 1 	 0.01	 0.07	 0.02	 0 	 0.02	 0.35	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Proximity; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Response; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....Compu,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:3555,Update,UpdateBBox,3555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateBBox']
Deployability, 	 0.04	......Compute BoundingTree: lineCollisionModel3; 6 	 0.15	 1 	 0 	 0.09	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.23	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	.....BroadPhase; 5 	 0.25	 1 	 1.88	 5.32	 2.58	 0.36	 2.58	 31.60	.....NarrowPhase; 4 	 2.83	 1 	 0.70	 4.50	 1.95	 0.89	 1.95	 23.87	....CollisionResponse; 4 	 4.79	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.15	....end collision; 3 	 4.81	 1 	 1.75	 5.13	 3.12	 0.54	 3.12	 38.16	...Mechanical; 4 	 5.02	 1 	 0.12	 0.24	 0.14	 0.02	 0.14	 1.70	....ComputeForce; 4 	 5.16	 1 	 0.08	 0.27	 0.10	 0.01	 0.10	 1.17	....ComputeRHTerm; 4 	 5.26	 1 	 0 	 0.02	 0 	 0 	 0 	 0.04	....MBKBuild; 5 	 5.26	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	.....CG-setSystemMBKMatrix; 4 	 5.26	 1 	 1.38	 4.15	 2.11	 0.34	 2.11	 25.84	....MBKSolve; 5 	 5.35	 1 	 1.29	 3.98	 2 	 0.34	 2 	 24.46	.....CG-Solve; 4 	 7.37	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.09	....UpdateVAndX; 2 	 7.93	 1 	 0.01	 0.05	 0.02	 0 	 0.02	 0.19	..UpdateSimulationContextVisitor; 2 	 7.96	 1 	 0.02	 0.23	 0.03	 0.01	 0.03	 0.32	..UpdateMapping; 3 	 7.96	 26.51	 0 	 0.01	 0 	 0 	 0 	 0.03	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 7.99	 1 	 0.13	 0.51	 0.18	 0.04	 0.18	 2.26	..UpdateBBox; 3 	 7.99	 1 	 0.01	 0.05	 0.01	 0 	 0.01	 0.17	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 8 	 1 	 0 	 ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:19123,Update,UpdateSimulationContextVisitor,19123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateSimulationContextVisitor']
Deployability," ""showVisual"",; ""showForceFields"",; ""showBehaviorModels"",; ],; ). root.addObject(""CollisionPipeline"", depth=6, verbose=False, draw=False); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""MinProximityIntersection"", name=""Proximity"", alarmDistance=0.5, contactDistance=0.3); root.addObject(""CollisionResponse"", response=""FrictionContactConstraint""); root.addObject(""GenericConstraintSolver""). scene_node = root.addChild(""scene""). composite_node = scene_node.addChild(""composite""). mesh_files = [; ""mesh/liver.obj"",; ]. composite_node.addObject(; ""SparseGridMultipleTopology"",; n=[6, 6, 6],; fileTopology=mesh_files[0],; fileTopologies=mesh_files,; nbVirtualFinerLevels=2,; finestConnectivity=False,; stiffnessCoefs=[1] * len(mesh_files),; massCoefs=[1] * len(mesh_files),; ). composite_node.addObject(""EulerImplicitSolver"", vdamping=0, rayleighMass=0, rayleighStiffness=0); composite_node.addObject(""SparseLDLSolver""); composite_node.addObject(""MechanicalObject""); composite_node.addObject(; ""HexahedronCompositeFEMForceFieldAndMass"",; drawType=0,; lumpedMass=False,; nbVirtualFinerLevels=2,; youngModulus=600,; poissonRatio=0.3,; method=""polar"",; density=0.1,; updateStiffnessMatrix=False,; ); composite_node.addObject(""BoxROI"", box=[-1, -5, -1, 5, 5, 5]); composite_node.addObject(""FixedConstraint"", indices=""@BoxROI.indices""); composite_node.addObject(""LinearSolverConstraintCorrection""). liver_visual = composite_node.addChild(""visual""); liver_visual.addObject(""MeshOBJLoader"", filename=mesh_files[0]); liver_visual.addObject(; ""OglModel"",; src=""@MeshOBJLoader"",; material=""Transparent Diffuse 1 1 0 1 0.45 Ambient 0 1 1 1 1 Specular 1 0 0 1 1 Emissive 0 1 0 0 1 Shininess 1 100"",; ); liver_visual.addObject(""HexahedronCompositeFEMMapping""). return root; ```. <video src=""https://github.com/sofa-framework/sofa/assets/29635054/2088731c-9fe9-4d2f-a574-a71d9d615815; "" width=""200"" height=""auto"">. This is without any interaction with the scene. Cheers,; Paul",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:10238,update,updateStiffnessMatrix,10238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['update'],['updateStiffnessMatrix']
Deployability," (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:2343,update,updated,2343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,1,['update'],['updated']
Deployability, **Full list update: in the 3 PR**; - [SofaBaseCollision] ; - CapsuleModel; - [SofaBaseMechanics]; - DiagonalMass; - MechanicalObject; - SubsetMapping; - UniformMass; - [SofaBaseTopology] ; - PointSetGeometryAlgorithms; - [SofaBaseVisual] ; - VisualModelImpl; - [SofaBoundaryCondition]; - AffineMovementConstraint; - ConstantForceField; - EdgePressureForceField; - FixedConstraint; - FixedPlaneConstraint; - FixedTranslationConstraint; - HermiteSplineConstraint; - LinearForceField; - LinearMovementConstraint; - LinearVelocityConstraint; - OscillatingTorsionPressureForceField; - ParabolicConstraint; - PartialLinearMovementConstraint; - PatchTestMovementConstraint; - ProjectDirectionConstraint; - ProjectToLineConstraint; - ProjectToPlaneConstraint; - ProjectToPointConstraint; - QuadPressureForceField; - SurfacePressureForceField; - TaitSurfacePressureForceField; - TrianglePressureForceField; - [SofaConstraint]; - DistanceLMConstraint; - DOFBlockerLMConstraint; - FixedLMConstraint; - UncoupledConstr,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1223:1007,update,update,1007,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1223,2,"['Patch', 'update']","['PatchTestMovementConstraint', 'update']"
Deployability," , dt);; gnode->execute ( beh );; sofa::helper::AdvancedTimer::stepEnd(""BehaviorUpdatePositionVisitor"");; ```; is now in a function:; ```cpp; void DefaultAnimationLoop::behaviorUpdatePosition(const core::ExecParams* params, const SReal dt) const; {; sofa::helper::ScopedAdvancedTimer timer(""BehaviorUpdatePositionVisitor"");; BehaviorUpdatePositionVisitor beh(params, dt);; gnode->execute(beh);; }; ```; In the end, the pipeline is easier to read:; ```cpp; sofa::core::MechanicalParams mparams(*params);; mparams.setDt(dt);. behaviorUpdatePosition(params, dt);; updateInternalData(params);. resetConstraint(params);. beginIntegration(params, dt);; {; collisionDetection(params);. const core::ConstraintParams cparams;; buildConstraintMatrix(cparams);; accumulateMatrixDeriv(cparams);. solve(params, dt);. projectPositionAndVelocity(nextTime, mparams);; propagateOnlyPositionAndVelocity(nextTime, mparams);; }; endIntegration(params, dt);; computeIsolatedForces(params, dt);. updateSimulationContext(params, dt, startTime);; ```. # AnimateVisitor. `AnimateVisitor` is no longer used. It was difficult to read its logic (the visitor called other visitors, it relies heavily on pruning which is easy to miss). Instead, I suggest to explicit all the steps from the `AnimateVisitor` into the `DefaultAnimationLoop`. This is closer to what is done in the `FreeMotionAnimationLoop`. Plus, we can find common steps, which makes the code more consistent. Note also the introduction of `ComputeIsolatedForceVisitor` (see the comments in the code to understand its purpose). # Multithreading. Since `AnimateVisitor` is no longer used, `SolveVisitor` is used instead, providing optional multithreading, i.e. solving each ODE in parallel. Similar to what was done in the `FreeMotionAnimationLoop`. ## Benchmark. Measured on `examples/Component/SolidMechanics/FEM/TetrahedronFEMForceField.scn`. Without parallelism; ```; [INFO] [BatchGUI] 1000 iterations done in 14.7031 s ( 68.0128 FPS).; LEVEL START NUM MIN MAX M",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959:1244,update,updateSimulationContext,1244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959,1,['update'],['updateSimulationContext']
Deployability, - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-1A3C-3574-92DD-63ABE39E3FF9> /usr/lib/libCheckFix.dylib; 0x7fff29fc1000 - 0x7fff29fd8fff libcoretls.dylib (169) <B33BEF87-3275-356D-9815-D0E94122D2EB> /usr/lib/libcoretls.dylib; 0x7fff29fd9000 - 0x7fff29fe9fff libbsm.0.dylib (68.40.1) <D71EF121-D4B0-306E-9843-9FAFD558E3A4> /usr/lib/libbsm.0.dylib; 0x7fff29fea000 - 0x7fff2a033fff libmecab.dylib (929.1.1) <1F424683-4213-3594-9BF5-EFCCCDAA83A5> /usr/lib/libmecab.dylib; 0x7fff2a034000 - 0x7fff2a039fff libgermantok.dylib (24) <E40EFA11-E95C-36D1-A8BE-8CA5B1DD179D> /usr/lib/libgermantok.dylib; 0x7fff2a03a000 - 0x7fff2a04ffff libLinearAlgebra.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:37750,A/B,A/BackgroundTaskManagement,37750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['A/B'],['A/BackgroundTaskManagement']
Deployability," - Handling the case of python script loading a python scene (the current GIL handling implementation will prevent the main python script to get back the interpreter after a python scene runs). ### What this PR brings. Right now, in order to use the SofaPython plugin, you need to create a python scene and run it through a C++ executable (such as runSofa). What I'm proposing here is to simply load the Sofa plugin inside a python script, that's it. A python script could then look like : . ```#!/usr/bin/python2.7; from libSofaPython import Sofa; import argparse. # Parse the arguments; parser = argparse.ArgumentParser(); parser.add_argument(""-n"", ""--number_of_steps"", type=int, help=""Number of steps until the final forces are reach"", default=10); o = parser.parse_args(). sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim); root = Sofa.createNode(""root""). # ...; # some code that creates the scene tree; # ... root.init(). for i in range(number_of_steps):; root.simulationStep(dt); updateConvergencePlot(root). analysis = complexCalculsOnMatrices(root); saveResults(root, analysis); ```. You could even make your own runSofa.py that launches the runSofa GUI (a more complete python runSofa script can be found in an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:1407,update,updateConvergencePlot,1407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['update'],['updateConvergencePlot']
Deployability," /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is em",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:33803,install,install,33803,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability, 0.09	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.23	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	.....BroadPhase; 5 	 0.25	 1 	 1.88	 5.32	 2.58	 0.36	 2.58	 31.60	.....NarrowPhase; 4 	 2.83	 1 	 0.70	 4.50	 1.95	 0.89	 1.95	 23.87	....CollisionResponse; 4 	 4.79	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.15	....end collision; 3 	 4.81	 1 	 1.75	 5.13	 3.12	 0.54	 3.12	 38.16	...Mechanical; 4 	 5.02	 1 	 0.12	 0.24	 0.14	 0.02	 0.14	 1.70	....ComputeForce; 4 	 5.16	 1 	 0.08	 0.27	 0.10	 0.01	 0.10	 1.17	....ComputeRHTerm; 4 	 5.26	 1 	 0 	 0.02	 0 	 0 	 0 	 0.04	....MBKBuild; 5 	 5.26	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	.....CG-setSystemMBKMatrix; 4 	 5.26	 1 	 1.38	 4.15	 2.11	 0.34	 2.11	 25.84	....MBKSolve; 5 	 5.35	 1 	 1.29	 3.98	 2 	 0.34	 2 	 24.46	.....CG-Solve; 4 	 7.37	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.09	....UpdateVAndX; 2 	 7.93	 1 	 0.01	 0.05	 0.02	 0 	 0.02	 0.19	..UpdateSimulationContextVisitor; 2 	 7.96	 1 	 0.02	 0.23	 0.03	 0.01	 0.03	 0.32	..UpdateMapping; 3 	 7.96	 26.51	 0 	 0.01	 0 	 0 	 0 	 0.03	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 7.99	 1 	 0.13	 0.51	 0.18	 0.04	 0.18	 2.26	..UpdateBBox; 3 	 7.99	 1 	 0.01	 0.05	 0.01	 0 	 0.01	 0.17	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 8 	 1 	 0 	 0 	 0 ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:19206,Update,UpdateMapping,19206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateMapping']
Deployability, 0.16	 1 	 0 	 0.10	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.16	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.19	.....BroadPhase; 5 	 0.17	 1 	 1.98	 3.67	 2.62	 0.30	 2.62	 54.67	.....NarrowPhase; 4 	 2.78	 1 	 0.17	 2.29	 0.27	 0.08	 0.27	 5.59	....CollisionResponse; 4 	 3.06	 1 	 0.01	 0.06	 0.01	 0 	 0.01	 0.20	....end collision; 3 	 3.07	 9 	 0 	 0.03	 0 	 0 	 0.01	 0.13	...InteractionFF; 3 	 3.08	 2 	 0.19	 1.48	 0.76	 0.18	 1.51	 31.59	...Mechanical; 4 	 3.11	 2 	 0.05	 0.14	 0.06	 0.01	 0.12	 2.53	....ComputeForce; 4 	 3.17	 2 	 0.03	 0.11	 0.04	 0.01	 0.08	 1.68	....ComputeRHTerm; 4 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.09	....MBKBuild; 5 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.03	.....CG-setSystemMBKMatrix; 4 	 3.22	 2 	 0.06	 1.24	 0.60	 0.16	 1.21	 25.25	....MBKSolve; 5 	 3.25	 2 	 0.04	 1.20	 0.57	 0.16	 1.14	 23.86	.....CG-Solve; 4 	 3.94	 2 	 0 	 0.02	 0 	 0 	 0.01	 0.15	....UpdateVAndX; 2 	 4.60	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.23	..UpdateSimulationContextVisitor; 2 	 4.62	 1 	 0.02	 0.07	 0.02	 0.01	 0.02	 0.46	..UpdateMapping; 3 	 4.62	 26.67	 0 	 0.02	 0 	 0 	 0 	 0.05	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 4.64	 1 	 0.12	 0.44	 0.14	 0.03	 0.14	 3.02	..UpdateBBox; 3 	 4.64	 1 	 0.01	 0.07	 0.02	 0 	 0.02	 0.35	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 4.65,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:3307,Update,UpdateSimulationContextVisitor,3307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateSimulationContextVisitor']
Deployability," 8.41 4.16 0.27 4159.02 100 TOTAL; 1 0 1 3.74 8.40 4.16 0.27 4.16 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 3.72 8.36 4.13 0.27 4.13 99.39 ..AnimateVisitor; 3 0.01 1 3.72 8.35 4.13 0.27 4.13 99.33 ...Mechanical; 4 0.01 1 0.06 0.18 0.07 0.01 0.07 1.59 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.21 ....ComputeRHTerm; 4 0.13 1 1.66 5.86 1.72 0.14 1.72 41.42 ....MBKBuild; 5 0.13 1 1.65 5.85 1.72 0.14 1.72 41.36 .....CG-setSystemMBKMatrix; 4 1.85 1 1.87 4.79 2.28 0.23 2.28 54.71 ....MBKSolve; 5 1.86 1 1.85 4.74 2.26 0.23 2.26 54.29 .....CG-Solve; ```. **EigenSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 3.76367 s ( 265.698 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3 8.05 3.73 0.49 3726.98 100 TOTAL; 1 0 1 3 8.05 3.73 0.49 3.73 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 2.98 8 3.70 0.49 3.70 99.29 ..AnimateVisitor; 3 0.01 1 2.98 8 3.70 0.49 3.70 99.22 ...Mechanical; 4 0.01 1 0.06 0.41 0.07 0.01 0.07 1.83 ....ComputeForce; 4 0.08 1 0.05 0.17 0.05 0.01 0.05 1.36 ....ComputeRHTerm; 4 0.13 1 1.05 4.28 1.37 0.28 1.37 36.71 ....MBKBuild; 5 0.13 1 1.05 4.28 1.37 0.28 1.37 36.64 .....CG-setSystemMBKMatrix; 4 1.50 1 1.78 5.49 2.19 0.29 2.19 58.87 ....MBKSolve; 5 1.51 1 1.77 5.44 2.18 0.29 2.18 58.39 .....CG-Solve; ```. CompressedRowSparseMatrixMat3x3d is faster because it manipulates blocks of 3x3, which is the best strategy in this case. Unfortunately, Eigen manipulates scalars only.; To be fair, EigenSparseMatrixd must be compared to CompressedRowSparseMatrixd. We notice a slight speed up with EigenSparseMatrixd . I wanted to use Eigen::BlockSparseMatrix to have blocks of 3x3, but as an unsupported module, it does not compile with Eigen 3.4. I increased the resolution of the grid: MBKBuild becomes slower than CompressedRowSparseMatrixd, and MB",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:2520,Update,UpdateInternalDataVisitor,2520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,1,['Update'],['UpdateInternalDataVisitor']
Deployability," << pair.second << std::endl;; }; ```; As you can notice, it browses the map to display its entries. The keys are pointers to BaseState instances and the values correspond to vector state IDs. Console output BEFORE GenericConstraintSolver::prepareStates execution:; ```; lambda's idMap of constraint params: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); lambda's idMap of constraint solver: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); ```. Console output AFTER GenericConstraintSolver::prepareStates execution:; ```; lambda's idMap of constraint params: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); lambda's idMap of constraint solver: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); 0x108242e0->9(V_DERIV); 0x1086ae50->9(V_DERIV); ```. At least one of the consequence is the following: Knowing that GenericConstraintSolver::applyCorrection propages a ConstraintStoreLambdaVisitor which uses the eventually out-of-date ConstraintParams::m_lambda attribute, a crash can occurs at this moment because a component could tries to access to a lambda state vector which is not registered into ConstraintParams::m_lambda. For instance, it happens in Mapping<In,Out>::applyJ method. I see two solutions to remedy to this issue:; The quick & dirty solution I use for now: force the update of ConstraintParams::m_lambda attribute at the end of GenericConstraintSolver::prepareStates method call, like so:; ```; auto* cParams_no_const = const_cast<core::ConstraintParams*>(cParams); // erk...; cParams_no_const->setLambda(this->getLambda());; ```; A better solution I see would be to transform ConstraintParams::m_lambda into a pointer to GenericConstraintSolver::m_lambdaId. Note: My version of SOFA is commit 5037d556893a78cf5f50efdf09b24539a950bbe4 (December 2019, the 13th). ____________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1270:2784,update,update,2784,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1270,1,['update'],['update']
Deployability," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6990,configurat,configuration,6990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,3,"['configurat', 'install']","['configuration', 'installation', 'installed']"
Deployability," But I don't think the library should do this in the user's back without transparency. > you need to handle the case where the loaded scene already has python scripts, and let the PythonEnvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it should be avoid for now since I'm not sure what side effects this will bring. Right now doing it seems not so bad as, again, we only attach the environment to the already created python environment. ; - A ScriptController will need to be added in order to trigger script events so that the python scene's functions (initGraph, onBeginAnimationStep, etc) are called. The createScene function is called by the SceneLoaderPY so this one is fine. > (I would probably put your feature in a module separate from Sofa for this reason). I think this should be entirely a part of the SofaPython plugin in order to keep what is related to sofa in python there. > what happens when Sofa.cleanup() gets called but python objects still hold c++ objects that are to be destructed when python exits ?. This is a good questi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:1865,integrat,integrate,1865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['integrat'],['integrate']
Deployability," C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\ID",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1736,install,install,1736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['install'],['install']
Deployability," Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is empty; By default SparseLDLSolver uses blocks with a single double (to handle all cases of simulations).; If you are using only 3D DOFs, you may consider using blocks of Matrix3 to speedup the calculations.; If it is the case, add template=""CompressedRowSparseMatrixMat3x3d"" to this object in your scene; Otherwise, if you want to disable this message, add template=""CompressedRowSparseMatrixd"" .; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [Scene",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:34267,install,install,34267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability, Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class al,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24844,install,install,24844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability," CompressedRowSparseMatrix . I renamed all the **bloc** words to **block** as well. The previous CRSMatrix could be used as a BaseMatrix (solvers), ConstraintMatrix (iterations) and as a pure CRS itself.; This new CRSMatrix is decomposed in several types:; - CRSGeneric (name to be changed maybe): the pure CRS structure; - CRSMechanical: inheriting/implementing BaseMatrix; - (in a next PR) CRSConstraintMatrix, with the same API as the old CRSMatrix used for ConstraintMatrices (for iterating). Different purposes need different traits (some case would prefer autocompression, etc), so a lot of compile-time options are present. They are called policy.; I needed to change some flags from the Insimo's version to have the same behavior for the tests. So in the future, it could be interesting to see if those changes should be integrated later for more performance (but the tests would need to be changed). For compatibility reasons, the old ""CRSMatrix"" type is an alias on CRSMechanical. In this PR, no change of performance is noted (neither regression or upgrade). Tested on caduceus, TorusFall, solvers scenes and BeamAdapter's 3instruments_collis.scn. Ref:; - https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrix.h. Courtesy of Insimo (@fjourdes ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515:1521,upgrade,upgrade,1521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515,1,['upgrade'],['upgrade']
Deployability," DEV TOTAL PERCENT ID; 3 0.01 1 19.42 28.17 20.23 0.83 20.23 95.51 ...Mechanical; 4 0.02 1 0.86 1.54 0.90 0.06 0.90 4.23 ....ComputeForce; 4 0.91 1 0.70 1.38 0.74 0.05 0.74 3.51 ....ComputeRHTerm; 4 1.66 1 0 0.03 0 0 0 0.02 ....MBKBuild; 5 1.66 1 0 0.02 0 0 0 0.01 .....CG-setSystemMBKMatrix; 4 1.66 1 17.79 26.51 18.56 0.78 18.56 87.62 ....MBKSolve; 5 1.68 1 17.76 26.48 18.53 0.77 18.53 87.49 .....CG-Solve; 4 20.22 1 0.01 0.04 0.01 0 0.01 0.05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177:1362,Update,UpdateVAndX,1362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177,1,['Update'],['UpdateVAndX']
Deployability, Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4814,Release,Release,4814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability," NG branch](https://github.com/sofa-framework/sofa/tree/ng) on sofa-framework.; Still, all the developments will go through the PR process. Reminder: your feedback is VERY important, we need it to adapt our work and minimize future rollbacks. **Do not hesitate to put any comment in the pull-requests.**. ## Refactoring and adapting SPM for Sofa.Component.Utils. SPM is the set of scripts we use to make our work easily reproducible. You can check it out [here](https://github.com/guparan/sofa2ng). This work made me realize that it will be very hard, if not impossible, to anticipate every subtle change needed by the refactoring.; - Do we want SPM to be an all inclusive script to refactor completely SOFA? ; every refactoring is unique and needs to change SPM ; -> namespace handling ; -> includes refactoring; - Or should we prefer it to be an easy-to-use script to **bootstrap** any refactoring? ; -> very specific changes will have to be done by hand. I propose to go for solution 2 and to provide a git patch covering the work done after SPM job (fixing includes, fixing namespaces, ...). The progress of this task is **85%** since I now have to create the patch and to provide everything in the PR. ## Moving on with Sofa.Helper.Bvh; Following [the latest iteration on NG architecture](https://annuel2.framapad.org/p/sofang-v3) and Damien's first draft in his [cleanTheMessStep1](https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng) branch, I started refactoring SofaFramework with Sofa.Helper.Bvh. This task needed me to heavily change/adapt SPM. It contributed to make me prefer solution 2 above. The progress of this task is **60%**. TODO:; - update the recipe with latest SPM changes (namespace handling); - adapt SPM output for smooth transition from SOFA; - create the patch; - open a PR. ## Next steps; - Finalize and merge Sofa.Component.Utils PR; - Open a new PR: Sofa.Helper.Bvh; - Continue with SofaHelper refactoring. ----------. Any feedback is more than welcome :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811:1298,patch,patch,1298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811,4,"['patch', 'update']","['patch', 'update']"
Deployability," Pluginization works are possible but they have to be done in-place (not moving the files). This will permit to simplify the dependencies between SOFA modules. . About the NG branch, to avoid big divergence, we propose to merge it with master as soon as some big step is done. The next big step is SofaFramework coverage. ## Bootstrapping scripts. Previously named SPM, the [bootstrapping scripts](https://github.com/guparan/sofa2ng) are now able to handle test folders. ## Process. Here is the process to cover one module:; 1. Create/update a recipe based on an existing one.; 2. Run the bootstrapping scripts with the recipe.; 3. Inspect the output; 4. If something is wrong or missing, edit the bootstrapping scripts and *goto 1*; 5. Do specific changes by hand like namespace aliases; 6. Create a patch of all changes made by hand; 7. Open a pull-request providing the recipe and the patch (previously pushed to sofa2ng). This process will be rewritten in Sofa.Helper.Bvh pull-request. ## Sofa.Component.Utils. The first NG pull-request has been merged to the NG branch. There is still some updates to do though, because the bootstrapping scripts changed. ## Sofa.Helper.Bvh. The recipe has been updated. ; This work will be the base of further contributions. I will detail all the bootstrapping + patching process in the pull-request. ## Next steps; - Pluginize without moving files: use plugins mechanism to work on modules dependencies ; Start with the less dependent ones and progress towards SOFA core.; Objective: simplify dependencies between modules.; - Validate Damien's architecture proposal for SofaFramework: https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel/Sofa; Particularly about Sofa.Helper.Types; - Create Sofa.Helper.Bvh pull-request; Will give a clear example and all the process to refactor parts of SofaFramework; - Progress within Sofa.Helper.*; Assign tasks to all volunteers before STC#5. ----------. As always, any feedback is more than welcome :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223:1242,update,updates,1242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223,3,"['patch', 'update']","['patching', 'updated', 'updates']"
Deployability," SOFA was going to be cut into ; several pieces that could be optionally compiled. Is this still on the radar ?. Hervé. Le 05/10/2016 à 15:27, thomas-lemaire a écrit :. > yet an other option is to conditionnaly compile HighOrderTopology code ; > in Flexible based on whether the HighOrderTopology plugin is existing ; > or not (in cmakelists package_require(HighOrderTopology) if ; > (HighOrderTopology_FOUND) ... ):; > - each plugin can live in its own repository; > - no need for a third plugin; > - should work whether all the plugins are compiled in the same cmake ; > build project or are compiled/installed separately (well ; > HighOrderTopology must be available when compiling Flexible); > ; > thomas; > ; > ----- Mail original -----; > ; > > De: ""Matthieu Nesme"" notifications@github.com; > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > ; > > Hi Hervé,; > > ; > > In general, I think it is a good idea to have a repo per plugin, ; > > even if it; > > becomes more difficult to update them when the sofa core is modified.; > > But in this specific case, it would be great to add this plugin to this; > > github repo, so Flexible can still benefit from your code.; > > ; > > Another solution, could be to add a third plugin in your independent; > > repository, that would link with both SOFA-HighOrderTopology and ; > > Flexible,; > > and that would contain the high order shape functions.; > > ; > > What do you think?; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub , or mute the thread .; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936, ; > or mute the thread ; > https://github.com/notifications/unsubscribe-auth/ASgmq2nsUCIg4ENi5a",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233:1357,update,update,1357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233,1,['update'],['update']
Deployability," Sofa. I followed the page here: https://www.sofa-framework.org/community/doc/plugins/usual-plugins/cgal-library/. Although it does not tell what version of CGAL to use, or boost as well. Finally, I have been successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1204,Release,Release,1204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability," Visual Studio; 4. I push configurate and first I have a problem with Eigen, but fortunately I could solve it.; 5. I push configurate again and there are two errors, one says: metis_DIR-NOTFOUND and second: GLEW_DIR-NOTFOUND>. **Expected behavior**; < I search for Metis and I found something called metis 5.10.0 but nothing happens, the error can not be solved, in the other hand I don't know nothing about GLEW. Hope you can help me, I attached some pictures, Thanks. >. --------------; ![metis](https://user-images.githubusercontent.com/111095273/184257908-0df394b7-5c8e-4d3a-acf1-bd1ecce53c3a.png); -------------------------------. ### Environment; ![metis1](https://user-images.githubusercontent.com/111095273/184257942-11b4e619-c723-4ab2-b53d-ccdb737e674c.png). **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; - Version of SOFA: < INFOS ABOUT THE BRANCH OR BINARIES - e.g: ""master branch at commit 70bb123"", ""v21.06.00 binaries"", ... >; - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your r",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3213:1402,INSTALL,INSTALL,1402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3213,1,['INSTALL'],['INSTALL']
Deployability," [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/83347021-63272b80-a33f-11ea-9cda-e2c209b1be80.png). I am not able to understand what is the issue? Pl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:2019,Release,Release,2019,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability," [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraMechanicalMapping<Vec3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SubsetTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Tetra2TriangleTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Triangle2EdgeTopologicalMapping; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RayCollisionModel; [WARNING] [ObjectFactory] Class already registered: RayTraceDetection; [WARNING] [ObjectFactory] Class already registered: SleepController; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [WARNING] [ObjectFactory] Class already registered: ReadState; [WARNING] [ObjectFactory] Class already registered: ReadTopology; [WARNING] [ObjectFactory] Class already registered: GIDMeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:28336,install,install,28336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability," ```; ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::constraint::lagrangian::model::UnilateralInteractionConstraint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::addContact(double, sofa::type::Vec<3u, double>, double, int, int, long, long long); sofa::component::collision::response::contact::FrictionContact<sofa::component::collision::RigidDistanceGridCollisionModel, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::createResponse(sofa::core::objectmodel::BaseContext*); sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionResponse(); sofa::simulation::PipelineImpl::computeCollisionResponse(); sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::grap",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533:1406,Pipeline,PipelineImpl,1406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533,1,['Pipeline'],['PipelineImpl']
Deployability," ```cpp; int BatchGUI::mainLoop(); {; if (groot); { ; bool infiniteLoop = (nbIter == -1);. if (infiniteLoop); { ; msg_info(""BatchGUI"") << ""Computing "" << nbIter << "" iterations."" << msgendl;; }; else; {; msg_info(""BatchGUI"") << ""Computing infinite iterations."" << msgendl;; }. sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; msg_info(""BatchGUI"") << sofa::helper::AdvancedTimer::end(""Animate"", groot.get()) << msgendl;; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());; sofa::simulation::Visitor::ctime_t rtfreq = sofa::helper::system::thread::CTime::getRefTicksPerSec();; sofa::simulation::Visitor::ctime_t tfreq = sofa::helper::system::thread::CTime::getTicksPerSec();; sofa::simulation::Visitor::ctime_t rt = sofa::helper::system::thread::CTime::getRefTime();; sofa::simulation::Visitor::ctime_t t = sofa::helper::system::thread::CTime::getFastTime();. signed int i = 2; // one simulation step is animated above; while(infiniteLoop || i <= nbIter); {; sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());. if(infiniteLoop && i % 1000 == 0 || i == nbIter); {; t = sofa::helper::system::thread::CTime::getFastTime()-t;; rt = sofa::helper::system::thread::CTime::getRefTime()-rt;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)t)/((double)tfreq) << "" s ( "" << (((double)tfreq)*i)/((double)t) << "" FPS)."" << msgendl;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)rt)/((double)rtfreq) << "" s ( "" << (((double)rtfreq)*i)/((double)rt) << "" FPS)."" << msgendl; ; ; if(infiniteLoop); {; msg_info(""BatchGUI"") << ""Press Ctrl + C (linux)/ Command + period (mac) to stop "" << msgendl;; }; }. i++;; }; }; return 0;; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378645175:1416,update,updateVisual,1416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378645175,1,['update'],['updateVisual']
Deployability," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4221:2257,release,releases,2257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221,1,['release'],['releases']
Deployability," `make install`). Nothing is breaking BUT dependency problems may arise.; Using package subdirs and relocatable plugins will force us to define dependencies correctly because there will be no more magically accessible parts of SOFA. You will no longer be able to `#include` a file from a package not loaded with `find_package`. ## Important changes. ### [[All] CLEAN extlibs integration and install](https://github.com/sofa-framework/sofa/commit/40669c610100a67f46b1405a972b39fe13291eba); - extlib headers are now installed in include/extlibs; - Windows dependency pack headers are now installed in include/WinDepPack; - SOFA now always tries to `find_package` an extlib before using the embedded one; - header-only extlibs too are now easier to override (see extlibs/CMakelists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with p",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:1083,Install,Install,1083,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['Install'],['Install']
Deployability," already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatri",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:32304,install,install,32304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability," an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4583:1321,pipeline,pipeline,1321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583,1,['pipeline'],['pipeline']
Deployability," be optionally compiled.; > ; > Is this still on the radar ?; > ; > Hervé; > ; > Le 05/10/2016 à 15:27, thomas-lemaire a écrit :; > ; > > yet an other option is to conditionnaly compile HighOrderTopology code; > > in Flexible based on whether the HighOrderTopology plugin is existing; > > or not (in cmakelists package_require(HighOrderTopology) if; > > (HighOrderTopology_FOUND) ... ):; > > - each plugin can live in its own repository; > > - no need for a third plugin; > > - should work whether all the plugins are compiled in the same cmake; > > build project or are compiled/installed separately (well; > > HighOrderTopology must be available when compiling Flexible); > > ; > > thomas; > > ; > > ----- Mail original -----; > > ; > > > De: ""Matthieu Nesme"" notifications@github.com; > > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > > ; > > > Hi Hervé,; > > > ; > > > In general, I think it is a good idea to have a repo per plugin,; > > > even if it; > > > becomes more difficult to update them when the sofa core is modified.; > > > But in this specific case, it would be great to add this plugin to this; > > > github repo, so Flexible can still benefit from your code.; > > > ; > > > Another solution, could be to add a third plugin in your independent; > > > repository, that would link with both SOFA-HighOrderTopology and; > > > Flexible,; > > > and that would contain the high order shape functions.; > > > ; > > > What do you think?; > > > ; > > > —; > > > You are receiving this because you are subscribed to this thread.; > > > Reply to this email directly, view it on GitHub , or mute the thread .; > > ; > > —; > > You are receiving this because you authored the thread.; > > Reply to this email directly, view it on GitHub; > > https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936,; > > or mute the thread; > > https://github.com/notif",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225:2081,update,update,2081,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225,1,['update'],['update']
Deployability," configuration: ""Release""; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glut.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glxew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1196,install,install,1196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['install'],['install']
Deployability," const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; ```. Same issue on windows with up to date version. Collapse o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:2473,Release,Release,2473,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Release'],['Release']
Deployability," double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""_readImage(char const*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""ImageIO_alloc(unsigned long)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""CGAL::Image_3::private_read(point_image*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ld: symbol(s) not found for architecture x86_64; ```. This file is only included if the image plugin is activate",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/352:1361,update,update,1361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/352,1,['update'],['update']
Deployability," load all the available plugins. Loading a library in the process memory will have several side effects which are difficult to anticipate before hand. The major one is the evaluation of all the global variables, which will result in populating the `ObjectFactory` with all the components that this library contains. I would suggest something different for this kind of having a list of default plugins that are loaded directly with your application ( here `runSofa` ). - derive a sort of sofa plugin manifest file, which can be generated as a post-build step. This should be an easy to parse file which could contain the various informations exposed by the `getModuleName()`, `getModuleVersion()`... without having to load the library in the process memory. This manifest file must be stored in an easy to find location in your build tree, an be installed properly ( they need also to be bundled when you deploy your application ). That means they should be located with a similar relative path with respect to the application ( `runSofa` ) when in the build tree or in the install tree. There should be a proposal about that to define : ; - the manifest file type ( ie how are we going to parse it ? json xml text ? ); - the manifest file content itself. - any application could then define the list of predefined plugin it wants to load using a simple configuration file. A default configuration can be provided, but it could be easily overriden. With this mechanism, no recompilation is required when you want to change the list of default plugins, you just change the config file. NB : a bit unrelated but there is a small code ""snippet"" that can be used to recover all the components attached to a library in two lines ; ```cpp; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin; static std::string classes = sofa::core::ObjectFactory::getInstance()->listClassesFromTarget(sofa_tostring(SOFA_TARGET));; return classes.c_str();; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188:1422,install,install,1422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188,3,"['configurat', 'install']","['configuration', 'install']"
Deployability, plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Releas,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3994,Release,Release,3994,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability, report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures. (This PR cannot do that...read my comment about that). ; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; - [ ] #237 should fix most of the newly failing tests. #237 should be merged right after this PR. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2770,update,updated,2770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,2,['update'],"['updated', 'updates']"
Deployability," sofa libraries directory (e.g. the build/install directory). This in turn will be hiding the system binaries when we try to link our project to Sofa, generating the following CMake warnings for every targets that depends on Sofa:. ```; Cannot generate a safe runtime search path for target MyProject; because files in some directories may conflict with libraries in implicit; directories:. runtime library [libGLEW.so.2.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_filesystem.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_program_options.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_thread.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_date_time.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_chrono.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_system.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_atomic.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; ```. Any good reason why we are doing this? Maybe @guparan has an idea?. I understand the use of copying dependencies when **packaging** Sofa, but not for the install command which already has the dependency installed on the system. This is polluting my projects compilation output :-). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1153:1236,install,install,1236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1153,6,['install'],"['install', 'installed']"
Deployability," to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOFA.; Principal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAGE and SOFA_BUILD_APP_BUNDLE; - [SofaMacros] ADD backward compatibility for INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:2272,install,installed,2272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['install'],['installed']
Deployability," to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [TriangularFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.Spring""/> <!-- Needed to use components [TriangularBendingSprings] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TriangleSetGeometryAlgorithms TriangleSetTopologyContainer TriangleSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Quad2TriangleTopologicalMapping] -->; <RequiredPlugin name=""Sofa.GL.Component.Rendering3D""/> <!-- Needed to use components [OglModel] -->; <RequiredPlugin name=""SofaDistanceGrid""/> <!-- Needed to use components [RigidDistanceGridCollisionModel] -->; <DefaultPipeline name=""pipeline"" depth=""6"" verbose=""0"" />. <LCPConstraintSolver maxIt=""1000"" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear so",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:2238,pipeline,pipeline,2238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838,1,['pipeline'],['pipeline']
Deployability," { ; return ""CustomName;; }; ```. Removal of nullptr in className, templateName, typeName; ----------------------------------------------------------------------------; In Base.h the className, templateName, typeName are static templated function with the templated type also provided as a parameter (and nullptr if not provided). If think that having the parameter duplicating the template one is not good as it is misleading on the purpose of the function.; In the following example ; ```cpp; MyObject* ptr;; Base::className(ptr); ; ```; You don't see this is a templated method and you have no idea what 'ptr' is for, and you don't even know if putting a nullptr will work or not. ; Using the templated only syntax is more clear on the role of the function; ```cpp; Base::className<MyObject>(); ; ```; Or if you have an object instance; ```cpp; Base::className<declspec(obj)>(); ; ```. Most common code update pattern; ============================; The most common compilation problem you will encounter with non updated external plugin is related to the overriding of getTemplateName or templateName() method. This method is now now considered as final and thus it is not possible to override it anymore. ; To update old code like this: ; ```cpp; MyClass : public BaseObject; virtual std::string getTemplateName() const { return templateName(); } ; static std::string templateName(const CapsuleCollisionModel<DataTypes>* = nullptr); {; return DataTypes::Name();; }; ```; You can remove the code as the default name generation mecanisme can handle that for you automatically using the ""Name"" . . In the case if your DataTypes does not have a Name() function or if some of the class template parameters should not be exposed as runtime template then you need to implement your custom naming scheem by implementing the following function; ```cpp; static const std::string CustomTemplateName(); { ; return ""CustomName"";; }; ```. ______________________________________________________; <!--- Please lea",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1283:3219,update,update,3219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1283,2,['update'],"['update', 'updated']"
Deployability,![image](https://acegif.com/wp-content/gifs/non-25.gif). file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-install/plugins/SceneCreator/lib.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1154#issuecomment-534740462:132,install,install,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1154#issuecomment-534740462,1,['install'],['install']
Deployability,"""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = SimulationHandler(). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.NONE). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.ONE_MODEL). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.TWO_MODELS); ```. No components of the collision pipeline:; ![image](https://user-images.githubusercontent.com/29635054/191464004-4a820fde-efa7-4e3f-b448-a3f734daf367.png); -> No memory increase, even with two collision models. NewProximity; ![image](https://user-images.githubusercontent.com/29635054/191463963-c581e5ce-e315-401c-b9ed-1786c27b66c1.png); -> Some memory increase with one and no collision models, STRONG increase with two collision models. LocalMinDistance; ![image](https://user-images.githubusercontent.com/29635054/191464146-0e656a0d-8850-4b43-bdd3-b1a478fd4f14.png); -> Some memory increase with one and no collision models, STRONG increase with two collision models. As you can see, there is a memory increase with no collision models and one collision model,; but with two collision models, the increase is much stronger. This is why I suspect the leak is somewhere in the pipeline, not the; collision models themselves. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:2307,pipeline,pipeline,2307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['pipeline'],['pipeline']
Deployability,"""If you have a version older than 2.7.4, it is highly advisable to upgrade.""; See https://github.com/git-for-windows/git/wiki/FAQ. Plus: it adds **unzip** which is needed for Windows dependency pack.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/234:67,upgrade,upgrade,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/234,1,['upgrade'],['upgrade']
Deployability,"# Problem; After updating Sofa source code, you got; `; error: variable has incomplete type 'void'; void SOFA_SOFAEIGEN2SOLVER_API initSofaEigen2Solver();""; `; (or something similar e.g with SOFA_SOFASIMULATIONCOMMON_API , etc). # Why?; While processing the pluginization, macro and config.h files are being rewritten/cleaned to follow the guidelines on Sofa's packaging. So old generated files from cmake's configuration step can mess up with the new ones (compiler does not know which config.h to include and so on). # Solution; Delete the include directory located at the root of your build directory, and configure cmake again. Deletion will clean up everything, and cmake will generate the new config.h.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1670:408,configurat,configuration,408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1670,1,['configurat'],['configuration']
Deployability,"# Split all pipeline steps into smaller functions. Each step of the animation loop now corresponds to a function. For example, the following code:; ```cpp; sofa::helper::AdvancedTimer::stepBegin(""BehaviorUpdatePositionVisitor"");; BehaviorUpdatePositionVisitor beh(params , dt);; gnode->execute ( beh );; sofa::helper::AdvancedTimer::stepEnd(""BehaviorUpdatePositionVisitor"");; ```; is now in a function:; ```cpp; void DefaultAnimationLoop::behaviorUpdatePosition(const core::ExecParams* params, const SReal dt) const; {; sofa::helper::ScopedAdvancedTimer timer(""BehaviorUpdatePositionVisitor"");; BehaviorUpdatePositionVisitor beh(params, dt);; gnode->execute(beh);; }; ```; In the end, the pipeline is easier to read:; ```cpp; sofa::core::MechanicalParams mparams(*params);; mparams.setDt(dt);. behaviorUpdatePosition(params, dt);; updateInternalData(params);. resetConstraint(params);. beginIntegration(params, dt);; {; collisionDetection(params);. const core::ConstraintParams cparams;; buildConstraintMatrix(cparams);; accumulateMatrixDeriv(cparams);. solve(params, dt);. projectPositionAndVelocity(nextTime, mparams);; propagateOnlyPositionAndVelocity(nextTime, mparams);; }; endIntegration(params, dt);; computeIsolatedForces(params, dt);. updateSimulationContext(params, dt, startTime);; ```. # AnimateVisitor. `AnimateVisitor` is no longer used. It was difficult to read its logic (the visitor called other visitors, it relies heavily on pruning which is easy to miss). Instead, I suggest to explicit all the steps from the `AnimateVisitor` into the `DefaultAnimationLoop`. This is closer to what is done in the `FreeMotionAnimationLoop`. Plus, we can find common steps, which makes the code more consistent. Note also the introduction of `ComputeIsolatedForceVisitor` (see the comments in the code to understand its purpose). # Multithreading. Since `AnimateVisitor` is no longer used, `SolveVisitor` is used instead, providing optional multithreading, i.e. solving each ODE in parallel. Simila",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959:12,pipeline,pipeline,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959,3,"['pipeline', 'update']","['pipeline', 'updateInternalData']"
Deployability,"## Execute the latest runSofa on a Windows host (working but pretty slow). Taken from https://dev.to/darksmile92/run-gui-app-in-linux-docker-container-on-windows-host-4kde ; and https://medium.com/@potatowagon/how-to-use-gui-apps-in-linux-docker-container-from-windows-host-485d3e1c64a3. First of all, install [VcXsrv Windows X Server](https://sourceforge.net/projects/vcxsrv/). Here we use [Chocolatey](https://chocolatey.org/) but it's not mandatory.; ```powershell; choco install vcxsrv; ```; Once installation is done, run XLaunch from start menu and make sure to activate the option ""Disable access control"". Then, get your IP with `ipconfig`. Finally, in a PowerShell terminal; ```powershell; docker run --rm --user ""sofa:sofa"" -e DISPLAY=your_IP_goes_here:0.0 -t sofaframework/sofa_nightly_ubuntu:master-standard runSofa; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2485#issuecomment-1175016532:302,install,install,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2485#issuecomment-1175016532,3,['install'],"['install', 'installation']"
Deployability,"## Main discussions. Stéphane: building matrices, vectors, to work with SciPy; Matthieu: Numpy is able to access the memory directly (there are examples). There are some Python modules in Compliant with examples to assemble matrices, etc. Components in Python (Stéphane); ""Trash"" code, not clean, way to go to C++. Forcefield. Need to put breakpoints to interact with the scene from Python console. Our Python needs:; - Create scene easily; - Prototype components; - Matlab aspect. Matthieu: 90% of Datas are binded in Python, special cases need a binding. To sum up, we already have what we need, we just don't know how to work with everything. Besides technical aspects, what we need is a step to step tutorial and more examples. . --> Update online documentation to add Numpy; --> Add a doc for newcomers: right now it is very hard to enter in SOFA with Python (no doc). Start with step by step tutorials and create a Python version of each step. ## Other discussions: performances. ### Pypy. x100 perf but big big cost (recode everything: plugin, bindings, ...). ### Cython. ability to code in Python and get C++ code generation; we can keep the current plugin but we wont gain perf; optimizes some small algos; ability to manually release the GIL (lock); ability to connect to the current VM; adds a step of compilation using ""CIMPORT"" but it must have compilo + headers and libs Sofa. ### Problem of version 2.7 vs 3. Current plugin renamed SofaPython27; SofaPython passes python 3.0. ### How do you get to use Python?. Stéphane: Making XML optional?; Matthieu: python is not just a loader, there is a binding too; As said before, we have to use more Python in the tutorials (doc, website ...). ____________________________________. Referee:; @bcarrez . Interested people:; @matthieu-nesme ; @damienmarchal ; @etienneschmitt ; @bruno-marques ; @chpaulus . If you are interested please tell it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/23:738,Update,Update,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/23,2,"['Update', 'release']","['Update', 'release']"
Deployability,"## issofa attachconstraint. ### New features. ### Improvements; - AttachConstraint: add a position, velocity and response factor in order to correct the constraint. ; - AttachConstraint: Add constraint factor per pair of constraint points to release progressively the attach.; - AttachConstraint: needs an initialization of the data constraintFactor, size of this factor should be at least as important as the minimum of the indices. ; - Scenes: parameter constraintFactor is needed for the component in the scene. ### Cleans. ### Bugfixes. ### Moved files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/501:242,release,release,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/501,1,['release'],['release']
Deployability,"### ALL THIS CHANGES MAINLY AFFECT SOFA INSTALL; (basically nothing changes for you if you never do `make install`). Nothing is breaking BUT dependency problems may arise.; Using package subdirs and relocatable plugins will force us to define dependencies correctly because there will be no more magically accessible parts of SOFA. You will no longer be able to `#include` a file from a package not loaded with `find_package`. ## Important changes. ### [[All] CLEAN extlibs integration and install](https://github.com/sofa-framework/sofa/commit/40669c610100a67f46b1405a972b39fe13291eba); - extlib headers are now installed in include/extlibs; - Windows dependency pack headers are now installed in include/WinDepPack; - SOFA now always tries to `find_package` an extlib before using the embedded one; - header-only extlibs too are now easier to override (see extlibs/CMakelists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:40,INSTALL,INSTALL,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,7,"['INSTALL', 'Install', 'install', 'integrat']","['INSTALL', 'Install', 'install', 'installed', 'integration']"
Deployability,"### Description; This PR removes option to apply projective constraints during velocity and/or position propagation visitors, as it makes it unreliable to put projective constraints in child nodes (required when they apply on the DOFs but with a different/subset topology). All codes (solvers and animationloop) must now explicitly call projection operations/visitors before propagations when required (mostly after `OdeSolver::solve())`. This PR is changing the behavior as projective constraints because they are no longer applied at the end of Simulation::init(). To clearly make that visible to calling's code the propagate visitor was renamed to make sure existing codes fail at compilation time. ; To fix that in private/external repos should be easy:; - if projective constraints should not be applied, simply apply the rename to the visitor class; - if projective constraints should be applied, add a MechanicalProject???Visitor first, then rename the existing one. CHANGELOG for @guparan and @hugtalbot ; - [SofaKernel] Change the way all MechanicaVisitor apply projective constraints. This change is breaking the API aand external solver's code need to be updated (see #PR26). ; - ...to finish ....; ___________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [ ] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216:1166,update,updated,1166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216,1,['update'],['updated']
Deployability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/2657. <div type='discussions-op-text'>. <sup>Originally posted by **longhathuc** February 2, 2022</sup>; Hi, I'm Long from mimesis. I have tried to build the plugins with recent commit of sofa at https://github.com/mimesis-inria/sofa/ But failed. Sofa build successfully, but for the plugins, this is the error when doing cmake. ```; CMake Error at /home/long/work/install/sofaInstall/lib/cmake/SofaGeneral/SofaGeneralConfig.cmake:40 (find_package):; Found package configuration file:. 1 /home/long/work/install/sofaInstall/plugins/SofaGeneralObjectInteraction/lib/cmake/SofaGeneralObjectInteraction/SofaGeneralObjectInteractionConfig.cmake. but it set SofaGeneralObjectInteraction_FOUND to FALSE so package; ""SofaGeneralObjectInteraction"" is considered to be NOT FOUND. Reason given; by package:. The following imported targets are referenced, but are missing: SofaEngine. Call Stack (most recent call first):; /home/long/work/sperry/CMakeLists.txt:56 (find_package); ```. Do you have any clue which might cause the error?. Thanks </div>. #2621 adds two new dependencies on SofaGeneralEngine and SofaEngine for SofaGeneralObjectInteraction, but its associated cmake.in did not reflect the change.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2658:433,install,install,433,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2658,3,"['configurat', 'install']","['configuration', 'install']"
Deployability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3438. <div type='discussions-op-text'>. <sup>Originally posted by **younes1010** October 28, 2022</sup>; I want to use this plug-in that integrates OpenCV with SOFA : https://github.com/rouge1616/SofaOpenCVPlugin; When I define the plug-in's directory in EXTERNAL_DIRECTORIES and configure it, it works. But when I tick the name of the plug-in (figure 1) as the second step, and configure it again, Cmake returns this error : (figure 2). Figure (1):. ![Capture2](https://user-images.githubusercontent.com/116725962/198552700-460b7ae4-61d8-45d7-bca9-b2435f11092c.PNG). Figure (2):; ![Capture1](https://user-images.githubusercontent.com/116725962/198552722-81ccbb03-f8c1-43dc-a11f-aecac5035786.PNG). </div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3440:205,integrat,integrates,205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3440,1,['integrat'],['integrates']
Deployability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3715. <div type='discussions-op-text'>. <sup>Originally posted by **benny2581** March 11, 2023</sup>; Hey,; I am pretty new to sofa and all of coding, programming and basically computer stuff. I have no idea what to do to build sofa on my computer. I downloaded and installed all the programms they recommended on the website right here https://www.sofa-framework.org/community/doc/getting-started/build/windows/; But I honestly don't know what I'm supposed to do next. How to use CMake to add all that stuff? I constantly get errors saying something is invalid.; I looked at the video where a guy shows it all but the main problem appears at the very beginning - he has some folders in his path called src or sofabuild32 but on my device they are nowhere to be found so this is where I get confused. . If anyone could write a step-by-step what to do, or even let me talk to them about how to end my computer suffering, I would be very grateful. Have a wonderful day, ; B.</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3716:334,install,installed,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3716,1,['install'],['installed']
Deployability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/5069. <div type='discussions-op-text'>. <sup>Originally posted by **rickysaettone** October 17, 2024</sup>; # The issue:; I can't visualize two of the .stl objects at the same time but I can see them separately.; Not only does the plane disappear while trying to show both, but also the position of the actuator seems transformed and a two vertices appear in a weird position too.; Can anyone help me please? I am starting to learn SOFA and python in general. Location of the objects: [STL.zip](https://github.com/user-attachments/files/17420653/STL.zip). - actuator located in STL/actuador.stl; - plane located in STL/plane.stl. # Version:; - OS: Windows 11 version: 10.0.22631; - SOFA v23.06.00 via the installer; - Python 3.8.10. # The code:; ```python; #-*- coding: utf-8 -*-; import Sofa; #import contoller.py. def createScene(rootNode):; ; # Required plugins; rootNode.addObject('RequiredPlugin', name='Sofa.Component.IO.Mesh') # Needed to use components [MeshSTLLoader]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Mapping.Linear') # Needed to use components [IdentityMapping]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Mass') # Needed to use components [UniformMass]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.StateContainer') # Needed to use components [MechanicalObject]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Visual') # Needed to use components [VisualStyle]; rootNode.addObject('RequiredPlugin', name='Sofa.GL.Component.Rendering3D') # Needed to use components [OglModel]; rootNode.addObject('VisualStyle', displayFlags='showForceFields showBehaviorModels'); ; rootNode.addObject('DefaultAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'). # Setting the timestep in seconds; rootNode.dt = 0.01; rootNode.addObject('RequiredPlugin',; pluginName='SoftRobots SofaPython3'); ; # Load the mesh file of the actuator and the plane.; rootNode.addObje",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5084:773,install,installer,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5084,1,['install'],['installer']
Deployability,"### Problem. **Description**; < Hi everyone, I followed the instructions to install SOFA software and when Im Generating a VS project (.sln) or a Makefile with CMake I have some troubles because there are some errors just like metis_DIR-NOTFOUND and also GLEW_DIR-NOTFOUND>. **Steps to reproduce**; < 1. I add where my source code is going to be.; 2. I add where my binaries are going to be.; 3. I use Visual Studio; 4. I push configurate and first I have a problem with Eigen, but fortunately I could solve it.; 5. I push configurate again and there are two errors, one says: metis_DIR-NOTFOUND and second: GLEW_DIR-NOTFOUND>. **Expected behavior**; < I search for Metis and I found something called metis 5.10.0 but nothing happens, the error can not be solved, in the other hand I don't know nothing about GLEW. Hope you can help me, I attached some pictures, Thanks. >. --------------; ![metis](https://user-images.githubusercontent.com/111095273/184257908-0df394b7-5c8e-4d3a-acf1-bd1ecce53c3a.png); -------------------------------. ### Environment; ![metis1](https://user-images.githubusercontent.com/111095273/184257942-11b4e619-c723-4ab2-b53d-ccdb737e674c.png). **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; - Version of SOFA: < INFOS ABOUT THE BRANCH OR BINARIES - e.g: ""master branch at commit 70bb123"", ""v21.06.00 binaries"", ... >; - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nex",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3213:76,install,install,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3213,3,"['configurat', 'install']","['configurate', 'install']"
Deployability,"### Problem. **Description**; After building Sofa from source and running ```cmake --install build/``` there are headers missing for QGLViewer.; The installation also adds some redundant QGLViewer directories to the install path. **Steps to reproduce**; - clone the current Sofa repo; - cd into the cloned folder; - run ```cmake -B build/``` ; - run ```cmake --build build/```; - run ```cmake --install build/```. The last line installs everything into $sofa_dir/build/install/.; For QGLViewer this results in ; 1. an overly long install path:; - ```$sofa_dir/build/install/include/extlibs/QGLViewer/QGLViewer/QGLViewer```; 2. missing headers from libQGLViewer, only the following ones are available, most notably qglviewer.h is missing here:; - ```config.h constraint.h domUtils.h mouseGrabber.h quaternion.h ui_ImageInterface.h ui_VRenderInterface.h vec.h```; ; **Expected behavior**; - All headers for libQGLViewer should be copied to the install directory; - The path for the headers should be something like ```$sofa_dir/build/install/include/extlibs/QGLViewer/include/QGLViewer/*.h``` or ```$sofa_dir/build/install/include/extlibs/QGLViewer/*.h```. ---------------------------------------------. ### Environment. **Context**; This happens on both Linux and Windows but only became critical on Windows when I had tried to use the Sofa provided libQGLViewer in my own project. This could temporarily be fixed by changing my own CMake include path to ```{SOFA_INSTALL_DIR}/../../Sofa/GUI/Qt/libQGLViewer```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4196:85,install,install,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4196,11,['install'],"['install', 'installation', 'installs']"
Deployability,"### Problem. **Description**; BilateralInteractionConstraint doesn't work for me anymore when I upgraded to sofa v21.06. **Steps to reproduce**; v21.06 builds well on my pc.; In the demo/caduceus.scn I set the Mouse left button to “attach object using Bilateral constraint” but I can not grasp the snake using the mouse. (see screenshot attached); ![bilateral_notworking_snake](https://user-images.githubusercontent.com/14253725/142281753-285ebe01-e481-4f43-87d7-51e181d3368e.png). Another example is in my scene i attached the gallbladder model to the fatty tissue behind it using Bilateral constraint, i checked the rendering interactions, which visualize the Bilateral constraint contact pairs using Pink dots. Based on the screenshot, the contact points are correctly visualized but they can still move apart as if no constraints at all. (see screenshot attached). ![bilateral_notworking](https://user-images.githubusercontent.com/14253725/142281781-13222f7d-7843-4a38-b7c2-9e93a40dc6a9.png). **Expected behavior**; In our plugins we have used the following to establish the bilaterial constraints.; _sofa::component::constraintset::BilateralInteractionConstraint<DataTypes>::SPtr ; toolState.m_constraints->addContact(c.normal, c.point[0], c.point[1], distance, index1, index2, c.point[0], c.point[1], 1, c.id);_. The same codes and scene files worked well in sofa **v19.12**, where the bilateral constraints worked as constraining the distances between the contact pairs. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: branch v21.06.00; - State: Build directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept E",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486:96,upgrade,upgraded,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486,1,['upgrade'],['upgraded']
Deployability,"### Problem. **Description**; Hello, thank you for your work. I want to compile Sofa. **Steps to reproduce**; I did all installation steps https://www.sofa-framework.org/community/doc/getting-started/build/linux/ make the same structure as described & clone `git clone -b v21.12 https://github.com/sofa-framework/sofa.git sofa/src`.; After configure cmake gui I got error:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /media/maxim/big-500/sofa/build/v21.12/install; CMake Deprecation Warning at SofaKernel/modules/Sofa.Config/CMakeLists.txt:80 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). Using legacy headers is enabled.; Headers from v21.06 are usable, but it is advised to change your code to use the new headers introduced in v21.12.; Adding module Sofa.GL; Adding plugin SofaSimpleFem; Adding plugin SofaRigid; Adding plugin SofaDeformable; Adding plugin SofaObjectInteraction; Adding plugin SofaMeshCollision; Adding plugin SofaEngine; Adding plugin SofaExplicitOdeSolver; Adding plugin SofaImplicitOdeSolver; Adding plugin SofaLoader; Adding plugin SofaGeneralVisual; Adding plugin SofaGraphComponent; Adding plugin SofaGeneralMeshCollision; Adding plugin SofaBoundaryCondition; Adding plugin SofaGeneralAnimationLoop; Adding plugin SofaGeneralDeformable; CMake Warning at /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaEigen2SolverConfig.cmake:36 (message):; SofaEigen2Solver has been removed. The package still exists for; compatibility but is empty. Eigen classes were moved to Sofa.LinearAlgebra; and SVDLinearSolver to SofaDenseSolver.; Call Stack (most recent call first):; /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaBaseConfig.cmake:35 (find_package); /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaGeneralDeformableConfig.cmake:34 (find_package); modules/SofaGeneralDeformable/SofaGeneralDeformable_test/CMakeLists.txt:12 (find_package). Adding ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:120,install,installation,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,3,"['Install', 'install']","['Install', 'install', 'installation']"
Deployability,"### Problem. **Description**; I get difficulties to compile SOFA, due to some incompatibilities. **Steps to reproduce**; Compile SOFA with CMake GUI, and run compilation with ninja. ---------------------------------------------. ### Environment. I tried to compile SOFA again , and I get some trouble that was'nt trivial for me. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: SOFA v23.12.99. ###. I get two different troubles :. - First of all, by mistake, I once checked the SOFA_FETCH_SOFAPYTHON3 value in the cmake-gui (I was thinking it was necessary to link SofaPython3 in the good way), and it download the plugin directly in the source code. But, as I already download the SofaPython3 source myself as an external plugins, it create a conflict between the two versions at configuration. . - Also, I get an error during the compilation, because I did'nt disable the SOFA_GUI_QT_ENABLE_QDOCBROWSER value in cmake-gui. What is this feature for ? Maybe it could be better to disable it by default ?. Now everything is working well on my side. Thanks a lot.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4343:781,configurat,configuration,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4343,1,['configurat'],['configuration']
Deployability,"### Problem. **Description**; I used to use the following node in my xml file but could not feel any forcefeedback on the haptic device when upgraded to sofa v21.06. The collision detection and collision response still works when haptic devices tools collide with other models in the scene.; And the same xml file worked well in sofa v19.12. _""LCPForceFeedback activate=""1"" forceCoef=""0.25"" tags=""PHANToM 2__omni""_. **Steps to reproduce**; An example scene file can be found here:. [TIPS_haptictool_gallbladder_v2106.txt](https://github.com/sofa-framework/sofa/files/7558079/TIPS_haptictool_gallbladder_v2106.txt). **Expected behavior**; The forcefeedback used to work well in sofa v19.12. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: v21.06.00 binaries; - State: Build directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. No Error outputs or suspicious outputs has been found. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2487:141,upgrade,upgraded,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2487,1,['upgrade'],['upgraded']
Deployability,### Problem. **Description**; I've just tried to install last SOFA version with binaries. **Steps to reproduce**; Install SOFA with the .run files and add SofaPython3 plugin. **Expected behavior**; There is an error when I tried to add the plugin. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: 23.06.00. ### Logs. ```txt. Plugin loading failed (/home/pchaillo/SOFA/v23.06.00/plugins/SofaPython3/lib/libSofaPython3.so): libpython3.8.so.1.0: cannot open shared object file: No such file or directory. ```; **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4159:49,install,install,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4159,2,"['Install', 'install']","['Install', 'install']"
Deployability,"### Problem. **Description**; In [TriangularFEMForceField.inl](https://github.com/sofa-framework/sofa/blob/v21.12/modules/SofaMiscFem/src/SofaMiscFem/TriangularFEMForceField.inl#L1022), in `computeForce()`, the `strainDisplacementMatrix` is only updated for the new displacement when the flag `_anisotropicMaterial` is true. Otherwise, the strainDisplacementMatrix that was computed during the initialization in the initLarge() is taken.; That leads to the issue that the following computations of strain and stress use an old version of the strainDisplacementMatrix that does not correspond to the current displacements; I think that in the computeForce-method, the method `computeStrainDisplacement(J, elementIndex, A, B, C)` should be called, no matter if the material is anisotropic or not. **Steps to reproduce**; The `_anisotropicMaterial` flag must be set to false (which is the default). Then, if I print the strainDisplacementMatrix `J` in the computeForce-method, afterwards call `computeStrainDisplacement(J, elementIndex, A, B, C)` and print `J` again, the two outputs differ. That shows that an old, not updated version of the strainDisplacementMatrix is used in the following computations. **Expected behavior**; The strainDisplacementMatrix should always be updated. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: v21.12 branch at commit [baa0c04] (latest commit)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2704:246,update,updated,246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2704,3,['update'],['updated']
Deployability,"### Problem. **Description**; In the archive downloaded from https://www.sofa-framework.org/download/, the file metis.h cannot be found. Therefore, it is not possible to include it in a plugin compiled based on the SOFA binaries.; Note that metis.h is found in the latest nightly builds. The difference may come from the move in https://github.com/sofa-framework/sofa/pull/2717. **Expected behavior**; metis.h can be included based on a SOFA v21.12. ---------------------------------------------. ### Environment. **Context**. - System: Windows (but probably all systems); - Version of SOFA: v21.12.00 binaries; - State: ""Install directory""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2866:622,Install,Install,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2866,1,['Install'],['Install']
Deployability,"### Problem. **Description**; RunSofa crash when opening the inspector for any object with a Data<Material> . **Steps to reproduce**; compile sofa, run the default example, double click on visual_snake_body (a MeshOBJLoader). And you got the following traceback:; ```console; sofa::type::Material::operator=(sofa::type::Material const&); sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::changeMaterial(int); QComboBox::currentIndexChanged(int); QAbstractItemModel::rowsRemoved(QModelIndex const&, int, int, QAbstractItemModel::QPrivateSignal); QAbstractItemModel::endRemoveRows(); QStandardItem::removeRows(int, int); QStandardItemModel::removeRows(int, int, QModelIndex const&); QComboBox::clear(); sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::readFromData(); sofa::gui::qt::DataWidget::updateWidgetValue(); sofa::gui::qt::ModifyObject::updateTables(); QTabWidget::currentChanged(int); .... ; ```. **Expected behavior**; Not crashing",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3017:820,update,updateWidgetValue,820,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3017,2,['update'],"['updateTables', 'updateWidgetValue']"
Deployability,### Problem. **Description**; Since Glew has been set to mandatory by PR: https://github.com/sofa-framework/sofa/pull/2358 ; some external plugin are not compiling anymore on the CI because Glew is not find. **Steps to reproduce**; Just check this link: https://github.com/sofa-framework/SofaHapticAvatar/runs/7087373200?check_suite_focus=true. **Expected behavior**; Either something is missing in Sofa.Gl install step to package glew or should each pacakge linking to Sofa.Gl also find Glew ?,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3079:407,install,install,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3079,1,['install'],['install']
Deployability,"### Problem. **Description**; The console didn't show an error message when there was null distance between two components. **Steps to reproduce**; I used a four-legged robotic model, with each of the legs having two components, a pad at the bottom and the part above (referred to as the extension). The pad and extension were in contact, and gravity was applied. **Expected behavior**; The console should have shown an error message stating, ""Null distance between contact detected"". ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: Version 21.12 binary; - State: Install directory: User home directory. **Command called**. ```txt. runSofa <filename>. ```. **Env vars**; --Unchanged--; ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/User",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:634,Install,Install,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,1,['Install'],['Install']
Deployability,### Problem. **Description**; The scene graph view is not updated when nodes/object are added are simulation time (not responding to add/removal of simulationGraphEvent). . **Expected behavior**; The graph should be always be valid. And even when freezed it should be resynchronized when unfreezed.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2920:58,update,updated,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2920,1,['update'],['updated']
Deployability,"### Problem. **Description**; We have a Sofa Scene with an integrated python script controller. In this python controller we alter the rest position of a mechanical object with template 'CudaVec3f'. In the online documentation of SofaCUDA [https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/](url) there is an example C++ code to access and change parameters of a mechanical object when using SofaCUDA, but there is no corresponding python code snippet. When retrieving the rest position value, the python type is a numpy array in contrast to c++, which has no deviceRead and deviceWrite properties. As there is no direct access to cuda in the SofaPython3 wrapper, our question is how reading/writing can be done in SofaPython3. . When using SofaCUDA without the deviceRead and deviceWrite functions, the object in question randomly diverges, when a translation to `rest_position` is applied. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: 23.06 binary version; - State: binary version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4285:59,integrat,integrated,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4285,1,['integrat'],['integrated']
Deployability,"### Problem. **Description**; When I ran Cmake to build sofa, this error occurred.; <img width=""823"" alt=""image"" src=""https://github.com/sofa-framework/sofa/assets/140193594/80e7f3d2-8061-4dd3-a4ae-4d968ceffad9"">. **Steps to reproduce**; I'm installing SOFA according the link below.; https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst. **Expected behavior**; I expected my build to be successful. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04.2 LTS; - Version of SOFA: v23.12; - State: Build directory. **Command called**. ```txt. cmake --build sofa/build -j --target install. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4622:242,install,installing,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622,2,['install'],"['install', 'installing']"
Deployability,"### Problem. **Description**; When I run `cmake --build $FOLDER_TARGET -j --target install`, it failed due to compiler is unable to find `filesystem`. **Steps to reproduce**; I was installing SOFA following instruction from here https://github.com/ScheiklP/sofa_env/blob/main/docs/source/setting_up_sofa.rst; Follow everything from top to ""Compile SOFA"" part at `cmake --build $FOLDER_TARGET -j --target install`. **Expected behavior**; No idea, as it is my first time trying to install it. ---------------------------------------------. ### Environment. **Context**. - System: < Ubuntu 18.04.5 LTS >; - Version of SOFA: I don't really know but below is the code I used for SOFA installation.; ```; git clone https://github.com/sofa-framework/sofa.git $FOLDER_SRC; cd $FOLDER_SRC; git checkout v23.06; cd $FOLDER_SP3; git init; git remote add origin https://github.com/sofa-framework/SofaPython3.git; git pull origin master; git checkout 5a7371616fe8914530d44bf25ea6b724a6b1a08e; ```; - State: < Build directory >. **Command called**. ```txt; FOLDER_TARGET=$HOME/sofa/build; cmake --build $FOLDER_TARGET -j --target install; ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/sna",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:83,install,install,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,5,['install'],"['install', 'installation', 'installing']"
Deployability,"### Problem. **Description**; hello, I wanted to use Sofa 23.06.00 in M1 Mac Book Pro ; But I can not use Sofa. This error message indicates:; (have 'x86_64', need 'arm64e' or 'arm64')); I'd like to know the solution.; I want to use Sofa 23.06.00. **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >; 1. install anaconda and make virtual environment ; 2. install sofa framework ; 3. define the environment variables ; 4. import Sofa in python. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. Success importing Sofa in python without any error. ---------------------------------------------. ### Environment. **Context**. - System: Mac OS X 14.4.1 (23E224) ; - Version of SOFA:[SOFA_v23.06.00_MacOS.zip](https://github.com/sofa-framework/sofa/releases/download/v23.06.00/SOFA_v23.06.00_MacOS.zip); - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SO",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:326,install,install,326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,5,"['INSTALL', 'Install', 'install', 'release']","['INSTALL', 'Install', 'install', 'releases']"
Deployability,"### Problem. **Description**; runSofa does not propagate correctly the key pressed & release event because of the weird use of the the CTRL combination. . **Steps to reproduce**; ```python; import Sofa. class Test(Sofa.Core.Controller):; 	def __init__(self, *args, **kwargs):; 		Sofa.Core.Controller.__init__(self,*args, **kwargs). 	def onKeypressedEvent(self, event):; 		print(""KEY PRESSED"", event). 	def onKeyreleasedEvent(self, event):; 		print(""KEY RELEASED"", event). def createScene(root):; 	root.addObject(Test(name=""Hello"")); ```; Start a simulation and keep pressing CTRL+A key. It will print!; ```console; KEY PRESSED: {...}; KEY RELEASED: {...}; ... /// lot of repetition; KEY PRESSED: {...}; KEY RELEASED: {...}; ```. **Expected behavior**; It should print a single KEY PRESSED & KEY RELEASED.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3384:85,release,release,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3384,5,"['RELEASE', 'release']","['RELEASED', 'release']"
Deployability,"### Problem. Hi all,; First of all i want to thank you for your work, and yours great framework!; Thanks!. **Description**; I want to try run latest version of Sofa-framework, but I got problem with different gcc verions. **Steps to reproduce**; First of all I had installed SOFA by using your precompiled binary file:; `./SOFA_v21.12.00_Linux.run`; after that I run:; `./runSofa-21.12.00`; And I got the errors; ```; ./runSofa-21.12.00 ; ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/libSofa.Helper.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/libSofa.SimulationCore.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../plugins/SofaValidation/lib/../../../lib/libSofa.Type.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../lib/libSofaBaseMechanics.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../plugins/SofaUserInteraction/lib/../../../plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../plugins/SofaUserInteraction/lib/../../../plugins/SofaDeformable/lib/libSofaDeformable.so.21.12.00); ```; **Expected behavior**; I think It should work, at least. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 18.04""; - Version of SOFA: SOFA_v21.12.00. **Command called**. ```; gcc --version; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3169:265,install,installed,265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3169,1,['install'],['installed']
Deployability,"### Problem. Hi, ; I added a `MeshROI` to an object, and used mouse interaction to move the object into and out of the ROI.; However, the DataWidget (for example the index values) of `MeshROI` does not update.; Also not on clicking refresh.; Closing the widget and opening it again works as expected.; Reading from the component through SofaPython3 also works as expected. ![image](https://user-images.githubusercontent.com/29635054/201968358-d3133819-46af-4af1-9b72-98c63ea37226.png). ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: d152f8374bf6faf65d2e385afa78dbd57f365f6c; - State: Install directory. Cheers,; Paul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3487:202,update,update,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3487,2,"['Install', 'update']","['Install', 'update']"
Deployability,"### Problem. I compiled chainHybrid in the sofa tutorial, but an error occurred.; I try to add Rendering3D in CMakeLists for using Rendering3D in chainHybrid.cpp; BUI THE ERROR DIDN'T GO AWAY!. How to import OglModel in SOFA v23. [Visual Studio 2019 SOFA v23.06 C++17 Windows10]; ```console; [ERROR] [Node(visualNode)] Component 'Visual' of type 'OglModel' failed:; Object type OglModel<> was not created; The object 'OglModel' is not in the factory.; This component has been MOVED from SofaOpenglVisual to Sofa.GL.Component.Rendering3D since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.GL.Component.Rendering3D'/>. [ERROR] [Node(visualNode)] Component 'Visual' of type 'BarycentricMapping' failed:; Object type BarycentricMapping<Vec3d,Vec3d> was not created; The object is in the factory but cannot be created.; Requested template : Vec3d,Vec3d; Used template : Vec3d,Vec3d (default); Reason(s) : Data attribute 'output' does not point to a mechanical state of data type 'Vec3d' and none can be found in the parent node context.; Also tried to create the object with the template 'Vec3d,Rigid3d' but failed for the following reason(s):; 1. Data attribute 'output' does not point to a mechanical state of data type 'Rigid3d' and none can be found in the parent node context.; ; [ERROR] [Node(Visu)] Component 'Mapping Visual' of type 'RigidMapping' failed:; Object type RigidMapping<> was not created; The object is in the factory but cannot be created.; Requested template : None; Used template : None; Also tried to create the object with the template 'Rigid2d,Vec2d' but failed for the following reason(s):; 1. Data attribute 'input' does not point to a mechanical state of data type 'Rigid2d' and none can be found in the parent node context.; Also tried to create the object with the template 'Rigid3d,Vec3d' but failed for the following reason(s):; 1. Data attribute 'output' does not point to a mechanical state of dat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3614:606,update,update,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614,1,['update'],['update']
Deployability,"### Problem. I played around with a pythonized version of the [BeamFEMForceField Example](https://github.com/sofa-framework/sofa/blob/4a5d3322e4155798799fc2c3c68b00ac2f00b154/examples/Components/forcefield/BeamFEMForceField.scn). ```python; node.addObject(; ""CubeTopology"",; nx=num_points,; ny=2,; nz=2,; min=[0, -0.1, -0.1],; max=[length, 0.1, 0.1],; ); node.addObject(""MechanicalObject""); node.addObject(""TriangleCollisionModel""); node.addObject(""BeamLinearMapping"", isMechanical=True); ```. And I observed, that the x-coordinates in the `MechanicalObject` are limited in x, to the absolute value of `nx`.; So for ; ```python; num_points = 100; length = 20; ```; the topology is created correctly (at least the points in the instance look valid), but the `MechanicalObject`'s points in x are in [0, 20], even though the number of points is correct. The same is true for the reverse case; ```python; num_points = 20; length = 100; ```; -> `MechanicalObject`'s points in x are in [0, 100]. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: 22.06; - State: Install directory",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3047:1126,Install,Install,1126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3047,1,['Install'],['Install']
Deployability,"### Problem. Running `runSofa` in `RelWithDebInfo` configuration in VS 2022 loads the scene properly but leads to nullptr access in `HexahedronFEMForceField::getIndexedElements`. Running `.\runSofa -a` in powershell gives the same crash. ![image](https://user-images.githubusercontent.com/43549821/177644004-c4a691f5-c890-4f66-bf17-5881922af648.png). The scene loads fine and only crashes when one of these 2 buttons are pressed. ![image](https://user-images.githubusercontent.com/43549821/177643932-820290b2-8caa-4b64-b171-8bf1fdeff4ef.png). **Steps to reproduce**; Running the command below.; Everything is configured exactly as shown in the windows building tutorial, except I'm using msvc2019 libraries for qt 5.15.2as msvc2022 libraries are not available. **Expected behavior**; Should not crash. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10 build 21390.2025; - Version of SOFA: commit d300cc9af550afbd5c2167470676a5a7d47381a1 (HEAD -> v21.12, tag: v21.12.00, origin/v21.12_beta, origin/v21.12); - State: Build directory. **Command called**. ```txt. PS D:\github-clones\sofa\build\bin\RelWithDebInfo> .\runSofa.exe -a. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.10.0 (tags/v3.10.0:b494f59, Oct 4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]; --- PATH ---; D:\Program Files\OpenSSH;C:\ProgramData\Oracle\Java\javapath;C:\Python310\Scripts\;C:\Python310\;D:\Python27\;D:\Python27\Scripts;D:\Program Files\Oc",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:51,configurat,configuration,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['configurat'],['configuration']
Deployability,"### Problem; Hi,; I discovered a memory leak that seems to be connected to the collision detection pipeline / models. The scene contains 2 nodes with `MechanicalObject` and `PointCollisionModel`.; I repeatedly load and unload the scene, first with no collision models, then one collision model, and then two collision models.; -> each graph has 3 segments. ```python; import Sofa; import Sofa.Core; import Sofa.Simulation; from enum import Enum. class TestCase(Enum):; ONE_MODEL = 0; TWO_MODELS = 1; NONE = 2. class SimulationHandler:; def __init__(self):. self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, TestCase.NONE); Sofa.Simulation.init(self.root_node). def step(self):; Sofa.Simulation.animate(self.root_node, self.root_node.getDt()). def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = Simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:99,pipeline,pipeline,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['pipeline'],['pipeline']
Deployability,"### Problem; Hi,; in some previous version of SOFA, the method `doUpdate` of `MeshROI` was triggered in each simulation step, if the `doUpdate` value was set to true. ; Now, it is just a check inside the method, but the method itself is never called. Should the method be registered to some event, or should it actually be called manually on demand?. https://github.com/sofa-framework/sofa/blob/18149f4407fd78359eead7b64ae23470687c40c4/Sofa/Component/Engine/Select/src/sofa/component/engine/select/MeshROI.inl#L582-L587. **EDIT**: The data inside the component is updated, but it does not show in the GUI. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: d152f8374bf6faf65d2e385afa78dbd57f365f6c; - State: Install directory. Cheers,; Paul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484:564,update,updated,564,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484,2,"['Install', 'update']","['Install', 'updated']"
Deployability,"### Problem; I want to use SofaPython3, and refer to the [page](https://sofapython3.readthedocs.io/en/latest/content/Installation.html) to install. However, I have met some problems: /ERROR] H� Win32 �(nager] Plugin loading failed (D:/SOFA/v23.06.00/bin/SofaPython3.dll): %1; I can't load the .ddl via PluginManager (in the GUI). Please help me...; **Description**; < DESCRIBE YOUR PROBLEM HERE >; ![image](https://github.com/user-attachments/assets/2e24c376-cd2e-4c64-b3f1-a83b2709132e); The system path is shown below:; ![image](https://github.com/user-attachments/assets/54a24f35-3752-47cd-8ae1-8c7c4b5f9997). ---------------------------------------------. ### Environment. **Context**. - System: ""Windows 11""; - CPU: 13th Gen Intel(R) Core(TM) i7-13700; - Version of SOFA: ""v23.06.00 binaries""; - Pybind11 2.9.1; - Python 3.8.19. **Command called**. ```; runSofa -l SofaPython3 . ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4914:117,Install,Installation,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4914,2,"['Install', 'install']","['Installation', 'install']"
Deployability,"### Problem; I want to use SofaPython3, and refer to the [page](https://sofapython3.readthedocs.io/en/latest/content/Installation.html) to install. However, I have met some problems:; **Description**; < DESCRIBE YOUR PROBLEM HERE >. **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. ---------------------------------------------. ### Environment. **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; - Version of SOFA: < INFOS ABOUT THE BRANCH OR BINARIES - e.g: ""master branch at commit 70bb123"", ""v21.06.00 binaries"", ... >; - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4913:117,Install,Installation,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4913,4,"['INSTALL', 'Install', 'install']","['INSTALL', 'Install', 'Installation', 'install']"
Deployability,"### Problem; If points are removed through a `TopologyModifier`, the changes are also propagated to the `reset_position` data in `MechanicalObject`.; Example:; 1. the initial size of the `MechanicalObject` is 20; 2. 2 points are removed e.g. through mouse interaction or a `CarvingManager`.; 3. `reset_position` also decreases to size 18; 4. `simulation.reset()` -> `reset_position` still of size 18 -> the missing points are not added to the `MechanicalObject` to gain its initial size of 20. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: commit 63214f83051bc8cfe82e49198ac9f711d19fd302; - State: Install directory",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3310:672,Install,Install,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3310,1,['Install'],['Install']
Deployability,"### Problem; If there is an `OglShadowShader`, the texture of an `OglModel` is not rendered.; Bonus problem: The direction of a `DirectionalLight` is also flipped. If I take the [OglShadowShader_Directional example](https://github.com/sofa-framework/sofa/blob/master/examples/Components/visualmodel/OglShadowShader_Directional.scn); and set a texture to the OglModel (`<OglModel template=""Vec3d"" name=""VisualModel"" src=""@meshLoader_0"" texturename=""/home/paul/repos/sofa/src/share/textures/seaMonster.png""/>`) shadows are rendered, but the texture is not there. ![image](https://user-images.githubusercontent.com/29635054/182649185-47ef03d8-9f5b-428f-b471-38cdde4cc613.png). ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: commit f1d96c30de75c586d05ced9ca304fc53eababc7d from Wed Jul 27 13:43:50 2022 +0200; - State: ""Install directory"". **Command called**. ```txt. runSofa examples/Components/visualmodel/OglShadowShader_Directional.scn; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3194:889,Install,Install,889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3194,1,['Install'],['Install']
Deployability,"### Problem; Issue initially reported by @veruozzi here: https://github.com/mimesis-inria/caribou/discussions/139. **Description**; It is not possible to create a CMake project that depends on the latest SOFA release on MacOS. The following error happen:; ```cmake; CMake Error at /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake:91 (message):; The imported target ""runSofa"" references the file. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/bin/runSofa-22.06.00"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake"". but not all the files it references. Call Stack (most recent call first):; /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiConfig.cmake:55 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/Bindings.SofaGuiConfig.cmake:36 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/BindingsConfig.cmake:34 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); CMakeLists.txt:5 (find_package); ```. **Steps to reproduce**; 1. Unzip the latest SOFA release for MacOS inside `$SOFA_ROOT`; 2. Create an empty c++ project with the following CMakeLists.txt:; ```cmake; cmake_minimum_required(VERSION 3.20); project(test). find_package(SofaFramework); find_package(SofaPython3). ```; 3. Call cmake using `cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT .`. **Expected beha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485:209,release,release,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485,3,"['install', 'release']","['install', 'installation', 'release']"
Deployability,"### Problem; When passing an `.obj` file and texture `.png` to `OglModel`, they are correctly loaded and mapped. ```; visual_node.addObject(; ""OglModel"",; filename=""mesh.obj"",; texturename=""texture.png"",; ); ```; ![image](https://user-images.githubusercontent.com/29635054/172361782-e1d53384-a84e-4d83-bed1-8fe5eb5d3aa5.png). For the MeshOBJLoader the UV coordinates are ignored. ```. loader = visual_node.addObject(; ""MeshOBJLoader"",; filename=""mesh.obj"",; handleSeams=True,; ). visual_node.addObject(; ""OglModel"",; texcoords=loader.texcoords,; texturename=""texture.png"",; ); ```. ![image](https://user-images.githubusercontent.com/29635054/172362364-2533e6fc-7226-452e-88f0-a6bdcf93dbf7.png). ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: master branch at commit 06899d457fb46db82313fe3f136664d7b22e7bc9; - State: Install directory",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3012:890,Install,Install,890,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3012,1,['Install'],['Install']
Deployability,"### Problem; With the same exact parameters, `FastTetrahedralCorotationalForceField` shows unstable behavior, compared to `TetrahedralCorotationalFEMForceField`. **Expected behavior**; I would expect both components to show the same behavior, or at least to be stable. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 23.10; - Version of SOFA: v23.12; - State: Release. `TetrahedralCorotationalFEMForceField`; <video src=""https://github.com/sofa-framework/sofa/assets/29635054/11a2b178-fefc-4f42-8db7-34e24b6aa732"" width=""200"" height=""auto"">. `FastTetrahedralCorotationalForceField`; <video src=""https://github.com/sofa-framework/sofa/assets/29635054/48ea4a38-ac0a-47a8-b562-06c28c9645d3"" width=""200"" height=""auto"">. Object code: https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/ligating_loop/sofa_objects/cavity.py#L197. Cheers,; Paul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4594:406,Release,Release,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4594,1,['Release'],['Release']
Deployability,"### Problem; running failing due to loading of plugins ; **Description**; Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Can also track the conversation in original repo : https://github.com/ScheiklP/sofa_env/issues/31; **Steps to reproduce**; Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. **Expected behavior**. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: v23.06.00 binaries"". **Command called**. ```txt; python3 /home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:178,Configurat,ConfigurationSetting,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['Configurat'],['ConfigurationSetting']
Deployability,"### runSofa crash . **Description**; runSofa crash when a texture file is not found by OglModel. **Steps to reproduce**; put a wrong filename or path into a textureName:; `<OglModel name=""VisualBody"" src=""@loader"" texturename=""../Material/textures/colorTest.jpg"" />`. **Expected behavior**; Error message and do not use the texture but normal default material rendering. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: master; - State: build version. ### Logs. ```; [ERROR] [OglModel(VisualBody)] Texture ""C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg"" not found; [ERROR] [Image] File C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg not found. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::dump; sofa::helper::BackTrace::sig; seh_filter_exe; seh_filter_exe; _C_specific_handler; _chkstk; RtlRaiseException; KiUserExceptionDispatcher; sofa::gl::Texture::update; sofa::gl::Texture::init; sofa::gl::component::rendering3d::OglModel::initVisual; sofa::component::visual::VisualModelImpl::drawVisual; sofa::simulation::VisualDrawVisitor::processVisualModel; sofa::simulation::VisualVisitor::processNodeTopDown; sofa::simulation::VisualDrawVisitor::processNodeTopDown; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::doExecuteVisitor; sofa::simulation::DefaultVisualManagerLoop::drawStep; sofa::simulation::Simulation::draw; sofa::gui::qt::viewer::qgl::QtGLViewer::DisplayOBJs; sofa::gui::qt::viewer::qgl::QtGLViewer::drawScene; sofa::gui::qt::viewer::qgl::QtGLViewer::draw. ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3567:1042,update,update,1042,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3567,1,['update'],['update']
Deployability,"#1515 will be imminently merged, this will require to update this one",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1551#issuecomment-712369166:54,update,update,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1551#issuecomment-712369166,1,['update'],['update']
Deployability,"#1527; Based on ; - #2571 . Creating the module **Sofa.Component.IO**, where all the components linked to loading or exporting a mesh(.Mesh)~~/stuff(.Misc)~~ are contained.; Read/Writing stuff to repeat identical simulations (ReadState/Topology,etc) has been moved to a new category, namely **Sofa.Component.Playback**; Deprecates **SofaLoader**, **SofaGeneralLoader** and **SofaExporter**. Good module to test the compatibility of installation process, as the plugin Python3 has a dependency on the former SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2582:432,install,installation,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2582,1,['install'],['installation']
Deployability,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2197:168,release,release,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197,1,['release'],['release']
Deployability,"& navigate in the inclusion graph.: ; https://htmlpreview.github.io/?https://raw.githubusercontent.com/SofaDefrost/sofa/reduceInclude2/include_master_2017_12_18.html. It was suggested by @guparan that we could aggregate the files around their cmake ""components"" so we could identify easily the ""strengh"" (the amount of .h) between the cmake package. Then from this graph views, actions can be to guide the refactoring. ; Eg: ; 1) remove the includes that are not mandatory to make the graph more sparse (there is very easy cases that can be done during coding sprint). ; 2) when there is cycle in the graph, serious refactoring may be needed because this indicate it is not possible to properly make package out of it (this happens in Helper & DefaultType). ; 3) for the elements in the graph that are included only few time this means it is very easy to put them into ""external"" plugins without breaking a lot of code. . I practiced 1) in https://github.com/SofaDefrost/sofa/tree/reduceInclude2; I practiced 2) in https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel; I practiced 3) in several of our pluginization's PR. What I found very hard is to make that in coordinated way and in a smooth enough way not to kill anyone's projects. On the existing code base:; - make PR that unify the way to declare namespace/include guards so refactoring with string replacement instead of manually patching the code base would be faciliated.; - make PR to reduce the include's graph pressure (this will ease to cut the code into packages); - make more PR to deprecates components ; - put as real plugin the leaves of the dependency graph (starting with the leaves is easier because it indicate that only a small part of our code base needs to be updated). ; - find an agreement on the resulting structure.; - find an agreement on the amount of change and understand how this will impact third party code and code history. ; - find an agreement on the process to actually make the changes. ...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-372626690:1510,patch,patching,1510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-372626690,2,"['patch', 'update']","['patching', 'updated']"
Deployability,"&nbsp; - is DEPRECATED (so still usable) since `deprecateDate`; &nbsp;&nbsp;&nbsp; - will be removed on `removeDate`; and gives the toFixMsg instructions to fix the deprecation warning.; ; `SOFA_ATTRIBUTE_DISABLED(deprecateDate, disableDate, toFixMsg)`; To be used jointly with `= delete` to trigger an error. It is a flavored `[[deprecated]]` interface.; Warns that something ; &nbsp;&nbsp;&nbsp; - is DISABLED (so not usable anymore) since `disabledDate`; &nbsp;&nbsp;&nbsp; - was firstly deprecated on `deprecateDate`; and gives the toFixMsg instructions to fix the compilation error. ## How to use them. Create a new deprecation macro specifying the deprecation topic you are tackling.; This way, you won't have dates everywhere in your code. ## Example. ### Deprecate. I want to rename something that will break my API. ; To ease the transition for my users, I will propose a deprecation period with a fine message by using a deprecation macro.; Latest release is v20.06, next release (currently under development) is v20.12, after that will come the v21.06. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DEPRECATED( \; ""v20.12 (PR#12345)"", ""v21.06"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod();; ```. Anyone using myDeprecatedMethod will get this **warning**: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is still usable but has been DEPRECATED since v20.12 (PR#12345). You have until v21.06 to fix your code. XXX must be renamed into YYY.; ```. ### Disable. Now forward in time ...; Latest release is v20.12, next release (currently under development) is v21.06, after that will come the v21.12.; It is time to stop the deprecation period. To provide a clear message to my users, I will not just remove my deprecated method but I will disable it with `= delete` and use a deprecation macro. In my config.h.in; ```cpp; #define SOFA_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249:1287,release,release,1287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249,1,['release'],['release']
Deployability,"'--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaMiscForceField.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/STLIB.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SoftRobots.dll; [WARNING] [UniformMass(uniformMass1)] Unused Attribute: ""massDensity"" with value: ""0.1""; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - MeshOBJLoader: 6 created with alias ""MeshObjLoader""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. **Content of build_dir/CMakeCache.txt**. Installed with the binary, so CMake wasn't used. ---------------------------------------------. PS: Please do inform me if any other information is required.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:2810,Install,Installed,2810,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,1,['Install'],['Installed']
Deployability,"('OglModel', color=[1, 0, 0, 0.3], src='@meshLoader', name='Visual', rotation=rotation). # Add a sphere.; newSphere = root.addChild('FixedSphere'); newSphere.addObject('EulerImplicitSolver'); newSphere.addObject('CGLinearSolver', threshold='1e-09', tolerance='1e-09', iterations='200'); MO = newSphere.addObject('MechanicalObject', showObject=True, position=[0, 200, 200, 0, 0, 0, 0], name='Particle', template='Rigid3d'); Mass = newSphere.addObject('UniformMass', totalMass=1); Force = newSphere.addObject('ConstantForceField', name=""CFF"", totalForce=[0, 0, 0, 0, 0, 0] ); Sphere = newSphere.addObject('SphereCollisionModel', name=""SCM"", radius=30.0 ); newSphere.addObject('FixedConstraint', name='FixedConstraint', indices=0); newSphere.addObject('OglModel', color=[1, 0, 0, 0.3], name='Visual'); ; ; ; # visualizing; source = [-600,0,300]; lookAt = source+np.array([1,0,0]); orientation = [ 0, -0.70710678, 0, 0.70710678]; root.addObject(""LightManager""); root.addObject(""DirectionalLight"", direction=[-1,0,0]); root.addObject('InteractiveCamera', name='camera', position=source,; lookAt=lookAt, orientation=orientation); ; if __name__ == ""__main__"":; # Read real information from real world.; pass. # One simulation for one root. Maybe.; # Create scene and initialize simulation.; root = Sofa.Core.Node(""root""); createScene(root); Sofa.Simulation.init(root). # Initialize pygame.; init_display(root); ; try:; for i in range(10000):; root.InstrumentCombined.m_ircontroller.findData('xtip').value =\; root.InstrumentCombined.m_ircontroller.findData('xtip').value \; + np.array([2,110,2], dtype=float); ; # Calculate simulator one step.; Sofa.Simulation.animate(root, root.dt.value); Sofa.Simulation.updateVisual(root); time.sleep(root.dt.value); ; # Visualize in pygame.; simple_render(root); ; ; # Save image of pygame.; image = GetFrame(); SaveImage(image, f""screen.jpeg""); ; ; print(i); ; ; except KeyboardInterrupt:; pass; ; ```. How can I ensure interaction between the catheter and the sphere?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4636:20202,update,updateVisual,20202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636,1,['update'],['updateVisual']
Deployability,(WARNING) When merged this PR will requires to install ninja on the build VM and force a full-build of all the branches (to force the regeneration of the build directory).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/154#issuecomment-275648244:47,install,install,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/154#issuecomment-275648244,1,['install'],['install']
Deployability,(brutal) Rename TModels into CollisionModels and update all scenes:. - TPointModel becomes PointCollisionModel; - TLineModel becomes LineCollisionModel; - TTriangleModel becomes TriangleCollisionModel; - TSphereModel becomes SphereCollisionModel. and all examples are updated. Let's see the CI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1034:49,update,update,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1034,2,['update'],"['update', 'updated']"
Deployability,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4274:623,release,release,623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274,2,['release'],"['release', 'released']"
Deployability,"(should) Fix issue #2066. The GraphListener for the visual Graph is frozen when runSOFA is started (and never unfrozen); The temp fix to swap tabs was unfreezing it actually.; But I think letting it unfrozen is also a not-so-good idea as the listener will update a lot (how many? I dont know) the graph for nothing. Now this PR unfreeze/freeze the visual graph at each timestep of the simulation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458:256,update,update,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458,1,['update'],['update']
Deployability,) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 39.40 89.65 53.81 3.72 53810.7 100 TOTAL; 1 0 1 39.40 89.63 53.81 3.72 53.81 99.99 .Simulation::animate; 2 0.01 1 0 0.02 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.02 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.07 0 0 0 0 ..collision; 2 0.02 1 0 0 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.06 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.02 0 0 0 0.01 ..accumulateMatrixDeriv; 2 0.04 1 39.17 89.35 53.58 3.72 53.58 99.57 ..solve; 3 0.04 1 39.17 89.34 53.57 3.72 53.57 99.56 ...Mechanical; 4 0.07 1 2.11 3.55 2.36 0.14 2.36 4.38 ....ComputeForce; 4 2.42 1 1.14 3.35 1.30 0.18 1.30 2.41 ....ComputeRHTerm; 4 3.72 1 33.78 68.54 35.78 1.50 35.78 66.50 ....MBKBuild; 5 3.73 1 33.77 68.51 35.78 1.50 35.78 66.48 .....CG-setSystemMBKMatrix; 6 3.73 1 0.03 0.14 0.04 0.01 0.04 0.07 ......getContributors; 6 3.77 1 0.02 0.21 0.02 0.01 0.02 0.04 ......buildMappingGraph; 6 3.79 1 0.26 1.60 0.70 0.10 0.70 1.29 ......InitializeSystem; 7 3.79 1 0.09 1.18 0.36 0.06 0.36 0.67 .......resizeSystem; 7 4.16 1 0.01 0.69 0.30 0.04 0.30 0.56 .......clearSystem; 7 4.46 1 0.02 0.17 0.02 0.01 0.02 0.05 .......initializeLocalMatrices; 6 4.49 1 33.12 68.12 35.01 1.48 35.01 65.06 ......AssembleSystem; 7 4.49 1 33.09 47.99 34.95 1.13 34.95 64.95 .......buildMatrices; 8 4.49 1 32.71 47.75 34.52 1.10 34.52 64.16 ........buildStiffness; 8 39.02 1 0.23 1.13 0.41 0.08 0.41 0.77 ........buildMass; 8 39.43 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 39.44 1 0 0.02 0 0 0 0 ........buildGeometricStiffness; 7 39.44 1 0 0 0 0 0 0 .......projectMappedMatrices; 7 39.44 1 0.02 20.12 0.05 0.63 0.05 0.09 .......applyProjectiveConstraint; 4 39.51 1 0.85 21.84 14.06 3.56 14.06 26.13 ....MBKSolve; 5 39.83 1 0.51 21.43 13.67 3.56 13.67 25.41 .....CG-Solve; 4 53.57 1 0.02 0.07 0.02 0 0.02 0.05 ....UpdateVAndX; ```. Thanks for having tried!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:4460,Update,UpdateVAndX,4460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532,1,['Update'],['UpdateVAndX']
Deployability,"**Update**; It was working before on Windows because we already have a user defined `FindEigen3.cmake` in sofa/cmake (on which I did some modifications not so long ago :facepalm:, sometime I have the memory of a red fish). The problem I had was probably because this `FindEigen3.cmake` isn't installed alongside SOFA, so if an external plugin links against SOFA, it will hit the `find_package(Eigen3 REQUIRED)` inside our ***Config.cmake and will fail to find it. @guparan Do you think we should install the `FindEigen3.cmake` (like CGAL is doing)?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-628708251:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-628708251,3,"['Update', 'install']","['Update', 'install', 'installed']"
Deployability,**WARNING**: I just saw that your PR is against a release (v17.06). This cannot be merged directly in v17.06 as some extra steps need to be done during a backport. Please re-create it against **master** and I will flag it to be backported in v17.06.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/444#issuecomment-334514286:50,release,release,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/444#issuecomment-334514286,1,['release'],['release']
Deployability,**WARNING**: I rebased your branch. Your local copy will need an update.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/220#issuecomment-289719027:65,update,update,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/220#issuecomment-289719027,1,['update'],['update']
Deployability,"**[Only Windows/MSVC]**. I cannot explain at all 👺. On MSVC2022(17.7.4) and Release mode, a crash happens with `examples/Demos/fallingBeamLagrangianCollision.scn` when a collision occurs. It crashes when trying to insert values in the triplets vector (suspecting a memory error somewhere). Weirdly, it does not crash in RelWithDebug mode 🤐. ; *And* it does not crash as well on MSVC2019, as the CI (jenkins) uses it in release mode while testing the scene. At the code generation time (compiler?optimizer?) it does throw a warning like:; `1>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector(398): warning C4789: buffer 'triplets' of size 16 bytes will be overrun; 8 bytes will be written starting at offset 16`; only in Release mode. --. Two fixes possible (found by trial-and-error 🤡); - using std::vector instead of sofa::type::vector; - using a struct instead of the tuple; ; I used the std::vector one as it was the simplest. I suspect there is a bug(???)/issue with the optimizer/vectorizer of MSVC , or the allocator but i cannot prove anything 🙊. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4180:76,Release,Release,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4180,3,"['Release', 'release']","['Release', 'release']"
Deployability,"**[ci-depends-on]** detected during [build #59](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1961/59/). . To unlock the merge button, you must; - **Edit SofaPython3/ExternalProjectConfig.cmake.in** with; GIT_REPOSITORY https://github.com/guparan/SofaPython3; GIT_TAG origin/updateDoc",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-833694387:287,update,updateDoc,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-833694387,1,['update'],['updateDoc']
Deployability,"**[generate-binaries]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [windows_vs2017_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2740#issuecomment-1059394556:289,release,release,289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2740#issuecomment-1059394556,4,['release'],['release']
Deployability,"**[generate-binaries]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115120821:286,release,release,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115120821,3,['release'],['release']
Deployability,"**[generate-binaries]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [windows_vs2017_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115875591:286,release,release,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115875591,4,['release'],['release']
Deployability,"**[generate-binaries]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115104205:286,release,release,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115104205,3,['release'],['release']
Deployability,"**[generate-binaries]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115909914:286,release,release,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115909914,3,['release'],['release']
Deployability,"**https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-850/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/2/** warnings4Result/package.-377079774/. \+ . see BUILD_URL/**artifact/parent_dir/build/scene-tests/examples/Components/constraint/FixedLMConstraint.scn/output.txt**. =. https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-850/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/2//artifact/parent_dir/build/scene-tests/examples/Components/forcefield/JointSpringForceField.scn/output.txt",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/850#issuecomment-446541019:116,release,release,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/850#issuecomment-446541019,2,['release'],['release']
Deployability,+1. . We probably simply need to install the autodump trick somewhere in Sofa_test.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/149#issuecomment-276515093:33,install,install,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/149#issuecomment-276515093,1,['install'],['install']
Deployability,", ""mo""}, {""src"", ""@grid""}}).get(); );; createObject(root, ""TetrahedronSetTopologyContainer"", {{""name"", ""topology""}});; createObject(root, ""TetrahedronSetTopologyModifier"");; createObject(root, ""TetrahedronSetGeometryAlgorithms"");; createObject(root, ""Hexa2TetraTopologicalMapping"", {{""input"", ""@grid""}, {""output"", ""@topology""}});; auto sofa_mass = dynamic_cast<sofa::component::mass::MeshMatrixMass<sofa::defaulttype::Vec3Types, sofa::defaulttype::Vec3Types::Real> *> (; createObject(root, ""MeshMatrixMass"", {{""name"", ""sofa_mass""}, {""topology"", ""@topology""}, {""massDensity"", ""2""}, {""lumping"", ""false""}}).get(); );; auto sofa_mass_diagonal = dynamic_cast<sofa::component::mass::MeshMatrixMass<sofa::defaulttype::Vec3Types, sofa::defaulttype::Vec3Types::Real> *> (; createObject(root, ""MeshMatrixMass"", {{""name"", ""sofa_mass_diagonal""}, {""topology"", ""@topology""}, {""massDensity"", ""2""}, {""lumping"", ""true""}}).get(); ); ; getSimulation()->init(root.get());. // Get residual vectors; DataVecDeriv d_f (VecDeriv(mo->getSize(), {0, 0, 0}));; DataVecDeriv d_f_dia (VecDeriv(mo->getSize(), {0, 0, 0}));. sofa_mass->addForce(&mechanical_parameters, d_f_sofa, mo->x, mo->v);; sofa_mass_diagonal->addForce(&mechanical_parameters, d_f_sofa_dia, mo->x, mo->v);. // Map residual vectors with Eigen to facilitate norm computations; Eigen::Map<const Eigen::Matrix<Real, Eigen::Dynamic, 3, Eigen::RowMajor>> f ((d_f.getValue().data()->data()), mo->getSize(), 3);; Eigen::Map<const Eigen::Matrix<Real, Eigen::Dynamic, 3, Eigen::RowMajor>> f_dia ((d_f_dia.getValue().data()->data()), mo->getSize(), 3);. // Compare the norms; EXPECT_DOUBLE_EQ(f.norm(), f_dia.norm());; }; ```. > Maybe the used topology doesn't have edges?. An edge topology should not change anything here. We are integrating the mass density times g over the volumetric domain (tetra). If you are adding edges, then you are integrating a second time the region of an edge (the edge is a part of the tetra's volume). Let me know if something isn't clear.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2301#issuecomment-901856585:2768,integrat,integrating,2768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2301#issuecomment-901856585,2,['integrat'],['integrating']
Deployability,",. I just had a look in the code and the associated paper ([link](https://hal.inria.fr/file/index/docid/394480/filename/NPF05.pdf)). @alxbilger, there are two `computeStress` methods in TriangularFEMForceField, with the following signatures :; ```; void computeStress(type::Vec<3,Real> &stress, Index elementIndex);; ```; and; ```; void computeStress(type::Vec<3,Real> &stress, const MaterialStiffness &K, const type::Vec<3,Real> &strain);; ```; Only the first one seems to use the same pattern as in `computeForce` (with the call to `computeStrainDisplacement` conditioned by `_anisotropicMaterial`), in case of small deformation, which is - as you pointed out - incoherent with what is in `computeForce`.; However this `computeStress` method with this signature is apparently used only in ; ```; void computeStressAlongDirection(Real &stress_along_dir, Index elementIndex, const Coord &direction);; ```; which itself is used only in both `computeStressAcrossDirection` methods, and (finally) these are apparently not called anywhere.; So, _bottomline_: even though the code in `computeStress` is incoherent with the code in `computeForce`, it's actually not used and - I guess - should be cleaned rather than made coherent. Regarding the initial issue, what I understand from the paper is that the strain-displacement matrix **should be updated at each time step** in case of large deformations. It seems to be clearly stated in the introduction, and demonstrated later in the text (section 2.3). I have a doubt if this is necessary in case of small displacement (for me the paper focuses on large deformation), but even in this case, the current implementation is not coherent (the update should be made in case of large displacement and could be saved in case of small displacement).; I think it's worth highlighting that it was actually the case at first, but it seems to have been changed in this [commit](https://github.com/sofa-framework/sofa/commit/b7d68ef394f703957e7a00037f88d7abeed82d24).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2706#issuecomment-1056847653:1344,update,updated,1344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2706#issuecomment-1056847653,2,['update'],"['update', 'updated']"
Deployability,",. May was quite quiet for our beloved NG project.; Don't worry, I still have some news for you :wink:. ## Discussions. Pluginization works are possible but they have to be done in-place (not moving the files). This will permit to simplify the dependencies between SOFA modules. . About the NG branch, to avoid big divergence, we propose to merge it with master as soon as some big step is done. The next big step is SofaFramework coverage. ## Bootstrapping scripts. Previously named SPM, the [bootstrapping scripts](https://github.com/guparan/sofa2ng) are now able to handle test folders. ## Process. Here is the process to cover one module:; 1. Create/update a recipe based on an existing one.; 2. Run the bootstrapping scripts with the recipe.; 3. Inspect the output; 4. If something is wrong or missing, edit the bootstrapping scripts and *goto 1*; 5. Do specific changes by hand like namespace aliases; 6. Create a patch of all changes made by hand; 7. Open a pull-request providing the recipe and the patch (previously pushed to sofa2ng). This process will be rewritten in Sofa.Helper.Bvh pull-request. ## Sofa.Component.Utils. The first NG pull-request has been merged to the NG branch. There is still some updates to do though, because the bootstrapping scripts changed. ## Sofa.Helper.Bvh. The recipe has been updated. ; This work will be the base of further contributions. I will detail all the bootstrapping + patching process in the pull-request. ## Next steps; - Pluginize without moving files: use plugins mechanism to work on modules dependencies ; Start with the less dependent ones and progress towards SOFA core.; Objective: simplify dependencies between modules.; - Validate Damien's architecture proposal for SofaFramework: https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel/Sofa; Particularly about Sofa.Helper.Types; - Create Sofa.Helper.Bvh pull-request; Will give a clear example and all the process to refactor parts of SofaFramework; - Progress within Sofa.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223:1035,patch,patch,1035,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223,1,['patch'],['patch']
Deployability,"- **Rename** compute2PointsBarycoefs -> computeEdgeBarycentricCoordinates; - **Rename** computeRest2PointsBarycoefs -> computeEdgeBarycentricCoordinates with parameter useRestPosition to set at true; - **Add** deprecation mechanism and backward compatibility; - **Update** all methods to use sofa::geometry::Edge::getBarycentricCoordinates instead of their own wrong version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4190:264,Update,Update,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4190,1,['Update'],['Update']
Deployability,- Add demo scene done for PR1000; - [share] Update square_2594_triangles mesh to have material and texcoords. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1112:44,Update,Update,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1112,1,['Update'],['Update']
Deployability,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284:29,Update,Update,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284,1,['Update'],['Update']
Deployability,"- Add tests on add/remove edges/vertices using EdgeSetTopologyModifier methods; - Update FakeTopology_Scene to add mechanical Components with TopologyData; - Add test to check TopologyData and TopologyHandler registration; - Some cleaning, factorization and documentation in EdgeSetTopology_test code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3245:82,Update,Update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3245,1,['Update'],['Update']
Deployability,"- Add: Display border of tetrahedra, ; - Update: draw methods to check the number of elements and reduce the number of indent in code.; - Add: handle wireframe for triangles and quads; - Fix: Bad lighting disable without corresponding enable in drawTools. ![simpletesselatedtetratopologicalmapping_00000001](https://user-images.githubusercontent.com/21199245/53704580-155f0300-3e1e-11e9-9e55-edd39145af29.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/952:41,Update,Update,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/952,1,['Update'],['Update']
Deployability,- Add: script event listener; - Add: scene coupling Geomagic and SofaCarving ; - Update carving detection collision to use the existing pipeline instead of relaunching a narrowphase intersection computation. - Add method to remove topological element from PointModel collision.; - Fix sofaCarving tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/787:81,Update,Update,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/787,2,"['Update', 'pipeline']","['Update', 'pipeline']"
Deployability,- BeamAdapter has objects that inherit from ConstraintResolution. ; The constructor now impose to have at least one parameter. You can update your code easily by using the new constructor. ; - The example scene in SofaPython keyboardController does not seems to work anymore. ; - ... Please share what you have seen with others so we can fix everything quickly; . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/683:135,update,update,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/683,1,['update'],['update']
Deployability,"- Changelog update; - CMake fix for Windows Dependency Pack; - CMake fixes for packaging (SofaMacros, GLU target missing); - New script + CMake rules to add MacOS post-install custom steps (for packaging); - CMake fixes for modularized projects (SofaExporter, SofaHaptics, SofaOpenglVisual, SofaPreconditioner, SofaSparseSolver); - CMake clean tests dispatch in build tree, e.g now SofaConstraint_test build files go to `<build-dir>/SofaGeneral/SofaConstraint/SofaConstraint_test`. These changes also permit to generate binaries for all platforms with our CI. Continuous Deployment is not far!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1088:12,update,update,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1088,4,"['Continuous', 'Deploy', 'install', 'update']","['Continuous', 'Deployment', 'install', 'update']"
Deployability,"- Check that device ID is valid before making it current in destruction method.; - Small updates on warning messages. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3698:89,update,updates,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3698,1,['update'],['updates']
Deployability,- Documentation should be updated; - User (scene) API could be simplified/clarified (one broad and one narrow phase component in the scene),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2048:26,update,updated,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2048,1,['update'],['updated']
Deployability,"- Fix CMake to use new headers.; - Update namespace; - Fix some warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3076:35,Update,Update,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3076,1,['Update'],['Update']
Deployability,"- Fix cmake when building on a system with Qt6 and Qt5 are detected in the same time (qt5 is prioritized); - Fix cmake var for QGLViewer (not supported with Qt6); - Fix for Qt6 where its windeployqt utility does not support the parameter ""--no-angle"" anymore (leads to a build error); - Fix for Qt6.2 while doing the cmake configuration (I suppose the latest Qt6.2 did some changes for its cmake packages), ; tested on Windows 11 and Qt6.2 (and VS2022). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2490:323,configurat,configuration,323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2490,1,['configurat'],['configuration']
Deployability,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1761:149,Release,Release,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761,1,['Release'],['Release']
Deployability,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163:381,Update,Update,381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163,1,['Update'],['Update']
Deployability,- QDocBrowser will be build by default if Qt5WebEngine is found.; - Add option in cmake to enable the QDocBrowser (If I did it well) that will set Qt5WebEngine as required to warn user to install it if they want the browser. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1315:188,install,install,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1315,1,['install'],['install']
Deployability,"- Remove all Data and method related to triangle selection on a plan.; - Data: normal, dmin, dmax; - Methods: void selectTrianglesAlongPlane(), bool isPointInPlane(Coord p);; - Merge method selectTrianglesFromString() into initTriangleInformation(); - Add callback for Data pressure and triangleList; - Update the example scene to use a BoxROI instead of plan definition on a big yellow beam 😆 . ![image](https://github.com/sofa-framework/sofa/assets/21199245/d9ecff19-44df-4229-91e2-a2c30b267b81). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4743:303,Update,Update,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4743,1,['Update'],['Update']
Deployability,"- Rename ```TopologyObjectType``` into ```TopologyElementType``` (this enum is used to define the type of upper element contain in the current topology); - Factorize methods and member storing this information into ```BaseMeshTopology::m_upperElementType``` ; - Update ```DiagonalMass``` and ```MeshMatrixMass``` which were using their own enum to store the type of topology. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1593:262,Update,Update,262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1593,1,['Update'],['Update']
Deployability,"- Rename variable ```lastElementIndex``` into ```m_lastElementIndex```; - Add accessor; - Update this counter during add/remove operation. This counter is mandatory when multiple remove events are queued. ; - Init the counter during topologyData connection with its topology buffer. api is converging but this PR might have some side effects... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2359:90,Update,Update,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2359,1,['Update'],['Update']
Deployability,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2299:105,update,updateVisual,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299,1,['update'],['updateVisual']
Deployability,- Tetra2TriangleTopologicalMapping: Fix addTetrahedron case in tetra2TriangleTopologicalMapping for a tricky add + remove border triangles case.; - Update scene tests; - TriangleSetTopologyModifier: Add more check in AddTriangle methods. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/998:148,Update,Update,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/998,1,['Update'],['Update']
Deployability,"- The variables `SOFAGUI_HAVE_SOFAGUIQT` and `SOFAGUI_HAVE_SOFAHEADLESSRECORDER` were not defined whereas they are used in `SofaGui/SofaGuiConfig.cmake.in`.; - Modules in `SofaGui/SofaGuiConfig.cmake.in` have been updated. . I expect it will also fix the SofaPython3 GitHub actions (see for example https://github.com/sofa-framework/SofaPython3/runs/6592539251?check_suite_focus=true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3011:214,update,updated,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3011,1,['update'],['updated']
Deployability,"- Update CarvingManager to use SingleLink instead of string path.; - Clean warnings in scenes; - Clean warnings in tests; - remove reset method; - use componentState value instead of bool m_carvingReady. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3332:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3332,1,['Update'],['Update']
Deployability,"- Update EdgeSetTopologyContainer to use this new version. The old code was not working in several tricky cases.; - Add unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4028:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4028,1,['Update'],['Update']
Deployability,"- Update TopologyData to use rebind for vector_device; - Remove begin/endEdit; - Add extra Data for template specialisation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2569:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2569,1,['Update'],['Update']
Deployability,- Update some demo scenes to have a better physics approach direct solvers.; - Add an example with several deformable cubes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1533:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1533,1,['Update'],['Update']
Deployability,"- Update topology access to use full array; - move computation of min max mean stress value out from `draw `method and move them in `addForce` instead (only if show option is true). Quick test on the classic tissue scene give: ; - Visual model only: 260 fps ; - FEM before: 190 fps; - FEM with this PR: 220 fps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3413:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3413,1,['Update'],['Update']
Deployability,- Update: Set drawColor as Data<RGBAColor> for topology debug drawing.; - Update: triangle and Quad drawing to display them a little smaller to better see the geometry structure.; - Fix: drawing scale indices could be Inf.; - Fix: normal color drawing and check buffer sizes in DrawTool; - Update: replace word colour by color to match openGL spelling in DrawTool. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/877:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/877,3,['Update'],['Update']
Deployability,"- Use std::set instead of std::list in TopologyContainer to store TopologyHandler; - Use bool m_isRegistered to tack info if the topologyHandler is registed inside the TopologyContainer list. Catch return of std::insert to update this bool.; - Factorize method to link topologyHandler using sofa::geometry::ElementType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3271:223,update,update,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271,1,['update'],['update']
Deployability,- Using Sofa (maybe it is only runSofa) in release with some plugins.; - Switching to Debug; - launch runSofa_d. ```; [INFO] [runSofa] Loading automatically plugin list in C:/projects/sofa-build/bin/Debug/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/SofaMiscCollision_d.dll; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/SofaCarving_d.dll; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/Geomagic_d.dll; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/Geomagic.dll): Le module sp▒cifi▒ est introuvable.; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/SofaCarving.dll): Le module sp▒cifi▒ est introuvable.; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/SofaMiscCollision.dll): Le module sp▒cifi▒ est introuvable.; ```. But this doesn't seems to be blocking.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/713:43,release,release,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/713,4,"['Release', 'release']","['Release', 'release']"
Deployability,"- Various cleaning to remove SceneChecker warnings; - Fix some examples which should use `vertexMass ` and not `totalMass ` in `uniformMass ` as the number of particles evolve. ; - Fix SpatialGridPointModel scene which was timing out on CI. There was a problem of init with too many particles created compare to the collision and sphFF distances. ; - Update SPHParticleSink_obstacle.scn to wash the dragon; . **SpatialGridPointModel new behavior** ; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/305fd2a4-c15b-4315-8278-509c3fef6204"" width=""75%"">. And working collisions:; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/8a117063-4714-4e0c-8156-401dcba3fde0"" width=""75%"">. **New version of SPHParticleSink_obstacle**; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/184dad41-bb91-45f1-9d38-b913610aec78"" width=""75%"">. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4149:351,Update,Update,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4149,1,['Update'],['Update']
Deployability,"- [Geometry] Update method signature of intersectionWithEdge to pass barycentric coordinates instead of 3D coord.; - [Topology.Container] Update all method compute2EdgesIntersection to use the generic method in Edge class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194:13,Update,Update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194,2,['Update'],['Update']
Deployability,- [SofaKernel] Update several AdvanceTimer msg and add more steps.; - [SofaKernel] Fix advancedTimer in BruteForceDetection pipeline. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1094:15,Update,Update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1094,2,"['Update', 'pipeline']","['Update', 'pipeline']"
Deployability,"- `TetrahedronFEMForceField` Add getter per tetrahedron for:; - Rotation matrix; - Initial rotation matrix; - Material stiffness matrix; - Strain Displacement; - Local coordinates (in rotated frame); ; - `TetrahedralCorotationalFEMForceField`; - Add warning at init if topology is empty; ; - `FastTetrahedralCorotationalForceField`; - Move Data scope as public; - Set poisson and young modulus as required Data. This PR integrate changes in component needed for tests introduced in #2842. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2845:420,integrat,integrate,420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2845,1,['integrat'],['integrate']
Deployability,"- add CMakeLists.txt for anatomyModelling tutorial example (which was missing); - update anatomyModelling.cpp in order to build the anatomy example (in bin directory); The example compiles and runs fine on linux ubuntu, but I'm not sure that behaviour is as it should be! Please examine it before merging. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/287:82,update,update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/287,1,['update'],['update']
Deployability,- use some size_t instead of int in the topology_test; - Change the update method from the mass to return the bool update as result.; - some small warning fix in other classes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/726:68,update,update,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/726,2,['update'],['update']
Deployability,"-----. ### Environment. **Context**. - System: Ubuntu 22.04.2 LTS; - Version of SOFA: v23.12; - State: Build directory. **Command called**. ```txt. cmake --build sofa/build -j --target install. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/Type",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4622:1606,install,install,1606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622,1,['install'],['install']
Deployability,-----; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3557,install,install,3557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node """,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1609,Release,Release,1609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability,". You have to take the whole picture into consideration, everyone is not using serialization/deserialization as ""pairs"". The actual default serialization format is used in a lot of other software (GUIs, scene processing tools written in python, perl and C++). If you change the behavior of the default serialization mechanism all of them will stop working and required to be updated. This is a very, very, very nasty thing to impose to other users of Sofa. A PR doing has no changes to be accepted. . Actually tests is part of our guard line because they validates the API compatibility and allow us to detect changes that breaks it. The existing tests should be considered as validating the ""the existing"" sofa API. It was normal to have them to fail on your PR because it shows that the PR was breaking the compatibility. . I really like the idea of keeping the old serialization behavior as it is and add the other deserialization as an extra feature. This will make the whole PR transparent for users that don't want to update their code base. It thus it can be merged very quickly. . About the test: ; You are right that it would be better if we had test specific tests to validate the serialization alone.; I personally would like to have tests to validate that getValueString() return ""1 2 3"" and that getValueAsPythonString() return ""[1 2 3]"" . And also as you said having tests to validate against the real values instead of their serialization would be nice. . . About the branches:; The rule is to never work directly on the sofa-framework repository. There is no reason to do so (if you really want to make two PR one in anatoscope and one in sofa ... you need to to that from two branches located in the anatoscope repo). Otherwise this consume a lot of disk space on the CI servers that we have to fix manually. Now fundamentally from my experience in playing with PR and branches I think that making two PR will be very complex for you to handle. Because the PR you issued to anatoscope",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626:1203,update,update,1203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626,1,['update'],['update']
Deployability,.. and [tag v22.06.01](https://github.com/sofa-framework/sofa/releases/tag/v22.06.01) created without binary release,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3518#issuecomment-1336961622:62,release,releases,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3518#issuecomment-1336961622,2,['release'],"['release', 'releases']"
Deployability,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1987:621,patch,patching,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987,1,['patch'],['patching']
Deployability,"... and add VisualParameters as a parameter to their signature. Based on ; - #4822 . Continue on what has been introduced by:; - #3931 . Little difference, this PR does not only do the NVI thing but it adds the visualparameters as input.; This seems consistent (to me) with the fact that init/update visual as supposed to be called when there is a draw context (like drawVisual). ; The nice side effect (and it was the intent at the beginning) is that updatevisual wont be called anymore if the component state is wrong, showVisualModels flag is not set or not enabled. \+ cleanings here and there in the visual/gl components. Unfortunately, breaking ⚠️. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/423]; [ci-depends-on https://github.com/sofa-framework/SofaSphFluid/pull/1]. TEMP: ; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/153]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827:293,update,update,293,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827,2,['update'],"['update', 'updatevisual']"
Deployability,"... because this is not relevant anymore as we compile SReal either with float XOR double.; And ""dual"" templates have been removed some releases ago. Effectively, `both` was equivalent as ` double` , hence the removal. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3436:136,release,releases,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3436,1,['release'],['releases']
Deployability,"... before putting it out on an external repo. - Update file structure; - Refresh cmake; - fix dependencies; - fix bullet dep; - compilation; - full xml examples (seems) to work. I did not really clean the code itself, I dont know if this plugin is viable or not. Some files depends on removed plugins (LMConstraints and Compliant) so it has not been tested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3800:49,Update,Update,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3800,1,['Update'],['Update']
Deployability,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4489:52,install,install,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489,1,['install'],['install']
Deployability,.... with Qt and Win system's dlls. (for each config); Obviously those dlls should in the bin/ directory directly (OR find a way to manage different config for installation but not the point for now). A picture is worth a thousand words:; ![issue1](https://user-images.githubusercontent.com/11028016/134341229-d0223102-7493-475d-bfa6-3977170d7f0f.png). Then in RelWithDebInfo for example:; ![issue2](https://user-images.githubusercontent.com/11028016/134341269-6d662b30-9468-4dbc-8351-1b711276be3d.PNG),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2355:160,install,installation,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2355,1,['install'],['installation']
Deployability,"......getContributors; 6 3.94 1 0.02 0.17 0.02 0.01 0.02 0.03 ......buildMappingGraph; 6 3.96 1 0.25 2.56 0.72 0.17 0.72 0.98 ......InitializeSystem; 7 3.97 1 0.06 1.35 0.36 0.10 0.36 0.50 .......resizeSystem; 7 4.33 1 0.01 1.22 0.32 0.08 0.32 0.44 .......clearSystem; 7 4.65 1 0.02 0.27 0.03 0.01 0.03 0.04 .......initializeLocalMatrices; 6 4.68 1 33.38 71.55 36 2.08 36 49.49 ......AssembleSystem; 7 4.68 1 33.35 49.36 35.94 1.80 35.94 49.41 .......buildMatrices; 8 4.68 1 32.79 49.09 35.44 1.78 35.44 48.72 ........buildStiffness; 8 40.13 1 0.25 1.33 0.49 0.12 0.49 0.67 ........buildMass; 8 40.61 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 40.62 1 0 0.02 0 0 0 0 ........buildGeometricStiffness; 7 40.62 1 0 0.02 0 0 0 0 .......projectMappedMatrices; 7 40.63 1 0.02 22.18 0.05 0.70 0.05 0.07 .......applyProjectiveConstraint; 4 40.69 1 1.38 43.66 31.78 8.31 31.78 43.69 ....MBKSolve; 5 41.19 1 0.92 43.15 31.20 8.30 31.20 42.90 .....CG-Solve; 4 72.48 1 0.02 0.15 0.03 0.01 0.03 0.04 ....UpdateVAndX; ```. ```; ParallelCGLinearSolver template=""ParallelCompressedRowSparseMatrixMat3x3d"". [INFO] [BatchGUI] 1000 iterations done in 53.883 s ( 18.5587 FPS). Steps Duration Statistics (in ms) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 39.40 89.65 53.81 3.72 53810.7 100 TOTAL; 1 0 1 39.40 89.63 53.81 3.72 53.81 99.99 .Simulation::animate; 2 0.01 1 0 0.02 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.02 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.07 0 0 0 0 ..collision; 2 0.02 1 0 0 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.06 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.02 0 0 0 0.01 ..accumulateMatrixDeriv; 2 0.04 1 39.17 89.35 53.58 3.72 53.58 99.57 ..solve; 3 0.04 1 39.17 89.34 53.57 3.72 53.57 99.56 ...Mechanical; 4 0.07 1 2.11 3.55 2.36 0.14 2.36 4.38 ....ComputeForce; 4 2.42 1 1.14 3.35 1.30 0.18 1.30 2.41 ....ComputeRHTerm; 4 3.72 1 33.78",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:2304,Update,UpdateVAndX,2304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532,1,['Update'],['UpdateVAndX']
Deployability,".7/site-packages/openalea.tissuemeca-0.9.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/openalea.deploy-2.1.4-py2.7.egg'; ]; ```; From iPython:; ```; ['', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/bin', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python27.zip', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/plat-darwin', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/plat-mac', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/plat-mac/lib-scriptpackages', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-tk', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-old', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/lib-dynload', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/OpenAlea.Core-1.3.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/OpenAlea.SConsX-2.1.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/cycler-0.10.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/openalea.tissuemeca-0.9.0-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/openalea.deploy-2.1.4-py2.7.egg', ; '/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/python2.7/site-packages/IPython/extensions', ; '/Users/oali/.ipython']; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347201178:3800,deploy,deploy-,3800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347201178,1,['deploy'],['deploy-']
Deployability,.89 100 TOTAL; 1 0 1 2.23 5.31 2.59 0.21 2.59 99.97 .Simulation::animate; 2 0 1 0 0.02 0 0 0 0.04 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0.01 0 0 0 0.05 ..UpdateInternalDataVisitor; 2 0 1 2.21 5.24 2.56 0.21 2.56 99.03 ..AnimateVisitor; 3 0.01 1 2.20 5.24 2.56 0.21 2.56 98.94 ...Mechanical; 4 0.01 1 0.06 0.21 0.07 0.01 0.07 2.60 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.98 ....ComputeRHTerm; 4 0.13 1 0.49 1.58 0.52 0.04 0.52 20.27 ....MBKBuild; 5 0.13 1 0.49 1.56 0.52 0.04 0.52 20.19 .....CG-setSystemMBKMatrix; 4 0.66 1 1.58 4.57 1.90 0.20 1.90 73.45 ....MBKSolve; 5 0.67 1 1.56 4.54 1.88 0.20 1.88 72.80 .....CG-Solve; ```. **CompressedRowSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 4.19299 s ( 238.493 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3.74 8.41 4.16 0.27 4159.02 100 TOTAL; 1 0 1 3.74 8.40 4.16 0.27 4.16 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 3.72 8.36 4.13 0.27 4.13 99.39 ..AnimateVisitor; 3 0.01 1 3.72 8.35 4.13 0.27 4.13 99.33 ...Mechanical; 4 0.01 1 0.06 0.18 0.07 0.01 0.07 1.59 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.21 ....ComputeRHTerm; 4 0.13 1 1.66 5.86 1.72 0.14 1.72 41.42 ....MBKBuild; 5 0.13 1 1.65 5.85 1.72 0.14 1.72 41.36 .....CG-setSystemMBKMatrix; 4 1.85 1 1.87 4.79 2.28 0.23 2.28 54.71 ....MBKSolve; 5 1.86 1 1.85 4.74 2.26 0.23 2.26 54.29 .....CG-Solve; ```. **EigenSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 3.76367 s ( 265.698 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3 8.05 3.73 0.49 3726.98 100 TOTAL; 1 0 1 3 8.05 3.73 0.49 3.73 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 2.98 8 3.70 0.49 3.70 99.29 ..AnimateVisitor; 3 0.01 1 2.98 8 3.70 0.49 3.70 99.22 ...Mechanical; 4 0.01 1 0.06 0.41 0.07 0.01 0.07 1.83 ....ComputeForce; 4 0.08 1 0.05 0.17,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:1708,Update,UpdateInternalDataVisitor,1708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,1,['Update'],['UpdateInternalDataVisitor']
Deployability,".Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10186,Release,Release,10186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,".com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" configuration.; - [SofaImplicitField] FIX tests enabling; - [CMake] CLEAN package.cmake; - [SofaSimulationCore] Handle reload differently in SceneLoader::Listener; Needed to disable scene checks on reload.; - [SofaGraphComponent] Disable scene checks on reload; Needed by live editor (which reloads the scene every time the file is changed).; - [plugins] Remove commented lines in CMakeFiles. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:4455,configurat,configuration,4455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['configurat'],['configuration']
Deployability,.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualCornea'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualBody'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'OglModel'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:2935,Update,UpdateMesh,2935,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['Update'],['UpdateMesh']
Deployability,"/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #15 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandN",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:2304,Release,Release,2304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Release'],['Release']
Deployability,/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1761,Release,Release,1761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6719,Release,Release,6719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7087,install,install,7087,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_co,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4517,install,install,4517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #12 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #13 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #14 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeW",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:2136,Release,Release,2136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Release'],['Release']
Deployability,/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5535,install,install,5535,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManag,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5686,Release,Release,5686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"0). deformable_node.addObject(""PointCollisionModel"", group=0); deformable_node.addObject(""LineCollisionModel"", group=0); deformable_node.addObject(""TriangleCollisionModel"", group=0); deformable_node.addObject(""FastTetrahedralCorotationalForceField"", youngModulus=60, poissonRatio=0.0). deformable_node.addObject(; ""PlaneForceField"",; normal=[0, 0, 1],; d=0.0,; stiffness=3000,; damping=1,; showPlane=False,; showPlaneSize=100,; ). deformable_node.addObject(""UniformMass"", totalMass=0.2); deformable_visual_node = deformable_node.addChild(""visual""); deformable_visual_node.addObject(""OglModel"", color=[1.0, 0.0, 0.0]); deformable_visual_node.addObject(""IdentityMapping""). box = deformable_node.addObject(""BoxROI"", box=(-35, -1, -1) + (35, 1, 5)); deformable_node.addObject(""FixedConstraint"", indices=box.indices.getLinkPath()); ```; </details>. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: master branch at commit 95e9357da1a457a2a158dfc26012b214ac0aa889; - State: ""Install directory"". ### Logs. Output on Segfault:. <details>; <summary>Click to expand!</summary>. ```bash; ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::topology::container::dynamic::PointSetTopologyContainer::setPointTopologyToDirty(); sofa::component::topology::container::dynamic::PointSetTopologyModifier::removePointsWarning(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> >&, ; bool); sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedraProcess(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned; int> > const&, bool); sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedra(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> >; const&, bool); sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromTriangleModel(sofa::com",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:5552,Install,Install,5552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['Install'],['Install']
Deployability,"0, 0.0, 0.0, 1.0]); cutting_sphere_node.addObject(""UniformMass"", totalMass=0.001); cutting_sphere_node.addObject(""SphereCollisionModel"", radius=1.0, group=1, tags=""CarvingTool""). elif test_cutting == ""edges"":; ######################; # Cuttable EdgeSet Object; ######################; edge_node = scene_node.addChild(""edges""). edge_node.addObject(""CGLinearSolver""); edge_node.addObject(""EulerImplicitSolver""). positions = [[x, 1.0, 1.0] for x in range(15, 25)]; edges = [[x, x + 1] for x in range(len(positions) - 1)]; edge_node.addObject(""EdgeSetTopologyContainer"", position=positions, edges=edges); edge_node.addObject(""EdgeSetTopologyModifier""). edge_node.addObject(""MechanicalObject"", showObject=True, showObjectScale=2.0); edge_node.addObject(""UniformMass"", totalMass=0.001); springs = [[first, second, 100, 0, 0] for first, second in edges]; edge_node.addObject(""StiffSpringForceField"", spring=springs); edge_node.addObject(""FixedConstraint"", indices=[0, len(positions) - 1]); edge_node.addObject(""LineCollisionModel"", group=0, tags=""CarvingSurface""). cutting_sphere_node_2 = scene_node.addChild(""cutting_sphere_2""); cutting_sphere_node_2.addObject(""CGLinearSolver""); cutting_sphere_node_2.addObject(""EulerImplicitSolver""); cutting_sphere_node_2.addObject(""MechanicalObject"", template=""Rigid3d"", position=[20.0, 5.0, 1.0, 0.0, 0.0, 0.0, 1.0]); cutting_sphere_node_2.addObject(""UniformMass"", totalMass=0.001); cutting_sphere_node_2.addObject(""SphereCollisionModel"", radius=1.0, group=1, tags=""CarvingTool""). root_node.addObject(""CarvingManager"", active=True, carvingDistance=1.0); ```; </details>. I would be happy to implement the bug fixes and missing functions myself, but I would need some help on where to do what. :D ; Maybe @epernod and @hugtalbot could help me there? :) . ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: master branch at commit 95e9357da1a457a2a158dfc26012b214ac0aa889; - State: ""Install directory""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3201:6528,Install,Install,6528,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3201,1,['Install'],['Install']
Deployability,"0, ymin=0, ymax=0, zmax=1, zmin=1,; p0=[0,0,0]); CatheterMechanics.addObject('MechanicalObject', showIndices=False, name='DOFs', template='Rigid3d', ry=-90); CatheterMechanics.addObject('WireBeamInterpolation', name='InterpolCatheter', WireRestShape='@../EdgeTopology/catheterRestShape',radius='1',printLog='0'); CatheterMechanics.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',massDensity=0.00000102, interpolation='@InterpolCatheter'); CatheterMechanics.addObject('InterventionalRadiologyController', name='DeployController', template='Rigid3d', instruments='InterpolCatheter',; startingPos=[0, 0, 0, 0, 0, 0, 1], xtip=[0, 0, 0], printLog=True,; rotationInstrument=[0, 0, 0], step=5., speed=5.,; listening=True, controlledInstrument=0); CatheterMechanics.addObject('LinearSolverConstraintCorrection',wire_optimization='true', printLog=False); CatheterMechanics.addObject('FixedConstraint', indices=0, name='FixedConstraint'); CatheterMechanics.addObject('RestShapeSpringsForceField', points='@DeployController.indexFirstNode', angularStiffness=1e8, stiffness=1e8). VisuCatheter = rootNode.addChild('VisuCatheter'); VisuCatheter.activated = True; VisuCatheter.addObject('MechanicalObject', name='Quads'); VisuCatheter.addObject('QuadSetTopologyContainer', name='ContainerGuide'); VisuCatheter.addObject('QuadSetTopologyModifier', name='Modifier'); VisuCatheter.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo', template='Vec3d'); VisuCatheter.addObject('Edge2QuadTopologicalMapping', radius='1', listening='true',; input='@../../topoLines_guide/meshLinesGuide',; nbPointsOnEachCircle='10', flipNormals='true', output='@ContainerGuide'); VisuCatheter.addObject('AdaptiveBeamMapping', interpolation='@../InterpolGuide',; name='visuMapGuide', output='@Quads', isMechanical=False,; input='@../DOFs', useCurvAbs=True, printLog=False). # Ogl model; VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.addObject('OglModel', color=[0.2, 0.2, 0.8], quads='@../ContainerCatheter.qua",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463:3066,Deploy,DeployController,3066,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463,1,['Deploy'],['DeployController']
Deployability,"047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:1187,pipeline,pipeline,1187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,1,['pipeline'],['pipeline']
Deployability,"0; poissonRatioFingers = 0.3; fingersMass = 0.04; cavitiesInitialValue = 0.0001. # Parameters for each Fingers; fingersParameters = [; {; 'name': 'Finger1',; 'rotation': [0.0, 0.0, -270.0],; 'translation': [100.0, heightInitial, 0.0],; 'ROIBox': [100, heightInitial - 10, -20, 70, heightInitial, 20],; },; {; 'name': 'Finger2',; 'rotation': [360 - angle1 * 180 / math.pi, 0.0, 90.0],; 'translation': [0, heightInitial, radius * math.cos(angle1 - math.pi / 2)],; 'ROIBox': [100, heightInitial - 10, -20, 70, heightInitial, 20],; },; {; 'name': 'Finger3',; 'rotation': [360 - angle2 * 180 / math.pi, 0.0, 90.0],; 'translation': [0.0, heightInitial, radius * math.cos(angle2 - math.pi / 2)],; 'ROIBox': [100, heightInitial - 10, -20, 70, heightInitial, 20],; } ; ]; `. ---------------------------------------------. ### Environment. **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; Command: lsb_release -a; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.4 LTS; Release:	22.04; Codename:	jammy. - Version of SOFA: v24.06.00 built with binaries; - State: Build Directory; - ; **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >; ![Screenshot from 2024-10-12 18-06-10](https://github.com/user-attachments/assets/47a941af-2286-435e-a832-94ccab211570). ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5060:7382,Release,Release,7382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5060,1,['Release'],['Release']
Deployability,"1 - Two PRs are preferable because you want to solve two radically different issues (DataEigen and the QWT Stuff); 2- As for QWT, instead of modifying directly the source by yourself, update directly the source in extlibs to 6.1.5 which seems to solve your problem of compilation. #1496 ; Link: https://sourceforge.net/projects/qwt/files/qwt/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-700120269:184,update,update,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-700120269,1,['update'],['update']
Deployability,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4547:507,configurat,configuration,507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547,2,['configurat'],['configuration']
Deployability,17 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLForm,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1511,Release,Release,1511,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability,2 regression tests are failing : ; - Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver; - Regression_test/StateRegression_test.sceneTest/EulerImplicitSolver. Could it be that the references of these 2 scenes are bogus themselves ? (thus needing to update them?),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873004315:265,update,update,265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873004315,1,['update'],['update']
Deployability,2.58	 0.36	 2.58	 31.60	.....NarrowPhase; 4 	 2.83	 1 	 0.70	 4.50	 1.95	 0.89	 1.95	 23.87	....CollisionResponse; 4 	 4.79	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.15	....end collision; 3 	 4.81	 1 	 1.75	 5.13	 3.12	 0.54	 3.12	 38.16	...Mechanical; 4 	 5.02	 1 	 0.12	 0.24	 0.14	 0.02	 0.14	 1.70	....ComputeForce; 4 	 5.16	 1 	 0.08	 0.27	 0.10	 0.01	 0.10	 1.17	....ComputeRHTerm; 4 	 5.26	 1 	 0 	 0.02	 0 	 0 	 0 	 0.04	....MBKBuild; 5 	 5.26	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	.....CG-setSystemMBKMatrix; 4 	 5.26	 1 	 1.38	 4.15	 2.11	 0.34	 2.11	 25.84	....MBKSolve; 5 	 5.35	 1 	 1.29	 3.98	 2 	 0.34	 2 	 24.46	.....CG-Solve; 4 	 7.37	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.09	....UpdateVAndX; 2 	 7.93	 1 	 0.01	 0.05	 0.02	 0 	 0.02	 0.19	..UpdateSimulationContextVisitor; 2 	 7.96	 1 	 0.02	 0.23	 0.03	 0.01	 0.03	 0.32	..UpdateMapping; 3 	 7.96	 26.51	 0 	 0.01	 0 	 0 	 0 	 0.03	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 7.99	 1 	 0.13	 0.51	 0.18	 0.04	 0.18	 2.26	..UpdateBBox; 3 	 7.99	 1 	 0.01	 0.05	 0.01	 0 	 0.01	 0.17	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 7.99	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Proximity; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Response; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: GroupMan,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:19371,Update,UpdateBBox,19371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateBBox']
Deployability,"2nd big guy. #1527; based on ; - ~~#2612 ~~; - #2717 (for a moved file in core). Deprecates **SofaMiscMapping**; Partially deprecates **SofaBaseMechanics**, **SofaRigid**, **SofaGeneralRigid**. This module gathers all ""mechanical"" mappings (inhering BaseMapping) and __not__ topological mapping.; ~~I am a bit concerned by the size of this module but I cannot really find any good sub-modules to sort these components into ?~~. Following a discussion with @ChristianDuriez @Younesssss @alxbilger , Mappings are organized between:; - NonLinear: mappings implementing getK() and applyDJT(); - Linear: the rest of mappings; - MappedMatrix: components which are not mapping? but helps to map matrices (stiffness and stuff) ; -> Ad-hoc module which is only used to patch up matrices in SOFA, will disappear once matrix assembly will be pushed. ~~TODO (in an other PR), set Articulated-related things into a dedicated plugin.~~ Done in #2684 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2635:760,patch,patch,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2635,1,['patch'],['patch']
Deployability,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1891:73,Release,Release,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891,2,"['Release', 'update']","['Release', 'update']"
Deployability,"3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) (DefaultPipeline.cpp:238); ==91659== by 0x4BBD0D6: sofa::simulation::PipelineImpl::computeCollisionDetection() (PipelineImpl.cpp:117); ==91659== by 0x4B68E62: sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) (CollisionVisitor.cpp:78); ==91659== by 0x4B690BC: runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::co. ```. Sounds like createOutputModel is a good first spot to look at as it allocate an output vector with new... and that this one is returned to finally be stored in a map (eg: line 50 in NarrowPhaseDection).... which is not deleted when destructing object.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:2219,Pipeline,PipelineImpl,2219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654,3,['Pipeline'],"['Pipeline', 'PipelineImpl']"
Deployability,"3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: JointSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid2d,Vec2d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: RigidRigidMapping<Rigid3d,Rigid3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Rigid3d>; [WARNING] [ObjectFa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:9464,install,install,9464,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it bui",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:1380,configurat,configuration,1380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,1,['configurat'],['configuration']
Deployability,"5 Octobre 2016 17:52:58; > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > ; > OK I agree that this allows to compile Flexible without the SOFA-HighOrder.; > ; > Before moving SOFA-HighOrder to the gitHub repo, do any of you know if; > there are plans to move those plugins outside of github ?; > ; > My understanding is that at some point SOFA was going to be cut into; > several pieces that could be optionally compiled.; > ; > Is this still on the radar ?; > ; > Hervé; > ; > Le 05/10/2016 à 15:27, thomas-lemaire a écrit :; > ; > > yet an other option is to conditionnaly compile HighOrderTopology code; > > in Flexible based on whether the HighOrderTopology plugin is existing; > > or not (in cmakelists package_require(HighOrderTopology) if; > > (HighOrderTopology_FOUND) ... ):; > > - each plugin can live in its own repository; > > - no need for a third plugin; > > - should work whether all the plugins are compiled in the same cmake; > > build project or are compiled/installed separately (well; > > HighOrderTopology must be available when compiling Flexible); > > ; > > thomas; > > ; > > ----- Mail original -----; > > ; > > > De: ""Matthieu Nesme"" notifications@github.com; > > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > > ; > > > Hi Hervé,; > > > ; > > > In general, I think it is a good idea to have a repo per plugin,; > > > even if it; > > > becomes more difficult to update them when the sofa core is modified.; > > > But in this specific case, it would be great to add this plugin to this; > > > github repo, so Flexible can still benefit from your code.; > > > ; > > > Another solution, could be to add a third plugin in your independent; > > > repository, that would link with both SOFA-HighOrderTopology and; > > > Flexible,; > > > and that would contain the high order shape functions.; > > > ; > > > What do you think?; > > > ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225:1543,install,installed,1543,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225,1,['install'],['installed']
Deployability,9	 0 	 0 	 0 	 0.04	......Compute BoundingTree: lineCollisionModel3; 6 	 0.16	 1 	 0 	 0.10	 0 	 0 	 0 	 0.03	......Compute BoundingTree: pointCollisionModel3; 5 	 0.16	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.19	.....BroadPhase; 5 	 0.17	 1 	 1.98	 3.67	 2.62	 0.30	 2.62	 54.67	.....NarrowPhase; 4 	 2.78	 1 	 0.17	 2.29	 0.27	 0.08	 0.27	 5.59	....CollisionResponse; 4 	 3.06	 1 	 0.01	 0.06	 0.01	 0 	 0.01	 0.20	....end collision; 3 	 3.07	 9 	 0 	 0.03	 0 	 0 	 0.01	 0.13	...InteractionFF; 3 	 3.08	 2 	 0.19	 1.48	 0.76	 0.18	 1.51	 31.59	...Mechanical; 4 	 3.11	 2 	 0.05	 0.14	 0.06	 0.01	 0.12	 2.53	....ComputeForce; 4 	 3.17	 2 	 0.03	 0.11	 0.04	 0.01	 0.08	 1.68	....ComputeRHTerm; 4 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.09	....MBKBuild; 5 	 3.22	 2 	 0 	 0.02	 0 	 0 	 0 	 0.03	.....CG-setSystemMBKMatrix; 4 	 3.22	 2 	 0.06	 1.24	 0.60	 0.16	 1.21	 25.25	....MBKSolve; 5 	 3.25	 2 	 0.04	 1.20	 0.57	 0.16	 1.14	 23.86	.....CG-Solve; 4 	 3.94	 2 	 0 	 0.02	 0 	 0 	 0.01	 0.15	....UpdateVAndX; 2 	 4.60	 1 	 0.01	 0.03	 0.01	 0 	 0.01	 0.23	..UpdateSimulationContextVisitor; 2 	 4.62	 1 	 0.02	 0.07	 0.02	 0.01	 0.02	 0.46	..UpdateMapping; 3 	 4.62	 26.67	 0 	 0.02	 0 	 0 	 0 	 0.05	...MappingVisitor - processMechanicalMapping: unnamed; 2 	 4.64	 1 	 0.12	 0.44	 0.14	 0.03	 0.14	 3.02	..UpdateBBox; 3 	 4.64	 1 	 0.01	 0.07	 0.02	 0 	 0.02	 0.35	...BoundingBoxVisitor - ProcessTopDown: root; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaGeneralDeformable; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMiscCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaImplicitOdeSolver; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 4.65	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 4.65	 1 	 ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:3245,Update,UpdateVAndX,3245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Update'],['UpdateVAndX']
Deployability,"99% of the modules/plugins implements getModuleComponentList() with; ```; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin; static std::string classes = core::ObjectFactory::getInstance()->listClassesFromTarget(MODULE_NAME);; return classes.c_str();; }; ```; And the rest either omitted to implement it, or just forgot to update the list. (e.g MultiThreading). IMO getModuleComponentList() does not have really a meaning anymore and one should just use `ObjectFactory::listClassesFromTarget()` directly.; AFAIK, the only piece of code in the SOFA codebase using this entrypoint is Gui.Qt widget, displaying the component list for each loaded plugin. This PR:; - removes all the entrypoints from Sofa.Component.* (+MultiThreading); - deprecates getModuleComponentList() calls; - Sofa.Gui.Qt: calls directly listClassesFromTarget(), but still tests if getModuleComponentList() needs to be called; - warns at runtime if one plugin do implement getModuleComponentList(); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4795:384,update,update,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4795,1,['update'],['update']
Deployability,": [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 147, in reset; self._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 216, in _init_sim; super()._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 230, in _init_sim; self.scene_creation_result = getattr(self._scene_description_module, ""createScene"")(self._sofa_root_node, **self.create_scene_kwargs); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/scene_description.py"", line 98, in createScene; add_scene_header(; File ""/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5778,Configurat,ConfigurationSetting,5778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Configurat'],['ConfigurationSetting']
Deployability,"::Data<MatrixDeriv>;. using Point = Eigen::Vector2d;; };; } // namespace Sim2D. } // namespace VNCS; ```. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTy",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1752:1621,install,install,1621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752,2,['install'],['install']
Deployability,"::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #11 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downlo",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:1668,Release,Release,1668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Release'],['Release']
Deployability,":; def __init__(self, MO):; super().__init__(); self.MO = MO. def onAnimateBeginEvent(self, _):; print(""\n\nonAnimateBeginEvent""); random_disp = np.random.normal(0, 1e-2, self.MO.position.value.shape); self.MO.position.value = self.MO.rest_position.value + random_disp; print(f""{random_disp[0]=}""); print(f""{self.MO.position.value[0]=}""). def onAnimateEndEvent(self, _):; print(""onAnimateEndEvent""); print(f""{self.MO.position.value[0]=}""). def createScene(root):; root.addObject('RequiredPlugin', pluginName=['BugPosition']); root.addObject(""MechanicalObject"", name=""MO"", template=""Vec3d"", position=[1, 0, 0]); root.addObject(""TestComponent"", position=""@MO.position""); root.addObject(Controller(root.MO)); ```. **Steps to reproduce**; I've put everything needed to reproduce the issue here https://github.com/jnbrunet/BugPosition. Hence, the following steps can be taken (the SOFA installation path must be changed, and SofaPython3 plugin must be installed alongside SOFA):; ```bash; export SOFA_ROOT=/opt/sofa; export PYTHONPATH=$PYTHONPATH:$SOFA_ROOT/plugins/SofaPython3/lib/python3/site-packages; ```; Then, compile and launch the scene; ```bash; git clone git@github.com:jnbrunet/BugPosition.git; cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT/lib/cmake -S BugPosition -B BugPosition/build -DCMAKE_BUILD_TYPE=Release; cmake --build BugPosition/build; python3 BugPosition/scene.py; ```; which should produce the erroneous results (random displacement isn't taken into account).; ```; (...); onAnimateBeginEvent; random_disp[0]=array([-0.01092411, -0.00742505, -0.01442109]); self.MO.position.value[0]=array([1., 0., 0.]); onAnimateEndEvent; self.MO.position.value[0]=array([1., 0., 0.]); ```. **Expected behavior**; The correct behaviour can be obtained using the GUI. In the previous example, simply adding the `gui` parameter to the scene will do the trick:. ```commandline; python3 BugPosition/scene.py gui; (...); onAnimateBeginEvent; random_disp[0]=array([-0.00746889, -0.01065234, 0.00446683]); self.MO",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761:2610,install,installation,2610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761,2,['install'],"['installation', 'installed']"
Deployability,":component::collision::response::mapper::BarycentricContactMapper<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::updateXfree(); sofa::component::collision::response::contact::FrictionContact<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::createResponse(sofa::core::objectmodel::BaseContext*); sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionResponse(); sofa::simulation::PipelineImpl::computeCollisionResponse(); sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::AnimateVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*); sofa::simulation::AnimateVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3524:2336,Pipeline,PipelineImpl,2336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3524,1,['Pipeline'],['PipelineImpl']
Deployability,":core::objectmodel::SingleLink<$>::changed(boost::intrusive_ptr<$>, boost::intrusive_ptr<$>) (344 times, avg 10 ms); 3559 ms: sofa::core::objectmodel::TData<$>::copyValue(sofa::core::objectmodel::BaseData const*) (1784 times, avg 1 ms); 3513 ms: sofa::core::objectmodel::TClass<$>::dynamicCast(sofa::core::objectmodel::Base*) const (4067 times, avg 0 ms); 3446 ms: std::_Sp_counted_ptr<$>::_M_dispose() (2717 times, avg 1 ms); 3324 ms: sofa::component::container::MechanicalObject<$>::vOp(sofa::core::ExecParams const*, sofa::core::TVecId<$>, sofa::core:... (12 times, avg 277 ms); 3294 ms: sofa::component::topology::TetrahedronSetGeometryAlgorithms<$>::defineTetrahedronCubaturePoints() (6 times, avg 549 ms); 3285 ms: sofa::component::topology::EdgeSetGeometryAlgorithms<$>::defineEdgeCubaturePoints() (10 times, avg 328 ms); 3227 ms: sofa::core::objectmodel::TData<$>::updateFromParentValue(sofa::core::objectmodel::BaseData const*) (1785 times, avg 1 ms); 3215 ms: void Eigen::internal::assign_sparse_to_sparse<$>(Eigen::SparseMatrix<$>&, Eigen::CwiseBinaryOp<$> const&) (27 times, avg 119 ms); 3198 ms: sofa::component::topology::TriangleSetGeometryAlgorithms<$>::defineTetrahedronCubaturePoints() (6 times, avg 533 ms); 3196 ms: sofa::defaulttype::VirtualTypeInfo<$>::BaseType() const (2774 times, avg 1 ms); 3184 ms: sofa::component::topology::TopologyEngineImpl<$>::TopologyEngineImpl(sofa::core::topology::BaseTopologyData<$>*, sofa:... (117 times, avg 27 ms); 3141 ms: sofa::core::objectmodel::TClass<$>::~TClass() (4587 times, avg 0 ms); 3120 ms: sofa::component::interactionforcefield::MechanicalMatrixMapper<$>::addKToMatrix(sofa::core::MechanicalParams const*, s... (12 times, avg 260 ms); 3098 ms: sofa::component::engine::boxroi::BoxROI<$>::draw(sofa::core::visual::VisualParams const*) (6 times, avg 516 ms); 3080 ms: sofa::component::engine::MeshROI<$>::MeshROI() (6 times, avg 513 ms); 3079 ms: sofa::core::objectmodel::TClass<$>::isInstance(sofa::core::objectmodel::Base*) const (",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:28761,update,updateFromParentValue,28761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['update'],['updateFromParentValue']
Deployability,":doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:246; #21 0x7fc2ff129829 in void sofa::simulation::Visitor::for_each<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true>, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, sofa::simulation::NodeSingle<sofa::core::collision::Pipeline, true> const&, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Visitor.h:286; #22 0x7fc2ff12911b in sofa::simulation::CollisionVisitor::pro",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:34331,Pipeline,Pipeline,34331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,['Pipeline'],['Pipeline']
Deployability,":vector<unsigned int, sofa::type::CPUMemoryManager<unsigned; int> > const&, bool); sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedra(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> >; const&, bool); sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromTriangleModel(sofa::component::collision::geometry::TriangleCollisionModel<sofa::defaulttype::StdVe; ctorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > const&) const; sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromCollisionModel(sofa::core::CollisionModel*, unsigned int const&) const; sofa::gui::component::performer::RemovePrimitivePerformer<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::execute(); sofa::gui::component::performer::BaseMouseInteractor::updatePosition(double); sofa::simulation::BehaviorUpdatePositionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:7135,update,updatePosition,7135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['update'],['updatePosition']
Deployability,":warning: depends on #1488. This refactoring guarantees size consistency between `position / forces / velocity / external_forces` buffers when resized. Since those fields are coupled, changing the size of one should change the size of the others. except it's not the case.; plus, there's a ""size"" datafield that is supposed to determine the size of the buffers. Thus it is now impossible to edit the size of those buffers directly. any insertion / removal of a line in the buffers must be preceded with a change of size, which in turn will redimension the buffers. Also: When creating the scene (before executing the simulation) init_size and init_position should be used.; The idea behind that last change is that we should have separate datafields for inputs and outputs, instead of mixing both concepts together. :warning: **THIS IS BREAKING** because there are probably tons of codes out there that resize position manually and then call` init / reinit / bwdInit` on MOs, hoping for them to update the component (I should know I've been doing it for 6years :D). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1489:995,update,update,995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1489,1,['update'],['update']
Deployability,"; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=R",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1595,Install,Installing,1595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,3,"['Install', 'install', 'release']","['Installing', 'install', 'release']"
Deployability,"; from gymnasium.core import (; File ""C:\SOFA\Lib\site-packages\gymnasium\core.py"", line 8, in <module>; import numpy as np; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 149, in <module>; raise ImportError(msg) from e; ImportError: Error importing numpy: you should not try to import numpy from; its source directory; please exit the numpy source tree, and relaunch; your python interpreter from there. I already checked the suggested troubleshooting, but I couldn't fix the error.; Can you help me?; Thank you!. **Steps to reproduce**; `py -3.11 -m venv C:/SOFA`; `SOFA\Scripts\Activate`; `git clone https://github.com/ScheiklP/sofa_env.git `; `cd sofa_env`; `pip install -e .`; `python3 sofa_env/scenes/controllable_object_example/controllable_env.py`. **Expected behavior**; I would have expected that no errors would appear. ---------------------------------------------. ### Environment. **Context**. - System: OS Name	Microsoft Windows 11 Home; - Version of SOFA: I compiled SOFA with Cmake to be able to use with Geomagic Touch; - State: Install directory: C:\sofa. **Command called**. ```txt. python3 sofa_env/scenes/controllable_object_example/controllable_env.py. ```. **Env vars**. ```txt. import sys; print(sys.path); ['', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\idlelib', 'C:\\SOFA\\Lib\\site-packages', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\python311.zip', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\DLLs', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311', 'C:\\Users\\JetsLab\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages']. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. Traceback (most recent call last):; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 24, in <module>; from . import multiarray; File ""C:\SOFA\Lib\site-packages",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:3203,Install,Install,3203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['Install'],['Install']
Deployability,"> ### Problem; > **Description** hello, I wanted to use Sofa 23.06.00 in M1 Mac Book Pro But I can not use Sofa. This error message indicates: (have 'x86_64', need 'arm64e' or 'arm64')) I'd like to know the solution. I want to use Sofa 23.06.00; > ; > **Steps to reproduce** < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >; > ; > 1. install anaconda and make virtual environment; > 2. install sofa framework; > 3. define the environment variables; > 4. import Sofa in python; > ; > **Expected behavior** < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >; > ; > Success importing Sofa in python without any error.; > ; > ### Environment; > **Context**; > ; > * System: Mac OS X 14.4.1 (23E224); > * Version of SOFA:[SOFA_v23.06.00_MacOS.zip](https://github.com/sofa-framework/sofa/releases/download/v23.06.00/SOFA_v23.06.00_MacOS.zip); > * State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >; > ; > **Command called**; > ; > ```; > (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; > Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; > [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> import Sofa; > ---------------------------------------; > Checking SOFA_ROOT and SOFAPYTHON3_ROOT; > Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > ---------------------------------------; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; > import Sofa.Helper; > ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudS",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179:335,install,install,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179,5,"['INSTALL', 'Install', 'install', 'release']","['INSTALL', 'Install', 'install', 'releases']"
Deployability,"> 1. We could probably rename the ""**EulerSolver.h**"" and ""**EulerSolver.cpp**"" files to ""**EulerExplicitSolver.h**"" and ""**EulerExplicitSolver.cpp**"" to follow the name of the class.; > ; > 2. Maybe we could factor the sympletic option as a new time integrator class? I think it would be much clearer to have, for example,; > ; > ; > ```; > <EulerExplicitSolver />; > <EulerImplicitSolver />; > <EulerSemiImplicitSolver />; > ```; > ; > and might speak to more people. I definitively agree with both your suggestions.; I also thought about your second suggestion, and it was my plan to talk about it during the next dev meeting. The problem I see is that `EulerExplicitSolver` is by default symplectic. So, applying your suggestion would change the ODE solver when the user write `<EulerExplicitSolver />`. Let's discuss it on Wednesday.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-855629658:251,integrat,integrator,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-855629658,1,['integrat'],['integrator']
Deployability,> ; > ; > 2 regression tests are failing :; > ; > * Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver; > ; > * Regression_test/StateRegression_test.sceneTest/EulerImplicitSolver; > ; > ; > Could it be that the references of these 2 scenes are bogus themselves ? (thus needing to update them?). yes probably as both scenes are using MeshMatrixMass. I'll try to check the values to see if it is a regression or a fix... 🤞,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873985742:296,update,update,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873985742,1,['update'],['update']
Deployability,"> ; > ; > Is this plugin not supported by the CI? It should have failed if it was. `-DPLUGIN_SENSABLE=OFF`. If I remember well, the OpenHaptics/Geomagic SDK is bothersome (I am polite 😇) to install (more so on the CI nodes)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2113#issuecomment-846414016:190,install,install,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2113#issuecomment-846414016,1,['install'],['install']
Deployability,"> > Did you try to compile with `SReal=float` ? 🙊; > ; > Nope, I don't like to hurt myself. I did 🤐 with a minimal configuration and it *compiles* well",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3915#issuecomment-1579638820:115,configurat,configuration,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3915#issuecomment-1579638820,1,['configurat'],['configuration']
Deployability,"> > However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?; > ; > This function should be very useful in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:; > ; > 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; > ; > 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; > ; > 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not...; > ; > ; > This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices.; > ; > Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?; > ; > CC: @hugtalbot , @ChristianDuriez , @fjourdes. Thanks @jnbrunet for having looked on this issue. I rephrase your findings as a list of tasks to improve SOFA efficiency and accuracy:. - [ ] Remove EulerExplicitSolver::d_optimizedForDiagonalMatrix and replace it by fetching the result of Mass::isDiagonal; - [ ] CentralDifferenceSolver must be adapted to work with any type of mass matrix; - [ ] Implicit solvers must read the result of Mass::isDiagonal to speed up computations in case mas",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001:207,integrat,integrator,207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001,1,['integrat'],['integrator']
Deployability,"> > So, as we discussed during the dev meeting. 2 modifications:; > > ```; > > 1. Indeed, Boost, MPFR and GMP are dependencies of CGAL library itself not of the SOFA-CGAL plugin. As those dependencies are correctly handled internally in CGAL, I removed all mention of those libraries in the config file of the plugin.; > > ; > > 2. There is already a .cmake at the root dir of CGAL so the findCGAL.cmake is not necessary. Sofa just need to know ${CGAL_DIR} path. And in fact on windows, when you install CGAL this env_variable is set. So it works straight forward.; > > ```; > > ; > > ; > > @guparan can you confirm this is now ok to go?; > ; > The _FindCGAL.cmake_ was there to avoid the need to manually set the `CGAL_DIR` variable when we install CGAL via `apt install libcgal-dev`.; > ; > IIRC, it did not work straight forward with ubuntu 18.08 and centos 7, and maybe not even with recent versions of those distributions. I'll check it later today if you want with Docker, but I believe this file was useful. Ok I see, maybe we could add a test on top of ""our FindCGAL"" checking if CGAL_DIR is known or not. @guparan could you give your feedback so we can converge on that PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611393910:496,install,install,496,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611393910,3,['install'],['install']
Deployability,"> > The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?; > ; > I don't understand. Your cmake change is mostly affecting the install process, which is not tested on the CI... so did you try to install your current build ? ( to be sure that the change does not incur any error)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063:27,install,install,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063,4,"['INSTALL', 'install']","['INSTALL', 'install']"
Deployability,"> > Update SofaMacros.cmake by setting the policy CMP0057 NEW for supporting the IN_LIST operator of if().; > ; > Thanks @olivier-goury! Which version of CMake do you have?; > Since this policy was introduced in 3.3 and SOFA required 3.12 minimum according to what I've seen in the main CMakeLists of sofa, I don't see how this can cause problems. Maybe the policy should be set elsewhere though, like in the main CMakeLists.txt? @guparan. I am on cmake version 3.16.3",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677722602:4,Update,Update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677722602,1,['Update'],['Update']
Deployability,"> > ```; > > 1. We could probably rename the ""**EulerSolver.h**"" and ""**EulerSolver.cpp**"" files to ""**EulerExplicitSolver.h**"" and ""**EulerExplicitSolver.cpp**"" to follow the name of the class.; > > ; > > 2. Maybe we could factor the sympletic option as a new time integrator class? I think it would be much clearer to have, for example,; > > ```; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ```; > > <EulerExplicitSolver />; > > <EulerImplicitSolver />; > > <EulerSemiImplicitSolver />; > > ```; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > and might speak to more people.; > ; > I definitively agree with both your suggestions.; > I also thought about your second suggestion, and it was my plan to talk about it during the next dev meeting. The problem I see is that `EulerExplicitSolver` is by default symplectic. So, applying your suggestion would change the ODE solver when the user write `<EulerExplicitSolver />`. Let's discuss it on Wednesday. Unfortunately, I'm not sure I will be able to join this Wednesday and the next. Could we do something like this?. 1. If `EulerExplicitSolver` is used with default parameters or with explicit `sympletic=True`, then warn the user that he should use `EulerSemiImplicitSolver` instead, and create this new component automatically for him (this is the part where I'm not sure it's feasible..); 2. Else, the user manually specified `sympletic=False`, warn him that this option no longer exists and that he can remove it from its scene file.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-855748841:266,integrat,integrator,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-855748841,1,['integrat'],['integrator']
Deployability,> > ```c++; > > sofa::core::sptr<BaseObject>; > > ```; > ; > `sofa::core::sptr<BaseObject>` is not much longer than `BaseObjectSPtr` and have to advantage of avoiding an alias :-). This is exactly what I was thinking before actually having to do a full replacement of simulation::Node::SPtr on the whole code base. The replacement requires some care to handle correctly the namespace variations everywhere in the code base ; sofa::simulation::Node::SPtr; simulation::Node::SPtr; Node::SPtr ; I found that a mass replacement from Node::SPtr to NodeSPtr was easier to deploy (and revert) massively.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769784026:566,deploy,deploy,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769784026,1,['deploy'],['deploy']
Deployability,"> @epernod it means the function `updateOnResize()` is called at init? I fear that if we delete all DOFs during a simulation, when we add new DOFs again, `d_vertexMass` is set to zero therefore: `d_totalMass.setValue(Real(newSize) * Real(d_vertexMass.getValue()));`; > ; > the total mass will always remain null. yes that is why I remove the d_vertexMax setValue(0). If you know you will add/remove dofs, you should rely on the d_vertexMax which doesn't change inside the code.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721224696:34,update,updateOnResize,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721224696,1,['update'],['updateOnResize']
Deployability,"> @fredroy Can you have a look on the Windows build? Something made it fail. There is no problem on WIndows, the report on github is pointing to a bad build (`#3` instead of `#4`); -> https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2728/4/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2728#issuecomment-1050839798:301,release,release,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2728#issuecomment-1050839798,1,['release'],['release']
Deployability,"> @fredroy you labelled this PR as to backport. However, it leads to compilation error due to another PR which is only in master and not v23.06 :; > ; > ```; > BarycentricMapper.inl:33:19: error: 'sofa::component::mapping::linear::_barycentricmapper_::BarycentricMapper<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >::MatrixType' {aka 'class sofa::linearalgebra::CompressedRowSparseMatrix<sofa::type::Mat<3, 3, double> >'} has no member named 'wblock'; did you mean 'wbloc'?; > ```; > ; > I will have to remove the commit from v23.06. No worries, this warning only ""makes sense"" with v23.12 and the integration of the CRSM anyway",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749:751,integrat,integration,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911#issuecomment-1597880749,1,['integrat'],['integration']
Deployability,"> @olivier-roussel thanks for the conda test and the feedbacks 👍 You should have made suggestions and/or make a PR on my branch, as I cannot credit you your patches 😵. Indeed, sorry about that",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923345776:157,patch,patches,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923345776,1,['patch'],['patches']
Deployability,"> Any interest to keep newmat ? I remember a discussion during a sofadevmeeting with @jnbrunet saying that we should remove the usage of newmat. Especially because it seems this library is really old and not maintained anymore.; > http://robertnz.net/nm_intro.htm; > Latest update seems to be 2008 for newmat11 (beta)... Good point. I just saw an opportunity to easily benefit from the type-parameterized tests that I introduced for `BaseMatrix`. An option is to remove it, but it could also be moved into an external plugin. Let's discuss it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2311#issuecomment-909026838:274,update,update,274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2311#issuecomment-909026838,1,['update'],['update']
Deployability,"> Any news @nhnhan92 ?; > Note that for my remark on the header, having your project name if fine for us. What matters for us is to have first the SOFA header (LGPL) up in the file. Would this be possible?; > Let me thank you again for this nice contribution. Hi @hugtalbot,; Sorry for late response. I have recently been in the middle of some work (related to this project). Therefore, there is no progress so far, however, I plan to add the addKtoMatrix module to the FF and also try to improve coding stuffs (will be updated as soon as possible). On the other hand, I have discussed with my team member and advisor about the header. We agree with your above suggestion, but I just wonder is it possible for this FF to appear in both the SOFA source code (in the future) and our own under-developing plugin? we are not familiar with this procedure, sorry for that; If it is okay, please write the name of the contributor as:; JST/PRESTO Project: TouchIoT-Smart Tangible Sensing Enabler for Tactile Internet (Developer: Nhan Nguyen Huu); One last thing, from the previous comment, you mentioned the test. Could you please be more specific about the test? do you want to test the reliability of the FF (like coding, mathematical model, etc.)? We definitely want to certify that.; Thank you for your and SOFA team effort to review our work.; Best regards,; Nhan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-780500969:520,update,updated,520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-780500969,1,['update'],['updated']
Deployability,"> Build failure on Ubuntu is weird. Seems related to CGAL but I'm not even sure. Can you check this @hugtalbot ? https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2935/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/6/console. The system probably killed the compilation because it took too many resources. Restart the compilation could maybe make it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123785530:224,release,release,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123785530,1,['release'],['release']
Deployability,"> Could you give us more precisions regarding the need to change from enums to strings for the integration methods?. Two reasons motivated the use of strings : ; 1) Right now when specifying the type of numerical integration method in python or xml scripts the user had to use for instance numericalIntegrationMethod=""3"" which is not descriptive at all. It is preferable to use numericalIntegrationMethod=""Tetrahedron Gauss"" for the maintenance of the code. Using OptionsGroup could solve this issue I believe. 2) Inheritance. In the plugin ""SofaHighOrder"" I specify new types of numerical integration methods on triangles. While the APi allows to add a new method, the enum class cannot be extended ( I can use a number like 4 but this creates warnings and is not satisfactory). Therefore using a string class is more versatile. . > **If** the goal is to simplify the conversion from the string (passed in XML / Python scenes) to the C++ enums, wouldn't it be best to take advangate of the OptionsGroup datatype already present in SOFA?. This would not solve the inheritance problem as the type of numerical integration methods can be exhaustively listed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-466958911:95,integrat,integration,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-466958911,4,['integrat'],['integration']
Deployability,"> Does the CIs need to be updated with the new variable names?. I think the CI does not really set any GUI/Qt cmake variables.; In any case, as there is no forwarding from the new var to the old deprecated var, it should be yes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2974#issuecomment-1135319702:26,update,updated,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2974#issuecomment-1135319702,1,['update'],['updated']
Deployability,"> From what I see it would not affect the way to use it (scenes) Should the `<RequiredPlugin name=""SofaMiscExtra""/>` in the example scene(s) should also be modified?. Yes but some other scenes too (e.g those with the engines as the script from @alxbilger was executed before the engine PR was merged). So I would say we should update the scenes/run the sceneUpdater once after the SofaNG PRs have been merged.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2917#issuecomment-1117001607:327,update,update,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2917#issuecomment-1117001607,1,['update'],['update']
Deployability,"> Have you checked @alxbilger that it is well unused in InSimo ISSOFA released by @fjourdes ?. I just checked, and the file does not exist on the repository.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1994#issuecomment-816455035:70,release,released,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1994#issuecomment-816455035,1,['release'],['released']
Deployability,"> Have you checked then in the code that no access to vertexMass is done in any other function without checking the ""newSize"" ? @epernod. sorry I'm not sure to understand the point. I'm modifying the method `updateMassOnResize` which is a callback called when the number of dof has changed. From my understanding the VertexMass value should not change when the number of dof change, only the totalMass. if we need to add more check in all method to check the size, this means the callback mechanism is useless no? and if it is.. what about us @hugtalbot 😆 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1726442647:208,update,updateMassOnResize,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1726442647,1,['update'],['updateMassOnResize']
Deployability,"> Hello @ScheiklP ,; > ; > thank you for this PR. Two points:; > ; > 1. Could you explain why you have 2x the index 5 in your example?; > Is it because you are using several collision models and the index 5 is added twice from the carvingManager?; > ; > In the case of segfault, is it because the indice 5 is still to be removed but your vertex buffer last index is now 4 ?. Hi @epernod ,; The collision pipeline correctly detected collisions between index 5 on the LineCollisionModel and all indices on the SphereCollisionModels. In the other removeElement functions, the indices are put into a set to filter duplicates. In the first commit for the new features this was not the case -> 5 was in the indices list multiple times.; The new commit filters out the duplicates.; It should also quite a bit faster, because it does not need to create a set.; Just one sort at creation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1238183338:404,pipeline,pipeline,404,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1238183338,1,['pipeline'],['pipeline']
Deployability,"> Hello @alxbilger,; > ; > Thanks for the PR, removing that ""verbose"" looks fine to. As a deprecation worklfow I recommand:; > ; > * deprecate the data field (as done in the PR); > * updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ?. I agree but in the case of this PR, the Data `d_verbose` was really not used at all. So no need to do anything.; > * in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"". Yes, I will do it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205:183,update,updates,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205,1,['update'],['updates']
Deployability,"> Hello @epernod,; > ; > thank for the PR. I strongly support moving toward removing deprecated stuff in our code base (what is done in the PR); > ; > Maybe we could just keep the old deprecated name with something like:; > ; > ```; > class Base {; > [[""this is deprecated...don't use it as it does not work any more...to update your code see the migration documentation in PR#1358""]]; > DeprecatedAndRemoved m_componentstate; ; > }; > ```; > ; > Existing code will stop compiling forcing anyone to update but ppl will be able to understand easily what to do. Hi, @damienmarchal ; I was going to do what you suggested, but while reading again your comment I realized I don't remember what we said or I didn't really get it.; In this PR there are 2 potential breaking changes:. - The upper case letter S of the Data: . ```; Data< sofa::core::objectmodel::ComponentState > d_componentstate; ; into ; Data< sofa::core::objectmodel::ComponentState > d_componentState; ; ```. - And I uncomment the line [[ deprecated ... for the m_componentstate.; ```; [[deprecated(""m_componentstate was renamed to d_componentState. Please upgrade your code"")]]; Data< sofa::core::objectmodel::ComponentState >& m_componentstate{d_componentState}; ///< the object state; ```. For which one do you want to add what you suggested? And just to be sure, the idea is to create a class ""DeprecatedAndRemoved"" that does nothing so you can declare the variable but compilation will failed when using it in the code and you put a [[deprecated(""..."" above ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-634984287:322,update,update,322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-634984287,3,"['update', 'upgrade']","['update', 'upgrade']"
Deployability,"> Hey @alxbilger , thanks for this benchmark.; > ; > My guest would be that solving one big system (the merge of both objects) is slower than solving to smaller system.; > ; > However, solving two system independently should, I think, produce incorrect results as; > ; > 1. You are applying the interactions (for example, contact forces) at different solving states. For example, the first object is solved, its node positions are updated to the step t+1. Collisions are then computed. But the state of the second object is still at the time step t. Oscillation will therefore probably happen and the convergence will be delayed.; > ; > 2. In addition, the solution state with both objects merged under the same system takes into account the interaction between the two objects. For example, when both objects are merged into a same system, you can create entries inside the system matrix to create a relationship between a node in the first object and a node in the second object. This is not possible when the two objects are separated.; > ; > ; > **TLDR**: Solving two objects independently is faster than solving one big system containing both objects. However it will take longer to converge to a steady solution (in number of steps), and even probably converge to an incorrect solution. Thank you for this explanation. It makes more sense. If I understood correctly, the group manager would help the performances compared to a single system. Here, we compare to two systems (one per cube). I'll add a third scene in this benchmark with a single system, to be more rigorous. I expect the same result from ""single system"" and ""two systems + group manager"". I expect better performances only in case the two cubes are not in contact, am I right?. Can we say that the best practice would be to start the design of a simulation scene with a single system, without group manager? And if performances are poor, it can be improved with a group manager, knowing its drawbacks (such as hiding a selection ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842964385:431,update,updated,431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842964385,1,['update'],['updated']
Deployability,"> Hey @marques-bruno,; > ; > I think the idea was to have a collection of ""DDGLinks"" seen as one data. For example:; > ; > ```; > // Inputs; > DDGLink<MechanicalObject> d_mechanical_object; // One mechanical object; > DDGLinks<BaseForceField> d_forcefields; // Multiple forcefields acting on the MO; > DDGLink<BaseMass> d_mass; // One mass acting on the MO; > ; > // Outputs; > Data<VecCoord> d_solution;; > ```; > ; > Here we want to update the solution vector if either the MO, one of the forcefields, or the mass has changed. Hi @jnbrunet, that's another issue right? This PR proposes to get some sort of ""bidirectionality"" in the Data Links without breaking the ""acyclicity"" of the DDG.; I guess it would not be a problem to overload DDGLink<T> to handle a vector of links of the same type instead of a single link of type T. Just to understand a bit better: your example code would be the kind of code one would find in an ode solver for instance, right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1228#issuecomment-561199342:435,update,update,435,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1228#issuecomment-561199342,1,['update'],['update']
Deployability,"> Heyy @fredroy Yes, you got it correctly. I am trying to read a haptic device written in py2.7 into sofapython controller in SOFA. And thanks for your advice, I just tried **run as admin** when execute the runSofa.exe, and it just does not work. So usually the SofaPython could be compatible with other python packages installed from pip, right? . Hum it should be (it has been a long time I did not use the python2 plugin that I am not 100% sure). > I think I will try to debug into my python drivers and for now I am going to run these two python processes at the same time(1. a normal python console and 2. a sofapython one), and probably let the 1. console write into a .np array and let the 2. process read continuously read the array to pass the msg from haptic device. Will it work in sense of real-time property in your opinios? @fredroy Or do you have a better idea about such temporal solution. Thanks any way !!!. Hum I dont think it will work unfortunately, at least for the real-time aspect. Writting in a console is very time-consuming so the whole process `serialize -> write in a console -> read the console -> deserialize` will be too slow in my opinion.; The other `least bad way` IMO ( because directly getting the value from the device would be much better 🙃) would be to pipe or open a comm channel between the two processes either RPC or TCP/IP or unix pipes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068117938:320,install,installed,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068117938,2,"['continuous', 'install']","['continuously', 'installed']"
Deployability,"> Hi @ScheiklP; > ; > Thanks for the PR.; > ; > The SphereCollisionModel works historically without a topology (relying on the mstate). The tests are failing due to the absence of a PointSetTopology. What could be done is to change the warning into an info saying that no topology is found therefore no topological change will be supported. What do you think?; > ; > Another change in order to make the component topologically robust would be to make the data `radius` as a PointData:; > ; > ```c++; > Data< VecReal > radius; ///< Radius of each sphere; > ```; > ; > should become; > ; > ```c++; > PointData< Real > radius; ///< Radius of each sphere; > ```; > ; > (connected to a topology handler). Hi @Hugo,; the `SphereCollisionModel` are in a node together with an `EdgeSetTopologyContainer` that is now also correctly found and bound to `l_topology` and `m_topology`. . Is there something else to do, to correctly connect it to `m_mstate`?. Or maybe `updateFromTopology()` should do more than it does now? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597:956,update,updateFromTopology,956,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597,1,['update'],['updateFromTopology']
Deployability,"> Hi @marques-bruno wasn't it merging the #1407 into this one (#1408) ?; > ; > My notes on this PR were: Rebase #1407 in #1408.; > SetValue on componentState should not be required: bool parse() calls getValue on the m_repositoryPath, which in turn will call the updateCallback, which itself sets the component State. Thus setting it again would be useless.; > fileMesh to remove. That's what's been done here no? Both 1406 & 1407 are merged into this PR (see branch diffs), the parsing code has been updated in AddResourceRepository & fileMesh has been removed.; To me this should be flagged ready, as soon as @epernod validates",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643959920:263,update,updateCallback,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643959920,2,['update'],"['updateCallback', 'updated']"
Deployability,"> Hi @marques-bruno,; > ; > Thanks for this very interesting PR that is going into the right direction. Sadly the breaking part is not fun. Let's see how other will react. Agreed..; To give you some context, initially my intent was to only add a init_position / init_size, to remove the bidirectionality of this component's position / size datafields.; Basically, the rule of thumb with SOFA components should be to NEVER EVER use a datafield both as an input and an output of the component (modified by the component AND linked to a parent data for isntance). The problem is that keeping the previous behavior of the component and having the new datafields that work the right way created an asymetry in the updates that created weird logic in the callbacks. So while I'm at it I decided to go all in and refactor the whole thing with the good behavior.; I don't see how to add depreciation messages or how to handle previous behavior. If anyone has an idea, I'm all ears :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1489#issuecomment-695967930:709,update,updates,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1489#issuecomment-695967930,1,['update'],['updates']
Deployability,"> Hi,; > it seems linked to qtWebEngine, could you check in the version of Qt5 you installed (manually or using distrib packages) that QtWebEngine is installed. I build the QT5.15.2 from source manually. However, how could I check whether I have built it right? The whole process seems correct.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2253#issuecomment-881986212:83,install,installed,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2253#issuecomment-881986212,2,['install'],['installed']
Deployability,"> However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. This function should be very useful in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:. 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not... This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices. Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?. CC: @hugtalbot , @ChristianDuriez , @fjourdes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-797326125:199,integrat,integrator,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-797326125,1,['integrat'],['integrator']
Deployability,"> Hum sorry in fact FEMBAR-SVDLinearSolver.scn seems to time out: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2422/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/3/SceneTestCrashes/; > ; > https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2422/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/3/artifact/parent_dir/build/scene-tests/archive/examples/Components/linearsolver/FEMBAR-SVDLinearSolver.scn/output.txt; > ; > could you double check before merging. @epernod yes it makes sense as this solver is super slow. I'll change the number of iterations for this scene. Thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2422#issuecomment-949348641:178,release,release,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2422#issuecomment-949348641,2,['release'],['release']
Deployability,"> I confirm that having a `MeshTopology` solves the issues. @epernod You call it a workaround. Does it mean I should not do that for some reasons?. MeshTopology -> static containers in the sense, not possible to change it during simulation, XXSetTopologyContainer have lot of methods to update their content.; But if I remember well, they are both using vector",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590846893:287,update,update,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590846893,1,['update'],['update']
Deployability,"> I think from a user perspective it is easier to understand names like ""PyScriptableComponent"" or even ""PyComponent"", because that is what they are: components, just like any other in Sofa, with Datas, Inputs and Outputs and a certain behavior. This is not really correct actually:; The pythonScriptController is not really a component (i.e a Sofa class inheriting BaseObject) as it possesses extra features, such as the possibility to create the scene graph from scratch, send events to other controllers etc. It is not a purely simple 1to1 binding of its C++ methods in Python. In that way, I agree with you that calling it a PyController makes more sense than to call it a PyBaseObject for instance, or pyComponent, since it does more.; The current PSDE is actually as far from a Std sofa component (core::objectmodel::BaseObject) as the PythonScriptController: the PSDE is much closer in terms of behaviour to that of Sofa's DataEngine components: the key difference is that DataEngines, contrary to BaseObjects, is a call for action on the modification of one of its input datafield. The update method is not present in a BaseObject or in a PythonScriptController. In that way it completely mimics the behavior of the DataEngines in Sofa. Hence my suggestion :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406605755:1094,update,update,1094,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406605755,1,['update'],['update']
Deployability,"> I was wondering if there is a way to catch the missing symbols at compile-time and I found this: https://cmake.org/cmake/help/latest/module/CheckCXXSymbolExists.html#module:CheckCXXSymbolExists. It's configuration time but it could be helpful. I tried to play with it but I was not able to make it work. I added the check in the `sofa_create_package_with_targets` macro. It could be interesting to enforce that the necessary symbols are defined at configure-time yes 🤔 . EDIT: I did some tests and it is quite bothersome to set up, (the file itself needs to be compilable, the symbol need to be defined and not only declared, adding variable in cache, etc) And I think if we do that for all potential loadable libraries, it will slow down considerably the cmake configure process.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1915860120:202,configurat,configuration,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1915860120,1,['configurat'],['configuration']
Deployability,"> I' ve updated the SDK `Selecting Windows SDK version 10.0.22621.0 to target Windows 10.0.22631.` and v22.12 successfully compiled .; > ; > As a the last resort, you may; > ; > * update everything (MSVC/SDK); > * delete the build folder; > ; > and try again. thank！vs2022 default use windows11 sdk, and i change windows 10 sdk,; it's OKKK",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835619193:8,update,updated,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835619193,2,['update'],"['update', 'updated']"
Deployability,"> Is it built by the CI?. see https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2792/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/1/consoleFull; ```; -DAPPLICATION_GETDEPRECATEDCOMPONENTS=ON; -DAPPLICATION_REGRESSION_TEST=OFF; -DAPPLICATION_RUNSOFAGLFW=ON; -DAPPLICATION_SOFAPHYSICSAPI=ON; ```; Nope.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2792#issuecomment-1076222146:141,release,release,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2792#issuecomment-1076222146,1,['release'],['release']
Deployability,"> It seems to be coming from a setup/system/configuration error than something related to SOFA itself, as the error is coming from the Windows SDK itself. Which version of MS Visual Studio are you using ?. i use vs 2022(Windows SDK version 10.0.22621.0 to target Windows 10.0.19045 MSVC 19.37.32822.0)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835503584:44,configurat,configuration,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835503584,1,['configurat'],['configuration']
Deployability,"> It's really not a big feature. Granted, it's not *that* big, but still:; - you need to properly initialize/finalize sofa and core modules (see Main.cpp in the runSofa application); - you need to handle the case where the loaded scene already has python scripts, and let the `PythonEnvironment` know the interpreter is being run from the outside when initializing (and maybe deal with all the `sys.path` / `__file__` abuses down there); - probably have a good fight with the GIL down the road; - how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes? (I would probably put your feature in a module separate from `Sofa` for this reason); - what happens when `Sofa.cleanup()` gets called but python objects still hold c++ objects that are to be destructed when python exits ?. But I am really all for it, so good luck with that :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339347741:521,integrat,integrate,521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339347741,1,['integrat'],['integrate']
Deployability,> My hero! It was so frustrating to use cmake on SOFA (on Windows). Thanks a lot!; > ; > Could you tell me how you profile the cmake configuration?. https://github.com/sofa-framework/sofa/issues/1838 🥳,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277266711:133,configurat,configuration,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277266711,1,['configurat'],['configuration']
Deployability,"> Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`. Will be a very funny task to do. . EDIT: CTRL+F on 'getValue()[' shows +1000 hits.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619:18,pipeline,pipeline,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1265522619,1,['pipeline'],['pipeline']
Deployability,"> Of course the PR will be breaking and we will need to update our code base. But this is all for the good.; > ; > Clearly congratulation @SofaFramework for such high quality management of software evolution.; > ; > So if I understand correctly, this will be merge into master the day after the official release of v22.06 right ?. It should be breaking for some yes (the ones who did not do the change of the things flagged deprecated the last version and marked removed now, like the use of sout/serr/sendl); But it should be merged just before releasing actually, now is the code of v22.06",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174746402:56,update,update,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174746402,2,"['release', 'update']","['release', 'update']"
Deployability,"> One unit test failling : https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4494/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/2/testReport/UnitTests.Sofa_Component/Topology_InciseProcessor_test/InciseTriangles/. Unit test references have been changed. The new version is more accurate.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1951953396:138,release,release,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1951953396,1,['release'],['release']
Deployability,"> Several points here:; > ; > * this PR might be breaking for plugin compilation (including move of files). No it is not. The only change that could be called ""breaking"" is the renaming of the CMake options to enable/disable libraries and modules. However, those options keep the same default behavior so it will only affect people who build their own SOFA with custom options. New option names are very close to old option name so it's pretty easy to do the transition. . > ; > * this PR changes the way we organize / name the code (which is good!); > ; > ; > It would be therefore nice to rediscuss it with you both @guparan and @fredroy to all agree on the organization and merge it, but a question comes: does this seem realistic to merge it before the release?. Yes because having everything called PLUGIN_* is a nightmare.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200963331:757,release,release,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1200963331,1,['release'],['release']
Deployability,"> So, as we discussed during the dev meeting. 2 modifications:; > ; > 1. Indeed, Boost, MPFR and GMP are dependencies of CGAL library itself not of the SOFA-CGAL plugin. As those dependencies are correctly handled internally in CGAL, I removed all mention of those libraries in the config file of the plugin.; > ; > 2. There is already a .cmake at the root dir of CGAL so the findCGAL.cmake is not necessary. Sofa just need to know ${CGAL_DIR} path. And in fact on windows, when you install CGAL this env_variable is set. So it works straight forward.; > ; > ; > @guparan can you confirm this is now ok to go?. The *FindCGAL.cmake* was there to avoid the need to manually set the `CGAL_DIR` variable when we install CGAL via `apt install libcgal-dev`. IIRC, it did not work straight forward with ubuntu 18.08 and centos 7, and maybe not even with recent versions of those distributions. I'll check it later today if you want with Docker, but I believe this file was useful.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-610910985:483,install,install,483,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-610910985,3,['install'],['install']
Deployability,"> SquareDistanceMapping test fails with the introduced test : https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4897/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/1/testReport/. See #4891",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288281667:173,release,release,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288281667,1,['release'],['release']
Deployability,"> Thank you @ziqiu-zeng for the PR, I can see I did some mistake in the compat files grimacing; > ; > > Enable compilation with cuda plugins: SofaAsyncSolvers, SofaCUDALDI, SofaCUDASolvers, SofaCUDADev Please also update the plugins; > ; > Unfortunately, these plugins are private plugins from the mimesis team so we cannot access/fix/update them thinking. Hello,. I have fixed the bugs in these private plugins.; What I mean is that the users of these plugins should pull the modifications.; Sorry for the misunderstanding, I will edit the commit message.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2883#issuecomment-1102767377:214,update,update,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2883#issuecomment-1102767377,2,['update'],['update']
Deployability,"> Thank you. I have successfully run it on my laptop (MAC M2 chip with qt5). I have modified both `.bashrc` and `.zshrc` with define the `Qt5_DIR` but it does not change the value in `cmake-gui`. Thus, I modified the `QT5_DIR` in `cmake-gui` directly and it plays well. Before that, it has a small error, like `Imported target ""tinyxml"" includes non-existent path` I deleted the default one in `/usr/local/lib` and modified the `TinyXML_DIR` with the path installed by `homebrew`.; > ; > Anyway, Thanks a lot. <img alt=""sofa"" width=""1099"" src=""https://user-images.githubusercontent.com/56861752/210767352-6f43621e-1559-40da-a15d-cd28a18945ca.png"">; have you been able to run sofa python",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-2254330043:456,install,installed,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-2254330043,1,['install'],['installed']
Deployability,"> Thanks @marques-bruno ! Could you confirm that your clang-format file complies with [the astyle configuration](https://github.com/sofa-framework/sofa/blob/master/tools/astyle/sofa.astyle)?. Almost... I went through each of the options in the style sheet to make sure, but:; * *--indent-labels*: this is not supported by clang-format. This astyle option indents C-style labels (goto labels) as if it were a normal instruction in its scope. clang-format offers an option `IndentGotoLabels` but it will either align it with the root of its scope (true,) or align them at the first column in the file. for more info on this option:; [StackOverflow post](https://stackoverflow.com/a/66511380/1376968). But to me, it seems like a bad idea to indent labels the way astyle does. clang-format's makes more sense to me. * *--add-braces*: This one is more problematic: clang-format supports this option since its latest version (clang-format-15.0.0), BUT, here's what they say in the doc:. _**Warning**_. _**Setting this option to true could lead to incorrect code formatting due to clang-format’s lack of complete semantic information. As such, extra care should be taken to review code changes made by this option.**_. Linter tools, like clang-tidy, let you do that also...; Most importantly, clang-format's default package version on ubuntu is v10.0.0. v12 can be found in ubuntu's default package manager, but for v15 you gotta look for the package in external repos or compile it yourself. So I'd rather leave this option out, and keep it more as a general guideline in SOFA's documentation. Other than that my last commit updated the file to adopt the other astyle options :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2884#issuecomment-1103726034:98,configurat,configuration,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2884#issuecomment-1103726034,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"> Thanks @sergeiNikolaev for this contribution and making this nice effort of bringing back this work.; > ; > * Is any test available with these new classes?; > * is there any example scene?. @hugtalbot; Here is the test to verify polynomial springs (Python2 scripts). [polynomial_spring_test.zip](https://github.com/sofa-framework/sofa/files/4540453/polynomial_spring_test.zip). The test ""spring_verification.py"" depicts two points (p1, p2) connected with a spring. One point (p1) is fixed, another (p2) is moving in space. The external impact (f_external) to the system could be applied using LinearForceField (you need to make target_force as a Data<> object in order to collect its information, but I have this modification) or ControlPoint (third point (p_control), attached with a linear rest shape spring). In case of a second option, the external force is computed as (p_control - p2)*k_rest_shape_spring.; During the simulation process, the position ""p2"" and forces ""f2"" for point p2, and also the external force or the position of the control point are saved to data files.; The script ""spring_verification_draw_result.py"" loads all data. The strain for spring is computed as ; (norm(p2-p1) - l0) / l0 for PolynomialSpring or as norm(p2-p1) / l0 for RestShapePolynomialSpring.; I use static solver with many iterations to make spring force equal to external force, but I guess it is also possible to compute the spring force as difference f2 - f_external.; Based on this data, a force-strain relation is plotted and compared with polynomial values.; And this is the end of the test. NOTE: Please, keep in mind, that configuration parameters have to be the same for both scripts, in order to get a valid result.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-620055719:1626,configurat,configuration,1626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-620055719,1,['configurat'],['configuration']
Deployability,"> Thanks again for this nice contribution @nhnhan92; > Sorry I had prepared many similar feedback as @epernod so, some might be duplicated.; > ; > A more general remark, could you point us out the documentation you used to write this code please?; > Do you have an idea of when you would plan to consider rotations around the z axis?; > I also noticed in this paper typical tests for testing accuracy: https://sci-hub.se/10.1007/s00366-020-00974-4 it would be great to get a similar test for the continuous integration!; > ; > If this is too much questions, we can discuss about this live if you'd like. Dear, @hugtalbot,; Thank you for kind supports from you and @epernod. First, I implemented this FF mostly based on two following references:; 1. Book: ""Structural Analysis with the Finite Element Method, Linear static, Vol. 2, chapter 8""; 2. And the most recent paper of our group: https://ieeexplore.ieee.org/document/9247533; On the other hand, at this stage, this FF fairly meets our expectations for the current project. I definitely want to improve it in the near future. However, FEM is not my field (I am basically an end-user) and I have been in the middle of something else, therefore, It is gonna take time for me to be able to complete it. I would love to cooperate with SOFA team to complete it.; I'm sorry, but I'm quite unsure when you said rotation around z-axis (normal axis of the element?). Do you mean the consideration of rotating element around its normal axis? (i.e., co-rotational LARGE method (am I right?)). Right now, my priority is to take the rest two rotation dofs of a node (location rotations of around x and y direction) because, at this moment, I assumed they are zeros. But, so far, I have no idea how to include them; Finally, if it is necessary, I am willing to have a face-to-face discussion as long as I am available. Thank you ; Best,; Nhan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773702816:496,continuous,continuous,496,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773702816,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"> The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?. I don't understand",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1268330146:25,install,install,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1268330146,2,"['INSTALL', 'install']","['INSTALL', 'install']"
Deployability,"> The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI. Maybe it is random, it does not crash on mine (but I only tried like 2, 3 times) on msvc; Nevertheless, I dont think this scene is working as intended anyway.... (the particules do not interact with the static mesh)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421:154,release,release,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421,1,['release'],['release']
Deployability,"> The question is: does [VideoRecorderFFMPEG need FFMPEG_exec](https://github.com/sofa-framework/sofa/blob/master/SofaKernel/framework/sofa/helper/CMakeLists.txt#L308-L311)?. Yes it does, because, watch out.... [SofaKernel/framework/sofa/helper/gl/VideoRecorderFFMPEG.cpp](https://github.com/sofa-framework/sofa/blob/ef4114de87ccb97ad6792f553419644b5e77eb98/SofaKernel/framework/sofa/helper/gl/VideoRecorderFFMPEG.cpp#L97); ```; std::stringstream ss;; ss << FFMPEG_EXEC_FILE; << "" -r "" << m_framerate; << "" -f rawvideo -pix_fmt rgba ""; << "" -s "" << m_ffmpegWidth << ""x"" << m_ffmpegHeight; << "" -i - -threads 0 -y""; << "" -preset fast ""; << "" -pix_fmt "" << codec // yuv420p "" // "" yuv444p ""; << "" -crf 17 ""; << "" -vf vflip ""; << ""\"""" << m_filename << ""\""""; // @TODO C++14 : replace with std::quoted; ```. Yes, `FFMPEG_EXEC_FILE` is hard-coded and defined by . `add_definitions( ""-DFFMPEG_EXEC_FILE=\""${FFMPEG_EXEC_FILE}\"""" )` in [findFFMPEG_exec.cmake](https://github.com/sofa-framework/sofa/blob/ef4114de87ccb97ad6792f553419644b5e77eb98/cmake/Modules/FindFFMPEG_exec.cmake#L18). Which means that don't you ever package Sofa with FFMPEG support. If the user who installs your package has its ffmpeg elsewhere, everything will collapse.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540041015:1160,install,installs,1160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540041015,1,['install'],['installs']
Deployability,"> The right syntax is the following:; > ; > ```c++; > const auto visualHaptionDOFSPtr = sofa::core::objectmodel::New<sofa::component::statecontainer::MechanicalObject<sofa::defaulttype::Rigid3dTypes>>();; > visualHaptionDOF = visualHaptionDOFSPtr.get();; > nodeHaptionVisual->addObject(visualHaptionDOFSPtr);; > visualHaptionDOF->name.setValue(""rigidDOF"");; > ```; > ; > Note that this plugin has not been maintained for a long time. You should expect some changes in order to make it work. Here are some changes I made today to fix the configuration: #4338. But it does not fix the compilation.; > ; > If you succeed to make it work, a pull request would be very welcome ;). We are in the process of adapting the sofa22.12 plugin for homebrew devices, with reference to the Haptic plugin. No problem of course, I'll commit our code as soon as it's aligned and tested.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1841943965:537,configurat,configuration,537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1841943965,1,['configurat'],['configuration']
Deployability,"> This change makes all tests using the ConstantForceField fail due to a bug in SingleStateAccessor solved in #4917 . To solve the tests, merge #4917 first and rebase. Then, the PR should be fine. #4917 has been integrated (not rebased due to anterior conflicts) and there are still errors because of ; `No input force has been set. Please define one of both Data: forces or totalForce` 🥲. I guess there is an error of logics (if, else, etc) somewhere",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4918#issuecomment-2297674122:212,integrat,integrated,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4918#issuecomment-2297674122,1,['integrat'],['integrated']
Deployability,"> This is breaking, right @fredroy ?. Breaking in term of user configuration, yes ; as the cmake option names changed 🫤",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2974#issuecomment-1143218000:63,configurat,configuration,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2974#issuecomment-1143218000,1,['configurat'],['configuration']
Deployability,"> Update SofaMacros.cmake by setting the policy CMP0057 NEW for supporting the IN_LIST operator of if().; > . Thanks @olivier-goury! Which version of CMake do you have?; Since this policy was introduced in 3.3 and SOFA required 3.12 minimum according to what I've seen in the main CMakeLists of sofa, I don't see how this can cause problems. Maybe the policy should be set elsewhere though, like in the main CMakeLists.txt? @guparan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677718305:2,Update,Update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677718305,1,['Update'],['Update']
Deployability,"> Updates: I just tried it once more, the caduceus scene now works well for me, I can pick the snake using the mouse with bilaterial now. I will switch to my branch and test it with my scene file now. Ah that is good to know 👍 Keep us in touch !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976821950:2,Update,Updates,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976821950,1,['Update'],['Updates']
Deployability,"> You described the usual workflow, but in this case it was not respected. The features should have been disabled in v22.06.; Before the release we discussed during a sofadevmeeting that it was not wise to disable the features at release time. The final agreement was on the ""timing"" of action (before or after the release) and not about the conformance to the three step workflow (deprecate-disable-remove) we have. . A lot of people don't read warning(deprecation) messages and only fix their code base when it does not compile I think we should stick to the workflow.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441:137,release,release,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3265#issuecomment-1239328441,3,['release'],['release']
Deployability,"> You may add a consistency check if the given path is actually a dir when it is supposed to be. I'm ok with the rest of the code. I've updated the code to check for path types according to isDirectory.; I also propagated the mechanism to DataFileNameVectors (if one of the paths in the vector is not of the right type, I simply set it to """". Dunno if thats the right way but it seems right)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1407#issuecomment-639434209:136,update,updated,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1407#issuecomment-639434209,1,['update'],['updated']
Deployability,"> `Actually, I dont even know if anybody uses the GUI with the docker installation ` why so?; > don't we need the gui for the sofa? how did we launch sofa then?. Just a thought, as for me, I use docker to build SOFA but I execute the resulting compilation into the bare-metal system (out of docker)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315549538:70,install,installation,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315549538,1,['install'],['installation']
Deployability,"> any update on the #2870 @epernod ?. @hugtalbot now that #2869 has been merged, you can review the #2870, then this one will be the following...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1110916133:6,update,update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1110916133,1,['update'],['update']
Deployability,"> few CUDA scenes are failing, all with the messages `[ERROR] [CGLinearSolver(cGLinearSolver1)] Required data ""threshold"" has not been set. (Current value is 1e-05)` so I suppose these scenes must be updated too. @fredroy ok I did not catch them. Thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949364341:200,update,updated,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949364341,1,['update'],['updated']
Deployability,"> move generic addUpdateCallback inside MeshLoader parent class.; > ; > * position; > ; > * normals; > ; > * edges; > ; > * triangles; > ; > * quads; > etc.. see Data declared in MeshLoader. Hi @epernod ! After reviewing my code a bit more, I now remember why MeshLoader doesn't contain a ""generic"" update callback: there's no ""load"" method in MeshLoader, only a set of datafield definitions, then used by other components subclassing it. thus a callback function would not be able to perform any loading operation on input changes. I agree that it is sub-optimal to have to add a specific callback for each meshLoaders (although they have custom behaviors anyway) but as-is I don't see how to better the current system. Ideally, we could imagine having a pure virtual ""load"" method overridden in the subclasses, which would then be callable from a callbackEngine, but that would probably go out of the scope of this PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643164248:299,update,update,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643164248,1,['update'],['update']
Deployability,"> not possible to use a git submodule? or another mechanism to not store the lib internally in the repo ?. I agree !. Edit: even better, give the user the choice to use its own eigen install, like Qt.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-510035069:183,install,install,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-510035069,1,['install'],['install']
Deployability,"> shift + left click. Yes I did hold shift down all the time (and I have been using the bilaterial constraints with no issues in sofa v19.12.) . In my case the pink small square shows the same as in your screenshot, however the snake doesn't follow the mouse (such that two pink squares have large distance apart while i moving the mouse). Updates:; I just tried it once more, the caduceus scene now works well for me, I can pick the snake using the mouse with bilaterial now. I will switch to my branch and test it with my scene file now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976514790:340,Update,Updates,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976514790,1,['Update'],['Updates']
Deployability,"> we will switch to something close to c++17. Can't wait for this, let's hope MSVC 2019 will be released soon !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/908#issuecomment-458899387:96,release,released,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/908#issuecomment-458899387,1,['release'],['released']
Deployability,">; [WARNING] [ObjectFactory] Class already registered: EvalSurfaceDistance<Vec3d>; [WARNING] [ObjectFactory] Default template for class ExtraMonitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_c",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:31984,install,install,31984,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,">setSelectionFromPath({""/root/child1/object"", ""/root/child1/object2""}); ; //// This should be on the client side; SofaEditor::ID id = SofaEditor::getIdFromEditorName(""main"");; shared_ptr<SofaEditorState> s = SofaEditor::getState(id);; auto& v = s->getSelection(); ; ```. It is more common to have the client side in a PythonScriptController. To make that possible this module have a python binding which allows to write interesting editing interaction in python:; ```python; from SofaEditor import SofaEditor. def onDraw():; s = SofaEditor.getSelection(); drawSomethingSpecialForSelectedObject(s); ```. The python binding is different to the one we have yet into Sofa s it is made totally independently to SofaPython and is done using cython (http://cython.org/) ; (for which I'm curious to see how this will survive our CI). . Other notable things are that there is unittest either on the c++ side & python side and that the CMakeLists.txt are installing everything into a single the install location with the following structure: ; module/SofaEditor/SofaEditor.so; module/SofaEditor/python/SofaEditor/__init__.py; module/SofaEditor/python/SofaEditor/SofaEditor.so ; module/SofaEditor/examples; (I'm not sure it is a good idea but this is a kind of ""package"" but I think it is an interesting way to ship plugins). . I will open other PR to integrate this feature into runSofa and runSofa2. . For the records, I was hesitating between three designs. The first one consists in using the ""context/ExecParams"" to hold the editor state. As this context is passed to the components during the scenegraph traversal this would allows them to know the status of the editor. The second approach was using flexible messages/event transmitted through the scene graph. The third design was much simpler and simply consist of using a singleton so that it can be used everywhere there is a need to know the editor status. Between the three I made the decision to use the simplest approach (simpler to implement & s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/735:1361,install,installing,1361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/735,2,['install'],"['install', 'installing']"
Deployability,@BehnamBinesh can you update your pull-request ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/48#issuecomment-264161178:22,update,update,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/48#issuecomment-264161178,1,['update'],['update']
Deployability,"@ChristianDuriez ; One scene was crashing in SensableEmulation plugin : testOmniDriverEmu.scn ; I fixed it by adding the option : ```solveVelocityConstraintFirst=""true""```. I have no idea why actually! Could you give some insight?. I fixed some added warnings, let me know if this was normal:; Note that : ; - in GenericConstraintSolver.cpp line 368 : none of the function parameter (cParams, res1 and res2) were unused.; - in GenericConstraintCorrection.cpp line 277 : the complianceFactor is not used. What appears really necessary, is to have some documentation on this constraint pipeline. This could be a good task for the STC#5 don't you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-390153258:584,pipeline,pipeline,584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-390153258,1,['pipeline'],['pipeline']
Deployability,@ErwanDouaille could you check (very shortly) the API of argument parser in this PR please? we would like to integrate it in v17.12 release ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/468#issuecomment-353009270:109,integrat,integrate,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/468#issuecomment-353009270,2,"['integrat', 'release']","['integrate', 'release']"
Deployability,"@ErwanDouaille your remark makes sense. ; There are several points to be aware of:; - installing a X server on the slaves will take time; - it may destabilize the build slave (?) (disc space, unforeseen problem running a GUI server on a headless machine,...); - and I agree: if we do it, the next step should be to test all existing GUIs",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360786622:86,install,installing,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360786622,1,['install'],['installing']
Deployability,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... 🧐😅",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:325,release,release,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917,3,['release'],['release']
Deployability,"@EulalieCoevoet is right, changing parameter without warning is bad ; @hugtalbot it is very easy, there is two options. One consist in adding some test in the init() function of the component to detect if the data is set or not by the user and provide the adequate message. The other is to add a dedicated rules in the SceneChecker at the following of: ; ```cpp. void SceneCheckAPIChange::installDefaultChangeSets(); {; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""BoxStiffSpringForceField"" ); msg_warning(o) << ""BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'"" ;; }) ;; ```. @fredroy Eulalie also report that there was some changes in the way shaders are pass to components and that old working behavior stopped working without warnings so adding warning in the same way would be nice (@EulalieCoevoet).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/338#issuecomment-334521674:389,install,installDefaultChangeSets,389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/338#issuecomment-334521674,1,['install'],['installDefaultChangeSets']
Deployability,"@EulalieCoevoet there is an issue with the test, do you have time within the 7 upcoming days to have a look at it ? either the test needs to be updated, or the code to be fixed. Let us know if you don't ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-365541425:144,update,updated,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-365541425,1,['update'],['updated']
Deployability,@FabienPean any update on this ?; still an issue ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2#issuecomment-298850791:16,update,update,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2#issuecomment-298850791,1,['update'],['update']
Deployability,@ThomasGosse & @hugtalbot about the nameing of DistanceGrid. The easy path:; - don't rename DistanceGridComponent . Intermediate path:; - rename DistanceGridComponent to DistanceField . The hard path (probably in a future PR if we want to):; - your component should be named DistanceGrid; - remove the alias 'DistanceGrid' on DistanceGridCollisionModel ; - update all the Scenes to use DistanceGridCollisionModel; - add a rules in the SceneChecker (see recent PR about it) that warns that for sofa version < 17.12 DistanceGrid have been changed.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/354#issuecomment-322049145:357,update,update,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/354#issuecomment-322049145,1,['update'],['update']
Deployability,"@Younesssss do you think:; - you still need to have Data<EigenMatrix> ? (it was not clear in our last sofa devmeeting); - if yes, could be nice to integrate what @jnbrunet said",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-886477819:147,integrat,integrate,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-886477819,1,['integrat'],['integrate']
Deployability,"@adagolodjo , I drop the official version, and use the brew install qt@5. When I compile in the Cmake-GUI. ; ERROR OCCURS:; CMake Error at Sofa/GUI/Qt/CMakeLists.txt:28 (message):; Sofa.GUI.Qt: Could not find either Qt5 or Qt6.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008:60,install,install,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371939008,1,['install'],['install']
Deployability,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:781,Release,Release,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,3,"['Install', 'Release', 'install']","['Install', 'Release', 'install']"
Deployability,"@alxbilger . In addition to have very component not relying anymore on a dependency to opengl should be moved to a generic module. ; I would suggest having a layer of compatibility/deprecation (possibly build on top of the generic module) to to tell users that scenes like:; ```console; RequiredPlugin(""Sofa.GL.Component"") ; OglModel(); OglGrid() ; ```; Are still working but displays nice guidance on how to update to more or less something of that kind:; ```console; RequiredPlugin(""Sofa.Components.Visual"") ; VisualModel() ; VisualGrid() ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1184124812:409,update,update,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1184124812,1,['update'],['update']
Deployability,"@alxbilger thanks for the carefull review, I integrated the requested changes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2976#issuecomment-1149852334:45,integrat,integrated,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2976#issuecomment-1149852334,1,['integrat'],['integrated']
Deployability,"@bakpaul I used your scene for benchmarks and updated the PR description accordingly. However, I don't observe the artefact your mention, even when going step by step.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640372331:46,update,updated,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640372331,1,['update'],['updated']
Deployability,"@bakpaul you were right, and it is fixed now in https://github.com/sofa-framework/sofa/pull/4138/commits/c349e111debbcb377c5bbb7ad68610c15f336c52. Here is my benchmark:. ```; CGLinearSolver template=""CompressedRowSparseMatrixMat3x3d"". [INFO] [BatchGUI] 1000 iterations done in 72.7944 s ( 13.7373 FPS). Steps Duration Statistics (in ms) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 40.29 110.35 72.73 8.91 72732.7 100 TOTAL; 1 0 1 40.29 110.32 72.73 8.91 72.73 100 .Simulation::animate; 2 0.01 1 0 0.07 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.03 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.02 0 0 0 0 ..collision; 2 0.03 1 0 0.03 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.07 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.03 0.01 0 0.01 0.01 ..accumulateMatrixDeriv; 2 0.04 1 40.07 109.99 72.48 8.91 72.48 99.65 ..solve; 3 0.04 1 40.07 109.98 72.47 8.90 72.47 99.65 ...Mechanical; 4 0.07 1 2.07 4.47 2.45 0.33 2.45 3.37 ....ComputeForce; 4 2.52 1 1.11 3.14 1.37 0.29 1.37 1.89 ....ComputeRHTerm; 4 3.89 1 34.04 71.94 36.80 2.11 36.80 50.60 ....MBKBuild; 5 3.90 1 34.03 71.91 36.79 2.11 36.79 50.58 .....CG-setSystemMBKMatrix; 6 3.90 1 0.03 0.21 0.04 0.01 0.04 0.05 ......getContributors; 6 3.94 1 0.02 0.17 0.02 0.01 0.02 0.03 ......buildMappingGraph; 6 3.96 1 0.25 2.56 0.72 0.17 0.72 0.98 ......InitializeSystem; 7 3.97 1 0.06 1.35 0.36 0.10 0.36 0.50 .......resizeSystem; 7 4.33 1 0.01 1.22 0.32 0.08 0.32 0.44 .......clearSystem; 7 4.65 1 0.02 0.27 0.03 0.01 0.03 0.04 .......initializeLocalMatrices; 6 4.68 1 33.38 71.55 36 2.08 36 49.49 ......AssembleSystem; 7 4.68 1 33.35 49.36 35.94 1.80 35.94 49.41 .......buildMatrices; 8 4.68 1 32.79 49.09 35.44 1.78 35.44 48.72 ........buildStiffness; 8 40.13 1 0.25 1.33 0.49 0.12 0.49 0.67 ........buildMass; 8 40.61 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 40.62 1 0 0.02 0 0 0 0 ........buildGeometri",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:591,Update,UpdateInternalDataVisitor,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532,1,['Update'],['UpdateInternalDataVisitor']
Deployability,@bcarrez there is an error with centos. Does all boost libraries are installed on it ? ; https://ci.inria.fr/sofa-ci/job/centos_clang-3.4_options/1807/console. Thanks for helping :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/513#issuecomment-346374716:69,install,installed,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/513#issuecomment-346374716,1,['install'],['installed']
Deployability,@courtecuisse maybe? interested in such an update?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1169738382:43,update,update,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1169738382,1,['update'],['update']
Deployability,"@damienmarchal , discussions during the SOFA-dev meeting lead to a question over the developed design and your opinion is needed. . The problem was that some scenes tests where crashing at exit. This is due to the SofaPython3 cache (`s_objectcache` there https://github.com/sofa-framework/SofaPython3/blob/1b5d271aa21df06c4c5ab75599e364adb0c1e9be/Plugin/src/SofaPython3/DataHelper.cpp#L252C1-L252C73) . The problem was that this is a static object containing python objects and is thus cleaned at the very end of the program exit, after the python interpreter, which is not authorized. . To fix it, following [pybind11 suggestions](https://pybind11.readthedocs.io/en/stable/advanced/misc.html) I've added a member to the module Sofa.Core that insured that the cleanup is called while the interpreter is still alive (see the PR https://github.com/sofa-framework/SofaPython3/pull/425). But is was not enough because the interpreter is not cleaned correctly either : the static method ""Release"" of SofaPython3, in charge of cleaning up python and deleting the interpreter was never called when launching scene in runSofa. . This lead to the need of cleaning up *explicitly* the plugin before exiting the main function. This design was not liked by every dev, some wanting a Raii-like cleanup, in the destructor of some member, which is in my mind not possible because the interpreter instance is static in the SofaPython3 plugin and thus we have no guaranty that it would not be deleted before any other static member.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216:983,Release,Release,983,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216,1,['Release'],['Release']
Deployability,"@damienmarchal : what you are asking is answered in the PR description, and in my comment above, explaining that now everyone will know if they need to update their code at compile-time, and decide what to do based on what I wrote. Anything else is needed ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311009550:152,update,update,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311009550,1,['update'],['update']
Deployability,"@damienmarchal @epernod, Taking @sescaida's comment into account, I tried to create an example showing the undesirable behavior related to the cleanDirty() call, unsuccessfully.; The comments for the sofa::core::DataEngine class in Sofa are very clear about the order in which the update() method should be implemented: first call update / getValue / updateIfDirty on your *inputs*, then call cleanDirty, then call setValue on your outputs. I have had issues in the past related to this specific cleanDirty() method, but for some reason I can't reproduce it. ; Does any of you understood the problem enough to create a small example causing the issue? I'll keep digging on my side.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-414978348:281,update,update,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-414978348,3,['update'],"['update', 'updateIfDirty']"
Deployability,@damienmarchal you closed and then reopened the PR: Should I change something or is it mergable?; Shouldn't this kind of API-Breaking PRs be merged only on punctual releases?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-315045191:165,release,releases,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-315045191,1,['release'],['releases']
Deployability,@damienmarchal your branch is protected. Please open it so that we can update and merge your PR; :pray:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1291711016:71,update,update,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1291711016,1,['update'],['update']
Deployability,"@damienmarchal, I move your comment here; __________________________________; To @guparan, @bcarrez, @fredroy we need to organize the merging process for efficient and smooth integration of the pending PRs. My suggestion is to now merge in row allow the pr:fix that have the pr:fast-merge ( #444 #443 #442 #436 #414 #422). There is also #423 which is a fatty one for which I don't know if we have to do it now or after the integration of the coding spring pr. . The planning I suggest is:; - integrate #444 #443 #442 #436 #414 #422 (so we have a version before deprecation); - integrate the deprecation PR; - integrate the pluginization PRs . Where to do #423 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-334467312:175,integrat,integration,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-334467312,5,['integrat'],"['integrate', 'integration']"
Deployability,"@epernod it means the function `updateOnResize()` is called at init?; I fear that if we delete all DOFs during a simulation, when we add new DOFs again, `d_vertexMass` is set to zero therefore:; `d_totalMass.setValue(Real(newSize) * Real(d_vertexMass.getValue()));`. the total mass will always remain null",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721208137:32,update,updateOnResize,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151#issuecomment-1721208137,1,['update'],['updateOnResize']
Deployability,@epernod you integrated Guillaume's remark. @guparan fine for you? :traffic_light:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1359#issuecomment-631273444:13,integrat,integrated,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1359#issuecomment-631273444,1,['integrat'],['integrated']
Deployability,"@fjourdes if you have 2 sec, could you please give your feedback on the 2 lines change in the FreeAnimationLoop. ; It was done to fix a problem of position update between the mapped tool and the geomagic driver. See #1148 ; I don't have the knowledge to say if it is a real fix or if it will bring side effects. ; Thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1217#issuecomment-558076674:156,update,update,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1217#issuecomment-558076674,1,['update'],['update']
Deployability,@fredroy This is a very good question and definitely worth investigation. . To me this is related to a systematic problem we have regarding the mix between Data update through DDG or updates using toModel and fromModel. As far as can think about it is that BarycentricMapping should stop using the to and from model to compute barycentric topologies Maybe it should be refactored to be part of the Data depenency graph by adding few data field.; - control_rest_position // The vector of positions that are the control points of the interpolation space. ; - target_rest_position // The vector of positions that are embeded into interpolation space.; ; With these two it is clear that a change in the contrl_rest_position or target_rest_position should trigger the recomputation of barycentric coordinates.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1124734825:161,update,update,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1124734825,2,['update'],"['update', 'updates']"
Deployability,@fredroy thanks for the info... Here are the corresponding lines on windows: ; Adding Plugin CImgPlugin; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) . So we either need to install the imagemagick approach (I assume when CIMg cannot do something with a file it calls imagemagick) or to install the JPEG/TIFF libraries on windows/centos/macos. . I also wonder if CMakeLists.txt use conditionnal for JPEG why the tests are done unconditionally ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335465320:258,install,install,258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335465320,2,['install'],['install']
Deployability,"@fredroy thanks for the link. Also please correct me for the steps that will follow so that I will not kill myself:; 1. download https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip. 2. download dependencies; - Qt (>= 5.12.0) with Charts and WebEngine ; - OpenGL `sudo apt install libopengl0`; - Boost (>= 1.65.1) `sudo apt install libboost-all-dev`; - Python 3.8 + pip + numpy + scipy `sudo apt install python3.8-dev`; - Additional libraries: libPNG, libJPEG, libTIFF, Glew, Zlib `sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev`; - SOFA v20.06 and newer also need Eigen (>= 3.2.10) `sudo apt install libeigen3-dev`. 3. run ./bin/runSofa from https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip folder. There is no need for building in this case right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833:168,release,releases,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833,7,"['install', 'release']","['install', 'releases']"
Deployability,"@fredroy what do you think about the feedback from @fjourdes and @JeremieA ? . This topic interests me because it is connected with a usability issue I would like to see solved one day. . Suppose you are using ""BeamAdapter"". After some time you stop using ""BeamAdapter"" and one year later you (or a collegue/successor) want to reload the scene. It will not work and the user has no idea why the scene is not working anymore (he forgot he is no compiling the plugin anymore). . There is no such problem when there is ```<RequirePlugin name=""BeamAdapter"" url=""http://www.experimental.com/BeamAdapter.html""/>``` but people forgot them too often because they are 'silently' loaded by runSofa. . In that view, the autoload system, by facilitating people not to write the ```<RequiredPlugin>``` does not seems very appealling to me making the situation worse. . This is why I suggest to add to add a mechanism that warns users each time a scene is loaded and this scene contains component based on either autoloaded (or loaded from a configuration file) plugins.; A gentle reminder like that would be great: ; ```; Warning(root): This scene is using components (Beam) from the plugin 'BeamAdapter' but ; the plugin is not indicated as required in your scene. ; Please fix your scene by cut&pasting the following line at the beggining. ; <RequiredPlugin name=""BeamAdapter"" url=""http://www.experimental.com/BeamAdapter.html""/> ; ```. To implement such warning we probably needs the kind of manifesto file @fjourdes is proposing.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-299312257:1028,configurat,configuration,1028,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-299312257,1,['configurat'],['configuration']
Deployability,"@fredroy, @guparan In this PR just wanted to have the exception message related with the Image_test. Here it is: ; ```; unknown file; C++ exception with description ""[instance(0,0,0,0,0x0,non-shared)] CImg<unsigned char>::load(): Failed to recognize format of file '/Users/sofa/jenkins/workspace/mac_clang-3.4_options/pr/all/applications/plugins/image/image_test/scenes/lena.jpg'."" thrown in the test body.; ```. Any idea why ? Could it be the image CImg library compiled without jpg support or something like that ? . EDIT: Ok I fixed this one...it is because ImageMagick is not install on some machine and thus CImg does not handle jpg. @guparan (I have installed ImageMagick on sofa-centos). . EDIT2: I updated the mac. I remember that CImg need to install external tool on windows. But don't remember which one...maybe it was imagemagick also. @guparan would you have some time to dig into that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335427052:580,install,install,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335427052,4,"['install', 'update']","['install', 'installed', 'updated']"
Deployability,@guparan & @fredroy ; I think I fixed the test failure problem on centos & ubuntu by removing the ; add_target_library( gtest ) in Sofa_test.; Don't ask me why it remove the failure at release I don't know ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-343492858:185,release,release,185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-343492858,1,['release'],['release']
Deployability,@guparan : I think it is fine to rebase with the updated issofa_constraint_solving branch. I believe the conflicts come from the `override` keyword that was added in many places in the code recently. ; The integration branch [fjourdes:insimo_freemotion_integration](https://github.com/fjourdes/sofa/tree/insimo_freemotion_integration) will still work if someone wants want to try.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-337902578:49,update,updated,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-337902578,2,"['integrat', 'update']","['integration', 'updated']"
Deployability,"@guparan ; You are right, this branch should be our integration branch with all contribution from the coding sprint and when we fell it ready we will merge it into master (but not right now). I made a PR just to see if the removale of SOFA_DECL and typedef's file was viable. . Maybe this integration branch could also contains the PR #414 #424 and #425 so that we don't have to much workload after the sprint.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/429#issuecomment-333511427:52,integrat,integration,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/429#issuecomment-333511427,2,['integrat'],['integration']
Deployability,"@guparan @epernod , I just tested the compilation again (without my patch) and I realized that SOFACUDA_DOUBLE has nothing to do with this issue, I was wrong about that. On my setup, the compilation does not works regardless of the SOFACUDA_DOUBLE option. I'm a bit surprized it works on your side. Here are information on my setup:; OS => Fedora 29; NVCC version => V10.1.105; CMake variable SOFACUDA_ARCH=sm_60; CMake variable CUDA_VERSION=10.1. And here are the output errors from ninja:. ```; [1/96] Building NVCC (Device) object applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o; FAILED: applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o ; cd /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda && /usr/bin/cmake -E make_directory /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/. && /usr/bin/cmake -D verbose:BOOL=OFF -D build_configuration:STRING=Release -D generated_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:68,patch,patch,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,1,['patch'],['patch']
Deployability,"@guparan @hugtalbot @damienmarchal I think it's ready for the 17.12 release, as an experimental feature.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-353428621:68,release,release,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-353428621,1,['release'],['release']
Deployability,"@guparan I though about that but if you switch from release to debug I'm not sure cmake will always clean the lib repository to remove the non suffixed version. This is why I choose the ordering of operation. In debug load the _d and fallback to the normal. . @fjourdes its a pity that all those nice PR are waiting unmerged. . EDIT: I don't see a lot of work to do to have a ready PR (add some unit tests on the features added in RequiredPlugin and on PluginManager, use the msg_ api). Two hours of work maybe. . EDIT2: @guparan about the InSimo PR... we should merge the easy PRs from InSimo and don't wait the hard ones to be merged.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465#issuecomment-335823292:52,release,release,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465#issuecomment-335823292,1,['release'],['release']
Deployability,"@guparan I updated the PR branch by merging the master branch into it, and it seems to solve the issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501320793:11,update,updated,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501320793,1,['update'],['updated']
Deployability,@guparan thank you for pointing that.The problem is that the CI machine *_pr3 does not have the python module 'hjson' installed consequently psl tests failed. EDIT: So you can safely ignore them...& merge the PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357269105:118,install,installed,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357269105,1,['install'],['installed']
Deployability,"@guparan what's this macro for actually (sofa_auto_set_target_properties) ? apparently it is only used in external plugins (only SoftRobots.Inverse it seems...) maybe the macro should be removed, and SoftRobots.Inverse updated..?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677723575:219,update,updated,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1454#issuecomment-677723575,1,['update'],['updated']
Deployability,"@guparan you're right! We didn't see the problem because we ran the tests on the Release build and not on the Debug build. A segmentation fault occurs with the Debug build, dues to an assertion. @tgaugry currently investigates on the issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501707903:81,Release,Release,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501707903,1,['Release'],['Release']
Deployability,"@guparan, @Younesssss, @hugtalbot any volunteer to integrate the test in the normal test framework so we can merge this asap ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624093742:51,integrat,integrate,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624093742,1,['integrat'],['integrate']
Deployability,"@guparan, @hugtalbot ; I really would like to see new features for the 17.12 release and to me this is more important that having the 17.12 release released in 2017 ;) . So please @ErwanDouaille , @bcarrez (and me) please finish your work.; For those that have nearly finish work please make a PR in the WIP state so that we can see. . For the binary distribution... i think that the pre-build binaries may/should not include the experimental feature but at least the tagged version on the repository may have them. . EDIT: @fredroy the sofa from python integration should be also a nice addendum, but there is no PR yet.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/517#issuecomment-353024284:77,release,release,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/517#issuecomment-353024284,4,"['integrat', 'release']","['integration', 'release', 'released']"
Deployability,"@hdeling, @guparan, I think the idea would be to combine both the use of OptionsGroup with the wrapping of enums as described in the link Guillaume posted. Wouldn't something like this POC address your problem without manipulating strings from the C++?:. ```cpp; #include <sofa/helper/OptionsGroup.h>; #include <sofa/core/objectmodel/Data.h>. struct NumericalIntegrationMethod : public sofa::core::objectmodel::BaseObject; {; struct Method {; enum; {; One = 1,; Two,; Last; };; };. Data<sofa::helper::OptionsGroup> d_method;. NumericalIntegrationMethod(); : d_method(initData(&d_method, ""method"",; ""sets the chosen numerical integration method"")); {; sofa::helper::OptionsGroup* o = d_method.beginEdit();; o->setNames(2, ""One"", ""Two"");; o->setSelectedItem(Method::One);; d_method.endEdit();; }. unsigned method() { return d_method->getSelectedID(); }; void setMethod(unsigned m) { d_method->setSelectedItem(m); }; };. struct NewNumericalIntegrationMethod : public NumericalIntegrationMethod; {; struct Method : public NumericalIntegrationMethod::Method{; enum; {; Three = NumericalIntegrationMethod::Method::Last,; Last; };; };. NewNumericalIntegrationMethod(); {; sofa::helper::OptionsGroup* o = d_method.beginEdit();; o->setNbItems(NumericalIntegrationMethod::Method::Last + 1);; o->setItemName(3, ""Three"");; o->setSelectedItem(NewNumericalIntegrationMethod::Method::Three);; d_method.endEdit();; }. };. /*; /// From C++; NewNumericalIntegrationMethod method;; method->setMethod(NewNumericalIntegrationMethod::Method::Two);. # in Pyhton || XML:; <NewNumericalIntegrationMethod method=""Two"" />; */; ```. (I coded this quickly, didn't try nor compile it, but this should work I believe)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-474781683:625,integrat,integration,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-474781683,1,['integrat'],['integration']
Deployability,@hugtalbot I already give my opinion in #PR 330. ; And it is: please don't merge it now and give us time to find a smoother way of managing the API change. . I re-explain the situation: ; This PR add Python like serialization&deserialization ; - The de-serialization preserve backward compatibility. ; - The serizaliation is changing the behavior on how Sofa is serializing data. The new behavior is implemented in place of the old one and thus is breaking the API. This API exists since years in Sofa. It will thus cost time to fix & update external code-base. The situation is made worse because the API breaks is silent (ie the code will compile but not work as expected). Breaking the API is not mandatory to implement a python like serialization. So I strongly recommend to implement a non breaking solution as a transition... ; Alternative solutions I have in mind are:; - a cheap10 lines python approach based on repr (see previous response) (A PR with this would change two time less files and be a non breaking change).; - a full C++ version in the form of a getStringValueAsPython ; - a full C++ version in the form of an extra parameter to getStringValue; - ...other ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/332#issuecomment-318173945:535,update,update,535,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/332#issuecomment-318173945,1,['update'],['update']
Deployability,"@hugtalbot I fixed the test, is was not updated to handle the change between repr and str as well as the commit.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304#issuecomment-314798964:40,update,updated,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304#issuecomment-314798964,1,['update'],['updated']
Deployability,@hugtalbot In which release do we merge this PR?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1370738211:20,release,release,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1370738211,1,['release'],['release']
Deployability,@hugtalbot The code seems ok to me and fix test that are bugued. ; I vote for fast integration ASAP we have an all green dashboard.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/143#issuecomment-275706127:83,integrat,integration,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/143#issuecomment-275706127,1,['integrat'],['integration']
Deployability,"@hugtalbot Yes, It is related to QT configuration, and It's hard to build in MAC M2 Processor with. I tried to compile and install the qt with source code, but it is not adapted to my laptop. I hope the successful case can be provided if possible and I will follow it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698:36,configurat,configuration,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1302025698,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,@hugtalbot any update on the Data update callback?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-524784250:15,update,update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-524784250,2,['update'],['update']
Deployability,@hugtalbot any update on your suggestion for the method name?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2870#issuecomment-1118370772:15,update,update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2870#issuecomment-1118370772,1,['update'],['update']
Deployability,@hugtalbot will you update the regression references in an other PR ? 🙊. And there is scene test still failing on Python3 (ReadTheDocs_Example.py 😅),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1786372979:20,update,update,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1786372979,1,['update'],['update']
Deployability,"@hugtalbot you will need to update the regression file for collisionMultiple.scn, as the DefaultCollisionGroupManager seemed to have an impact in this one",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3104#issuecomment-1176961080:28,update,update,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3104#issuecomment-1176961080,1,['update'],['update']
Deployability,"@hugtalbot, the change seems to break 2 scene tests. Will you have time to check if they are false negative due to the BB change?. https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-670/CI_CONFIG=centos_clang-3.4,CI_PLUGINS=options,CI_TYPE=release/5/warnings3Result/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/670#issuecomment-400971635:247,release,release,247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/670#issuecomment-400971635,1,['release'],['release']
Deployability,@jjcasmar Do you still plan to update NBESolver? You said on Gitter it was not up-to-date.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-874192121:31,update,update,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-874192121,1,['update'],['update']
Deployability,"@jnbrunet Thanks for the explicit install tree, just what I needed :+1:; https://github.com/sofa-framework/SofaPython3/pull/83 should bring us that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-758099811:34,install,install,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-758099811,1,['install'],['install']
Deployability,"@jnbrunet To be clear, there are 2 optimizations in this solver: 1) optimization for diagonal masses, 2) multiop optimization.; I did not touch anything in the non-optimized multiop code. I changed the velocity input in the position update in the optimized multiop code. # Non-optimized multiop code. I did not change this code. ## Symplectic. ```; newVel = vec + acc * dt; newPos = pos + newVel * dt; ```. ## Non-Symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. # Optimized multiop code. ```cpp; ops_vel.second.emplace_back(vel.id(), 1.0);; ops_vel.second.emplace_back(acc.id(), dt);; ops_pos.second.emplace_back(pos.id(), 1.0);; ops_pos.second.emplace_back(d_symplectic.getValue() ? newVel.id() : vel.id(), dt);; ```; `ops_vel` is executed first if symplectic. `ops_pos` is executed first if non-symplectic. If I translate this code to formulas:. ## Symplectic. ```; newVel = vel + acc * dt; newPos = pos + newVel * dt; ```. ## Non-symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. This is exactly the same formulas than for the non-optimized code!; My change was on the line:; `ops_pos.second.emplace_back(d_symplectic.getValue() ? newVel.id() : vel.id(), dt);`; Before it was:; `ops_pos.second.emplace_back(vel.id(), dt);`. It would translate to:. ## Symplectic. ```; newVel = vel + acc * dt; newPos = pos + vel * dt <-- difference here with the non-optimized code; ```. ## Non-symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. # Conclusion. I believe that I fixed the multiop optimized symplectic version. Both optimized and non-optimized codes are now consistent. Note that this makes a difference only for the FreeMotion animation loops. @jnbrunet Regarding your math problem, I don't understand it. I don't see where you see a difference with SOFA. If you agree, I think we can merge this PR because it does not change the behavior (except for the fix). If there are some maths problems, it can probably be tackled later. What",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-867677866:233,update,update,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-867677866,1,['update'],['update']
Deployability,@jnbrunet a list of accepted types would be cool indeed. Maybe by adding a method+binding in the factory class that returns a list of all its keys in its registry? Though maybe more appropriate in a separate PR.; I'll update the doc accordingly though!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/740#issuecomment-409890732:218,update,update,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/740#issuecomment-409890732,1,['update'],['update']
Deployability,"@jnbrunet have you taken a look at this PR?. Latest proposal of Damien is to have:; - Unique identifier for topologies (as Datafield); - Create QuadratureMethod component (datafield method, datafield topology → datafield function pointer with integration points)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-600522140:243,integrat,integration,243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-600522140,1,['integrat'],['integration']
Deployability,"@jnbrunet thanks for the code. I'm wondering if canCreate is the right stage to do that because if the link can't be resolved, your FF will not be created at all. But in a ideal SOFA world, if the component is set to invalid because the link is not working you could update it in your gui, solve the link which will act like a Data and update the component. I'm also wondering if the mstate link is set in your scene, is it already usable in the ForceField constructor ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1506#issuecomment-705099048:267,update,update,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1506#issuecomment-705099048,2,['update'],['update']
Deployability,"@jnbrunet, @fredroy I updated the PR, . can you give me feedback on the implementation of error/warning promotion (in config.in.h)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1639#issuecomment-737198485:22,update,updated,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1639#issuecomment-737198485,1,['update'],['updated']
Deployability,@marques-bruno Please update/enhance the Doxygen for both methods :wink:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/822#issuecomment-438601602:22,update,update,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/822#issuecomment-438601602,1,['update'],['update']
Deployability,"@marques-bruno: can you provide examples for the behavior you describe? (maybe add them to the PR) I don't have as much experience with the update-on-demand feature. Pertaining to the discussion in PR#629 (should we use on-demand updating or events) I would also appreciate the opinion of the others. The pros of on-demand updating is consistency with the DataEngines, the pros of the event-based approach is simplicity. @marques-bruno has been raising the issue of code maintainability regarding the update-on-demand feature of DataEngines for a while and this PR seems a good opportunity to decide what the developments in the future could be. For me the questions are: Refactor the implementation? Document the behavior in a more understandable way? Simplify/Change behavior alltogether?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413554139:140,update,update-on-demand,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413554139,2,['update'],['update-on-demand']
Deployability,"@matthieu-nesme . The version is very simple...; In the constructor we:; - record the already loaded modules, ; - install a hook on the import function. . At each subsequent import we record in a second list the imported modules. ; Then when calling uninstall we remove from python module cache the one that are in this second list...(thus returning to the previous loading state). This force python to reload them next time it sees an import. About the re-init... ; Do you know how to be notified when the scene is going to be destructed and if there is no...is this something you could implement easily ? . EDIT: I cleaned the branch for a PR once the reinit stuff cleared.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/193#issuecomment-285083694:114,install,install,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/193#issuecomment-285083694,1,['install'],['install']
Deployability,@matthieu-nesme ; I'm glad you are going to a per-scene approach which is really so much better than the per-script one. ; I actually commited similar code few hours ago in my initial PR :) . The auto-install of the component is more a matter of taste on which is not a big deal to me. . To be more robust I suggest you to enforce that the autoreload component ; to be added at the scene root (easier to see if it is there) and to check that only a single component can be added per scene. . EDIT: and +1 for not hooking the import anymore.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286445017:201,install,install,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286445017,1,['install'],['install']
Deployability,@matthieu-nesme and @JeremieA many thanks for the quick updates. . @guparan I see you made a commit (15 May) about SofaCUDA. Does it means this pending issue is solved and we can merge or is there still something to do ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311022429:56,update,updates,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311022429,1,['update'],['updates']
Deployability,"@matthieu-nesme, @EulalieCoevoet . I'm trying to fix the test failure in FixConstraint_test when compiled in debug. The failure is related to SparseLDLSolver that do things like that: ; ```cpp; METIS_NodeND(&n, &xadj[0],&adj[0], NULL, NULL, perm,invperm);; ``` ; Compiling the test in debug activates the vector bound checking which rise the error message as [0] on an empty vector does not make sense. This error message makes the test fails. . Compiling the test in release mode de-activates the vector bound checking so the test is not failling anymore. But adj.size() is still zero and adj[0] is still used. According to the standard this is undefined behavior so we need to fix that. . I made a fix in which I set a minimal size of one to the faulty vectors.... but I'm not sure that having an empty adj vector is not an indication of a deeper problem (or the manifestation of a specific case) and that the right fix should to properly handle this case instead of playing with memory array to ""hide"" it. . As you have experience with solvers any feedback would be appreciated.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305611180:468,release,release,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305611180,1,['release'],['release']
Deployability,"@matthieu-nesme: After STC#3 discussions, could you update your review?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-292109219:52,update,update,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-292109219,2,['update'],['update']
Deployability,"@maxime-tournier ; I currently have tests with this pattern:; {""'aString'.join('[ ]')"", ""[aString aString]""} ; which succeed. . I also have added this one:; {""' '.join(['AA', 'BB', 'CC'])"", ""AA BB CC""}, ; Which also succeed. . I didn't managed to build something that fails...if you find some..please report so we can improve & update the tests. EDIT: I'm more concerned about the automatic conversion to getPath/getLinkPath for which I'm not sure we can find a clean semantic. I suggest we let that for a different PR...because this out of the scope of the PR initially submitted by Felix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307760074:328,update,update,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307760074,1,['update'],['update']
Deployability,"@maxime-tournier just to make things clear for me. ; You use an intermediate data structure to store the matrix values ( wherever they are coming from, mapping forcefield... ) and the mask data structure store the sparsity pattern. Since Flexible and Compliant rely extensively on the `Mapping` API, (conceptually everything can be broken down in a combination of application + linearisation around a given configuration) the only requirement in that case is to be able to express the sparsity pattern of each mapping, am I correct ? . That being said I agree that it would be ideal to have an intermediate data structure to supersede the `BaseMatrix` API, to fetch the matrix data ~~( and maybe the sparsity pattern at the same time ? )~~ that could fit with any linear algebra library with minimal overhead.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292484429:407,configurat,configuration,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292484429,1,['configurat'],['configuration']
Deployability,@olivier-goury I'm coming back to this PR as it is now crashing in the precise case where points are removed.; For example at step N we remove all the points and now d_X0 is empty but we need to update the engine to clean output Data which need to be empty now as well (but where not at step N-1). I'm checking the code of BoxROI::doUpdate and I don't see where it could crash if d_X0 was not yet set at init.; Normally no loop is done if the vector is empty.; Could you detail me where it crashes.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1031#issuecomment-493378115:195,update,update,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1031#issuecomment-493378115,1,['update'],['update']
Deployability,"@olivier-roussel thanks for the conda test and the feedbacks 👍; You should have made suggestions and/or make a PR on my branch, as I cannot credit you your patches 😵",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922632664:156,patch,patches,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922632664,1,['patch'],['patches']
Deployability,"@rgao15 I've just compiled v21.06 (patched with the commit from #2495) and the picking with the BilateralConstraint is working well (while doing the picking with Bilaterals with the caduceus scene).; By curiosity, when you try to pick, do you do shift + left click ? (left mouse operation is only activated when shifting while left-click); <img src=""https://user-images.githubusercontent.com/11028016/143003169-7a166a56-e72d-4950-b078-2790ec836ab1.png"" width=""500"" >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976347175:35,patch,patched,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976347175,1,['patch'],['patched']
Deployability,"@sescaida I just took a look at the code of the ScriptDataEngine class.; You are partially right, the current implementation is the following:. `// Ok, so in the end we're stuck with using the AnimationBeginEvent? (20.02.2018, sescaida); void PythonScriptDataEngine::handleEvent(Event *event); {; if (AnimateBeginEvent::checkEventType(event)); {; setDirtyValue();; update();; }; }`; Here clearly, update is called everytime a AnimateBegin event is sent to the component. If it were a ""normal component"" (i.e. if it were a BaseObject-based component) that would be the only moment that update() method would be called. But the ScriptDataEngine also inherits core::DataEngine.; This is what I talked about during my presentation at the STC#5:; DataEngine both inherits from DDGNode & BaseObject. The update function is ""manually called"" from handleEvent, but it actually shouldn't be, because this is redundant to how DataEngine works, which is having its update() method called **when and only when** a component, taking as an input the output data of that engine, calls getValue() on that data, WHILE any of the engine's INPUTS are flagged dirty. . So basically, while some people call update() in their handleEvent method, this should never be done, except in some (quite) twisted cases.; Btw, it took me quite some time to understand that.. few months ago, all my engines were calling update() in handleEvent, and I had a lot of problems because of that.. ^^. Technically, in the case of the scriptDataEngine, if you remove entirely the call to the update function in handleEvent, and if your dependency graph is well built, you should get the behavior you want",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407008370:365,update,update,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407008370,8,['update'],['update']
Deployability,"@sescaida Thanks for the review; The reason why I didn't add examples for this PR is because the current examples themselves, without any modification, demonstrate that it works as-is, thus showing that the call to update() in the handleEvent method was redundant with the default DDGNode's update mechanism. Basically, if your scene is well created (links are properly made between datafields & data are correctly accessed by components lower in the scene graph), everything should work just as well as before. The only difference I would say, is that the user has the hand over the cleanDirty() method, which allows him to fix use cases where a read acces is performed on an input, after setting an output's value has been set, in update(). as for whether it is a good idea to keep that system, I must say, that I agree with you, as we discussed before: Bringing the complexity of the DDGNode's mechanism in Python might be something we want to avoid.; Although, I think that the good approach to fight this issue would rather be to solve the problem on the C++ side (simplifying the Data-Update mechanism) than to diverge from it by simplifying the Python process.; I think @damienmarchal woul be the best placed to give us a feedback on this question, maybe? (When he'll be back from his holidays of course!)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413560022:215,update,update,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413560022,4,"['Update', 'update']","['Update', 'update']"
Deployability,"@sescaida as a reply to you previous comment:. - I think we should indeed remove the call to update from handleEvent, in the dataEngine. Although there are some twisted cases where it is necessary, it is not how it was designed initially I believe. I'd like @damienmarchal 's input on that, though.; Concerning the default value in addNewOutput, I totally agree with you. The only reason I kept it is because it would have even more impact on the error handling codebase in Sofa, which currently forces the existence of a ""value"" field to guarantee that the datatype can be deduced (which we are bypassing for outputs..); Overall, I think there's a decent amount of cleaning to do in this PR before it can be merged, including removing all the warnings that appear because we're working our way around the ""standard"" way to build datafields.; - I also agree with you that we need some reviews on this PR, and maybe also split it in multiple PRs for simpler reviewing. Things are getting mixed up now, between; - Populating the PSDE factory; - Deriving inputs / outputs; - passing datafields through createObject; - ...; I'll pass the PR to to_review and we can take a look at it on monday ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407791294:93,update,update,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407791294,1,['update'],['update']
Deployability,"@sescaida, I just discovered a syntax, that exists since, well ... ever, and makes this whole PR completely useless....:. ```py; import Sofa; import os. class PyEng(Sofa.PythonScriptDataEngine):; def __init__(self, ctx, name, positions):; self.name = name; self.addNewInput('positions', datatype=""vector<Vec3d>"", value=positions, help=""test""); self.addNewOutput('average', datatype=""Vec3d"", help=""average""); ; def parse(self, arg):; pass; ; def init(self):; 	pass; ; def update(self):; value = [0, 0, 0]; for pos in self.positions:; value[0] += pos[0]; value[1] += pos[1]; value[2] += pos[2]; value[0] /= len(self.positions); value[1] /= len(self.positions); value[2] /= len(self.positions); self.cleanDirty(); self.average = [[-value[0],-value[1],-value[2]]]; pass. def createScene(rootNode):; loader = rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); psde = PyEng(rootNode, name=""PSDE"", positions=loader.findData('position').getLinkPath()); rootNode.createObject('TransformEngine', name='TE', input_position=""@loader.position"", translation=psde.findData('average').getLinkPath()); rootNode.createObject('OglModel', name=""visu"", position=""@TE.output_position"", triangles=""@loader.triangles"",; color=""1 0 0 1""); ```. With this syntax, I can create my engines definition once, and create as many as I want, on the fly, with any parameter I want for my input fields. It's actually even better, because:; - I don't have to create inputs with the fields I pass to the constructor. It could be simple data (addNewData vs addNewInput); - Construction of datafields is more explicit, thus less error-prone; - No need to go search for a decorator function somewhere in SofaPython, or to declare a dictionary of default arguments, everything is performed in the constructor. So, yeah, this PR is now virtually useless.; There's one thing I don't like with this syntax though, it's that the creation of the object is performed at the same time as it is assigned to the scene gra",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442:471,update,update,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442,1,['update'],['update']
Deployability,"@sescaida, you can find [here](https://github.com/marques-bruno/snippets/blob/master/testDataEngine.cpp) a test code for Sofa showing what happens when cleanDirty is called at the wrong moment. After testing a little bit the engines, I noticed that the only case where it wouldn't work (to have all the data updates & cleanDirty() before calling the update() method would be in the very unlikely case where the update() method would fetch an earlier engine in the dependency graph through getContext, and set its output value. this is very unlikely, which means that, apart for some performance reasons, I don't see why it would be important to bind the cleanDirty() method in python. Since python is much slower anyway, I think this PR does not make much sense anymore. although, I still insist on removing the call to update() from handleEvent, since it is redundant with its normal on-demand calling mechanism. :) I'll update the PR soon!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372:308,update,updates,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372,5,['update'],"['update', 'updates']"
Deployability,@sofa-framework/consortium-staff hotfix for 22.06?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1229231608:33,hotfix,hotfix,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1229231608,1,['hotfix'],['hotfix']
Deployability,@sofa-framework/consortium-staff hotfix in 22.06?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3240#issuecomment-1227083514:33,hotfix,hotfix,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3240#issuecomment-1227083514,1,['hotfix'],['hotfix']
Deployability,@thomas-lemaire currently I see that some components are doing; ```cpp; if(printLog) sout << ; ```; While the 'sout' is already checking the printLog which is redundant. This is what I'm refering as mis-usagse. To me the cleaning consist in defining what is the right pattern to employ and this may (or not) result in removing the if(printLog) from the component and replace them with the use of 'sout'. . About the link with PR106. With the PR a dedicated message handler has to be installed in the application or the scene to activate loggin into component... this is done with the following code ; ```cpp; MessageDispatcher::addHandler(&MainPerComponentLoggingMessageHandler::getInstance()) ;; ```; But currently this is not done in runSofa or any other app and the messages are not added to the log. This is why I'm saying the PR is independent and is without side effect. . When the printLog expected behavior is clear the current log 'to the big string' should be removed and replaced by installing the logging proposed in PR106.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276932662:483,install,installed,483,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276932662,2,['install'],"['installed', 'installing']"
Deployability,"@untereiner thank for the question. . What I would dream of some kind of consensus about how we proceed and I'm totally open for suggestions. I see the goods of making smooth transition in a code base (user of the code base will praise you) and the bad of maintaining the transitional package. On my side... I would say: ; - we remove the transitional packages after 1 year and at each Sofa release we make their use more and more ""verbose"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328465144:391,release,release,391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328465144,1,['release'],['release']
Deployability,"A bug has been detected when creating and deleting component using TopologyHandler during the simulation. ### Current Status; Right now in the code, components like FEM, Constraints, etc... are creating TopologyData and at init stage, those TopologyData are creating a TopologyHandler to support TopologicalChanges (only if the component is linked with a dynamic topology container).; The actual design is:; 1. Create the TopologyHandler at component init (internally through the TopologyData creation). ; 2. The TopologyHandler register itselft into the TopologyContainer to be able to receive topological events.; 3. When the simulation graph is destroyed, TopologyHandler is deleted and TopologyContainer is cleared. ### Limitation/Bug; Scenario like using the mouse picking is creating a temporary Node with springFF or attachedConstraint component which is creating a TopologyHandler. When the mouse is released the Node is destroyed, deleting the components and the TopologyHandler as well. ; But the TopologyHandler is not properly removed from the dynamic topologyContainer list of TopologyHandler. This is why in issue #3370 the scene crash as soon as a vertex is removed because the TopologyContainer is sending the POINTREMOVED event to all topologyHandler registered. Including the deleted one from the mouse attached constraint. The pointer to the topologyHandler is not null but pointed to a deleted object. ### PR changes description; This PR and the PR #3271 (included in this on) are introducing a mechanism to better register and unregister a TopologyHandler from the TopologyContainer.; 1. register is done at creation of the TopologyHandler; 2. If TopologyHandler has well been added to the list manged by the Container, a internal bool m_isRegisterd is set to true.; 3. When the TopologyHandler is deleted (meaning its component owner is deleted). If m_isRegisterd == true, the TopologyHandler will unregister itself.; 4. When the TopologyContainer is deleted, it will go through ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3369:908,release,released,908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369,1,['release'],['released']
Deployability,"A component can be included in multiple maps (`uncreatableComponents`, `dealiasedComponents`, ` movedComponents`). If it is the case, only one was picked and the others were ignored. This PR processes all the maps to inform the user. Example of output:. ```; The component 'DefaultPipeline' cannot be found in the factory. ; Several reasons are possible:; 1) This component has been MOVED from SofaBaseCollision to Sofa.Component.Collision.Detection.Algorithm since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Collision.Detection.Algorithm'/> ; 2) This alias for the component CollisionPipeline was removed in SOFA v24.12.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5074:529,update,update,529,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5074,1,['update'],['update']
Deployability,"A directory that was recently removed is still mentioned in the cmake build files, so installation fails (compilation is fine). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/470:86,install,installation,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/470,1,['install'],['installation']
Deployability,"A first implementation is proposed in PR #276. This work aims at handling sparse matrices in all components like mapping, forcefields and so on. It is based on the existing functions applyJ and applyJT. The idea is to handle sparse matrices at the solver level, and could find the information of sparsity within forcefield (addKToMatrix for assembled cases). Work remains todo. The PR adds a new function into the MechanicalObject (buildIdentityBlocksInJacobian), but this is a work in progress to make a proof of concept. PR will therefore be merged (after 17.06) but a mention “experimental” must be first added. Since the implementation and the concept is open to discussion while a POC is implemented, it would be nice to have more updates in the associated GitHub discussion. A final POC will be presented at the STC#4. It looks to me that the most important aspect is to **discuss here technical aspect and the global implementation, and keep people updated of the progress**. @JeremieA I add you since the topic was of interest for you as well. Thank you all for discussing it today, let's carry on the work! Nice work @olivier-goury",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-306769498:736,update,updates,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-306769498,2,['update'],"['updated', 'updates']"
Deployability,A first version of SOFA-NG has been released in https://github.com/sofa-framework/sofa-minimal-poc; Please note that this is an experimental work.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/245#issuecomment-351047830:36,release,released,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/245#issuecomment-351047830,1,['release'],['released']
Deployability,A list of tasks to do:; 1. remove SofaTest use in Sofa*_test (first in the most important modules SofaBase* and then SofaCommon and ...); 2. dispatch the existing tests in the SofaTest. I suppose 1) will involve to add/modify the new Sofa.Testing API.; This post will surely be updated heavily soon....,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1885#issuecomment-852823164:278,update,updated,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885#issuecomment-852823164,1,['update'],['updated']
Deployability,"A little update:; - added `wrap/unwrap` mechanism: there are wrapping traits in `PythonToSofa.inl` specifying wrapped type (`PySPtr` or `PyPtr`) for a given type (defaults to `PyPtr`); - wrapping traits specializations for `Base`, `BaseData` and `BaseLink`-derived classes. `Base`-derived classes are wrapped as `PySPtr<Base>`, `BaseData`-derived as `PyPtr<BaseData>`, etc. this should cover most cases.; - `unwrap<T>(py_obj)` first recovers the wrapped type and the object pointer, then `dynamic_casts<T*>` ; - `unwrap_self<T>(py_obj)` does the same but with `static_cast` (this is for `self` arguments, python enforces that `self` is an instance of this type). Extension code should look like this now:. ```c++; Node* node = sofa::py::unwrap_self<Node>(self);; BaseObject* obj = sofa::py::unwrap<BaseObject>(py_obj); if(!obj) { ... }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304#issuecomment-310324600:9,update,update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304#issuecomment-310324600,1,['update'],['update']
Deployability,"A long PR but it is actually divided in 3 parts. A link is provided for each part pointing to a comparison with the previous part. # 1. Introduction of the plugin. A new plugin is introduced to welcome new components. It is enabled by default.; https://github.com/sofa-framework/sofa/compare/master...alxbilger:sofamatrix?expand=1. The plugin may deserve a better name. # 2. Move CImgPlugin features on matrices. I introduced features related to matrices in CImgPlugin in a previous PR. It did not make sense. It is preferable to have them in a higher-level plugin, so I moved them in SofaMatrix.; https://github.com/alxbilger/sofa/compare/sofamatrix...sofamatrix_cimg. # 3. Introduction of a component to visualize the matrix. A component is introduced. It gets the matrix from the linear system and convert it to an bitmap to visualize it directly in the GUI.; https://github.com/alxbilger/sofa/compare/sofamatrix_cimg...sofamatrix_gui. ![image](https://user-images.githubusercontent.com/10572752/144421772-5676f6e8-12af-4468-8bec-24ea7856b00f.png). # To do:. - [x] Expand the bitmap in height; - [ ] Update the bitmap when the image changes during the simulation; - [ ] Do we move `GlobalSystemMatrixExporter` into SofaMatrix?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2517:1103,Update,Update,1103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2517,1,['Update'],['Update']
Deployability,A lot of regression tests are failing. Maybe their references should be updated?; @hugtalbot,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-910400785:72,update,updated,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-910400785,1,['update'],['updated']
Deployability,"A mechanism of component state is now available while it is still unused and the API is not spread over the code base. We could work on generalizing it : delegating all functions (init, addForce etc) to make sure it uses the componentState.; Then, internal update of component would be possible and check in the scene graph of each component would allow to detect issues and prevent from crashes. Initially, this issue was only focused on ""Deprecate the doUpdateInternal"" : this API of internal update in BaseObjects should be removed and callbacks should be spread instead. As noticed in #1979",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2005:257,update,update,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005,2,['update'],['update']
Deployability,A more generic was asked in #3592 all scenes are usually using template=Vec3d we should use the SReal version template=Vec3 allowing us to test the float cases. Is float really useful?. A CI (nightly?) should test the float configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559:224,configurat,configuration,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559,1,['configurat'],['configuration']
Deployability,"A note for the dev meeting: would be nice to find a way to removing the [warning](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_clang,CI_PLUGINS=default,CI_TYPE=release/3822/FullBuildWarnings-Clang/folder.-1602702822/source.13f0211b-14a0-4dcf-afd8-994d4c6377ec/#114) related to this class . _**SpringForceField.h:114**_; ```; field 'd_springsIndices' is uninitialized when used here; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1236085171:194,release,release,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1236085171,1,['release'],['release']
Deployability,"A quick summary of this problem. . 1) There is multiple variation of this problem and It impact several people at Defrost.; But the underlying idea is that we are using the executatable location to deduce the plugin & data location (normally EXEC_LOC/../bin or EXEC_LOC/../share). The problem is that when building with recent VS, VS adds and extra directory (Release or Debug) so the ""../"" in ""../bin"" is ""not enough"" to go to the sofa root install directory which result in searching for plugins in PATH/bin/bin instead of PATH/bin and PATH/bin/share instead of PATH/share. 2) The problem is specific to people that are using Visual Studio build solution for their builds as VS adds Release/Debug subdirectory to the build directory. The problem was probably existing before but it was made very obvious since PR #518 & PR #502 as now we always use the relative location to the executable to find the files like plugins or resoures. 3) I assume that the problem was not visible in our CI because for windows builds we are using Ninja with VC compiler; as we don't use a real VS solution the Release/Debug extra path were not added. . 4) Erwan is working on a fix, to force CMake not to emit the extra subdirectories when using VS solution, it is currently in a private branch : ). @ErwanDouaille please complete the summary is needed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561#issuecomment-358042600:360,Release,Release,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561#issuecomment-358042600,4,"['Release', 'install']","['Release', 'install']"
Deployability,"A user can chose in the scene to update the bounding box or not. It is no longer a compile-time selection. In InextensiblePendulum.scn, the second pendulum explodes. An update of the bbox would adapt to the exploded object. The bbox is so large that the first pendulum is no longer visible. It may lead the user to think that the scene is not working properly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3080:33,update,update,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3080,2,['update'],['update']
Deployability,A word about organization: ; - we will work by groups of 4; - we will use specific branches (ignored by the CI) on this repository for our commits + integration branches (built by the CI); - I will create a team to handle permissions so please make sure everyone has a GitHub account,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-333149231:149,integrat,integration,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-333149231,1,['integrat'],['integration']
Deployability,"ADD : use a string instead of an enum to specify an integration method as it easier for user to add new ones. This slightly changes the API of numerical integration.; ADD : add the possibility to add a function to create on the fly the required integration points (when an analytical formula is available).; UPDATE : modified the name of the integration methods for edges, triangles, tetrahedra and hexahedra.; UPDATE : use of numerical integration in Flexible; FIX : bug corrected when using of BezierShapeFunction with plugin HighOrderMeshes . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936:52,integrat,integration,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936,7,"['UPDATE', 'integrat']","['UPDATE', 'integration']"
Deployability,ADD some AdvanceTimer macro missing to understand the collision pipeline; FIX some end macro missing. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1158:64,pipeline,pipeline,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1158,1,['pipeline'],['pipeline']
Deployability,"AFAIK, @bcarrez installed zmq on CI ubuntu (or maybe not, just before vacations). . For liboscpack it requires a specific version : https://github.com/SofaDefrost/sofa/blob/sofaCommunication/applications/plugins/Communication/README.md; If you install liboscpack from the repository there is some bugs in it. About windows and mac I never tested on it. Plus, I have to write a liboscpack cmake find :/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-355128157:16,install,installed,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-355128157,2,['install'],"['install', 'installed']"
Deployability,About failure by default on warning & deprecated...this is a choice. . The positive thing about this 'bold' behavior is that it force tests maker to care about warning and deprecated messages otherwise they tend to ignore them. As I prefer to specify explicitely in every test case the expected behavior I dont' feel very concerned about that 'default mode'. ; But I think this 'bold' behavior sound nice to me and from the new failure we can see in the test reports this mode is rising interesting issue that requires investigations. About the disable color while testing. I disable it only for the tests to see if it improve the readability. Now red in the console only means that a test have failed and it not obfuscated with the red from an expected error message. (I 'm not sure I'm clear here). You can change that if you prefer :) . EDIT: I update the text to be more clear :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291933636:848,update,update,848,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291933636,1,['update'],['update']
Deployability,"About sofa-spm, it is possible to submit new plugins install recipes by making PR to https://github.com/SofaDefrost/SPM-RECIPES",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1122#issuecomment-527834952:53,install,install,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1122#issuecomment-527834952,1,['install'],['install']
Deployability,"About the `[[maybe_unused]]` :; this is triggered only with clang(15), not with gcc and it seems to be because of :; `-Wunused-but-set-variable now also warns if the variable is only used by unary operators.` (https://releases.llvm.org/15.0.0/tools/clang/docs/ReleaseNotes.html); So all the added `[[maybe_unused]]` are used with variables because of the `++` later on, which is a bit weird to me too.🤓. I can just revert https://github.com/sofa-framework/sofa/pull/3627/commits/c168efba2f0ff912c3ace3ffe81c179f9712e02d if needed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347:218,release,releases,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1423384347,2,"['Release', 'release']","['ReleaseNotes', 'releases']"
Deployability,"About the last syntax your are proposing, I think it shouldn't be hard to do. . You simply have to in the c++ construction of the PSDEMagic dedicated code that get the argument named 'update', then extract its parameters (is callable, param names), transform all that as input and generate the output.; Actually this is very similar the use of decorator except that with decorator this ""magic binding"" logic is implemented in python while in your case the ""binding"" logic is done in the c++ part. . I will continue digging in this issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380411028:184,update,update,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380411028,1,['update'],['update']
Deployability,About the update of TemplateAlias,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3450:10,update,update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3450,1,['update'],['update']
Deployability,"About this PR...please keep in mind that its target is to cut the dependency to SofaTest. . About the NumericTest base test class (I think this is the one François is refering to this one when he is saying ""I would like to discourage the use of one size fits all epsilon and comparison values for floating points arithmetic, since I prefer people to actually think about the quantities they..."") it is there because there was this functionallities in SofaTest and I didn't want to update all the tests in this PR. So I just move the features from SofaTest to SofaFramework. My strategy is to 1) cut the dependency with this PR, 2) update all the tests in modules small at a time so that they stop using SofaTest. And in a third step if NumericTest is really bad...then maybe someone will update the tests relying on it and remove the class :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338786171:481,update,update,481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338786171,3,['update'],['update']
Deployability,"According to https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html, ; version 3 is supported from CMake 3.21 which is lower than 3.22 (version supported in all the cmake files in the codebase) since ; - https://github.com/sofa-framework/sofa/pull/4586. Therefore, it makes sense to upgrade the version in any case 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4849#issuecomment-2251617387:292,upgrade,upgrade,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4849#issuecomment-2251617387,1,['upgrade'],['upgrade']
Deployability,"According to origin/defrost on the Dashboard, error appeared between 4b1f2897 and a33b4b12.; There are some LightManager changes here, we are close ;); I update my ""summary"" post. EDIT: This range is where the test was created. **This test fails on Windows since its creation.**; Please @damienmarchal give this type of information (if you know it) when you create your issue so that no time is lost searching for error appearance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263275881:154,update,update,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263275881,1,['update'],['update']
Deployability,"According to:; https://www.qt.io/blog/add-on-support-in-qt-6.0-and-beyond; Qt 6 will be feature completed for LTS release at version 6.2 which is planned for septembre 2021.; At that time QtChart Qt SerialPort, QtWebEngine, QtDataVisualition will be there.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1756#issuecomment-789573910:114,release,release,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756#issuecomment-789573910,1,['release'],['release']
Deployability,"Actually, I dont even know if anybody uses the GUI with the docker installation 😅. I think it is a matter of configuration of docker to access the local X server. You may try setting some environment variables; https://stackoverflow.com/questions/69872788/docker-could-not-connect-to-any-x-display",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495:67,install,installation,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315521495,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"Actually, I got confused, I thought you were using docker to build SOFA, with https://hub.docker.com/r/sofaframework/sofabuilder_ubuntu. Anyway, my advice would be to just download the archive on the website, and directly use the binaries (instead of going through the containerisation of docker) ; in your case for Ubuntu, it would be https://github.com/sofa-framework/sofa/releases/download/v22.06.00/SOFA_v22.06.00_Linux.zip",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510:375,release,releases,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316629510,1,['release'],['releases']
Deployability,"Actually, I have fixed It. Aparently I had a 19.06 installation and I was mixing library versions.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1476#issuecomment-693511374:51,install,installation,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1476#issuecomment-693511374,1,['install'],['installation']
Deployability,"Actually, I skipped the install process in the MAC M2. And I run it on my Desktop(Ubuntu 20.04)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371941172:24,install,install,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371941172,1,['install'],['install']
Deployability,Add CUDA support on Continuous Integration (CI) to test SofaCUDA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/665:20,Continuous,Continuous,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/665,2,"['Continuous', 'Integrat']","['Continuous', 'Integration']"
Deployability,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4601:43,configurat,configuration,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601,1,['configurat'],['configuration']
Deployability,Add Data bool d_checkTopology in PointSetTopologyContainer. By default to false. - Methods CheckTopology always return true if this option is not activated.; - Update some topology modifiers methods to check this option instead of CHECK_TOPOLOGY macro. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1351:160,Update,Update,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1351,1,['Update'],['Update']
Deployability,Add a boolean data (d_propagatetoDOF) to allow or not the propagation of the topological changes to the mechanical state immediately as soon as they occure. Default value (d_propagateToDOF=true) the topological changes are propagated immediately following the SOFA regular behavior and it should not affect all the Sofa current scenes. If the boolean is set to false the topological state changes update are not propagated immediately and they can executed in another step of the simulaiton loop. This modification should make the concurrent execution of the topological changes and the simulation safe. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/838:397,update,update,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/838,1,['update'],['update']
Deployability,"Add a new update mechanism for components which need to update / recompute internal variables when one or several data are modified. A visitor has been created for this, called at each begin of time step to refresh if necessary the internal variables. All feedback welcome. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1131:10,update,update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1131,2,['update'],['update']
Deployability,"Add method to compute the good element density using ancestors and coefs values.; Update all toplogy addElement to take into account ancestors indices and coefficients. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2257:82,Update,Update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257,1,['Update'],['Update']
Deployability,"Add option to choose between restPosition and position. Also update the init method to better check the inputs. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1978:61,update,update,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1978,1,['update'],['update']
Deployability,"Add the `computeBBox` method to `SpringForceField`, so all spring force fields having `SpringForceField` as the base class can update their bounding box. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2599:127,update,update,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2599,1,['update'],['update']
Deployability,Added function:; 	drawInifiniteLine; 	drawDisk; 	drawCircle; 	drawArrow. Every drawtool implementation will need to be updated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1252:119,update,updated,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1252,1,['update'],['updated']
Deployability,Added update of ROI indices at the beginning of each time step using the listening option. todo:; - drawing selected points and ROI radius; - define number of indices of object 1 to consider; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1066:6,update,update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1066,1,['update'],['update']
Deployability,"Adding a few utility functionalities to simplify Data tracking. - Data tracking system is now using Data's counter (lighter and simpler).; - externalizing Data tracking system outside of DataEngine so it can be use elsewhere (including other kinds of components).; - adding DataTrackerEngine that is a kind of DataEngine but that is not a component (not a BaseObject). It can easily be added anywhere and can link any Data, such as inside a Component, or even between components.; - adding DataTrackerFunctor to call a functor as soon as a Data is modified. What you can do: (have a look at the tests). - check if a Data changed on a regular rhythm. e.g check at each time step if a stiffness parameters changed to update a Matrix.; - automatically update a Data if its dependencies changed. e.g. young modulus can be set as a dependency of stiffness matrix, so each time you ask for the matrix, if the modulus changed, the matrix will be updated (behavior similar to DataEngine); - do an action as soon as a Data is modified. E.g. updating the gui scene graph as soon as a Node is (de)activated (by tracking the Data Node::activated).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80:715,update,update,715,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80,3,['update'],"['update', 'updated']"
Deployability,"Adding a few utility functionalities to simplify Data tracking. - externalizing Data tracking system outside of DataEngine so it can be use everywhere.; - Data tracking system is now using Data's counter (lighter and more simple).; - adding DataTrackerEngine that is a kind of DataEngine but that is not a component (not a BaseObject). It can easily be added anywhere and can link any Data, such as inside a Component, or even between components. What you can do: (have a look at the tests); - check if a Data changed on a regular rhythm. e.g check at each time step if a stiffness parameters changed to update a Matrix.; - automatically update a Data if its dependencies changed. e.g. young modulus can be set as a dependency of stiffness matrix, so each time you ask for the matrix, if the modulus changed, the matrix will be updated (behavior similar to DataEngine)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/60:604,update,update,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/60,3,['update'],"['update', 'updated']"
Deployability,"After building SOFA master (up to date) with success. Building INSTALL project in Visual 2017 failed:. ```; 1>------ Build started: Project: INSTALL, Configuration: Release x64 ------; 1>-- Install configuration: ""Release""; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glut.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glxew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:63,INSTALL,INSTALL,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,17,"['Configurat', 'INSTALL', 'Install', 'Release', 'configurat', 'install']","['Configuration', 'INSTALL', 'Install', 'Installing', 'Release', 'configuration', 'install']"
Deployability,After dev-meeting this PR needs to be updated to:; - use dmsg_* instead of the condition on N_DEBUG. The change for conditional code will be done a separated PR so this PR is to review again :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/255#issuecomment-300421865:38,update,updated,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/255#issuecomment-300421865,1,['update'],['updated']
Deployability,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:22,install,installing,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,2,"['install', 'release']","['installing', 'release']"
Deployability,"After the discussion on DataLink ( #1526 ) now the Link themselves:. Objectives:; - Avoid multiple instantiations (Node.h) - Link with forward declaration; - Avoid using Links for Sequence / Single when it is actually no real Link. Positive impact:; - clean, factorization and especially the tests; - compile time, perf, related problems: can not be evaluated; - code more readable, more accessible (new devs). Functionally:; - store list something with a name and a help string; - SingleLink vs MultiLink → Shared API; - MultiLink conversion does not exist; - MultiLinks have iterators; - SingleLink have the API for iterating over elements (even if single link). -------. Tasks; - Add test for CheckPath to validate its behavior: #1714 [Merged]; - Move CheckPath() & CheckPathes() from Link.h to BaseLink: #1717 [Merged]; - Add test to show broken behavior in SingleLink: #1749 [To review]; - Move updateLinks() from Link.h to BaseLink: #1735 [Waiting #1749]; - Move read() from Link.h to BaseLink: #1736 [Waiting 1735]; - Unify the notifcation mechanisme in SingleLink/MultiLink: #1706 [breaking]; - Unify the container part of the Link API for SingleLink/MultiLink/BaseLink: (TO COME, draft in:; https://github.com/CRIStAL-PADR/sofa/blob/xp-remove-node-deps/SofaKernel/modules/SofaCore/src/sofa/core/objectmodel/Link.h ); - Replace the use of SingleLink to implement the non sptr version of Node::Single: (TO COME, wip in #1737); - Replace the use of MultiLink to implement the non sptr version Node::Sequence: (TO COME as drafted in NodeContainerSequence https://github.com/CRIStAL-PADR/sofa/blob/xp-remove-node-deps/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/Node.h); - Unify at best the internal parts of SingleLink & MultiLink (TO COME)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1722:900,update,updateLinks,900,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1722,1,['update'],['updateLinks']
Deployability,"Agreed, I don't like adding a Data in every component just for this.; I think the underlying issue of having an empty scene bounding box when there is not visual models could also by fixed relatively simply and without introducing much cost by:; - including the collision models top-most bounding boxes that are already computed during each time step (in fact this could be the only information used by default, as it is cheaper in practice to obtain than the visual bounding boxes because it's already computed for the broad phase); - and/or having a flag in `DrawTool` to look at the given coordinates to compute a bounding box of all non-visual but visible elements. As the DrawTool API is quite inefficient anyway the overhead may be insignificant, and it will disappear in cases where there is no debug information visualised. To me this could be controlled by one of the master component in the root node, either the `AnimationLoop` (as the issue is when `UpdateBBox` happens and how it is implemented, bonus point is that this component would then have the ability to schedule it in parallel with the other computations), or the `VisualManager` (as the current use cases for bounding boxes are currently exclusively to setup the scene rendering bounds and/or show bounds of a subgraph). This control could either be by implementing this update directly, or providing the choice that is setup for this particular scene (which alternative to use, which frequency of bbox updates).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/29#issuecomment-261507387:962,Update,UpdateBBox,962,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/29#issuecomment-261507387,3,"['Update', 'update']","['UpdateBBox', 'update', 'updates']"
Deployability,"Aha! Well, just to be clear, my suggestion would have been PythonScriptDataEngine-> PyComponent and PythonScriptController -> PyController. I understand that in terms of implementation, even conceptually, a DataEngine is different from a BaseObject. But, this information is of no use to the user in my opinion. When he sees the PSDE he expects it to be updated when the Datas have changed. If I'm new to Sofa and I see a component that is called ""PythonScriptDataEngine"" I figure that it must be something very specific, related to an engine of some sorts. If I see ""PyComponent"" I understand immediately that this is a component in my scene whose behavior I can implement in python. But granted, it doesn't take much to explain in a documentation that what is hidden behind the name ""PythonScriptDataEngine"" is just that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406614649:354,update,updated,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406614649,1,['update'],['updated']
Deployability,"All in the title, files from the previous organization were not deleted; and some cmake.in was not correctly updated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2909:109,update,updated,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2909,1,['update'],['updated']
Deployability,Allow all loaders (namely Gmsh and STL) to flipNormals (actually reorder the indices of vertices in a triangle).; Update associated scenes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1418:114,Update,Update,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1418,1,['Update'],['Update']
Deployability,"Alright, it seems the config.h is also needed. This is what I have by simply putting back SofaSimulationCore in SofaFramework. **CMakeLists.txt**; ```; cmake_minimum_required(VERSION 3.1); project(mymy). find_package(SofaFramework); add_executable(${PROJECT_NAME} main.cpp); target_link_libraries(${PROJECT_NAME} SofaSimulationCore); ```. **main.cpp**; ```; #include <sofa/simulation/MechanicalMatrixVisitor.h>; int main () { return 0;} ; ```; **Result**; ```; sofa/build/install/include/SofaFramework/sofa/simulation/simulationcore.h:25:10: fatal error: sofa/simulation/config.h: No such file or directory; 25 | #include <sofa/simulation/config.h>; | ^~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540633645:472,install,install,472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540633645,1,['install'],['install']
Deployability,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1979:83,update,updated,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979,1,['update'],['updated']
Deployability,"Also, the repository won't generate anymore the following error when it is created from another library/executable that is not placed directly in the SOFA installation directory:. ```; Error: [FileSystem::isDirectory()] /home/runner/work/my_program/share/sofa/examples: No such file or directory; Error: [FileSystem::isDirectory()] /home/runner/work/my_program/share/sofa: No such file or directory; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1656:155,install,installation,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1656,1,['install'],['installation']
Deployability,An example of a plugin update further to this PR: https://github.com/SofaDefrost/SoftRobots/pull/213,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1541472870:23,update,update,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1541472870,1,['update'],['update']
Deployability,And you have to make sure that the GL buffers are created/updated/modified while having an OpenGL context (so either in initVisual()/updateVisual()/drawVisual()...),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1423#issuecomment-644625370:58,update,updated,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1423#issuecomment-644625370,2,['update'],"['updateVisual', 'updated']"
Deployability,AnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sof,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6077,install,install,6077,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,AnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:25386,install,install,25386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"Another suggestion from @JeremieA is that actually the list of all the plugins that are being compiled could be derived at CMake configure/generate time, and therefore a configuration file containing that list could be issued as the default list of plugins to load.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-297004128:170,configurat,configuration,170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-297004128,1,['configurat'],['configuration']
Deployability,"Another thought about this issue:; If penality forces are integrated implicitly (`addKToMatrix` is implemented and matrices are mapped), the structure of the linear system can change between 2 time steps. In that case, the matrix will need a new symbolic factorization each time it changes. This is very costly, and it will slow down the simulation a lot. It is the same problem occurring after a topological change.; Some solutions (such as https://dl.acm.org/doi/abs/10.1145/3478513.3480505) exist, but require a lot of work (and a dedicated solver).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-996545343:58,integrat,integrated,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-996545343,1,['integrat'],['integrated']
Deployability,"Another way to fix this could be by disabling the native menu bar and use the Qt one. That would also have the benefit of having the same menu bar for every version. Here is one way to do it:. ```; diff --git a/applications/sofa/gui/qt/RealGUI.cpp b/applications/sofa/gui/qt/RealGUI.cpp; index b6546a8..efb29c5 100644; --- a/applications/sofa/gui/qt/RealGUI.cpp; +++ b/applications/sofa/gui/qt/RealGUI.cpp; @@ -221,6 +221,7 @@ void RealGUI::InitApplication( RealGUI* _gui); QString pathIcon=(sofa::helper::system::DataRepository.getFirstPath() + std::string( ""/icons/SOFA.png"" )).c_str();. application->setWindowIcon(QIcon(pathIcon));; + _gui->menubar->setNativeMenuBar(false);. // show the gui; _gui->show(); // adding extra line in the console?; ```. This works perfectly on my mac. The menu bar will be directly on the Sofa's interface like it would with another OS. <img width=""1095"" alt=""screen shot 2017-04-29 at 11 09 38 pm"" src=""https://cloud.githubusercontent.com/assets/6951981/25561053/0eb91f68-2d31-11e7-975b-d80fcf977a9a.png"">. Edit : I can add this patch as a pull request if you want to go forward with this solution.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/183#issuecomment-298208141:1063,patch,patch,1063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/183#issuecomment-298208141,1,['patch'],['patch']
Deployability,Any interest to keep newmat ? I remember a discussion during a sofadevmeeting with @jnbrunet saying that we should remove the usage of newmat. Especially because it seems this library is really old and not maintained anymore. ; http://robertnz.net/nm_intro.htm; Latest update seems to be 2008 for newmat11 (beta)...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2311#issuecomment-908719567:269,update,update,269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2311#issuecomment-908719567,1,['update'],['update']
Deployability,Any update @jjcasmar on this work?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-971457092:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-971457092,1,['update'],['update']
Deployability,Any update @maddin200 ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1968#issuecomment-814727721:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1968#issuecomment-814727721,1,['update'],['update']
Deployability,Any update here ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-592179782:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-592179782,1,['update'],['update']
Deployability,Any update on the discussion @damienmarchal @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565#issuecomment-359736499:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565#issuecomment-359736499,1,['update'],['update']
Deployability,Any update on this? Could we revert https://github.com/sofa-framework/sofa/pull/1268 in the meantime?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-630012571:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-630012571,1,['update'],['update']
Deployability,Any update on your side @EulalieCoevoet?; Or could you just share a simple scene for us to test and reproduce the problem?; Thanks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-810881801:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-810881801,1,['update'],['update']
Deployability,Anyone has plan for this PR to be updated and merged ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/980#issuecomment-537869723:34,update,updated,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/980#issuecomment-537869723,1,['update'],['updated']
Deployability,"Apparently, a bug with gcc12 and/or Ubuntu 23.04, just upgraded to Ubuntu 23.10 (with gcc13.2) and it works well 😅",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4283#issuecomment-1797946598:55,upgrade,upgraded,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4283#issuecomment-1797946598,1,['upgrade'],['upgraded']
Deployability,"Apply doUpdateInternal API to ConstantForceField; and also change the behavior: do not extrapolate any info when an mismatch of size is detected. - Finally, let's not wait the Data update discussion to integrate such an amazing change ; - And .. we could also think about renaming this class as UniformForceField to be consistent with Masses!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1145:181,update,update,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1145,2,"['integrat', 'update']","['integrate', 'update']"
Deployability,Are all pluginisation finished? I would wait for it otherwise you will need to re-update all the scene.; By the way I would be happy to set an option to automatically include the main plugin...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1802#issuecomment-776631559:82,update,update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1802#issuecomment-776631559,1,['update'],['update']
Deployability,"As #887 shows, some modules are not properly deployed in their install folders (the directory structure is not well respected because of a missing `set_target_properties( ... PUBLIC_HEADERS ... )` for instance). While #887 has been merged, the other modules should be checked for similar issues.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/894:45,deploy,deployed,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/894,2,"['deploy', 'install']","['deployed', 'install']"
Deployability,"As I was not ready to kill all the existing tests I solved the issue in a different way that I found simple. ; The idea is based on a small api that mimick the Python API and then to use it to re-implement the SceneCreator functionnality. This is in the STC4 branch. If you are curious it look like that:; ```cpp; #include<SceneCreator/SimpleAPI.h> . Node::SPtr root = simulation::getSimulation()->createNewGraph(""root"");; simpleapi::createObject(root, ""DefaultPipeline"", {{""name"",""Collision Pipeline""}}) ;; simpleapi::createObject(root, ""BruteForceDetection"", {{""name"",""Detection""}}) ;; simpleapi::createObject(root, ""MinProximityIntersection"", {{""name"",""Proximity""},; {""alarmDistance"", ""0.3""},; {""contactDistance"", ""0.2""}}) ;. simpleapi::createObject(root, ""DefaultContactManager"", {; {""name"", ""Contact Manager""},; {""response"", responseType}; });. simpleapi::createObject(root, ""DefaultCollisionGroupManager"", {{""name"", ""Collision Group Manager""}});; ```. I'm quite sure we should be able to make much nicer things with a proper eDSLinstead of mimicking the python API but I'm not sure I have time for that. My target was to remove all dependencies between Sofa & SceneCreator and this make the job.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334524331:492,Pipeline,Pipeline,492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334524331,1,['Pipeline'],['Pipeline']
Deployability,"As a conclusion, what is needed:; - [ ] Upgrade CMake >= 3.24 (@bakpaul is working on it); - [ ] Then use find_or_fetch",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1767961987:40,Upgrade,Upgrade,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1767961987,1,['Upgrade'],['Upgrade']
Deployability,"As an additional thread management pattern, I would like to add a thread pool with persistent worker threads, which also uses ""Task"" instances to encapsulate single work items as in the Multithreading plugin.; The motivation for this alternative to the existing work-stealing approach in the Multithreading plugin is to use it for a simple parallelization scheme in the collision detection pipeline.; There are currently two Task types available:; * For running bounding volume hierarchy updates in parallel; * For running collision pair checks in parallel. Both task implementations require no modifications to the existing collision model implementations (especially not within the CubeModel class).; However, the implementation is not complete yet, as I have yet to find a reliable alternative to generate DetectionOutputVector instances after all collision pair checks have finished their computations.; I have implemented this as a separate library and plugin, largely independent of changes in SOFA core classes and completely independent of the existing MultiThreading plugin.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-263825437:390,pipeline,pipeline,390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-263825437,2,"['pipeline', 'update']","['pipeline', 'updates']"
Deployability,"As an information, we are working on a first set of basic components, implementing the main virtual classes defined in SofaFramework and SofaSimulation. This first step helps us in detecting unexpected/undesired dependencies. The list of these basic components will soon be presented and the resulting SOFA NG sources released as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/226#issuecomment-295246847:318,release,released,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/226#issuecomment-295246847,1,['release'],['released']
Deployability,"As discussed, one problem remains: ; In installed SOFA, relocatable plugins can't find SOFA libraries because RPATH is not set to handle dependencies like `<install-dir>/plugins/SofaValidation/lib/SofaValidation.so -> <install-dir>/lib/SofaLoader.so`; To be fixed in another PR...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1604#issuecomment-726817111:40,install,installed,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1604#issuecomment-726817111,3,['install'],"['install-dir', 'installed']"
Deployability,"As far as I know, the dependency with `TopologyData.inl` comes from the fact that changes in topology within a MechanicalObject is handled differently compared to the rest of the components that support topology changes. See [MechanicalObject::handleStateChange](https://github.com/sofa-framework/sofa/blob/master/SofaKernel/modules/SofaBaseMechanics/MechanicalObject.inl#L391-L573); This constrats with the way most of the components are being notified of changes is the topology, by first encapsulating their topology sensitive state variable in the appropriate topology data container ( `PointData`, `EdgeData`, `TriangleData` ... ) and then by implementing a callback method which to update the topology state variable with respect to the change in the topology. For example in a `TriangularFEM` this means computing the variables related to the rest configuration when new triangles are added. See [TriangularFEMForceFieldOptim.inl](https://github.com/sofa-framework/sofa/blob/master/modules/SofaGeneralSimpleFem/TriangularFEMForceFieldOptim.inl#L54-L70) for the related code. ; An attempt to uniform this design has been tried in `MechanicalObject`, but stopped because it would have required some other drastic changes, namely that it would no longer be possible to have a `MechanicalObject`, without any `TopologyContainer` of some sort either in its local context or in its parent context.; With the current implementation ( which does not rely on `TopologyData` ) if no `TopologyContainer` is specified, it is therefore implicit that the topology is a point topology, no `PointSetTopologyContainer` is required to describe that fact.; However working with `TopologyData` ( or at least clarifying why ultimately it was decided not to use it ) API to store the state vectors of a `MechanicalObject` would have the benefit of removing the need to call the `resize()` method ( it is usually done during `apply` methods of mapping ).; Ultimately it would also lead to rework the current implement",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295286672:688,update,update,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295286672,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2022:58,configurat,configuration,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022,1,['configurat'],['configuration']
Deployability,As pointe by @marques-bruno and @fredroy our Opengl rendering code is getting old and less and less compatible with modern architecture and OS. So it may be time for a serious update.; What is your opinion and suggestion that ?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/678:176,update,update,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/678,1,['update'],['update']
Deployability,As promised !; Update of the ChangeLog.md. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/263:15,Update,Update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/263,1,['Update'],['Update']
Deployability,As said in the title this PR puts SofaSparseSolver and SofaPreconditioner as a real module that can be activated/deactivated. . CHANGLELOG/; - move source files to src/SofaSparseSolver & src/SofaPreconditioner so the .h are not leaked anymore. ; - conditional code based on #define SOFA_HAVE_METIS/SOFA_HAVE_CSPARSE is now changed to favor the use of *find_package* to detect and activate conditional building depending on dependencies. ; - add a modules/CMakeLists.txt to integrate that; - add the touched component into the list of 'moved' component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/668:473,integrat,integrate,473,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/668,1,['integrat'],['integrate']
Deployability,"As soon as the 1st SOFA NG version is ready, the github repository including the CMakeList configuration of NG should be released.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/245:91,configurat,configuration,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/245,2,"['configurat', 'release']","['configuration', 'released']"
Deployability,"At https://defrobotics2022.sciencesconf.org/ we noticed that a lot of sofa users are manually setting SOFA_ROOT and PYTHONPATH. ; The problem is that when they are using a new version, they often forgot to update these path in their system configuration resulting in very hard to understand problems including random crashes (because runSofastarts, then try to load or use a plugin from a different sofa version which can only lead to ). We should think about some mecanisme to detect and guide users when this happens. The mecanism does not need to be bullet proof, guiding 80% of users would be already great. . Drafted suggestion on how we can do that is welcome.; On my side i think that we may have in SOFA_ROOT a file storing an unique ""token/md5 checksum"" telling which version of runSofa the plugin was compiled for and the same for every plugins. ; In case the runSofa version is different to the one stored into this file...and detect a ""wrong SOFA_ROOT"" prints a warning and use an empty SOFA_ROOT. ; Same in the plugin loader, if the runSofa unique token is not the one the plugin is expecting then prints a warning and refuse to load it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3099:206,update,update,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3099,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"At meeting it was asked me to update minor details...and was returned to wip...I have done the requested change so I change the tag to to-review.I didn't wanted to set it to ready because I prefer to have third ""eye"" looking at the change even if they are minor. . I think if you think it is ok then the pr is ready and you can merge it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/255#issuecomment-301121460:30,update,update,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/255#issuecomment-301121460,1,['update'],['update']
Deployability,Backport installation fix from master (#1154 ) to release v19.06. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1211:9,install,installation,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1211,2,"['install', 'release']","['installation', 'release']"
Deployability,"Based on #2813 . and sofang-ize paths/plugins/etc.; and creation of some *Testing framework (solidmechanics, topology, mapping...). and a loooots of clean as well. (not enough). Some tests were disabled, they are back again. ~~Will be updated when Collision/engine/etc will be merged.~~ done. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2873:235,update,updated,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2873,1,['update'],['updated']
Deployability,"Based on #3815 and #3805 . ... instead of glBufferSubData() as it is a faster method to upload stuff on the GPU directly. Also:; - dont update indices (lines, triangles, quads) if there are not modified; - dont copy to temporary float if already in float. (same mesh as #3805); Before:; `1000 iterations done in 14.075 s ( 71.048 FPS)` . After:; `1000 iterations done in 9.597 s ( 104.199 FPS)`. After (float); ` 1000 iterations done in 7.618 s ( 131.268 FPS)`. Based on :; - #3815 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3822:136,update,update,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3822,1,['update'],['update']
Deployability,"Based on #3924 this PR :; - removes the data `force` and replaces it by the possibility to define the data `forces` with size 1; - proposes a solution to avoid circular dependency : when one of both data `forces` or `totalForce` is given at scene initialization, the other can not be used for update later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4019:293,update,update,293,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4019,1,['update'],['update']
Deployability,"Based on #3924. Answers to #2173 ! We finally have a nice internal udpate @damienmarchal ; The data used internally (`d_forces` and `d_totalForce`) are updated and synchronized through input data (`d_inputForce`, `d_inputForces` and `d_inputTotalForce`). I personnally like this but am open to discussion!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3936:152,update,updated,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3936,1,['update'],['updated']
Deployability,"Based on :; - #3805 . updateBuffer (which is updating all buffers, to the GPU with its implementation OglModel for example) ; was called before computeNormals, tangents, etc.; So there was a discrepancy of 1 frame between vertices and normals/tangents. Also, using ScopedTimer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3815:22,update,updateBuffer,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3815,1,['update'],['updateBuffer']
Deployability,"Based on ; - #4925 . This PR sets the `ConfigDirectoryPath` with the value of getSofaLocalUserDir (see https://github.com/sofa-framework/sofa/pull/4875) instead of the current directory (could be the binary dir, install dir, etc). This PR also adds the option to change this directory path to a custom path, set with a new cmd line option. ---; Note (not the object of the PR 🙂‍↕️); A bit weird that the config directory path getter is from the GUI, which means one needs a dep on Sofa.GUI to get the config dir path 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4926:212,install,install,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4926,1,['install'],['install']
Deployability,"Based on @ziqiu-zeng implementation, this adds the Non-smooth Non-linear Conjugate Gradient (NNCG) as an alternative to the Projective Gauss Seidel (PGS) as NLCP solver in the GenericConstraintSolver. - an option ` resolutionMethod` is added with options: ""ProjectedGaussSeidel"", ""UnbuiltGaussSeidel"" or ""NonsmoothNonlinearConjugateGradient"" and 3 associated examples are provided for each option.; - a useless data `schemeCorrection` was also deprecated and removed. Documentation updated: https://github.com/sofa-framework/doc/pull/74. .. wonder if the PR name includes enough acronyms .. :thinking: . [ci-depends-on https://github.com/sofa-framework/Regression/pull/27]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053:482,update,updated,482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053,1,['update'],['updated']
Deployability,"Based on https://github.com/sofa-framework/sofa/pull/3594. Introduce `ParallelStiffSpringForceField` and `ParallelMeshSpringForceField`. The base classes `SpringForceField` and `StiffSpringForceField` were also refactored to be able to reuse common code with their parallel implementations. Only the `addForce` method is implemented. The provided example has an explicit integration scheme where the force derivative is not required. `addDForce` and `addKToMatrix` may come later. Benchmark:. ```; Sequential; 1000 iterations done in 9.11327 s ( 109.73 FPS). Parallel; 1000 iterations done in 5.04016 s ( 198.406 FPS); ```. The implementation is naïve. We could probably do better. Note there are 11264 points and 62668 edges (springs) in the provided example. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3596:371,integrat,integration,371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3596,1,['integrat'],['integration']
Deployability,"Based on previous PR #3539 . Add methods and binding for:; - loading sofa.ini file to set resources/example path; - loading SOFA plugin given the file path; - activate/deactivate SOFA messageHandler, get the number of queued message and get the message with its priority. edit:; - Avoid using string as it can produce memory bad access from other software integration. ; - Also remove use of config.h inside SofaPhysicsAPI .h to be able to easily include it in third library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3540:356,integrat,integration,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3540,1,['integrat'],['integration']
Deployability,"Based on the following library: https://github.com/p-ranav/indicators. ![peek](https://github.com/sofa-framework/sofa/assets/10572752/22eb746a-3b10-4b13-94a2-eccce68f326d). Breaking because I updated the cxxopts library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4168:192,update,updated,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168,1,['update'],['updated']
Deployability,"Basically, when i compile sofa using cmake it says that it is adding sofapython3 and it seems not to have any problems. But when i run runSofa.exe sofapython3 is not in the plugin list and i cannot open python scenes in sofa. I can't load it manually fromn the plugin manager either. I tried also to follow the guide to install python3 on github but the problem still remains.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1785018217:320,install,install,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1785018217,1,['install'],['install']
Deployability,"Because ""data update"" is considered as a background task since STC#2 ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80#issuecomment-264854155:14,update,update,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80#issuecomment-264854155,1,['update'],['update']
Deployability,"Because `find_package(CUDA)` is deprecated. See https://cmake.org/cmake/help/latest/module/FindCUDA.html. Note that I had to re-install CUDA. It seems to be a common issue: https://stackoverflow.com/questions/56636714/cuda-compile-problems-on-windows-cmake-error-no-cuda-toolset-found. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2878:128,install,install,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2878,1,['install'],['install']
Deployability,Because we build SofaPython3 on SOFA CI. ; It's the starting point of all my work on ExternalProject update workflow that we have been discussing for 3 weeks. ; We want to ease the pain of handling ExternalProject pointers while still building those external project on SOFA CI.; See https://github.com/sofa-framework/sofa/pull/1961,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820438695:101,update,update,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820438695,1,['update'],['update']
Deployability,"Been looking into github actions, trying to get it to do what I want... not yet really successfully, but I've got a proof of concept. Currently, I run the checks on a slave on ci.inria.fr, and the current POC does a minimalist build / install / run tests workflow. But I think it would be worth asking ourselves what the perfect CI/CD pipeline could be for SOFA & it's plugins. In my mind, I'd like this:. SOFA:; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent (consistent build environment); - generate standalone binaries, zip & upload on github pages / website (SOFA-latest / sofa-nightly build...). PLUGINS:; - load docker image, or wget binaries generated by SOFA; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent; - generate binaries, zip & upload on github pages / website; ; ADVANTAGES of github actions vs JK2:; - ALL CI/CD config centralized in a .github folder in the git repository; - NO separate tool but Github's interface; - SUPER DUPER KICKASS interface design from github, gives direct access to all logs, checks, status badges etc. for each workflow / job / step in the Github checks processes. ![plop2](https://user-images.githubusercontent.com/13734391/69730387-3e4fc280-1128-11ea-8f91-20eeb660d233.png). DISADVANTAGES:; - Still in beta (some bugs noticed, especially when running in self-hosted slaves...); - A lot to recode given what @guparan did in JK2; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatib",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1225:235,install,install,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1225,3,"['deploy', 'install', 'pipeline']","['deploy', 'install', 'pipeline']"
Deployability,"Before merging this one, regression-test has to be updated as well.; but only after PR #1052 has been merged. fixes #1051 #828 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1061:51,update,updated,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1061,1,['update'],['updated']
Deployability,Best way to do this in my opinion is to move those plugins in their own repo and use GitHub Actions for continuous integration.; How to do that? See [SofaPython3 workflow](https://github.com/sofa-framework/SofaPython3/blob/master/.github/workflows/ci.yml),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1285#issuecomment-971439906:104,continuous,continuous,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1285#issuecomment-971439906,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,Better FFMPEG executable integration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1205:25,integrat,integration,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1205,1,['integrat'],['integration']
Deployability,"Better fix to handle texture coordinate update during topological changes. ; The problem was coming from updating the data from parent Data (from Loader/engine) during the changes. ; Instead of breaking the ""parentship"", the topology callback has been changed to avoid calling updateIfDirty during the changes. This PR combine with the #2414 will; fix #2392 ; Add safeguard in the scene to avoid topologicalChanges which are not handled by TextureInterpolation; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2415:40,update,update,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2415,2,['update'],"['update', 'updateIfDirty']"
Deployability,"Bold of you to set ""fast merge"" on a PR about DDGNode (and its update mechanism) 🤠",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2822#issuecomment-1084330602:63,update,update,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2822#issuecomment-1084330602,1,['update'],['update']
Deployability,"Boost libs were not copied correctly in MinSizeRel and RelWithDebInfo configurations on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1711:70,configurat,configurations,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1711,1,['configurat'],['configurations']
Deployability,"Bug reported by @olumide-x :. Right-clicking on a node and selecting ""expand node"" crashes runSofa master and 20.12.02. ```; #0 0x00007ff666876a98 in sofa::component::visualmodel::LightManager::handleEvent(sofa::core::objectmodel::Event*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaOpenglVisual.so; #1 0x00007ff67b4f2276 in sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:285,Release,Release,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,3,['Release'],['Release']
Deployability,Build INSTALL on windows is failing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:6,INSTALL,INSTALL,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['INSTALL'],['INSTALL']
Deployability,"Build failed with old error already seen in build [220](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/220/console).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/719#issuecomment-405310319:169,release,release,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/719#issuecomment-405310319,1,['release'],['release']
Deployability,"Build failure on Ubuntu is weird. Seems related to CGAL but I'm not even sure.; Can you check this @hugtalbot ?; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2935/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/6/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123779219:224,release,release,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2935#issuecomment-1123779219,1,['release'],['release']
Deployability,"Build process:. ```; cd ~/Apps/git-apps; git clone https://github.com/sofa-framework/sofa.git; cd sofa/src; git checkout master; mkdir build-master; cd build-master; cmake [options] ..; make; ```. To be clear, build directory is: `/home/emdash00/Apps/git-apps/sofa/src/build-master`. Edit: updated `cmake-log.txt`. Last one was the wrong configuration by accident. I tried remaking the config, though it might not be 100% accurate. I used cmake-gui for the options, so here's the [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/4777146/CMakeCache.txt).; Here's the configuration process log of the `cmake [options] ..` command: [cmake-log.txt](https://github.com/sofa-framework/sofa/files/4777183/cmake-log.txt). Output is very long so I've attached it in this text file [log.txt](https://github.com/sofa-framework/sofa/files/4777142/log.txt). Probably the most notably part is on log.txt:385, which I'll post here. Note: I spaced it to make it visually easier to read. The original is all on a single line of course.; ```; /home/emdash00/Apps/git-apps/sofa/src/applications/plugins/SofaOpenCL/OpenCLIdentityMapping.cpp:71:16: error: duplicate explicit instantiation of; ‘class sofa::component::mapping::IdentityMapping<sofa::gpu::opencl::OpenCLVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float>,; 									 				 sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float> >’ [-fpermissive]; ```. I'm unsure of where the original instantiation is. I'm just trying to use the library since Ubuntu 19.10 doesn't have prebuilt packages yet. I don't think this is part of the issue; however, I'm using OpenCL for an Intel GPU. I wasn't sure how computationally intensive this library would be, but I thought might as well try to utilize my Intel HD Graphics Unit. . Here's an attachment of all relevant system specs using linux commands: [sysinfo.txt](https://github.com",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419:290,update,updated,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419,3,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"But @damienmarchal , shall we validate this pull-request since it concerns the v16.12 release?; We will re-arrange the ChangeLog for the future 17.06.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/121#issuecomment-271328265:86,release,release,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/121#issuecomment-271328265,1,['release'],['release']
Deployability,C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5378,Release,Release,5378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"CG is already in the list my bad, I forgot it sorry!. The description corresponds to a 1st level / layer of SOFA NG.; We intend to have (still in SOFA NG) a second layer of components. This second layer would focus on : ; - state of the art algorithm (like EulerImplicit); - advanced, efficient and validated algorithms (cf Project https://github.com/sofa-framework/sofa/projects/6). I would rather see the EulerImplicit in this second level.; The first level would propose only one implementation per category (e.g. one integration scheme). @matthieu-nesme, you would then rather like to see one explicit and one implicit integration scheme, right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/247#issuecomment-295709649:521,integrat,integration,521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/247#issuecomment-295709649,2,['integrat'],['integration']
Deployability,"CGAL is not available in CentOS official repos. On Ubuntu 18.04, a custom findCGAL.cmake is not necessary.; With a dumb project like; ```cmake; project(test); cmake_minimum_required(VERSION 3.6). find_package(CGAL REQUIRED). get_cmake_property(_variableNames VARIABLES); list (SORT _variableNames); foreach (_variableName ${_variableNames}); if(_variableName MATCHES ""^CGAL_""); message(""${_variableName} = ${${_variableName}}""); endif(); endforeach(); ```. I got this output:; ```bash; root@90bf513426c7:~/project/build# cmake ..; CGAL_3RD_PARTY_DEFINITIONS = ; CGAL_3RD_PARTY_INCLUDE_DIRS = /usr/include; CGAL_3RD_PARTY_LIBRARIES = ; CGAL_3RD_PARTY_LIBRARIES_DIRS = /usr/lib; CGAL_BUGFIX_VERSION = 0; CGAL_BUILD_SHARED_LIBS = TRUE; CGAL_BUILD_TYPE_INIT = Release; CGAL_BUILD_VERSION = 1000; CGAL_Boost_USE_STATIC_LIBS = OFF; CGAL_COMPONENT = ; CGAL_CONFIG = /usr/lib/x86_64-linux-gnu/cmake/CGAL/CGALConfig.cmake; CGAL_CONFIGURED_LIBRARIES = CGAL_Core;CGAL_ImageIO;CGAL_Qt5; CGAL_CONFIG_DIR = /usr/lib/x86_64-linux-gnu/cmake/CGAL; CGAL_CONFIG_LOADED = TRUE; CGAL_CONSIDERED_CONFIGS = /usr/lib/x86_64-linux-gnu/cmake/CGAL/CGALConfig.cmake; CGAL_CONSIDERED_VERSIONS = 4.11.1000; CGAL_CXX_FLAGS_DEBUG_INIT = -g; CGAL_CXX_FLAGS_INIT = -g -O2 -fdebug-prefix-map=/build/cgal-ZyilPF/cgal-4.11=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -frounding-math; CGAL_CXX_FLAGS_RELEASE_INIT = -O3 -DNDEBUG; CGAL_DIR = /usr/lib/x86_64-linux-gnu/cmake/CGAL; CGAL_DISABLE_GMP = ; CGAL_ENABLE_PRECONFIG = OFF; CGAL_ESSENTIAL_3RD_PARTY_LIBRARIES = GMP;MPFR;GMPXX; CGAL_EXT_LIB_Coin3D_PREFIX = COIN3D; CGAL_EXT_LIB_Eigen3_PREFIX = EIGEN3; CGAL_EXT_LIB_QGLViewer_PREFIX = QGLVIEWER; CGAL_EXT_LIB_Qt5_PREFIX = QT; CGAL_FOUND = 1; CGAL_GIT_SHA1 = ; CGAL_GRAPHICSVIEW_PACKAGE_DIR = /usr//include/CGAL/; CGAL_HEADER_ONLY = OFF; CGAL_INCLUDE_DIRS = /usr//include; CGAL_INSTALL_PREFIX = /usr/; CGAL_ImageIO_USE_ZLIB = ON; CGAL_LIB = CGAL; CGAL_LIBRARIES_DIR = /usr//lib/x86_64-linux",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611416421:756,Release,Release,756,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611416421,1,['Release'],['Release']
Deployability,"CI is clear now. ; This PR triggers following error:; ```; applications/plugins/SofaSphFluid/src/SofaSphFluid/SPHFluidForceField.inl:34:10: fatal error: execution: No such file or directory; #include <execution>; ^~~~~~~~~~~; compilation terminated.; ```; see https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1249/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/7/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-598091418:375,release,release,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-598091418,1,['release'],['release']
Deployability,"CI seems not happy:; ```; Edge2QuadTopologicalMapping.cpp.obj; J:\0\src\modules\SofaTopologyMapping\src\SofaTopologyMapping\Edge2QuadTopologicalMapping.cpp(85): error C2146: syntax error: missing ')' before identifier 'and'; J:\0\src\modules\SofaTopologyMapping\src\SofaTopologyMapping\Edge2QuadTopologicalMapping.cpp(85): error C2065: 'and': undeclared identifier; ```. See [full log](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1861/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/1/console) here",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1861#issuecomment-785683796:504,release,release,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861#issuecomment-785683796,1,['release'],['release']
Deployability,"CIMg use convert or gm as a fallback scenario which happens when the plugin is not compiled with libjpeg et libtiff support. Conclusion 1: we need to update our VM to install libjpeg et libtiff installs on centos & windows. . Conclusion 2: we need to replace the current error message saying that ""convert"" or ""gm.exe"" cannot be found by one explaining that to have jpg/tiff support we need to re-compile the plugin in the right way. EDIT: thanks @fredroy for the infos about CImg.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305175116:150,update,update,150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305175116,3,"['install', 'update']","['install', 'installs', 'update']"
Deployability,"CMake configuration of out-of-tree plugins using Sofa.Testing is broken after; - #3655 . The compat/ dir has been removed but not its reference for the target config. Error log: (from beamadapter CI):. ```; CMake Error in BeamAdapter_test/CMakeLists.txt:; Imported target ""Sofa.Testing"" includes non-existent path. ""/home/runner/work/BeamAdapter/BeamAdapter/sofa/include/Sofa.Testing/Sofa.Testing/compat"". in its INTERFACE_INCLUDE_DIRECTORIES. Possible reasons include:. * The path was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and references files it does not; provide.; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3694:6,configurat,configuration,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3694,3,"['configurat', 'install']","['configuration', 'install', 'installation']"
Deployability,CMake external dependency binaries are installed in the sofa lib directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1153:39,install,installed,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1153,1,['install'],['installed']
Deployability,Can one of the admins verify this patch?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/6#issuecomment-232028269:34,patch,patch,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/6#issuecomment-232028269,2,['patch'],['patch']
Deployability,Cannot install from source when using Qt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/794:7,install,install,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/794,1,['install'],['install']
Deployability,"Cannot reproduce this issue (or seems to be fixed in the latest release) on Windows 10/MSVC207/Cmake 3.15.; Closing the issue, and if it is still happening, feel free to reopen it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1235#issuecomment-777513013:64,release,release,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1235#issuecomment-777513013,1,['release'],['release']
Deployability,ChangeLog is updated by the committer.; People external from the PR could not properly describe the work done.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-270319951:13,update,updated,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-270319951,1,['update'],['updated']
Deployability,"Changed d_points from Indices to a TopologySubsetIndices so that the indices get updated on topology changes.; Discussed with @hugtalbot and @epernod in https://github.com/sofa-framework/sofa/discussions/3008. Is there a way to also do that for the external indices?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3037:81,update,updated,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3037,1,['update'],['updated']
Deployability,Changes done in this PR will be integrated in PR #2086,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2013#issuecomment-841260799:32,integrat,integrated,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013#issuecomment-841260799,1,['integrat'],['integrated']
Deployability,Changes:. - Removing deprecated datafields; - Use Accessors instead of beginEdits; - Remove aliases; - move addInputs / addOutputs from init() to ctor(); - Add alignedBoxes & orientedBoxes as inputs of the BoxROI engine; - Refactor init / reinit / doUpdate to guarantee full component update on data change. *BREAKING because of the removal of aliases & deprecated datafields*. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1482:285,update,update,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1482,1,['update'],['update']
Deployability,Class already registered: ProjectToPlaneConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/ser,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24512,install,install,24512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:12328,install,install,12328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"Clean, Fix, Upgrade, Harder, Better, Stronger...; wip. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/876:12,Upgrade,Upgrade,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/876,1,['Upgrade'],['Upgrade']
Deployability,"Cleaning PR for the v21.06 release. 1. remove warnings about unused variables/parameters; 2. transformRotation of Mat enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2210:27,release,release,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210,1,['release'],['release']
Deployability,"Cleaning and refactoring in BarycentricMapping (only for topology container). _description from comment below:_. Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797:955,update,updated,955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797,1,['update'],['updated']
Deployability,Closed as no update regarding https://github.com/sofa-framework/sofa/issues/1148; The fix concerning #1213 has been merged with #1247,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1217#issuecomment-672729743:13,update,update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1217#issuecomment-672729743,1,['update'],['update']
Deployability,"Closing & Re-opning was a mistake :). You are right, breaking changes should be done only for punctual release...I wanted to discuss that in issue #318. But given the amount of breaking changes people want to merge...It think maybe the 17.16 will be a ""breaking"" release. To make the change more manageable by user I introduced a recent PR #329 for which I would like to have feedback (or support or thumb-up :)). ; ; Can you describe what exactly are the breaking and if you have time it would be super great if with #PR329 you can provide a custom hook to warn inform user of which changes happens.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-315047276:103,release,release,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-315047276,2,['release'],['release']
Deployability,"Cmake cfg creates ""MinSizeRel, Release, RelWithDebInfo"" files in CMakeCache/bin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1331:31,Release,Release,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1331,1,['Release'],['Release']
Deployability,"Compiling on sofa-ci-dev-macos: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-727/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/5/console; TODO (when build done): time Multithreading_test execution",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/727#issuecomment-408447499:145,release,release,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/727#issuecomment-408447499,1,['release'],['release']
Deployability,Component states : update of component /data,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2005:19,update,update,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005,1,['update'],['update']
Deployability,"Component.Visual') # Needed to use components [VisualStyle] ; ; MainHeader(rootNode,; plugins=['SofaPython3', 'SoftRobots'],; gravity=[0.0, -9810, 0.0]). ContactHeader(rootNode,; alarmDistance=5,; contactDistance=1,; frictionCoef=0.6). rootNode.VisualStyle.displayFlags = ""showBehaviors showCollisionModels"". Floor(rootNode, **floorParam). cube = Cube(rootNode, **cubeParam); cube.addObject('UncoupledConstraintCorrection'). for i in range(len(fingersParameters)):; finger = ElasticMaterialObject(attachedTo=rootNode,; volumeMeshFileName=fingersVolumeMesh,; name=fingersParameters[i]['name'],; rotation=fingersParameters[i]['rotation'],; translation=fingersParameters[i]['translation'],; surfaceMeshFileName=fingersSurfaceAndCollisionMesh,; collisionMesh=fingersSurfaceAndCollisionMesh,; withConstrain=True,; surfaceColor=fingersColor,; poissonRatio=poissonRatioFingers,; youngModulus=youngModulusFingers,; totalMass=fingersMass). finger.dofs.name = 'tetras'; rootNode.addChild(finger). finger.integration.rayleighStiffness = 0.1; finger.integration.rayleighMass = 0.1. finger.addObject('BoxROI', name='boxROI', box=fingersParameters[i]['ROIBox'], drawBoxes=True, doUpdate=False); finger.addObject('RestShapeSpringsForceField', points='@../Finger1/boxROI.indices', stiffness=1e12,; angularStiffness=1e12). PneumaticCavity(surfaceMeshFileName=fingersCavitySurfaceMesh,; attachedAsAChildOf=finger,; name='Cavity',; rotation=fingersParameters[i]['rotation'],; translation=fingersParameters[i]['translation'],; initialValue=cavitiesInitialValue,; valueType='pressure'). rootNode.addObject(WholeGripperController(node=rootNode)); `; `# -*- coding: utf-8 -*-; import math. # User parameters; cubeParam = {'name': ""Cube"",; 'totalMass': 0.002,; 'translation': [15.0, 20.0, 0.0],; 'uniformScale': 21}. floorParam = {'name': ""Plane"",; 'color': [1.0, 0.0, 1.0],; 'isAStaticObject': True,; 'uniformScale': 3}. # Fingers Mesh & Shared Parameters; fingersVolumeMesh = 'data/mesh/pneunetCutCoarse.vtk'; fingersSurfa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5060:4872,integrat,integration,4872,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5060,1,['integrat'],['integration']
Deployability,"Conclusion of several .. years of discussion with @damienmarchal :. such circular dependencies should be handled by defining clear input data which update output data.; For instance for a Mass:; - input data: `d_inputMassDensity` and `d_inputTotalMass` (input prefix would make it clear that a circular dependency is avoided); - actual data used in computations (outputs): `d_massDensity` and `d_totalMass`. When `d_inputMassDensity` is modified, it triggers a callback like:; ``` cpp; addUpdateCallback(""updateFromTotalMass"", {&d_inputTotalMass}, [this](const core::DataTracker& ); {; .. /// do the computation; return sofa::core::objectmodel::ComponentState::Valid;; }, {&d_massDensity, &d_totalMass});; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2173#issuecomment-1564102951:148,update,update,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2173#issuecomment-1564102951,2,['update'],"['update', 'updateFromTotalMass']"
Deployability,"Conflict because you removed the files of QGLViewer and https://github.com/sofa-framework/sofa/pull/4844 did edit the CMakefile.; I think you will have to update the CMakefile in the fork of QGLViewer with the content of the PR4844. And an other note about the fork of QGLViewer, I feel a bit conflicted calling the branch `2.8.1` with the sofa modifications inside (calling `sofa_*` macros, etc). I guess this branch should be called `2.8.1_sofa` or something like that",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4840#issuecomment-2268262112:155,update,update,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4840#issuecomment-2268262112,1,['update'],['update']
Deployability,Congrats Lionel for this nice integration PR !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/501#issuecomment-339616673:30,integrat,integration,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/501#issuecomment-339616673,1,['integrat'],['integration']
Deployability,"Corrected again...; This code is pure c++, no need for special assignees.; I let you update your changelog if you want to incorporate this PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-270319148:85,update,update,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-270319148,1,['update'],['update']
Deployability,"Correction of the import of the queue library so that it can work with python3. The import and use of the queue library has changed between python2 and python3.; I updated it to use it in python3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2572:164,update,updated,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2572,1,['update'],['updated']
Deployability,Could you please manually rebase your branch to the updated upstream/master? Some changes on master prevent GitHub from auto-rebasing.; ```; git checkout newtests_week49; git fetch upstream/master; git rebase upstream/master; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/97#issuecomment-266778341:52,update,updated,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/97#issuecomment-266778341,1,['update'],['updated']
Deployability,Could you share your CMakeCache.txt please @MingshanHe ?; It could be related to your Qt configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1296256287:89,configurat,configuration,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1296256287,1,['configurat'],['configuration']
Deployability,"Could you try downgrading setuptools and wheel?; It sounds a bit like this problem here: https://stackoverflow.com/questions/76129688/why-is-pip-install-gym-failing-with-python-setup-py-egg-info-did-not-run-succ. Even though I am not quite sure, why it complains about `extras_require`, if you do not pass it at all.; Maybe this can give more insights https://github.com/freqtrade/freqtrade/issues/8078. I am currently porting sofa_env to gymnasium, so that problem is only temporary.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757852952:145,install,install-gym-failing-with-python-setup-py-egg-info-did-not-run-succ,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757852952,1,['install'],['install-gym-failing-with-python-setup-py-egg-info-did-not-run-succ']
Deployability,Create a Camera component so that it become possible to render a scene. The difference with InteractionCamera is that the Camera component is not having any interaction so you can implement; your own 'application specific behavior' by using an external Controller (eg: PythonScriptController). Changes:; - the BaseCamera now has a link to a BackgroundSetting so multiple camera can have multiple background. ; - the BaseCamera now implement a draw() method. If you don't want to see what is drawn...then; restrict the rendering of your scene graph to only call drawVisuals() which is what it is supposed to do :) ; - the Camera alias is not anymore creating an InteractionCamera but a Camera object. Update the caduceus example. NB: I know there is much more to refactor but I have not time for that. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/674:700,Update,Update,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/674,1,['Update'],['Update']
Deployability,"Currently config.h is a all-in-one configuration file that is generated by CMakeLists and included nearly everywhere. The problem is that it contains also very specific options that very few files are using. But, each time any of these specific option is changed sofa needs to be recompiled entirely. This PR is a implementing a more modular approach in which each .cpp that specifically requires a given define include a dedicated file.; Eg:; #include<config/build_option_opengl.h> // to do #if(SOFA_WITH_OPENGL==1); or; #include<config/build_option_experimental.h> // to do #if(SOFA_WITH_EXPERIMENTALFATURE==1); or; #include<config/sharedlibrary_defines.h>. It is still possible to use the old file but by being more specific we will reduce the amount of file to recompile when we will changed something. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/475:35,configurat,configuration,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/475,1,['configurat'],['configuration']
Deployability,"Currently in Sofa we aren't catching any exceptions. . The consequence is that every exception propagates to the top level exception handler halting the application. ; Un-handled exception are useful to detect bugs but this is a non-sense to use such top level handler to process possible application errors like failure to load a plugin or a scene. . A good approach should be that any exception that can be fixed without editting the source code (ie. but by editting the scene or changing some system configuration and so on) should ends with a gracefull error message indicating to the user how to fix the error cause. To implement this I suggest to:; - add a close to top-level try/catch block around simulations/plugin actions; - add a SofaSimulationException that has an error message, the component that emitted it and can have a backtrace as well as a top level reactions to do (eg: set componentstate to invalid and stop simulation). We should also use this SofaSimulationException at any place we are using msg_error(). ; (Actually it could even make sense to replace the msg_error macro by throwing the exception). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344:503,configurat,configuration,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344,1,['configurat'],['configuration']
Deployability,"Currently sofa does not compile with VS2013, and I see there is no VS2013 VM on the continuous integration.; - Is VS2013 support dropped ?; - I read in some email that there is a plan to have again a VS2013 VM, is it still the plan ?. thomas",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/98:84,continuous,continuous,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/98,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"Currently the icons in the scene graph are not reflecting the real state of the corresponding component's message log because the icons are set at scene loading and not updated after. This rise consistency issues for dynamic scene which adds at run-time new messages to component's log (see the example below where the messages is emitted on key pressed. . This is a follow up of PR #2398 . The PR produce the expected behavior with this kind of scene; ```python; import Sofa. class MyC(Sofa.Core.Controller):; def __init__(self, *argv, **kwargs):; Sofa.Core.Controller.__init__(self, *argv, **kwargs); self.node = kwargs.get(""target""); ; def onKeypressedEvent(self, event):; Sofa.msg_info(self, ""Info message in the component""); Sofa.msg_error(self.node, ""Error message in the target's node""). def createScene(root):; root.addChild(""Child1""); root.addObject(MyC(name=""Dmaien"", target=root.Child1)); ```. NB: I have considered having a Data<queue<Message>> but given how is implemented Data I need to provide << and >> operator which does not have real sense in this scenario. ; ______________________________________________________; By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3027:169,update,updated,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3027,1,['update'],['updated']
Deployability,"Currently we have a very strict reviewing process to validate a PR for merging in master. This is very good because we now have a very stable master. But after one year I think our approach also tend to favor trivial ""micro changes"" against complex things. . Because they are hard to read, or review, or because they may eventually break something, big PRs are often rejected. This is a drama and I think that we should make en effort to facilitate much more these one because they contains real work (ie...an engineer spends several days or week that he (and is employer) is willing to offer to the community). Loosing those contributions is just a raw loss for the community. . So I think we should relax a bit our rules to allow this kind of PR to be merged.; I see several aspects:; - reviewers should adapt their ""quality level"" to the size of the PR. There is no need to be super pinchy on two or three micro-details of a 50h PR. (reviewers should instead contribute to the PR by fixing that details); - reviewers should be willing and adapt their reviewing time to the size of the PR. A 50h PR really deserve 1H of reviewing from the community. ; - we should also have a way to relax the ""stability"" constraint of our API/software to allow breaking changes. On that aspect I would like to propose to have one release a year dedicated to BREAKING changes and ship it with tools to help users to fix their scenes. Any opinion ?; @bcarrez @hugtalbot @guparan @fredroy @matthieu-nesme @JeremieA, @ChristianDuriez, @olivier-goury",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/318:1316,release,release,1316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/318,1,['release'],['release']
Deployability,"Currently when object are unable to be created there is no filename/line information on where the problem come from. . In this PR I implemented the missing <<operator in messaging.h to report those line number. ; Now you can write: ; ```cpp; msg_info() << SOFA_FILE_INFO_COPIED_FROM(""myPythonFile.py"", 4) << ""blah balh"" ; ```; To have the file name & line number associated in the message emitting information. If you don't the emitting information will be the source code file&line location. . If updated the xml load to take this feature into account. ; The python loader is updated in the PR #304 . ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314:498,update,updated,498,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314,2,['update'],['updated']
Deployability,"Currently, if you build Sofa with FFMPEG support, linking SofaFramework to an external project will require to find the FFMPEG_exec target, which will not be found: the cmake script to find the FFMPEG executable isn't installed by the Sofa install process. This FFMPEG executable path is never used in header files, only in cpp, I don't see any reason to force external projects to find it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1177:218,install,installed,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1177,2,['install'],"['install', 'installed']"
Deployability,Cython is a de-facto standard to make ease binding between C++ and python. I use it to make 'per plugin' binding and will probably submit some in future PR. ; To ease the writing of cmake of these binding it is nice to detect if cython is installed what this file is doing. . The file is taken from (all credit should go to them):; https://github.com/thewtex/cython-cmake-example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/734:239,install,installed,239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/734,1,['install'],['installed']
Deployability,"Dashboard is showing good progress, only one scene crash on ubuntu & centos in an easy to fix issue.; Still one unknown test-failure on centos (but it may be a configuration problem related to LANG).; One test failure on windows is still because this machine does not have libjpeg/libtiff installed (or we need a full build ?). Three are test problem. The big dark spot is now the 26 remaining crashes ? Can someone with MacOS investigate the issues please ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357504599:160,configurat,configuration,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357504599,2,"['configurat', 'install']","['configuration', 'installed']"
Deployability,Data update,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/60:5,update,update,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/60,1,['update'],['update']
Deployability,Data update listener,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/61:5,update,update,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/61,1,['update'],['update']
Deployability,Data update: simplify Data tracking,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80:5,update,update,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80,1,['update'],['update']
Deployability,DataWidget of MeshROI does not update on refresh,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3487:31,update,update,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3487,1,['update'],['update']
Deployability,"Dear @faichele ,. Following the SOFA dev meeting 25/01/2017.; Multi-threading plugin proposed by @faichele. Your new plugin implements a static scheduling for collision detection. The implementation does not require any change of the existing collision components of SOFA. The bounding volume hierarchy methods is parallelized. It should be easy to use. Compared to the approach used in the MultiThreading plugin using the ""work-stealing"" scheduling pattern (https://en.wikipedia.org/wiki/Work_stealing), Fabian's implementation is based on ""conventional"" work-sharing, with a ""round-robin"" assignment of collision pair checks per thread. One extension is the fact that worker threads are persistent: they do not terminate after processing all assigned tasks, and no new threads are spawned when new collision pair check tasks are added to the thread pool. Instead, worker threads enter a ""sleeping"" state to avoid using CPU cycles when no tasks are processed. This avoids unnecessary respawning of threads every 10 to 50 ms, since the collision detection is typically called very often and in quick succession. @faichele , you mentioned it will be released under open-source license and with standalone for beta testing. Tests on potential performance gains remain to do (number of per checks).; Do not hesitate to correct me. In the context of the recent coding sprint, some new feature around multithreading were added in a branch ( https://github.com/sofa-framework/sofa/tree/issofa_multithreading ), not merged yet. This should be discussed and merged at the upcoming STC. @JeremieA , would you agree to prepare a short illustration/explanation of the API changes of your multithreading feature branch?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830:1149,release,released,1149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830,1,['release'],['released']
Deployability,"Dear @michael-barrow . Normally the grayed out entries means that the corresponding data field has the ""readOnly"" flag set, so it is surprising the this behave differently in Modeller & runSofa. Maybe this is caused by some non-initialized variable somewhere in the Modeller, in runSofa or in the Data itself. . When I will have time I will give a lookt at that to be sure it is not in the Data. If it turns out to be a problem specific to the Modeller well...as the Modeller is deprecated and should be replaced by runSofa2 (code it here https://github.com/sofa-framework/SofaQtQuick) I prefer to devote more time to this one :) . Anyhow Michael, thanks again for your investigation, feel free also to update the issue if you notice similar problem. . Regards,; Damien. ; EDIT: I changed my mind, so I changed the comment :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/686#issuecomment-397544653:703,update,update,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/686#issuecomment-397544653,1,['update'],['update']
Deployability,"Dear all, @faichele @fjourdes @JeremieA . Should we include this as a new plugin in SOFA ? How should it be articulated and integrated in SOFA ?; Thanks for your input.; Cheers.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-265508540:124,integrat,integrated,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-265508540,1,['integrat'],['integrated']
Deployability,"Dependencies packages were updated, we are testing it with standard builds.; And then we will launch new checks on this PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-289724146:27,update,updated,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-289724146,1,['update'],['updated']
Deployability,"Dependency on #760 . This PR mimics the behavior of the DataEngine, by binding the cleanDirty method in python, and not calling cleanDirty before calling update(); Furthermore, update() is not called from OnBeginAnimationStep events anymore, but only through the natural DDGNode update mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751:154,update,update,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751,3,['update'],['update']
Deployability,"Dependency tracking between libraries is a very serious issue and the state in Sofa is bad. We are currently mixing system specific management (apt get install someLibs, manual install on windows) all combined with hard copy of other ones in extlibs. . I found https://hackernoon.com/approaches-to-c-dependency-management-or-why-we-built-buckaroo-26049d4646e7 to be an interesting reading to understand a bit more the dependency problem in c/c++. . To improve the Sofa situation are :; - git submodule; - CMake's ExternalProject_add ; - buckaroo. The best is probably buckaroo but, given that it is a big work to use it and we have much higher priority task, CMake ExternalProject_add sound's a good improvement with a reduced cost.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369914314:152,install,install,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369914314,2,['install'],['install']
Deployability,Depends #814; This PR renames DataTrackerDDGNode's isDirty() method to hasChanged() to reduce confusion between hasChanged and BaseData::isDirty(). It depends on #814 because replacing update with doUpdate forces the replacement of calls to data.isDirty() with m_dataTracker.isDirty(data) which means some extra calls are added in #814. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/822:185,update,update,185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/822,1,['update'],['update']
Deployability,"Depends on #1226 . This PR provides a callback method in Base to easily connect DDGNodes (inputs & outputs) within a component, through the use of DataTrackerEngines. It is inspired by a POC from @damienmarchal in a branch we have in SofaDefrost/sofa.; The syntax to create a callback is the following:. ```cpp; addUpdateCallback(""dataTrackerEngineName"", {&inputs}, []()->ComponentState{; // Some code in a lambda setting the componentState by return value; }, {&outputs});; ```; This method will create a DataTrackerEngine in a map within Base, give it a name, set this as its owner, set the given list of inputs and outputs for the engine, and finally, use the given lambda as a delegate method for the update() function of the engine (delegate, because engine->updateAllInputsIfDirty() is called before the lambda, and engine->cleanDirty() is called after... just like a normal engine.). The test in SofaSimulationGraph_test/DDGLink_test.cpp has been updated to show how to use it in a simple class with 1 input / 1 output. Actually, the code doesn't work... I get an ugly exception when my engine tries to call the delegate lambda:; ```; unknown file: Failure; C++ exception with description ""bad_function_call"" thrown in the test body.; ```. No idea what this is, if you have suggestions, please don't hesitate to correct me or tell me what I did wrong... ;); Enjoy the WE =). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1227:705,update,update,705,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1227,3,['update'],"['update', 'updateAllInputsIfDirty', 'updated']"
Deployability,Detect missing python27.dll in installer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879:31,install,installer,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879,1,['install'],['installer']
Deployability,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2241:170,update,updated,170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241,2,['update'],"['updateJacobian', 'updated']"
Deployability,Did you have some time to test my patch @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476541612:34,patch,patch,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476541612,1,['patch'],['patch']
Deployability,Discuss the integration of @courtecuisse @bakpaul implementation of the CollisionPipeline,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4222:12,integrat,integration,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4222,1,['integrat'],['integration']
Deployability,Do this means that the meshes loader will not read the textures correctly if the plugin is not loaded ? ; For coherency I thinkg the loader should be transformed into plugin as well with a dependency to the ; CImagePlugin. . Just a small side note... on the CI it seems that to fully function CImage requires imagemagick or graphicsmagick to be installed and available in the path on the machine...is it an annoying dependency ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305157679:345,install,installed,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305157679,1,['install'],['installed']
Deployability,Do you know if another collision pipeline ever existed?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1386645313:33,pipeline,pipeline,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590#issuecomment-1386645313,1,['pipeline'],['pipeline']
Deployability,"Doing the same as for Eigen, boost is definitely the way to go. Given that I want to stay focused on other tasks I let anyone with free time to do that nicer move. And if no one has time..then I suggest merging the updated version.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1687#issuecomment-754530497:215,update,updated,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1687#issuecomment-754530497,1,['update'],['updated']
Deployability,Draft of a proposition to enforce the API for a clear thread friendly semantics. ; ```cpp; class SOFA_CORE_API DetectionOutputVector; {; public:; ; virtual int acquireAddContact(){}; virtual releaseAddContact(int){}; virtual void addContact(DetectionOutput* detectionOutput){; if(getHasBeenAcquired){ fail }; if(notAcquired) { warn }; ; ...; }. /// ; virtual const DetectionOutput& getContacts(){; if(noToken) return array;; return nullptr; ; }; virtual void releaseGetContact(DetectionOutput& r){; ....; }; };; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965#issuecomment-474772645:191,release,releaseAddContact,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965#issuecomment-474772645,2,['release'],"['releaseAddContact', 'releaseGetContact']"
Deployability,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4245:288,install,install,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245,2,"['install', 'release']","['install', 'releases']"
Deployability,"During remove process inside `TopologySubsetData` the current Data was being modified but the method `TopologySubsetIndices::indexOfElement` was also called.; This method was using: ; `const container_type& data = this->getValue();` which call updateIfDirty messing WriteAccessor in the caller method.; Fix it by using directly: `const container_type& data = m_value.getValue();`. The others modifications are just better logs for debug. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3330:244,update,updateIfDirty,244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3330,1,['update'],['updateIfDirty']
Deployability,"Each readXX method exists in two implementation. One that takes State* while the other is taking a SingleLink<State>. Given that from a SingleLink<State> one can get the corresponding State* using the get() method it is questionable why to maintain two set of methods for the same service. To mimimize the surface of the API I removed the link based version and update the code base accordingly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3304:362,update,update,362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3304,1,['update'],['update']
Deployability,"Eh, let us note that, one is a [tractive force](https://en.wikipedia.org/wiki/Tractive_force), while the other is a [pressure](https://en.wikipedia.org/wiki/Pressure). The force direction of the pressure field will change with respect of the updated surface normal. The force direction of the tractive forcefield won't change.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1303#issuecomment-606616400:242,update,updated,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1303#issuecomment-606616400,1,['update'],['updated']
Deployability,Enhancing Collision Physics in Unity with Sofa Framework Integration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4621:57,Integrat,Integration,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4621,1,['Integrat'],['Integration']
Deployability,Error in first launch of sofa after installation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1943:36,install,installation,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1943,1,['install'],['installation']
Deployability,"Error of one test involving topological change : TopologicalChangeProcessor_test.Incise; ```; [ RUN ] TopologicalChangeProcessor_test.Incise; [DEPRECATED] [Sofa_test] Sofa_test & BaseSofa_test are now deprecated classes. To fix this message you should replace their usage by BaseTest, NumericTest or BaseSimulationTest to implement your tests; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1150/mac_clang-3.5_options_release/src/modules/SofaMiscTopology/SofaMiscTopology_test/scenes/IncisionTrianglesProcess.scn; [WARNING] [DiagonalMass(default5)] Negative value of vertexMass vector: vertexMass[357] = -0.138459; [ERROR] [DiagonalMass(default5)] doUpdateInternal: incorrect update from vertexMass; ```. maybe nodes/elements which are removed twice ... @epernod",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1150#issuecomment-534008149:689,update,update,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1150#issuecomment-534008149,1,['update'],['update']
Deployability,Errors when installing the CGAL plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1389:12,install,installing,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1389,1,['install'],['installing']
Deployability,"Even in the eventuality that more changes are needed to actually clean the installation of SOFA, these changes still are needed.; So LGTM :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/609#issuecomment-373022322:75,install,installation,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/609#issuecomment-373022322,1,['install'],['installation']
Deployability,"Everything is in the title.; Also update SOFA version in CMake to `18.06.dev`. From source dir: `./scripts/licenseUpdater/licenseUpdater.sh . auto 2018 ""development version""`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/585:34,update,update,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/585,1,['update'],['update']
Deployability,"Example scene files are in ""scenes"" directory and not in ""examples"" directory,; as expected by CMake install command. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/299:101,install,install,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/299,1,['install'],['install']
Deployability,"Except it is not !. `install/include/SofaSimulation/sofa/simulation/config.h`; `install/include/SofaFramework/sofa/simulation/simulationcore.h`. **SofaSimulation** include path is only included if I link against **SofaSimulationCommon**, **SofaSimulationTree** or **SofaSimulationGraph**. Here I don't need those targets, but only the **SofaSimulationCore** target.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-541027343:21,install,install,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-541027343,2,['install'],['install']
Deployability,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526:151,configurat,configurations,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526,1,['configurat'],['configurations']
Deployability,FIX install path for headers in `unsupported/Eigen`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1240:4,install,install,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1240,1,['install'],['install']
Deployability,FIX scene: update GenerateGrid usage to match current component interface. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/303:11,update,update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/303,1,['update'],['update']
Deployability,FIX: sofa installation.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/194:10,install,installation,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/194,1,['install'],['installation']
Deployability,FIX: wrong paths of installed headers in SofaBaseMechanics,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/887:20,install,installed,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/887,1,['install'],['installed']
Deployability,FO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9260,Release,Release,9260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,FO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1628,Release,Release,1628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"FYI:; Since the inclusion of .............**, Visual Studio 2015 needs to be updated to Update3** Service Pack while compiling AdvancedTimer.cpp.; ""....\sofakernel\extlibs\json\nlohmann_json.h(1259): error C2100: illegal indirection (compiling source file ....\SofaKernel\framework\sofa\helper\AdvancedTimer.cpp)"". (https://github.com/nlohmann/json/issues/719). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/420:77,update,updated,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/420,1,['update'],['updated']
Deployability,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1944:385,configurat,configuration,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944,1,['configurat'],['configuration']
Deployability,"Factorize:; - use updateIfDirty in BaseData.h; - in Data.h in the beginEdit function use: beginWriteOnly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1569:18,update,updateIfDirty,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1569,1,['update'],['updateIfDirty']
Deployability,"FastTetrahedralCorotationalForceField initialized its Poisson's ratio and Young's modulus with different values than the other tet FEM force fields. TODO:. - [x] Update tests; - [x] Update doc: https://github.com/sofa-framework/doc/pull/83. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3563:162,Update,Update,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3563,2,['Update'],['Update']
Deployability,FileRepository is used by too many components to be optional. As a consequence boost filesystem and locale are made required; This commit fixes undefined symbol error occurring at link time when the filesystem or locale boost lib are not installed,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/122:238,install,installed,238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/122,1,['install'],['installed']
Deployability,"FileRepository needs to be checked and fixed. It does not work for sure in some situations, e.g. if a sofa install is copied in a path containing accents on windows, FileRepository does not find the files. Note I have not go any further, and everything needs to be investigated.; I did not test with the distributed, precompiled package. I did not test on linux...",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/17:107,install,install,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/17,1,['install'],['install']
Deployability,"First of all, you should try to get rid of the `[WARNING] [ObjectFactory] Class already registered`; It usually means you already loaded a library with the same components inside.; In your case, you have a mixup between your build version and an installed version.; Indeed, you are running **runSofa** from the build (`/home/sergei/Source_code/Sofa_development/sofa/build_release/bin/runSofa`) and SOFA_ROOT is set to `SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install`. Either run from your install (and keep SOFA_ROOT); or set SOFA_ROOT to your build directory.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1110162371:246,install,installed,246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1110162371,3,['install'],"['install', 'installed']"
Deployability,"First steps for a consistent, uniformed and centralized configuration storage. This PR adds the ability to retrieve the current local config folder for the user. . These return respectively (local account is `fred`):; - Linux:; ```; getUserLocalDirectory(): /home/fred/.config; getSofaUserLocalDirectory(): /home/fred/.config/SOFA; ```. - macOS:; ```; getUserLocalDirectory(): /Users/fred/Library/Application Support; getSofaUserLocalDirectory(): /Users/fred/Library/Application Support/SOFA; ```; - Windows:; ```; getUserLocalDirectory(): C:/Users/Fred/AppData/Local; getSofaUserLocalDirectory(): C:/Users/Fred/AppData/Local/SOFA; ```. `getSofaUserLocalDirectory()` creates also the directory if it is not created yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4875:56,configurat,configuration,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4875,1,['configurat'],['configuration']
Deployability,"Fix #1667 , #1661 and much more... # TL;DR; Sofa.Config is a new module containing all the configuration necessary for compiling the SofaFramework and the subsequent modules.; It allows to spread efficiently all the flags/config/whatever to the cmake modules using it. # Description; A lot of CMake configuration/flags are spread everywhere in the code base: root CMakefile, Soframework CMakefile, SofaHelper CMakefile.; Moreover, a lot of compiler options are not set by **target** (CMake notion), so those are to added EVERYTIME for each projet/plugin (see SofaPython3): c++17, MSVC special flags, etc. # Solution; This PR regroups all CMake config code and SofaFramework is no more the ""bootstrapper"" or whatever it was not.; If you linking against anything from SOFA (most likely at least SofaHelper), the configuration will spread into your project automatically.; This module will be the lowest in the depencency chain (was a bastard mix of SofaFramework/SofaHelper before). # WIP; * ~~Some CMake file to clean~~. * ~~Add no-attribute flags from #1682~~. * Some variables are still not linked to Sofa.Config like Sofa_VERSION: it was in the root CMakefile before, so all the projects know this variable.; For now, Sofa.Config set those global variables **PARENT_SCOPE** but this is ugly in my opinion, and not ""Modern CMake""; One solution is to link this variable to a property of Sofa.Config, and retrieve this property when needed. But it seems a bit bothersome.; ```; get_target_property(Sofa_VERSION ${TARGET} Sofa_VERSION_PROPERTY); ```; Any opinion ?. * I guess there will other things to do later like removing all the tests related code/config into an eventual Sofa.Test, etc; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; _____",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1674:91,configurat,configuration,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1674,3,['configurat'],['configuration']
Deployability,"Fix #632 . The plugin list was never updated if we removed a plugin in the cmake configuration.; Plus, it was possible to append several identical targets. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/645:37,update,updated,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/645,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"Fix #809; Following the STC decision to replace the DataEngine with the SimpleDataEngine, here's the PR that does just that. This replacement involves taking every engine in Sofa and:; - replacing its **update()** method with the new delegate **doUpdate()**.; - Remove the calls to **data.isDirty()** and (smartly) replacing them with **m_dataTracker.isDirty(data)**; - Remove the **cleanDirty()** calls while making sure we don't break the engine's behavior. Most engines present in SOFA are either in SofaGeneralEngine or SofaMiscEngine. ______________________________________________________ ; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/814:203,update,update,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/814,1,['update'],['update']
Deployability,"Fix **one** of the bugs breaking the Geomagic behavior. When updating the position of the Omni visual node, visitor update was call on the Omni->getContext() which is usually the Root node, thus all node where updated outside of the normal mechanical step leading to bad physic behavior. ; Call the update on the Omni visual node only. + some small change and warning fix. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/761:116,update,update,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/761,3,['update'],"['update', 'updated']"
Deployability,Fix CMakeLists bug on Sofa.ini and installedSofa.ini creation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/291:35,install,installedSofa,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/291,1,['install'],['installedSofa']
Deployability,"Fix a peculiar bug where:; - one wants to compile a project out-of-tree,; - on WIndows,; - this project needs Sofa.GL; - Sofa.GL is find_package()'d first. As GLEW config on windows is special (windeppack stuff), its configuration is set-up in Sofa.Helper.; But the cmake config file for out-of-tree (Sofa.GLConfig.cmake.in) was trying to find GLEW before Sofa.Helper, hence cmake could not configure the projet and was yelling about not finding GLEW.; (got the case with registration plugin). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3098:217,configurat,configuration,217,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3098,1,['configurat'],['configuration']
Deployability,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1904:71,update,update,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904,1,['update'],['update']
Deployability,Fix crash when calling updateBBox w/o an mstate in TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1403:23,update,updateBBox,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1403,1,['update'],['updateBBox']
Deployability,"Fix crash when removing triangles in scene using TriangleModel component. Clean and comment the class while undusting it (sorry hard to read the diff). - remove serr/sout; - change all protected members prefix; - rewritte init and updateFromTopology methods; - Remove the handleTopologyChange method. As this class use directly the topology buffers, no need neither for TopologyData. Just check the topology revision and update the component if topology has changed.; - Update RemovingTrianglesProcess and AddingTrianglesProcess tests scenes to test the TriangleModel; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/903:231,update,updateFromTopology,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/903,3,"['Update', 'update']","['Update', 'update', 'updateFromTopology']"
Deployability,Fix deprecated warnings for release,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1166:28,release,release,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1166,1,['release'],['release']
Deployability,Fix gtest integration [WIP],MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/601:10,integrat,integration,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/601,1,['integrat'],['integration']
Deployability,"Fix install further to #4410 ; \+ minor warning fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4451:4,install,install,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451,1,['install'],['install']
Deployability,"Fix regression (appeared when boost was supposed to be removed from Sofa).; -> Plugins _not able to find Boost automatically_ failed to compile (because it needs boost to compile obviously); ; The problem was coming on Windows mainly, as boost are often installed in the system directories on Unix system. And few changes were added to make boost's CMake part more consistent. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/421:254,install,installed,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/421,1,['install'],['installed']
Deployability,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4570:45,install,installed,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570,1,['install'],['installed']
Deployability,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2246:53,release,release,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246,1,['release'],['release']
Deployability,Fix the failing test in; - MeshROI_test ; - PluginManager_test; - in TestMessageHandler remove un-used attribute that was causing a compilation warning in clang; - in image_test do some cosmetic cleaning to find why it fails... but in fact the problem should be fixed on the CI by installing convert & gm.exe on the VM. (this is done since this morning); - Improve the tests in FixedConstraint_test.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279:281,install,installing,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279,1,['install'],['installing']
Deployability,"Fix these errors: https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/963/CI_CONFIG=ubuntu_gcc-7,CI_TYPE=release/console. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1724:101,release,release,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1724,1,['release'],['release']
Deployability,Fix with patch; [SofaNonUniformFem] Remove shadow variable; pr: clean pr: fast merge status: ready; #1874 by maddin200 was merged yesterday • Approved,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1855#issuecomment-788859878:9,patch,patch,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1855#issuecomment-788859878,1,['patch'],['patch']
Deployability,Fix: ; - Dll export + Add config file; - Stop scheduler only if thread has successfully started. Enhancements:; - Add: specific method to handle tool buttons; - Add: send script event when button are used.; - Add: option to not automatically start tool at init but manually start it through a method call. (start at init by default); - Update: m_errorDevice is not anymore a bool but store the HD_DEVICE_ERROR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/786:336,Update,Update,336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/786,1,['Update'],['Update']
Deployability,"Fixed in a99443a98fed8052fe1159487d73639a6a6e2624. I finally changed DataFileNameVector that is now a SVector<string>, so be aware its string serialization changed. I made this choice because only OglShader is using DataFileNameVector in sofa-public, so the consequences of this change are small, and at least future usage of DataFileNameVector will be ok.; Of course if your private code is using DataFileNameVector, you have to update it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/21#issuecomment-256926937:430,update,update,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/21#issuecomment-256926937,1,['update'],['update']
Deployability,"Fixed this error while trying to configure a out-of-tree compilation of a plugin depending on SofaGuiQt. `CMake Error at sofa/install/lib/cmake/SofaGuiQt/SofaGuiQtConfig.cmake:49 (find_package):; Found package configuration file:. sofa/install/plugins/SofaMiscForceField/lib/cmake/SofaMiscForceField/SofaMiscForceFieldConfig.cmake. but it set SofaMiscForceField_FOUND to FALSE so package; ""SofaMiscForceField"" is considered to be NOT FOUND. Reason given by; package:. The following imported targets are referenced, but are missing:; SofaBaseMechanics`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2707:126,install,install,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2707,3,"['configurat', 'install']","['configuration', 'install']"
Deployability,"Fixing build error on sofa-custom: https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/683/CI_CONFIG=ubuntu_gcc-7,CI_TYPE=release/console. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1648:118,release,release,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1648,1,['release'],['release']
Deployability,"Following #2368 . Some projects (mainly tests) are using find_package(SofaBase) which still uses the project SofaEigen2Solver for compatibility purpose. This leads to a few prints in the cmake output about the SofaEigen2Solver being deprecated.; Of course this is a bit slightly annoying to read the cmake output. This PR limits the deprecation display to once a cmake configuration pass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2386:369,configurat,configuration,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2386,1,['configurat'],['configuration']
Deployability,"Following a recent update of my fork from SOFA master, I observed a strange behaviour in the GUI while running a scene of mine where I'm doing catheter navigation (similarly to BeamAdapter). Namely :; - Before, Ctrl was the default key to use interactive controls, for instance `Ctrl+uparrow` was caught by `if event['key'] == chr(19)` in my Python controller. Now `uparrow` is caught by the same line.; - Before, keeping `Ctrl+uparrow` pushed down was automatically playing the control over and over (until the key was released). Now I have to release the key (`uparrow`) and press it again to redo the control. Talking with @fredroy, it seems that I'm not the only one to have observed this problem, so it might come from a PR undesirable side effect. Additionally, it apparently doesn't come from SofaPython3. Regarding the master, all I can say is that the previous update I made was on the 30/09/2022 (so I didn't have this issue at the time), and that the issue appeared after my last update on the 24/11/2022. I briefly went through the merged PR in between these dates, but could find one which could be incriminated. I'm working on Ubuntu (20.04). It is also worth mentioning that I did some other updates during the time lapse (basically, all default updates suggested by Ubuntu's Software Updater), but no major change in any software version. For this reason, I can't be sure at the moment that the issue traces back to SOFA itself. Is anyone else experiencing this ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3510:19,update,update,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510,8,"['Update', 'release', 'update']","['Updater', 'release', 'released', 'update', 'updates']"
Deployability,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2042:429,release,release,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042,1,['release'],['release']
Deployability,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4542:254,configurat,configuration,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542,2,"['a/B', 'configurat']","['a/BeamAdapter', 'configuration']"
Deployability,Following other components let's apply the updateInternal API to DiagonalMass. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1150:43,update,updateInternal,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1150,1,['update'],['updateInternal']
Deployability,"Following our discussions:; SimpleDataEngine's update method now looks like this:. ```cpp; void update() final; {; updateAllInputs() // a method that calls `updateIfDirty()` on all inputs: can be overridden, but rarely necessary; DDGNode::cleanDirty() // same as cleanDirty(), but does NOT call m_datatracker->clean() so counters are still valid after; doUpdate() // actual magic; m_datatracker->clean() // cleaning the counters; }; ```. To my understanding, DataTrackerDDGNode's `cleanDirty()` method becomes useless in DataEngines at this point, making the workflow much smoother for the user's impl of `doUpdate()`. I believe there would be no side effects (apart from being BRAKING...) if we would replace `core::DataEngine` with `core::SimpleDataEngine`, and rename all engine's `udpate()` methods to `doUpdate()`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/760#issuecomment-424761403:47,update,update,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/760#issuecomment-424761403,4,['update'],"['update', 'updateAllInputs', 'updateIfDirty']"
Deployability,Following the ConstantForceField let's apply the updateInternal API to UniformMass. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1149:49,update,updateInternal,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1149,1,['update'],['updateInternal']
Deployability,"Following the rise of discussions about further using Eigen inside SOFA, this PR aims at standardizing its inclusion in the framework. Right now, SOFA automatically pulls a fixed version of Eigen (3.2). It also install it along with SOFA, which is a big problem when an external program or library tries to compile with both SOFA and another version of Eigen. . This PR removes the automatic pull of Eigen, and instead rely on the standard find_package(Eigen3) which is available in almost all distributions via the system package manager (apt, dnf, pacman, etc), for instance:. <table>; <tr><td>Debian 9</td><td>Eigen 3.3.2</td></tr>; <tr><td>Debian 10</td><td>Eigen 3.3.7</td></tr>; <tr><td>Ubuntu 18.04</td><td>Eigen 3.3.4</td></tr>; <tr><td>Ubuntu 19.10</td><td>Eigen 3.3.7</td></tr>; <tr><td>Fedora 29</td><td>Eigen 3.3.5</td></tr>; <tr><td>Fedora 30-31</td><td>Eigen 3.3.7</td></tr>; </table>; ; Right now, this PR compiles with all of the previous distributions (I've tested it with Docker by simply installing eigen3-devel and compiling Sofa). ~~However, there is a faulty test with Eigen > 3.2: the **compliant_test** from the Compliant plugin. It seems to come from the Assembly visitor of the plugin, which relies a lot on Eigen to build the system matrices. I'll have a look at it in the next days, but if someone have an idea...~~ ; Found the nasty bug at 53dd4f5 - memcopy is _dangerous_ !. Everything ~~else~~ seems to be fine with recent versions of Eigen. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1281:211,install,install,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1281,2,['install'],"['install', 'installing']"
Deployability,"For information here is the current Topoogy classes architecture in sofa core.; ![Présentation sans titre](https://user-images.githubusercontent.com/21199245/111889075-75fc1100-89e2-11eb-9abc-ce8a4391ce7c.png). Here is the **current** architecture of TopologyData, TopologyHandler and TopologyEngine; ![Présentation sans titre(1)](https://user-images.githubusercontent.com/21199245/111889097-9f1ca180-89e2-11eb-9d80-ace8440c2887.png). With the **current** pipeline; ![Présentation sans titre(2)](https://user-images.githubusercontent.com/21199245/111889104-aa6fcd00-89e2-11eb-970d-050305cf0923.png). Here is the proposal of this PR. Basically all TopologyEngine have been removed and the code has been moved to TopologyData or TopologyHandler; ![Présentation sans titre(4)](https://user-images.githubusercontent.com/21199245/112510923-3773a700-8d92-11eb-9559-49d7c34c50b5.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1898:456,pipeline,pipeline,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898,1,['pipeline'],['pipeline']
Deployability,"For me those 2 components are the ONLY one updated right now. If a topology is **needed** for the good behavior of the component, it should be set using the link, otherwise you end up with unsure behavior.; Removing the warning will just let lazy people continue putting mass in the node without taking attention to what they are doing.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3116#issuecomment-1180079346:43,update,updated,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3116#issuecomment-1180079346,1,['update'],['updated']
Deployability,"For old modules with no headers like SofaGTestMain, SofaHelper, SofaDefaultType, SofaCore, Sofa.SimulationCore, SofaGuiQt. Should fix this kind of error:; ```text; Imported target ""SofaCore"" includes non-existent path; ""/home/runner/work/BeamAdapter/BeamAdapter/sofa/include/SofaCore""; in its INTERFACE_INCLUDE_DIRECTORIES. Possible reasons include:; * The path was deleted, renamed, or moved to another location.; * An install or uninstall procedure did not complete successfully.; * The installation package was faulty and references files it does not; provide.; ```; taken from https://github.com/sofa-framework/BeamAdapter/runs/6790181313?check_suite_focus=true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3023:420,install,install,420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3023,2,['install'],"['install', 'installation']"
Deployability,"For the coherency, I totally agree that mesh loaders should be gathered in a plugin.; As for the dependency, I would just warn the user that if find_package() in CMake does not find CImgPlugin, then texturing will just be disabled. (i.e no REQUIRED flag) ; you could wish to load meshes just for pure mechanical scene. As for the CimgPlugin and CImg, CMake detects if libpng/libjpeg/libtiff are present and enable/disable preprocessor flag directly. ; So for example if libjpeg is not present, the user is informed of it through CMake configuration process, and the ImageFactory does not add the *.jpg format into its supported image list. Finally, I would say that imagemagick dependency is quite annoying, especially for windows users.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305191404:535,configurat,configuration,535,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305191404,1,['configurat'],['configuration']
Deployability,"For the future, the work on improving the SOFA API has to be done to ensure a good initialization / update of components.; A good test would be to run sequentially: `storeResetState()` and `reset()`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1189978414:100,update,update,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1189978414,1,['update'],['update']
Deployability,"For whatever reason, MSVC19 does not compile anymore because of streams in fixed_array (maybe an update in the stl code); And after further tries, it is not really possible to just deal with iosfwd.h and the implementation in a cpp file (because of templates). ; Anyway, everything is including iostream so it wont hurt more the compilation time.⏳. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1426:97,update,update,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1426,1,['update'],['update']
Deployability,"Forgot to install libglew-dev on a new system, cmake is OK but when compiling, an error on the fact that gl/glew.h could not be found. Some time ago, it had been decided that the gl subsystem will always need glew (it was optional before); But the cmake did not reflect this choice. Now cmake will complain if glew is not found (if SOFA_WITH_OPENGL is enabled of course!). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2358:10,install,install,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2358,1,['install'],['install']
Deployability,"Found out that Eigen3 in Fedora 29 installs a `FindEigen3.cmake` that do not set the imported target **Eigen3::Eigen**, resulting in CMake failure when compiling SOFA or linking against it. ```; $ dnf locates /usr/share/cmake/Modules/FindEigen3.cmake; eigen3-devel-3.3.5-2.fc29.noarch : A lightweight C++ template library for vector and matrix math; Repo : fedora; Matched from:; Filename : /usr/share/cmake/Modules/FindEigen3.cmake; ```. There is also third party software that install their own, such as CGAL:. ```; $ dnf locates /usr/lib64/cmake/CGAL/FindEigen3.cmake; CGAL-devel-4.13-0.2.beta1.fc29.x86_64 : Development files and tools for CGAL applications; Repo : fedora; Matched from:; Filename : /usr/lib64/cmake/CGAL/FindEigen3.cmake; ```. Hence to avoid any of those, it is safer to set the NO_MODULE options to `find_package(Eigen3)` to look for **Eigen3Config.cmake** instead, which always define the imported target. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348:35,install,installs,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348,2,['install'],"['install', 'installs']"
Deployability,"From gitter:; ```; initData(data1, callback=myUnion), ; initData(data2, callback=myUnion), ; initData(data3, callback=myUnion), . void myUnion(BaseData* d){ changedData.push_back(d) ; }; bool needUpdate() { return changedData.size() != 0; }; ```. The idea here was to allow users to add different, per data callback function still allowing ; a way to implement a ""centralized"" update. The idea was also to specify in the initData which data are ""cached"" and thus should trigger update/reinit on change.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367266862:377,update,update,377,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367266862,2,['update'],['update']
Deployability,"From what I know, it is supposed to tell if the indices included in the BoxROI must be updated at each time step or not. So it's not the expected behavior.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-257834318:87,update,updated,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-257834318,1,['update'],['updated']
Deployability,"FromImage.cpp.o; ""_readImage(char const*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""ImageIO_alloc(unsigned long)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""CGAL::Image_3::private_read(point_image*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ld: symbol(s) not found for architecture x86_64; ```. This file is only included if the image plugin is activated, thus making this error appear only in specific cases. Moreover, since CGAL seems not tested on CI, this error might be quite old, as it has passed under the radar so far. It has been observed on OS X, and Linux. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/352:1879,update,update,1879,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/352,2,['update'],['update']
Deployability,Full doc updated in readme: https://github.com/sofa-framework/regression,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/830#issuecomment-440640198:9,update,updated,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/830#issuecomment-440640198,1,['update'],['updated']
Deployability,Further to #1183; Discussed in #744 . component upgraded:; - [SofaBoundaryCondition] ; - FixedConstraint; - FixedPlaneConstraint; - FixedTranslationConstraint; - AffineMovementConstraint; - LinearMovementConstraint ; - PartialLinearMovementConstraint; - PatchTestMovementConstraint; - projectDirectionConstraint ; - projectToLineConstraint ; - projectToPlaneConstraint ; - projectToPointConstraint; - QuadPressureForceField ; - SurfacePressureForceField; - TaitSurfacePressureForceField ; - TrianglePressureForceField; - ParabolicConstraint; - ConstantForceField ; - LinearForceField; - EdgePressureForceField ; - OscillatingTorsionPressureForceField; - HermiteSplineConstraint ; - LinearVelocityConstraint; - [SofaConstraint] ; - DOFBlockerLMConstraint ; - FixedLMConstraint; - UncoupledConstraintCorrection; - [SofaMiscFem] ; - TriangleFEMForceField; - TriangularAnisotropicFENForceField; - TriangularFEMForceField; - [SofaMiscFem]; - FastTetrahedralCorotationalForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - [SofaMiscForceField] ; - MeshMatrixMass; - [SofaExporter] ; - WriteTopology; - [SofaMiscTopology] ; - TopologyChangeProcessor; - [SofaGeneralEngine] ; - SmoothMeshEngine; - [SofaDeformable] ; - MeshSpringForceField. Component previously upgraded in #1183 : ; - DiagonalMass; - [SofaGeneralSimpleFEM]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaSimpleFEM]; - HexahedronFEMForceField; - TetrahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - NonUniformHexahedronFEMForceField; - [SofaGeneralDeformable] ; - QuadBendingSpring; - QuadularBendingSprings; - VectorSpringFF; - FastTriangularBendingSpring; - TriangleBendingSpring; - TriangularBendingSpring; - TriangularBiquadraticSpringFF; - TriangularQuadraticSpringFF; - TriangularTensorMassFF; ______________________________________________________; <!--- Please leave this at the end of your me,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1199:48,upgrade,upgraded,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1199,2,"['Patch', 'upgrade']","['PatchTestMovementConstraint', 'upgraded']"
Deployability,"Further to #2300 the coordinate textures do no update anymore when using a TextureInterpolation as input of texcoord. Due [this change](https://github.com/sofa-framework/sofa/pull/2300/files#diff-ebb9cb0da6bb4d64a21079624cb5082e2dc4d807d5d711a148d3ef756661418bR994):. ``` cpp; m_vtexcoords.setParent(nullptr); // manually break the data link to follow topological changes; ```. deleting this line solves the issue, but I would need your insight @epernod on what was exactly intended here.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2392:47,update,update,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2392,1,['update'],['update']
Deployability,Further to #2777 some codes might need to be updated.; The STC could be the occasion to dedicated a dev force on this.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3766:45,update,updated,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3766,1,['update'],['updated']
Deployability,Geomagic problem after the update of handling linearised constraints,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1148:27,update,update,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1148,1,['update'],['update']
Deployability,Getting an easy to install: SOFA+python+Caribou,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2981:19,install,install,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2981,1,['install'],['install']
Deployability,"Given that the 20.12 release is on its way we can probably update the tests to the new value. Reminder of the convention:; TypeInfo::GetTypeName() => is a string representing the type as seen from c++, eg: vector<Vec<double, 3>>; TypeInfo::name() => is a string representing the type with as much as short cut, eg: vector<Vec3d>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1709:21,release,release,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1709,2,"['release', 'update']","['release', 'update']"
Deployability,"Glad to see someone asking question on that topic. Since the release of sofapython3, I'm waiting someone having interest on that topic so we can modernize the prefab's using the added feature of sp3 and experience gained since sofapython2. . Short answers to your questions: ; - should they be located in the SofaPython3 plugin?; It is unclear to me about what you are talking about, prefab are already in SofaPython3. Are you in fact talking about the prefab that are in stlib ? ; If this is the case, it make sense to have prefab in SofaPython3 to demonstrate a ""standard"" way of doing a prefab through ""examples"", there could also have a standard prefab library, but I see no problem in having that in stlib or any other third party plugin. That's said, I don't consider the prefab in stlib mature enough for such move, first, because they are still implemented as they were back to python2 time, and up to now, not a lot of people have expressed interest in changing that to move forward; . - should we create many level of abstractions/prefabs?; From the experience in stlib there is always a trade-off between abstraction and usability and the overhead of modularization. But yes, there is always an interest in being able to build prefab from other prefab to make complex systems. . - definition of current prefabs, e.g. ElasticObject using a UniformMass?; Prefab just means you have an ""all-in-one"" object. There is no more constraint except from that. So it the choice of the one that make a prefab to decide prefabricating ""what"". That's said it is highly desirable to have set of prefabs that shares common structures and idioms so they are interoperable in the same scene. . Additional point:; - the prefabs implementation in SofaPython3 is only partially working and some fix are required; - there is a far too much limited support for prefab in our user interface, if we are going for generalize their use then additional support should be added.(eg: right-click navigating itno prefab s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4206#issuecomment-1740442279:61,release,release,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4206#issuecomment-1740442279,1,['release'],['release']
Deployability,"Glad you like it :-) . But first I need to figure out why it works on our fork but not on this one though :-/ . After that, it would be super sweet to add finer grained GIL release as you suggest, but since we also have the monstro-SofaPython-PR pending I anticipate many merge conflicts, so the plan was to keep this one as small as possible. BTW do we have actual costly or I/O-bound c++ operations exposed in python? And if so, do these happen during simulation or only during scene initialization?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313602996:173,release,release,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313602996,1,['release'],['release']
Deployability,"Good to me, ready!; We finally have a nice update mechanisms for Data in components others than Engines!; Thanks @marques-bruno 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-676025850:43,update,update,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-676025850,1,['update'],['update']
Deployability,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2302:50,configurat,configuration,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302,1,['configurat'],['configuration']
Deployability,"Great contribution, . I fully support any step toward smoother integration of Sofa with Python and this PR is one.; I also like the cleaning & factoring work with stuff like get_base function. . Really minor details: ; In SOFA we have plenty of TODOs forgotten since years that no one is responsible for, without any idea when this was added and when this will be done. To avoid that I suggest replacing things like; ```cpp; // TODO FIXME self is commented; ```; With one with more details; ```cpp; //TODO(mtournier 2017-05-30) Self, is commented there is possibly a problem (if not done in two years, you can remove this comment); ``` ; Or; ```cpp; //DEFECT(mtournier 2017-05-30) Self, is commented there is a problem when...; ``` ; To help general code maintenance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306728456:63,integrat,integration,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306728456,1,['integrat'],['integration']
Deployability,"Greetings,. I have built SOFA v21.12 without any error massages, on Ubuntu 18.04. And it works fine without plugins. However when I try to run examples for SoftRobots, I encounter the same problems as previously described is following topics, also tried the solutions that is described there. (Also tried to build on Ubuntu 20.04 but the result is the same). https://www.sofa-framework.org/community/forum/topic/error-couldnt-import-objects-from-stlib3-physics-rigid/. https://www.sofa-framework.org/community/forum/topic/issues-with-running-examples-on-sofa_v20-12-02_defrost_linux/. Has this problem been solved?. Moreover, my colleague also built SOFA and the plugins on Ubuntu 20.04, then sent me the built version of his. I have re-installed Ubuntu 20.04 with his user name, and surprisingly the plugins worked without any errors. Therefore, I am assuming there might be a mistake while I use Cmake. However, as me and my colleague discussed, we have followed exactly the same method but the results were different. I get the following error massage when I try to run SOFA with my build:. `[ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file '....path/to/file.../SoftRobots/docs/tutorials/FirstSteps/details/sofapython3/step4.py3scn'. ; Python exception: ; ImportError: cannot import name 'Floor' from 'stlib3.physics.rigid' (/....path/to/file...../sofa/build/lib/python3/site-packages/stlib3/physics/rigid/__init__.py). At:; step4.py3scn(2): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(843): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /usr/lib/python3.8/imp.py(171): load_source; /usr/lib/python3.8/imp.py(234): load_module; <string>(3): <module>; `",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2754:737,install,installed,737,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2754,1,['install'],['installed']
Deployability,Hand made tracking. By adding a DataTracker to each component and either overload the HandleEvent function or specific overloads from BaseObject(draw/drawVisual/etc...) to check if the tracked data have changed and trigger an update function if this is the case.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367275078:226,update,update,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367275078,1,['update'],['update']
Deployability,"Hard to do some cleaning in CMakeLists without touching all SOFA files!. This PR contains:. ------------------------. Default properties for targets calling sofa_generate_package or sofa_install_targets; - include_directories:; - BUILD_INTERFACE: the directory given in INCLUDE_SOURCE_DIR or ""${CMAKE_CURRENT_SOURCE_DIR}/.."" (bad but necessary for old modules); - BUILD_INTERFACE: ""${CMAKE_BINARY_DIR}/include/${PROJECT_NAME}""; - INSTALL_INTERFACE: ""install"" (if relocatable plugin) or ""install/${PROJECT_NAME}""; - DEBUG_POSTFIX: ""_d""; - VERSION: Sofa_VERSION. ------------------------. Cleaning of config.h mechanism (consistency with all other SOFA modules); - deprecate headers not following the ""config.h"" naming convention; - sofa/core/core.h -> sofa/core/config.h; - sofa/defaulttype/defaulttype.h -> sofa/defaulttype/config.h; - sofa/helper/helper.h -> sofa/helper/config.h; - sofa/simulation/simulationcore.h -> sofa/simulation/config.h; - SofaSimulationCommon/common.h -> SofaSimulationCommon/config.h; - SofaSimulationGraph/graph.h -> SofaSimulationGraph/config.h; - SofaSimulationTree/tree.h -> SofaSimulationTree/config.h; - sofa/gui/SofaGUI.h -> sofa/gui/config.h; - sofa/gui/qt/SofaGuiQt.h -> sofa/gui/qt/config.h; - centralize config.h call chain on sofa/config.h; - sofa/helper/system/config.h is now useless; -> WARNING: maybe not a good idea, review needed here; - dispatch all SOFA_BUILD_* macros from packages' config.h towards modules' config.h (good for future modularizations). ------------------------. Moving SofaGui modules into ""modules"" directory + cleaning their source trees. ------------------------. Every package is now also a library. Work started by @fredroy in #1314, 3 packages remained; - SofaFramework; - SofaGui; - SofaSimulation. ------------------------. Cleaning source trees to eliminate some "".."" include directories; (files move but includes stay the same); - SofaExporter; - SofaGuiCommon; - SofaGuiQt; - SofaHeadlessRecorder; - SofaMiscCollision. ------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1397:450,install,install,450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1397,2,['install'],['install']
Deployability,Have you checked @alxbilger that it is well unused in InSimo ISSOFA released by @fjourdes ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1994#issuecomment-816058401:68,release,released,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1994#issuecomment-816058401,1,['release'],['released']
Deployability,"Hello ! ; I've read your PR and I am currently compiling it on my side to test the GUI and the Modeler. . Some changes will need to be performed in order to accept your PR : ; 1. You have added some commented code that need to be removed. ; 2. You have expended the namespaces of some files, which is not in accordance with our standard, it is certainly your IDE. But could you please revert those changes ? ; 3. You have set default value to attributes directly in the class declaration, this should be done only in the constructor. ; 4. You have made some breaking changes: for instance, you removed the call to the superinit of ConfigurationSetting. Do you have any justification for that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2097577135:631,Configurat,ConfigurationSetting,631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2097577135,1,['Configurat'],['ConfigurationSetting']
Deployability,Hello @Camille-K and @chhas thanks for very well done and helpfull analysis. . At first sight I would say that this change has nothing to do with the vector3 to vec3 change so it must be removed asap.; I will do that. That says the change is in fact this change was for a separated PR fixing this issue ttps://github.com/sofa-framework/sofa/issues/3384 ; But as the fix was breaking it was not supposed to be integrated that way;,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1339023892:409,integrat,integrated,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1339023892,1,['integrat'],['integrated']
Deployability,"Hello @JeremieA, the current approach about the changelog management is to have a description of the changes in the PR's description so that @guparan & @hugtalbot can easily integrate them into the CHANGELOG.md file in a (more or less :)) weekly basis. . You can add a dedicated CHANGELOG section in the PR description in which there is a summary of the changes and, in case of behavior or API changes, the mecanism used to notify other's and minimal guideline/example on how they should fix their code. You already provided this informations into the comments feeds...but, having that in the comments feed makes them hard to find so it is better if all that is summarized. . EDIT: I just updated the PR description up to my understanding.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311016705:174,integrat,integrate,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311016705,2,"['integrat', 'update']","['integrate', 'updated']"
Deployability,"Hello @alxbilger . Nice PR. . This is outside of the scope of the PR but the use of the very intrusive; ```cpp; if (this->d_componentState.getValue() != sofa::core::objectmodel::ComponentState::Valid); return;; ```; makes me thing one day we will have to do something. The way to go is probably to make clear when the component state validation/update issupposed to happen. The two choice are: ""everytime/everywhere"", update all the time including ""in-between"" timestep or only once at beginning of timestep (with visitor in the BeginAnimationStep event ?).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232:345,update,update,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3850#issuecomment-1556742232,2,['update'],['update']
Deployability,"Hello @alxbilger,. Thank for the careful review, I will integrate that if the feature is considered worth for inclusion. . About the ""addTargetName"" question. . The initial version proposed was using automatic registration of the target name and I can revert back to this one. ; But I proposed a second, explicit, approach for two reasons:; - the automatic mecanism force the deployement of the new approach for all the sofa code components at once... which I was not sure we agreed at this point. ; - the existing mecanism to define the target in ObjectFactory.h is buggy because two identical ObjectFactory::register<XX> compiled in different compilation units produces different getTarget() functions. There was an agreement we should remove it, so this PR was a good opporunity to trying such a thing. . Hope this clarify things. EDIT:; I just found a funny bug related to the automatic registration. Because it rely on the use of a backward macro expansion. There is currently more than 20 components that does not have their target properly set.; Eg: DataDisplay.cpp the code is like that:; ```cpp; #include <sofa/core/ObjectFactory.h>; #include <sofa/defaulttype/VecTypes.h>. #include <SofaOpenglVisual/config.h>; #include <SofaOpenglVisual/DataDisplay.h>; #include <sofa/core/visual/VisualParams.h>. namespace sofa::component::visual::model; {; int DataDisplayClass = core::RegisterObject(""Rendering of meshes colored by data""); .add< DataDisplay >();; }; ```. The problem is that the ```SOFA_TARGET``` macro is used in ```ObjetFactory``` but is actually initialized in ```<SofaOpenglVisual/config.h>```; To fix the code it is needed to move the inclusion of the config.h before the one of ObjectFactory so that RegisterObject behave as expected. ; ```cpp; #include <SofaOpenglVisual/config.h>; #include <sofa/core/ObjectFactory.h>; #include <sofa/defaulttype/VecTypes.h>. #include <SofaOpenglVisual/DataDisplay.h>; #include <sofa/core/visual/VisualParams.h>; ```. Given all that, I'm wonder i",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-982527615:56,integrat,integrate,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-982527615,2,"['deploy', 'integrat']","['deployement', 'integrate']"
Deployability,"Hello @alxbilger,. Thanks for the PR, removing that ""verbose"" looks fine to. ; As a deprecation worklfow I recommand:; - deprecate the data field (as done in the PR); - updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ? ; - in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923:169,update,updates,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923,1,['update'],['updates']
Deployability,"Hello @epernod,. thank for the PR. I strongly support moving toward removing deprecated stuff in our code base (what is done in the PR) . Maybe we could just keep the old deprecated name with something like:; ```; class Base {; [[""this is deprecated...don't use it as it does not work any more...to update your code see the migration documentation in PR#1358""]]; DeprecatedAndRemoved m_componentstate; ; }; ``` ; Existing code will stop compiling forcing anyone to update but ppl will be able to understand easily what to do.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-624500753:299,update,update,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-624500753,2,['update'],['update']
Deployability,"Hello @flm8620 . It is very interesting, I didn't even knew that stuff in a pair of "" "" could cause compilation problem. ; I'm also surprised that our Continuous integration system is compiling sofa with VS2015 but didn't reported a problem. Maybe something related with the language you use on your system ? . Anyway, thank you very much for your report. If you have time maybe you can submit a pull-request to fix that otherwise I will do it. . Regards,",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/323#issuecomment-313322372:151,Continuous,Continuous,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/323#issuecomment-313322372,2,"['Continuous', 'integrat']","['Continuous', 'integration']"
Deployability,"Hello @jjcasmar, . thanks for reporting an issue. . My first guess is that this is not related to sofapython3 but more on the design of MechanicalObject that does not update the different data fields (position, rest_position, etc) in a coherent manner. ; I think that the recent PR made by @marques-bruno try to fix that: https://github.com/sofa-framework/sofa/pulls . Damien",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1517#issuecomment-703699909:167,update,update,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1517#issuecomment-703699909,1,['update'],['update']
Deployability,"Hello @rodriguesvinay ,. It seems it comes from the fact that Qt could not connect to the display (`Warning [Qt] could not connect to display`).; And xcb is linked to X11, so I think your docker configuration cannot connect to your X server (if existing).; Whats your system you are trying to launch the docker on ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315400680:195,configurat,configuration,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315400680,1,['configurat'],['configuration']
Deployability,"Hello @zhanglepy, I am really sorry but this release is not supported anymore. This means that not only we don't compile it anymore but also any other issue you'll face when using it will be resolved as 'This is not supported anymore'. If new version are released every 6 months it is because we are fixing such issue commit after commit, so if you face anything in this old version, it is certainly already fixed in recent releases... So my first advice would be to update SOFA and try to compile Optimus with the new SOFA, this will be cumbersome for sure, but at the end, you'll get better support. If Optimus is not up to date it is because no one is using it since this release. Anyway, I'll quickly try to compile it on my computer. I won't promise anything, if the issue takes too much time I'll certainly not try to fix it for this old release. I'll keep you updated !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4941#issuecomment-2311876875:45,release,release,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4941#issuecomment-2311876875,7,"['release', 'update']","['release', 'released', 'releases', 'update', 'updated']"
Deployability,"Hello Erik,. Sorry to reply late... the idea is to have something like that:; ```cpp; class DeprecatedAndRemoved {};; ```; Then in Base you can:; ```cpp; class Base; {; ///....; [[deprecated(""m_componentstate was renamed to d_componentState in PR#1358. Please upgrade your code"")]]; DeprecatedAnremove & m_componentstate ; . [[deprecated(""d_componentstate was renamed to d_componentState in PR#1358. Please upgrade your code"")]]; DeprecatedAnremove & d_componentstate ; ; };; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-644716475:260,upgrade,upgrade,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1358#issuecomment-644716475,2,['upgrade'],['upgrade']
Deployability,Hello Erwan & @guparan . Was zmq installed on the CI ? ; I installed it on centos3 and ubuntu but not on macos & windows. ; It seems there is also a dependency on liboscpack that also needs to be installed Am I wrong ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-355120307:33,install,installed,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-355120307,3,['install'],['installed']
Deployability,"Hello Eulalie,. - `isRequired()` should be true by default [OK]; - `hasDefaultValue()` should be true by default as well [OK]; - `setRequired(false)` should also change things so that `hasDefaultValue()` returns false ; To me this is independant; - current `setRequired(true)` should be replaced by `setHasDefaultValue(false)` or something like that... ; Same here, the two things are separated I don't see why we should couple them. . - in BaseObject::init() print a warning/error message...; I was more thinking for `if (data->isRequired() && !(data->hasDefaultValue() || data->isSet()) )`; So the message prints if the field is required (i.e not optional) and there is neither a default value nor a user provided data. . - finally update the GUI to handle `hasDefaultValue()` and display an empty field if it returns false; actually in my tests I tried with a ""light gray text"" showing something like: ""<optional, type to set>""; ; I think one PR could be done to implement the described behavior in Data.h including tests for then ; then a second one update the runSofa widgets so they can take profit of that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767133475:734,update,update,734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767133475,2,['update'],['update']
Deployability,"Hello François, . Here is a summary of my current understanding of your comments. ; It seems that you want to:; 1 - cut the dependency to SofaTest; 2 - have a clear separation between unittest vs functionaltest; 3 - cut the dependency to SofaFramework (ie not having the test inheriting from SofaFramework/BaseTest or something like that) for the unittests. . Initially this PR was only about -1- cutting the dependency to SofaTest. My thinking is that the SofaTest dependency is a major problem for everyone using the master branch of sofa because of the high impact on code coupling. . About -2- Following your remarks I'm in favor of improving a more clear separation between unit-test and functional test but as this is something new and maybe this should discussed that in the ""issues"" section of github instead of inside a specific PR. . About -3- cutting the dependency to SofaFramework. This is something that was never discussed before and worse than that, up to now the general consensus that, as we are in Sofa, we should inherit from a single BaseTest that install all the may be needed to do the test. A good reason for this scenario is nothing related to Scene/Simulation management but because BaseTest provides a default handler for EXPECT_MSG_EMIT/NOEMIT. Of course if your code is not using at all those elements, then you should feel free to use gtest. . As said in previous comment compared to the current Sofa code base I would be very happy to have -1- and -2- done. . It seems that -3- is not a big deal for people using the CMakelists.txt from Sofa but it may be of importance for your specific workflow in which, if I understand your previous answers, you integrate unittest as compilation failure. Maybe you can provide us more details on your workflow so that we can see the drawback of having the tests written in SofaFramework to be inheriting from a BaseTest (which is also defined in SofaFramework). Damien.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338697814:1069,install,install,1069,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338697814,2,"['install', 'integrat']","['install', 'integrate']"
Deployability,"Hello Hugo, . GG for this PR. ; As you announced it, this PR is severaly breaking...either at API level as well as in the user interface (as it breaks users scenes). You provide a script to update scene but it is only covering .scn (not .pyscn or .psl) so to me we need other ways to warns user how to manually update their scene. In the past we were overriding the 'parse' method for each object that have data field's name change and found the solution very nice as it 1) warn user to update their scene, 2) provide a minimal compatibility layer if they don't. . Example of what we did in OglLabel: ; ```cpp; void OglLabel::parse(BaseObjectDescription *arg); {; // BACKWARD COMPATIBILITY April 2017; const char* value = arg->getAttribute(""color"") ;; if(value==nullptr || strcmp(value, ""contrast"")){; VisualModel::parse(arg);; return ;; }. arg->setAttribute(""selectContrastingColor"", ""true"");; arg->removeAttribute(""color"") ;. VisualModel::parse(arg);. /// A send the message after the parsing of the base class so that the ""name"" of the component; /// is correctly reported in the message.; msg_deprecated() << ""Attribute color='contrast' is deprecated since Sofa 17.06. "" << msgendl; << ""Using deprecated attributes may result in lower performance or un-expected behaviors"" << msgendl; << ""To remove this message you need to update your scene by replacing color='contrast' with ""; "" selectConstrastingColor='true'"" ;; }; ```. Now about the API breaks....I will try your branch on top of our plugins to see if it compile or not.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637#issuecomment-392199041:190,update,update,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637#issuecomment-392199041,4,['update'],['update']
Deployability,"Hello Jean-Nicolas,. Thank you for your PR. ; I think we already activate c++11 on all compilers. About the c++ level to use. Guillaume suggest to support the last two version of MSVC. When MSVC 2019 will be release we will switch to something close to c++17.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/908#issuecomment-458896804:208,release,release,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/908#issuecomment-458896804,1,['release'],['release']
Deployability,"Hello Olivier,. As said by Antoine Furetière in the the XVII century... it is the small PRs that make the big release.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1031#issuecomment-490919768:110,release,release,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1031#issuecomment-490919768,1,['release'],['release']
Deployability,"Hello all,. This PR adds (hopefully) proper GIL handling to `SofaPython`, so that it is possible to run python threads concurrently with the main Sofa program. It enables the following scene to run concurrently with the main program: . ```python; def createScene(node):. from threading import Thread; import time; ; def target():; while True:; time.sleep(1); print(""it's aliiive!""); ; thread = Thread(target = target); thread.daemon = True; thread.start(). time.sleep(2); ```. This is achieved through the RAII class `PythonEnvironment::gil`, which is meant to protect the boundaries between c++ and python code as follows:. ```c++; // some function called from the c++ side; {; PythonEnvironment::gil lock;; // safely call python functions here: the GIL ; // is acquired and released automatically; }; ```. The trick is that the GIL should also be released prior to the first lock so that the last object to unlock the GIL gives an opportunity to python threads to run, if any. Otherwise, the main thread still holds the GIL after the last lock is destroyed, and python threads never get to run. This is a work in progress, but should be pretty harmless and easy to disable if something goes wrong. EDIT: it does not work on this branch :-/; ___________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326:776,release,released,776,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326,2,['release'],['released']
Deployability,"Hello everyone, . i'm new to SOFA. I built succesfully SOFA from source on windows 11. Using cmake-gui, i selected plugin_sofapython3 to be added. the configuration and compilation went good, without any errors, but when i check the plugins list sofapython3 is not there and, after running runSofa, i cannot open a python scene in sofa. . Does someone have any ideas why this happens?. thank you very much!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252:151,configurat,configuration,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252,1,['configurat'],['configuration']
Deployability,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2021:608,update,update,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021,2,"['install', 'update']","['installation', 'update']"
Deployability,"Hello everyone,. I'm using operations of type `dst_transform *= src_transform` and noticed multiple debug messages on the terminal output:. ```; [INFO] [Transform] SolidTypes<R>::Transform::operator *=; ```. I made a small fix suppressing the line which I'll PR soon.; I'm using a modified version of the latest release v20.12 - but the issue seems to exist as well in master. Please let me know if there's any deeper meaning to this message or anything else to clean up,. Cheers,. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1731:312,release,release,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1731,1,['release'],['release']
Deployability,"Hello guys! Is there any news regarding the updated features? @marques-bruno : Can you make a small update to the PR with some examples for the functionality:. - Normal type inheritance (PSDE Input type is inherited from existing component); - ""Forwarded"" type inheritance (PSDE Output type is inherited from a component linking to it). I'll discuss with Damien about the forwarded inheritance mechanism to verify that we are on the right track.Then, after checking the PR with examples, we can see the next steps more clearly, i think.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406574236:44,update,updated,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406574236,2,['update'],"['update', 'updated']"
Deployability,"Hello! ; Thanks for reporting the issue; I've not seen such error during my SOFA compilations and I'm not sure it is CUDA related...; I'll keep an eye out when configuring a new PC for an intern on Monday 💻 . @valeryozenne, I'd like to ask just to be sure.; Did you install the libraries needed for SOFA Core (as shown [here](https://www.sofa-framework.org/community/doc/getting-started/build/linux/)):; ```; sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev; ```; There might be something off with`libglew-dev` in special since CMake is looking for it in a CUDA samples folder",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786798561:266,install,install,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786798561,2,['install'],['install']
Deployability,"Hello!; It seems your issue has just been fixed in the latest merged PR (#2065).; So you should either update your master branch (if you are following the master), or cherry-pick the change if not.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2075#issuecomment-837963417:103,update,update,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075#issuecomment-837963417,1,['update'],['update']
Deployability,"Hello, . I feel like a lot have changed in `MeshLoader`, but `GIDMeshLoader` hasn't been updated. . The problem I have is that the component is not working with the update callback mechanism :; - `doLoad()` is called three times, and it uses `push_back()` without clearing the lists (e.g. position, tetra...).; - and other problems related to transforms. I'd like to update the component, but I don't know how. I couldn't find a related PR.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1534:89,update,updated,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1534,3,['update'],"['update', 'updated']"
Deployability,"Hello, . This is the first I'm installing sofa so I might I forget something. But the libraries below have been installed. ; sudo apt install libpng-dev libjpeg-dev libtiff-dev libglew-dev zlib1g-dev . Don't hesitate to tell if need precision on my paltform, driver, etc...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786803927:31,install,installing,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786803927,3,['install'],"['install', 'installed', 'installing']"
Deployability,"Hello, ; I'am having troubles compiling the SofaCUDA plugin; -Ubuntu 22.04; -SOFA 22.12; -gcc 11; -nvcc version: ; ```; nvcc: NVIDIA (R) Cuda compiler driver; Copyright (c) 2005-2023 NVIDIA Corporation; Built on Fri_Jan__6_16:45:21_PST_2023; Cuda compilation tools, release 12.0, V12.0.140; Build cuda_12.0.r12.0/compiler.32267302_0; ```. ; I get this error:; ` error: identifier ""umul24"" is undefined`; from:; `.../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaContactMapper.cu(88)`. I tried to solve replacing this line:; `map[curTestEntry.newIndex + threadIdx.x] = umul24(curTestEntry.elem1,nbPointsPerElem) + c.p1;`; with this line:; `map[curTestEntry.newIndex + threadIdx.x] = curTestEntry.elem1*nbPointsPerElem + c.p1;`. but I get even more errors now, so I thought the plugin was written for a specific cuda version. Is that correct? Should I change my cuda toolkit version together with the gcc version?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4579:266,release,release,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579,1,['release'],['release']
Deployability,"Hello, ; yes sorry I messed up with my git client.; I cherry picked the right modifications, but I integrated many older commits somehow.; I guess we can close this PR, and pull Matthieu's one instead.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/76#issuecomment-263826376:99,integrat,integrated,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/76#issuecomment-263826376,1,['integrat'],['integrated']
Deployability,"Hello, I am trying to install using https://hub.docker.com/r/sofaframework/sofa_nightly_ubuntu/tags and everything worked fine but while running ./runSofa shows me this error. Please also see the image attached (sorry for the mobile phone capture). Any help will be appreciated.; ![1](https://user-images.githubusercontent.com/91825106/201944685-a8ddf17b-33fa-425f-a298-7fb7b64e39b9.jpeg)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486:22,install,install,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486,1,['install'],['install']
Deployability,"Hello, I tried on a MBA M1, macOS 11.3.1 and ; ```shell ; brew list --versions qt5; qt@5 5.15.2; ```; and the 3D viewport is displaying the expected scene.; Maybe the 11.3 update fixed few things about OpenGL ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2028#issuecomment-833487148:172,update,update,172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028#issuecomment-833487148,1,['update'],['update']
Deployability,"Hello, it could also mean that one of CGALPlugin's dll dependencies were not found as well (namely gmp or mpfr).; Add [Where your cgal install is]\auxiliary\gmp\lib to your system PATH.; Or copy paste those dlls alongside CGALPlugin.dll (not recommended)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402#issuecomment-636457829:135,install,install,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402#issuecomment-636457829,1,['install'],['install']
Deployability,"Hello,. A simple [blame](https://github.com/sofa-framework/sofa/blame/25f245b2383a86f097cabdea13697aa42665568e/modules/SofaConstraint/BilateralInteractionConstraint.cpp) shows the 2 commits where these values where last set:; https://github.com/sofa-framework/sofa/commit/bb99399cba47a95301025531577c2e3ac3f728ab; https://github.com/sofa-framework/sofa/commit/8b294f75884a0216ce26f5457b8689da57dd081a. They were done for a PhD work, tuning for specific cases but without giving real reasons in the log. So this is not something that was really meant to be preserved like that, indeed it does not make sense that the value is much higher for double that floats. But the actual refactoring that is needed is to expose this tolerance as a Data instead of hiding it within the code itself, so that it can be tuning within the simulations that require it instead of requiring a patch within Sofa. Ideally the value in the Data should preserve the current behaviour in order not to break existing scenes, possibly with the isRequired flag set such that others will know that they should set the value specifically instead of relying on the previously hidden and inconsistent default. Jeremie.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/45#issuecomment-257955683:873,patch,patch,873,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/45#issuecomment-257955683,1,['patch'],['patch']
Deployability,"Hello,. Before I explain the bug, let me give a bit of context (it is a bit long, but I hope it is useful ;)). The point of this change was to make it transparent which topology is used by which state, and allow for correct initialization and most importantly topological changes propagation. One issue with the initial implementation, associating a state to the first topology found in its parents and then ignoring it if it is not in the same context (hopefully in all codes using state->m_topology, but who checked?), is that this make it impossible to share the same topology (and topological changes) with multiple states in different (children) nodes. One such example is when you use an IdentityMapping (or a Rigid <-> Vec3 mapping or any other mapping that produce the same number of outputs as its inputs), previously to get correct topology association and changes propagation you would need to replicate the topology (and the topological mappings) with a topology both before and after the mapping (but beware if they end up with different sizes, or updated in the wrong order...). With our changes, there is a clear(er) method BaseContext::getActiveMeshTopology() that you can call from any context and will give you the topology that is relevant for this context, i.e. either the topology at this exact node, or from a parent node but only if there is no mapping in between (or if there are only mappings whose sameTopology() method returns true). Using this method, state->l_topology is initialized (and you can inspect its result in the GUI), and if it is not NULL it will be used by all computations for the state without extra hidden checks. Now back to this bug, the last issue here was that the tested mapping (TetrahedronVolumeMapping) was not preserving the topology, but its output state was somehow linked to its input topology. The solution is not to go back to the old (broken) behavior, but instead to understand what is the actual root cause here. Theoretically, if the logi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-335477201:1061,update,updated,1061,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-335477201,1,['update'],['updated']
Deployability,"Hello,. Here are a few remarks and suggestions regarding this topic:. 1. I would be wary about relying on performance measurements from a blog post that is 8 years old and does not mention the exact platform and compilers used. Thread Local Storage (TLS) is highly dependent on OS, ABI, compiler, flags. Here is for instance a quick test using compiler explorer: https://godbolt.org/z/6ObfHR.; 2. one usage requiring ExecParams to have a thread-local storage was to be able to do asynchronous loops (mainly simulation and rendering) with full access to the scene graph without copies, by using copy-on-write for large Data and having each thread be assigned a ""version"" (called ""aspect"" per the published work that was used). See the MultithreadGUI for an example of this mechanism.; 3. As far as I know, all asynchronous/external rendering engines integrations that are used with Sofa relied instead on a design where the Sofa scene graph is not exposed but only visual meshes (based on SofaPhysicsAPI), therefore this feature was never enabled/tested in real applications so it can make sense to remove it.; 4. It would be interesting to measure if there are any performance gained from just removing the TLS qualifier (as done in PR #1129). I expect it to not be measurable, but performances can be surprising, which is why any optimization efforts should measure before and after ;); 5. If the TLS part of ExecParams is removed, then you should also remove everything that depends on it: MultithreadGUI, ExecParams::threadID, aspectID, AspectPool, *AspectVisitor, DDGNode::currentAspect()/copyAspect()/..., and all the aspect-related features in Data and Link. Otherwise all these code will be silently broken by the change.; 6. Note that this also makes ExecParams itself a bit pointless. The initial rational was that this provides a thread-safe way to set parameters controlling all codes in such a way that even if it is not explicitly passed in to all API calls, it can be queried with ExecPa",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748:849,integrat,integrations,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748,1,['integrat'],['integrations']
Deployability,"Hello,. I have been trying to run the CGAL Plugin with sofa, my aim is to create a tetrahedral mesh from a surface mesh, and then experiment that for Haptic Rendering within Sofa. I followed the page here: https://www.sofa-framework.org/community/doc/plugins/usual-plugins/cgal-library/. Although it does not tell what version of CGAL to use, or boost as well. Finally, I have been successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:722,Release,Release,722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability,"Hello,. I think it would be great (if not mandatory) to have in this release of Sofa new features and not only bug fixes. . To make that possible I suggest to use the SOFA_WITH_EXPERIMENTAL_FEATURES options to conditionally activate plugins or component that are in their way for integration but are not considered as stable enough or that may be subject to API change in 18.06. Those should print a warning message in their init function if used. . If agreed on the principle of allowing EXPERIMENTAL new components in 17.12 I have the following features/component to propose (all are located in plugins):; - In plugin/PSL:; - the PSL scene file format; - In plugin/SofaImplicitField: ; - CustomField (to implement implicit field in python and/or cython); - SurfaceMeshFromImplicitField (to generate a surface mesh from an implicit field using a marching cube); - ImplicitFieldViewer (to visualize the implicit surface); - python/difigeom (a complete library to make complex procedural geometry using ; distance field and python+cython) ; - In plugin/CGAL: ; - SurfaceMeshFromImplicitField (generate a surface mesh from an implicit field using CGAL); - VolumeMeshFromImplicitField (generates a tetrahedral mesh from implicit field using CGAL) . And you ? Do you have things that you would like to have integrated ? . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/517:69,release,release,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/517,3,"['integrat', 'release']","['integrated', 'integration', 'release']"
Deployability,"Hello,. I try to use SofaPython3 with sofa (master branch) on windows. I use MSVC compiler. I did the following :. 1. Installed pybind11 via pip3.9.; 2. set CMake variable `pybind11_DIR` = `C:/Program Files/Python39/Lib/site-packages/pybind11/share/cmake/pybind11`.; 3. set CMake variable`SOFA_FETCH_PYTHON3` to true.; 4. set CMake variables `PLUGIN_SOFAPYTHON3`, `PLUGIN_SOFAPYTHON3_BINDINGS`, `PLUGIN_SOFAPYTHON3_DOCS` and `PLUGIN_SOFAPYTHON3_EXAMPLES` to true.; 4. 'Configure' then 'Generate' using CMake's GUI.; 5. Build with MSVC -> success (release mode). I encounter a segfault error when loading SofaPython3.dll via the Sofa GUI : Edit>Plugin Manager...>Add...>SofaPython3.dll.; --> **exception Microsoft C++ : pybind11::error_already_set**. Do you have any idea what is causing this error ?. Thanks",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672:118,Install,Installed,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672,2,"['Install', 'release']","['Installed', 'release']"
Deployability,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2274:162,release,release,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274,1,['release'],['release']
Deployability,"Hello,. I'm a new user of SOFA. I've been trying to compile the stable version under Ubuntu 20. ; I'm using nvidia cuda 11.2 , gcc and g++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0; Compilation were done using ninja as recommended in the video. I might missed to install a dependencies. Please find below the error message:. Thanks in advance for your help.; Best,; Valéry. -----------------------------------------. [50/441] Building CXX object modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o; FAILED: modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o ; /usr/bin/clang++ -DNDEBUG -DSOFA_BUILD_OPENGL_VISUAL -DSOFA_BUILD_SOFAOPENGLVISUAL -DSofaOpenglVisual_EXPORTS -I/home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src -Iinclude/SofaOpenglVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseVisual/src -Iinclude/SofaBaseVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseTopology/src -Iinclude/SofaBaseTopology -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -Iinclude/GTest -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCore/src -isystem /home/vozenne/Dev/sofa/src/SofaKernel/extlibs/json -isystem /home/vozenne/Dev/sofa/src/extlibs/gtest/include -isystem /usr/include/eigen3 -Wall -W -Wno-padded -O3 -DNDEBUG -fPIC -DFRAMEWORK_TEST_RESOURCES_DIR=\""/home/vozenne/Dev/sofa/src/SofaKernel/SofaFramework/resources/tests\"" -pthread -DGTEST_LINKED_AS_SHARED_LIBRAR",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1864:258,install,install,258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864,1,['install'],['install']
Deployability,"Hello,. I'm trying to compile sofa from a fresh ubuntu install (so there is no conflict between software versions) and I can't process what this error means. Is it found or not? Is it the version that's too old or too new ? The displayed version correspond to the one installed by aptitude. Any hint / solution is welcome. ``; $ cmake ..; ``; -- The C compiler identification is GNU 9.3.0; -- The CXX compiler identification is GNU 9.3.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Install prefix: /home/thebigone/projects/sofa/build/install; -- Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.2"") ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:55,install,install,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,4,"['Install', 'install']","['Install', 'install', 'installed']"
Deployability,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1732:175,release,release,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732,1,['release'],['release']
Deployability,"Hello,. Since we talked about it during the SofaDev meeting,; Here's our QuickNDirty answer to the make install fail for CImgPlugin.; Of course as-is it is not acceptable or mergeable but it's here. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/609:104,install,install,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/609,1,['install'],['install']
Deployability,"Hello,. We had a very similar problem in a slightly different context (relying on python virtualenv on Linux).; The root cause was that the multiarray native lib is apparently expecting to be run from an executable that already export the python API symbols, either from the executable itself, or with libpython loaded with the RTLD_GLOBAL flag. So the solution on Linux (found by @Ngautier) was to add a call to `dlopen(""<LIBPYTHONSONAME>"", RTLD_LAZY | RTLD_GLOBAL)` before initializing the embedded python interpreter (replacing LIBPYTHONSONAME by the internal name of the python library, such as `libpython2.7.so.1.0`). For some reason, this was only an issue if not using the default system-installed python environment (maybe something similar is done automatically in this case). On mac I don't know if the root cause is the same (it could be determined by looking if mutliarray.so does indeed have undefined symbols, using `otool` or similar), and if a similar solution would fix it. But maybe it can help ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-409518620:695,install,installed,695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-409518620,1,['install'],['installed']
Deployability,"Hello @alxbilger,. Thanks for the PR. . I looked at the implementation and I'm not sure the Observer/Observable mechanism is needed.; At current time is seem to be used to notify that, when a mass change, the component using the mass need to be updated. . Tracking component and data changes can already be done using the Directed Dependency Graph (DDG) mechanisms. . When I want a component (B) to track component (A) and detect it changes I connect A.componentState (the observable) by adding B as a DDG output of A.componentState (so B is the obsever). By using the DDG machinery you can have the choice of when the updates is done... when A.componentState is changed or when B is needed ... (thanks the lazy DDG update mechanism). Finally if using the DDG it too heavy, it is also possible to use the DataTracker, this allows to detect data change (eg: A.componentState has changed) when you need to invalidate the cache.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4625#issuecomment-2042182871:245,update,updated,245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625#issuecomment-2042182871,3,['update'],"['update', 'updated', 'updates']"
Deployability,"Here all what I am making sure is that, if no value is given to min and max then:; - you compute them from the mesh info (2x2x2); - you compute/update the BB including the safety margin. i.e. min and max are not directly used to compute the BBox to avoid the shifting effect",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/308#issuecomment-355937944:144,update,update,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/308#issuecomment-355937944,1,['update'],['update']
Deployability,Here are all the changes made for v18.12 release.; Mostly CMake and CPack stuff. :warning: Notice the removal of all deprecated components [as planned in Changelog](https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md#deprecated). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/905:41,release,release,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/905,1,['release'],['release']
Deployability,"Here are binaries of this PR to test:; [Linux binaries](https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/547/CI_CONFIG=ubuntu_gcc-7,CI_TYPE=release/artifact/build/SOFA_v20.06.99_Linux.zip); [Windows binaries](https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/547/CI_CONFIG=windows10_vs-2017,CI_TYPE=release/artifact/build/SOFA_v20.06.99_Win64.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1570#issuecomment-718797548:139,release,release,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1570#issuecomment-718797548,2,['release'],['release']
Deployability,"Here are the changes I made for v19.06, mostly cleans and fixes. Important changes:; - [[SofaMacros] ADD version to each target properties](https://github.com/sofa-framework/sofa/pull/1114/files#diff-c271701edce37b698b29020065753857) ; - [[CMake] ADD post-install script for Linux](https://github.com/sofa-framework/sofa/pull/1114/files#diff-16510636c780c3f88d6aaeb73dc3a80d). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1114:256,install,install,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1114,1,['install'],['install']
Deployability,"Here are the latest changes done directly in v20.06 branch to finalize the release. Main changes:; - [CMake] ADD SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON option (default is ON); When OFF, SofaPython will be added later during CMake generate so that all soft dependencies to SofaPython will be unsatisfied.; This is useful to generate binaries with at least SofaPython dependencies as possible.; - [CMake] FIX postinstall-fixup scripts call order; postinstall-fixup scripts are now in tools/postinstall-fixup and are included after all other parts of SOFA (even external directories); - [SofaMacros] FIX install dir for plugins with no INCLUDE_SOURCE_DIR; There was an issue with installed include directories introduced by #1397 ; - Backport #1428 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1432:75,release,release,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1432,3,"['install', 'release']","['install', 'installed', 'release']"
Deployability,"Here is a first version of a MagicEngine in python. ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-; from MagicEngine import *; ; def myupdate(a, b, c): ; """"""This is so cute to have a single point documentation in our code""""""; return a + b + c; ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'). MagicEngine(rootNode, myupdate, a=1.0, b=2.0, c=3.0); ```. With the following in MagicEngine.py:; ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-. import Sofa; import os; import inspect; ; class MagicEngine(Sofa.PythonScriptDataEngine):; def __init__(self, node, fct, **kwargs):; self.addNewData(""Description"", ""Properties"", """", ""s"", inspect.getdoc(fct)) . argspec = inspect.getargspec(fct); for arg in argspec.args:; argval = None; if arg in kwargs:; argval = kwargs[arg] ; elif argspec.defaults != None and arg in argspec.defaults:; argval = argspec.defaults[arg] ; ; if argval != None: ; self.addNewInput(arg, datatype=""f"", value=argval) ; else:; Sofa.msg_error(""Unable to create an input for parameter: ""+str(arg)) ; ; self.lastreturnedvalue = False ; self.name = str(fct) ; self.params = argspec.args; self.fct=fct; ; def update(self):; calld = []; for param in self.params: ; calld.append(self.findData(param).value) ; ; tmp = self.fct(*calld) ; if not self.lastreturnedvalue:; self.addNewOutput(""output"", datatype=""f"", value=tmp) ; self.lastreturnedvalue = True; self.findData(""output"").value = tmp; ```. Basically it creates MagicEngine engine that is a DataEngine, pass the function and argument to it. ; In the constructor of this MagicEngine the function is introspected to add the needed inputs. As there is no type inference I used fload but this should be easy to add. The output is a bit tricky and I don't like it...as it requires the MagicEngine to be executed a least one time before to work. I will try a different approach where we can specify manually the types of intput & output.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380451603:1204,update,update,1204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380451603,1,['update'],['update']
Deployability,"Here is a new plugin which implements a beam force field component with plastic behaviour (to model nonlinear and permanent deformation). The general structure is inspired from the BeamFEMForceField component. At the moment, I kept the new component in a dedicated plugin (BeamPlastic), but I guess it could be moved to where the BeamFEMFF component already is (providing the PR is mergeable). Two pull-requested files (in applications/plugins/BeamPlastic/quadrature) were implemented by someone else and published under the open source Boost Software License 1.0 (BSL-1.0). I mentioned this in both files headers, but I don't know if the BSL-1.0 is compatible with the SOFA license. If not, these files can be removed and I can re-implement the corresponding methods (for reduced gaussian integration). The code compiles on my side, and the two provided example files work fine, but there are quiet a few things that could/should be improved (including unit tests). I have already noted some of them, but as this is my first PR I'm not familiar with how or where these should be discussed.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1618:790,integrat,integration,790,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1618,1,['integrat'],['integration']
Deployability,Here is a rebased + cleaned + updated version without CGoGN: https://github.com/sofa-framework/sofa/compare/master...guparan:cmtopology_rebased_cleaned. To be mixed with this extracted CGoGN: https://github.com/guparan/sofa_cgogn. Please tell me if it works :-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-404463333:30,update,updated,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-404463333,1,['update'],['updated']
Deployability,Here is an update of PluginExample to clarify how to create a deploy-and-share friendly plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1053:11,update,update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1053,2,"['deploy', 'update']","['deploy-and-share', 'update']"
Deployability,"Here is an update on our efforts to perform an automatic parallelization on Sofa. **Parallelism at the Visitor level :** . **General idea :**; Some visitors execute functions on multiple components (example : BaseMechanicalVisitor launches MechanicalVisitor::fwdForceField on a list of BaseForceFields).; The implementation of the function can vary depending on the actual type of the component. Usually, a function executing on different components will access the same data vectors while executing on each component (for example MechanicalVisitor::fwdForceField, calls addForce or addDForce on each component, each one modifying the force vector).; We define a **Parallel Section** as the execution of a given visitor function on a list of components.; We define a **Task** as the execution of a visitor function on a component. Therefore a parallel section is decomposed in an ordered list of tasks.; Each task accesses a given set of vectors (read or write accesses), and a given set of locations in these vectors. We can split the tasks in **phases** such that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:11,update,update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,1,['update'],['update']
Deployability,"Here is an updated version: ; [chainAll2.txt](https://github.com/sofa-framework/sofa/files/2900999/chainAll2.txt); Three main changes:; - decrease the damping,; - set a total mass to the rigid tori; - decrease the time step",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/900#issuecomment-467039133:11,update,updated,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/900#issuecomment-467039133,1,['update'],['updated']
Deployability,"Here it is! This PR adds a new NG component: Sofa.Helper.Bvh. How to reproduce:; 1. Checkout [sofa2ng](https://github.com/guparan/sofa2ng) in the `tools` folder of your SOFA; 2. cd into sofa2ng and run `deploy.sh recipes/Sofa.Helper.Bvh.rcpy`; 3. Integrate your new NG module into SOFA by hand. How to integrate (things not done by sofa2ng):; - Create all NG structure if needed (here I created Sofa.Helper); - `add_subdirectory` your module at the right place (here I did it in SofaFramework/CMakeLists.txt); - Link your module to SOFA old modules when needed; - Remove old file inclusions in CMake (here it was in sofa/helper/CMakeLists.txt). ***************; **Summary:**; - The recipe I used with sofa2ng is here: [Sofa.Helper.Bvh.rcpy](https://github.com/guparan/sofa2ng/blob/master/recipes/Sofa.Helper.Bvh.rcpy); - The result of recipe application is here: https://github.com/sofa-framework/sofa/pull/741/commits/2c729aa646866c2b01792069e95d47cc450edcca; - The changes I did by hand are here: https://github.com/sofa-framework/sofa/pull/741/commits/6d6cd06fc34f6ae2ca53feed8af5b8a1cb452da6 (patch version [here](https://github.com/sofa-framework/sofa/commit/6d6cd06fc34f6ae2ca53feed8af5b8a1cb452da6.patch)); ***************. This is the right place to discuss about SOFA-NG, do not hesitate to comment!. I let this here and I go to vacation, see you in two weeks :wink: ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/741:203,deploy,deploy,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/741,5,"['Integrat', 'deploy', 'integrat', 'patch']","['Integrate', 'deploy', 'integrate', 'patch']"
Deployability,"Here you go.; It may be better to check if FFMPEG and X11 are installed before enabling the plugin.; EDIT: I'll add an `if` block to enable only on Linux, my bad.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-358017590:62,install,installed,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-358017590,1,['install'],['installed']
Deployability,"Here's a bunch of fixes for the HAPI plugin:. * `config.h` was not generated --> added automatic generation to the cmake and fix the template to use cmake variable replacement. * there is some broken code in CMakeLists, not sure what was used for but it's not even a valid cmake code (broken if clause). For the moment I just commented out, I'm open to advices... * updated the code with recent member renaming in main sofa code (`indice` --> `d_indice`). * fix for `findH3D.cmake` to find the module without relying on non-default installation path (i.e. if you install H3D into a given directory, that is the root path from which `include` and `lib` can be easily found ). * fixes for `findHAPI.cmake` --> using `hapi_ROOT` to easily find the module (instead of relying on the mutual position of HAPI and H3DUtils). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1189:366,update,updated,366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1189,3,"['install', 'update']","['install', 'installation', 'updated']"
Deployability,"Hey @AlbanOdot ,. From the [documentation](https://www.sofa-framework.org/community/doc/getting-started/build/linux/#core-required):. > - Boost (>= 1.65.1); `sudo apt install libboost-all-dev`. So you need to install **libboost-all-dev** and not just **libboost-dev**. J-N",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462#issuecomment-680828677:167,install,install,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462#issuecomment-680828677,2,['install'],['install']
Deployability,Hey @EmDash00 your error shows that you do not properly link with csparse.; Do you have it installed?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419#issuecomment-655380222:91,install,installed,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419#issuecomment-655380222,1,['install'],['installed']
Deployability,"Hey @alxbilger , thanks for this benchmark. My guest would be that solving one big system (the merge of both objects) is slower than solving to smaller system. However, solving two system independently should, I think, produce incorrect results as . 1. You are applying the interactions (for example, contact forces) at different solving states. For example, the first object is solved, its node positions are updated to the step t+1. Collisions are then computed. But the state of the second object is still at the time step t. Oscillation will therefore probably happen and the convergence will be delayed. ; 2. In addition, the solution state with both objects merged under the same system takes into account the interaction between the two objects. For example, when both objects are merged into a same system, you can create entries inside the system matrix to create a relationship between a node in the first object and a node in the second object. This is not possible when the two objects are separated. **TLDR**: Solving two objects independently is faster than solving one big system containing both objects. However it will take longer to converge to a steady solution (in number of steps), and even probably converge to an incorrect solution.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842947771:410,update,updated,410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842947771,1,['update'],['updated']
Deployability,"Hey @alxbilger . Taking another look at this issue, and I realized that :; - contacts are created as SUB-nodes and connected to the associated object though a mapping; - then (if `response='default'` meaning Penality approach is chosen for the ContactResponse), a PenalityContactForceField is added in the root node with a BarycentricPenalityContact which distributes the spring forces on the SUB-node MechanicalObject. As stiffness matrices (implicit force contributions) are not propagated through mappings (yet), only the addForce is used and the need of a AddKToMatrix never arose. I tried an implementation shortly but I would need to test it which is yet not possible. Hope this updates this issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-908068228:685,update,updates,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-908068228,1,['update'],['updates']
Deployability,Hey @fbridault @dweckmann ; I am writing again on this issue since our Technical Committee is approaching and its associated coding spring (29-30th April). Any update on your side?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-614735966:160,update,update,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-614735966,1,['update'],['update']
Deployability,"Hey @guparan ,. I would merge both at the same time (automatically), the trigger being the SOFA merge:. 4. ~~SP3 PR is merged first (to ensure that SOFA/master always succeeds on SOFA CI)~~ ; SOFA PR is manually merged ; 5. SP3 PR is merged automatically (we can setup a workflow for this, or if you have something ready on the CI); 6. All the other SOFA PRs should be fine. Just to emphasis the problem with the alternative (hard-coded commit number instead of a branch):; 1. PRs in SP3 can be merged in the master branch before the correction SP3 PR is merged , which means that SOFA will point to an older version of SP3, example:; a. Bob opens a SOFA PR that breaks SP3; b. Bob opens a SP3 PR with the correction; c. Paul comes in an open a SP3 PR; d. Paul's PR is accepted and merged; e. Paul opens a SOFA PR to update the commit number; f. Paul's PR get accepted and merged; g. Bob's PR get accepted and merged; f. SOFA commit number is now pointing to Bob's SP3 branch number, which misses Paul's commit; 2. How do you deal with squash/rebase merges in SP3? Will your script use the merged commit number? Or the latest commit number of the SP3 PR's branch?; 3. How do you deal with release branches? Will we need to manually edit the commit number for each new commit in release branches?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821232724:817,update,update,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821232724,3,"['release', 'update']","['release', 'update']"
Deployability,"Hey @guparan ,. Thanks a lot for this. I've tested it very quickly. In order to use this for SofaPython3, we would need to be able to specify where to install some targets and files relative to the install prefix. For example, the binding libraries should be installed in `lib/python3/site-packages/...` . Here is the installation tree that we would need for SofaPython3:; ```; .; ├── bin; │   ├── Bindings.Modules.Tests; │   ├── Bindings.SofaRuntime.Tests; │   ├── Bindings.Sofa.Tests; │   ├── Bindings.SofaTypes.Tests; │   ├── Components; │   │   └── Components.py; │   ├── Core; │   │   ├── BaseData.py; │   │   ├── BaseLink.py; │   │   ├── BaseObject.py; │   │   ├── Base.py; │   │   ├── Controller.py; │   │   ├── DataEngine.py; │   │   ├── ForceField.py; │   │   ├── ForceField.py.orig; │   │   ├── MyRestShapeForceField.py; │   │   └── PythonRestShapeForceField.py; │   ├── Helper; │   │   ├── FileRepository.py; │   │   └── Message.py; │   ├── pyfiles; │   │   └── vector_test.py; │   ├── Simulation; │   │   ├── Node.py; │   │   └── Simulation.py; │   ├── SofaDeformable; │   │   ├── LinearSpring.py; │   │   └── SpringForceField.py; │   ├── tests; │   │   └── Base.py; │   └── Types; │   ├── BoundingBox.py; │   ├── RGBAColor.py; │   └── Vec3.py; ├── include; │   └── SofaPython3; │   ├── config.h; │   ├── DataCache.h; │   ├── DataHelper.h; │   ├── initModule.h; │   ├── Prefab.h; │   ├── PythonEnvironment.h; │   ├── PythonFactory.h; │   ├── PythonTestExtractor.h; │   ├── PythonTest.h; │   ├── SceneLoaderPY3.h; │   ├── Sofa; │   │   ├── Components; │   │   │   └── Submodule_Components.h; │   │   ├── Core; │   │   │   ├── Binding_BaseCamera_doc.h; │   │   │   ├── Binding_BaseCamera.h; │   │   │   ├── Binding_BaseContext.h; │   │   │   ├── Binding_BaseData_doc.h; │   │   │   ├── Binding_BaseData.h; │   │   │   ├── Binding_Base_doc.h; │   │   │   ├── Binding_Base.h; │   │   │   ├── Binding_BaseLink_doc.h; │   │   │   ├── Binding_BaseLink.h; │   │   │   ├── Binding_BaseObject_doc.h;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592:151,install,install,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592,4,['install'],"['install', 'installation', 'installed']"
Deployability,"Hey @hugtalbot , would you mind elaborate a little bit more on this? What was the problem? . We definitely need some doc on those integrating factors...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-625124639:130,integrat,integrating,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-625124639,1,['integrat'],['integrating']
Deployability,"Hey @hugtalbot,. As I remember, the communication plugin is imo ready to merge. ; It still need some polish like, code cleaning, avoid some useless copy, use some boost things ... but it´s working. . On CI, AFAIK only the core communication plugin is compiled. We don´t want to install libs for all the protocols implemented. What you need to know is, there is still pending PR (https://github.com/SofaDefrost/sofa/pull/20 with another one) for this plugin. But they are not working and I don´t have any news from the contributor (Rupesh gsoc).; This is not a big deal because the content of the PR is an addon for the plugin Qt serial protocol. Let me know if you have any question :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-441108533:278,install,install,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-441108533,1,['install'],['install']
Deployability,"Hey @m4n4n,. Thanks for your updated PR!. Did you check this remark from @tgaugry on your previous PR?; > I kinda see what you went through. The argument parser isn't that intuitive TBO.; > ; > I recently had to do a similar task, so if you still want the ""infinite"" flag, you can check this [line](https://github.com/tgaugry/sofa/commit/326f4f4c8fea61783e40225cb4abac648e569922#diff-5904f9a1380b53f6de2fdc644b6b1a48R112) and the `parseSkipOption` function in the same file. ; > Maybe this would solve your problem ?. It would indeed be better to not allow a `-1` value to the `n` option but instead to create a new option like `-infinite`. It doesn't have to be a value of the `n` option ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-375686179:29,update,updated,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-375686179,1,['update'],['updated']
Deployability,"Hey @marques-bruno, any update on this issue?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/581#issuecomment-374878459:24,update,update,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/581#issuecomment-374878459,1,['update'],['update']
Deployability,"Hey @marques-bruno,. I think the idea was to have a collection of ""DDGLinks"" seen as one data. For example:. ```; // Inputs; DDGLink<MechanicalObject> d_mechanical_object; // One mechanical object; DDGLinks<BaseForceField> d_forcefields; // Multiple forcefields acting on the MO; DDGLink<BaseMass> d_mass; // One mass acting on the MO. // Outputs; Data<VecCoord> d_solution;; ```. Here we want to update the solution vector if either the MO, one of the forcefields, or the mass has changed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1228#issuecomment-561085994:397,update,update,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1228#issuecomment-561085994,1,['update'],['update']
Deployability,"Hey @vr3dvr !; Any news? keep us updated, we will have to temporarily set it as wip.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-689419989:33,update,updated,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-689419989,1,['update'],['updated']
Deployability,"Hey!. First PR with a POC of Object links that aren't based on SingleLinks. Here, a new template class (with its base class) is introduced: DDGLink.; Just like BaseDatas, DDGLink inherits DDGNode.; A DDGLink thus benefits from the whole dirty flag propagation thingy, and implements the update() function to clean its dirty flag, and update from its inputs.; Just like Datas, a DDGLink also possesses a counter, that is incremented when the link value changes. Just like BaseLinks, and SPtrs, to retrieve the object linked with a DDGLink, you need to call the get() method. The set() method will set the link. When a link is set within a DDGLink, the componentState of the linked object is set as input to that DDGLink. It's up to you to connect your DDGLink to some datas to connect your dependency graph. Contrary to the current link implementation in SOFA, these links, can be very easily manipulated as their base class (BaseDDGLink), or as DDGNodes even. DDGLinks are parsed in Base::parseField just like BaseLinks and BaseDatas, which makes them usable with the BaseObjectDescriptions. (they really mirror the behavior of all other field types.). A very simple test case is present in this PR to show you how it's used. You can reference your links with their pathnames, just like normal datas or links, by calling the getPathName() method. There's not bi-directionality implemented in this PR, (because I didn't have time in the end...) but it's not rocket science:; - all there is to do is add a vector of Base* in Base with helper methods to add, remove retrieve the list of link owners. Then in DDGLink::set(), call the add() method of your link to register`this`. (maybe in another PR...) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scen",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1226:287,update,update,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1226,2,['update'],['update']
Deployability,"Heyy @fredroy . Thanks for your reply and i adopt a similar solution: **multiprocessing** in the python library, which basically allows two python processes to communicate through the **sockets**. And it works well for now, not so perfect as getting the value from the device directly tho. And for sure I will also give SOFA 20 with python3 a try. I will update this post at that time. Thanks again for your help! You are so great! ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068976789:355,update,update,355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068976789,1,['update'],['update']
Deployability,"Heyy @fredroy ; Yes, you got it correctly. I am trying to read a haptic device written in py2.7 into sofapython controller in SOFA.; And thanks for your advice, I just tried **run as admin** when execute the runSofa.exe, and it just does not work. So usually the SofaPython could be compatible with other python packages installed from pip, right?; I think I will try to debug into my python drivers and for now I am going to run these two python processes at the same time(1. a normal python console and 2. a sofapython one), and probably let the 1. console write into a .np array and let the 2. process read continuously read the array to pass the msg from haptic device. Will it work in sense of real-time property in your opinios? @fredroy Or do you have a better idea about such temporal solution.; Thanks any way !!!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068043598:321,install,installed,321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2786#issuecomment-1068043598,2,"['continuous', 'install']","['continuously', 'installed']"
Deployability,"Hi , ; would be fine with me if your guys could provide the patch.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-527578294:60,patch,patch,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-527578294,1,['patch'],['patch']
Deployability,"Hi @ErwanDouaille . Could you update us about the status of this PR shall it be pursued, cleaned and merged ?; Cheers Hugo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-384214596:30,update,update,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-384214596,1,['update'],['update']
Deployability,Hi @ErwanDouaille . How are you doing? It's been some time since your last update. Any news on the Communication plugin?; @tgaugry did you use this work on Communication for your own purposes ?. Best!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-440994462:75,update,update,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-440994462,1,['update'],['update']
Deployability,"Hi @EulalieCoevoet . Thanks for the PR.; You mentioned in #1534 that ""The problem I have is that the component is not working with the update callback mechanism"". What was the update process you were expecting? Could you detail what you meant by not working please?. After this PR we will take a look at the MeshGmsh one.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713089550:135,update,update,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713089550,2,['update'],['update']
Deployability,"Hi @Gabriele111,; How do you install gym? `pip install gym==0.21.0`?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757826356:29,install,install,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757826356,2,['install'],['install']
Deployability,Hi @JavadZallaghi ; You are here on the GitHub issues. GitHub and its issues are made for developers. . I see that you already have an open topic on the [forum](https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/). We will provide a reply there as soon as possible. Best wishes.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1943#issuecomment-803979219:250,install,installation,250,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1943#issuecomment-803979219,1,['install'],['installation']
Deployability,"Hi @Neustradamus,. Thank you a lot for taking time to report the issue. . I think @guparan is the one to handle this issue.; @guparan any update ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-451481277:138,update,update,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-451481277,1,['update'],['update']
Deployability,"Hi @Neustradamus,; Shipping Python with SOFA binaries is not a priority for now but I will definitely improve the installation instructions to make it very clear that users have to set their Python env by themselves and how to do it.; But actually I may have closed this one too quickly, the solution you proposed should be implemented. Let's re-open and put a more generic title. No promise on when I will tackle this though.; Do not hesitate to help in any way :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-486572133:114,install,installation,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-486572133,1,['install'],['installation']
Deployability,"Hi @ScheiklP ,. `MeshROI` is a SOFA engine, it inherite from ... `DataEngine` I think (without looking at the code).; The design of the the engine is to call the method `DataEngine::update` when one of the output Data is accessed and if any of the input Data is dirty. Meaning we need to recompute the output from new input value. . But as several mechanisms are required for this design, the `update `method is calling the method `doUpdate `which has to be implemented in each specific engine in middle of other code. So it is normal you don't see call of doUpdate inside the MeshRoi. DO you have a scenario which doesn't work as expected?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053:182,update,update,182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315100053,2,['update'],['update']
Deployability,"Hi @ScheiklP, sorry to bother you again. I am trying to install sofa from source so that i can use a =>3.9 version of python as you suggested. I'm facing some problems though. when i compile sofa with cmake i get this error ; 'Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.18"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package)'",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761148804:56,install,install,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761148804,1,['install'],['install']
Deployability,"Hi @ScheiklP, thank you for your reply. I did as you said and now it seems to find sofa module and python. But it gives another error i can't solve, which happens when it tries to install gym and it says '..error in gym setup command: 'extras_require' must be a dictionary whose values are strings or lists of strings containing valid project/version requirement specifiers. '",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757820378:180,install,install,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757820378,1,['install'],['install']
Deployability,"Hi @Sihtralad, . thank you for reporting the issue. . We made some fixes for the RoboSoft conference; But in general we don't backport the fixes to old releases (the 21.12 is a past release). . Could you confirm this problem is still there with the master branches of Sofa+STLIB+SoftRobot ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2754#issuecomment-1117091916:152,release,releases,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2754#issuecomment-1117091916,2,['release'],"['release', 'releases']"
Deployability,"Hi @WilkGardariki, sorry for the late answer. The dependency packs have been updated.; Thank you for the report !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/295#issuecomment-312637459:77,update,updated,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/295#issuecomment-312637459,1,['update'],['updated']
Deployability,"Hi @alxbilger ,; quick update: The main reason behind the instability is the `nbVirtualFinerLevels` value.; If we set that to `1` -> no problem. Also for strictly convex objects, it is also no problem. But I would still love to get deformation through collision working... ; Any idea on what would have to be done there?. Cheers,; Paul",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2007827978:23,update,update,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2007827978,1,['update'],['update']
Deployability,"Hi @alxbilger @courtecuisse . We understand what this function was used for in BaseFF. However, the API for topological changes introduced by @epernod more than a year ago now uses callbacks. Such callbacks appear to me like the appropriate way to implement an optimized update of the local stiffness (only on the updated elements). This PR proposed to remove a function, which had no implementation in the core. No feature in the code base, so it was polluting the code base and making it harder for new developers to read the API. @alxbilger had explicitly asked for feedback, and the above discussion led to the confirmation of this deletion.; However, you make a point: SOFA should indeed include examples (scenes and code) of 3D cutting and such contributions are most expected. Such PRs and topics are (and were in this case) discussed weekly at the [SOFA dev meeting](https://sympa.inria.fr/sympa/subscribe/sofa-dev). . Two solutions I see: ; - pulled-request a revert of the PR introducing the feature in the core of SOFA; - use the new API and updates existing FF in SOFA",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2244#issuecomment-1171247643:271,update,update,271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244#issuecomment-1171247643,3,['update'],"['update', 'updated', 'updates']"
Deployability,"Hi @damienmarchal, thank you for this massive work.; 117 changed files in 1 commit is not easy to review so this may take a while to be merged but be sure we (I included) are going to check it out.; About the deprecation policy, I agree with your proposal of 1 year transition + highlights in releases.; I'm curious to see this PR [ci-build]'ed [with-scene-tests] 😉",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328514613:293,release,releases,293,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328514613,1,['release'],['releases']
Deployability,"Hi @damienmarchal,; Thank you for your comment. I needed the engine output to update at each time step, but I think you are right and the default lazy mechanism may be enough for my use case. I made this change together with @hugtalbot, mainly to go through the process of opening a PR :); Anyway, I think the things mentioned in the todo list (especially adding visualization part) could be helpful. But of course we could close this PR and open another later with those improvements.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1066#issuecomment-496416619:78,update,update,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1066#issuecomment-496416619,1,['update'],['update']
Deployability,Hi @dweckmann any update ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-515094912:18,update,update,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-515094912,1,['update'],['update']
Deployability,"Hi @epernod ,; thanks a lot for the explanation! :). The scenario that does not work is opening the ROI component from the scene graph in the GUI and looking at the data.; This does not seem to be updated.; ![image](https://user-images.githubusercontent.com/29635054/201955573-bca66cef-f619-4c08-a15a-c18aa0a9ec80.png); Moving the object through mouse interaction into and out of the ROI, these values do not change.; The values are only updated when I close the window of the component and opening it again. So I guess I'll close this issue.; Is there another related issue? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315459732:197,update,updated,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315459732,2,['update'],['updated']
Deployability,"Hi @epernod ; Is this the way we want to implement update process (when data changes) for non-engine components ?; Here you are doing:; - at init: `m_dataTrackerDATA.trackData(d_MYDATA);`; - a function _updateIfXXXX_ is:; - called at each physical function call (addForce, addDForce, addKToMatrix etc.); - checking if data changed; - if yes, updates data and re-compute internal vectors. My approach in MeshMatrixMass is the following.; - at init: `m_dataTrackerDATA.trackData(d_MYDATA);` (same); - a function _update_ (like in engine) is : ; - called at each EndAnimationEvent; - checking if data changed (same); - if yes, updates data and internal structures (same); - this update function is also called by reinit(). What do you think ?; I would like to have like a template to attack all important (NG related) components to apply the right internal update process ! (and kill the reinits)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-510625843:51,update,update,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-510625843,5,['update'],"['update', 'updates']"
Deployability,"Hi @etagliabue,. Thanks a lot for you pull-request. . Could you elaborate a bit more on which use case requires the changes you are proposing. For the moment I don't understand which use case you are working on which would defeat the existing lazy data update mechanism used by Sofa engines.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1066#issuecomment-496293593:253,update,update,253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1066#issuecomment-496293593,1,['update'],['update']
Deployability,"Hi @fbridault ; Did you give a try to the latest v19.12 ?; If you face any issue, please poke me directly. I want to make sure your integration is working fine.; Best.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-592187497:132,integrat,integration,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-592187497,1,['integrat'],['integration']
Deployability,"Hi @fredroy,. I fully support removing the dependency to SceneCreator. Thanks for the effort. . Small comment: ; I think that using simpleapi is a better option for scene creation than using the raw c++one:; - it reduce the need for c++ includes (so the dependency graph (aka ""the giant spaggheti bowl"") pressure). ; - it reduce the compilation time,; - in theory simple and consistant API aligned with the python one (but It haven't been updated so it match with SofaPython3... but doing such a thing is worth the effort).; ; ; EDIT: I just try how would look a modernize simpleapi (https://godbolt.org/z/9EW9dbnvn)... and think I'm going to like doing things like that (thanks to c++ std::any):; ```cpp; mo = createObject(""MechanicalObject"",; {{""name"", std::string{""myMo""}}, ; {""position"", {{1,2,3},{4,5,6}}},; {""enable"", true}});; node.addObject(mo);; ```; The syntax is nice and there is no more this ugly data to string to data creation using ""BaseObjectDescription"" and its parse method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882:439,update,updated,439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955#issuecomment-1592565882,1,['update'],['updated']
Deployability,"Hi @fredroy,. I have an update concerning this issue. I tried compiling SOFA with SofaPython3 in Debug mode and I encountered the issue again.; Firstly, in Visual Studio, I had to add the Python3 libs folder as additional library reference to the python3 related projects. (Otherwise python39.lib was not found). In `PythonEnvironment::Init()`, the line `py::module::import(""SofaRuntime"");` causes the crash. So apparently the import fails. . I think the cause could be that the .pyd files make reference to unreachable dependencies. So I ran Dependencies and did not notice anything wrong :; ![image](https://user-images.githubusercontent.com/24836743/108839575-87195400-75d5-11eb-8438-1cbf28fe8bb2.png). I precise that I installed the Python Debug binairies (so python39_d.dll exists).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-784141337:24,update,update,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-784141337,2,"['install', 'update']","['installed', 'update']"
Deployability,Hi @fredroy. Here it is:. [INFO] [runSofa] PluginRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/plugins;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/collections;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release; [INFO] [runSofa] DataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/share;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/examples;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_sourc,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:308,Release,Release,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"Hi @guparan ; I added tests & the use of SOFA_VERSION but is this contains a real value ? On my system it was 999999; which is pretty useless. Could the value be set to the ""next release"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/329#issuecomment-315888752:179,release,release,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/329#issuecomment-315888752,1,['release'],['release']
Deployability,"Hi @guparan, I saw your comment on installation from this link https://github.com/sofa-framework/sofa/issues/2485#issuecomment-971462092. I have been struggling with the installation for a quite some time now. can you please check my comment for the procedure I have mentioned here at https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1316778833? or from what you mentioned do I only need those 4 lines to install on ubuntu?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1318634630:35,install,installation,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1318634630,3,['install'],"['install', 'installation']"
Deployability,"Hi @hdeling,; Could you give us more precisions regarding the need to change from enums to strings for the integration methods?. **If** the goal is to simplify the conversion from the string (passed in XML / Python scenes) to the C++ enums, wouldn't it be best to take advangate of the OptionsGroup datatype already present in SOFA?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-465519581:107,integrat,integration,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-465519581,1,['integrat'],['integration']
Deployability,"Hi @hugtalbot ,; we discussed it as well with @marques-bruno and @damienmarchal on gitter, we all have several way do to it. Can't say if one is best.; I want to put a generic mechanism in BaseObject (or another child/parent) that you could call, if you want, at init to link a dataTracker and which would automatically call an update (maybe not exactly the name update to not confuse with engines) virtual method. . I suggest either we start a discussion issue on this and/or we add that discussion for the next dev meeting agenda.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-510788154:328,update,update,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-510788154,2,['update'],['update']
Deployability,"Hi @hugtalbot,. Apologies for the delayed response. I've recently updated my CMakeLists in the ext_plugin_repo, switching from sofa_add_plugin to sofa_add_subdirectory, which has successfully enabled the build of this plugin. Below is the revised CMakeLists for your reference:. ```; cmake_minimum_required(VERSION 3.12). find_package(SofaFramework REQUIRED). # Changed from sofa_add_plugin to sofa_add_subdirectory; #sofa_add_plugin(SofaTearing/ SofaTearing); sofa_add_subdirectory(plugin SofaTearing/ SofaTearing); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4461#issuecomment-1960547563:66,update,updated,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4461#issuecomment-1960547563,1,['update'],['updated']
Deployability,"Hi @hugtalbot,. Thank you for your response. I've reviewed the CMakeLists.txt file in the SofaTearing plugin and noticed that the first two lines are:. find_package(SofaFramework REQUIRED); find_package(SofaGui REQUIRED). However, I couldn't find SofaFramework and SofaGui mentioned in the SOFA-NG transition list you provided. It's possible that I've misunderstood the process for integrating a v21.06 plugin with SOFA v23.06. Could you please clarify this for me or offer further guidance?. Thank you.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4461#issuecomment-1919100009:382,integrat,integrating,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4461#issuecomment-1919100009,1,['integrat'],['integrating']
Deployability,"Hi @jjcasmar, thanks for spotting this issue :+1:; I see you installed the v20.06 binaries in your system. Did you have a previous installation before?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-655515305:61,install,installed,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-655515305,2,['install'],"['installation', 'installed']"
Deployability,Hi @jnbrunet ; Did you integrate what was done by @courtecuisse in #1549 or is it is still worth having a look at 1549 ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1682#issuecomment-752008983:23,integrat,integrate,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1682#issuecomment-752008983,1,['integrat'],['integrate']
Deployability,Hi @lakehanne . I have the impression that dependency tracking between plugins with only cmake external repo is hard. . This is why I released a sofa package manager called sofa-spm: https://github.com/SofaDefrost/SPM,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1122#issuecomment-527793805:134,release,released,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1122#issuecomment-527793805,1,['release'],['released']
Deployability,"Hi @lujaindong . Thanks for reporting this issue. . As far as I know SofaMiscForceFieldDev not part of Sofa and I bet it is a private plugin that implements the missing component ""RotatioNFinder"" and ""ShapeMatchingForceField"". . Having an example base on private plugin is problematic and we should either provide a different example with only public components or ask the author of RotationFinder & ShapeMatchingForceField to have them publicaly release and have them integrated into Sofa. I think @hugtalbot can say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307#issuecomment-311033631:447,release,release,447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307#issuecomment-311033631,2,"['integrat', 'release']","['integrated', 'release']"
Deployability,"Hi @lytyo , sorry for the delay.; Do you still have problem with the v20.12 release of SOFA ? SofaPython3 is being shipped inside and emphasis has been placed on compilation/build/install with python path, etc.; Thanks !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-780672279:76,release,release,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672#issuecomment-780672279,2,"['install', 'release']","['install', 'release']"
Deployability,"Hi @maddin200 I would suggest that you try to do it since it is a good first issue to experience the contributing steps:; - creating a fork of SOFA; - create a specific branch, implementing the patch; - pull-requesting this branch in master of sofa-framework. If more things are to change we would assist you, but please, don't worry about making mistakes while contributing!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1133#issuecomment-529835435:194,patch,patch,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1133#issuecomment-529835435,1,['patch'],['patch']
Deployability,"Hi @maddin200, thank you for the bug report. ; I checked on Qwt website: https://sourceforge.net/p/qwt/news/; and this has been fixed in new version of the lib. I just pushed the PR #1136 to upgrade the version of Qwt. Could you have a try?; Otherwise the patch you are asking for is here:; https://github.com/sofa-framework/sofa/pull/1136/files#diff-4f1be8e83adaddcbf84145436b7d5b80",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-527683573:191,upgrade,upgrade,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-527683573,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"Hi @marques-bruno wasn't it merging the #1407 into this one (#1408) ?. My notes on this PR were: Rebase #1407 in #1408.; SetValue on componentState should not be required: bool parse() calls getValue on the m_repositoryPath, which in turn will call the updateCallback, which itself sets the component State. Thus setting it again would be useless.; fileMesh to remove",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643175509:253,update,updateCallback,253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643175509,1,['update'],['updateCallback']
Deployability,"Hi @polyakovkrylo,. When I call the plugin of the SDK/lib/release/lin-x86_64-gcc/libdhd.a version to compile, I encounter an undefined reference issue.; ``` bash; lib/libSofa.Type.so.20.12.99 lib/libSofa.Compat.so.20.12.99 lib/libSofa.Config.so.20.12.99 -Wl,-rpath-link,/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib && :; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)：in function‘dhdUSBGetDeviceCount(int, int)’：; dhdComUSB-libusb.cpp:(.text+0x9d)：undefined reference to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0xba)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0xed)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x120)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x141)：undefined reference to ‘libusb_exit’; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)：in function‘dhdUSBGetDeviceCountList(int*, int*, int*, int)’：; dhdComUSB-libusb.cpp:(.text+0x215)：undefined reference to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file o",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:58,release,release,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,3,['release'],['release']
Deployability,Hi @remibessard ; I am getting back to this topic.; I know students (Alban for instance) were struggling also with the BeamLinearMapping.; Can you update us on this topic ?; Is it working well for you?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-509667857:147,update,update,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-509667857,1,['update'],['update']
Deployability,"Hi @sescaida,; Thanks for following up on the subject :) I came back from holidays this week, that's why it didn't go much further since the STC.; I've updated the examples, that shows how to use both:; - the initial version of the PSDE (explicit data typing in the addNewInput / addNewOutput methods, but with SOFA C++-style datatype factory) ; - The new auto-detected I/O types derived from their parent / child's value types. As I said in my previous comment, I'd hope to go further now that I'm back, especially on the aspects of setting input types as kwargs to the PythonScriptDataEngine component. I will also rename the PythonScriptDataEngine into whatever we decide.; Damien suggested PythonEngine, I'd be more for PythonDataEngine to keep the consistency between the bound component's name and the Pyhton name (PythonDataEngine -> DataEngine); What do you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406585627:152,update,updated,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406585627,1,['update'],['updated']
Deployability,"Hi @sofa-framework/reviewers,. Here is a follow up of NG project for April. ; The project is huge and still requires a lot of iterations to get the best refactoring process but we are going in the right direction :+1: . ## Discussions; It was decided to push all NG changes to [a specific NG branch](https://github.com/sofa-framework/sofa/tree/ng) on sofa-framework.; Still, all the developments will go through the PR process. Reminder: your feedback is VERY important, we need it to adapt our work and minimize future rollbacks. **Do not hesitate to put any comment in the pull-requests.**. ## Refactoring and adapting SPM for Sofa.Component.Utils. SPM is the set of scripts we use to make our work easily reproducible. You can check it out [here](https://github.com/guparan/sofa2ng). This work made me realize that it will be very hard, if not impossible, to anticipate every subtle change needed by the refactoring.; - Do we want SPM to be an all inclusive script to refactor completely SOFA? ; every refactoring is unique and needs to change SPM ; -> namespace handling ; -> includes refactoring; - Or should we prefer it to be an easy-to-use script to **bootstrap** any refactoring? ; -> very specific changes will have to be done by hand. I propose to go for solution 2 and to provide a git patch covering the work done after SPM job (fixing includes, fixing namespaces, ...). The progress of this task is **85%** since I now have to create the patch and to provide everything in the PR. ## Moving on with Sofa.Helper.Bvh; Following [the latest iteration on NG architecture](https://annuel2.framapad.org/p/sofang-v3) and Damien's first draft in his [cleanTheMessStep1](https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng) branch, I started refactoring SofaFramework with Sofa.Helper.Bvh. This task needed me to heavily change/adapt SPM. It contributed to make me prefer solution 2 above. The progress of this task is **60%**. TODO:; - update the recipe with latest SPM changes (namesp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811:520,rollback,rollbacks,520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811,1,['rollback'],['rollbacks']
Deployability,"Hi @sofa-framework/reviewers,. Here is a follow-up of SOFA-NG for July. ## sofa2ng; Previously named SPM, the NG-module boostrapper has been massively updated and upgraded.; It should now able handle any standard (following conventions) SOFA module.; Check it out: https://github.com/guparan/sofa2ng. ## Sofa.Component.Utils; The recipe has been updated. ## Sofa.Helper.Bvh; The recipe has been updated.; A pull-request proposing Sofa.Helper.Bvh and explaining how to reproduce it with sofa2ng has been done: https://github.com/sofa-framework/sofa/pull/741. ## Next steps; - Follow Sofa.Helper.Bvh PR and answer questions about sofa2ng; - Discuss about SofaFramework modules refactoring with vonlunteers (who does what); - Continue refactoring SofaHelper. ---------------------------; As always, do not hesitate to comment. :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-409633414:151,update,updated,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-409633414,4,"['update', 'upgrade']","['updated', 'upgraded']"
Deployability,"Hi @sofa-framework/reviewers,. Long time no see, the NG task has been quite slow this last months.; Here is a quick follow up of October and November activity. ## Sofa.Helper.Types; I finished the refactoring for Sofa.Helper.Types. ## Next objectives; Update NG branch; Open PR for Sofa.Helper.Types; Start another Sofa.Helper.* refactoring. ---------------------------; As always, do not hesitate to comment. :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-446606942:252,Update,Update,252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-446606942,1,['Update'],['Update']
Deployability,"Hi @sofa-framework/reviewers,. May was quite quiet for our beloved NG project.; Don't worry, I still have some news for you :wink:. ## Discussions. Pluginization works are possible but they have to be done in-place (not moving the files). This will permit to simplify the dependencies between SOFA modules. . About the NG branch, to avoid big divergence, we propose to merge it with master as soon as some big step is done. The next big step is SofaFramework coverage. ## Bootstrapping scripts. Previously named SPM, the [bootstrapping scripts](https://github.com/guparan/sofa2ng) are now able to handle test folders. ## Process. Here is the process to cover one module:; 1. Create/update a recipe based on an existing one.; 2. Run the bootstrapping scripts with the recipe.; 3. Inspect the output; 4. If something is wrong or missing, edit the bootstrapping scripts and *goto 1*; 5. Do specific changes by hand like namespace aliases; 6. Create a patch of all changes made by hand; 7. Open a pull-request providing the recipe and the patch (previously pushed to sofa2ng). This process will be rewritten in Sofa.Helper.Bvh pull-request. ## Sofa.Component.Utils. The first NG pull-request has been merged to the NG branch. There is still some updates to do though, because the bootstrapping scripts changed. ## Sofa.Helper.Bvh. The recipe has been updated. ; This work will be the base of further contributions. I will detail all the bootstrapping + patching process in the pull-request. ## Next steps; - Pluginize without moving files: use plugins mechanism to work on modules dependencies ; Start with the less dependent ones and progress towards SOFA core.; Objective: simplify dependencies between modules.; - Validate Damien's architecture proposal for SofaFramework: https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel/Sofa; Particularly about Sofa.Helper.Types; - Create Sofa.Helper.Bvh pull-request; Will give a clear example and all the process to refactor parts of SofaFramew",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223:682,update,update,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223,2,"['patch', 'update']","['patch', 'update']"
Deployability,Hi @untereiner could you point us some examples scenes to run with your integration work ?; Cheers,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-400257762:72,integrat,integration,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-400257762,1,['integrat'],['integration']
Deployability,"Hi @untereiner, thanks for your PR. Actually, this feature should be contained in an option because we may not want to use ccache even if we have it installed.; Could you make that change?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/692#issuecomment-402413477:149,install,installed,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/692#issuecomment-402413477,1,['install'],['installed']
Deployability,"Hi @vmagno ; Great job, could you please update the PR to take into account the changes made in master ? ; (Small tips: Most of the the problematic files have been moved in the plugins directory :))",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/423#issuecomment-335799316:41,update,update,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/423#issuecomment-335799316,1,['update'],['update']
Deployability,"Hi Adrien,. Thank for the PR, and the detailed description. Few comments at first glance:; - are the class Callback & CallbackImpl not equivalent to the std::function and std::bind that are in the c++11 STL ? ; - about the ""if(m_updating)"" in the update function. I think it is there to avoid loops. Does it make sense to add a message warning if this happens ? ; - we don't use #pragma once in SOFA as this is not part of the standard . But I think the decision make sense 10 years ago but as the compiler support is now rather bit maybe we should switch to use it as managing the #include SOFA_SUPPER_LONG_NAME_H..is error prone. @guparan, do you think we can make a script to convert the complete code base for pragma once ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911#issuecomment-459511168:247,update,update,247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911#issuecomment-459511168,1,['update'],['update']
Deployability,"Hi Adrien,. Thanks for the PR the I think should go in fast-merge then back-ported to 17.06 release @guparan (could you do the back porting ?)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/320#issuecomment-313093165:92,release,release,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/320#issuecomment-313093165,1,['release'],['release']
Deployability,"Hi Benjamin, . Maybe I'm wrong but it seems to integrate a lot of commit touching a lot of different sofa part (SofaKernel, SofaOpenGL) which does not precisely match the pull-request description. Wouldn't it be better to separate that into several more specific pull-request ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/76#issuecomment-263724660:47,integrat,integrate,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/76#issuecomment-263724660,1,['integrat'],['integrate']
Deployability,"Hi Erik,. Nice commit. Some (cosmetic) remarks:; - you updated some attributes/data field names but the name you use are not following the sofa guidelines. Data should starts with d_ not m_ (https://github.com/sofa-framework/sofa/blob/master/GUIDELINES.md). ; - there are std::cout which should be replaced by the msg_error api ; ; +1 for the examples.; Would be nice to also have a test file validating the behavior.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273165258:55,update,updated,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273165258,1,['update'],['updated']
Deployability,"Hi Eulalie, . The template instantiation part (in the .cpp) is not synchronized with the extern template part (in MechanicalMatrixMapper.h). ; But we can update that in a separate PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1703#issuecomment-758491994:154,update,update,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1703#issuecomment-758491994,1,['update'],['update']
Deployability,"Hi Fred,. Thank for this PR. . +1 for the cleannig; +1 for the tests ; Maybe it should be told in the PR description. . I'm surprise by the C++ code in the test.glsl file. I don't think this is a good naming convention because it is really hard to understand that the content of the .gsl file is actually c++. So I suggest to rename the file with a more classical .cpp (or .cppglsl if you really want something no .cpp). . There is some place in the code that introduces new std::cerr. Can you please update to use the dmsg_* API . I will try the PR to see if it does not interfere with the livecoding features.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158#issuecomment-276338378:501,update,update,501,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158#issuecomment-276338378,1,['update'],['update']
Deployability,"Hi Hervé,. In general, I think it is a good idea to have a repo per plugin, even if it becomes more difficult to update them when the sofa core is modified.; But in this specific case, it would be great to add this plugin to this github repo, so Flexible can still benefit from your code. Another solution, could be to add a third plugin in your independent repository, that would link with both SOFA-HighOrderTopology and Flexible, and that would contain the high order shape functions. What do you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251653905:113,update,update,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251653905,1,['update'],['update']
Deployability,"Hi Hugo, This is a very challenging target. I would probably try something something like:. 1- For release 17.12; - move all the ""not core"" files in plugins. ; - for each ""SofaXX/blahblah.h"" in the old location have this kind of file with:; ```cpp; /// This file is now deprecated and have been moved in the ""SofaXX"" plugin. You need to; /// update your code to #include <SofaConstraint/blabla.h> ; #ifdef SMOOTH_TRANSITION_UNTIL_17_12; #include <applications/plugins/SofaXX/blahblah.h>; #endif; ```; - for each component you really want to deprecate add a hook in the SceneChecker saying ""component xxYYZZ is now deprecated and will be removed in sofa 18.06. Use alternative XX and if there is none please contact us open Issue in our bugtracker with tag 'sofaNG'. "". Then in 18.06...really removes the component and update the SceneChecker hook so that it simply print somehing like ""this component have been removed since sofa 18.06. Alternative component is now XXXX."" . Of course the more automated it will be through script the best it will be.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-323710481:99,release,release,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-323710481,3,"['release', 'update']","['release', 'update']"
Deployability,"Hi Hugo,. The incompatibility I was talking about few days ago were because of issimo changes integrated in master.; So I don't think there is a need to wait for merge. . DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637#issuecomment-395358419:94,integrat,integrated,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637#issuecomment-395358419,1,['integrat'],['integrated']
Deployability,"Hi I downloaded the windows .exe file to install SOFA, I attempted to go through the tutorials and eventually learned that I have to click show doc browser for the walk throughs. But I get the warning: ""[WARNING] [RealGUI] Doc browser has been disabled because Qt5WebEngine is not available"". During installation I didn't see an option to activate this. I downloaded [qt-unified-windows-x64-online.exe](https://download.qt.io/official_releases/online_installers/qt-unified-windows-x64-online.exe), to no avail. . I saw a similar post, but for someone who build it on linux using cmake. I tried following the steps for that but couldn't complete when I tried to run a command given that did nothing. . I want that when I click show doc browser in SOFA it pops open that little window that I saw in a video tutorial. How do I get this?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5058:41,install,install,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5058,2,['install'],"['install', 'installation']"
Deployability,"Hi Mathieu, . Thank for your review. ; InitShader or InitGLSL ? . About the InitShader function as it was containing some memory management code ; ```cpp; // If any of our shader pointers are set, let's free them first.; if(!m_hShaders.empty() || m_hProgramObject); Release();; ```; I assumed that is was already ok to be called several time and that it was not leaking memory, maybe I was wrong so I will look at that more carefully. . I will also clean the thing with the m_filelistener (even if I think the right way would be to change the API of the FileMonitoring API (but this must be done in a separated pull-request)). About InitGLSL I see no memory allocation there ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/63#issuecomment-262534138:266,Release,Release,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/63#issuecomment-262534138,1,['Release'],['Release']
Deployability,"Hi Mathieu,. - About the 'd_size' data field. It is there just to store the attribute passed by the user. As the parse function already do the resize using the raw value of the attribute it was not needed to do any resize(d_size.getValue) anywhere. . - I share your concern about the cost of adding data. ; According to the last updates in Issue https://github.com/sofa-framework/sofa/issues/44) it seems that data is not that crucial for a real simulation. . To have more insight I just made a quick test with the following result: ; The time to create 200 000 (empty) component (without calling the init function):; - with 6 Data field is 1.10sec; - with 10 Data field is 1.55sec; So one data field added to a component cost 0.05ms at component creation (it is higher than what I expected). ; Now for a more realistic scenario with 200 SphereModel created and initialized one extra data field rise the cost from 3.1 ms 3.2ms and that this is 'dialuated' in all the other cost (collision detection, mechanics). . About your suggestion to set everything to persistent by default and have each component decide what is good to save or not. This is what SOFA actually does and this behave terribly. ; I see two reason for that:; - there is a lot of component that 'forgot' to set/unset the persistent values.; - it is very hard to identify what is relevant to save, IMO because what is relevant to save is a matter of context of use, a Data 'useless' for one may be very useful for someone else. . This is why I choose to do things in the reversed way and let the client code to select what to save (so that you may eventually implement dedicated widgets to let the user select what to save). . I see at least to different context of use and thus saving strategies. . For my context of use it is more important to save scenes that are as close as possible as the one written by the user. This is why I made the XML loader and the GUI have the responsability to make persistent:; - the value given explic",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495:329,update,updates,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495,1,['update'],['updates']
Deployability,"Hi Mathieu,. Best wishes for this year. . Daccord is an old repository on gforge storing a lot of experimental feature (UI & modelling) that are pending for integration in sofa. . I fully agree with your suggestion for point first&second; for third:; - what about adding a Data for template & src ? (I really would like to preserve as much as much as possible the original scene because) ; - ""type"" I don't know but it handled specifically in (XML.cpp). I started a new branch for this task so we can work and tests : ; https://github.com/SofaDefrost/sofa/tree/xmlsave. EDIT: I have updated this branch saving is now working (at least the caduceus scene). If some of you have time please give feedback.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/41#issuecomment-270089246:157,integrat,integration,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/41#issuecomment-270089246,2,"['integrat', 'update']","['integration', 'updated']"
Deployability,"Hi Mathieu,. I see what you mean. ; ; The new implementation allows you to select precisely how gtest suceed or fail according to the messages emitted by a component by using either the MessageAsTestFailure or/and ExpectMessage RAII. . To update the old tests with *a minimal amount of effort* to restore the behavior you described. ; I think in each test setup we can simply add something like ; ```cpp; MessageAsTestFailure raii_warning(Message::Warning) ;; MessageAsTestFailure raii_error(Message::Error) ;; ```; I can devote some time to do that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/211#issuecomment-288386290:239,update,update,239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/211#issuecomment-288386290,1,['update'],['update']
Deployability,"Hi Mathieu,. Thank you for the feedback... the GLSL stuff is a mistake... I didn't knew that pull-request was for a branch and not for a specific commit. So i continued to to work in this branch (I will not do the same mistake in the future). . Now to answer your question...the overhead is near zero. ; - The GLSLListener is triggered by the file FileMonitor. ; - FileMonitor is using the event based ""select"" system API and is not actively 'polling' the files. AFAIK this is the most efficient way to monitor files. ; - If your application don't call FileMonitor::update(0) then this cost nothing. Currently only runSofa is calling FileMonitor::update(0) when started with the -i (for interactive) command line option. . So the different scenarios is:; - runSofa -i & changing the file (this cost the reload of the shader); - runSofa -i & not changing the file (this cost calling the select system call) ; - runSofa as usual...this cost nothing. . I hope I answer you question and yet again, thank you for your feedback on this PR. . Now about FileListener... it is part of the FileMonitor API that is already in Sofa. . DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/55#issuecomment-261506734:566,update,update,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/55#issuecomment-261506734,2,['update'],['update']
Deployability,"Hi Neustradamus,. Improving the packaging and installation process of binary version of Sofa is something we really would like to improve. @guparan already made great work on that but as we are short on man-power this is very slow, small step are done at each Sofa release. . Thanks for you suggestion to auto-install python (and numpy), this would definitely be nice feature. ; In case you have knowledge to do such a thing and are you interested in helping I think @guparan have dedicated github branches with the additional CMAKE scripts he use for packaging the release.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454704670:46,install,installation,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454704670,4,"['install', 'release']","['install', 'installation', 'release']"
Deployability,"Hi Quentin !; Thanks for the notice !. @untereiner I recall that you recently had a look at the VTKLoader in SOFA. Am I correct?; Did you face these warnings ?. Since the file is well loaded, we would simply need to update the loader to have only Warning (and no error msg) when facing these new metadata.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/652#issuecomment-387752616:216,update,update,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/652#issuecomment-387752616,1,['update'],['update']
Deployability,"Hi Thomas,. Currently it seems there is some problem in compiling it, but fundamentally I think this is a great objective. ; Thank you very much to tackling this. . If I understand correctly now we can have the two syntax to read vectors (the one from Python and the historical one). +Backward compatibility is preserved and you added tests to validate the new behavior. This all looks great to me. . You also changed the getStringValue...here I think this is a problem as it will break a lot of third party code. This is why you had to fix a lot of failing test. Instead of changing the behavior of an existing function it would be much better to offer a second function to serialize to python format (or adds a parameter to the existing one to control the behavior eg: getStringValue(SerializingMode mode=SerializingMode::ClassicSofa)). The underlying idea is that by default old code will function as usual and ""awared"" users can take profit of the existing function getStringValueAsPython() or getStringValue(SerializingMode::Python). . I'm sorry because I think it probably took you a lot of time to update the failing tests but the tests shouldn't have been changed, only new one should have been added to validate the new syntax and corner case. . Minor details: ; There is some msg_error(""(S)Vector"") in vector shouldn't it be vector<> instead ?. ; Maybe you will find this pattern usefull: ; ```cpp; namespace sofa {; namespace helper {; namespace logging {; inline bool notMuted(const sofa::helper::io::MeshVTK* ){ return true; }; inline ComponentInfo::SPtr getComponentInfo(const sofa::helper::io::MeshVTK*); {; return ComponentInfo::SPtr(new ComponentInfo(""MeshVTK"")) ;; }; } /// logging; } /// helper; } /// sofa; ```. It allows to write the implicit (this) msg_* as in ; ```cpp; msg_error() << ""Blahblah""; ```. Instead of; ```cpp; msg_error(""MeshVTK"") << ""Blahblah""; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-314893430:1105,update,update,1105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-314893430,1,['update'],['update']
Deployability,"Hi Thomas,. You said:; ""As long as the deserialization operator is compatible with the serialization one, I do not see any issue. And no example scene is failing because of that."". You have to take the whole picture into consideration, everyone is not using serialization/deserialization as ""pairs"". The actual default serialization format is used in a lot of other software (GUIs, scene processing tools written in python, perl and C++). If you change the behavior of the default serialization mechanism all of them will stop working and required to be updated. This is a very, very, very nasty thing to impose to other users of Sofa. A PR doing has no changes to be accepted. . Actually tests is part of our guard line because they validates the API compatibility and allow us to detect changes that breaks it. The existing tests should be considered as validating the ""the existing"" sofa API. It was normal to have them to fail on your PR because it shows that the PR was breaking the compatibility. . I really like the idea of keeping the old serialization behavior as it is and add the other deserialization as an extra feature. This will make the whole PR transparent for users that don't want to update their code base. It thus it can be merged very quickly. . About the test: ; You are right that it would be better if we had test specific tests to validate the serialization alone.; I personally would like to have tests to validate that getValueString() return ""1 2 3"" and that getValueAsPythonString() return ""[1 2 3]"" . And also as you said having tests to validate against the real values instead of their serialization would be nice. . . About the branches:; The rule is to never work directly on the sofa-framework repository. There is no reason to do so (if you really want to make two PR one in anatoscope and one in sofa ... you need to to that from two branches located in the anatoscope repo). Otherwise this consume a lot of disk space on the CI servers that we have to fix manual",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626:554,update,updated,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626,1,['update'],['updated']
Deployability,"Hi Vlad. We have discussed your PR during the sofa dev meeting. And this is what came out : ; This is of interest but would require an example/context (plugin using it) of use to see how you use it. More over, it still need a lot to do to integrate it in a more standardized way to be more generic regarding the type of element. And finally, and we could help you for this, this feature would need unit tests. This pr is currently set to WIP, waiting for further comment from you.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4226#issuecomment-1757148121:239,integrat,integrate,239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226#issuecomment-1757148121,1,['integrat'],['integrate']
Deployability,"Hi all, . BaseLoader was implemented in .h. ; This is bad so I splitted it into BaseLoader.cpp/h ; Then I removed the un-needed includes; Then I updated all the codebase that were missing specific includes. In case your code does not compile... after this PR then you need to add the include you are missing ; (probably fstream or sofa::helper::system::FileRepository) ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/393:145,update,updated,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/393,1,['update'],['updated']
Deployability,"Hi all, . Just a quick update asked by @hugtalbot on how we handled this issue at Anatoscope. It's been a while so our fork drifted quite a bit since the opening of this issue:. - `Data` are only allowed in `BaseObject` instances (i.e. `Nodes` have no data), which simplified many things; - We removed `initData/initLink` altogether, most constructors are now `(BaseObject* owner, const char* name, const char* doc, const T& value = {})`. A pleasant consequence in c++17 is that you may directly declare datas in the class like this:; ```c++; class Object: public BaseObject {; public:; Data<double> foo = {this, ""foo"", ""a foo that bars"", 1.0};; };; ```; - `BaseData` now maintains shareable information (like name/doc/etc) in a shared object, which can be shared between several data instances. In practice doing so is still very ad-hoc so we don't use it much, but it is possible in case we want to optimize dynamic component creation; - Dependency relations between `DDGNodes` no longer use the `Link` mechanism. ; - In fact component links and `Links` in general are mostly gone, and will be removed in the future as they're yet another dependency graph and we would like *everything* to use the data/engine graph instead; - Our `Data` have at most one input (another data or its owner engine), so we may move the `inputs` handling of `DDGNode` to derived classes to avoid needless allocations for `Data`. It's not done yet though. As you can see, things don't quite look the same, but I think old-timers would still recognize what's going on ;) By the same token I think this issue can be closed, but please don't hesitate if you have any question.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-1033777336:23,update,update,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-1033777336,1,['update'],['update']
Deployability,"Hi all, . There has been quite a lot of discussion recently about how the to implement update mecanisms. ; There is of course the DataTracker, but we are quite a lot to implement complementary mecanism in our respectives plugins so it may be a good idea to see what can be factorized into SofaCore. To do that it would be nice to have examples / snippets / draft of the different approaches we have tested or in mind so that we can evaluate the code impact and interoperability. @bruno-marques, @hugtalbot, @epernod, @jnbrunet feel free to add your ideas. ______________________________________________________; Dedicated Gitter room : https://gitter.im/sofa-framework/data-update?utm_source=share-link&utm_medium=link&utm_campaign=share-link",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597:87,update,update,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597,2,['update'],['update']
Deployability,"Hi all, . This PR is getting old, would it be possible to:; - Fix the conflict; - Update the reviewer's status if it is now ok. Thanks. . EDIT: @matthieu-nesme Are you still requesting changes on this PR ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-303540954:82,Update,Update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-303540954,1,['Update'],['Update']
Deployability,"Hi all, ; I installed Sofa (v=17.06, with the Sofapython, Compliant, Image and Flexible pluggins) in a conda environment (conda 4.3.30 with python 2.7.11, numpy 1.13.3) on my computer (macOs 10.13.1). The installation apparently worked fine but when I run a python file it crashes while importing numpy.; More specifically, the crash happens as the framework tries to import the first C++-based module of numpy (=multiarray) see joined file below. I checked the dependency paths and they all point toward the /lib repository of the specific conda env in used.; I also tried to recompile numpy locally and the same problem happened... Does anyone has a clue on what's happening with my setup ?; Thx. PS: numpy works fine in the same conda env in ipython; PPS: I did not use cmake-gui for the compilation but the regular cmake. I used the following compilation flags but I might have missed something : . -DSOFAGUI_QGLVIEWER:BOOL=ON ; -DPLUGIN_FLEXIBLE:BOOL=ON ; -DPLUGIN_COMPLIANT:BOOL=ON ; -DPLUGIN_IMAGE:BOOL=ON ; -DPLUGIN_SOFAPYTHON:BOOL=ON ; -DBoost_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DGLEW_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DGLEW_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libGLEW.dylib ; -DJPEG_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DJPEG_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libjpeg.dylib ; -DPNG_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libpng.dylib ; -DPNG_PNG_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DTIFF_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libtiff.dylib ; -DTIFF_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include . ![screen shot 2017-11-27 at 14 58 33](https://us",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531:12,install,installed,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531,2,['install'],"['installation', 'installed']"
Deployability,"Hi all, ; after some thinking, would it be possible to have this PR merged for release 19.06. ; Because some of the componets it contains have been tagged as ""to be removed"" ; for 18.12 and are still there and generates a warning each time we use them so having everything in a real plugin for 19.06 seems a better move that these messages.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1071#issuecomment-499391583:79,release,release,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1071#issuecomment-499391583,1,['release'],['release']
Deployability,"Hi all,. For the next STC we are planning active coding sprint sessions to boost small tasks and have the pleasure to be working togther. . Feel free to propose any task in the comments!. Current task list (last update 2017-09-29):; - Deprecation: https://github.com/sofa-framework/sofa/issues/426; - Pluginization + SceneCreator dependencies (must be done AFTER deprecation): https://github.com/sofa-framework/sofa/issues/427; - `issofa_*` merges: https://github.com/sofa-framework/sofa/issues/428; - Code cleaning; - Doc. TODO List before the sprint:; - [x] finish to add the set management into the CMakeLists.txt (Damien & Bruno Carrez); - [x] make the list of component to deprecate (Fred, Stéphane, Guillaume); - [x] create a simple example of deprecation with the WashingMachineForceField (Damien); - [x] if needed make a list of ""advices"" we could add to the SceneChecker to warn user on how they can improve their scene (the StaticSolver thing) (Stéphane ?); - ~~add an attribute to BaseObjects to attach component quality info ?~~. Feel free to add whatever I mis-understood or forgot. ; ________________________________________; ping @sofa-framework/reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413:212,update,update,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413,1,['update'],['update']
Deployability,"Hi all,. Here are the result why BarycentricMapping<> is failing in the BarycentricMappingTruss example. Summary on how object are registered in the factory in sofa/master: ; 1) BarycentricMapping<Vec3d,Vec3d> is added into the factory using ""BarycentricMapping"" as entry name; Then ; 2) BarycentricMapping<Vec3d, Rigid3d> is aded into the factory using ""BarycentricMapping"" as entry name (so this actually adds a new template to the existing one). With the PR this is what happens:; 1) BarycentricMapping<Vec3d,Vec3d> is added into the factory using ""SofaBaseMechanics.BarycentricMapping"" as entry name. ; 2) Then, for compatibility, it adds an alias from BarycentricMapping to SofaBaseMechanics.BarycentricMapping. ; 3) Then BarycentricMapping<Vec3d, Rigid3d> is added into the factory using ""SofaMiscMapping.BarycentricMapping"" as entry name. This is actually correct (as SofaMiscMapping is the target where this mapping lies in). But the alias is not updated to point both to SofaBaseMechanics.BarycentricMapping and SofaMIscMapping.BarycentricMapping...which, actually seems pretty logic...one name - one object. . Maybe we can change the alias mechanism so we allow an alias to point to multiple different object...which I'm not very convinced this will not get into troubles.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-1007333869:955,update,updated,955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-1007333869,1,['update'],['updated']
Deployability,"Hi all,. I'm from elementary school doing an internship at DEFROST. ; I was asked to update the serr into msg_error(). ; And I was asked to update the sout into msg_info(). Here is the result of my work. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916:85,update,update,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916,2,['update'],['update']
Deployability,"Hi all,. When crawling into sofa code I often found line like that:; ```cpp; /** A class that define topological Data general methods; DEPRECATED; */; template < class T = void* >; class BaseTopologyData : public sofa::core::objectmodel::Data <T>; {...}; ```; This kind of comment is problematic as I have no idea what to do and it rise a lot of questions. Each time we want to deprecate something we should make efforts on documenting that properly to manage the changes. ; To me this means at least answering the following questions in the source code & in a github Issue: ; - why the code is deprecated and what is the replacement approach; - when it have been deprecated; - when can we remove deprecated class; - who is supposed to do the update...and if it is not the person that deprecate the code what is the implemented approach to notified calling code they are using deprecated code and that they have to be fixed. A good idea is to use dmsg_deprecated() messages for that. ; - how are we supposed to update thing that make use of the deprecated function; . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/272:743,update,update,743,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/272,2,['update'],['update']
Deployability,Hi all. @EulalieCoevoet @epernod @matthieu-nesme @thomas-lemaire @hugtalbot @guparan @fredroy . I suggest we use this issue for general communication about what is happening on the UX group either on github and/or on gitlab. . Please tell anyone interested to join/. Our general target for the next sofa release (17.06) is to ship a runSofa2 application. ; This means we only have less than 3 month. ; I suggest that in April & first day of May we add the missing features and we keep the last month to test and bug fix the software. . DM.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/187#issuecomment-291478457:304,release,release,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/187#issuecomment-291478457,1,['release'],['release']
Deployability,"Hi everyone!; I'm trying to develop a nodule detection exercise on SOFA v22.12. To do this I made a patch of skin: the behavior model is a box with a tetrahedral internal structure, the collision model is generated by making a topological mapping from those tetrahedra to triangles, and finally the visual model is defined as an identity mapping from the collision model. I want to create a sphere inside with a different stiffness's value so that a surgeon can feel the harder sphere inside the skin. The problem is that, although I feel the haptic feedback of both the skin and the sphere, it is very difficult to perceive the transition from the skin to the sphere, and it is impossible to perceive the size of the sphere. What can I do? Is there a way to manage the interface between two objects with different properties?. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4318:100,patch,patch,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4318,1,['patch'],['patch']
Deployability,"Hi everyone, . i am trying to build sofa from source. I used cmake-gui and when i configure it gives me no errors, but i open Sofa.sln in VS 2022 it skips 3 compilations and so i can't find sofaRun to run the software. The 3 compilations are Examples, Documentations and INSTALL. . I watched the video tutorial on sofa website and i noticed QGLViewer_DIR variable is not found in cmake-gui, i don't know if this could be a reason why. . thak you for your help!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4246:271,INSTALL,INSTALL,271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4246,1,['INSTALL'],['INSTALL']
Deployability,"Hi everyone, . i'm trying to install sofa_env for sofa. i already downloaded it from git hub but when i try to install it (i tried dirrent location: in the same environment as sofa, in the sofa folder, in the bin folder, etc), it tells me that it doesn't find the sofa module with sofapython3. Actually sofapython3 is in sofa (i can see it in the plugin manager). it looks like a path problem, like it can't find sofa for some reason, maybe i'm trying to install it in the wrong place. Can someone help me please?? maybe @ScheiklP . thank you very much!!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223:29,install,install,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223,3,['install'],['install']
Deployability,"Hi everyone, sorry for taking so long to further explain my PR. I fully agree with @Camille-K, the referenced paper states it clearly that the matrix should be updated at each time step.; Thanks for merging my PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2706#issuecomment-1060361474:160,update,updated,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2706#issuecomment-1060361474,1,['update'],['updated']
Deployability,"Hi guys, sorry for the late answer. . We do not ship Python with SOFA. You have to install it yourself. ; Be sure to select the appropriate version and platform: [2.7.15_64-bit](https://www.python.org/ftp/python/2.7.15/python-2.7.15.amd64.msi) or [2.7.15_32-bit](https://www.python.org/ftp/python/2.7.15/python-2.7.15.msi). ; When asked by the installer, accept to add Python to your PATH. Hope that helps :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454071028:83,install,install,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454071028,2,['install'],"['install', 'installer']"
Deployability,"Hi guys,. Actually I think this PR should not be merged in this state. It is a proof of concept to show the possibilities.; I just updated a scene that you can use to test the new components. The scene called ""TetrahedralCorotationalFEMForceField"" has two nodes. The first one uses ; the components ""VolumeTopologyContainer"" and ""CMTetrahedralCorotationalFEMForceField"" that are completely written using cgogn and ""MapTetrahedronSetTopologyContainer"" a compatibility wrapper that allows to use ""classical"" sofa components with cgogn. @damienmarchal concerning your questions:. - what the PR does precisely ?; - This PR adds a new data structure for handling meshes. This data structure is designed to handle dynamic (with topological changes) meshes.; - what is the existing state on this topic in Sofa (the title speak about dynamic topology...isn't there dynamic topology in Sofa since year) ?; - I think there is a pipeline for topological changes in Sofa. I do not know much about the efficiency of this pipeline. What I can say (I should provide figures) is that this data structure is as effective as the sofa ones in ""static"" scenarios and more effective and reliable in ""dynamic"" scenarios.; - how this PR handle the problem,; - by changing to a more appropriate data structure; - use CGOGN library... what is this CGOGN library ?; - a topological modeling kernel (see https://cgogn.github.io). I am not sure you need more information about it.; - argument on why the PR is it useful/mandatory/improvement, trying to convince people why they should spend time testing it,; - this work has been in progress since 3 years now. His interest has already been debated. I do not want to debate an infinite time on it. If someone is interested in topological changes, it should save him time.; - provide some idea on how invasive the PR will be (non breaking at all, breaking the SofaCore API, breaking existing scenes); - depends on the meaning of beaking. It does not change the sofa API for topolo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402690583:131,update,updated,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402690583,3,"['pipeline', 'update']","['pipeline', 'updated']"
Deployability,"Hi raffaella,. We really appreciate feedback & suggestion, so thank you. . On the Python side we are currently actively working on improving the whole way to report error. This take place in PR #304 ; So it is the right moment to have that to be improved because release the next sofa release (17.12) will change things. . More generally Sofa messages are from ok to really bad but we lack (wo)man-power to fix all that so If you or anyone feel the envy to participate on this kind of task please don't hesitate because it is very important to have good error messages. . Damien.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/333#issuecomment-315892439:263,release,release,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/333#issuecomment-315892439,2,['release'],['release']
Deployability,Hi thanks for help - any update is fine go ahead :-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2987#issuecomment-1152200600:25,update,update,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2987#issuecomment-1152200600,1,['update'],['update']
Deployability,"Hi there, . I would bet on a mismatch between system python and user-installed python (osx, right?). You can probably find out by printing `sys.path` from a test sofa scene, and from a regular python script. If the path for the standard lib don't match you should see it, then adapt the python path in the cmake command.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347198220:69,install,installed,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347198220,1,['install'],['installed']
Deployability,"Hi thomas,. Maybe the use of 'printLog' in my example was ambiuous sorry... . To me the 'error', 'warning', 'info' specifiers is the message 'type' and the set of types is un-ordred so it cannot be controlled via a single level. ; Eg of valid pattern: ; ```cpp; msg_info_when( msgInfoVerbosity < LOW ) << ""This is printed often"";; msg_info_when( msgInfoVerbosity >= HIGH ) << ""This is printed not so often"";; ``` . Eg of in-valid pattern (should be rejected in the PR :)): ; ```cpp; msg_error_when( msgInfoVerbosity < LOW ) << ""This is printed often"";; ``` . 'msgInfoVerbosity' only control the amount of info messages emitted so is nothing related to ; error/warning. . Instead of level we may also have a 'verbosityMask' to control precisely which message are emitted ; Eg:; ```cpp; msg_info_when( verbosityMask & INFO ) << ""blabha"";; ```; but I think *we shouldn't do that*. About the 'msg_debug'...it is problematic because there is also a different set of macro for developers that are called dmsg_info, dmsg_warning, dmsg_error()...these dmsg_* macros leads to NO-op when compiled in RELEASE. So my thinking is that we should remove the msg_debug macro and use their dmsg_* ones instead.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278609429:1090,RELEASE,RELEASE,1090,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278609429,1,['RELEASE'],['RELEASE']
Deployability,"Hi! :). The original issue and nice chronological story is described here; https://github.com/sofa-framework/sofa/issues/3318. TLDR:; 1. The destructor of `NarrowPhaseDetection` should clean up its map of `DetectionOutputVector`s; 2. `IntersectorFactory` should also keep track of already created `TIntersectorClass`s and release the old ones. Cheers,; Paul; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3337:322,release,release,322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3337,1,['release'],['release']
Deployability,"Hi!. When building plugins as standalone projects, the SofaFramework package doesn't expose the cmake config options used to build SOFA.; In the SoftRobots plugin (among others), tests are performed to know if SOFA has been built using the required options (such as SOFA_BUILD_METIS, MODULE_SOFASPARSESOLVER, PLUGIN_SOFAPYTHON, SOFA_BUILD_TESTS etc.) and out-of-tree configurations require to re-specify those options, even though they are only defined in the SOFA build. I've modified the SofaFrameworkConfig.cmake.in to expose those options to whoever does a find_package(SofaFramework), although that might not be the smartest way to do it (the list is non exhausive and it would be best if options were added in a smarter way.; I think that modules such as SOFASPARSESOLVER should export the MODULE_SOFASPARSESOLVER themselves for instance, and so should the plugins.; But then there's also a long list of options that would be worth exposing, such as:; - SOFA_BUILD_TESTS; - SOFA_BUILD_METIS; - SOFA_BUILD_TUTORIALS; - SOFA_WITH_DEPRECATED_COMPONENTS; - SOFA_WITH_THREADING; - SOFA_WITH_DEVTOOLS; - SOFA_USE_MASK; - .... And I don't know where those should be exposed.. So I'm looking fwd to your opinion on the question!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/927:367,configurat,configurations,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/927,1,['configurat'],['configurations']
Deployability,"Hi, ; I installed the CGAL plugin (Window 10) in the following steps:; Step 1: Installing the software CGAL5.0.2; Step 2: Compiling CGAL Libraries; Step 3: Compiling CGalPlugin. In step3, I successfully compiled the CGalPlugin in Cmake.; When I compiling CGALPLUGIN in VS2017,it showed some errors like these:; `Error C2660: CGAL::Constrained_triangulation_plus_2<CDT1>::vertices_in_constraint_begin': function does not take 2 arguments； Project: CGALPlugin；; File: D:\SOFA\sofa\src\applications\plugins\CGALPlugin\src\CGALPlugin\Refine2DMesh.inl；; CODE: Line 300,; Error C2660: 'CGAL::Constrained_triangulation_plus_2<CDT1>::vertices_in_constraint_end': function does not take 2 arguments； Project: CGALPlugin；; File: D:\SOFA\sofa\src\applications\plugins\CGALPlugin\src\CGALPlugin\Refine2DMesh.inl; CODE: Line 301.`. I don’t know how to solve it.Please help me.Thanks.; I used Sofa v19.12. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1389:8,install,installed,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1389,2,"['Install', 'install']","['Installing', 'installed']"
Deployability,"Hi, I have installed the SOFA docker Image, but I have no idea how to run sofa in Docker!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4230:11,install,installed,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4230,1,['install'],['installed']
Deployability,"Hi, I tried to build SOFA from source following the instructions on the website and the youtube video (Linux compilation), ; however, it crashes at the end with the following error:. > [100%] Built target SceneChecking_test; >[100%] Linking CXX executable ../../../bin/runSofa; /usr/bin/ld: /home/hri/anaconda3/lib/libQt5Core.so.5.15.2: undefined reference to ''std::__exception_ptr::exception_ptr::_M_release()@CXXABI_1.3.13'; /usr/bin/ld: /home/hri/anaconda3/lib/libQt5Widgets.so.5.15.2: undefined reference to 'std::__throw_bad_array_new_length()@GLIBCXX_3.4.29'; /usr/bin/ld: /home/hri/anaconda3/lib/libQt5Core.so.5.15.2: undefined reference to `std::__exception_ptr::exception_ptr::_M_addref()@CXXABI_1.3.13'; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [applications/projects/runSofa/CMakeFiles/runSofa.dir/build.make:159: bin/runSofa-22.12.00] Error 1; make[1]: *** [CMakeFiles/Makefile2:18991: applications/projects/runSofa/CMakeFiles/runSofa.dir/all] Error 2; make: *** [Makefile:152: all] Error 2. ![Selection_003](https://user-images.githubusercontent.com/9308405/235440349-dfdb7d21-c788-429f-8aa1-4fc125d6e676.png). I added the CMAKE_PREFIX_PATH as suggested in the Troubleshooting CMake errors section, and the CMAKE configuration looks like the image attached. Does anyone know how to solve this problem? Thank you in advance!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3829:1280,configurat,configuration,1280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829,1,['configurat'],['configuration']
Deployability,"Hi, I'm working with SOFA through SofaPython3 and I've been experiencing the same change in behavior on Ubuntu 20.04 after I (re)built SOFA from the master branch on November 25th.; I didn't have this issue with a previous SOFA build from October 11th at commit ae42db86fbfc9ff70682b46dc8a2279de25361bd .; Since I also updated some Ubuntu packages and SofaPython3 in the meantime, I'm not sure what is causing this change in behavior as well.; However, `git bisect` led me to #3299, i.e. commit 18149f4407fd78359eead7b64ae23470687c40c4 from October 28th, which modified some Qt/GUI-related files like [QtGLViewer](https://github.com/sofa-framework/sofa/blob/18149f4407fd78359eead7b64ae23470687c40c4/Sofa/GUI/Qt/src/sofa/gui/qt/viewer/qgl/QtGLViewer.cpp#L826).; I'm not familiar with the code base enough to investigate further, but I also built SOFA at commit 58d37e9726187f4f8662fe4786c039443b306bd1 which is the one before #3299 and the change in interactive control behavior does not seem to be present there for me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332895974:319,update,updated,319,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332895974,1,['update'],['updated']
Deployability,"Hi, just wanted to add something here, I am now facing with a similar issue related Background setting object, with same error as above(object not in factory). I am using a .py file for scene creation. I can run it using runSofa, but not able to run it with python3 for integrating with gym. You can find the implementation here https://github.com/ScheiklP/sofa_env; the file I am trying to run : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/reach_env.py",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050:270,integrat,integrating,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3614#issuecomment-2263809050,1,['integrat'],['integrating']
Deployability,"Hi, this is not a bug but a new feature I introduced in https://github.com/sofa-framework/sofa/pull/913 to provide (in build and install dirs) a folder that shall always be scanned by PluginManager when searching for a plugin (like the bin/ folder is). The idea was to get an easy way to add/remove plugin binaries in an installed SOFA **without polluting the bin/ folder** which contains stuff I'm not supposed to touch (or scared to touch). The typical use case is: ; I have SOFA binaries (downloaded from sofa-framework.org or provided by someone) and I have a plugin binaries. How to run the examples of the plugin in runSofa?. Many ways to do that:; 1. launch runSofa, open Plugin Manager, load the plugin, open the scene; 2. edit the scene to add `<AddPluginRepository path=""/path/to/the/plugin""/>` and `<RequiredPlugin name=""the_plugin""/>`, launch the scene in runSofa ; 3. copy/paste the plugin binaries (library or complete folder) in the bin/ folder of SOFA, add `<RequiredPlugin name=""the_plugin""/>` or add the_plugin in bin/plugin_list.conf.default, launch the scene in runSofa ; 4. **[NEW]** copy/paste the plugin binaries (library or complete folder) in the plugins/ folder of SOFA, add `<RequiredPlugin name=""the_plugin""/>` or add the_plugin in bin/plugin_list.conf.default, launch the scene in runSofa . (1) is perfect for a new user but becomes heavy quite soon; (2) is more agile but has limitations for plugins that need to be loaded **before** the scene creation (e.g. for Python env init); (3) solves the limitation of (2) if we use plugin_list.conf but, as I said, putting stuff in bin/ is scary; (4) is what I proposed to separate ""plugins that came with SOFA"" from ""plugins I add myself"". So now about this PR. What you proposed here is to install ALL the sources of applications/plugins into this new plugins folder. ~~Why? ; @jnbrunet You got a bug yesterday, what was it?~~. EDIT: Understood what the bug is, see my review :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/959#issuecomment-470886865:129,install,install,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/959#issuecomment-470886865,3,['install'],"['install', 'installed']"
Deployability,"Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:104,Configurat,ConfigurationSetting,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['Configurat'],['ConfigurationSetting']
Deployability,"Hi,. As discussed at Journées HPC INRIA in Lille, here is an initial nix package for sofa. It also include a flake (and its lock), which is not mandatory, but ease the use of the package, with commands like; - `nix build`, to compile the package in a sandbox; - `nix develop`, to provide a shell with an environment containing all required dependencies to build the project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:903,update,update,903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,1,['update'],['update']
Deployability,"Hi,. I have an issue with commit cbee54ca9953f514da374d92253f9ca6e54df51f line 77.; It seems that a function has been added to get the number of primitives from the narrowphase without checking if the narrow phase is not NULL i.e. ; m_primitivesTest += obj->getNarrowPhaseDetection()->getPrimitiveTestCount();. I use such pipeline without narrowphase, which mechanically creates a segfault in my scenes. I fixed the problem adding if (obj->getNarrowPhaseDetection()) before the previous line but it will result in m_primitiveTestCount = 0. I don't know if it will raise other issues. Hadrien. . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/961:322,pipeline,pipeline,322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/961,1,['pipeline'],['pipeline']
Deployability,"Hi,. In order to reduce compile time of sofa plugins, I decided to compile my plugins outside of Sofa (a build folder for each plugin, CMAKE_PREFIX_PATH and CMAKE_INSTALL_PREFIX to tell cmake where to find sofa); Compiling tests then doesn't work since the gtest headers, that are bundled in sofa, are not deployed on sofa's install dir. This PR rectifies that. @sofa-framework/consortium, I also believe that there should be clear guidelines in SOFA to determine what the ""normal"" way of compiling plugins should be.; I believe that outsourced builds should be the way to go, instead of adding plugins through ; `applications/plugins/CMakeLists.txt`; or cmake's; `EXTERNAL_DIRECTORIES`; since it allows people to isolate SOFA a bit more from their work. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/395:306,deploy,deployed,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/395,2,"['deploy', 'install']","['deployed', 'install']"
Deployability,"Hi,. Thanks for this PR and nice work. . This PR: ; - [ ] succeed to be compiled on each configuration on the CI.; - [ ] does not generates new warnings or test failure. ; - [ ] does not break existing scenes.; - [ ] does not break API compatibility. ; - [x] is now 1 week old. Once the CI will confirm nothing is broken and upon @matthieu-nesme agreement I suggest we merge this PR without waiting 1 week :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139#issuecomment-273764567:89,configurat,configuration,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139#issuecomment-273764567,1,['configurat'],['configuration']
Deployability,"Hi,. have you followed the instructions on the documentation page?; https://sofapython3.readthedocs.io/en/latest/content/Installation.html#using-python3",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1750314113:121,Install,Installation,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1750314113,1,['Install'],['Installation']
Deployability,"Hi,. nice to have you back!. I think the fact that the ```doLoad``` is called 3 times is because your callback is not connected to all your output data at the same time. So each time you ask for a data independently it will relaunch the callback. Then the second point is because you don't override the method ```doClearBuffers```. you can see how ```meshObjLoader``` has been updated in commit ca3a1a4 (I don't know how to link the commit here...); date of the commit: Date: Wednesday, June 24, 2020 2:26:41 PM. I didn't know this loader. It would be nice if you could push a small example with it's mesh in the main repository of SOFA. Like for the other meshloader in: examples/Components/loader/ ; Moreover as soon as a scene is set, it would be tested by the CI of SOFA.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1534#issuecomment-711993815:377,update,updated,377,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1534#issuecomment-711993815,1,['update'],['updated']
Deployability,"Hi,. static const int solves the inheritance of enum class, but cannot really ; be used for the purpose of typing a categorical variable. For instance we can have this :. class NumericalIntegrationMethod { public : static const int methodOne=1;};. class NewNumericalIntegrationMethod : public NumericalIntegrationMethod  ; { public : static const int methodTwo=2; };. but the integration method has to be described as :. int method=NumericalIntegrationMethod::methodOne; or int ; method=NewNumericalIntegrationMethod ::methodTwo;. but not as : NumericalIntegrationMethod method; (which would be done ; with enum). Anyway, the use of string instead of enums is also motivated with the ; issue of having descriptive labels in python or xml files. See my previous comments below :. > Right now when specifying the type of numerical integration method in ; > python or xml scripts the user had to use for instance ; > numericalIntegrationMethod=""3"" which is not descriptive at all. It is ; > preferable to use numericalIntegrationMethod=""Tetrahedron Gauss"" for ; > the maintenance of the code. Hervé. Le 13/03/2019 à 10:16, Guillaume Paran a écrit :; >; > Hi guys, what about replacing the enum by a class containing static ; > int members?; > see https://stackoverflow.com/a/644639; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub ; > <https://github.com/sofa-framework/sofa/pull/936#issuecomment-472340591>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/ASgmq8xcftMg8X0iZv9ijlhfWBJGHFwCks5vWMHsgaJpZM4a_sTV>.; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-472604359:376,integrat,integration,376,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-472604359,2,['integrat'],['integration']
Deployability,"Hi,; I suggest you give a look to this repository: https://github.com/InfinyTech3D/SofaUnity; You can also open an issue or a GH discussion on this repository related to SOFA-Unity integration.; Thank you",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4621#issuecomment-2438943844:181,integrat,integration,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4621#issuecomment-2438943844,1,['integrat'],['integration']
Deployability,"Hi,; Since v22.06, I cannot turn of the print outputs from `GenericConstraintSolver`. `root_node.addObject(""GenericConstraintSolver"", verbose=False, printLog=False)`. ![image](https://user-images.githubusercontent.com/29635054/187037091-9c754406-1adb-4e18-a270-78748924dbe8.png). Cheers,; Paul. ---------------------------------------------. Environment; Context. System: Ubuntu 20.04; Version of SOFA: master branch at commit v22.06.00; State: ""Install directory""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3255:446,Install,Install,446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3255,1,['Install'],['Install']
Deployability,"Hi,; at the moment, `springsIndices1` and `springsIndices2` are not updated, when calling `removeSpring` in `SpringForceField`. Added a call to `updateTopologyIndicesFromSprings` in `removeSpring`. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3268:68,update,updated,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268,2,['update'],"['updateTopologyIndicesFromSprings', 'updated']"
Deployability,"Hi,; it seems linked to qtWebEngine, could you check in the version of Qt5 you installed (manually or using distrib packages) that QtWebEngine is installed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2253#issuecomment-881226191:79,install,installed,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2253#issuecomment-881226191,2,['install'],['installed']
Deployability,"Hi,; the 21.06 release will not be upgraded anymore. Please use the 22.12 or the incoming 23.06. CGalPlugin now have soem github action to make sure it compiles using SOFA release/master branches",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2480#issuecomment-1562784168:15,release,release,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2480#issuecomment-1562784168,3,"['release', 'upgrade']","['release', 'upgraded']"
Deployability,"Hi. . Regarding the update of the plugin for newest version of SOFA : we are a small team of developer for this open source project. The maintenance of all the plugins that are actually used by the community takes most of our time. We need to focus on what most of the community needs and so, if only one person is interested in an old plugin, we cannot take a lot of time on updating it. . This being said, because SOFA is an open-source project, you can contribute by updating it yourself and the making pul-requests to give you fix to the community ! Or wait that more people gain interest in the same plugin as yourself so that it becomes a priority for us. . I am sorry if this answer is not very helpful, and I wished I could help you more. If you encounter any big issue while trying to update it, you can come and seek help, we will help you in such journey.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4934#issuecomment-2311981772:20,update,update,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4934#issuecomment-2311981772,2,['update'],['update']
Deployability,Hi; i use plugin manager in release and debug mode without any problem,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/713#issuecomment-494716530:28,release,release,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/713#issuecomment-494716530,1,['release'],['release']
Deployability,"Historically Setting a CubeTopology with nx, ny, nz was creating the topology elements but not the positions vectors. This has been changed in commit: https://github.com/sofa-framework/sofa/commit/47ef2e63a80cda787fd4c61c04580e22ecd56e2e. Need to check code if it was a bug or if the component needs to be used in another way. ```; void CubeTopology::updatePoints(); {; SeqPoints& points = *seqPoints.beginEdit();; points.resize(nbPoints) ;; for(int i;i<nbPoints;i++); {; points[i] = getPoint(i);; }; seqPoints.endEdit();; }; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/574:351,update,updatePoints,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/574,1,['update'],['updatePoints']
Deployability,"Hi， i use the lastest SOFA v23.12.01.exe installed sofa framework in Windows,and it runs properly. but how can I add new feature(like tearing) to this build?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4632:41,install,installed,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4632,1,['install'],['installed']
Deployability,"Hmm I don't know the specifics, but usually config files used to initialise paths exist in two versions, one for the build tree, and one for the install tree. ; - On the build tree you can do pretty much what you want and use absolute paths.; - Only the install tree requires relative paths, so that it is portable. So technically if you use configuration files for the lookup of the directories where the resources are located, it can be dealt by ; - having a config file for the build tree which points to the absolute location of these ressources, ; - for the install tree two options; - no config file required provided you make sure the the install takes place in the expected relative paths location; - another config file generated with relative paths from the install binary dir to the installed resources directory",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561#issuecomment-358252038:145,install,install,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561#issuecomment-358252038,7,"['configurat', 'install']","['configuration', 'install', 'installed']"
Deployability,"Hmmmm, it's a bit hard debugging that remotely.; Personally, I would try; - looking through the system to see if there are multiple installs of cmake, and get rid of them all.; - install cmake fresh with your desired version.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761329065:132,install,installs,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1761329065,2,['install'],"['install', 'installs']"
Deployability,"Homogeneize the API for update.; A layer is added to avoid a direct access to the DataTracjer which is now private:; - in DataTrackerDDGNode: trackInputData, hasInputDataChanged, haveInputsDataChanged, cleanInputTracker; - in BaseObject: trackData, hasDataChanged. The name of the update function is:; - `doUpdate()` for Engines; - `doInternalUpdate()` for components inheriting from BaseObject. Update engines, and tests accordingly. Rename UpdateInternal(DataVisitor) into InternalUpdate(DataVisitor). Remove the DataTrackerFunctor and its test. TODO: update constantFF with new API. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1163:24,update,update,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1163,5,"['Update', 'update']","['Update', 'UpdateInternal', 'update']"
Deployability,How to update your code in plugin to match the post 20.12 version of sofa,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1757:7,update,update,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1757,1,['update'],['update']
Deployability,"Hum, you would be better to have a look at VisualModelImpl, which is the real location managing the data, especially updateVisual().",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1423#issuecomment-644619454:117,update,updateVisual,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1423#issuecomment-644619454,1,['update'],['updateVisual']
Deployability,"Hum... After thinking it through a little longer, I realize that this PR is absolutely non-functional in practice. When deploying the ""installed"" config.h, the preprocessor macro is indeed replaced with the correct path in the config.h file, but, the preprocessor / compiler is not ran again for the deployment step, of course.. which means that in the binaries, SHARE_DIR is still equal to the build step value. Hence the use of a .ini file... So I'm closing this dumb PR...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/651#issuecomment-387054680:120,deploy,deploying,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/651#issuecomment-387054680,3,"['deploy', 'install']","['deploying', 'deployment', 'installed']"
Deployability,I Updated the change to take into account's guillaume comments,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1727#issuecomment-768216185:2,Update,Updated,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1727#issuecomment-768216185,1,['Update'],['Updated']
Deployability,"I added here a second version based on having a single PythonEnvironment in the scene. . This component have in charge the cleaning of python environment when the scene is about to be destroyed. . Conceptually it is quite ok, the drawback is that to be installled in the scene it have to check it does not yet existing using the getNodeObject function which is a non-constant time one. ; So compared to the 'reinit' based approach it have overhead.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/198#issuecomment-286415062:253,install,installled,253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/198#issuecomment-286415062,1,['install'],['installled']
Deployability,I agree with Hugo this make sense to be able to control if the update happens or not. . So I finally fixed the doUpdate behavior. If you want to have a look at this happens in commit: ; https://github.com/sofa-framework/sofa/commit/111e21cc23a76c7d3c0844ce7b64aa81e381d614,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258116723:63,update,update,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258116723,1,['update'],['update']
Deployability,"I agree with this idea. ; The only drawback is that all current `setRequired(true)` would require an update... To sum up, if I get it right:. - `isRequired()` should be true by default; - `hasDefaultValue()` should be true by default as well; - `setRequired(false)` should also change things so that `hasDefaultValue()` returns false; - current `setRequired(true)` should be replaced by `setHasDefaultValue(false)` or something like that...; - in BaseObject::init() print a warning/error message `if (!data->hasDefaultValue() && !data->isSet())`; - finally update the GUI to handle `hasDefaultValue()` and display an empty field if it returns false; ; Is that all, and what you had in mind?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767081198:101,update,update,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767081198,2,['update'],['update']
Deployability,I agree with you but to avoid calendar issues I would speak rather in term of release: Two releases for the transition and remove at the third one.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328523818:78,release,release,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328523818,2,['release'],"['release', 'releases']"
Deployability,"I all,. I have improved the whole mecanism so now it is off by default and we can activate it selectively (progressively) ; per component during their registration in the factory. I also added a mecanism to handle in a smooth way the deprecation of aliases as well as a update the SceneCheckUsingAlias checker. . I don't see a lot of drawback for all this work, while I see a lot of benefits, so feedback welcome.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-981677782:270,update,update,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-981677782,1,['update'],['update']
Deployability,"I also believe the find package integration is not part of cmake 3.22 for the fetch mechanism (so you can use the `FIND_PACKAGE_ARGS` option in `FetchContent_Declare`). Just trying to build the minimal example on this topic on [CMake documentation]( https://cmake.org/cmake/help/latest/module/FetchContent.html#integrating-with-find-package) will not succeed with 3.22 but won't with 3.24. With 3.22, you have no integration of this and you have to call explicitly the `find_package` manually before the fetch (as we do so far in SOFA), but this leads to the problem was citing Paul (dependence not available for all targets). Starting with 3.24, using this option solves the problem (and no need for the `find_package` call before the fetch anymore).; But I understand that we should stick to v3.22 as it is part of ubuntu22.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4586#issuecomment-2004426365:32,integrat,integration,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586#issuecomment-2004426365,3,['integrat'],"['integrating-with-find-package', 'integration']"
Deployability,"I am closing the issue for now @bcarrez . If you still encounter the issue with an updated macOS, feel free to re-open.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2028#issuecomment-834200565:83,update,updated,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028#issuecomment-834200565,1,['update'],['updated']
Deployability,"I am curious how the update of the ""original"" positions while simulating, is behaving with a barycentric mapping (which has to compute its bary coefficients from the starting position) ? 🤔",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1119316615:21,update,update,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1119316615,1,['update'],['update']
Deployability,"I am not sure it is necessary to integrate the logger. It makes the code more complex, and IMO nobody will use it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575:33,integrat,integrate,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575,1,['integrat'],['integrate']
Deployability,I am ready to rebase your branch on issofa_constraintsolving (updated with master). Are you OK for me to force push?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-337896696:62,update,updated,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-337896696,1,['update'],['updated']
Deployability,I am unable to follow the pendulum tutorial at step 4 because it is not possible to edit position Vector 1/2 from the GUI. Expected outcome: . Left click and typing of the number 2 in the X cell of the second position vector will update the X cell value from 1 to 2:. Actual outcome: It is not possible to edit any vector components in the GUI. Steps to reproduce: ; 1 load examples/Tutorials/StepByStep/Pendulum/3_Pendulum.scn in the modeler application of v17.12 build. ; 2 Double click on MechanicalObject Particles. Selcet Vector 1/2 tab of the GUI. ; 3 Left click and type the number 2 in the X cell of the second position vector will update the X cell value from 0 to 1:. Below is the dialog box that should be visible when trying to edit the vector component.; ![mechanicalobj scn](https://user-images.githubusercontent.com/20428997/41324725-19c31702-6e6b-11e8-98ca-268a77abe061.png). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/686:230,update,update,230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/686,2,['update'],['update']
Deployability,"I am using a Visual(Ogl)Model to display a decorative mesh (ie not a simulated object); The geometry is loaded using a MeshLoader. If I change some transformation value in the MeshLoader, and update/reinit this component, I get:; - positions in mesh loader updated; - VisualModel linked positions updated; - the 3d display NOT updated; - even if I reinit the VisualModel the display is still not updated; - even if I step the display is still not updated. I would expect that a VisualModel reinit would do the trick. If I add a MechanicalObject node + bottom level with IdentityMapping+VisualModel, then when I step I have the VisualModel and display updated - this is what I expect in that case (and this is currently my workaround) - What the mapping is doing to make the VisualModel really updates ?. I attach a simple demo .scn that show the issue (well looks like .scn cannot be attached) :. <Node name=""Root"" >; <MeshObjLoader name=""loader"" filename=""mesh/floor3.obj"" />; <MechanicalObject name=""dofs"" src=""@loader"" />; <Node name=""simple"">; <VisualModel name=""visual"" src=""@../loader"" color=""red"" />; </Node>; <Node name=""mapping"">; <VisualModel name=""visual"" src=""@../loader"" color=""blue"" />; <IdentityMapping name=""mapping"" />; </Node>; </Node>. If you think this is not a bug, feel free to change the label of this issue",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/152:192,update,update,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/152,8,['update'],"['update', 'updated', 'updates']"
Deployability,"I assume that you use MeshMatrixMass. In MeshMatrixMass, the mass integration is distributed on vertices and edges. In a hexahedron, some vertices are not connected by edges. Therefore, this type of interaction is not taken into account in the mass matrix. And that is why, you see a lot more zeros in the matrix in SOFA. I guess you will have more accurate results with tetrahedra, where this situation does not happen.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4954#issuecomment-2324019674:66,integrat,integration,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4954#issuecomment-2324019674,1,['integrat'],['integration']
Deployability,"I believe it's a hack that is probably no longer required. It was forcing an update at each step, probably from an ancien time when this code was not an Engine or when Engines were not implemented correctly. Now the Engine is automatically updated when someone read its output and any input changed so that this flag should no longer make any difference.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-257963158:77,update,update,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-257963158,2,['update'],"['update', 'updated']"
Deployability,"I build sofa21.12 on Windows10, ; the complete cmake output is as follows. Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19043.; CMake Warning (dev) at D:/Program Files/CMake/share/cmake-3.22/Modules/CMakeDependentOption.cmake:84 (message):; Policy CMP0127 is not set: cmake_dependent_option() supports full Condition; Syntax. Run ""cmake --help-policy CMP0127"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; CMakeLists.txt:45 (cmake_dependent_option); This warning is for project developers. Use -Wno-dev to suppress it. -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: J:/GitHub/sofa/build/install; CMake Deprecation Warning at SofaKernel/modules/Sofa.Config/CMakeLists.txt:74 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). CMake Error at extlibs/CMakeLists.txt:28 (set_target_properties):; set_target_properties Can not find target to add properties to: tinyxml. CMake Error at extlibs/CMakeLists.txt:29 (set_target_properties):; set_target_properties Can not find target to add properties to: tinyxml. Using legacy headers is enabled.; Headers from v20.12 are usable, but it is advised to change your code to use the new headers introduced in v21.06.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") ; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: filesystem thread chrono atomic ; Adding module Sofa.GL; Adding plugin SofaSimpleFem; Adding plugin SofaRigid; Adding plugin SofaDeformable; Adding plugin SofaObjectInteraction; Adding plugin SofaMeshCollision; Adding plugin SofaEngine; Adding plugin SofaExplicitOdeSolver; Adding plugin SofaImplicitOdeSolver; Adding plugin SofaLoader; Adding plugin SofaGeneralVisual; Adding plugin SofaGraphComponent; Adding plugin SofaGeneralMeshCollision; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:716,Install,Install,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,2,"['Install', 'install']","['Install', 'install']"
Deployability,I built Sofa with the registration plugin successfully. When I had a test with ICPRegistration_ShapeMatching.scn in .\applications\plugins\Registration\examples. It reminded these errors:. [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/image/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/Registration/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/SofaPython/python’ to sys.path; [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/SofaPython.dll. [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/Registration.dll; [ERROR] [RequiredPlugin] Plugin not found: “SofaMiscForceFieldDev”; [ERROR] [DAGNode “source”] Object type “RotationFinder” creation Failed; [ERROR] [DAGNode “source”] Object type “ShapeMatchingForceField” creation Failed; [ERROR] [SceneLoaderXML] Node initialization failed. I didn’t find any information about this SofaMiscForceFieldDev plugin. Can anyone give me some tips about that?. Thanks in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307:602,Release,Release,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307,2,['Release'],['Release']
Deployability,"I built sofa v16.08 on CentOS 7 using GCC 4.8.5 with the default cmake options. The build completes successfully. However, when I execute runSofa it terminates due to a segfault. This happens with both debug and release builds. Here's the stack trace after running in debugger:. ```; #0 0x00007ffff7b32133 in sofa::simulation::graph::DAGNode::detachFromGraph (this=0x18a1190) at /media/nvme4/sofa/v16.08/SofaKernel/modules/SofaSimulationGraph/DAGNode.cpp:128; #1 0x00007ffff687257e in sofa::gui::PickHandler::init (this=0xaec5f0, root=0xbe9b40) at /media/nvme4/sofa/v16.08/applications/sofa/gui/PickHandler.cpp:164; #2 0x00007ffff686336e in sofa::gui::BaseViewer::load (this=0x97f178) at /media/nvme4/sofa/v16.08/applications/sofa/gui/BaseViewer.cpp:283; #3 0x00007ffff71c9d61 in sofa::gui::qt::RealGUI::setScene (this=0x8b5ab0, root=..., filename=0x78cbb8 ""/media/nvme4/sofa/v16.08/examples/Demos/caduceus.scn"", temporaryFile=false); at /media/nvme4/sofa/v16.08/applications/sofa/gui/qt/RealGUI.cpp:883; #4 0x00007ffff687b1af in sofa::gui::GUIManager::SetScene (groot=..., filename=0x78cbb8 ""/media/nvme4/sofa/v16.08/examples/Demos/caduceus.scn"", temporaryFile=false) at /media/nvme4/sofa/v16.08/applications/sofa/gui/GUIManager.cpp:298; #5 0x000000000040ef7b in main (argc=1, argv=0x7fffffffa798) at /media/nvme4/sofa/v16.08/applications/projects/runSofa/Main.cpp:374; ```. I tried running some of the tutorial applications as well and it looks like the segfault occurs anytime the sofa simulation gets initialized with a ```DAGSimulation```. e.g. the ```chainHybrid``` tutorial application starts successfully (it uses a ```TreeSimulation```) while one ```oneParticle``` exhibits the segfault. Here's the backtrace from running ```oneParticle```:. ```; #0 0x00007ffff7b3b4d4 in sofa::core::objectmodel::LinkTraitsValueType<sofa::simulation::graph::DAGNode, sofa::simulation::graph::DAGNode*, false, true>::T::operator-> (this=0x8); at /media/nvme4/sofa/v16.08/SofaKernel/framework/sofa/core/../../s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/127:212,release,release,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/127,1,['release'],['release']
Deployability,"I can see two errors:; - one is that it seems you switched on SOFA_FETCH_PYTHON, which was the plugin related to python2 and which is not supported anymore -> just switch `SOFA_FETCH_PYTHON` off, and disable `PLUGIN_SOFAPYTHON` if it is present; - `Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS` it seems you did not install the package developement for python3 ; did your execute `sudo apt-get install python3-dev` (or `sudo apt-get install python3.8-dev`) ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612:340,install,install,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489531612,3,['install'],['install']
Deployability,"I chose the library https://github.com/yhirose/cpp-httplib because it allows also to create a server (but not used in this PR). In any case, whatever the library we choose, we must use openSSL (we request a https). This is the main concern about this PR. In terms of installation, I think Ubuntu and macOS are straightforward because there are packages. But Windows is bit more tricky. The pre-built binaries are not available on the openSSL website. I found them here: https://slproweb.com/products/Win32OpenSSL.html. After installation, I had to define `OPENSSL_ROOT_DIR`, and add the `bin` folder to my path. In this PR, the newly introduced module is linked only in Sofa.GUI.Qt and the version checker is called at init (for test). A later contribution will use the introduced function to show the latest version in the GUI. Output example:; ```; [INFO] [VersionChecker] You are using the latest version (24.06.99). {272.525 ms}; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4702:267,install,installation,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4702,2,['install'],['installation']
Deployability,"I cleaned the VisualModelOBJExporter alias, using the SOFA_DEPRECATED_ATTRIBUTE macro.; Doing that, I also updated the status of SOFAEXPORTER_NAMESPACE deprecation (from deprecated to disabled).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-982892045:107,update,updated,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-982892045,1,['update'],['updated']
Deployability,I confirm the configuration is way faster. Still too slow on Windows though. Thanks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277302677:14,configurat,configuration,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277302677,1,['configurat'],['configuration']
Deployability,"I consider the fetch mechanism within the Sofa subdirectories as a flawned design that is causing more troubles than it solved. And it is the n°1 cause of ""Can you help me, I updated SOFA from master it does not compile anymore "" at DEFROST (eg: https://github.com/sofa-framework/sofa/issues/4343). . This fetch mechanism is simplifing the initial ""fetch"" of the plugins but it complexify a lot every subsequent updates for each of them. . So to me, the fetches should be done outside the sofa directory structures (or not be used at all).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4409#issuecomment-1870264380:175,update,updated,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409#issuecomment-1870264380,2,['update'],"['updated', 'updates']"
Deployability,I did like for QtChart. As it is not a module installed by default in Qt. ; Otherwise be sure to tell user to install that module when installing Qt.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1315#issuecomment-608321347:46,install,installed,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1315#issuecomment-608321347,3,['install'],"['install', 'installed', 'installing']"
Deployability,I do not get why the regression on the scene [EulerExplicitSolver.scn](https://github.com/sofa-framework/sofa/pull/3928/files#diff-9816efcdf2c6953cfaef9ddaf0ed1ad8614a6527e33b2989ffa0ed956a3ffaa2) .. ever worked. It seems to diverge on both my current SOFA master and the SOFA release v24.06,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2370314650:277,release,release,277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928#issuecomment-2370314650,1,['release'],['release']
Deployability,"I don't agree, the correct way to have BoxROI not update itself, like any other engine, is to link it to inputs that are not changing, i.e. rest_position instead of position. Otherwise this will break updates after topological changes for instance...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258117944:50,update,update,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258117944,2,['update'],"['update', 'updates']"
Deployability,"I don't think the current behaviour is wrong. The order of event in the animationloop is:; ```; 1. AnimateBeginEvent; 2. SetTime(StartTime + dt); 3. AnimateEndEvent; ```. The `WriteState` component uses `AnimateBeginEvent`, so in that case, as @hugtalbot said, you should set the proper periodicity as an argument. This hardcoded fix will break the periodicity of everyone who set their `WriteState` relative to the `AnimateBeginEvent` (at the very beginning of the animation loop, before the time is updated).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/625#issuecomment-380028607:501,update,updated,501,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/625#issuecomment-380028607,1,['update'],['updated']
Deployability,"I don't think,. Graying out things, and more generally having them grouped in logical block, (as in http://doc.qt.io/qt-5/qtwidgets-widgets-groupbox-example.html) allow the user to very easily quickly understand the underlying logic that connect the fields. In addition graying things out is part of the user interface which, if well done should be separated as much as possible from your the functional logic of the component. Consequently I'm not sure that refactoring the internal logic of a component to please the GUI level is the way to go. . The difficulty with Sofa is that the components's data field (BaseObject) coherency checking is done by the component during init/reinit and the logic behind can be really complex (i.e. not just exclusive relation). We don't want to duplicate this logic at the GUI level. So...now I wonder if one solution could be to just set the ReadOnly flag in the Data during the init/reinit as well as when data changes and refresh the widget panel each time we are changing something. . This would result in the following processing: ; GUI -> Data(enableShadow) -> reinit()/update() -> change other data to be readOnly -> GUI redisplay",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/235#issuecomment-378953698:1113,update,update,1113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/235#issuecomment-378953698,1,['update'],['update']
Deployability,I don't understand this conflict because I have no conflict on my machine even when I took an update. I resolved then the conflict on github interface. Thanks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/288#issuecomment-323303622:94,update,update,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/288#issuecomment-323303622,1,['update'],['update']
Deployability,"I encountered a little issue during the compilation of SOFA using Visual Studio 2017. The configuration of SofaHelper's project, generated by CMake, seems incorrect. Indeed, during the linkage step, instead of looking for **libpng16.lib** (or libpng16d.lib) in **src/lib/win64/** (or /src/lib/win32), it searches **libpng.lib** (or libpngd.lib) in **build/SofaKernel/SofaFramework/SofaHelper**. At the moment, the workaround is to copy-paste and rename the concerned libraries, or manually edit the SofaHelper's project configuration inside Visual Studio to fix the path.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/443:90,configurat,configuration,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/443,2,['configurat'],['configuration']
Deployability,"I encountered a problem which I think is related: on my setup (Windows, debug) runSofa_d.exe crashes because it expects to find zlibd.dll, and only finds zlib.dll in build/bin/Debug. I manually copied zlibd.dll to try a quick fix, but then CImgPlugin could not load. Going to see it's dependencies, it seems to link with the non debug version zlib (which I had replaced), instead of zlibd, in the same way as it does for libpng16.; Trying to investigate, I found in the CImgPlugin CMakeLists.txt two lines (74-75) which could explain this :; ```; # Always link dependency targets in Release to avoid a Zlib debug/release mix.; # Because tiff needs zlib and tiff is only in Release in WinDepPack.; sofa_set_targets_release_only(${DEP_TARGETS}); target_link_libraries(${PROJECT_NAME} PUBLIC ${DEP_TARGETS}); ```; If someone can check, I'm not entirely sure it is the same issue though",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1851#issuecomment-790656198:583,Release,Release,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1851#issuecomment-790656198,3,"['Release', 'release']","['Release', 'release']"
Deployability,"I found the problem: the binaries shipped with the dependencies packages are compiled with a version of VS which is not 2013 or 2015. ; And if you dont use the same CRT version between fopen/fread/.... , libpng will crash.; http://stackoverflow.com/questions/29208826/libpng-1-616-crashing-on-png-read-png-in-vs2012-c :. > ; > You are passing a (FILE*) to libpng, probably using png_init_io. Visual Studio crashes inside fread when it tries to access the underlying FILE structure.; > ; > This is because you created the FILE* using fopen from one Visual Studio runtime but libpng is linked against a different Visual Studio runtime (msvcrt or something like that); the two runtimes are incompatible. And it is currently wokring with the present ImagePNG because this class set its own read function() to libpng using ; `png_set_read_fn(PNG_reader, file, png_my_read_data);`; But CImg does not.; The solution is to built new version of the binaries for each supported Visual Studio version (2013 and 2015 in our case). Moreover, we need to ship as well the debug version of those libraries, as libpng is incompatible between release and debug configurations (e.g you compile Sofa in debug and load it with libpng.dll, it will crash if you use libpng ; and vice-versa)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-286420546:1125,release,release,1125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-286420546,2,"['configurat', 'release']","['configurations', 'release']"
Deployability,"I got the problem with Windows (no Eigen3Config.cmake) with a custom out-of-tree plugin.; The problem is that this file is ""unconfigured"" (Eigen3Config.cmake.in) while extracting the Eigen archive directly.; You need a pass of Cmake/""compilation""/install to have a full directory with a configured Eigen3Config.cmake.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-619366757:247,install,install,247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-619366757,1,['install'],['install']
Deployability,I guess this is just because the first fetchable plugins' configuration file started with `3.11` and with the game of copy-paste....,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4886#issuecomment-2270108490:58,configurat,configuration,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4886#issuecomment-2270108490,1,['configurat'],['configuration']
Deployability,"I have an implementation suggestion, but it depends on the update callback mechanism (that we haven't yet merged into SOFA:; - We could plug in callbacks in the sofa::simulation::Node methods to guarantee that all bboxes in child nodes and child objects are connected to the bounding box field of their parent nodes; - We could use isPersistent() instead of isSet() to check for user input override (because isSet() doesn't tell you whether the user wrote down a value or not, but just whether or not the datafield has been modified. ANY call to beginEdit() basically sets the isSet flag to true... ); - We could leave the updateBoundingBoxVisitor as-is (except for swapping the isSet check for a isPersistent). Here would be the code:. ```cpp; // Bounding box update system proposal based on the updateCallback trackerEngines API:; // Making use of the persistent flag, if the bbox is given at component's creation (through an addObject call for instance, or manually edited through runSofa2), the bbox won't recalculate. DAGNode::doRemoveChild(BaseNode* c); {; [...];; removeUpdateCallback(""bbox_"" + c->getName());; }. DAGNode::doAddChild(BaseNode* c); {; [...];; addUpdateCallback(""bbox_"" + c->getName(), {&(c->f_bbox)}, [this]() {; sofa::defaulttype::BoundingBox* bbox = f_bbox.beginEdit();; if (!f_bbox.isPersistent()); 	bbox->invalidate();; for (auto child : this->child); 	bbox->include(child->f_bbox.getValue());; for (auto object : this->object); 	bbox->include(object->f_bbox.getValue());; f_bbox.endEdit();; return sofa::core::objectmodel::ComponentState::Valid;; }, {&(f_bbox)});; }. DAGNode::doRemoveObject(BaseObject* o); {; [...];; removeUpdateCallback(""bbox_"" + o->getName());; }. DAGNode::doAddObject(BaseObject* o); {; [...];; addUpdateCallback(""bbox_"" + o->getName(), {&(o->f_bbox)}, [this]() {; sofa::defaulttype::BoundingBox* bbox = f_bbox.beginEdit();; if (!f_bbox.isPersistent()); 	bbox->invalidate();; for (auto child : this->child); 	bbox->include(child->f_bbox.getValue());; ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-621885183:59,update,update,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-621885183,4,['update'],"['update', 'updateBoundingBoxVisitor', 'updateCallback']"
Deployability,"I have compiled and installed SOFA master branch with the CGAL plugin. In the compilation folder, under lib, I have libCGALPlugin.so, and if I do ldd libCGALPlugin.so, it founds all the dependencies. However, if I install SOFA, (`cmake --build . --target install`), libCGALPlugin.so is moved to a plugins folders, under `<install>/plugins/CGALPlugin/lib`, and ldd now shows that libCGALPlugin.so can't find all the dependencies. . Ive search a bit and apparently, the rpath is set to `$ORIGIN/../lib`, which is okay when the library is directly in the `<builddir>/lib` folder, but fails if the library is in `<installdir>/plugins/CGALPlugin/lib/`. . Due to this, its not possible to load the plugin. . This happens not only with with plugins, but for example also with `libSofaComponentAll.so`. It tries to load `libSofaOpenglVisual.so`. In the <builddir> works fine because both are under `<builddir>/lib`, but when installed, `libSofaOpenglVisual.so` is moved to `<installdir>/lib/SofaOpenglVisual/lib`, where `libSofaComponentAll.so` is not searching.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1560:20,install,installed,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1560,7,['install'],"['install', 'installdir', 'installed']"
Deployability,"I have created a pull request with an initial working solution to this problem. I have updated the references to the unknown library _std::filesystem_ and rewrite them as namespace _fs_. Additionally, I have include the old headers for this library from its experimental version at **gcc-8**, so there is a possibility to use the correct ones depending on the compiler version it is used. I have created a pull request [#3994](https://github.com/sofa-framework/sofa/pull/3944).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3943#issuecomment-1587255019:87,update,updated,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3943#issuecomment-1587255019,1,['update'],['updated']
Deployability,I have faced this issue as I'm using the install of sofaPhysicsAPI. I will give a look,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/114#issuecomment-272140198:41,install,install,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/114#issuecomment-272140198,1,['install'],['install']
Deployability,"I have identified the actual issue in ```$sofa_dir/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - line 124 has a few mentions of ```/${PROJECT_NAME}``` too much, removing these at least reduces the header install path to ```$sofa_dir/build/install/include/extlibs/QGLViewer/QGLViewer/*.h```; - for some reason the ```MOC_HEADER_FILES``` (line 21 ff.) are not considered for copying by your ```sofa_create_package_with_targets``` macro. For testing I have simply copied the headers listed in ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES```. This does not affect the build and finally copies the previously missing MOC headers to the install include directory. I can make a pull request for this. Or I can wait a bit if someone has an idea on how to properly copy/install the MOC_HEADERS without the redundant mentioning in both header lists.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674:215,install,install,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674,4,['install'],['install']
Deployability,"I have installed via the souce code method of SOFA; All the build and compile process has successed but I can not open the runsofa test binary file successfully.; It always says that: the runsofa can not find its entry to link to the libpng16.dll ; ![image](https://user-images.githubusercontent.com/27597690/81058246-e78ea780-8e82-11ea-8cfc-2d698a2637dd.png); That is very weird because I don't know how is this .exe related to my anaconda 3 which include a python 3.7 (I have python 2.7 installed and my sofapython is built successfully). And then I find that the ""sofa-windows-dependency-pack"" include this .dll file so I replace it in the anaconda directory and it can find its entry but gives me another error like this:; ![image](https://user-images.githubusercontent.com/27597690/81058659-ba8ec480-8e83-11ea-8069-504741e99e43.png); I really don't know why sofa go to my anaconda directory to find that .dll and I don't know where I was wrong, I use vs2019 to generate the runsofa binary successfully. Hope to be reply!. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1364:7,install,installed,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1364,2,['install'],['installed']
Deployability,"I have no idea...is this the current master or the pre-build ? ; Since last release there was some change on RequiredPlugin (issofa_, ...). Anyhow thanks for reporting....we will investigate.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/558#issuecomment-356391607:76,release,release,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/558#issuecomment-356391607,1,['release'],['release']
Deployability,"I have this code. ```; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; mo->resize(10);; auto restPositions = mo->readRestPositions();; auto positions = mo->readPositions();; auto velocities = mo->readVelocities();; auto forces = mo->readForces();. EXPECT_EQ(restPositions.size(), 10);; EXPECT_EQ(positions.size(), 10);; EXPECT_EQ(velocities.size(), 10);; EXPECT_EQ(forces.size(), 10);; ```; being `VNCS::Sim2D::MO` just an alias for `MechanicalObject<Vec2>`. This 4 checks work fine, but when I try this. ```; // Check we can actually write in the vectors; auto writerRestPositions = mo->writeRestPositions();; EXPECT_EQ(writerRestPositions.size(), 10);; ```; it fails. . ```; Expected equality of these values:; writerRestPositions.size(); Which is: 0; 10; ```; the state vector size is not changed. What is the proper way to update the size of the state vectors?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1762:839,update,update,839,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1762,1,['update'],['update']
Deployability,I integrated most of your changes @fredroy but changes in Data field of OmniDriver and others is really bigger work. I would like to keep the PR simple and do this in another PR later,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1019#issuecomment-487891721:2,integrat,integrated,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1019#issuecomment-487891721,1,['integrat'],['integrated']
Deployability,"I integrated the Tracy profiler (https://github.com/wolfpld/tracy). It adds a ton of new feature to our internal profiler. In particular, I like:; - Multithreaded timeline; - Statistics; - Messages; - Memory management (need more work, I could not test it); - See context switching; - Mutex profiling (not tested yet). I tried not to be invasive, but it will require a change on the way we define timers such as in https://github.com/sofa-framework/sofa/compare/master...alxbilger:sofa:scoped_timer (the demo runs with this branch). TODO: a dedicated MessageHandler. ![peek (1)](https://github.com/sofa-framework/sofa/assets/10572752/17714b7d-337e-43b2-9701-3ae20dd5f262). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4182:2,integrat,integrated,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4182,1,['integrat'],['integrated']
Deployability,I just hadn't updated my workspace. but now that it's done I no longer have these warnings so it's fine,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1231329334:14,update,updated,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3232#issuecomment-1231329334,1,['update'],['updated']
Deployability,I just integrated your changes @epernod,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1522#issuecomment-712304971:7,integrat,integrated,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1522#issuecomment-712304971,1,['integrat'],['integrated']
Deployability,I just merged #1052. Now you can update Regression_test commit anytime in applications/projects/Regression/ExternalProjectConfig.cmake.in :wink:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1061#issuecomment-496159792:33,update,update,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1061#issuecomment-496159792,1,['update'],['update']
Deployability,"I just replaced the nasty `add_definitions( ""-DFFMPEG_EXEC_FILE=\""${FFMPEG_EXEC_FILE}\"""" )` by a dynamic `.ini` file. ; Could you update your review @fredroy ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540442502:130,update,update,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540442502,1,['update'],['update']
Deployability,"I just tested this on SP3/Windows out-of-tree, and it works. Not sure why the Windows CI post-job failed, but it looks unrelated to this PR. I will merge this now since we need it quickly for the release.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1708#issuecomment-759584141:196,release,release,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1708#issuecomment-759584141,1,['release'],['release']
Deployability,I just updated the title of this issue,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/996#issuecomment-486112953:7,update,updated,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/996#issuecomment-486112953,1,['update'],['updated']
Deployability,"I just updated this PR. To be reviewed again.; @courtecuisse if you are not willing to read/acknowledge the work done by reviewers, then I will take the decisions and potentially (surely?) mess your work.; Cheers :v:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1549#issuecomment-882671884:7,update,updated,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1549#issuecomment-882671884,1,['update'],['updated']
Deployability,I mean the runSofa.exe( i'm using windows right now) binary placed in the ../sofa/build/bin/Release directory,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1784883754:92,Release,Release,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1784883754,1,['Release'],['Release']
Deployability,"I ment using assimp to avoid redondency. Of course we need to keep the formats not supported by assimp! ; I do not understand exactly the package dependency problem, cmake can try to find the package if not dowload / compile / install it ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369909286:227,install,install,227,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369909286,1,['install'],['install']
Deployability,"I noticed that installed headers for SofaBaseMechanics aren't where they're supposed to be because the header's directory structure is not properly respected in SOFA's sofa_install_targets macro. This commit fixes the issue for the specific case of SofaBaseMechanics/BarycentricMappers/*.{h,inl} but doesn't offer a definitive fix. Additionally, it duplicates headers in SofaBaseMechanics/ since the sofa_install_targets is still in use. A definitive solution would be to embed the fix in the sofa_install_targets macro, but I wanted your input first. @damienmarchal @guparan ; . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/887:15,install,installed,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/887,1,['install'],['installed']
Deployability,"I once noticed that the Geomagic examples had been changed since 18.06, where the position data link had been removed to follow change in the constraint resolution API.; However, it would cause a delay, as we can see at my [post](https://www.sofa-framework.org/community/forum/topic/problem-about-geomagic-plugin-in-v18-12/); I think this issue stems from the update of handling linearised constraints in v18.06.; Now, sofa has been updated to v19.06 but this problem still has not been solved yet.; Can anyone notice about this problem?; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1148:360,update,update,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1148,2,['update'],"['update', 'updated']"
Deployability,"I quickly looked at SubsetTopology.inl and at first sight I wonder if there is interaction between the ; data.setParent() and the update() function. . Before the PR it is:; mydata.setParent(), addInput(mydata), then mark all dirty. . Now it is:; addInput(mydata), mydata.setParent(). It is unclear to me but I think that if something try to access one of the output data of the engine then the update function is called; with a partially valid input data.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2825#issuecomment-1088788811:130,update,update,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2825#issuecomment-1088788811,2,['update'],['update']
Deployability,I really suggest to really start deprecating all the hard coded transformation code in component for release 22.06 for complete removal in 22.12 or 23.06 :). This is relatively trivial to do it just requires an explicit deprecation workflow and a planning for that.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/259#issuecomment-1117086905:101,release,release,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/259#issuecomment-1117086905,1,['release'],['release']
Deployability,"I recently had a small problem when a plugin was implicitly loading SofaConstraint from the SOFA's installation because its compilation was depending on it, but runSofa was launched from the build directory, hence loading SofaConstraint two times (one from the build directory, and one from the installation directory). This resulted in these output from the object manager:. ```; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Default template for class SlidingConstraint already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class a",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:99,install,installation,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,2,['install'],['installation']
Deployability,"I removed some tests from the Data_test.cpp file and created a new files for these tests and i updated the Cmakelists.txt; __________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2573:95,update,updated,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2573,1,['update'],['updated']
Deployability,I see that @jnbrunet updated the PR..so is this PR still in WIP because it would be nice to have it merged for Sofa release 19.06.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990#issuecomment-502017027:21,update,updated,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990#issuecomment-502017027,2,"['release', 'update']","['release', 'updated']"
Deployability,"I see the benefit of having generic msg_xyz_when(cond) message, maybe they should be more general and not tied to a ""this"" pointer, like msg_xyz_when(sender, cond). In the component itself, I would rather see; component_msg_info() if (printLog) msg_info(this); with ""printLog"" data name updated; I also think ""warning"" and above (error...) levels should not depend on a flag; And last, I would call that flag ""msgInfoVerbose"" to better match what is a boolean flag name. here my 2 cents ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278334017:287,update,updated,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-278334017,1,['update'],['updated']
Deployability,"I see what you want to do and of course it would be much more faster and simpler to add a new feature.; But I'm very relunctant to add an extra flag if it is redundant with others. . I would prefer to see a solution based on refactoring isRequired(), possibly with an hasDefaultValue() so we come up with a consistant and clear behavior. . EDIT:; My current thinking is thus:; - set isRequired() to true by default; - add an hasDefaultValue() (possibly implemented by using std::optional<> around Data::defaultvalue)); - change the code in BaseObject::init(); ```cpp; for(auto data: this->m_vecData); {; if (data->isRequired() && !data->isSet()); {; msg_error() << ""Required data \"""" << data->getName() << ""\"" has not been set. (Current value is "" << data->getValueString() << "")"" ;; }; }; ```; So it only warn if required and there is no default value. ; Update the GUI's so it can handle the isRequired + hasDefaultValue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762259707:856,Update,Update,856,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762259707,1,['Update'],['Update']
Deployability,"I see. :) What do you guys think about a CMake option for explicitly allowing to include non-LGPL parts in the SOFA build (default ON to stay compatible, and maybe even tag it as advanced option)? The idea is that if this switch is off, all the non-LGPL parts (or non-compatible parts) like the applications and a few plugins don't even show up for configuration anymore (technically the add_directory() call into these directories is never made in that case). Currently I have to bundle our own SOFA tarball for the purpose of getting rid of the non-LGPL parts and patch the build system a little bit to, in a nutshell, accept that parts are missing. I can continue to do so, but I'm also interested in contributing something like that. I imagine to follow the license rule mentioned in the top-level readme file: Exclude a few directories in principle and dynamically lookup the plugins if they are LGPL or not. This way, plugin developers wouldn't need to add a list entry somewhere depending on the license. They would just need to follow a convention in order to make the license determinable by the script. Could be as simple as a LICENSE.txt file or even the implementation of the getModuleLicense() function, which should be easy to parse (and is only missing in a single plugin at the moment). Opinions?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139#issuecomment-275626943:349,configurat,configuration,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139#issuecomment-275626943,2,"['configurat', 'patch']","['configuration', 'patch']"
Deployability,"I solved this problem with remove the cmake which is installed with apt, and re-install it with source file. Thanks for your information",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517523369:53,install,installed,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517523369,2,['install'],"['install', 'installed']"
Deployability,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4648:544,install,installation,544,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648,2,['install'],['installation']
Deployability,"I suggest we could:; - add a warning when activating the real-time features since it changes the simulation time step; - change the reset button, since the API has never allowed for a clean reset. Why not reloading through the button ?; - graph update seems to be an issue (at least on Linux)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2491:245,update,update,245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2491,1,['update'],['update']
Deployability,"I switched to the dark side, running emacs as my IDE :smiling_imp:, and I was testing it on SOFA's codebase. (If you like coding & navigating through SOFA's codebase without having QtCreator transforming your laptop into an airplane, you should try it, it's great!) ; Anyway, I'd like to suggest adding some stuff to the .gitignore file:. * emacs auto-generates autosave files that have the following formats: `#*` and `~*` ; * When running emacs as an IDE, an emacs package called `projectile` creates a file called `.dir-locals.el`, containing project configuration, compilation, and running instructions for emacs in the project's root folder.; * Finally, Emacs uses `clangd` or `ccls` as its language servers. these programs store their index (LSP data for the project's codebase) in `.cache/` and `.ccls-cache/` respectively. clangd & ccls both require cmake to generate a `compile_commands.json` file, which we also don't want to be committed in the git repository. I also noticed that SOFA doesn't have a `.clang-format` file. A clang-format file gives great hints to contributors, regarding the formating guidelines for SOFA. This .clang-format file respects the [coding guidelines described here](https://www.sofa-framework.org/community/doc/programming-with-sofa/guidelines/); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2884:554,configurat,configuration,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2884,1,['configurat'],['configuration']
Deployability,"I tested different scenarios:; If `ComponentA` is defined before `ComponentB`:. 1. A Data of `ComponentA` referring to a Data of `ComponentB` is not linked properly: the numeric value is not the right one, and Data that depends on the first Data are not updated accordingly.; 2. A Data of `ComponentB` referring to a Data that does not exist (and will not exist) does not warn the user. The link is created (pointing to nothing) with a default numeric value. Therefore, I suggest to restore the `else` statement with a warning to the user that the link does not have a parent. It seems that the case when a Data points to a Data that will be initialized later is not supported.; What do you think @damienmarchal ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2211#issuecomment-872029650:254,update,updated,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2211#issuecomment-872029650,1,['update'],['updated']
Deployability,"I tested the update of the scene graph and the msg icon, both features seem to work :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3026#issuecomment-1172259093:13,update,update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3026#issuecomment-1172259093,1,['update'],['update']
Deployability,I think - except by implementing a complicated check on time step change in both of the above components - we are good here. Only one thing remain TMO as discussed with @alxbilger : we could create a test scene inspired from caduceus using a python controller decreasing progressively the time step to check that in this configuration the simulation smoothly handles the change of time step. Anything else?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074:321,configurat,configuration,321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074,1,['configurat'],['configuration']
Deployability,"I think I have another sofa installation, but I have tested pointing CMAKE_PREFIX_PATH to /usr/local and also to /SOFA_DIR/build/install dependending on where I installed v20.06. In both cases failed. . Have u been able to replicate?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-655812712:28,install,installation,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-655812712,3,['install'],"['install', 'installation', 'installed']"
Deployability,"I think I like the PR :smile: but I lack of knowledge .. does it mean that we can use these accessor on any type not event Data?. > I added unit tests for the default class, for the vector types specialization and for the Data specialization. is this the mechanism used when the flag readOnly is set on a Data?. well.. I need to get a technical update on this!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850:345,update,update,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850,1,['update'],['update']
Deployability,I think it's time to update our old icons for v18.12 :wink: . SOFA.png; ![SOFA](https://raw.githubusercontent.com/sofa-framework/sofa/43b71cf490996847a15f8fddf5e04db823b8d52d/share/icons/SOFA.png). MODELER.png; ![MODELER](https://raw.githubusercontent.com/sofa-framework/sofa/43b71cf490996847a15f8fddf5e04db823b8d52d/share/icons/MODELER.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/881:21,update,update,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/881,1,['update'],['update']
Deployability,"I think so; @damienmarchal do you know why the status postponed was added? I guess to wait for the release v22.12 .. If so, it should be ready",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1385189241:99,release,release,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1385189241,1,['release'],['release']
Deployability,I think that this task is connected to several topics:. - connection of SOFA with other libraries (other modeling / visualization / collision tools); - adapt the simulation pipeline and have more control on it (ASSIST..) ; - hot restart of the simulation ; - helping the debug (which is not due to C++ problem but wrong parametrization / init of the simulation),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2005#issuecomment-1559256805:173,pipeline,pipeline,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005#issuecomment-1559256805,1,['pipeline'],['pipeline']
Deployability,"I think the problem you are raising here is a more general issue in Sofa. ""Engine components"" should be used seamlessly in Sofa, without the need for a distinction. After all, as you said, they are nothing but ""components"" in the sense that they are put in your python scene just like the others, with a createObject, and are visible in the scene graph, just like the others.; Sadly, DataEngines in Sofa needs to be manipulated with care, because their behavior changes drastically from their BaseObject counterpart: They do not respect the classical execution order of the scene graph, they can be called multiple times per animation steps (or not at all), etc. If their use in Sofa wasn't so different from the rest of the Sofa components, I would also vote for a simpler name, such as PyComponent vs PyScript for the current PythonScriptController. Newcomers in Sofa tend to mix up DataEngines with standard components, ending up with behaviors that they do not understand, as their code in not executed when they expect it to be for instance.; But I guess the subject is drifting a little bit towards the Data-update topic on gitter ;); Maybe for now it's not so important to rename anything, and we should maybe wait to see how things evolve with the animation loop and usages of DDGNodes in Sofa...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406624802:1114,update,update,1114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406624802,1,['update'],['update']
Deployability,"I think this has some benefits:; - the features are already merged in the master branch and *should* work without the hassle of merging different dev branches; - they are OFF by default, so they are not disturbing anyone. But we should take care of the following:; - they must be tested (at least ONE ci config should activate them); - they are not meant to stay ""experimental"" forever, so there is an implicit contract to move them to ""non-experimental"" as soon as they are ready and working. ""EXPERIMENTAL_FEATURES"" must not be the carpet above the decisions we don't make. Typically, an ""experimental"" feature in release N should be merged in release N+1.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/517#issuecomment-345207607:616,release,release,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/517#issuecomment-345207607,2,['release'],['release']
Deployability,"I took into account @damienmarchal 's comment; Scene updated, tested and working properly. Regarding changes (refactoring) proposed by @epernod, this must be done in another PR. I do not want to refactor only obj export, otherwise SOFA would be inconsistent (look at STLExporter, VTKExporter).; I would therefore like to refactor all exporters as a clean I/O API! This will take some efforts and this is not related to this PR (which just fix and add the obj export in MeshExporter). I set this one as to review again then.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1789#issuecomment-785262772:53,update,updated,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1789#issuecomment-785262772,1,['update'],['updated']
Deployability,"I tried both with pip install gym==0.21.0 , with git clone and conda install",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757832816:22,install,install,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757832816,2,['install'],['install']
Deployability,"I understand why VS2013 does not compile (it does not support `constexpr`); But as for VS2015 ????, the GLEW error seems unrelated.... (I am compiling on VS2015 Update 1 64b with no problem)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-283614108:161,Update,Update,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-283614108,1,['Update'],['Update']
Deployability,I update my master straightaway to give it a try !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/541#issuecomment-356541350:2,update,update,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/541#issuecomment-356541350,1,['update'],['update']
Deployability,I updated (again) the CI jobs to ensure new dependency packs are installed.; I also launched a rebuild for Windows last builds.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-292208317:2,update,updated,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-292208317,2,"['install', 'update']","['installed', 'updated']"
Deployability,I updated the CHANGELog.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/108#issuecomment-274531916:2,update,updated,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/108#issuecomment-274531916,1,['update'],['updated']
Deployability,"I used the given CMakeList code in ""Create your scene in C++"" page to test the given source code in the same page. But when I run cmake to build, the error occured. I know where the SofaFrameworkConfig.cmake is and i had tied to change ""find_package(SofaFramework REQUIRED)"" to ""find_package(/home/user_name/sofa/src/sofabuild/install/lib/cmake/SofaFramework/SofaFramework REQUIRED)"", then other errors occured, which is still about some Config.cmake files not found. CMake Error at CMakeLists.txt:7 (find_package):; By not providing ""FindSofaFramework.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""SofaFramework"", but CMake did not find one. Could not find a package configuration file provided by ""SofaFramework""; with any of the following names:. SofaFrameworkConfig.cmake; sofaframework-config.cmake. Add the installation prefix of ""SofaFramework"" to CMAKE_PREFIX_PATH or set; ""SofaFramework_DIR"" to a directory containing one of the above files. If; ""SofaFramework"" provides a separate development package or SDK, be sure it; has been installed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2784:327,install,install,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2784,5,"['configurat', 'install']","['configuration', 'install', 'installation', 'installed']"
Deployability,"I was able to reproduce this issue, when compiling Sofa and SofaPython3 in Debug mode. When trying to add `libSofaPython3.so` through the PluginManager, it first warns the user, that the `.so` was compiled in debug mode, while Sofa was compiled in Release mode (which is incorrect).; Then, on adding the library, the above mentioned error is printed. I confirmed with `ldd libSofaPython3.so` that ` libpython3.9.so.1.0` is actually `not found`. In Release mode, it also does not find it, but does not seem to care. When adding the path to `libpython3.9.so.1.0` to the `LD_LIBRARY_PATH`, it finds it, but `SofaRuntime` is missing required functions/attributes.; In Release; ```python; >>> dir(SofaRuntime); ['DataRepository', 'PluginRepository', 'Sofa', 'SofaRuntime', 'Timer', '__SofaPythonEnvironment_importedModules__', '__SofaPythonEnvironment_modulesExcludedFromReload', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'formatStackForSofa', 'getCategories', 'getPythonCallingPoint', 'getPythonCallingPointAsString', 'getSofaFormattedStringFromException', 'getStackForSofa', 'importPlugin', 'importlib', 'init', 'inspect', 'os', 'sendMessageFromException', 'sofaExceptHandler', 'sofaFormatHandler', 'sys', 'traceback', 'unloadModules']; ```; In Debug, only `'DataRepository', 'PluginRepository'` are present (error is thrown, that `unloadModules` is missing).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858:248,Release,Release,248,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1209157858,3,['Release'],['Release']
Deployability,"I was thinking that the ""not merging is own PR rules"" is to avoid having people merging things that have not been reviewed and received merge approval. . If the PR was agree to be merged (as was 255) and the merge order was defined (as we did during last meeting) I see no problem to merge his own PR because in this scenario, merging is just a matter of [ci-building] and clicking on the merge button. Who-ever is available to do is welcome to allow the more smooth & continuous merging of the different PR between two meeting. . But maybe there is other consequence I didn't noticed, if so could you elaborate ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/261#issuecomment-302723181:469,continuous,continuous,469,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/261#issuecomment-302723181,1,['continuous'],['continuous']
Deployability,I was wondering if there is a way to catch the missing symbols at compile-time and I found this: https://cmake.org/cmake/help/latest/module/CheckCXXSymbolExists.html#module:CheckCXXSymbolExists. It's configuration time but it could be helpful. I tried to play with it but I was not able to make it work. I added the check in the `sofa_create_package_with_targets` macro.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1914295607:200,configurat,configuration,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1914295607,1,['configurat'],['configuration']
Deployability,"I would like to schedule a hangout in the coming days to synchronize everyone's job on CI. I have the feeling that everyone is not up-to-date with the current CI status, and I came to the point I would not touch anything until I understand clearly what has been done recently. ; This includes jenkins updates, use of tests ci scripts, etc.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186#issuecomment-282669576:301,update,updates,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186#issuecomment-282669576,1,['update'],['updates']
Deployability,I would say for the v22.12 release @alxbilger ; It would suit @Camille-K @fredroy,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1372729092:27,release,release,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3562#issuecomment-1372729092,1,['release'],['release']
Deployability,"I would say that we should drop Qt4 support (Qt5 has been released 5 years ago), and the new GUI will need Qt5.7 anyway....",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/311#issuecomment-311992201:58,release,released,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/311#issuecomment-311992201,1,['release'],['released']
Deployability,"I would vote for yes too. This has been discussed for a long time now. Online documentation is already updated to ""use your own Boost"".; Cleaning as much as possible Boost dependencies that are redundant with C++11 features is another topic in my opinion.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/33#issuecomment-258135230:103,update,updated,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/33#issuecomment-258135230,1,['update'],['updated']
Deployability,"I' ve updated the SDK; `Selecting Windows SDK version 10.0.22621.0 to target Windows 10.0.22631.` ; and v22.12 successfully compiled . As a the last resort, you may; - update everything (MSVC/SDK); - delete the build folder. and try again",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835616437:6,update,updated,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835616437,2,['update'],"['update', 'updated']"
Deployability,I'll try later with a docker image to ensure there is no rest of previous installs,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656196361:74,install,installs,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656196361,1,['install'],['installs']
Deployability,I'm a bit confused about config.h inclusion pipeline. Could you explain the necessity of having both initModule.h and config.h headers?; see #904,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/915#issuecomment-460980431:44,pipeline,pipeline,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/915#issuecomment-460980431,1,['pipeline'],['pipeline']
Deployability,"I'm always having a hard time designing this type of workflow...; I agree with you that it's way easier to have a branch than a commit in GIT_TAG.; What will happen though is that SOFA CI could be failing because of changes in SP3/master. . For instance, this will happen:; ~~1. Bob opens a SOFA PR that breaks SP3~~; ~~-> the SOFA PR fails on SOFA CI~~; ~~2. Bob opens a SP3 PR to propose a fix to this future change in SOFA that will break SP3~~; ~~-> the SP3 PR fails on SP3 CI (because it fixes something that is not broken yet)~~; ~~3. Thanks to my work on ExternalProject, SOFA CI is able to test the SOFA PR with a custom version for SP3 (the version of the SP3 PR)~~; ~~-> the SOFA PR succeeds on SOFA CI~~; ~~4. Both PRs are merged (in any order)~~; ~~5. **All the other SOFA PRs are now failing on SOFA CI** and must be updated with SOFA/master~~. EDIT: corrected version below",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821081219:830,update,updated,830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821081219,1,['update'],['updated']
Deployability,I'm ok to deprecate PSL until it is updated to SofaPython3 :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545470894:36,update,updated,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855#issuecomment-1545470894,1,['update'],['updated']
Deployability,I'm ready to rollback some of the removals. Does it concern **all** SofaOpenglVisual ones?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/905#issuecomment-458464405:13,rollback,rollback,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/905#issuecomment-458464405,1,['rollback'],['rollback']
Deployability,"I'm trying to install Sofa from the master branch with the Geomagic plugin. I'm getting the following error:. ```; /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.cpp: In member function ‘void sofa::component::controller::GeomagicDriver::initDevice()’:; /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.cpp:361:86: error: no matching function for call to ‘sofa::component::mapping::RigidMapping<sofa::defaulttype::StdRigidTypes<3, double>, sofa::defaulttype::ExtVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float> >::setModels(sofa::component::container::MechanicalObject<sofa::defaulttype::StdRigidTypes<3, double> >*, sofa::component::visualmodel::OglModel*)’; visualNode[i].mapping->setModels(rigidDOF.get(), visualNode[i].visu.get());; ^; In file included from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/simulation/Node.h:51:0,; from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/simulation/Simulation.h:25,; from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/helper/AdvancedTimer.h:25,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseTopology/TopologyEngine.inl:29,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseTopology/TopologyData.inl:26,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseVisual/VisualModelImpl.h:34,; from /home/franc/sofa/src/SofaGeneral/../modules/SofaOpenglVisual/OglModel.h:34,; from /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.h:33,; from /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.cpp:23:. /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/core/Mapping.h:88:18: note: candidate: void sofa::core::Mapping<TIn, TOut>::setModels(sofa::core::State<DataTypes>*, sofa::core::State<TOut>*) [with TIn = sofa::defaulttype::StdRigidTypes<3, double>; TOut = sofa::defaulttype::ExtVectorTypes<sofa::defaulttype::Vec",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/892:14,install,install,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/892,1,['install'],['install']
Deployability,"I'm using Windows and compiling with Visual Studio. Thanks for the fixes made with PR #568 . I think there's one line that still needs to changed. When I ran the updated version, I received the following error: . [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\git\sofaframework\sofa\master\build\bin/share/sofa/gui/runSofa/resources/:C:/git/sofaframework/sofa/master/build/share/sofa/gui/qt/resources. I think the issue is in line 154 of sofa/applications/projects/runSofa/Main.cpp. ; Instead of:; GuiDataRepository.addFirstPath(SetDirectory::GetRelativeFromProcess(""../share/sofa/gui/runSofa/resources/"")) ;; ; I think it should be:; GuiDataRepository.addFirstPath(Utils::getSofaPathTo(""share/sofa/gui/runSofa/resources/"").c_str()) ; . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/577:162,update,updated,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/577,1,['update'],['updated']
Deployability,I'm using sofaCUDA on windows. Will try to install it on my ubuntu 18.04,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484829462:43,install,install,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484829462,1,['install'],['install']
Deployability,"I've added the `v5.1.0-ModernInstall` branch to our fork. Actually this code wasn't on the repo itself so I just copied the files presents in SOFA and added my CMake configuration files. It compiles, you can try to add the find or fetch mechanism using this",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1938474654:166,configurat,configuration,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1938474654,1,['configurat'],['configuration']
Deployability,I've had a problem combining OglViewport (which is using old openGL) with another component using modern OpenGL.; Here's a fix I did with the help of @fredroy.; We just needed OglViewport to update the visualparams with the new matrices. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1500:191,update,update,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1500,1,['update'],['update']
Deployability,I've installed the sofa for windows just now. But there's an error:. ![image](https://user-images.githubusercontent.com/30407833/111863168-229cab00-896f-11eb-9800-27134da3b722.png). What's the problem?,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1943:5,install,installed,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1943,1,['install'],['installed']
Deployability,"I've put this PR in wip to avoid overloading the CI while you integrate all the comments. Once you've finished all the review, you can change the tag back to to review and then trigger the CI with the usual comment.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4679#issuecomment-2083052979:62,integrat,integrate,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4679#issuecomment-2083052979,1,['integrat'],['integrate']
Deployability,INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2150,Release,Release,2150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,ING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFactory] Class already registered: DevTensionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Rigid3d>; [WARNING] [Obje,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:29922,install,install,29922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"IPO state wont change anyway so it is useless to do the test every time. On Windows, this test takes 2sec (for a total of 7sec for a minimal SOFA configuration), so it is quite appreciable without it.; On linux (Ubuntu) it takes 200ms on my setup so barely perceptible... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4191:146,configurat,configuration,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4191,1,['configurat'],['configuration']
Deployability,Image plugin installation does not preserve the file's hierarchy,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/136:13,install,installation,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/136,1,['install'],['installation']
Deployability,"Implement the improvement discussed in; https://github.com/sofa-framework/sofa/issues/56. This request contains: ; A new message class have been added for logging (in addition to Dev & Runtime).; A new RoutingMessageHandler.; A new test to validate the basic behavior of RoutingMessageHandler. Eg of use... to install a filter that will only send the; Runtime message of type Warning to a File you can do something like:; ```cpp; RoutingMessageHandler* m = new RoutingMessageHandler();; FileMessageHandler* toAFile = new FileMessageHandler(""the file""). /// Yes this is using c++ lambda syntax; m->setAFilter( [](Message& m); {; if(m.context() == Message::Runtime && m.type() == Message::Warning); return true ;; return false ;; }, toAFile );; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/57:310,install,install,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/57,1,['install'],['install']
Deployability,"Implementation of the (2nd part of) proposal #281 . Quick Reminder:; - CMake generates the list of compiled plugins in a file (`plugin_list.conf.default`) at the configuration stage.; - runSofa loads this list at startup; - if the user creates a custom `plugin_list.conf`, it will load this list instead.; - add an option to bypass the file (thus disable automatic loading) in runSofa. Everything is done in the runSofa application (+small patch in the macro sofa_add_generic() in SofaFramework CMake modules ; that allows us to have a list of all added targets which is not possible in CMake 3.1) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301:162,configurat,configuration,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301,2,"['configurat', 'patch']","['configuration', 'patch']"
Deployability,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2175:151,install,install,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175,1,['install'],['install']
Deployability,"In #3838 we agreed on the misleading variable `symmetricMatrix` in the MechanicalParams.; I propose here a simple change using `m_supportOnlySymmetricMatrix` et associated read/write access function updates. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3861:199,update,updates,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3861,1,['update'],['updates']
Deployability,"In SOFA not using an accessor is really bad (I mean really really bad), but the syntax is not really; friendly and thus discourage ppl to use it. . The PR adds few easing function smooth the syntax. ; So you can now type:; auto points = getReadAccessor(d_points);; in place of:; ReadAccessor<Data<Vec3> points = d_points;. In also make code update more manageable, as the whole code based does not need to be changed if the d_points type change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1254:341,update,update,341,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1254,1,['update'],['update']
Deployability,"In ```BeamFEMForceField```:; - Remove TopologyHandler to directly use TopologyData creation callback. Activate ```SofaGeneralSimpleFem_test``` by adding 8 tests in ```BeamFEMForceField_test.cpp``` to test:; - Component creation with given values or default values; - Error catching when creating without MechanicalObject; - Error catching when creating without topology or with empty topology; - value after init and after several simulation steps; - Check update of the FEM while removing edges. This last test on topological change is failing because of the bug in UniformMass fixed in PR #2377 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2382:457,update,update,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2382,1,['update'],['update']
Deployability,"In ```TriangularBendingSpring```:; - Remove all unused code; - Clean loops logic to exit/continue when possible. No major changes.; - Rename damping and stiffness Data to use prefix `d_`; - Add tests on Data setter to avoid negative values; - Document Header. Activate ```SofaGeneralDeformable_test``` by adding 8 tests in ```TriangularBendingSpring_test.cpp``` to test:; - Component creation with given values or default values; - Error catching if wrong Data values; - Error catching when creating without topology or with empty topology; - Init value on a single pair of triangles; - Simulated values on a grid scene; - Check update of the FEM while removing triangles. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2363:629,update,update,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2363,1,['update'],['update']
Deployability,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4586:19,upgrade,upgrade,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586,3,"['update', 'upgrade']","['update', 'upgrade']"
Deployability,"In f93e2b9 I wanted to restore the default behavior of ca0402d which had PluginRepository initialised with ; - the current working directory ( hence the ""./"" ) of the applications since on windows platform. By default, on windows the dlls are located in the same directory as the application. For example `runSofa` and `SofaPython.dll` are both in the same directory; - the `../lib` directory for other platforms like linux, where the plugins are usually stored in a `lib` sub folder of the parent directory where the application reside. For example from the directory where the `runSofa` executable is, you can look for the directory where `SofaPython.lib` is located by doing `cd ../lib`. These paths are relative and are compatible both with a build tree and an install tree. Prior to f93e2b9 the PluginRepository was empty by default, leaving all the executables the responsibility to fill it with these values. Behavior which was changed multiple times compared to ca0402d for a reason yet to be explained. The side effect this change introduced was the requirement to have every unit test executable which attempts to load a plugin to explicitly fill the PluginRepository with the paths where the libraries are located with respect to the executable. This requirement was covered by having most of the unit tests depend on SofaGTest which initialize these default paths for you, so that test scenes that use a ` RequiredPlugin` component do not utterly fail. ; Unless a **valid** argument is raised, the aforementioned paths should be the default ones to use to initialize the `PluginRepository` global object. ; I strongly believe that would these paths have been properly restored by f93e2b9 (my bad), this PR would have never existed on the first place. I mean how much time has been lost already in fixes, and discussions because of this ! Just to in the end roll back to the implementation that was done 5 years ago which was **just working**. The other thing I mentionned in the comment ht",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342557659:765,install,install,765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342557659,1,['install'],['install']
Deployability,"In https://github.com/sofa-framework/sofa/pull/1605, https://github.com/sofa-framework/sofa/pull/1611 and https://github.com/sofa-framework/sofa/pull/1632 were layed-out typeInfo subsystem refactoring. The general objective was to remove the ""magic"" and ODR violation of existing code.; The migration to the new system was postpone while NG refactoring & cleaning was progressing. ; Now it is done, let's go to deploy it. So in this step we are starting to use the new subsystem for ""selected"" type while printing a deprecation message for type that have not been migrated; . The PR shoul'nt break anything. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3288:411,deploy,deploy,411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3288,1,['deploy'],['deploy']
Deployability,"In https://github.com/sofa-framework/sofa/pull/3104, `DefaultCollisionGroupManager` is removed from the scenes. However, this component has aliases that were not removed. I noticed `CollisionGroup`, and `TreeCollisionGroupManager`. ```cpp; int DefaultCollisionGroupManagerClass = core::RegisterObject(""Responsible for gathering colliding objects in the same group, for consistent time integration""); .add< DefaultCollisionGroupManager >(); .addAlias( ""CollisionGroupManager"" ); .addAlias( ""CollisionGroup"" ); .addAlias( ""TreeCollisionGroupManager"" ) // for backward compatibility with old scene files but could be removed; ;; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3320:385,integrat,integration,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3320,1,['integrat'],['integration']
Deployability,"In https://github.com/sofa-framework/sofa/pull/3702, it has been observed that previously, the Data callback `updateResolution` is called twice. The second call of the callback triggers inside the first call. This is because an output of the call back is edited with `beginEdit` (`d_edges.beginEdit()`). It triggers the second call.; The use of WriteOnlyAccessor fixes this problem.; This is issue is to keep in mind that `beginEdit` or `WriteAccessor` must not be used on callback outputs inside the callback. A mechanism using a counter can also track callbacks that call themselves.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3709:110,update,updateResolution,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3709,1,['update'],['updateResolution']
Deployability,In last commits:; - DataTrackerEngine is deprecated; - CallbackEngine is renamed as DataTrackerCallback & tests use it instead of the deprecated DataTrackerEngine; - Updated doc for the DataTrackerCallback; - const DataTracker& passed as argument to callback function: this makes it possible to call hasChanged() on datafields using the dataTracker in each DataTrackerCallback. @jnbrunet @damienmarchal if that's OK with you. If it passes I think that should be all on this PR,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1406#issuecomment-645446057:166,Update,Updated,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1406#issuecomment-645446057,1,['Update'],['Updated']
Deployability,"In my opinion, all *GridTopology should be removed, and replaced with an engine computing a grid and then set into a Topology.; In this case, the bug comes from the facts that the ""position"" field (a Data called seqPoints in the code) is used both as input and output. So I strongly suspect that the update mechanism is overwritting the values. If you remove the oglmodel (and add the facets...), it works. ```xml; <MeshObjLoader name=""loader1"" filename=""mesh/cylinder-1.obj"" translation=""0 2 0""/>; <SparseGridTopology name=""grid1"" n=""4 2 4"" src=""@loader1"" drawHexahedra=""1"" />; ; <MeshObjLoader name=""loader2"" filename=""mesh/cylinder-1.obj"" translation=""0 0 0""/>; <SparseGridTopology name=""grid2"" n=""4 2 4"" src=""@loader2"" drawHexahedra=""1"" />; ``` ; <img src=""https://user-images.githubusercontent.com/11028016/114160763-90614480-9927-11eb-9ba8-4961a83a5fac.png"" width=""300"" >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1975#issuecomment-816556748:300,update,update,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1975#issuecomment-816556748,1,['update'],['update']
Deployability,"In order to implement damping behavior on a system, we can use rayleigh damping or we can use a more powerful feature, the dissipation potentials. These potentials implement a force that depends on the velocity. . https://par.nsf.gov/servlets/purl/10092361; http://gmrv.es/Publications/2018/SO18/EGauthorGuidelines-sca2018-sub.pdf. The first paper specifies how should these potentials be integrated into an optimization solver and the second one specifies how these potential should be to correctly damp the desired deformation modes. . In particular, we need to compute the dissipation rate, measures as the `dt * R(x, v)`. We also need to compute the damping forces (dR/dv) and the damping hessians (d2R/dvdx and d2R/dv2). With the current implementation of the ForceFields, we can implement the forces and the hessians, but we can't implement the dissipation rate because we don't have access to dt. . The `MechanicalParams` that is passed into the getPotentialEnergy function is the default instance, and that one doesn't have the dt set. . My proposal is to add a getDissipationRate function to the ForceField so we can pass the dt and separate the computation of the potential energy and the dissipation rate.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2335:389,integrat,integrated,389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2335,1,['integrat'],['integrated']
Deployability,"In sofa, some component allows to specify colors by writing color=""1,0,0"" and ""red"" while others just allow color=""1,0,0"". This is a consistency issue (very very bad for the user experience). ; So we should unify this in all sofa for the next release. . DM.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/64:243,release,release,243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/64,1,['release'],['release']
Deployability,"In some cases (which ones?), gcc does not link against pthread which is necessary for the recently added AsyncSparseLDLSolver.; I got the case on the latest gcc on Manjaro (`gcc version 11.1.0`), and at least one other user is reported the same error #2736 . Same configuration with clang worked fine without so I suppose the added library comes from somewhere (but I dont where/what). ; This PR adds the necessary library in any case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2739:264,configurat,configuration,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2739,1,['configurat'],['configuration']
Deployability,"In terminal, I check the cmake version is 3.26 using ""cmake --version"". But I don't know why the cmake 3.16 is used by cmake-gui (I installed it with `sudo apt-get install cmake-gui` which is mentioned in sofa build website documentation)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517410385:132,install,installed,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808#issuecomment-1517410385,2,['install'],"['install', 'installed']"
Deployability,"Indeed, in the paper they say that they use the initial volume of each element, instead of recomputing it. I'm not sure I understand it correctly, but it seems to me that this is not actually 'the good way', just something made possible by the fact that the volume can be directly multiplied to the Strain Displacement matrix, without creating artificial torque. So you can make the assumption that the volume of the element doesn't change much, and that using its initial volume during the whole deformation is a good approximation, which saves computational time.; It would be better if someone could comment on this, because I really don't know if I'm right. That being said, when looking in the code of `TriangleFEMForceField`, the area of the triangles seems to be recomputed anyway in `computeStrainDisplacement`, with:; ```; Real determinant = b[0] * c[1]; // Surface * 2; ```; which is used to update the Strain Displacement matrix at each time step. By comparison, the difference with `computeStrainDisplacement` in `TriangularFEMForceField` is juste the next line; ```; determinant = b[0] * c[1];; triangleInf[elementIndex].area = determinant*0.5f;; ```; Following the paper, I think the computation of `determinant` at each time step should also be replaced by the triangle initial area. Or alternatively, follow the same version as in `TriangularFEMForceField` and update the triangle's area to make use of the computation. Finally, but not related, the 'area' used in the material behaviour matrix of `TriangleFEMForceField` is actually a 'volume' with a default thickness of 1. I don't know if this feature is actually used, but if so it changes a bit the physical interpretation between `TriangleFEMForceField` and `TriangularFEMForceField`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2275#issuecomment-1061899813:902,update,update,902,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275#issuecomment-1061899813,2,['update'],['update']
Deployability,"Indeed, it can be cumbersome to change simple values in the data inspector. Good point the video ;) but YouTube does not show it, is it private ?; When you change the data value, the data is updated as soon as the mouse moves left&right, correct ? I am no expert in UX, but it this the best way to do it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/750#issuecomment-413484007:191,update,updated,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/750#issuecomment-413484007,1,['update'],['updated']
Deployability,"Inside the file defaulttype/CMakeLists.txt, the line; `target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/../.."")`; should be; `target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../..>"")`. This error makes IDE based on cmake bleed the symbol indexing since a relative path ""../.."" is wrongly added in the sofa's CMake installed filed:. ```; $ grep -nr ""INTERFACE.*\.\.\/\.\."" build/install/lib/cmake; ./SofaFramework/SofaFrameworkTargets.cmake:66: INTERFACE_INCLUDE_DIRECTORIES ""${_IMPORT_PREFIX}/include;/../..""; ```. If, for exemple, you create an external projet that depends on Sofa, and that this external project is placed inside ~/source/project, than any IDE based on cmake for symbol indexing such as CLion will try to parse ~/source/project/../.. which is the home directory. This will end up take a lot of resources just for symbol indexing of a small project.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/401:412,install,installed,412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/401,2,['install'],"['install', 'installed']"
Deployability,"Install FindTinyXML2 for OOT compilation using the binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4545:0,Install,Install,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545,1,['Install'],['Install']
Deployability,"Instead of adding `libjpeg` as a dependency on the core of Sofa, I would support doing the opposite, i.e. removing `libpng+zlib` by only keeping the abstract `Image` class in `sofa::helper`, and including the derived classes in plugins, where we could only use by default the Qt-based implementation, so only for projects choosing not to include the Qt GUI they would have to enable the other implementations based on libpng/libjpeg, or CImg, or whatever is easier to integrate, given that it's a nearly trivial piece of code to implement to plug any image library. But it does require to be consistent in the resulting format (in particular whether the data is provided `TopDown` or `BottomUp`).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/51#issuecomment-261507665:468,integrat,integrate,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/51#issuecomment-261507665,1,['integrat'],['integrate']
Deployability,"Interesting, I compiled on the CI with just the FAST_MATH option enabled and those tests fails; ```; [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta2ExplicitSolverDynamic_test.rungeKutta2ExplicitSolverDynamicTest_high_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta2ExplicitSolverDynamic_test/rungeKutta2ExplicitSolverDynamicTest_high_dt_0/); [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta4ExplicitSolverDynamic_test.rungeKutta4ExplicitSolverDynamicTest_medium_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta4ExplicitSolverDynamic_test/rungeKutta4ExplicitSolverDynamicTest_medium_dt_0/); [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta4ExplicitSolverDynamic_test.rungeKutta4ExplicitSolverDynamicTest_small_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta4ExplicitSolverDynamic_test/rungeKutta4ExplicitSolverDynamicTest_small_dt_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralImplicitOdeSolver_test_VariationalSymplecticExplicitSolverDynamic_test/variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_medium_dt_with_damping/0](https://ci.inria.fr/sofa-ci-dev/jo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769:347,release,release,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769,2,['release'],['release']
Deployability,Interesting. . My first investigation trials would be to check the scene in debug vs release (be sure that --fastmath is not activated).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3036#issuecomment-1152512851:85,release,release,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3036#issuecomment-1152512851,1,['release'],['release']
Deployability,"Introduce examples scenes for 4 cases of Euler explicit solver:; 1) Mass matrix is not diagonal and Euler is not symplectic: EulerExplicitSolver.scn; 2) Mass matrix is diagonal and Euler is not symplectic: EulerExplicitSolver_diagonal.scn; 3) Mass matrix is not diagonal and Euler is symplectic: EulerSymplecticSolver.scn; 4) Mass matrix is diagonal and Euler is symplectic: EulerSymplecticSolver_diagonal.scn. I did my best to create stable scenes, but it is not that simple with an Euler explicit solver. Especially if not symplectic. It comes at the price of very small time step sizes. This PR is based on #2163. It will need to be updated after #2165 is merged. [ci-depends-on https://github.com/sofa-framework/Regression/pull/15]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199:636,update,updated,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199,1,['update'],['updated']
Deployability,"Introduction of wrappers, derived from `BaseMatrix` and `BaseVector`, to Eigen matrices. The wrappers are courtesy of @jnbrunet, from https://github.com/jnbrunet/caribou, and have been adapted to SOFA + missing functions for CGLinearSolver. `eigen::EigenMatrix` has the interface of `BaseMatrix`, so it can be used as a matrix storing the linear system, in a linear solver.; An example is provided in `CGLinearSolver`. Performances:. Tested on a cantilever beam from `examples/Components/linearsolver/FEMBAR-CGLinearSolver.scn`. **CompressedRowSparseMatrixMat3x3d**; [INFO] [BatchGUI] 1000 iterations done in 2.62389 s ( 381.113 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 2.23 5.32 2.59 0.21 2587.89 100 TOTAL; 1 0 1 2.23 5.31 2.59 0.21 2.59 99.97 .Simulation::animate; 2 0 1 0 0.02 0 0 0 0.04 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0.01 0 0 0 0.05 ..UpdateInternalDataVisitor; 2 0 1 2.21 5.24 2.56 0.21 2.56 99.03 ..AnimateVisitor; 3 0.01 1 2.20 5.24 2.56 0.21 2.56 98.94 ...Mechanical; 4 0.01 1 0.06 0.21 0.07 0.01 0.07 2.60 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.98 ....ComputeRHTerm; 4 0.13 1 0.49 1.58 0.52 0.04 0.52 20.27 ....MBKBuild; 5 0.13 1 0.49 1.56 0.52 0.04 0.52 20.19 .....CG-setSystemMBKMatrix; 4 0.66 1 1.58 4.57 1.90 0.20 1.90 73.45 ....MBKSolve; 5 0.67 1 1.56 4.54 1.88 0.20 1.88 72.80 .....CG-Solve; ```. **CompressedRowSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 4.19299 s ( 238.493 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3.74 8.41 4.16 0.27 4159.02 100 TOTAL; 1 0 1 3.74 8.40 4.16 0.27 4.16 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 3.72 8.36 4.13 0.27 4.13 99.39 ..AnimateVisitor; 3 0.01 1 3.72 8.35 4.13 0.27 4.13 99.33 ...Mechanical; 4 0.01 1 0.06 0.18 0.07 0.01 0.07 1.59 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.21 ....ComputeRHTerm; 4 0.13 1 1.66 5.86 1.72 0.14 1.72 41.42 ....",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:882,Update,UpdateInternalDataVisitor,882,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,1,['Update'],['UpdateInternalDataVisitor']
Deployability,"Introduction; =========; This PR refactor the class reflection feature. . In this PR didn't removed functionalities but i reorganized, rename and refactor them. . To ease the transition, I have let the old function available with a deprecated message trying at best to preserve feature. When the transitional layer will be removed (in a few month so) you may encounter compilation failure because of function removing, so it is highly suggested to quickly update your code. A dedicated section at the end of this document gives you hints on how to update you code. . Changes:. Move name decoding apsect in a separated file called NameDecoder.h; -------------------------------------------------------------------------------------------; Currently name processing is done in Base. This is generating an not needed noise ; for developper. So I moved all that name's related code into a separated file NameDecoder.h. ; So to get typeName, className, shortName, etc...you can now do:; ```cpp; NameDecoder::getTemplateName<MyObject>();; ``` ; The mecanism to implement custom name or template was too complex than what it should requiring to implement several function (the virtual one and the static one). So I propose here a different implementation where, to customize the template or className you just needs to implement the CustomClassName()/CustomTemplateName() static function in your class ...and everthing will work out of the box. For curious people have look at the SFINAE used to implement that in NameDecoder. The NameDecoder class is now used by the BaseClass to decode names. Remove duplicated custom template name; -------------------------------------------------------; A complete mecanisme is now implemented in the NameDecoder & BaseClass to provide default templateName for sofa object. The underlying idea was to remove the needs to those kind of code ; ```cpp; MyClass : public BaseObject; virtual std::string getTemplateName() const { return ""CustomName""; } ; static std::string t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1283:456,update,update,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1283,2,['update'],['update']
Deployability,Is it possible to update the glew version distributed in the windows dependencies?. We can get this problem with the actually distributed version 1.13: https://www.khronos.org/opengl/wiki/OpenGL_Loading_Library#Initialization_of_GLEW_1.13.0_and_earlier. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/466:18,update,update,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/466,1,['update'],['update']
Deployability,"Is not the problem that the PluginRepository should contain ""../lib"" instead of ""./"" on gcc ? I do not remember where libraries are installed on this platform ( ./bin ? ../lib ? ). If ../lib I guess there is already built in trick (maybe in CMake) so that the LD_LIBRARY_PATH ( or RPATH ) is properly set.; Also I believe there is some kind of code duplicate which also brings confusion between PluginRepository global variable and the Utils::getPluginRepository. They should always return the same thing so why not . ```; Utils::getPluginDirectory(); {; return PluginRepository::getFirstPath(); ; }; ```. Or is there some legitimate reason for doing otherwise ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502#issuecomment-340518769:132,install,installed,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502#issuecomment-340518769,1,['install'],['installed']
Deployability,"Is this CI error is related to the PR ? ; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1034/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/6/testReport/(root)/Assembly_test/testDecomposedString/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1034#issuecomment-494401840:156,release,release,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1034#issuecomment-494401840,1,['release'],['release']
Deployability,"Is this fine as a new way to manage renaming of C++ data in SOFA @alxbilger ? does the need of overload of the destructor is fine ?; If so, the PR is fine and we should update the [deprecation documentation](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/#removing-a-datafield)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1641625273:169,update,update,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1641625273,1,['update'],['update']
Deployability,"Issue detected by @quentinfrancois0. This comes from a change in the Python configuration since the last High Sierra.; The line #include <Python/Python.h> involved a link ""Python"" to the python include, but this is no longer valid in High Sierra. This was causing a fail in the compilation (include not found). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/614:76,configurat,configuration,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/614,1,['configurat'],['configuration']
Deployability,Issues with Sofa.Component.UserInterface.ConfigurationSetting,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:41,Configurat,ConfigurationSetting,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['Configurat'],['ConfigurationSetting']
Deployability,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4332:223,pipeline,pipeline,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332,1,['pipeline'],['pipeline']
Deployability,"It is probably using the rest area since it is working with a Lagrangian formulation. This is also what we use in other FEM code (tetra and hexa) where the integral is computed on the rest (undeformed) domain. For linear elements (triangle, tetra), it will multiply the integrand with the initial volume (or area for triangle) to get the integral result over an element. For trilinear or higher degree elements, it will use Gauss integration points where derivatives of the shape function, and the determinant of the jacobian of the transformation matrix are computed at the initial (undeformed) domain. Kinematics quantities from the current state are transformed into the initial domain using a transformation matrix. . I would therefore think that the `TriangleFEMForceField ` is the ""good"" one in the sens that it is following the big majority of SOFA code with a Lagrangian formulation. . You could always compare the result against another FE software such as FEBio and FEnIcs which are free. I can help you with that if you want.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2275#issuecomment-1063094133:430,integrat,integration,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275#issuecomment-1063094133,1,['integrat'],['integration']
Deployability,"It is useful to be able to load shaders directly from a std::string as it allows us to not need filesystem management. Consequently ""fixed"" shaders like shadows (or normal rendering when OpenGL Core profile will come) will be directly integrated into the libs (no more share/shaders directory to locate/find/read). [needed to solve #142 ]. Checklist to merge this PR: ; - [x] succeed on each compilation setup on the CI ; - [x] does not generates new warnings or test failure ; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] cleans stuff; - [x] have tests on the introduced features. ; - [x] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158:235,integrat,integrated,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158,1,['integrat'],['integrated']
Deployability,It looks like it never tried to load SofaPython3 (even with the flag I told you) which is really weird. Last thing you can try is edit the file `C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default` and add `SofaPython3` inside,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1793886110:202,Release,Release,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1793886110,1,['Release'],['Release']
Deployability,"It looks like the intialization of the MO when nothing is given in input is a problem .. not sure. I see [this test](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1977/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/1/testReport/UnitTests/SofaDeformable_test_RestStiffSpringsForceField_test/defaultBehaviorVec3/)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-816682682:235,release,release,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-816682682,1,['release'],['release']
Deployability,"It looks like: ""explicit Data(const BaseData::BaseInitData& init)"" allow you to easily copy data without value. Then you can add a parent and update value from the parent value. But, this is not what I'm looking for since BaseInitData flag the parent data's owner to add the new data. Meaning you can have troubles when inspect the component with two data having the same name (crash). . So, I decided to not implement a copy/clone function since I want something too specific.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/582#issuecomment-364945775:142,update,update,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/582#issuecomment-364945775,1,['update'],['update']
Deployability,It might have been breaking becausr the configuration file might have changed. I prefered to put this tag if in the future we see that we havr issue regarding this we will find this pr quickly.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4842#issuecomment-2252112860:40,configurat,configuration,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4842#issuecomment-2252112860,1,['configurat'],['configuration']
Deployability,"It seems msvc is quite (much!) less clever than gcc. 2 optimizations (only useful when not building in Release mode); - add and use a NOINIT RigidDeriv constructor (avoiding to init a deriv which is filled afterwards); - default ctor directly call the identity of its components (which is their default ctor by the way). and 1 ridiculous optimization; - avoid calling getPositionIntegrationFactor() in the nested loop; ; This optimization brings a whooping 30% speedup on my setup (VC2022, Release/LTO enabled); Test scene: 3instruments_collis.scn from BeamAdapter, 2000 iterations in batch mode; - before: 16.5669 s ( 120.723 FPS); - after: 12.829 s ( 155.897 FPS). GCC was doing the same by the way with or without these optims (and is faster than msvc, even in a VM 🤔). NOTE: do not forget to enable the LTO option for Windows when deploying, it brings full inlining & stuff and it is really useful for perf; (w/o LTO, before the optims it is 21.9883 s ( 90.9575 FPS) ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3135:103,Release,Release,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3135,3,"['Release', 'deploy']","['Release', 'deploying']"
Deployability,"It seems to be coming from a setup/system/configuration error than something related to SOFA itself, as the error is coming from the Windows SDK itself.; Which version of MS Visual Studio are you using ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835458410:42,configurat,configuration,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329#issuecomment-1835458410,1,['configurat'],['configuration']
Deployability,"It should be zero by default in my opinion. ; There is also a little confusion because there are currently two ways to specify the rayleigh damping parameters. ; If you use `EulerImplicitSolver` rayleigh damping is specified at the solver level. ; However both the `ForceField` and `Mass` API in SofaCore also implements rayleigh damping... provided you use `kfactorIncludingRayleighDamping` instead of `kfactor` when assembling the stiffness and the mass. This changed was introduced quite a long time ago, because in the Compliant plugin, the solvers for time integration do not implement global Rayleigh damping, but a more ""local"" one, delegated to each of the `Mass` and `Forcefield` components. ; So short answer is : yes should be zero. But it could break a **lot** of scenes that extensively rely on the default damping values to actually work... which mostly happens when you do not pay attention about the unit system you want to use in your scene ( e.g meters and kilograms versus millimetres and grams ) . I would also like to have the opinion of someone knowledgeable in that particular area. Rayleigh stiffness factor, contrary to Rayleigh mass factor, is not unit less. It is s^-1 as far as I can remember. Would it be better to specify it as unit less factor instead (and then have it internally divided by the current time step value), so that the value has a sort of consistent meaning regardless of the time step chosen ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/338#issuecomment-316636803:562,integrat,integration,562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/338#issuecomment-316636803,1,['integrat'],['integration']
Deployability,"It started from the case where SparseGrid could not open .OBJ files (because it is upper case 🐶 ); Now SparseGrid relies on the FactoryMesh mechanism for its extension management. BUT MeshOBJ is super deprecated, and the legacy helper::io::MeshLoader (not the one in sofa::core::loader) should be not used anymore.; BUT SparseGrid does not really handle src=""@loader"" syntax very well now, and it will be upgraded in the future. . I added some tests anyway 💛 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1231:405,upgrade,upgraded,405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1231,1,['upgrade'],['upgraded']
Deployability,It took me time but I think I finally got the working of the collision responses stuff. As this PR change the way the component behave do you think it is possible to detect when a scene is using the old-style to print a warning message telling the users to update their scene ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/91#issuecomment-265487181:257,update,update,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/91#issuecomment-265487181,1,['update'],['update']
Deployability,"It was agreed that runSofa is on its dying...but I see so much people that still use it so here is a set of patches to may make their live easier. I tried to spend as few time as possible so it is not super clean. . This PR contains: ; 1) Extend the live coding support. Before this PR only python script controller where concerned. Now any xml, pyscn and other is concerned when runSofa is started with the -i option. This is very usefull to make live demonstration, explaining scenes to an audiance or practice on small scene. It has no impact on user that don't start runSofa without -i. . 2) Currently Object that have messages in their logs exhibits small signs (green/yellow/red). This PR extends this behavior to the Node so it is more consistant and easy to locate the messages. . 3) Adds an openInEditor function in the pop menu in the scene graph to open the current scene in an external editor (It is nothing but I use that all the time in qtcreator and I wanted the same in sofa). Enjoy/. CHANGELOG for @hugtalbot & @guparan :; - [runSofa] ; - when using runSofa with the -i option adds live coding support for xml & pyscn scenes.; - adds icons (green, red, yellow) on nodes when their is message (before only the object have the icons). ; - in the scene graph pop-up menu adds an entry that open the current scene into an external editor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/337:108,patch,patches,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/337,1,['patch'],['patches']
Deployability,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1946:229,update,updates,229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946,1,['update'],['updates']
Deployability,"It was pointed by @EulalieCoevoet that the callbacks update are only called when the modified data is accessed for reading. This has a consequence in the UX, when a data field value is changed in the inspector, the callback is only executed when data is accessed... but not when we click on the ""update"" or ""ok"" button. . It was thus suggested to trigger the callback by accessing the component state.; All other change are just cleaning and refactoring of the function. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3713:53,update,update,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3713,2,['update'],['update']
Deployability,"It was supposed to be supported from VS2015: https://docs.microsoft.com/en-us/cpp/build/reference/zc-cplusplus?view=vs-2015 . But according to https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/ , it seems to be enabled only from VS2017 Update 15.7 . For now, this option is not needed while the C++ standard is still c++11. ; And the moment we enable c++17 will be the same time we will abandon VS2015, so everything should be OK (in theory)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1192#issuecomment-544416773:264,Update,Update,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1192#issuecomment-544416773,1,['Update'],['Update']
Deployability,"It would be better to have gtest as an external lib... but in the meantime before such a PR arrive here is a gtest update to the latest official version (1.10). . It contains nice features to make abstract tests (to validate an abstract class properties on all its implementation). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1705:115,update,update,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1705,1,['update'],['update']
Deployability,"It's probably due to the version of CUDA. You can try to downgrade to cuda 11. But you can also upgrade SOFA (v23.12), as it is now compatible with CUDA 12.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4579#issuecomment-1991585902:96,upgrade,upgrade,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579#issuecomment-1991585902,1,['upgrade'],['upgrade']
Deployability,"It's something that is too general to make it specific to BoxROI. What about SphereROI, EllipsoidROI, ... ?; There are several ways to handle this use case (using an Engine to compute something once or only at specific triggers):; 1. don't use a link but copy the data manually (but easily) using python for instance; 2. add a new link syntax that would not automatically trigger updates, or that would break itself after the first update / the init is done (which is a common request for use-cases for computing initial positions for instance); 3. add a new component that can be used instead of a Link for use cases where we want more control. In our codes we use the third option, we added a trivial component that we call `ValueStore`, which has a Data `value` inside with the ability to copy the value (and implicitly request the update of an Engine linked to it) to another Data manually (but as efficiently as a Link) at specific times (currently after each time step, but it could be customised).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258131540:380,update,updates,380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258131540,3,['update'],"['update', 'updates']"
Deployability,"Just a bit of explanation:; -> fetching matrices using glGetFloatv(GL_{MODELVIEW/PROJECTION}_MATRIX is really, really old-style OpenGL and should be avoided. That's why one should use the stored matrices in visualParams. ; In this case, the matrices were not updated during the 2nd viewport rendering ; code using glGetMatrix() was fine but code using things stored in visualparams was not.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1500#issuecomment-700519121:259,update,updated,259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1500#issuecomment-700519121,1,['update'],['updated']
Deployability,"Just a little fix in SparseLDLImplInvertData, r of sparse is missing. ; Fix needed for Cuda plugins update in sofa-dev.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/74:100,update,update,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/74,1,['update'],['update']
Deployability,"Just call getValue once and use the const ref afterwards. This is particularly showing for the function getIndex() which is called a lot of times (really a lot). Release mode (full optim), MSVC and scene from Components/topology/RegularGridTopology.scn:; before: `5000 iterations done in 22.5747 s ( 221.487 FPS).`; after : `5000 iterations done in 20.7355 s ( 241.132 FPS).`; so 10% speedup. But the optimization is more effective the more complex the mesh is; (I changed the mesh in the previous scene with a liver with 500K triangles and the speed up was like around 30%). In any case, it shows that `getValue()` is not really ""free"" and must be called only once if the value is needed more than one time, especially in the ""hot"" functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3348:162,Release,Release,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3348,1,['Release'],['Release']
Deployability,"Just got the issue myself in Release mode, and this fixed the problem.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1839#issuecomment-783344160:29,Release,Release,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1839#issuecomment-783344160,1,['Release'],['Release']
Deployability,Just had a look and it seems not messing with installation nor packaging :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/766#issuecomment-419160373:46,install,installation,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/766#issuecomment-419160373,1,['install'],['installation']
Deployability,"Just my 2 cents, if there is an option to disable it, I'll probably use it even tho I have Qt5WebEngine installed, since I like to keep only the minimum options activated to reduce compilation time and I don't think I'll use this feature.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1315#issuecomment-608321479:104,install,installed,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1315#issuecomment-608321479,1,['install'],['installed']
Deployability,"Just my 2 cents, on macOS 10.14.5, Xcode 10.2.1 , Cmake 3.15.0 and Sofa sync with master, I don't have any error with the configuration.; **BUT** Cmake 3.15.0 wants to link the OpenGL framework from a non-existing /Applications/Xcode-beta.app (I dont have any beta version of XCode), and obviously breaks the make process.; So I suppose there are some bugs in the 3.15.0 version of cmake.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-514153931:122,configurat,configuration,122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105#issuecomment-514153931,1,['configurat'],['configuration']
Deployability,"Just one small concern ( that can be included if that is not already the case ).; Does the functionnality currently also work with a debug compilation ? ; There may be also some extra care to be taken with multi configurations ide like visual studio, where the same build tree can generate multiple binairies in different folder, and possibly with different names ( for example the '_d' suffix that usually comes along with debug librairies ). On the ""bright side"", if the functionality is not yet there in this PR, I presume all the necessary informations can be extracted from the cmake target properties, so it **should** be feasible. Also it would be more generic since the cmake target name, and the name of the generated binary can differ ( even if this is not a common practice )",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301#issuecomment-312257491:212,configurat,configurations,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301#issuecomment-312257491,1,['configurat'],['configurations']
Deployability,"Just pushing the problem, but a solution could be to just update QWT to 6.1.5.; Extract of the Changelog of Qwt 6.1.5: ; `- Missing includes of QPainterPath ( Qt 5.15 ) added`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1496#issuecomment-698234678:58,update,update,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1496#issuecomment-698234678,1,['update'],['update']
Deployability,"Just update the 3 examples for components: `WriteState`, `ReadState` and `CompareState` to be more useful. Here is the screenshot of CompareState.scn with in blue the simulated beam, in green the result of readState from a record of a heavier beam and in purple the drawing from `CompareState` showing distance between the simulated dof and the expected position from the state file. ![image](https://github.com/sofa-framework/sofa/assets/21199245/4164a242-4462-45fa-a366-e77ab11e0076). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4745:5,update,update,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4745,1,['update'],['update']
Deployability,Just updated it @jnbrunet let me know if the explanations suit you,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1830#issuecomment-783558014:5,update,updated,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830#issuecomment-783558014,1,['update'],['updated']
Deployability,Just updated with master to resolve conflicts. I hope I didn't break anything :grimacing: ; EDIT: Of course I did break everything. I'm on it.; EDIT2: Fixed!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2896#issuecomment-1128631640:5,update,updated,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2896#issuecomment-1128631640,1,['update'],['updated']
Deployability,"KE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" configuration.; - [SofaImplicitField] FIX tests enabling; - [CMake] CLEAN package.cmake; - [SofaSimulationCore] Handle reload differently in SceneLoader::Listener; Needed to disable scene checks on reload.; - [SofaGraphComponent] Disable scene checks on reload; Needed by live editor (which reloads the scene every time the file is changed).; - [plugins] Remove commented lines in CMakeFiles. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:4341,Update,Update,4341,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['Update'],['Update']
Deployability,"Last and maybe least PR on adding SingleLink to Topology in all components.; Following PR #1183 and #1199 ; <br>; **Addition change done in this PR:**; - Add new method getMeshTopologyLink() to quickly search for all component updated. (to replace all by next link generation); - Replace methods getLocalMeshTopology and getActiveMeshTopology by getMeshTopologyLink with imposed searchDir (temporary change); - Replace getMeshTopology method in collision model by getCollisionTopology using the l_topology. <br>. **Change done in all compoents:**; As discuss in #744 . The idea at the end is to remove all GetMeshTopology. ; 1. Add SingleLink in all component accessing GetMeshTopology from context; 2. Update all scenes but keep backward compability:; ```; if (linkTopology.empty()){; msg_warning() <<""set the link"";; linkTopology.set((this->getContext()->getMeshTopologyLink());; }; ```; 3. Flag all getXXXMeshTopology to Depreciate 20.06 ?; 4. after 20.06 Remove all getMeshTopology(). <br>. **Full list update: in the 3 PR**; - [SofaBaseCollision] ; - CapsuleModel; - [SofaBaseMechanics]; - DiagonalMass; - MechanicalObject; - SubsetMapping; - UniformMass; - [SofaBaseTopology] ; - PointSetGeometryAlgorithms; - [SofaBaseVisual] ; - VisualModelImpl; - [SofaBoundaryCondition]; - AffineMovementConstraint; - ConstantForceField; - EdgePressureForceField; - FixedConstraint; - FixedPlaneConstraint; - FixedTranslationConstraint; - HermiteSplineConstraint; - LinearForceField; - LinearMovementConstraint; - LinearVelocityConstraint; - OscillatingTorsionPressureForceField; - ParabolicConstraint; - PartialLinearMovementConstraint; - PatchTestMovementConstraint; - ProjectDirectionConstraint; - ProjectToLineConstraint; - ProjectToPlaneConstraint; - ProjectToPointConstraint; - QuadPressureForceField; - SurfacePressureForceField; - TaitSurfacePressureForceField; - TrianglePressureForceField; - [SofaConstraint]; - DistanceLMConstraint; - DOFBlockerLMConstraint; - FixedLMConstraint; - UncoupledConstr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1223:227,update,updated,227,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1223,2,"['Update', 'update']","['Update', 'updated']"
Deployability,Last but not least PR on SPH plugin to restore ParticleSink component.; - Move all code inside inl file; - Fix the extern template; - Add prefix d_ to data; - Fix global behavior; - Update the existing basic example scene ; - Add 2 others scenes using Topology changes and OglFluid rendering done in previous PR. ![ezgif com-crop](https://user-images.githubusercontent.com/21199245/67562701-8b063f00-f71f-11e9-9e0b-d72e2a0f347a.gif). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1195:182,Update,Update,182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1195,1,['Update'],['Update']
Deployability,"Last lifecycle before the release. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4760:26,release,release,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4760,1,['release'],['release']
Deployability,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1928:240,Pipeline,Pipeline,240,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928,1,['Pipeline'],['Pipeline']
Deployability,"Last step to complete the task to unify the image importing process. Now that CImgPlugin is integrated, ImageBMP/ImagePNG and ImageQt can be removed from the trunk of Sofa. ; It lets all the responsibility of reading images to CImgPlugin (or any user custom plugin). (closes finally #9 and #51 ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/424:92,integrat,integrated,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/424,1,['integrat'],['integrated']
Deployability,"Let's not pollute the `plugins` directory of SOFA install with all the old modules like SofaBaseMechanics that are now collections.; I created a new `collections` directory for them, working the same way as `plugins`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3196:50,install,install,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3196,1,['install'],['install']
Deployability,"Let's start from the begining. . By default the msg_ api does not stores the messages because in some context of use it is not needed while in some other it is (in a non graphical sofa vs in a sofa GUI). . Thanks to the MessageHandler class it is easy to add custom message storage that fits the application's needs.; ; Currently the existing LoggingMessageHandler can be used to store in a single storage queue the messages. The queue can be queried to get the messages for whatever the application developer want to do with them (displaying them in GUI or showing a long history, ...). In serr/sout API a different scheme is used as the history is stored at the Base object level in a (size increasing) string. This behavior is now possible with the PerComponentLoggingMessageHandler.; This behavior is closer to the existing serr/sout but it also have several improved properties:; - the message are really stored (not just the 'text' description);; - no text concatenation (memory resize, memory copy) at each message, ; - the queue size of each component can be controlled with a data field as well as the message type to store or to ignore in the queue. ; - when the handler is not installed...there is not recording of the message...so there is a computation & memory zero cost. . NB: The d_msgLevel and d_logLevel in Base* are only there for discussion but they are currently unused now. . There PR also contains several new tests. . Checklist to be merge: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106:1188,install,installed,1188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106,1,['install'],['installed']
Deployability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/297:20,configurat,configuration,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/297,3,"['configurat', 'release']","['configuration', 'configurations', 'release']"
Deployability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/298:20,configurat,configuration,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/298,3,"['configurat', 'release']","['configuration', 'configurations', 'release']"
Deployability,Linked to the #597 and all Data dependency and Data update topics.; A proof of concept of a visitor-less SOFA could ease a lot next steps on these topics. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1340:52,update,update,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1340,1,['update'],['update']
Deployability,"Looking at this plugin's CMakefile, I can see; ```; ...; AddCompilerDefinitions(""SOFA_BUILD_OPTICALFLOW""); AddLinkerDependencies(${OpenCV_LIBRARIES}); ...; ```. which is wayyyyy too old, these keywords have not been used since SOFA's v15.12 (7 years ago).; So you (or this plugin creator @rouge1616 Nazim 🤗) need to update it for your current version of SOFA (which I guess is v22.06). And the code itself will certainly need to be updated as well...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824:316,update,update,316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3440#issuecomment-1294975824,2,['update'],"['update', 'updated']"
Deployability,"Looks good to me, any idea what is the issue with the `emptyForceField.py` (unrelated to this PR) ?. https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2804/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/8/testReport/SceneTests/applications_plugins_SofaPython3_examples/emptyForceField_py/. thanks @fredroy for the change and @alxbilger for the vigilance :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1108841718:216,release,release,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1108841718,1,['release'],['release']
Deployability,"METIS and CSPARSE are used for sparse solvers. However, they can be better integrated. # METIS; - it could be useful to isolate METIS. Currently, it is an extlib in SofaSparseSolver. So, it is necessary to `find_package` SofaSparseSolver in order to link with METIS.; - The developer has the choice to use its own METIS library if it is in his PATH, or to use the one in extlib. For consistency between users, only one option could be considered.; - METIS library can be updated: a newer version of METIS is available on https://github.com/KarypisLab/METIS. # CSPARSE. - it could be useful to isolate CSPARSE. Currently, it is an extlib in SofaSparseSolver. So, it is necessary to `find_package` SofaSparseSolver in order to link with CSPARSE.; - CPARSE has been modified for our purpose. What are the changes? It prevents to update the lib. Would it be possible to keep the original CSPARSE library and isolate our modifications?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2767:75,integrat,integrated,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2767,3,"['integrat', 'update']","['integrated', 'update', 'updated']"
Deployability,"MFC/ATL SDK is needed to get this header (it is proposed in Visual Studio installer).; I tried to remove it once and had an issue, will retry and log here.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/448#issuecomment-334512592:74,install,installer,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/448#issuecomment-334512592,1,['install'],['installer']
Deployability,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2309:34,install,install,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309,1,['install'],['install']
Deployability,"Make sense that this error does not appear on the CI, as the assert() is not processed by the compiler in other mode than Debug (and I suppose the CI compiles in Release mode with MSVC); and the ambiguity comes from the fact there are two invalidID things, one defined in the sofa namespace and one other defined in the defaulttype namespace for compatibility.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1577#issuecomment-719695958:162,Release,Release,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1577#issuecomment-719695958,1,['Release'],['Release']
Deployability,"Make sure you have Python 3.8.; Overall, read carefully the documentation: https://sofapython3.readthedocs.io/en/latest/content/Installation.html",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4159#issuecomment-1716050172:128,Install,Installation,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4159#issuecomment-1716050172,1,['Install'],['Installation']
Deployability,Management of the inclusion pipeline for config.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/904:28,pipeline,pipeline,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/904,1,['pipeline'],['pipeline']
Deployability,"Manager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/83347021-63272b80-a33f-11ea-9cda-e2c209b1be80.png). I am not able to understand what is the issue? Please suggest. Thanks; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:2229,Release,Release,2229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability,"Manual merge to close PR #218 ; Only one commit was not integrated: (MechanicalMatrixVisitor and MechanicalOperations) fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node. -- Notes:. This PR will be further discussed during STC#3. ## issofa_bugfix. ### Cleans; - BaseObject: Output message in serr for required datas. Error word should be reserved for messages that will make the application fail.; - RayTriangleVisitor and SceneLoaderFactory: clean warnings; - ParticlesRepulsionForceField: Add empty implementation of addKToMatrix to get rid of console warnings. ### Bugfixes; - AttachConstraint: fix crash when indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/756:56,integrat,integrated,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/756,1,['integrat'],['integrated']
Deployability,"Max, if I follow correctly, the way you propose would not break existing code? And we could have both regular Data and Class-handled Data at the same time? So we could update components little by little? It definitively worth trying it. Something tricky with actual Data is the multithreading management, maybe someone at InSimo could tell us a word about that?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255388630:168,update,update,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255388630,1,['update'],['update']
Deployability,Maybe we should add in the object factory a way to detect the use of Vec3f and warn user that it needs to update its scene to use Vec3 instead. So we can start simplifying the code base ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/495#issuecomment-440306342:106,update,update,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/495#issuecomment-440306342,1,['update'],['update']
Deployability,Memory leak in Simulation.unload() caused by collision pipeline,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:55,pipeline,pipeline,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['pipeline'],['pipeline']
Deployability,MeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/S,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5719,install,install,5719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,MeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFac,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:29770,install,install,29770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"Method LoadFromMemory to load an XML as a string is taking a parameter size which is unused and generate conversion warnings in tests. - Add method depreciation; - Update all tests compiled in my setup. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3376:164,Update,Update,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3376,1,['Update'],['Update']
Deployability,"Metis is an external library producing a few hundreds of compilation warnings (https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3459/FullBuildWarnings-MSBuild/). ![image](https://user-images.githubusercontent.com/10572752/163556296-5c153462-6e47-4e57-94c0-d06a36c6d299.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2874:193,release,release,193,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2874,1,['release'],['release']
Deployability,"Metis is installed only in the folder of the first plugin fetching it. Making the other one fail to find it. Moving it into the main folder with CMake is not really meaningful. The plugin should not fix something that is at higher level in the CMake hierarchy as itself (aka, fix install issue when another target depends on one of its dependency)... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4767:9,install,installed,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4767,2,['install'],"['install', 'installed']"
Deployability,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1926:308,Update,UpdateBoundingBoxVisitor,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926,2,['Update'],['UpdateBoundingBoxVisitor']
Deployability,"Minor comment otherwise fine to me.; Just the scene [_CarvingTool.scn_](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1110/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/2/warnings3Result/) is now failing due with the new checks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1110#issuecomment-520876839:186,release,release,186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1110#issuecomment-520876839,1,['release'],['release']
Deployability,"Minor remaining change use pre processor #if condition instead of #ifdef (since it allows to detect more various cases: is defined and true, defined and false or undefined); CGAL : remove changes and integrate changes from #1308; → back to wip",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1281#issuecomment-607121544:200,integrat,integrate,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1281#issuecomment-607121544,1,['integrat'],['integrate']
Deployability,Modules: Update variable name,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1986:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986,1,['Update'],['Update']
Deployability,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1873:191,update,updated,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873,1,['update'],['updated']
Deployability,"Move ManifoldTopologies and its history to its own repository : https://github.com/sofa-framework/ManifoldTopologies . the configure script on the CI has already been updated. It has its own CI too (and releases). (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2623:167,update,updated,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2623,2,"['release', 'update']","['releases', 'updated']"
Deployability,"Move OptitrackNatNet and its history to its own repository : https://github.com/sofa-framework/OptitrackNatNet. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2548:160,update,updated,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2548,1,['update'],['updated']
Deployability,"Move PluginExample and its history to its own repository : https://github.com/sofa-framework/PluginExample (with brand-new github actions 😎). the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2519:190,update,updated,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2519,1,['update'],['updated']
Deployability,"Move Registration and its history to its own repository : https://github.com/sofa-framework/Registration. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2552:154,update,updated,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2552,1,['update'],['updated']
Deployability,"Move SofaCUDA and its history to its own repository : https://github.com/sofa-framework/SofaCUDA. CI is building SofaCUDA on Windows so the configure script has been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2502:166,update,updated,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2502,1,['update'],['updated']
Deployability,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2224:135,update,updated,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224,1,['update'],['updated']
Deployability,"Move THMPGSpatialHashing and its history to its own repository : https://github.com/sofa-framework/THMPGSpatialHashing . the configure script on the CI has already been updated. It has its own CI too (and releaases). (#1527 , #1442). It just introduces one new component, THMPGSpatialHashing which is a colllision pipeline (i.e implements broad and narrow phases detection). ; After some tests it is slower than the standard bvh one, so it does not seem really important to maintain IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2609:169,update,updated,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2609,2,"['pipeline', 'update']","['pipeline', 'updated']"
Deployability,Multi-Mesh loader design (Assimp plugin integration),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/602:40,integrat,integration,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/602,1,['integrat'],['integration']
Deployability,"My 2 cents... . Taking ""16 days to merge 20 lines of code is a waste of time"" is true...and this is the consequence that no-one ever took time to handle that properly. As usual no one's concerns tend to become everyone's waste of time. . My suggestion to fix that is:; - 0) make a style sheet that matches the Sofa guideline (or change the guideline to match an automated formatter style sheet which is much easier :)); - 1) apply an automated style sheet to format the whole code base. ; - 2) when making PR, everyone should apply the provided style sheet.; - 3) when merging a PR, the automated stylesheet should be applied again. . But ho wait ! ; Some told me here is already a stylesheet for astyle (to use in qtcreator) since years in the tools/astyle ; directory. ; This may be a good starting point for (0) and (1). . What about having 0 et 1 done for 17.16 release ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353068497:866,release,release,866,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353068497,1,['release'],['release']
Deployability,"My bad for Windows error, the dependency pack was updated too soon. #566 needs to be merged. In the meantime I restart your build with the old dependency pack ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565#issuecomment-358918900:50,update,updated,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565#issuecomment-358918900,1,['update'],['updated']
Deployability,"My contribution to the discussion:; - sofa; - core (no more components are in the core except stuff like RequirePlugin and few others); - plugins (here are all the components); - sofastandard; - the pluginized version of all the modules (but at first without reorganizing them) ; - plugin1; - plugin2; - myplugin (organized as in my previous contribution); - ...; - ...; - . To me this kind of first step can be make without breaking anything in sofa and with great benefit. ; Let me explaine: the include path can have SofaStandard so that external code using the ""modules"" (eg: #include<SofaMiscFem/TheFEMILike.h>) don't need to be updated and only adding something like find_package(SofaStandard) or more specifically find_package(SofaStandardMiscFem). . The immediate benefit of that is:; - people that don't want all the stuff in SofaStandard can disable the plugin (and compile sofa in 1min). ; - people that want only the minimal set of good component component in SofaStandard compile sofa with the componentset ""light"" (and compile sofa in 3 min); - people that want the existing sofa with all the deprecated (but still working) compile it with the SofaStandard plugin and componentset ""full"" (and compile sofa in 30 min). Of course doing this easy step shouldn't prevent us from further refactoring, people that likes the SofaStandard components can re-organize and clean things. But this can be done incrementally when ones have time to devote to that. . DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/426#issuecomment-334453375:634,update,updated,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/426#issuecomment-334453375,1,['update'],['updated']
Deployability,My guess is this PR is really a kick in the 💩 ; I came up to this single line fix because Data update were looping between engine using dofs as input and forcefield and mapping....; In the list of failing test could you pick one that you know is supposed to work and I'll check what changed.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-815097407:95,update,update,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-815097407,1,['update'],['update']
Deployability,My hero! It was so frustrating to use cmake on SOFA (on Windows). Thanks a lot!. Could you tell me how you profile the cmake configuration?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277254445:125,configurat,configuration,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382#issuecomment-1277254445,1,['configurat'],['configuration']
Deployability,"My point is that the discussion is not whether or not a PR can be breaking or not...because on that everyone agrees...the conclusion is that of course a PR can be breaking.; ; The real discussion is more on:; - how do we manage breaking change to avoid messing others code base and activity because of a sudden change. On that, please have a look at PR #329 ; - what kind of integration & merge flow we can have to facilitate merging of complex/changing PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/318#issuecomment-315894097:375,integrat,integration,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/318#issuecomment-315894097,1,['integrat'],['integration']
Deployability,NFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManage,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4945,Release,Release,4945,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,NFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sof,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2437,Release,Release,2437,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"NG1 update: (v20.12 & master). <img src=""https://user-images.githubusercontent.com/11028016/106576513-842ec480-653d-11eb-91ee-7ffb3228b72f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106576614-a7597400-653d-11eb-897b-e206951575ba.png"" width=""350"" >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527#issuecomment-771480416:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527#issuecomment-771480416,1,['update'],['update']
Deployability,"Name=['BugPosition']); root.addObject(""MechanicalObject"", name=""MO"", template=""Vec3d"", position=[1, 0, 0]); root.addObject(""TestComponent"", position=""@MO.position""); root.addObject(Controller(root.MO)); ```. **Steps to reproduce**; I've put everything needed to reproduce the issue here https://github.com/jnbrunet/BugPosition. Hence, the following steps can be taken (the SOFA installation path must be changed, and SofaPython3 plugin must be installed alongside SOFA):; ```bash; export SOFA_ROOT=/opt/sofa; export PYTHONPATH=$PYTHONPATH:$SOFA_ROOT/plugins/SofaPython3/lib/python3/site-packages; ```; Then, compile and launch the scene; ```bash; git clone git@github.com:jnbrunet/BugPosition.git; cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT/lib/cmake -S BugPosition -B BugPosition/build -DCMAKE_BUILD_TYPE=Release; cmake --build BugPosition/build; python3 BugPosition/scene.py; ```; which should produce the erroneous results (random displacement isn't taken into account).; ```; (...); onAnimateBeginEvent; random_disp[0]=array([-0.01092411, -0.00742505, -0.01442109]); self.MO.position.value[0]=array([1., 0., 0.]); onAnimateEndEvent; self.MO.position.value[0]=array([1., 0., 0.]); ```. **Expected behavior**; The correct behaviour can be obtained using the GUI. In the previous example, simply adding the `gui` parameter to the scene will do the trick:. ```commandline; python3 BugPosition/scene.py gui; (...); onAnimateBeginEvent; random_disp[0]=array([-0.00746889, -0.01065234, 0.00446683]); self.MO.position.value[0]=array([ 0.99253111, -0.01065234, 0.00446683]); onAnimateEndEvent; self.MO.position.value[0]=array([ 0.99253111, -0.01065234, 0.00446683]); ```. ---------------------------------------------. ### Environment. **Context**. - System: MacOS 12.1 but reproductible on Ubuntu 20.04; - Version of SOFA: master branch ([888a159f4c](https://github.com/sofa-framework/sofa/tree/888a159f4c)); - State: install directory. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761:4140,install,install,4140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761,1,['install'],['install']
Deployability,"Necessitate to update the CI: see https://github.com/sofa-framework/ci/pull/19. [ci-depends-on https://github.com/SofaDefrost/STLIB/pull/106]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/354]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/222]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882:15,update,update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882,1,['update'],['update']
Deployability,"Needs #1408 ; OglModel recomputes its internal data on topology change. There's 2 things I need review for here:; 1. which initialization methods should be called to properly update an OglModel? Currently, I'm calling more or less the whole thing: delete buffers, then init / reinit / initVisual & updateBuffers. Not sure all of them are necessary; 2. Which datafields should be taken into consideration for a total reinit:; Ideally I'd like to trigger the full update of the OglModel only when a change in the loader triggers the recomputation: positions can vary during simulation and shouldn't trigger a reload of the component.; Edges / triangles & other topological info change when the loader changes geometry, but could also change during a topological change for instance, and in that 2nd case shouldn't trigger a reload from the loader, whose topology isn't up-to-date anymore. This component needs heavy restructuring I believe if we want to handle proper data update using callbacks, and might be a good example for other components if we do it right. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1423:175,update,update,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1423,4,['update'],"['update', 'updateBuffers']"
Deployability,"New plugins are / should soon be released, and it could be nice to get them fetchable from SOFA:; - Caribou; - BeamAdapter",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2484:33,release,released,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2484,1,['release'],['released']
Deployability,"Nice job, it is indeed faster on my computer too. ; For the artifact, it still appears at the top of the beam on the contact, at step 46 (see image) event with your modified scene (I saw only the ShewchukPCGLinearSolver that was different). . ![image](https://github.com/sofa-framework/sofa/assets/30337881/45010585-c1e3-4f89-9e9b-f201bd700a29). Would be great to know what are the difference between our compilation configurations.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640447331:417,configurat,configurations,417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640447331,1,['configurat'],['configurations']
Deployability,No need to this PR anymore...because it was for integration into stc5 branch. I will re-open a new one against master.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/836#issuecomment-444484072:48,integrat,integration,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/836#issuecomment-444484072,1,['integrat'],['integration']
Deployability,No update since two month. I close the issue unless someone want to say something more.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/318#issuecomment-331409975:3,update,update,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/318#issuecomment-331409975,1,['update'],['update']
Deployability,"No, clicking refresh does not update the values. :(",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315489270:30,update,update,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315489270,1,['update'],['update']
Deployability,"No, the PR #797 is included in this one. ; I just wanted to split both contributions to ease the review somehow. ; It compiles on my two computers, isn't it a problem with plugins? The cleaning indeed could break some not updated code.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/798#issuecomment-432562220:222,update,updated,222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/798#issuecomment-432562220,1,['update'],['updated']
Deployability,"No, we should upgrade the CI to support this PR :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-584161233:14,upgrade,upgrade,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-584161233,1,['upgrade'],['upgrade']
Deployability,Not for myself:; registerTopologicalData() add handler to the full list of handler which launch; updateTopologyHandlerGraph; updateDataEngineGraph; and add the handler between topology Data and output of handler. So register is needed after linkToTriangleDataArray methods.; Need to change all that mechanism.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2013#issuecomment-826008753:97,update,updateTopologyHandlerGraph,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013#issuecomment-826008753,2,['update'],"['updateDataEngineGraph', 'updateTopologyHandlerGraph']"
Deployability,"Not really, #461 was a quick fix.; The real fix is to update libQGLViewer to latest version.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/464#issuecomment-350731008:54,update,update,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/464#issuecomment-350731008,1,['update'],['update']
Deployability,"Not really, but only because of my lack of understanding of these integration factors :-). I'm sure this PR is fine, I was just curious. Really looking forward to our next white board meeting !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-626135738:66,integrat,integration,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-626135738,1,['integrat'],['integration']
Deployability,"Not sure if this is correct, but it seems that sofa uses the rt library (high resolution clock?) on unix, but does not explicitly specify the library when linking. Because of that, compilation may fail on some systems. This patch just makes dependency on the rt library explicit in cmake",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/19:224,patch,patch,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/19,1,['patch'],['patch']
Deployability,Not yet indeed; It would take the update / cleaning by @remibessard then we could start having it,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2484#issuecomment-1500285063:34,update,update,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2484#issuecomment-1500285063,1,['update'],['update']
Deployability,Note that the graph is not updated if a slave is added during a time step. The tab switch is still a workaround.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-964067255:27,update,updated,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-964067255,1,['update'],['updated']
Deployability,"Note: collision pipeline must be refactored if we want to reduce the ridiculous high number of calls to `getValue`. Every time there is a check between two primitives, there is a `getValue` call to `MechanicalObject::position`, `proximity` and `alarmDistance`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240:16,pipeline,pipeline,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263427240,1,['pipeline'],['pipeline']
Deployability,Nothing much ; as everybody is debugging in ReleaseWithDebugInfo mode 🤔 ; I will let it on stand-by for now.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1328#issuecomment-665128049:44,Release,ReleaseWithDebugInfo,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1328#issuecomment-665128049,1,['Release'],['ReleaseWithDebugInfo']
Deployability,Now I also have this issue for Release build on v22.06.00 of SOFA and v22.06 of SofaPython3. @guparan Is there a CI check for loading a SofaPython3 scene after a fresh SOFA build in either SOFA or SofaPython3 repo?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1212543654:31,Release,Release,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1212543654,1,['Release'],['Release']
Deployability,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4532:190,release,release,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532,1,['release'],['release']
Deployability,"OK I agree that this allows to compile Flexible without the SOFA-HighOrder. Before moving SOFA-HighOrder to the gitHub repo, do any of you know if ; there are plans to move those plugins outside of github ?. My understanding is that at some point SOFA was going to be cut into ; several pieces that could be optionally compiled. Is this still on the radar ?. Hervé. Le 05/10/2016 à 15:27, thomas-lemaire a écrit :. > yet an other option is to conditionnaly compile HighOrderTopology code ; > in Flexible based on whether the HighOrderTopology plugin is existing ; > or not (in cmakelists package_require(HighOrderTopology) if ; > (HighOrderTopology_FOUND) ... ):; > - each plugin can live in its own repository; > - no need for a third plugin; > - should work whether all the plugins are compiled in the same cmake ; > build project or are compiled/installed separately (well ; > HighOrderTopology must be available when compiling Flexible); > ; > thomas; > ; > ----- Mail original -----; > ; > > De: ""Matthieu Nesme"" notifications@github.com; > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > ; > > Hi Hervé,; > > ; > > In general, I think it is a good idea to have a repo per plugin, ; > > even if it; > > becomes more difficult to update them when the sofa core is modified.; > > But in this specific case, it would be great to add this plugin to this; > > github repo, so Flexible can still benefit from your code.; > > ; > > Another solution, could be to add a third plugin in your independent; > > repository, that would link with both SOFA-HighOrderTopology and ; > > Flexible,; > > and that would contain the high order shape functions.; > > ; > > What do you think?; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub , or mute the thread .; > ; > —; > You are receiving this because ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233:849,install,installed,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233,1,['install'],['installed']
Deployability,OK I'll update mine ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1089#issuecomment-504909034:8,update,update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1089#issuecomment-504909034,1,['update'],['update']
Deployability,"OK,; I updated the PR with a few things:; 1 / the test now checks the content of the generated files for error; 2 / Monitor has an additional data field ""fileName"" through which one can override the default path to the generated files; 3 / Monitor now respects basic coding guidelines; Looks a bit better now",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828:7,update,updated,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828,1,['update'],['updated']
Deployability,O] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManage,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5083,Release,Release,5083,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,ObjectFactory] Class already registered: SpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:11916,install,install,11916,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"Of course the PR will be breaking and we will need to update our code base. ; But this is all for the good. ; ; Clearly congratulation @SofaFramework for such high quality management of software evolution. So if I understand correctly, this will be merge into master the day after the official release of v22.06 right ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174731843:54,update,update,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174731843,2,"['release', 'update']","['release', 'update']"
Deployability,Ok after review... I closed #1012 and updated only this one as it contains the all the commit history..,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1013#issuecomment-489234802:38,update,updated,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1013#issuecomment-489234802,1,['update'],['updated']
Deployability,Ok it would be nice :+1: my point is only not to brake NG roadmap progress; Let's update about it within the next days,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1799#issuecomment-786747437:82,update,update,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799#issuecomment-786747437,1,['update'],['update']
Deployability,Ok it's fixed now. Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/ :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1891#issuecomment-790873391:38,update,update,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891#issuecomment-790873391,1,['update'],['update']
Deployability,"Ok thanks for the udpate, I was wondering where it was coming from. ; For the record this is the info from the version of visual studio express 2015 I am using. Microsoft Visual Studio Express 2015 for Windows Desktop; Version 14.0.25425.01 Update 3; Microsoft .NET Framework; Version 4.7.02046. Installed Version: Desktop Express. Visual Basic 2015 00325-20000-00000-AA919; Microsoft Visual Basic 2015. Visual C# 2015 00325-20000-00000-AA919; Microsoft Visual C# 2015. Visual C++ 2015 00325-20000-00000-AA919; Microsoft Visual C++ 2015. Common Azure Tools 1.8; Provides common services for use by Azure Mobile Services and Microsoft Azure Tools. NuGet Package Manager 3.4.4; NuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/. SQL Server Data Tools 14.0.60519.0; Microsoft SQL Server Data Tools",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/448#issuecomment-334517509:241,Update,Update,241,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/448#issuecomment-334517509,2,"['Install', 'Update']","['Installed', 'Update']"
Deployability,"Ok the PR' works, I looked at each build on jenkins...no failure...but the formatter is not launched but I think we can ignore the formatting stuff to move forward the release. @guparan @bcarrez do you agree ?. PS: the sofa dashboard doesn't like PR with weird name & symbols :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/556#issuecomment-357174976:168,release,release,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/556#issuecomment-357174976,1,['release'],['release']
Deployability,"Ok the following works: . ```c++; static std::string convert_string(PyObject* object) {; if( PyString_Check(object) ) {; // strings will be strings; return PyString_AsString(object);; }; ; if( PySequence_Check(object) ) {; std::stringstream ss;. for(Py_ssize_t i = 0, n = PySequence_Length(object); i < n; ++i) {; if(i > 0) ss << ' ';; ss << convert_string(PySequence_GetItem(object, i));; }; ; return ss.str();; }. // fallback to python string conversion; PyObject* str = PyObject_Str(object);; std::string res = PyString_AsString(str);; Py_DECREF(str);; ; return res;; }; ```. `Binding_BaseObject.cpp:`. ```c++; SP_CLASS_METHODS_END;. static struct patch {; patch() {; // set __str__ slot for BaseObject; SP_SOFAPYTYPEOBJECT(BaseObject).tp_str = [](PyObject* self) {; return BaseObject_getLinkPath(self, nullptr);; };; }; } patcher;. SP_CLASS_TYPE_SPTR(BaseObject, BaseObject, Base); ```; It does breaks some python tests in Compliant, but this is due to errors there. I can push code to another PR that does the whole thing if needed (I don't think I have push access to this one).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307775648:651,patch,patch,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307775648,3,['patch'],"['patch', 'patcher']"
Deployability,"Ok, I think you are touching on stuff which is a little bit beyond my current knowledge about Sofa. In the current implementation of the PSDE update() is triggered by the onBeginAnimationStep-event. I'm not sure update() is triggered by a change in some of the Data. I'll look into it when I check your current version. . As you said, if there's some more fundamental discussions going on it makes sense to stick to the current naming convention for consistency's sake.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406629667:142,update,update,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406629667,2,['update'],['update']
Deployability,"Ok, I've just tried to compile SOFA v21.12 with Optimus v21.12 and STLIB v21.12. I've cleanly cloned them three and configured cmake with the following : `cmake /path/to/sofa -DSOFA_EXTERNAL_DIRECTORIES=/path/to/Optimus;/path/to/STLIB` and cmake works like a charm. Didn't compile it though, but the cmake shouldn't crash at least. So I suggest you to delete your cloned repositories and clone them again and then directly checkout v21.12. . Your issue is due to the fact that you are adding the project using this macro `sofa_add_subdirectory` which didn't exist at the time. I think the closes one was `sofa_add_plugin`. But using this macro is not mandatory, you can add such plugins with `SOFA_EXTERNAL_DIRECTORIES` if you don't have to much of them... . Sometimes, cloning first master then switching branch can generate issues, if so you can use this command line instead `git clone -b v21.12 --single-branch git@github.com:sofa-framework/sofa.git`. From now, I won't provide more help on this old release, if you face anything else, I highly suggest you to update your SOFA version.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4941#issuecomment-2311917765:1004,release,release,1004,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4941#issuecomment-2311917765,2,"['release', 'update']","['release', 'update']"
Deployability,"Ok, i was actually not sure if it was not updated... or not used at all :) ; So maybe we can move faster on that one by already DeprecatedAndRemove d_verbose ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556745945:42,update,updated,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556745945,1,['update'],['updated']
Deployability,"Ok, so I will make a cuda install on my laptop this weekend to check some simulations.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/665#issuecomment-449049972:26,install,install,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/665#issuecomment-449049972,1,['install'],['install']
Deployability,"Ok, very nasty...; So I agree with your PR, we should not impose the `find_package(FFMPEG_exec)` to dependencies.; But it is not enough. We should clean this hardcoded path by installing the executable.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540045862:176,install,installing,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1177#issuecomment-540045862,1,['install'],['installing']
Deployability,"Okay, I guess we will also need to change SofaSimulationCommon and others since right now they are installing into the package SofaSimulation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540491073:99,install,installing,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540491073,1,['install'],['installing']
Deployability,"On 14/02/2017 09:29, erik pernod wrote:; >; > closed?; >; unmerged...because it is minor and I have no time to understand why it ; does not compile... I will open it again one day...; But if you are willing to you can make it work in the meantime :). > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub ; > <https://github.com/sofa-framework/sofa/pull/169#issuecomment-279639584>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/AMDyEmabTubGf2uk8Mg_N_ufzjqkfcLWks5rcWX-gaJpZM4L9dhW>.; >; > {""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/sofa-framework/sofa"",""title"":""sofa-framework/sofa"",""subtitle"":""GitHub ; > repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open ; > in ; > GitHub"",""url"":""https://github.com/sofa-framework/sofa""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@epernod ; > in #169: closed?""}],""action"":{""name"":""View Pull ; > Request"",""url"":""https://github.com/sofa-framework/sofa/pull/169#issuecomment-279639584""}}}",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/169#issuecomment-279646432:1139,update,updates,1139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/169#issuecomment-279646432,1,['update'],['updates']
Deployability,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2028:50,upgrade,upgrade,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028,5,"['Install', 'configurat', 'install', 'upgrade']","['Installer', 'configuration', 'installed', 'upgrade']"
Deployability,"On Windows, when doing INSTALL, relocatable dlls have to be copied to install_dir/bin (because there is no RPATH on Windows).; This is done by `windows-postinstall-fixup.sh` but this script is executed only if the CMake option `SOFA_BUILD_RELEASE_PACKAGE` is ON. To do: rewrite `windows-postinstall-fixup.sh` in CMake and make sure it's always executed after install.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2353:23,INSTALL,INSTALL,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2353,2,"['INSTALL', 'install']","['INSTALL', 'install']"
Deployability,On that I can contribute by installing the stylechecker on a CI machine. ; This is on my todo list before summer.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/232#issuecomment-297517107:28,install,installing,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/232#issuecomment-297517107,1,['install'],['installing']
Deployability,"On the BFM it compile perfectly!; There are just some errors related to update & doUpdate function that will need to be fixed but this doesn't come from this MR. (@EulalieCoevoet); I also test some examples and still no error for me, so it should be ok.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/834#issuecomment-441579131:72,update,update,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/834#issuecomment-441579131,1,['update'],['update']
Deployability,"One step towards continuous delivery in SOFA :tada: . This PR reworks/cleans CPack usage for release packaging and adds a new generator : [Qt Installer Framework](http://doc.qt.io/qtinstallerframework/ifw-overview.html). Very useful to unify packaging methods, it will be at first used to generate nice installers for Linux. This means no more .zip package for Linux binaries, unless you want to keep them?. Note: This PR also adds the opening of an URL after installation to ask the user to consider donating to the SOFA project. Do not hesitate to comment if you disagree with this idea. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/796:17,continuous,continuous,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/796,5,"['Install', 'continuous', 'install', 'release']","['Installer', 'continuous', 'installation', 'installers', 'release']"
Deployability,"One unit test failling : ; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4494/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/2/testReport/UnitTests.Sofa_Component/Topology_InciseProcessor_test/InciseTriangles/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1943419526:138,release,release,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1943419526,1,['release'],['release']
Deployability,Only an optimal version based on the initial values of the; stiffness vector was implemented. Need to have updated stiffnesses. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/579:107,update,updated,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/579,1,['update'],['updated']
Deployability,Only small bug fixes according to release notes so it should not be breaking.... source taken from: https://sourceforge.net/projects/qwt/files/qwt/6.1.4/; release notes: https://sourceforge.net/p/qwt/news/. Fix #1134; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1136:34,release,release,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1136,2,['release'],['release']
Deployability,Only some cleaning in:; - Class define macro; - Data and member prefix; - Move code from header to inl or cpp files. Update several plugin demo scenes. ![SpatialGridContainer_00000001](https://user-images.githubusercontent.com/21199245/66745709-13632500-ee80-11e9-9cfe-94e1a9e4d27c.png); ![SPHFluidForceField_benchmarks_00000001](https://user-images.githubusercontent.com/21199245/66745711-13632500-ee80-11e9-8382-738a86b68c3c.png); ![SPHFluidSurfaceMapping_00000001](https://user-images.githubusercontent.com/21199245/66745713-13fbbb80-ee80-11e9-98a1-ea1386f91c19.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1186:117,Update,Update,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1186,1,['Update'],['Update']
Deployability,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471:69,upgrade,upgrade,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471,3,"['install', 'update', 'upgrade']","['install', 'update', 'upgrade']"
Deployability,PR description and code updated with respect to the review!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1898#issuecomment-807081692:24,update,updated,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898#issuecomment-807081692,1,['update'],['updated']
Deployability,PR just got updated.; Several points are below this PR:; - define a new design for managing colors by component; - should the color API allow for new colors; - Should Prefab be refactored in Sofa.Core ? . → wip : PR should keep only the 2-line change,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4536#issuecomment-2022230108:12,update,updated,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536#issuecomment-2022230108,1,['update'],['updated']
Deployability,PR: first version of the integration of assimp Importer to Sofa loader structure. - Only support single mesh creation for the moment: see discussion: https://github.com/sofa-framework/sofa/issues/602; - Change all loader logs to use msg_error/warning/info; - Change in SofaKernel :; - loader that failed at init is now set to componentState Invalide.; - Add extension field in Datafilename. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603:25,integrat,integration,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603,1,['integrat'],['integration']
Deployability,"Pack/GL/glew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glut.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glxew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Pr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1453,install,install,1453,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['install'],['install']
Deployability,"Parallel implementation of `HexahedronFEMForceField`. For details, see the comments of the class `ParallelHexahedronFEMForceField`, in `ParallelHexahedronFEMForceField.h`. # Results. On a cantilever beam (`ParallelHexahedronFEMForceField.scn`) with 1911 hexahedra, after 1000 time steps:. ## Single threaded; ```; 21.1615 s ( 47.2557 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 19.42 28.17 20.23 0.83 20.23 95.51 ...Mechanical; 4 0.02 1 0.86 1.54 0.90 0.06 0.90 4.23 ....ComputeForce; 4 0.91 1 0.70 1.38 0.74 0.05 0.74 3.51 ....ComputeRHTerm; 4 1.66 1 0 0.03 0 0 0 0.02 ....MBKBuild; 5 1.66 1 0 0.02 0 0 0 0.01 .....CG-setSystemMBKMatrix; 4 1.66 1 17.79 26.51 18.56 0.78 18.56 87.62 ....MBKSolve; 5 1.68 1 17.76 26.48 18.53 0.77 18.53 87.49 .....CG-Solve; 4 20.22 1 0.01 0.04 0.01 0 0.01 0.05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177:819,Update,UpdateVAndX,819,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177,1,['Update'],['UpdateVAndX']
Deployability,"Pass extra command-line arguments for python scenes loading in a more high-level function call. Knowing that SofaQtQuick uses a different argument parser, the underlying objective of this commit is to be able to pass command-line extra args using QCommandLineParser. This feature is ready on the side of SofaQtQuick and it works (i.e. attached patch). Note that the added input parameter 'sceneArgs' in the 'load' functions is an optional parameter. [patch_pyargs_support.txt](https://github.com/sofa-framework/sofa/files/3073394/patch_pyargs_support.txt). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992:344,patch,patch,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992,1,['patch'],['patch']
Deployability,"Playing with ClangBuildAnalyzer, I noticed that BoundingBox was in the top ten of the most expensive include.; Indeed BBox was included in Base.h so everybody is including it. (and consequently Vec.h too). ```; 423823 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/Vec.h (included 828 times, avg 511 ms), ; 362330 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/BoundingBox.h (included 778 times, avg 465 ms),:; ```. Fortunately, It was painless to do a forward declaration with it.; After this update, BBox.h (and Vec.h) is much less expensive in the whole compilation process. ```; 84215 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/Vec.h (included 828 times, avg 101 ms),; 22233 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/BoundingBox.h (included 779 times, avg 28 ms)`; ```. Weirdly, it is still included a lot (because of DataTypeInfo_BoundingBox.h) but it is nevertheless much less expensive. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2728:494,update,update,494,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2728,1,['update'],['update']
Deployability,"Plugin SofaCoreAsync; https://github.com/SofaDefrost/sofa/blob/pluginSofaCoreAsync/applications/plugins/SofaCoreAsync/Sofa/Core/Async/tests/AsyncComponentTracker_test.cpp. Associate to the component a Data<'state'>. This data state can be used to keep track of component state change and propagate lazy update so that the component that depend on other can be updated appropriately. The general design was attempting to combine both synchonous and asynchronous components in the same scene so that ""normal"" Sofa object can still interact with the one using asynchronous updates. . In the following example a change in python1,2,3 file is reloaded and the ImplicitFeldRenderer & MeshGeneration are updated, each in an asynchronous way. ; ```qml; Node : {; ImplicitField : { name : ""python1"", src : ""python1.py"" }; ImplicitField : { name : ""python2"", src : ""python2.py"" }; ImplicitField : { name : ""python3"", src : ""python3.py"" }; ; ImplicitFieldRenderer : { src : ""@python1"" }; ImplicitFieldRenderer : { src : ""@python2"" }; ImplicitFieldRenderer : { src : ""@python2"" }. TetrahedralMeshGeneration : { src : ""@python1"", name = ""mesh1"" }; SurfaceMeshGeneration : { src : ""@python2"", name = ""mesh2"" }; TetrahedralMeshGeneration : { src : ""@python1"", name = ""mesh3"" }; ; MechanicalFEM3D : { src : ""@mesh1"" }; MechanicalFEM2D : { src : ""@mesh2"" }; MechanicalFEM3D : { src : ""@mesh3"" }; }; ```. Note 1: When used in asyncrhonous mode, the current approach does not guarante that a change is propagated immediately. So one change in a component at a given IDLEEvent may be updated in this or an other IDLEEvent. It depend on ""when"" the dependencies checks the validity of their input. . Node 2: To fix that a queue may be used to keep track of what still needs to be done. Looks good on paper but this kind of implementation are often much more complex than their initial drafted idea.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367274769:303,update,update,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367274769,5,['update'],"['update', 'updated', 'updates']"
Deployability,PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PolynomialRestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:11674,install,install,11674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckCollisionResponse, SceneCheckDeprecatedComponents, SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:11308,Release,Release,11308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,3,['Release'],['Release']
Deployability,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1756:293,update,updated,293,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756,1,['update'],['updated']
Deployability,Previous PR #1034 deprecating the naming in scenes and in C++ of XxxxxModel into XxxxxCollisionModel for clarity. This PR fixes all generated warnings in the code related to this deprecation. All scenes in SOFA were already updated in #1292. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1301:224,update,updated,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1301,1,['update'],['updated']
Deployability,"Previous version of libQGLViewer was not compatible with Qt6, but a recent update was released and should be OK. ; (at least it is with my setup, MSVC/Qt6.4.0); So I updated the version of libQGLViewer present in the source (good or bad, I dont know....); and restore the choice in the CMakeLists.txt of Sofa.Gui.Qt. I also removed the version in the folder name. Note that we cannot take the source as it is, as there is not CMakefile, and there were some errors with MSVC about std::min/std::max (need to remove std::, and seems it was already done with the source already in the repo). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3454:75,update,update,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3454,3,"['release', 'update']","['released', 'update', 'updated']"
Deployability,"Problem detected while using the install distribution. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2705:33,install,install,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2705,1,['install'],['install']
Deployability,Problem of configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1486:11,configurat,configuration,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1486,1,['configurat'],['configuration']
Deployability,Problem: build errors in libQGLViewer with MSVC 2015. See https://github.com/sofa-framework/sofa/pull/461; Solution (TODO): update libQGLViewer to the latest version (2.7.0).,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/464:124,update,update,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/464,1,['update'],['update']
Deployability,Project Continuous Integration : general discussion,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186:8,Continuous,Continuous,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186,2,"['Continuous', 'Integrat']","['Continuous', 'Integration']"
Deployability,"ProjectToLineConstraint is crashing when trying to do projectResponse() because its jacobian matrix member is not synchronized with its respective mechanical object (especially its size).; This problem was raised from the scene: ProjectToLineConstraint_RemovingMeshTest.scn; And it seems to be detectable only in Debug mode as the CI does not complain very often. One first fix was trying to call a method to update the Jacobian while catching the fact that a topology change event was triggered, but various problems arrived with the fact that the MechanicalObject data is not connected to the ""Data"" update mechanism. (a first draft on how to change this behavior here #1489 but stalled) . A second fix (less subtle) checks every time if the jacobian size is correct wrt to the mechanical object : #2241; Less desirable because it will check at each call but fix the problem for now. I let this issue to remember to trigger the jacobian update when detecting a topological change, once the topological change mechanism is finished.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2242:409,update,update,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2242,3,['update'],['update']
Deployability,Propagate the doUpdate() function for all engine instead of update(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/809:60,update,update,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/809,1,['update'],['update']
Deployability,Proper install of include directories in SOFA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/894:7,install,install,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/894,1,['install'],['install']
Deployability,Python and binary release of Sofa have trouble with ctypes and _dlopen,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/974:18,release,release,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/974,1,['release'],['release']
Deployability,"QTrackbarWidget is also a custom class that looks like this; ```(C++); template<int C>; class QTrackBarWidget : public QWidget {; // Q_OBJECT //Cannot declare a Q_OBJECT as the object is template; public:; typedef Data<TTrackBar<C> > MyData;. QTrackBarWidget(sofa::gui::qt::DataWidget * parent,const MyData & /*data*/) : QWidget(parent); ```. If I'm not mistaken, the result is an image Data in SOFA associated with a trackbar to update some parameter (eg. filter parameter)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2019#issuecomment-821262631:430,update,update,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2019#issuecomment-821262631,1,['update'],['update']
Deployability,Quick PR to fix the SofaPhysicsApi project; - Remove deprecated code regarding OpenGL tetrahedron. ; - FIX some bad path in cpack installation; - Change some class declaration to allow inheritance. . <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/167:130,install,installation,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/167,1,['install'],['installation']
Deployability,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964:523,release,release,523,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964,5,"['deploy', 'release']","['deployed', 'release']"
Deployability,"Quick update of the MechanicalMatrixMapper so that when the user interacts on the simulated object with the mouse, the StiffSpringForceField that is dynamically added to the scene graph gets included in the forcefield link list of the MMMApper. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/772:6,update,update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/772,1,['update'],['update']
Deployability,Re-investigate the use of Integration Factors when solving constraints,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2123:26,Integrat,Integration,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2123,1,['Integrat'],['Integration']
Deployability,Ready :+1: ; @alxbilger it would be cool to have the doc updated accordingly,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4172#issuecomment-1746395138:57,update,updated,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4172#issuecomment-1746395138,1,['update'],['updated']
Deployability,Ready but waiting the CI to be upgraded with #2251 to be sure that all tests are OK,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2240#issuecomment-880523148:31,upgrade,upgraded,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240#issuecomment-880523148,1,['upgrade'],['upgraded']
Deployability,Ready but we keep it to review on purpose to postpone its merge after stable release v22.06,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1175970858:77,release,release,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1175970858,1,['release'],['release']
Deployability,"Really good cleaning.; Should not break scenes, but could eventually break components in private plugins, but they should be easy to update.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/206#issuecomment-291868805:133,update,update,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/206#issuecomment-291868805,1,['update'],['update']
Deployability,"Recovering changes made by @olivier-roussel in his [patch](https://github.com/sofa-framework/conda-ci/blob/master/conda/recipes/sofa/patches/allow-compilation-out-of-SOFA.patch). To be noted @fredroy : in _Sofa/GUI/Qt/CMakeLists.txt_, Sofa.GL is only found in a QUIET way and it was not linked explicitely (no where `target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL)`). Could you let me know whether the proposed change seems reasonable to you. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4844:52,patch,patch,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4844,3,['patch'],"['patch', 'patches']"
Deployability,Reducing the complexity of the update of Data; Associated doc required. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/809:31,update,update,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/809,1,['update'],['update']
Deployability,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1990:184,configurat,configuration,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,"Referee: @IPeterlik . Members: @IPeterlik @remibessard @hdeling @damienmarchal @fredroy @epernod Jeremie . Main objective: provide a continuous support for validation of SOFA. Subtasks and estimated duration; - using python, based on Method for Manufactured Solutions (MMS), static linear elasticity with linear FEM in (compression and torsion with < 5% deformation); ex: TensorMassFEMForceField; - TensorMassFEMForceField : addKToMatrix, vector of E; - extend it to beams (BeamAdapter); - implement engine : plugged to compute stress data in all FEM in SOFA. Future; - write article; - contact Stefan Suwelack for integration into CAEML.org. ---. Validation solution:; - analytical; - software comparison (Abaqus); - tests; - experimental setup. cases:; - dynamic vs static; - linear elasticity with linear FEM; - metrics : displacement, stress+strain tensors",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/25:133,continuous,continuous,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/25,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,Regarding last review comments (as I'm not sure to be there for the next review):. - I would like to remove those header directly... do we have to go through the 6 months of deprecated before... ?; - Do you want me to put keep empty headers with the SOFA_DEPRECATED_HEADER macro? ; - I would keep the xxxSetGeometryAlgorithms and not put everything inside xxxSetTopologyXXX because the name Geometry make sense here to indicate we depend on the type of dof (aka mechanicalObject). Tests and scenes have been updated.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1546#issuecomment-725923633:508,update,updated,508,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1546#issuecomment-725923633,1,['update'],['updated']
Deployability,Release SOFA-NG repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/245:0,Release,Release,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/245,1,['Release'],['Release']
Deployability,Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anacon,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6422,Release,Release,6422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,Relocated plugins path is not included in installation RPATH,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1395:42,install,installation,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1395,1,['install'],['installation']
Deployability,"Remove ColladaSceneLoader plugin and its embedded old version of assimp. ; - Move class, doc and examples inside SofaAssimp plugin.; - Merge the CMakeLists and update the findAssimp with a the version provided by Assimp 5.0.; - Ensure scenes of both plugins are working with up to date version of assimp. SofaAssimp plugin still need the pluginization refresh. To be done in another PR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1360:160,update,update,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1360,1,['update'],['update']
Deployability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375 ; Update FEM:; - FastTriangularBendingSprings; - TriangularBendingSprings; - TriangularTensorMassForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2388:116,Update,Update,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2388,1,['Update'],['Update']
Deployability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - FastTetrahedralCorotationalForceField; - QuadBendingFEMForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - TriangularAnisotropicFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2390:115,Update,Update,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2390,1,['Update'],['Update']
Deployability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - HexahedralFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2384:115,Update,Update,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2384,1,['Update'],['Update']
Deployability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - QuadularBendingSprings; - TriangularBiquadraticSpringsForceField; - TriangularQuadraticSpringsForceField; - VectorSpringForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2389:115,Update,Update,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2389,1,['Update'],['Update']
Deployability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Updated components:; - DiagonalMass; - MeshMatrixMass. Also fix DiagonalMass topological changes for Quad topology and update test which was wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2391:115,Update,Updated,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2391,2,"['Update', 'update']","['Updated', 'update']"
Deployability,"Remove all CUDA plugins from default plugin list for the release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5044:57,release,release,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5044,1,['release'],['release']
Deployability,"Remove damping correction to the RHS because it is already added in the computeForce. In a Euler implicit integration scheme, the right hand side expression only contains terms coming for the internal and external forces taken at the begining of the timestep, and an inertial term constituted of the stiffness matrix, but no term coming from the constitutive damping. (see [Christian Duriez HDR](https://theses.hal.science/tel-00785118) for ref). The contribution of the damping forcefield is already taken into account through the `computeForce` call line 126, so the `b` coefficient should be put to 0 here otherwise the behavior is not correct. . This can bee reproduced by launching the scene `examples/Component/SolidMechanics/FEM/DampingForceField.scn` and putting the data `implicit` of the damping forcefield to true. This data might have been introduced to fix this error, because here we are in an implicit scheme, and setting this parameter to true when the `b` coef is equal to 1 changes the behavior. . This was introduced here : https://github.com/sofa-framework/sofa/commit/fe0ee6248971383daa4e488e80f5fe480ee85988. [ci-depends-on https://github.com/sofa-framework/Regression/pull/67]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848:106,integrat,integration,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848,1,['integrat'],['integration']
Deployability,Remove deprecated updateFlags method in TriangleModelCollision; Remove deprecated sort method in CubeModelcollision. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1201:18,update,updateFlags,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1201,1,['update'],['updateFlags']
Deployability,"Remove logs/warnings in SceneCreator_test by:; - inheriting from BaseSimulationTest instead of old api: sofa_test; - Remove sceneDump in AddCube method. Also update SofaCarving_test to use the correct header path. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2406:158,update,update,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2406,1,['update'],['update']
Deployability,"Remove most of the checks: if(CHECK_TOPLOGY). This macro is automatically set to true if SOFA is compiled in debug mode. The macro has been either:; - Remove the test and the warning/info message if not relevant. For example many getter, were sending a warning message if requested element id was out of bound before returning an ```Topology::InvalidID```. For those cases, the return value should be checked and warning could be send depending on the use. But it is not the role of a getter to send the warning.; - Remove test and let warning/error message when it is useful also in release.; - Remove the tests and sometimes also some creation buffer and keep some warning message in tricky cases. . **Result: several errors and warnings hidden in scenes are going to be revealed!** . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1352:584,release,release,584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1352,1,['release'],['release']
Deployability,"Remove un-needed includes in .h. This may results in having code that rely on these to stop compiling. To update the non-compiling code you need to addi explicitely the includes the code is actually used. . If you only need type declaration (an not definition), please use the foward declaration .h file; eg: sofa/core/fwd.h . The following one may be the one you need:; ```cpp; #include <sofa/core/behavior/BaseMechanicalState.h>; #include <sofa/simulation/Node.h>; #include <sofa/core/visual/VisualParams.h>; #include <SofaEigen2Solver/EigenSparseMatrix.h>; #include <sofa/defaulttype/TopologyTypes.h>	; #include <cstddef>; #include <string>	; #include <sofa/core/objectmodel/BaseObject.h>; #include <SofaBaseMechanics/MechanicalObject.h>; #include <sofa/core/behavior/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1764:106,update,update,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764,1,['update'],['update']
Deployability,Removing all highorder classes from the base topological classes of SOFA.; Created a new open repository for those classes at sofa-framework/plugin.HighOrder 👍 ( https://github.com/sofa-framework/plugin.HighOrder.git ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; - [ ] updated Flexible plugin to use the new plugin. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/220:635,update,updated,635,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/220,1,['update'],['updated']
Deployability,"Replace some \#ifndef by pragma, update some namespace and remove some relatives header inclusions in:; - CudaCollision; - CudaContactMapper; - CudaIdentityMapping; - CudaSubsetMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2674:33,update,update,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2674,1,['update'],['update']
Deployability,RequriedPlugin does not updates when some of its data field are changed. ; This PR implement this behavior without breaking the existing one. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1458:24,update,updates,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1458,1,['update'],['updates']
Deployability,"Revert ""Triangle numerical integration""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/256:27,integrat,integration,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/256,1,['integrat'],['integration']
Deployability,RigidMapping::getK and updateK not implemented for Rigid2Types,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5078:23,update,updateK,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5078,1,['update'],['updateK']
Deployability,SOFA v22.06 release cmake issue on MacOS,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485:12,release,release,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485,1,['release'],['release']
Deployability,"Same as PR #284 but without the unwanted merge commits. Small fix related to issue #114 . Have tested the compilation without the flag SOFA_INSTALL_RESOURCES_FILES (which is set by default), Sofa.ini and installedSofa.ini, which are necessary for build and install, are well created. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/291:204,install,installedSofa,204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/291,2,['install'],"['install', 'installedSofa']"
Deployability,Scene graph view node status is not updated when the isActive status is changed from python.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2962:36,update,updated,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2962,1,['update'],['updated']
Deployability,"Second and last task about https://github.com/sofa-framework/sofa/issues/2483. Contains #2531. Create a new plugin SofaNewmat with ; - newmat lib itself; - NewmatMatrix and NewmatVector (and their tests); - LULinearSolver (only compatible with NewmatMatrix); ; Add a ""compatibility"" layer (tricky because SofaNewmat is optional; Update ComponentChange; Remove newmat usage in image plugin. Fix #2483 . Change the template of CGLinearSolver in the BeamLinearForceField because I dont see why we would need to run it with newmat matrices. It results with a very slight difference on the DOF positions. [ci-depends-on https://github.com/sofa-framework/Regression/pull/21]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532:329,Update,Update,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532,1,['Update'],['Update']
Deployability,See #613 for updated version.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/610#issuecomment-375683767:13,update,updated,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/610#issuecomment-375683767,1,['update'],['updated']
Deployability,"See issue: https://github.com/sofa-framework/sofa/issues/338; The Rayleigh parameters (Rayleigh mass and stiffness) are used for numerical dumping in the simulation. However, most integration schemes (OdeSolvers) in SOFA use NON-ZERO default values. This commit fixes this.; The user must be aware of its dumping parameters, now : ; - default rayleighMass=0.0; - default rayleighStiffness=0.0. To avoid breaking all scenes, this PR also updates (where needed) the rayleighMass and; rayleighStiffness parameter (set to 0.1 like previous default values). NOTE : a script is available for updating all your own scenes if needed (script/update-scenes-rayleighcoeff.sh). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/350:180,integrat,integration,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/350,3,"['integrat', 'update']","['integration', 'update-scenes-rayleighcoeff', 'updates']"
Deployability,"See: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2382/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/2/artifact/parent_dir/build/scene-tests/archive/applications/plugins/MultiThreading/examples/ParallelHexahedronFEMForceField.scn/output.txt",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2409:117,release,release,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2409,1,['release'],['release']
Deployability,"Seems this PR doesn't change the algorithm, so should be non breaking. It is however weird that the pointer get changed by the solver... While this patch will work around this, I would be quite interested to know why it was happening in the first place. @fredroy , could you just change `WriteAccessor` to `WriteOnlyAccessor` so that we do not trigger a data update every time (we are overriding every entries of the position vector).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1230#issuecomment-564526435:148,patch,patch,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1230#issuecomment-564526435,2,"['patch', 'update']","['patch', 'update']"
Deployability,"Setting to WIP, trying the installation process. Edit: good thing I tried, there was a problem in a cmake.in 🤥; Back to review",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2717#issuecomment-1067824499:27,install,installation,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2717#issuecomment-1067824499,1,['install'],['installation']
Deployability,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2275:133,update,updated,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275,1,['update'],['updated']
Deployability,"Several improvments regarding principal stress computation in `TriangularFEMForceFieldOptim`:; - Add Data `d_computePrincipalStress` to force the computation no matter if stress vector is displayed or not.; - Move the computation out from the draw loop, in addForce if `d_computePrincipalStress` or `d_showStressVector` is true; - Store principal stress info into the TriangleInfo structure so it can be accessed outside from the component; - Update drawing to use arrow with color orientation.; - Add Data `d_showStressThreshold` to display only vectors above a threshold. ![image](https://github.com/sofa-framework/sofa/assets/21199245/9da6ebe5-38b7-4e3a-a37c-7d25fc8724f4). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4027:443,Update,Update,443,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4027,1,['Update'],['Update']
Deployability,"Several points here: ; - this PR might be breaking for plugin compilation (including move of files); - this PR changes the way we organize / name the code (which is good!). It would be therefore nice to rediscuss it with you both @guparan and @fredroy to all agree on the organization and merge it, but a question comes:; does this seem realistic to merge it before the release?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1189985975:370,release,release,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1189985975,1,['release'],['release']
Deployability,"Should fix Ubuntu clang: [sofa-framework/sofa#3460](https://github.com/sofa-framework/sofa/pull/3460) (see https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_clang,CI_PLUGINS=options,CI_TYPE=release/3983/console)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3468#issuecomment-1308504394:219,release,release,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3468#issuecomment-1308504394,1,['release'],['release']
Deployability,"Should fix a failing unit test: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/3799/testReport/UnitTests/. The [dynamic_cast](https://github.com/sofa-framework/SofaPython3/blob/05195cd49b6db0dd028f1163ac407d459f6156f6/bindings/Modules/src/SofaPython3/SofaConstraintSolver/Binding_ConstraintSolver.cpp#L69) failed in:; ```cpp; py::cast(dynamic_cast<ConstraintSolverImpl*>(object));; ```. This is due to the lack of key function in the class ConstraintSolverImpl. See ; https://github.com/android/ndk/issues/533#issuecomment-335977747. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3240:143,release,release,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3240,1,['release'],['release']
Deployability,Significant improvement.; Just removing msg coming in the console in release due to CTRL key pressed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1130:69,release,release,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1130,1,['release'],['release']
Deployability,"Since SofaNG, cmake was again slow to configure (especially on Windows); After investigation, the previous sofa_find_package() was nulliified in #3120 , and I dont really see why. And the associated commit message is not informative https://github.com/sofa-framework/sofa/pull/3120/commits/8a3ae2dacc1bdff9be83aee15744a37e21eb0054. Bringing it back bring the config time from ~18s to 4.5s on Windows/MSVC generator on a minimal preset (all framework + comonents+ GL + GUI); (Manjaro/ninja generator go from 4 to 2.5s); So it is quite nice all in all 🥸. Trace: (orange part is time for `find_package()`); Before: ![cmake1](https://user-images.githubusercontent.com/11028016/195506545-32c3d4db-b6b2-4500-a3fb-dce59da50c53.png); After: ![cmake2](https://user-images.githubusercontent.com/11028016/195506607-e6ede1f9-c5fd-497d-bd4f-dd4832da918a.png). Install procedure should not be impacted, as the cmake.in files are not touched. \+ this PR fixes some missing sofa_find_package() here and there. Lets see if the CI confirms if https://github.com/sofa-framework/sofa/pull/3120/commits/8a3ae2dacc1bdff9be83aee15744a37e21eb0054 was only a mistake; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382:847,Install,Install,847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382,1,['Install'],['Install']
Deployability,"Since a few updates of MSVC2019, it is not possible anymore to have at the same time a directory and a target with the same name and in the same level. ; For example, SofaBase (containing all the SofaBase targets) and SofaBase (the target). MSVC complains that it cannot create the SofaBase target and thus, it is not possible de compile it... which is a bit bothersome 🤔. So this PR moves (in an IDE-way) the target into their respective directory (SofaBase in the SofaBase directory, SofaSimulation/SofaFramework/SofaGui same). And it makes more sense to set it like that anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2239:12,update,updates,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239,1,['update'],['updates']
Deployability,"Since state accessors work closely with a mstate, it seems logical that they inherit the same bbox.; Note that the mstate must be visited before the accessor in `UpdateBoundingBoxVisitor`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2780:162,Update,UpdateBoundingBoxVisitor,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2780,1,['Update'],['UpdateBoundingBoxVisitor']
Deployability,"Since the two questions are related, I combined them together. **BoxROI minor bug**. When I use BoxROI together with RestShapeSpringsForceField, I found that everytime RestShapeSpringsForceField updates indices in recomputeIndices(), the indices stored in BoxROI disappeared. When trying to figure out the problem, I found that in BoxROI.inl, the code piece as:; ```; // Clear lists; indices.clear();; edgeIndices.clear();; triangleIndices.clear();; tetrahedronIndices.clear();; hexahedronIndices.clear();; quadIndices.clear();. pointsInROI.clear();; edgesInROI.clear();; trianglesInROI.clear();; tetrahedraInROI.clear();; hexahedraInROI.clear();; quadInROI.clear();. if(m_componentstate==ComponentState::Invalid){; return ;; }. if(!d_doUpdate.getValue()){; return ;; }; ```; The question is, if we did not requrest ""doUpdate"" in BoxROI, the whole indices are cleared. I think this is not the expected behavior for BoxROI and ""doUpdate"". I suggest put forward the code piece; ```; if(!d_doUpdate.getValue()){; return ;; }; ```; before all the clear() functions. **RestShapeSpringsForceField warning information**. I suggested to add a warning message in the function ""recomputeIndices()"" in RestShapeSpringsForceField.inl something likes:; ```; if (m_indices.empty()); {; // no point are defined, default case: points = all points; msg_warning() << ""No point are defined. Change to default case: points = all points"";; for (unsigned int i = 0; i < (unsigned)this->mstate->getSize(); i++); {; m_indices.push_back(i);; }; }; ```; The reason is this is an unexpected behaivor, and we'd better to warn the users that the result may not be as expected. I spent a whole day to locate the problem in BoxROI when I met unexpected behavior in my model. If there were this warning message, much time will be saved during debugging.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1390:195,update,updates,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1390,1,['update'],['updates']
Deployability,Small PR on the pickHandler class.; ADD: several tests on pointers != null before accessing them. ; ADD: default ray length parameter in the constructor.; UPDATE: replace most of the .h include in the header by forward classes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/522:155,UPDATE,UPDATE,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/522,1,['UPDATE'],['UPDATE']
Deployability,Small PR to :. 1. Add more tests and error messages if **ArticulatedSystemMapping** init or bwdinit failed. ; 2. Check if **articulatedCenter** has been found in **ArticulatedHieararchyContainer**.; 3. Fix warning when drawing JointSpringFF lines and Update the warning message to be more understandable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1448:251,Update,Update,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1448,1,['Update'],['Update']
Deployability,Small changes to prepare to compile with stdc++17.; * weird problem with byte keyword (introduced with std::byte); * removal of binary_function in c++17 (already deprecated in c++11 actually). Final compatibility with c++17 will need the merge of #1101 (problem with Eigen) and a small change with CMake (CMAKE_CXX_STANDARD 17); waiting for the CI to be fully compatible. EDIT: had to update googletest as well because of new STL's things.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1162:385,update,update,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1162,1,['update'],['update']
Deployability,Small patch to restore ambient component in fake sphere rendering. Was:; ![manyspheres_00000002](https://cloud.githubusercontent.com/assets/11028016/23556748/ef984e7c-002d-11e7-9346-c7208b12f44d.png). Now:; ![manyspheres_00000001](https://cloud.githubusercontent.com/assets/11028016/23556756/f77050b8-002d-11e7-948d-5605c6cd2825.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/192:6,patch,patch,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/192,1,['patch'],['patch']
Deployability,"Small update: seems like the recursive thing is not even the source of the problem. The following object is enough to cause the issue:. ```c++; class TestComponent : public BaseObject {; public:; SOFA_CLASS(TestComponent, BaseObject);; using DataTypes = sofa::defaulttype::Vec3Types;; using VecCoord = DataTypes::VecCoord;; TestComponent() : d_position(initData(&d_position, ""position"", ""Position vector"")){}. void init() override {; Inherit1::init();; ReadAccessor<Data<VecCoord>> a(d_position);; }; private:; Data<VecCoord> d_position;; };; ```; with ; ```python; root.addObject(""MechanicalObject"", name=""MO"", template=""Vec3d"", position=[1, 0, 0]); root.addObject(""TestComponent"", position=""@MO.position""); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1059834227:6,update,update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1059834227,1,['update'],['update']
Deployability,"Smoothing the syntax of PSDE:; ```python. #sofadataengine ferrait un truc du genre scanner les paramètre de la fonction, créerait des ; # data input du même nom, créerait un (ou plusieurs) data output et dans la fonction update ; # appelle myenginefunction. @sofadataengine; def myenginefunction(indata1, indata2):; return indata1 + indata2 . def createScene(rootNode):; a = rootNode.createObject(""OglModel"", name=""a""); b = rootNode.createObject(""OglModel"", name=""b""); rootNode.addObject( myenginefunction(""@a.position"", ""@b.position"") ); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380386015:221,update,update,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380386015,1,['update'],['update']
Deployability,"So I took a look at the SleepController. It simply puts context to sleep where the mechanical object has a max velocity under a certain threshold. Then wake them up again only when a collision occurs with another object that is moving. ; Three remarks : ; - Being put to sleep disables any mechanical visitor to be applied on the node and deactivates its constraint corrections. So no more computing (no system build, no integration, only collision detection); - This works well only for scenes where external interaction only arise between two objects colliding, neither by the mean of a change of external forces (dynamic vector field for instance), or of constraint state changes not managed by the collision pipeline (for instance statically defined interaction constraints such as cable constraints). ; - The code seems overly complicated for what it performs but certainly does what it says it does. I didn't try it but it looks ok. . Sincerely, I cannot see myself advising anyone to use it in their scene given the fact that the use case doesn't apply for the majority of the scenes (especially for soft robotics). So I wouldn't mind never seeing it again...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4813#issuecomment-2236872106:421,integrat,integration,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4813#issuecomment-2236872106,2,"['integrat', 'pipeline']","['integration', 'pipeline']"
Deployability,"So I tried to play a bit with CGALPlugin and realized we can use CGAL in header-only mode. So, why should we copy some dlls?; I made a branch here: https://github.com/guparan/sofa/tree/clean_cgalplugin_cmake. EDIT: here is a patch to try my changes in this branch: [cgal-plugin_fix.patch.txt](https://github.com/sofa-framework/sofa/files/2983964/cgal-plugin_fix.patch.txt)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958#issuecomment-474399758:225,patch,patch,225,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958#issuecomment-474399758,3,['patch'],['patch']
Deployability,So let Guillaume finish...; But is the autodump stuff useful or not ?; If Backtrace is not installed by default how a failing test will print anything ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/191#issuecomment-284087037:91,install,installed,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/191#issuecomment-284087037,1,['install'],['installed']
Deployability,So now the object is fully valid if the transformation's data are updated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1459:66,update,updated,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1459,1,['update'],['updated']
Deployability,So that it can update if its parent has changed,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4876#issuecomment-2269077328:15,update,update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4876#issuecomment-2269077328,1,['update'],['update']
Deployability,So this PR is merged...but the CI configuration needs to be updated to rename PLUGIN_XXX into MODULE_XXX this is the cause of the failing test on the CI.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/732#issuecomment-410245860:34,configurat,configuration,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/732#issuecomment-410245860,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,So we probably need to update our CI machines with QT5.7... @bcarrez it is for you :). EDIT: we cannot merge that before the update of CI.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/311#issuecomment-312254579:23,update,update,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/311#issuecomment-312254579,2,['update'],['update']
Deployability,"So, after discussion it was decided to avoid the #ifdef can you update that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/100#issuecomment-267002225:64,update,update,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/100#issuecomment-267002225,1,['update'],['update']
Deployability,"So, as we discussed during the dev meeting. 2 modifications:; 1. Indeed, Boost, MPFR and GMP are dependencies of CGAL library itself not of the SOFA-CGAL plugin. As those dependencies are correctly handled internally in CGAL, I removed all mention of those libraries in the config file of the plugin.; 2. There is already a .cmake at the root dir of CGAL so the findCGAL.cmake is not necessary. Sofa just need to know ${CGAL_DIR} path. And in fact on windows, when you install CGAL this env_variable is set. So it works straight forward. . @guparan can you confirm this is now ok to go?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-610868358:469,install,install,469,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-610868358,1,['install'],['install']
Deployability,"Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/ana",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10312,Release,Release,10312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,SofaDistanceGrid has been pluginized and (seems that) is now well exported at sofa install.; Closing,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1219#issuecomment-774163498:83,install,install,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1219#issuecomment-774163498,1,['install'],['install']
Deployability,SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6755,install,install,6755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; CMake Error at /usr/share/cmake-3.15/Modules/FetchContent.cmake:903 (message):; CMake step for cxxopts failed: No such file or directory; Call Stack (most recent call first):; /usr/share/cmake-3.15/Modules/FetchContent.cmake:1006 (__FetchContent_directPopulate); modules/SofaGuiCommon/CMakeLists.txt:18 (FetchContent_Populate). Configuring incomplete, errors occurred!; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeOutput.log"".; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeError.log"".; ```. As I understand there is problem with cxxopts:; ```; if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts); ```. ---------------------------------------------. ### Environment; ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic; ```. ```; gcc-11 --version; gcc-11 (Ubuntu 11.1.0-1ubuntu1~18.04.1) 11.1.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```. Thanks!; What I'm doing wrong?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:3852,Release,Release,3852,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,1,['Release'],['Release']
Deployability,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2052:115,configurat,configuration,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052,1,['configurat'],['configuration']
Deployability,SofaPython is a dependency of `image` plugin (see https://github.com/sofa-framework/sofa/blob/e47f070596028142cadd7bbbf8f45bac4f9d3215/applications/plugins/image/CMakeLists.txt#L13). The bindings can be found in https://github.com/sofa-framework/sofa/tree/master/applications/plugins/image/python. SofaPython is deprecated and must no longer be used. Instead SofaPython3 must be used. The mentioned code must be updated accordingly.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3862:412,update,updated,412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3862,1,['update'],['updated']
Deployability,SofaSimulationCore is missing its include directory when installed,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180:57,install,installed,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180,1,['install'],['installed']
Deployability,Sofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3719,install,install,3719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: JointSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid2d,Vec2d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: RigidRigidMapping<Rigid3d,Rigid3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Cl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:9033,install,install,9033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"Solve #1331 . For multi configuration projects (e.g Visual Studio), the macro was not checking if the directory was existing, and was copying the lib as the configuration name (which is obviously wrong 🐇 ); The fix creates the directory before copying (no need to check as CMake does not do anything if it already exists). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1347:24,configurat,configuration,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1347,2,['configurat'],['configuration']
Deployability,Some bug fix from my working branch. List of fix:; - **[FixedConstraint]** fix bug when several invalid indices need to be removed. Need to parse all first and remove in a second stage.; - **[SphereModel]** FIX: display of collision sphere in wireframe mode.; - **[TetrahedronSetTopologyContainer]** FIX: triangle created with bad orientation in addTetrahedronProcess method.; - **[TriangleModel]** FIX: need to check if topology has changed and update the triangles if needed before computing triangleModel BBox; - **[PointModel]** Fix pointModel crash when removing points. need to be well resized in computeboundingtree method.; - **[SofaBaseTopology]** Add a single static trianglesOrientationInTetrahedronArray in baseMeshTopology.h and remove all the different occurences (with different values) in the cpp files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/985:446,update,update,446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/985,1,['update'],['update']
Deployability,Some news from DEFROST for 17.12; - I'm still working hard one SofaImplicitField & PSL ; - Bruno will make an extra effort to finalize the PR of a SofaPython3 plugin.; - Erwan will do the same for the Communication plugin. ; And Eulalie splitted ou soft-robots plugins in a public and a private part (the pattented one) so we can release it. . And you.. what are your plan for 17.12 ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/517#issuecomment-348446764:330,release,release,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/517#issuecomment-348446764,1,['release'],['release']
Deployability,"Some scenes crash at the end (but not related to this PR):; - [testOmniDriverEmu.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=centos_clang-5,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/applications/plugins/SensableEmulation/examples/testOmniDriverEmu.scn/output.txt); - [HexahedronForceFieldTopologyChangeHandling.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/examples/Components/topology/TopologicalModifiers/HexahedronForceFieldTopologyChangeHandling.scn/output.txt). The Quater_test is also failing on CentOS but we think it could be related to the rand() bringing the angle too close to in the gimbal lock ToEulerVector in SOFA. If that's the issue, the fix is described here: http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/ and should be applied to Quater::toEulerVector (l. 573 in Quater.inl)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-676066963:201,release,release,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-676066963,2,['release'],['release']
Deployability,"Some scenes crash:; - [testOmniDriverEmu.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=centos_clang-5,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/applications/plugins/SensableEmulation/examples/testOmniDriverEmu.scn/output.txt); - [HexahedronForceFieldTopologyChangeHandling.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/examples/Components/topology/TopologicalModifiers/HexahedronForceFieldTopologyChangeHandling.scn/output.txt). The Quater_test is also failing on CentOS but we think it could be related to the rand() bringing the angle too close to in the gimbal lock ToEulerVector in SOFA. If that's the issue, the fix is described here: http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/ and should be applied to Quater::toEulerVector (l. 573 in Quater.inl). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1461:161,release,release,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1461,2,['release'],['release']
Deployability,"Something is broken here. See tests results: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1275/CI_CONFIG=ubuntu_gcc-7,CI_PLUGINS=options,CI_TYPE=release/3/testReport/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1275#issuecomment-603862893:158,release,release,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1275#issuecomment-603862893,1,['release'],['release']
Deployability,"Sorry for the delay !. First, I have some precisions regarding Fred's remark: with the modification I suggested, I see a critical performance drop in the caduceus scene, going from ~150-200 FPS before the change, to ~25 FPS after. I expect that, indeed, the barycentric mapping accesses the `m_positions` field of the `OGLmodel`, consequently causing extensive triggering of the callback at each time step. So the solution I first suggested should be discarded anyway. @hugtalbot, using the `m_restPositions` field for the callback doesn't have the same performance issue. However I believe that this field is not used in the rendering process of the `OglModel`. Or, at least, calling `initVisual()` after a change of `m_restPositions` doesn't change the visual. So this solution doesn't solve the initial issue I had. I tried to look into how the `BarycentricMapping` works in details, but I'm afraid it is a bit too complexe for me with the time I have at the moment... My idea was to find how the barycentric mapping makes sure that the visual OGLModel is updated at each time step, and mimick this. If someone is familiar with the process ?. In the meantime, regarding the specific scenario I was working on, I'm using another workaround. Instead of dynamically changing the source file of the loader, I'm creating as many loaders as mesh files I have, and I dynamically change the loader I need at a given time during the simulation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1137038775:1059,update,updated,1059,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1137038775,1,['update'],['updated']
Deployability,"Sorry fred you are right, the PR contains both the pluginization of the SofaOpenglVisual in area module/plugin and the removal of the GLEW all around and updating the code that had dependencies to SofaOpenglVisual. I updated the description.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1071#issuecomment-499398346:217,update,updated,217,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1071#issuecomment-499398346,1,['update'],['updated']
Deployability,Sorry this PR went under the radar. I actually added `FindEigen3.cmake` to the install of SOFA in #1397. ; See https://github.com/sofa-framework/sofa/blob/master/CMakeLists.txt#L74-L80. I guess we can close this PR now @jnbrunet ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-665092279:79,install,install,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348#issuecomment-665092279,1,['install'],['install']
Deployability,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1949:100,install,installation,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949,2,['install'],"['installation', 'installed']"
Deployability,"SquareDistanceMapping test fails with the introduced test : https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4897/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/1/testReport/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288223285:171,release,release,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288223285,1,['release'],['release']
Deployability,"Start work on merging the duplicated code of the mesh loader components versus helper::io::mesh loaders. See issue #42 . Basically, all code to load a mesh file directly in the topology without using a meshLoader component. For example: `<GridTopology fileMesh=""my_mesh.msh"" /> or <OglModel filename=""my_mesh.obj"" />`; go through the class: helper::io::MeshTopologyLoader which had directly some code to load several formats or was using a helper::io::meshXX to read XX file format. All this code is duplicated with the meshLoader components and with some differences (otherwise it would not be fun...). For the moment I only updated the MeshTopologyLoader and the helper::io::mesh classes to check the tests on all plateforms. ; Changes are:; - obj -> nothing (use MeshObj class); - trian -> nothing (use MeshTrian class); - vtk -> remove code from 2009 and use MeshVTK class from 2015. Still different from meshVTKLoader.; - stl -> nothing (use MeshSTL class); - gmsh -> create a MeshGmsh class and move the code in it.; - xsp -> create MeshXsp class and move the code in it.; - cgal -> remove the methods. Assume it is deprecated.; - unknown format -> the ""else"" method when format not found return false now and is set as deprecated. - Update the helper::io::mesh class to have topology buffers in order to be similar as baseMeshLoader for future merge. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/661:626,update,updated,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/661,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2314:627,release,release,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314,1,['release'],['release']
Deployability,Static solver updated by @jnbrunet and I think @IPeterlik worked on it as well; It now includes : ; - possibility to make more than one Newton-Raphson step; - correction and residual tolerance as data; - option to stop iterations when residual is growing. Uses also #pragma; A DOC page will soon be made available specific to the static solver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/950:14,update,updated,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/950,1,['update'],['updated']
Deployability,"Still some problems with the scene on the CI, probably because tkinter is not installed. ```; Python exception: ; ModuleNotFoundError: No module named 'tkinter'; ```. tkinter must be removed from the scene OR this scene should be ignored by the CI.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1103840513:78,install,installed,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1103840513,1,['install'],['installed']
Deployability,"Strange error on Mac clang: ; ```; Adding module SofaOpenglVisual; CMake Error at /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1239/mac_clang-3.5_options_release/build/cmake/SofaFrameworkConfig.cmake:76 (find_package):; Could not find a package configuration file provided by ""GTest"" with any of; the following names:. GTestConfig.cmake; gtest-config.cmake. Add the installation prefix of ""GTest"" to CMAKE_PREFIX_PATH or set; ""GTest_DIR"" to a directory containing one of the above files.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572047709:260,configurat,configuration,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1239#issuecomment-572047709,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"Super great contrib :) The as-clean-as-possible way to implement a controller. From a quick review, everything looks good to me. A few suggestions:; 1- what about adding a python-based layer (inherited class) that would, in its `__init__`, set the Data member (like the name) from the kwargs + call an eventual 'createGraph' function + print a warning if 'onLoaded' exists ;); 2- check that everything is ok with the destruction and the reference counter (maybe it is, I am not yet sure); 3- update the ControllerVariable.py example; 4- mark the SofaPython.script.Controller as deprecated",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283#issuecomment-305540410:492,update,update,492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283#issuecomment-305540410,1,['update'],['update']
Deployability,"Sure, I am including that file. My point is that to be able to include that file correctly I need to find the SofaBase package and then link against SofaBaseTopology. ; If I dont link against that target, I still can include; ```; #include <SofaBase/SofaBaseTopology/MeshTopology>; ```; which looks completely okay but it fails in a inner include; This happens because when you install SOFA in usr/local/ you get the following directory `usr/local/SofaBase/SofaBaseTopology/`; If you for example install something else in usr/local, lets say CGAL, you get the following directory `usr/local/include/CGAL` and when linking against `CGAL::CGAL` target, you get the following include dir: `usr/local/include`. ; Since you get that include, it looks like you could include `SofaBase/SofaBaseTopology/MeshTopology.h`, but this fails as in reality you should include `SofaBaseTopology/MeshTopology.h`. If you are going to create extra directories in usr/include when installed, I would suggest naming them in lowercase, as for example Eigen does. When you install Eigen it creates the following structure `usr/local/eigen3/Eigen` so even if you add `usr/include` to you include dirs, you still know that you shouldn't include `eigen3/Eigen/Dense.h`. . Also, its hard to know in which cmake package and in which target each file is. I would suggest creating, for example, some global targets:; Sofa::Sofa would link against everything; SofaBase::SofaBase would link against everything in SofaBase package; SofaBase::SofaBaseTopology would link only against the SofaBaseTopology; Probably this would simplify linking against SOFA in general",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1288#issuecomment-607161514:378,install,install,378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1288#issuecomment-607161514,4,['install'],"['install', 'installed']"
Deployability,"Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901:842,update,updated,842,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901,1,['update'],['updated']
Deployability,T and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3387,install,install,3387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,TODO (to be discussed):. - [ ] Add a CI to https://github.com/sofa-framework/CSparseSolvers; - [ ] Add CSparseSolvers to the list of shipped plugins with the release (https://www.sofa-framework.org/download/),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4994:158,release,release,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4994,1,['release'],['release']
Deployability,TODO:. - [x] update cxxopts version from 2.2.1 to 3.1.1; - [x] add command line argument (`hideProgressBar`); - [x] add lib license,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1736889249:13,update,update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1736889249,1,['update'],['update']
Deployability,"TODO:; - ~~check removed functions and insure compatibility layer~~; - ~~new creation mechanism of GravityForceField~~; - ~~self, GravityForceField checks if one is already here~~; - ~~have a callback and save the norm : if 0 exit all loops~~; - ~~what happens if no mass for GFF~~; - ~~update dates in messages (v22.12 -> v23.12)~~; - ~~update PR description~~; - test when a node is added. One issue remains in my tests :; - simulation starting without gravity, and then gravity is added; - mass added using python, since no init, the link in GravityForceField to the local mass is no performed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1238134724:287,update,update,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1238134724,2,['update'],['update']
Deployability,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4266:352,install,install,352,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266,1,['install'],['install']
Deployability,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4257:268,integrat,integration,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257,3,"['integrat', 'release']","['integration', 'release']"
Deployability,Targets are built with debug version of runtime library in debug configuration; under MS Visual Studio. This is enabled with /MDd compiler flag. Missing this; flag for NVCC generated object files results in linker fails due to different; versions of runtime libraries. The problem is resolved by explicitly setting compiler options for debug build; under Windows. The solution is given only for Windows and only for MSVS because; it's the only officially supported by NVidia compiler on this platform. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/300:65,configurat,configuration,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/300,1,['configurat'],['configuration']
Deployability,"Testing this with the Visual Studio compiler, on my (getting old) desktop (4 cores, 16GB RAM, Windows) I obtained :. ```; - MSVC/debug: 23:52; - MSVC/debug/pch: 14:50; - MSVC/debug/unity: 15:10; - MSVC/debug/pch+unity: 12:46. - MSVC/release: 34:44; - MSVC/release/pch: 23:51; - MSVC/release/unity: 28:52; - MSVC/release/pch+unity: 23:52; ```. So this gives me a 20 to 50% decrease in build time (:+1:), and I would say that performances obtained either with unity, pch, or both are comparable.; Aside from that, when using the unity build, I get only one error while compiling SofaMeshCollision (for multiply defined symbols)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404:233,release,release,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404,4,['release'],['release']
Deployability,"Tests (2) I think are failing. We could check in other PRs if the tests failing for them as well; - constraint.FrictionContact_VelocityConstraints.scn; - examples/Components/constraint.InextensiblePendulum.scn. (see [CentOS here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1992/CI_CONFIG=centos_clang-5,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/))",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1992#issuecomment-828294302:345,release,release,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992#issuecomment-828294302,1,['release'],['release']
Deployability,"Thank Mathieu for this pull-request,. It seems interesting and at a first sight I would use your approach internally to a component to implement fine-grain update in the reinit function.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/60#issuecomment-262620090:156,update,update,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/60#issuecomment-262620090,1,['update'],['update']
Deployability,"Thank for your feedback, . As you I don't understand the SofaKernel/SofaFramework stuff and I'm always searching for the right component in the wrong place so I fully support you on that, the reason is that Misc vs Advanced vs NG have different meaning for different person so it is a totally arbitrary segmentation. . But I'm not really talking about this here. What I have in mind is more or less orthogonal to this aspect (and it is fully compatible with the existing scheme or one you could define in the future grouping stuff like Qt). What I would like to discuss is more about how do we management the components life-time (from integration to deprecation) and not where to put them. I'm not sure I'm very clear sorry for that. . Here is our working branch: ; https://github.com/SofaDefrost/sofa/tree/deprecating_components. You can see there that there is no more CMakeLists than what we have now (or what we could have in some future if some serious cleaning and refactoring is done to organize the component 'à la Qt'...but I have no time for that ;)). . The goods I see of the proposed approach, in addition to be orthogonal to the other concerns, is that it is very progressive. It change nothing for existing user of Sofa while at the same time we can progressively deprecated components from Sofa by just moving them from one set to one other (and updating the scenechecker). In a symetric way we can also progressively integrate in the core set of components the one that have been ""elected"" by the SofaNG workgroup. And for the other component...well nothing change. . My dream is that by doing so we could small step after small step, remove 50% of the components that should be deprecated and that, combined with the pluginization lighten sofa.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332175148:636,integrat,integration,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332175148,2,['integrat'],"['integrate', 'integration']"
Deployability,"Thank you @damienmarchal :-); It would be better to create the integration branch with these commits instead of merging in master, don't you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/429#issuecomment-333493357:63,integrat,integration,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/429#issuecomment-333493357,1,['integrat'],['integration']
Deployability,Thank you @fangzhouzisb for raising this again and your investigation.; Unfortunately I didn't had time to work on that issue specifically and I'm not expert of the constraint resolution pipeline. But I'm in a middle of a deadline involving the Geomagic plugin and I also found several wrong behavior that I'm trying to fix. ; I'm going to try your fix and merge all that in one PR. maybe @hugtalbot could you poke someone expert in FreeMotion and constraint pipeline to see if this fix will have side effects?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1148#issuecomment-533503989:187,pipeline,pipeline,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1148#issuecomment-533503989,2,['pipeline'],['pipeline']
Deployability,"Thank you @ziqiu-zeng for the PR, I can see I did some mistake in the compat files 😬. > Enable compilation with cuda plugins: SofaAsyncSolvers, SofaCUDALDI, SofaCUDASolvers, SofaCUDADev Please also update the plugins; > . Unfortunately, these plugins are private plugins from the mimesis team so we cannot access/fix/update them 🤔",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2883#issuecomment-1102753225:198,update,update,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2883#issuecomment-1102753225,2,['update'],['update']
Deployability,"Thank you Erik!; Indeed, we are not installing enough in our CI. Continuous delivery could be a nice task to start in the future (after our Jenkins 2 migration). 😉",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/194#issuecomment-284767994:36,install,installing,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/194#issuecomment-284767994,2,"['Continuous', 'install']","['Continuous', 'installing']"
Deployability,"Thank you for this PR, it highlights a more serious bug when adding elements in TopologySubsetData. A PR to fix the TopologySubsetData is coming, then we will update this PR to adapt UniformMass with the good callbacks. Right now the callback on PointRemoved event proposed in this PR will crash as the TopologySubsetData already has an internal mechanism to update its size. So you perform the deletion twice.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1097837525:159,update,update,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1097837525,2,['update'],['update']
Deployability,"Thank you for your report @louise-scherrer . This segmentation fault is indeed a bug, and should be prevented. Here is the call stack to the fault:. ```; -> return m_trianglesAroundVertex[i];; const MeshTopology::TrianglesAroundVertex& MeshTopology::getTrianglesAroundVertex(PointID i); bool LocalMinDistance::testValidity(Point &p, const Vector3 &PQ); int LocalMinDistance::computeIntersection(Point& e1, Point& e2, OutputVector* contacts); int MemberElementIntersector<Point, Point, LocalMinDistance>::intersect(core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, DetectionOutputVector* contacts); void BruteForceDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void NarrowPhaseDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void DefaultPipeline::doCollisionDetection(const helper::vector<core::CollisionModel*>& collisionModels); void PipelineImpl::computeCollisionDetection(); ...; void CollisionAnimationLoop::computeCollision(const core::ExecParams* params); void FreeMotionAnimationLoop::step(const sofa::core::ExecParams* params, SReal dt); ```. I'll try to further look into this. We should try to find the best place to prevent this kind of fault without impacting too much the computation time.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329:966,Pipeline,PipelineImpl,966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329,1,['Pipeline'],['PipelineImpl']
Deployability,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:295,Install,Install,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,2,"['Install', 'install']","['Install', 'install']"
Deployability,"Thank you for your update @nhnhan92 ; I added two reviews in the code. Regarding the license, we need the SOFA header to be added in order to display the official license of the project. If this is not possible, an alternative would be to create a dedicated plugin which could have its own open-source license. Finally, a last question would be : would it be possible to have a regression test comparing your material with a analytical/manufactured solution?. Thanks again for this nice piece of work.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-776748349:19,update,update,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-776748349,1,['update'],['update']
Deployability,"Thank you very much for your development. Recently, I had the opportunity to use the plugin you developed, but I found that the latest version of the plugin corresponds to SOFA v21.12, while the latest version of SOFA is v24. So, may I ask if you can update this plugin. Also, since SOFA has developed a compiled version, may I ask how to use this plugin when using the already compiled version of SOFA? We look forward to your prompt reply!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4934:251,update,update,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4934,1,['update'],['update']
Deployability,"Thank you. I have successfully run it on my laptop (MAC M2 chip with qt5).; I have modified both `.bashrc` and `.zshrc` with define the `Qt5_DIR` but it does not change the value in `cmake-gui`.; Thus, I modified the `QT5_DIR` in `cmake-gui` directly and it plays well.; Before that, it has a small error, like `Imported target ""tinyxml"" includes non-existent path`; I deleted the default one in `/usr/local/lib` and modified the `TinyXML_DIR` with the path installed by `homebrew`. Anyway, Thanks a lot.; <img width=""1099"" alt=""sofa"" src=""https://user-images.githubusercontent.com/56861752/210767352-6f43621e-1559-40da-a15d-cd28a18945ca.png"">",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159:458,install,installed,458,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372086159,1,['install'],['installed']
Deployability,Thanks @damienmarchal . I guess you tried to run the tests on SP3 to see if your patch was fixing the original issue?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1668#issuecomment-748716799:81,patch,patch,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1668#issuecomment-748716799,1,['patch'],['patch']
Deployability,Thanks @fredroy. Uninstalling qt6 solved the problem. Will SOFA be compatible with an installed version of qt6 in the future?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916#issuecomment-800096466:86,install,installed,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916#issuecomment-800096466,1,['install'],['installed']
Deployability,Thanks @hugtalbot for this PR !. Were there any example scenes in the sofa/examples folder that would need to be updated and maybe move in this plugin?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1659#issuecomment-743116925:113,update,updated,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1659#issuecomment-743116925,1,['update'],['updated']
Deployability,Thanks @marques-bruno !; Could you confirm that your clang-format file complies with [the astyle configuration](https://github.com/sofa-framework/sofa/blob/master/tools/astyle/sofa.astyle)?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2884#issuecomment-1103588809:97,configurat,configuration,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2884#issuecomment-1103588809,1,['configurat'],['configuration']
Deployability,"Thanks @sergeiNikolaev, I just updated my first comment with a new screenshot 😉",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/369#issuecomment-324312876:31,update,updated,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/369#issuecomment-324312876,1,['update'],['updated']
Deployability,Thanks Fabian for the quick update of the PR...; [ci-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-302614206:28,update,update,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-302614206,1,['update'],['update']
Deployability,Thanks a lot for your contribution @dennis2society ; Last check using the MacOS continuous integration. [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4198#issuecomment-1746423490:80,continuous,continuous,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4198#issuecomment-1746423490,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"Thanks again for this nice contribution @nhnhan92 ; Sorry I had prepared many similar feedback as @epernod so, some might be duplicated. A more general remark, could you point us out the documentation you used to write this code please?; Do you have an idea of when you would plan to consider rotations around the z axis?; I also noticed in this paper typical tests for testing accuracy: https://sci-hub.se/10.1007/s00366-020-00974-4 it would be great to get a similar test for the continuous integration!. If this is too much questions, we can discuss about this live if you'd like",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773359209:482,continuous,continuous,482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773359209,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,Thanks erwan for the test.; The warning is also there in release. Maybe the problem is specific to Thomas application. ; Each application has to define and set-up its way to handle the messages. Have a look in runSofa on how it is one.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328104201:57,release,release,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328104201,1,['release'],['release']
Deployability,"Thanks for replying, actually it worked, when I used the dll files of binary release of SOFA v23.06, But there was some issue when I load the demo scene of caudeus.scn, Here are the errors which were printed on the console of Unity editor:. ```; SofaContext::OnDestroy stop called.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:251); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContext::OnDestroy stop now.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:256); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext.Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr, Boolean&). Start: 'VisualEye'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceExcep",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:77,release,release,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['release'],['release']
Deployability,"Thanks for the answer,. Actually we are using c++17 in our plugins since years. . The problem is that not having sofa supporting c+17 means that when we want to make PRs to integrate some features into the sofa master we have to convert all the code to c++11. As it was agreed to allow Sofa to support c++17 a year ago I think it would be nice to have it asap, as it would free the contributors from reverting their codebase to c++11 to make PRs. . So good luck to Guillaume.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-593389797:173,integrat,integrate,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-593389797,1,['integrat'],['integrate']
Deployability,Thanks for the heads up @epernod .; I just updated [my CLangFormat config](https://gist.github.com/pedroperrusi/f85f0d0db94a2b046716ec0e759c3550) to use Allman break before brackets as the [Guidelines](https://github.com/sofa-framework/sofa/blob/master/GUIDELINES.md) request.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2020#issuecomment-822360243:43,update,updated,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2020#issuecomment-822360243,1,['update'],['updated']
Deployability,Thanks for the patch.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-529117207:15,patch,patch,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1134#issuecomment-529117207,1,['patch'],['patch']
Deployability,"Thanks for the review @alxbilger, @epernod. I integrated your remarks.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3020#issuecomment-1150340086:46,integrat,integrated,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3020#issuecomment-1150340086,1,['integrat'],['integrated']
Deployability,"Thanks for the review @alxbilger,. I integrates your comments.; More generally do you have any opinion on how we could improve the exceptions/component error in Sofa ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-927720383:37,integrat,integrates,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-927720383,1,['integrat'],['integrates']
Deployability,"Thanks for the tip! It's been some time since I've used `git bisect`, so I might be mistaking, but for me the only way to judge if a commit is 'good', is to recompile and test the scene I was mentioning at each iteration of bisect, right ? In which case the process could take a bit of time... I'll keep you updated if I go through !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332408866:308,update,updated,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332408866,1,['update'],['updated']
Deployability,"Thanks for vigilance @hugtalbot. @lamriaimen as you can see in the following report, most of the deprecation warnings are in targets that you probably did not enable. I suggest that you activate in CMake ""internal"" plugins (the ones provided with the sources in `applications/plugins`), and I take care of the external plugins (such as ModelOrderReduction). https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4771/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/13/FullBuildWarnings-Clang/category.2119183113/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4771#issuecomment-2182125913:471,release,release,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4771#issuecomment-2182125913,1,['release'],['release']
Deployability,"Thanks for your detailled report. ; This definitely looks like a bug of SOFA related to DAGNode; we don't have centOS on our CI yet, but we will put a Centos7 config on our continuous integration system and look into this problem.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/127#issuecomment-271823673:173,continuous,continuous,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/127#issuecomment-271823673,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,Thanks for your reply. I have installed the following docker images according to https://hub.docker.com/r/sofaframework/sofabuilder_ubuntu/tags.; sofaframework/sofa_nightly_ubuntu master-standard 1feb9eeaf1ab 12 hours ago 3.06GB; sofaframework/sofabuilder_ubuntu latest fe182d39bb54 5 days ago 8.65GB; sofaframework/sofabuilder_ubuntu v23.06 ca308031fc67 7 weeks ago 8.62GB; My question is I do not how to runSofa in the docker container. Do you have any suggestions how to use the sofa docker images?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4230#issuecomment-1757833241:30,install,installed,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4230#issuecomment-1757833241,1,['install'],['installed']
Deployability,"Thanks, that's a start but not quite refactored. Here is a proposal (not tested):; ```cpp; int BatchGUI::mainLoop(); {; if (groot); { ; bool infiniteLoop = (nbIter == -1);. if (infiniteLoop); { ; msg_info(""BatchGUI"") << ""Computing "" << nbIter << "" iterations."" << msgendl;; }; else; {; msg_info(""BatchGUI"") << ""Computing infinite iterations."" << msgendl;; }. sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; msg_info(""BatchGUI"") << sofa::helper::AdvancedTimer::end(""Animate"", groot.get()) << msgendl;; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());; sofa::simulation::Visitor::ctime_t rtfreq = sofa::helper::system::thread::CTime::getRefTicksPerSec();; sofa::simulation::Visitor::ctime_t tfreq = sofa::helper::system::thread::CTime::getTicksPerSec();; sofa::simulation::Visitor::ctime_t rt = sofa::helper::system::thread::CTime::getRefTime();; sofa::simulation::Visitor::ctime_t t = sofa::helper::system::thread::CTime::getFastTime();. signed int i = 2; // one simulation step is animated above; while(infiniteLoop || i <= nbIter); {; sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());. if(infiniteLoop && i % 1000 == 0 || i == nbIter); {; t = sofa::helper::system::thread::CTime::getFastTime()-t;; rt = sofa::helper::system::thread::CTime::getRefTime()-rt;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)t)/((double)tfreq) << "" s ( "" << (((double)tfreq)*i)/((double)t) << "" FPS)."" << msgendl;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)rt)/((double)rtfreq) << "" s ( "" << (((double)rtfreq)*i)/((double)rt) << "" FPS)."" << msgendl; ; ; if(infiniteLoop); {; msg_info(""BatchGUI"") << ""Press Ctrl + C (linux)/ ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378645175:678,update,updateVisual,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378645175,1,['update'],['updateVisual']
Deployability,"That's an interesting explanation @fjourdes and it seems you raise an issue to solve if we need an efficient way to manage points/vertices/whatever in the MechanicalObject.; However as you say, TopologyData is actually NOT used in MechanicalObject. Therefore it is totally safe to comment/remove `#include SofaBaseTopology/TopologyData.inl` . I assume that it was forgotten when people attempted to use the new topology engine system for MechanicalObject (and unfortunately gave up). A PR should be issued with the removal, in order to be sure that everything does not change at all (I checked on my setup and the tests ran smoothly; but it would be better to test with the ""options"" configuration)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295322091:684,configurat,configuration,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295322091,1,['configurat'],['configuration']
Deployability,"That's great !. An improvement would be to release the GIL also in the sofa binded functions : when a binding is called, it should release the GIL, do its potentially costly C++ stuff then acquire the GIL back to safely return in the python script.; This way, we release even more the pressure on the GIL and we can do other things in another thread ... even loading another sofa python scene from another C++ thread.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313536191:43,release,release,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313536191,3,['release'],['release']
Deployability,"That's were it goes non-logical...; Historically, in SOFA we have:; ```; SofaFramework package; SofaCore: SofaKernel/framework/sofa/core; SofaDefaultType: SofaKernel/framework/sofa/defaulttype; SofaHelper: SofaKernel/framework/sofa/helper; SofaSimulationCore: SofaKernel/framework/sofa/simulation; SofaSimulation package; SofaSimulationCommon: SofaKernel/modules/SofaSimulation/SofaSimulationCommon; SofaSimulationGraph: SofaKernel/modules/SofaSimulation/SofaSimulationGraph; SofaSimulationTree: SofaKernel/modules/SofaSimulation/SofaSimulationTree; ```. So by just changing the install dir of SofaSimulationCore we will retrieve consistency between install architecture and CMake packages.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540495837:579,install,install,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540495837,2,['install'],['install']
Deployability,"The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1267755068:23,install,install,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1267755068,2,"['INSTALL', 'install']","['INSTALL', 'install']"
Deployability,"The MechanicalOperations (mops) already had the method `multiVector2BaseVector` that allows us to fill a BaseVector (one continuous memory vector) from a multi vector (group of vectors contained inside mechanical objects). However, the were no way to do the inverse (build a multi vector from a continuous vector) beside creating a new visitor, which is now done automatically by the mops. This PR is only adding a new method, it is non-breaking. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1248:121,continuous,continuous,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1248,2,['continuous'],['continuous']
Deployability,The PR is all right to me. . In the recent pr experiment I'm doing I tend to have a combo like this one; ```cpp; sofa::core::objectmodel ; {; class BaseObject;; typedef sofa::core::sptr<BaseObject> BaseObjectSPtr ; }; ```; It is much more easier to update the code with mass replacement of BaseObject::SPtr with BaseObjectSPtr.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769773114:249,update,update,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769773114,1,['update'],['update']
Deployability,"The PSDE works similar to a function block in Simulink or comparable software. The user can define a block (a PSDE) declaring its Inputs, Outputs (I/Os) and its behavior using Python alone. It has some similarities with the ""PythonScriptController"" (PSC). The two main differences are:. - PSDE-objects are not triggered by events (not conceptually at least). Rather, the functionality should be implemented in the update() function of the associated script, which is called once per simulation frame. ; - I/Os can be added directly to the object inside the parse() function of the PSDE-object. Linking using the '@'-syntax also works. Therefore, the PSDE-object behaves like any other object that has I/Os (or Data in general). Inside the script these newly defined I/Os can be accessed as members of the object, providing an easy syntax. You can think of the PSDE as a possibility of subclassing the Sofa 'DataEngine' in a scripted way. In the second example provided it is shown how a versatile ROI functionality can be implemented with the help of the PSDE. Two examples with some documentation are provided in: ; applications/plugins/SofaPython/examples/PSDEExamples/. Example of use (01-basic/PSDEBasic.pyscn):; ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-; import Sofa; import os. path = os.path.dirname(os.path.abspath(__file__))+'/../../../../../../share/mesh/'; ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename=path+'liver.vtk'); rootNode.createObject('PythonScriptDataEngine', name='PSDE', filename=""DataEngine.py"", classname=""MyDataEngine"")	 . ```; Example for DataEngine class in Python (01-basic/DataEngine.py):. ```python; class MyDataEngine(Sofa.PythonScriptDataEngine): ; ; def parse(self): ; # this is the correct place to define inputs and outputs! (linking will not work in init() for instance); self.addNewInput('Positions',datatype='p',value='@loader.position') ; self.addNewOutput('NumPoints',datatype='d', value='0') . de",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/583:414,update,update,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/583,1,['update'],['update']
Deployability,"The Qt application is highly slowed down when the profiler window is displayed. The reasons:. - The tree is updated at each frame from scratch: 1) clearing the tree is time consuming, 2) building the widget tree is time consuming and 3) converting all the data (double) to `QString` is time consuming. I am not sure it is necessary to update the tree at each frame. We would need to find another mechanism (for example only when the button `Animate` is unpressed).; - The chart is updated at each frame from scratch",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2142:108,update,updated,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2142,3,['update'],"['update', 'updated']"
Deployability,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:391,install,installed,391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154,3,['install'],['installed']
Deployability,"The SofaPython plugin is now outdated and based on python2. . As python3 already breaks the API, updating the SofaPython plugin for python3 is an opportunity to also refactor the whole binding code. . Stuff I would like to have.; Pythonic way to manipulate data; ```python; c = object1.addObject(""MechanicalObject"", position=[0,0,0]*1000); len(c.position); for i in c.position:; print i; c.position += [1,0,0]; c.position[2] += [1,0,0]; c.position[2,0] += 2; c.position[1:10] = [1,0,0] ; ...; ```. Numpy exposure of data; ```python; c = object1.addObject(""MechanicalObject"", position=[0,0,0]*1000). ## Read access (copy-less) using toarray(); p = c.position.toarray(); o = numpy.ones((len(c.position), 3))) ; j = p + o. ## Write access (copy-less), the data counter is updated after the 'with' block; with c.position.writeable() as w:; o = numpy.ones((len(c.position), 3))) ; w += o ; w *= 2.0; ```. Wrap around types (copy-less) to typify the data fields on demand; ```python; # syntax 1; c = o.showColor.as(RGBAColor); # syntax 2; c = RGBAColor(o.showColor); c.setFromHSC(1,2,3); c.setFromHSV(1,2,3); ```. Implement your own ForceField in python:; ```python; class MyForceField(Sofa.Core.BaseForceField):; def __init__(self, *args, **kwargs):; Sofa.Core.BaseForceField.__init__(self, *args, **kwargs); ; def init(self):; self.refx = self.position.toarray().copy(). def addForce(self, m, f, x, v):; n = numpy.ones((len(self.position),1)); f = (self.refx-x) * 2 + n; ```; ; To test the binding you need to de-activate SofaPython and activate SofaPython3. ; Then; - runSimu.py to launch a sofa simulation from the command line eg: ; python3 runSimu.py mySimulation.py; - or runSofa. . General guidelines:; - Fix existing API consistency issues; - Improve the performance of the binding by supporting supporting the different python protocols (sequence, buffer+memoryview, copy-less mechanism).; - unified data access and API.; - implementation is currently done with pybind11 and cython.; - modular des",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/771:769,update,updated,769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/771,1,['update'],['updated']
Deployability,"The WIN32 implementation is lowering the case of the given path. This is; not consistent with other case insensitive OS like macos and is discussed in:; https://github.com/sofa-framework/sofa/pull/250. In this PR I deprecate this 'lowering' behavior, adds a dedicated message & I updated; the calling point all around Sofa. Code updated shouldn't print any message but un-touched one should continue working as usual and prints the deprecated message to indicate to user they must update. CHANGELOG:; - [SofaKernel]; - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior. ; . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/264:280,update,updated,280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/264,3,['update'],"['update', 'updated']"
Deployability,"The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458:152,release,release,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458,1,['release'],['release']
Deployability,"The abstract class `BaseNonLinearMapping` is introduced. All mappings from the folder, except `RigidMapping`, inherit from `BaseNonLinearMapping`. The class relies on the delegate pattern to simplify the implementation of non-linear mappings. All the affected mappings relied on the same design, so it made sense to factorize common code in a base class. Breaking because I removed some aliases, made some methods final etc. What I would like for a next work is to factorize the 3 methods `buildGeometricStiffnessMatrix`, `applyDJT` and `updateK` (if possible). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5006:538,update,updateK,538,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5006,1,['update'],['updateK']
Deployability,"The added function is used in a few places in plugins I would like to make available in addition to the ROS connector. It is not specifically tied to the multithreaded collision pipeline, but it is potentially useful independent of the relation to the plugins in question, and easy to patch into a core class as it introduces no further dependencies on additional modifications.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1383#issuecomment-628533144:178,pipeline,pipeline,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1383#issuecomment-628533144,2,"['patch', 'pipeline']","['patch', 'pipeline']"
Deployability,"The binaries from the sofa-framework.org website were compiled using Ubuntu20.04, which got a glibc update.; Unfortunately, it is not possible to run executables compiled with a glibc version newer than the one on your system...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3169#issuecomment-1196232646:100,update,update,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3169#issuecomment-1196232646,1,['update'],['update']
Deployability,"The broken tests are caused by new error messages introduced by converting serrs into msg_errors. the number of errors should be updated in the tests. @epernod has a waiting PR doing just that, so I suggest that we merge and wait for erik's fixes in his own PR, as he suggested himself ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916#issuecomment-461874062:129,update,updated,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916#issuecomment-461874062,1,['update'],['updated']
Deployability,"The case arises mostly because of running runSofa from a build directory but you set SOFA_ROOT. It will then tried to load plugins from the install afterwards, etc..., leading to stuff like:. ```; [WARNING] [ObjectFactory] Default template for class DynamicSparseGridGeometryAlgorithms already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:140,install,install,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,1,['install'],['install']
Deployability,"The compile definition SOFA_LIBSUFFIX is missing when compiling in Debug mode. Consequently, the loading of the SOFA plugins failed when executing ""runSofa_d"" or ""runSofa2_d"", because it tries to load the libs without considering the ""_d"" suffix in the filenames. . Here is a quick patch from me to fix the issue. But maybe it exists a better solution. Note: My CMake version is 3.14.5. ```diff; From 9ea7a808e24ad1311427e4907e179e88cf7c6acf Mon Sep 17 00:00:00 2001; From: Antonin Bernardin <antonin.bernardin@inria.fr>; Date: Fri, 20 Dec 2019 18:36:29 +0100; Subject: [PATCH] Quick fix about missing compile definition SOFA_LIBSUFFIX. ---; SofaKernel/modules/SofaHelper/CMakeLists.txt | 5 ++++-; 1 file changed, 4 insertions(+), 1 deletion(-). diff --git a/SofaKernel/modules/SofaHelper/CMakeLists.txt b/SofaKernel/modules/SofaHelper/CMakeLists.txt; index b0fd0ce828..794b0edb89 100644; --- a/SofaKernel/modules/SofaHelper/CMakeLists.txt; +++ b/SofaKernel/modules/SofaHelper/CMakeLists.txt; @@ -334,7 +334,10 @@ endif(); # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; -set_property(SOURCE system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ); +#set_property(SOURCE system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ); +if(${CMAKE_BUILD_TYPE} STREQUAL ""Debug""); + add_compile_definitions(SOFA_LIBSUFFIX=_d); +endif(); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_HELPER""); set_target_properties(${PROJECT_NAME} PROPERTIES DEBUG_POSTFIX ""_d""); set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ""${SOFAFRAMEWORK_VERSION}""); -- ; 2.20.1; ```; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1235:282,patch,patch,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1235,3,"['PATCH', 'configurat', 'patch']","['PATCH', 'configuration', 'patch']"
Deployability,"The component `DefaultCollisionGroupManager` manipulates the scene graph structure, by creating nodes, and moving nodes or objects. It happens when there are contacts.; The scene graph is correctly updated, but the tree in the runSofa Qt panel is not correctly updated according to the new graph structure.; Here is an example:; ![Capture d’écran du 2021-05-06 23-25-18](https://user-images.githubusercontent.com/10572752/117368218-80efff80-aec3-11eb-9169-44da8211f75c.png); In the screenshot, we can see that the root node has only one child node in the Qt panel (`SaladBowl`), but it has two child nodes in its Data `child` (`SaladBowl` and `collision1`). `collision1` is created by `DefaultCollisionGroupManager` after a contact and should contain other nodes and objects.; The issue arises in `examples/Tutorials/Collision/MultipleObjectsDynamicCollisionGroups.scn` where I took the screenshot, but also in other scenes with a `DefaultCollisionGroupManager`. Note: `DefaultCollisionGroupManager` is optional in a scene.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2066:198,update,updated,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2066,2,['update'],['updated']
Deployability,"The crash in distanceFieldFilter.scn is no longer here. It makes sense because this PR has nothing to do with the crashing code (but we never know...). Another crash on Windows appeared, but it is also on master (https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/3949/testReport/SceneTests/). So I think this PR is ready to be reviewed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1293166614:327,release,release,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1293166614,1,['release'],['release']
Deployability,"The current approach increments the counter of the componentState data to track when a message is received by a component so that the GUI can update accordingly by setting itself as an output of the componentState data. **TODO**: use the counter of a new generic data as the componentState does not seem a fine-enough level to be able to track and differentiate properly message reception, real change of state etc. Outsourcing the messaging outside the component in a singleton could be the solution : the GUI could then connect to this singleton for any message-related information/update, while connecting to the components for a status information/update. @damienmarchal might propose an alternative approach",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2398#issuecomment-953195106:142,update,update,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2398#issuecomment-953195106,3,['update'],['update']
Deployability,"The current implementation of file saving in XML is in fact doing a kind of complete dumping of the state of the objects in the scene. This is bad because this produce totally unreadable scene. . The idea of this PR is to implement a much more ""user friendly"" file saving as described in this issue; https://github.com/sofa-framework/sofa/issues/41. Saving caduceus.scn with the old way look produce a 2Mb file like this: http://pastebin.com/01hfAeAT; while with the current code it is a 3.5Kb file looking like this: http://pastebin.com/K3jzVxcE. Please help to improve it by reporting any problem or patch. . Additional things to do in future PR:; - support saving of scene created from Python (I have a prototype...I'm waiting integration of this PR); - support saving scene to python (with the same readability logic); - fix the broken component that parse directly the xml attribute instead of using data. This is the case of (VisualModelImpl, CubeTopology). These component have to be fixed one by one (including test to validate that there is no regression). ; - implement a more ""dump"" like feature to save a scene that have been simulated. . Checklist to be merge: ; - [ ] succeed on each compilation setup on the CI.; - [ ] does not generates new test failure. ; - [ ] does not seems to break existing scenes. ; - [ ] does not seems to break API compatibility. ; - [ ] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/116:602,patch,patch,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/116,2,"['integrat', 'patch']","['integration', 'patch']"
Deployability,"The current process of constructing object is very complex, error prone and generates a lot of duplicated code. ; To clean a bit in this PR is:; 1) moving the common code into dedicated and opaque method: ; BaseObject::IsRequiredLinkPathPointingToCompatibleObject...; BaseObject::IsRequiredComponentInContext....; BaseObject::AddObjectToContextAndParse. 2) remove the create or canCreate method that I think where doing nothing more than the default ones (please check). 3) to update to new signature It was needed to update some rare component. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3309:477,update,update,477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3309,2,['update'],['update']
Deployability,The current version we now have in extlibs 1.9...but actually the update didn't needed anychange so I assume that with the old gtest we had the fix would have work equally well.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369868322:66,update,update,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369868322,1,['update'],['update']
Deployability,"The directories `screenshots` and `config` are currently created in the `build` directory of SOFA. When installing the software on a machine, those can end up in a read-only directory. . To avoid this problem, this PR changes:. On Linux:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/.config/SOFA/config/` . On Windows:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/AppData/Local/.config/SOFA/config/` . On MacOS:; - `screenshots` location to: `~/Library/Application Support/SOFAData/screenshots/`; - `config` location to: `~/Library/Application Support/.config/SOFA/config/` . These changes have only been tested on Linux. I'm not familiar with MacOS so I don't know what would be the best location. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5096:104,install,installing,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5096,1,['install'],['installing']
Deployability,"The example src/applications/plugins/SofaPython/examples/keyboardControl.scn is not working anymore. . To 'fix' the example it is possible replace 'free_position' by 'position' in the keyboardControl.py pythonScriptController:; ```py; ...; 	# key and mouse events; use this to add some user interaction to your scripts ; 	def onKeyPressed(self,k):; 		; 		# free_position is a scalar array : [tx,ty,tz,rx,ry,rz,rw]; 		free_position=self.MechanicalState.free_position. 		# translation speed; 		speed = 1 . 		# UP key : front; 		if ord(k)==19:; 			free_position[0][2]-=speed; 		....; 	; 		self.MechanicalState.free_position=free_position; 		return 0 ; ```. The change of behavior happens with the merge of PR #459 ; @ChristianDuriez, @fjourdes, @EulalieCoevoet is this a regression (and thus we should fix the .cpp) or is this the normal expected behavior (and so we should just update the examples :)) ? . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/749:876,update,update,876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/749,1,['update'],['update']
Deployability,The failing test is under investigation but let's merge and create the release branch,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4322#issuecomment-1832076559:71,release,release,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322#issuecomment-1832076559,1,['release'],['release']
Deployability,"The fails again... the mac_clang-3.4 succeeded (I restarted but the previous build was here; https://ci.inria.fr/sofa-ci/job/mac_clang-3.4_options_pr3/25/console); And the additional failure in test scenes is because some machines still don't have the libjpeg/tiff library installed (se macos pr3 ) :) . @guparan, @hugtalbot if you are passing by please considere merging the PR because we need it monday morning for our group writing of tutorials for Sofa :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357312877:273,install,installed,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357312877,1,['install'],['installed']
Deployability,"The idea of this PR is to check if some work done in 2016 in the branch ""Collodi"" has to be patched. The branch has been updated with recent version of master... probably with some conflicts resolution errors.. so it won't compile asis. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1492:92,patch,patched,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1492,2,"['patch', 'update']","['patched', 'updated']"
Deployability,"The inheritance link between CollisionResetVisitor and CollisionVisitor and some other had a consequence that ProcessGeometricalData was called multiple times in the FreeMotionAnimationLoop when the free motion and the collision detection where computed in parallel. . Another issue was that we had two time the timers for the substeps of the collision detection in the case of parallel computation : IMO only the AnimationLoop should have timers for global computation made by visitors. Here I remove the one of the Pipeline. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5042:517,Pipeline,Pipeline,517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5042,1,['Pipeline'],['Pipeline']
Deployability,The inheritance to DataEngine brings Components (inherits from BaseObject) within a component.; Change inheritance for DDGNode to exploit only update mechanisms.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1898#issuecomment-805954669:143,update,update,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898#issuecomment-805954669,1,['update'],['update']
Deployability,"The initial objective of this Pull Request was to fix the scene crash detected in #2047 (https://www.sofa-framework.org/dash/?branch=origin/PR-2047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:613,pipeline,pipeline,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,1,['pipeline'],['pipeline']
Deployability,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4319:284,release,release,284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319,1,['release'],['release']
Deployability,"The objective is to remove all files related to Bezier High Order elements in the basic distribution of SOFA. Indeed, this content is still imature and will be provided in 2 separate plugins : SofaHighOrderTopology and SofaHighOrderFEM. In this pull request, topology classes in GeneralTopology has been removed and some associated components have been either removed or updated (to erase any link to Bezier High Order elements).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/14:371,update,updated,371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/14,1,['update'],['updated']
Deployability,"The one which use a decorator to specify the return types.. The look&feel for the client code:; ```python; from TypedMagic import *. @sofaengine( ret=(""customout"", ""s""), inputs={""a"" : ""i"", ""b"" : ""i""} ) ; def typedupdate(a, b, c): ; """"""This is so cute to have a single point documentation in our code""""""; print(""MY UPDATE:"" + str(a)) ; return ""Yolo"" + str(a + b + c); ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); TypedMagicEngine(rootNode, typedupdate, a=1.0, b=2.0, c=3.0); ```; EDIT: the ""customout"" will be the name of the output field. With more or less this in TypedMagic; ```python. class TypedMagicEngine(Sofa.PythonScriptDataEngine):; def __init__(self, node, sofaengine, **kwargs):; fct = sofaengine.function; retinfo = sofaengine.retinfo; argsinfo = sofaengine.argsinfo; self.addNewData(""Description"", ""Properties"", """", ""s"", inspect.getdoc(fct)) . argspec = inspect.getargspec(fct); for arg in argspec.args:; argval = None; ### Get the name & default value; if arg in kwargs:; argval = kwargs[arg] ; elif argspec.defaults != None and arg in argspec.defaults:; argval = argspec.defaults[arg] . ### Get the type ; datatype = ""f""; if arg in argsinfo:; datatype = argsinfo[arg]; ; if argval != None: ; self.addNewInput(arg, datatype=datatype, value=argval) ; else:; Sofa.msg_error(""Unable to create an input for parameter: ""+str(arg)) ; ; if retinfo != None:; self.addNewOutput(retinfo[0], datatype=retinfo[1]) ; ; self.retinfo = retinfo[0]; self.name = fct.__name__ ; self.params = argspec.args; self.fct=fct; ; def update(self):; calld = []; for param in self.params: ; calld.append(self.findData(param).value) ; ; self.findData(self.retinfo).value = self.fct(*calld) . ; class sofaengine(object):; def __init__(self, ret=(""output"",None), inputs=[]): ; self.retinfo = ret; self.argsinfo = inputs; ; def __call__(self, fn):; self.function = fn; return self ; ```. Of course this is just a POC (lot of corner cases are not handle",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380470372:314,UPDATE,UPDATE,314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380470372,1,['UPDATE'],['UPDATE']
Deployability,The option **SOFA_NO_VMULTIOP** in ODESolver (aka integration schemes) makes the reading (i.e. the understanding for new users) and the dev cumbersome. I know the VMULTIOP allows for optimized vector operations with the MultiOp.; Would there now be a reason to just keep one upon the other ?; Any other thought? . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1263:50,integrat,integration,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1263,1,['integrat'],['integration']
Deployability,"The problem comes from the compilation of SofaPython3. In particular, it is related to one of its dependency `pybind11`. It is missing from your computer.; I recommend you to read the documentation: https://sofapython3.readthedocs.io/en/latest/menu/Compilation.html. You must install pybind11.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486749758:276,install,install,276,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486749758,1,['install'],['install']
Deployability,The problem is to have the uninstall function called when we need to reload the files (when the end user application is reloading). . This can be done per PythonScriptController in the 'cleanup' code. But the cost will be repeated each time a PythonScriptController is created/destructed in the scene so I'm not a big fan of it. Neither for the explicit reinit.; ; I don't understand your suggestion. A pure python solution may be to install a kind of hook in python that count the number of PythonScriptController that is created...and count the number of cleanup...and if this cleanup count is zero...it means we need to force a plugin reload. It may work but I'm not sure this is very good because creating PythonScriptController on the fly and deleting them would force module reload. . The last solution I can think abou tis to have the PythonEnvironment inheriting from BaseObject and thus...be part of the scene (automatically added in the root) ... this PythonEnvironment will thus receive a single cleanup event and do the cleaning when it deserve to. ; This solution sound conceptually ok to me if we accept that our scene contains an automatically added object.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/198#issuecomment-285720340:434,install,install,434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/198#issuecomment-285720340,1,['install'],['install']
Deployability,The problem the PR solve is related to how data are changed by the setValue function. When writing in data through an opaque pointer it is important to properly notify the data successors that a data has changed. This is why write access *must* be done using beginEdit/endEdit and absolutely not; by removing the const qualifier from q getValueVoidPtr using a cast (what was done in the setValue function). Doing it the wrong way break the data update mechanism. . The PR fix that.; To ease the writing of the beginEdit/endEdit pair it also add a RAII WriteAccessWithRawPtr. It is in BaseData...because it is for BaseData. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1006:445,update,update,445,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1006,1,['update'],['update']
Deployability,"The problem with the approach to have a name helper in each Node is that the Node must exist before using it. And it's not the case in the XML loader. A name is required before the object creation, and no Node is available at that time. Therefore, I used a single name helper inside the XML loading for all the components. In this case, the counter suffix does not depend on the Node. A problem with this approach (other than it's not consistent), Nodes' counters are not updated...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028170905:472,update,updated,472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028170905,1,['update'],['updated']
Deployability,"The pull-request #95 contains code that automatically install the dispatcher needed in tests. ; So normally it is not needed any more to clearHandlers (unless you really want a specific behavior). . EDIT: The Pull request #95 was not clean so I did a new one, sorry for the noise.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/94#issuecomment-265592897:54,install,install,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/94#issuecomment-265592897,1,['install'],['install']
Deployability,"The purpose of this PR is to unify the mass components in SOFA (UniformMass, DiagonalMass and MeshMatrixMass):; - unify the naming of data for mass information (vertexMass, massDensity and totalMass); - unify their initialization process; - apply the coding rules (especially regarding the variable prefix d_ and m_) and use the msg API; - add the feature of dataTracker on the data for mass information; - add support for additional CUDA templates for the MeshMatrixMass (that should always be preferred as default mass). This should ease the understanding of new users at first look.; All tests and checks added should also make these codes more robust. A script is added with this PR to automatically update all your scene files (.xml and .scn). I invite to be really **prudent** before merging this PR, since it affect basically all simulations. Note: @hdeling I removed unused functions (numericalIntegrationOrder, numericalIntegrationMethod, integrationMethod) in MeshMatrixMass that I think were used before the ""plugin.HighOrder"" plugin was created. Can you confirm this?. Suggestion for future work:; - rename MeshMatrixMass into SparseMass; - move MeshMatrixMass with DiagonalMass; - make DiagonalMass depends from MeshMatrixMass (since it's a simplified -lumped- derived approach from MeshMatrixMass) : this would clearly factorize the code and make it more robust. PS : bisous. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637:704,update,update,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637,2,"['integrat', 'update']","['integrationMethod', 'update']"
Deployability,"The questions of conditional compilation (plugin selection at cmake), and repository split are distinct, the idea is flying in the air, but nothing concrete, the main issue (I think) is integrating the several repositories in a single continuous integration platform, not a big deal, but it has to be done . thomas . ----- Mail original -----. > De: ""hdeling"" notifications@github.com; > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > Cc: ""thomas-lemaire"" thomas.lemaire@inria.fr, ""Comment""; > comment@noreply.github.com; > Envoyé: Mercredi 5 Octobre 2016 17:52:58; > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > ; > OK I agree that this allows to compile Flexible without the SOFA-HighOrder.; > ; > Before moving SOFA-HighOrder to the gitHub repo, do any of you know if; > there are plans to move those plugins outside of github ?; > ; > My understanding is that at some point SOFA was going to be cut into; > several pieces that could be optionally compiled.; > ; > Is this still on the radar ?; > ; > Hervé; > ; > Le 05/10/2016 à 15:27, thomas-lemaire a écrit :; > ; > > yet an other option is to conditionnaly compile HighOrderTopology code; > > in Flexible based on whether the HighOrderTopology plugin is existing; > > or not (in cmakelists package_require(HighOrderTopology) if; > > (HighOrderTopology_FOUND) ... ):; > > - each plugin can live in its own repository; > > - no need for a third plugin; > > - should work whether all the plugins are compiled in the same cmake; > > build project or are compiled/installed separately (well; > > HighOrderTopology must be available when compiling Flexible); > > ; > > thomas; > > ; > > ----- Mail original -----; > > ; > > > De: ""Matthieu Nesme"" notifications@github.com; > > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > > ; > > > Hi Hervé,; > > > ; > > > In general, I think it is a good ide",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225:186,integrat,integrating,186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225,3,"['continuous', 'integrat']","['continuous', 'integrating', 'integration']"
Deployability,"The removed line prevents referencing this plugin in another, externally built SOFA plugin.; (doing a `find_package(SofaPython)` from the CMakeLists.txt of another plugin, built as a standalone project did not work). I don't know the side-effect of simply removing this line, but I also don't see in which case this could (or should) work anyway: there is no reason to create a target during the import of a package. the targets are created at install, and loaded during the package import, not created, to my understanding. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/888:444,install,install,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/888,1,['install'],['install']
Deployability,"The right syntax is the following:. ```C++; const auto visualHaptionDOFSPtr = sofa::core::objectmodel::New<sofa::component::statecontainer::MechanicalObject<sofa::defaulttype::Rigid3dTypes>>();; visualHaptionDOF = visualHaptionDOFSPtr.get();; nodeHaptionVisual->addObject(visualHaptionDOFSPtr);; visualHaptionDOF->name.setValue(""rigidDOF"");; ```. Note that this plugin has not been maintained for a long time. You should expect some changes in order to make it work. Here are some changes I made today to fix the configuration: https://github.com/sofa-framework/sofa/pull/4338. But it does not fix the compilation. If you succeed to make it work, a pull request would be very welcome ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1840404388:513,configurat,configuration,513,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1840404388,1,['configurat'],['configuration']
Deployability,"The root tree is now displayed in the tree. Previously, only the root children were displayed. This root item provides more information about the time step: the time that has not been measured by timers (children). It's in the columns 'Self'. In the example, 3% of the step is not measured, corresponding to 1 ms. The second addition is the overhead due to timers processing. It is displayed in the left panel. Here, it takes 10 ms to process the incoming timers and update the chart. ![image](https://user-images.githubusercontent.com/10572752/151393063-10d272a0-38d9-4c64-9a76-b326fb010e15.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2643:467,update,update,467,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2643,1,['update'],['update']
Deployability,"The scene graph view is not updated to reflect the content of the scene changes. ; This is because a mecanism was implemented to not update the view at each simulation step to maximise performance. . This may be useful when max performance is needed but this lead to an inconsistant display. . In this PR I try to fix the situation by allowing three states:; - lock = true => changes in the scene graph are not reflected into the model but the model is flagged as dirty ; - lock = false => changes in the scene graph are imediately reflected into the model; - dirty => true => the model is not anymore synchronized with the sofa scene graph; - dirty => false => the model is showing the content of the scene graph. when going from lock=true to lock=false the model is updated if it was dirty. . To let user to control if they want the graph to be updated we add an icon to lock/unlock the model state. If the model is dirtyfied; a the icon is reflecting the change (with an highly professional icon free of copyright ;)) . Fixes #2920 . The PR also contains few fixes for the modeller (that is still broken anyway). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3026:28,update,updated,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3026,4,['update'],"['update', 'updated']"
Deployability,"The screenshots on the repo look mad 🤩 (even asm views of statement 😶‍🌫️); I am especially interested of the multi-threading part, as the profiler of MSVC (and the valgrind/callgrind on linux) does not really handle it well. - ~~Do you need to compile with debug info?~~; - It is tracing so obviously there will be overhead, but can you say how much is the performance hit (if any) ? (msvc's is almost as fast but requires RelWithDebugInfo and callgrind is slow like hell). EDIT: tried myself, works in Release mode as well 😎👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4182#issuecomment-1726711676:503,Release,Release,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4182#issuecomment-1726711676,1,['Release'],['Release']
Deployability,"The second parsing values were not updated because insert() of (unordered_)map does not overwrite values. This bug was actually making all the scene tests (using runSofa) successful... 🤐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3672:35,update,updated,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3672,1,['update'],['updated']
Deployability,"The stacktrace is dumped when a crash occurs to help debugging. This is useful when compiled in Release mode. But it alter the goal of a debugger when compiled in Debug mode. Plus, a debugger provides already the stacktrace when a crash is caught. We propose to dump the stacktrace when not compiled in Debug mode.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2385:96,Release,Release,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2385,1,['Release'],['Release']
Deployability,"The status indicating if it is input or output is not hard coded in the data structure.; During the STC it was decided that we should have it. Several category of inputs have been decided: input, output, input-and-output, unknow (see the STC reports for the precise naming). To me the easiest is to export everything with the ""unknow"" type (which indicate ... the ""we don't know exactly"" current state. As you pointed for DataEngine, you can then use the fact a data is part of the ""Input"" / ""Output""... but it is only an heuristic. It is possible to have better heuristic... eg: detecting through the DDG superclass of a data field if this data is an input in an update callback.... but I think this is too complex... and purposeless given that the information should be added (soon) in BaseData.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4775#issuecomment-2178390642:664,update,update,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4775#issuecomment-2178390642,1,['update'],['update']
Deployability,"The tendency would be to alleviate Data, but one important behavior is missing. Do you have suggestions on how to perform a listener/observer mechanism on Data w/o adding extra cost?; The idea is to be able to call a callback as soon as a Data is modified. The main usage is the gui, to be able to update some stuff w/o having to check for modifications of tons of Data at regular intervals.; This has to be done only for a few specific Data, and should not add extra cost on the 99.99% regular use cases. The easiest way to implement such a thing would be to add a list of listeners to every Data.; But it means storing extra stuff in each Data, and checking if listeners are present at each modification of the Data.; Do you see a less intrusive way to implement such mechanism?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/61:298,update,update,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/61,1,['update'],['update']
Deployability,The updated scene fails at the regression step 😑,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2092#issuecomment-843520295:4,update,updated,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2092#issuecomment-843520295,1,['update'],['updated']
Deployability,The upgrade of METIS does not fix the differences between OS'.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3050#issuecomment-1163217733:4,upgrade,upgrade,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3050#issuecomment-1163217733,1,['upgrade'],['upgrade']
Deployability,The upgrade of the VS2015 machines is now done. ; Compilation time for a full build is now 3h30 (instead of 9h30). ; ; Please report any problem encountere to this list;,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186#issuecomment-284981136:4,upgrade,upgrade,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186#issuecomment-284981136,1,['upgrade'],['upgrade']
Deployability,The workflow is really slow when changing simple values in the data inspectors ; (validating by clicking on update). In this pr we allows the user to change the numeric values; by moving the mouse left&right to decrease/increase with immediate update. I will do a small video to show the results to make that more clear. ; https://www.youtube.com/watch?v=fuWz3Dn1-oM; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/750:108,update,update,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/750,2,['update'],['update']
Deployability,"There are some unresolved externals in MeshGenerationFromImage.inl in the CGAL plugin. ; ```Undefined symbols for architecture x86_64:; ""_initImage()"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""_readImage(char const*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""ImageIO_alloc(unsigned long)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""CGAL::Image_3::private_read(point_image*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaultty",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/352:356,update,update,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/352,3,['update'],['update']
Deployability,"There is a patch in the daccord repository on forge. . Here are the commit messages (which contains possible interaction with other sofa part):. ```; [FIX]: Allow sofa to save in xml & pyscn the scene. This may break some scene. Once stabilized this may go to the main Sofa. Several issues needed to be adresse to make this system work. first (to try to minimize the amount of un-needed saved informations making the file unreadable) ):; - all the Data<> are now non persistent by default.; - a Data<> become persistent if:; * it is loaded from a file or from a python script.; * it is modified in the GUI. second (hacky stuff on top of old hack stuff):; during the parsing of xml some component ""converts"" XML attributes to other (and possibility none) dataField). As only the dataField can be saved...these attributes are ""lost"". ; The solution was to stop doing with a minimal number of changes the Sofa behavior. . third (quirck stuffs on pile of quirck stuffs):; some important XML attributes are interpreted on the fly and have very specific meaning but there is no associated data field. The solution was to add the corresponding datafield to allow them to be saved.; This is the case for ""src"", ""template"", ""name"", ""type"" .... Given the amount of changed on base classes logics...some scene may have problem to load or save. Please tell if this is the case.; ```. The case that probably could cause some problem is the replacement of the 'src', 'template' with real data field.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/41#issuecomment-254789868:11,patch,patch,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/41#issuecomment-254789868,1,['patch'],['patch']
Deployability,"There is one error on the dashboard:; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3366/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/2/testReport/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/. do you think it is linked to your change or is it a blinking error on the CI?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824:153,release,release,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824,1,['release'],['release']
Deployability,There seems to be a memory leak when using LocalMinDistance for collision detection. This can be seen if the memory usage is monitored when there is continuous collision between two objects. This has been checked with v15.12 and the latest changes from master branch.The code has been checked for LocalMinDistance as well as through valgrind tool but no result till now. Refer to the post on the forum:; [https://www.sofa-framework.org/community/forum/topic/memory-leak-when-using-localmindistance/](https://www.sofa-framework.org/community/forum/topic/memory-leak-when-using-localmindistance/),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5:149,continuous,continuous,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5,1,['continuous'],['continuous']
Deployability,"There was an error in the name of the (origin) directory to install. Not sure about the destination though. This fix has no impact on building Sofa, only on its installation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/959:60,install,install,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/959,2,['install'],"['install', 'installation']"
Deployability,"There was normal vector Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2192:455,update,update,455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192,1,['update'],['update']
Deployability,"There's a wierd issue in cmake package config that caused the paths to CImg to be inconsistent (depending on whether the build was triggered from ghprb or manually) on Defrost's CI.; It happens to be CMake's interpretation of the ""PACKAGE_"" prefix in . CImgPlugin/extlibs/CImg/CImgConfig.cmake.in that varied from one build to another.; The prefix is actually useless, since ${CIMG_INCLUDE_DIR} is already a valid and complete path, in build & install configurations. Removing the PACKAGE_ prefix solves the issue.; I flagged this PR as fast-merge since our CI @SofaDefrost does not build anything because of that.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/921:444,install,install,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/921,2,"['configurat', 'install']","['configurations', 'install']"
Deployability,"These files are not in the CMakeLists of SofaGeneralEngine, and were not updated for 14mo.; And the good BoxROI is still in SofaEngine, still updated and tested. So I guess there is no problem with deleting those (and it seems this PR does it well 🐱‍🐉)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1333#issuecomment-613972165:73,update,updated,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1333#issuecomment-613972165,2,['update'],['updated']
Deployability,"These references were not removed in; - #3960 . There should be errors like; `CMake Error: File applications/plugins/Flexible/ExternalProjectConfig.cmake.in does not exist.` occuring. 🤐. Not sure why the CI did not detect this, maybe because of CMake caches not cleaned or something like that. EDIT: seems it depend on some factors, I get ""only"" warning on other configuration; `applications/plugins/Compliant does not exist and will be ignored.`; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3980:363,configurat,configuration,363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3980,1,['configurat'],['configuration']
Deployability,"These two components were added as a tool to smooth the transition between the use of hard-coded alias in our code base to ""no alias"" at all. The underlying idea was to propose our users, and more specifically the one complaining about the disappearance of the alias they are using, a simple way to restore it (if they don't want to update their complete scene base). . About the fact is it not used... this is not surprising as we are not removing the aliases as it was planned and when we do it we are updating all the scenes in our code base (removing the need for MakeAlias). I personally think that the approach proposed in (#PR 2512: https://github.com/sofa-framework/sofa/pull/2512) is much elegant compared to the MakeAlias (and would advocate to remove MakeAlias when something similar to 2512 is merged) . In any case (either with MakeAlias *or* the Import component) hard-coding multiple aliases for a single component in our c++ code is an UX mistake while letting user specify their aliases is an UX feature, so I would be more in favor for having a clear roadmap to remove the aliases.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648:333,update,update,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353#issuecomment-1265109648,1,['update'],['update']
Deployability,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2249:594,Update,Update,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249,2,"['Update', 'upgrade']","['Update', 'upgraded']"
Deployability,"This PR adds a callback in OglModel, to update the current visual (triggering a call to `initVisual()`), whenever the `m_positions` field is changed dynamically. The first interest of this PR is to add the possibility to change dynamically the underlying mesh of the OglModel (typically with a controller), and see the corresponding changes.; The context I'm using this feature is in a scene where I have several mesh files representing the same mesh moving along time. Loading these meshes sequentially along time, using a python controller, is equivalent to impose a displacement to the underlying mesh during the simulation. But visualising this movement requires this additional callback.; Unfortunately I can't share the data I'm referring to, and I don't have an example as striking at my disposal. There are two questions I'd like to discuss:; - Is this callback likely to cause some trouble in existing scenes ?; - Is this behaviour generally desirable ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925:40,update,update,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925,1,['update'],['update']
Deployability,"This PR adds an attribute pathType (m_pathType) in DataFileName and DataFileNameVector to be able to easily identify whether a component holding a DataFileName accepts files, directories or both. This is useful to provide custom fileDialogs in user interfaces such as runSofa2, give more information about the type of values a dataFileName takes, and provide better error messages. To use it: in the ctor of the component, on a DataFileName datafield, call setPathType(<PathType>) (<PathType> being an enum value of either FILE, DIRECTORY or BOTH. Default value is FILE). The PathType of a DataFileName can be queried by calling getPathType(). In addition, checks are made within the updatePath() method of DataFileName, called when the value changes, to guarantee that the value set is consistent with the defined path type. Since the default pathtype is set to FILE, there are only few components that are directly affected by the pull request (AddResourceRepository is one of them (takes only directories), MeshExporters have a DataFileNameVector which can accept both directories and files. Those 2 components had to be modified to behave properly, and I've been able to identify them thanks to the existing unit tests & scene tests that we compile on the CI. There's no guarantee that there isn't any untested component that should be updated too, but the fix is easy (setPathType(WHATEVER) in the ctor of the component). Same goes for pluginized components of course. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1407:684,update,updatePath,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1407,2,['update'],"['updatePath', 'updated']"
Deployability,"This PR adds custom RPATH to handle dependencies to relocatable targets that will be installed in the ""plugins"" directory. 3 cases are handled:; - A non-relocatable library depends on a relocatable library; - A relocatable library depends on a relocatable library; - A relocatable library depends on a non-relocatable library. WARNING: note that this is a hacky fix based on the hacky RELOCATABLE ""feature"". ; TODO: rework the CMake files to replace the relocatable mechanism by something more standard. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1619:85,install,installed,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1619,1,['install'],['installed']
Deployability,"This PR adds support for Visual Studio 13 in the ci scripts. VS2013 builds (on ci) won't work without this.; As soon as the builds of every non-VS2013 configurations are ok on this branch (see https://www.sofa-framework.org/dash/index.php?branch=origin%2Fci-vs2013 ) , I believe it is save to merge.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/129:151,configurat,configurations,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/129,1,['configurat'],['configurations']
Deployability,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4574:186,install,install,186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574,3,"['configurat', 'install']","['configuration', 'install', 'installed']"
Deployability,"This PR aims to improve the way we search and load plugins. It adds:; - recursive search in PluginManager::findPlugin; - finding plugin dependencies in its directory (Windows only); - (SofaPython) function to easily edit sys.path at any plugin init; - ~~new Data in RequiredPlugin to find out-of-sofa plugins: `searchPath`~~; - new component AddPluginRepository for adding a path to the pool of plugin paths; - ~~**BREAKING**~~: rename AddResourceRepository into AddDataRepository (alias added for backward compat); - new default plugins folder in build/install to allow drag&drop. The last one shall be discussed, I'm not sure it is really needed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/913:554,install,install,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/913,1,['install'],['install']
Deployability,"This PR awaits first a migration to Discord. These actions allow 4 new notifications:; - when a new release of SOFA is done; - weekly to set up the SOFA dev meeting agenda; - weekly to summarize posts on GH discussions awaiting for a reply; - notification for all GH discussions ""Announcements"" or ""Share your achievements""; - forward all GH notifications (PR, issues, stars) in a minimalist and visual way in the main channel; - rename existing actions to better identify/distinguish them all. Python API has been factorized to use mostly one script. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4445:100,release,release,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4445,1,['release'],['release']
Deployability,"This PR change the behavior of helper::vector to make it closer to svector; - helper::vector can parse space separated values **and** [,] separated values; - helper::vector now serialize into [,] separated string; - helper::Vec<Type> can also parse space separated values **and** [,] separated values. As a consequence the serialization/deserialization on the python side (SofaPython plugin) need to be updated accordingly. Now the repr() of a python object is used to serialize it into a string in the Node.createObject() method if it is not a string already. Later on, code can be cleaned-up:; - no more cat/concat/listToStr() calls needed in python code; - no more helper::svector needed in c++ code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/328:403,update,updated,403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/328,1,['update'],['updated']
Deployability,"This PR changes the behavior of helper::vector to make it closer to svector; - helper::vector can parse space separated values **and** [,] separated values; - helper::vector now serialize into [,] separated string; - helper::fixed_array (and so helper::Vec<Type>) can also parse space separated values **and** [,] separated values. As a consequence the serialization/deserialization on the python side (SofaPython plugin) is updated accordingly. Now the repr() of a python object is used to serialize it into a string in the Node.createObject() method if it is not a string already. Later on, code can be cleaned-up:; - no more cat/concat/listToStr() calls needed in python code; - no more helper::svector needed in c++ code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330:425,update,updated,425,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330,1,['update'],['updated']
Deployability,"This PR contains all the changes I did to produce SOFA releases.; Basically it is almost only CMake improvements to ease SOFA installation. Some of them may not be clean/wanted/useful, **please give feedback**. WARNING: I renamed some macros in SofaMacros.cmake so this could break your code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/635:55,release,releases,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/635,2,"['install', 'release']","['installation', 'releases']"
Deployability,"This PR depends on #2374 #2375 and #2376 and should be rebased before review. - Remove old method ```handleTopologyChange```; - Turn d_indices into TopologySubsetIndices, this automatically fix the topological changes update. ; - Fix the use of subset indices combined with topology changes.; - Add callback on endingEvent to update the totalMass/vertexMass; - Fix the center of gravity display when using subset of indices. Here is an example of scenes RemovingTrianglesProcess.scn using a subset of indices (yellow points); ```<UniformMass template=""Vec3d,double"" name=""mass"" totalMass=""1.0"" handleTopologicalChanges=""1"" indices=""0 1 2 3 4 5 6 7 8 9""/>```. ![RemovingTrianglesProcess_00000001](https://user-images.githubusercontent.com/21199245/135688953-b9a8d6fa-eafc-499e-916d-8e209b227736.png). ![RemovingTrianglesProcess_00000002](https://user-images.githubusercontent.com/21199245/135688979-3e678cc4-a95b-4ff8-b685-688e761d0640.png). ______________________________; ________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2377:218,update,update,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2377,2,['update'],['update']
Deployability,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2300:68,update,update,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300,3,"['Update', 'update']","['Update', 'update']"
Deployability,This PR depends on the #1186 . Move code of ParticleSource into inl file and clean it: ; - change Data and member prefix; - remove old code and hacks; - update the scene examples. ![SPHParticleSource_00000001](https://user-images.githubusercontent.com/21199245/67021784-6f3be100-f100-11e9-89e6-98ddfd6d6393.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1190:153,update,update,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1190,1,['update'],['update']
Deployability,"This PR diffs against the sofa-framework::issofa_constrainsolving branch until it has been merged into master. # Objectives; - Adjust FreeMotionAnimationLoop so that it is more faithful to the actual equations, most notably by ; allowing only one linearisation of the mappings within the time step. ; - Update the API in order to compute a linearised version of the constraint forces, in a similar fashion to ; what is done in the Compliant plugin. . # Requirements ; The following PR are required in order to build this ; - #484 ✔️; - #450 ✔️ ; - #452 ✔️ ; - #456 ✔️ . For testing: ; - `SOFA_USE_MASK` **must** be deactivated, otherwise derivatives quantities ( velocity at contact points for example) are not propagated at all since all dofs are ""masked"" by default. After having a rather quick look, apparently the `SOFA_USE_MASK` impose some strict (undocumented) requirements (on top of other limitations like the fact that it does not support changes in the topology) about where in the time step the ""apply"" method of mappings is called. - There is a branch on my local fork that integrates all the requirements for testing that can be found at the following location [fjourdes:insimo_freemotion_integration](https://github.com/fjourdes/sofa/tree/insimo_freemotion_integration). # Changelog; API Breaking. [SofaCore]; - `ConstraintSolver` can now define the VecId where the constraint lambdas and constraint correction are stored. Previously, these were fixed locations, usually VecId::externalForce() and VecId::dx(), but it could vary depending on the implementation of both the ConstraintSolver and the ConstraintCorrection API. Components can retrieve these locations when inspecting their ConstraintParams object which is usually a parameter of the API methods for constraint solving.; - `ConstraintParams` contains the `MultiMatrixDerivId` that can be used by components related to the `ConstraintSolver` to retrieve the location of the constraint jacobian.; - `ConstraintResolution` API ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:303,Update,Update,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['Update'],['Update']
Deployability,"This PR disables all freshly pluginized modules by default except for SofaMiscCollision because it contains DefaultCollisionGroupManager. It also disables PSL by default.; Tell me if these default plugins should actually be kept. To continue testing as before (and to keep our scene tests working) I manually enable all these plugins in CI at configuration step. This will fix some failing scene tests due to missing dependency (RequiredPlugin).; Actually, the scenes with missing dependencies due to disabled plugin (plugin library not found in `bin`) should not even be tested. Some scenes like `Fluid2D.scn` and `Fluid3D.scn` could even be moved to an examples folder in `plugins/SofaEulerianFluid`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/575:343,configurat,configuration,343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/575,1,['configurat'],['configuration']
Deployability,"This PR fix UI problem:; - the icon now display the correct icon (green for info message, yellow for warning and red for error) instead of a red sign all the time; - the icon was displayed at scene loading but not updated. This happens when using controllers that emits messages at simulation time. The result was that the treeview was out-of-date misleading the users. Using the feature introduced in #2397, the state is now tracked to correctly report the message status with it is changed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2398:214,update,updated,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2398,1,['update'],['updated']
Deployability,"This PR fix the opengl performance issue reported in #https://github.com/sofa-framework/sofa/issues/1070. The fix is in OglModel.cpp/OglModel.h and is very simple, when the positions and normals array are containg double precision numbers they are converted into single precision one before sending the data to OpenGL. I'm sure we can optimize further the conversion loop...but I have not time for that (volunteer needed). . Because the code in OglModel was hard to read because of the #ifdef GLEW all around I first cleaned the whole SofaOpenglVisual code, by removing the #ifdef. I also updated the call to function with name *ARB because they are now part of any baseline opengl implementation since nearly a decade. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1069:589,update,updated,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1069,1,['update'],['updated']
Deployability,This PR fixes errors like `[FileRepository] File icons/back.png NOT FOUND` reported recently. These errors were caused by the fact that SofaGuiQt and runSofa had no idea were to find their resources (if not installed).; Adding and configuring some .ini files will fix that. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/758:207,install,installed,207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/758,1,['install'],['installed']
Deployability,This PR fixes install finding of Boost::program_options dependency added for the new ArgumentParser API in #513 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/618:14,install,install,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/618,1,['install'],['install']
Deployability,"This PR fixes quaternion integration so that a 1 rad.s^{-1} angular velocity integrated during 1 second results in a 1 rad angle change, as one generally expects. The original quaternion integration scheme is a [gnomonic projection](https://en.wikipedia.org/wiki/Gnomonic_projection) on the 3-sphere (or equivalently, a variant of the Cayley transform) that prevents the maximum angular change to exceed *pi* rad during one time-step, which is problematic as angular velocities get larger. Also, the angular velocity does not integrate to the corresponding rotation angle using this chart, as demonstrated in the failing test. This PR implements the [exponential map](https://en.wikipedia.org/wiki/Exponential_map_(Riemannian_geometry)) for unit quaternion integration given spatial angular velocity, which fixes both issues. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/172:25,integrat,integration,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/172,5,['integrat'],"['integrate', 'integrated', 'integration']"
Deployability,"This PR fixes the `init()` of RigidRigidMapping when using `globalToLocalCoords=True` (your positions are initially expressed wrt the global frame) with `repartition` (your child's positions are mapped to the parent's positions using this description). . When we look at the code, we can see that someone already fixed the `init()` but only for one of three cases. ; This PR fixes the two forgotten cases. . **EDIT**. This PR:. RigidMapping:; - adds template <Rigid3,Rigid3> with tests ; - this change required some updates/additions in RigidCoord and RigidDeriv; - cleans variables name (d_, m_), which is **breaking** . RigidRigidMapping:; - sets the component as deprecated (with instruction to fix the scene) ; - fixes `init()` when using `globalToLocalCoords=True` with `repartition` ; - adds tests; - cleans variables name (d_, m_), which is **breaking**; - adds vectors' size checks; - adds component state checks; - removes ""fake"" vectors' size checks: if the sizes mismatch it should be detected during the initialization and the component should be in an invalid state. If the sizes change during execution, it is not enough to just check the size, the component should be in an invalid state because it impacts many other things... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3680:516,update,updates,516,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680,1,['update'],['updates']
Deployability,"This PR follows @marques-bruno work on https://github.com/sofa-framework/sofa/pull/909. - add INCLUDE_SOURCE_DIR parameter to sofa_generate_package; - rename INCLUDE_ROOT_DIR to INCLUDE_INSTALL_DIR (avoid confusion with INCLUDE_SOURCE_DIR). The idea is to permit this:; ```; sofa_generate_package(; NAME SofaSparseSolver ; VERSION ${PROJECT_VERSION} ; TARGETS SofaSparseSolver; INCLUDE_SOURCE_DIR ""src/SofaSparseSolver""; INCLUDE_INSTALL_DIR ""SofaSparseSolver/SofaSparseSolver""; ); ```; to obtain for example an install tree like this; ```; install; include <-- include_directories here exposes ALL module headers; SofaBaseTopology; header.h; SofaSparseSolver <-- include_directories here exposes ONLY SofaSparseSolver headers; SofaSparseSolver; header.h; SofaValidation; header.h; ...; ```; which is needed if we want to cleanly separate SOFA include directories. In a future PR I'd like to rework all SOFA install tree based on this INCLUDE_SOURCE_DIR + INCLUDE_INSTALL_DIR mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/951:511,install,install,511,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/951,3,['install'],['install']
Deployability,This PR has been merged but status was not updated due to GitHub service degradation.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1299#issuecomment-617621892:43,update,updated,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1299#issuecomment-617621892,1,['update'],['updated']
Deployability,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2162:8,integrat,integrate,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162,1,['integrat'],['integrate']
Deployability,"This PR introduces CMake configurations for SOFA activating and deactivating sub-parts of the project given the SOFA_CONFIGURATION string : CORE/STANDARD/FULL. . The configuration can be forced using `SOFA_FORCE_CONFIGURATION` otherwise the configuration can still be tweaked using CMake option command line. . To apply those configuration I've made two main modification depending on what needed to be activated :; - For options : I've added a CMake macro `sofa_configuration_dependent_option` that allows to specify the scope of the option and force it when needed.; - For plugins : I've modified the sofa_add_subdirectory adding the possibility to specify a `CONFIGURATION` type enabling or disabling the plugin by default depending on the config type and forcing the activation when needed. These configurations have been defined regarding the last STC discussion. . PS: This PR also enables to build Sofa.GUI without Qt. ; PPS: This PR also deactivates the legacy headers by default now; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4766:25,configurat,configurations,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4766,6,"['CONFIGURAT', 'configurat']","['CONFIGURATION', 'configuration', 'configurations']"
Deployability,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4580:301,pipeline,pipeline,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580,1,['pipeline'],['pipeline']
Deployability,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4219:114,pipeline,pipeline,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219,1,['pipeline'],['pipeline']
Deployability,"This PR is a clean before introducing more work on the GeomagicDriver and a GeomagicEmulator. - Move all code related to model display from GeomagicDriver to an embedded class GeomagicVisualModel. This last class is not a component but it creates the node hierarchy to display the device.; - Various minor changes in Driver like adding a singleLink to the Forcefeedback. If needed this work would allow to use GeomagicDriver without linking to SofaOpenglVisual nor SofaLoader. (With a few changes in the cmakelists and in code). ![geomagic_demo](https://user-images.githubusercontent.com/21199245/81161088-4e978380-8f8b-11ea-9f59-bad683bc014d.JPG). - Even if this display is only for debug, my eyes were bleeding too much to let that.; Update the mesh to have cleaner normals/vertices. New mesh display:. ![Geomagic-RigidCubes_00000003](https://user-images.githubusercontent.com/21199245/81160922-06786100-8f8b-11ea-91f8-59fd904c8c2f.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1366:736,Update,Update,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1366,1,['Update'],['Update']
Deployability,"This PR is a merge with #4802. ![](https://private-user-images.githubusercontent.com/30337881/337613447-0367e8be-aebb-4349-9b01-dc7f4e73ac2a.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTkzOTE1ODAsIm5iZiI6MTcxOTM5MTI4MCwicGF0aCI6Ii8zMDMzNzg4MS8zMzc2MTM0NDctMDM2N2U4YmUtYWViYi00MzQ5LTliMDEtZGM3ZjRlNzNhYzJhLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA2MjYlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNjI2VDA4NDEyMFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTIyN2QwNDYxMGJiM2ZkN2IwZDk1NTExNDlkOGM5NGQ5MDBhMTE2NzJiNzVlNGQ4YTZkZmUzMzg3Y2JlNjc1ZjImWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.tWIepU9BfDMpqQKGDy0qE8Y1rGyyX2betzD6udxDwik). - New Changelog; - Update CMake version ; - Fix Changelog with closed PR. close #4770; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4787:875,Update,Update,875,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4787,1,['Update'],['Update']
Deployability,This PR is a proposal to remove the TestMessageHandler as it was discussed during the today's meeting (connected to Issue https://github.com/sofa-framework/sofa/issues/94). The reason is that the TestMessageHandler class is more or less included in the behavior of the ExpectMessage & MessageAsTestFailure. In case I'm wrong please tell me if some scenario of yours cannot be handled nicely with the ExpectMessage & MessageAsTestFailure so that I can update their API. Concretely by this PR:; - The class TestMessageHandler is removed; - Handler needed by ExpectMessage & MessageAsTestFailure are now installed by default for tests ( Issue https://github.com/sofa-framework/sofa/issues/94); - The tests using the TestMessageHandler class have been fixed to use the ExpectMessage&MessageAsTestFailure.; - A bug in LoggingMessageHandler.h has also been corrected. Examples of use of the ExpectMessage & MessageAsTestFailure classes... To generate a test failure when an expected message have not been emitted you have to do; ```cpp; {; ExpectMessage raii(Message::Error);; ... do something that must emit a message ...; }; ```; To generate a test failure when a un-expected message have been emitted you have to do; ```cpp; {; 	MessageAsTestFailure raii(Message::Error);; ... do something that must not emit an error message ...; }; ```. The raii can be combined in the following way:; ```cpp; {; 	ExpectMessage warning(Message::Info);; 	MessageAsTestFailure raii(Message::Error);; 	MessageAsTestFailure raii(Message::Warning);; 	...; }; ```. Any suggestion on this API is more than welcome. . TODO:; 	It would be nice to be able to write; ExpectMessage warning(Message::Info & Message::Warning);,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/96:451,update,update,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/96,2,"['install', 'update']","['installed', 'update']"
Deployability,This PR is a proposal to remove the TestMessageHandler as it was discussed during the today's meeting (connected to this https://github.com/sofa-framework/sofa/issues/94). . The thing was that the TestMessageHandler class is more or less included in the behavior of the ExpectMessage & MessageAsTestFailure so it make sense to remove it. Please tell me if some scenario of yours cannot be handled nicely with the ExpectMessage & MessageAsTestFailure so that I can update their API. The handlers needed by the ExpectMessage & MessageAsTestFailure are now installed by default. . The tests using the TestMessageHandler class have been fixed to use the ExpectMessage&MessageAsTestFailure. . A bug in LoggingMessageHandler.h has also been corrected.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/95:464,update,update,464,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/95,2,"['install', 'update']","['installed', 'update']"
Deployability,"This PR is based on #1406 and #1407 and uses the callback mechanism on some SOFA components (mainly Mesh loaders); It also takes advantage of the newly added ""isDirectory"" method in DataFileName in AddResourceRepository. It also:; - Removes the isPersistent flag from datafields in MeshLoaders (because this flag should only be used to set application-specific behaviors: in runSofa2, this flag is used to determine whether the datafield should be recorded when saving the scene for instance); - takes advantage of the getAccessors introduced by @damienmarchal in #1254 ; - Clears log messages from components withing update callbacks if the componentState changes to ""Valid""; - Sets the dynamic datafields created on-the-fly in the MeshVTKLoader depending on the mesh file content as outputs of the component (to guarantee they're update when the component's inputs change; - Checks for the validity of binary STL files using `isBinarySTLValid` for better error handling (see comment in the code l.103 in MeshSTLLoader.cpp); - Removes the autoLink flag from fileMesh in VisualModelImpl. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408:618,update,update,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408,2,['update'],['update']
Deployability,"This PR is certainly the biggest contribution from InSimo merge sprint. ; It will be further discussed during STC#3. ## issofa_multithreading. ### New features; - Add logGraphUpdates / logDataUpdates global variable in objectmodel to be able to debug multi-threading issue (not declared in headers, temporary until a better design is proposed); - Add a flag d_threadsafevisitor in solvers to disable writing in mechanicalstates of InteractionForceField in MechanicalVReallocVisitor/MechanicalVFreeVisitor as it might crash in multithreaded context; - Add `Contact::computeResponse()` and `Contact::finalizeResponse()` to separate thread-safe from sequential parts of the response computations; - Implement thread-safe Data engine/links updates by adding a lock while calling update().This requires that requestUpdate() or requestUpdateIfDirty() be called instead of update() directly, which is now protected.Bonus side effect is that it no longer matter where or if engines call cleanDirty() in their update method.; - Update all engines to new thread-safe design; - Add execution info in Task and index in WorkerThread; - Add support for multithreaded task logging (for visual profiling); - Add some const correctness in getColor and getName methods. ### Improvements; - Remove ClassInfo, deprecated in favor of BaseClass, and make sure all static instances are initialized while registering objects in the factory, to FIX ""pure virtual call"" crashes with visual c++ in multi-threaded contexts; - Replace `Creator<Contact::Factory,` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change B",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:736,update,updates,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,4,['update'],"['update', 'updates']"
Deployability,This PR is connected with:; https://github.com/sofa-framework/sofa/issues/61. I refresh the build to see if this still work then integrate it as no one gave negative feedbacks. ; [ci-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80#issuecomment-267016624:129,integrat,integrate,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80#issuecomment-267016624,1,['integrat'],['integrate']
Deployability,This PR is for FileMonitor on Mac. ; Added a test in FileMonitor_test to improve test coverage.; Required also to update FileMonitor_test to comply with some osx limitations (ie. delay before file change can be detected by the program).,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/102:114,update,update,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/102,1,['update'],['update']
Deployability,"This PR links PythonLibs 2.7 to SofaPython ""the proper way"":. Until now, a target was created within SofaPython, in order to expose PythonLibs' leaders & libraries to linked projects. This led to issues when trying to link an external project to SofaPython, since the targets were not properly installed (see #888). Since there's not reason to create a separated target for PythonLibs anyway, I removed it, and simply linked PythonLibs as you would do for any other lib. It should not cause any issue to plugins using SofaPython, since PythonLibs' headers / lib are exposed publicly through the SofaPython target anyway. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/891:294,install,installed,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/891,1,['install'],['installed']
Deployability,"This PR mainly changes SofaMacros.cmake to permit external (on another repository) projects/plugins to be automatically fetched, updated and added to SOFA. Important: this work will permit to include SofaQtQuick GUI as an external project :wink: . This is a modified version of @fredroy branch [setup_external_plugin](https://github.com/fredroy/sofa/tree/setup_external_plugin). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/649:129,update,updated,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/649,1,['update'],['updated']
Deployability,"This PR makes it easier & more reliable for plugins / external projects to find paths to the ""examples/"" and the ""share/"" folders in both the build directory and install directory. The current system was filling a file (sofa.ini) for this single purpose, that GUIManager was then parsing to retrieve those paths. if another project (tests for instance) would want to retrieve those paths, they would have to first locate this sofa.ini file (which can be very tricky if not part of the SOFA project tree), parse it and add it to the DataRepository. Now, preprocessor defines holds the paths and you just have to add it to the DataRepository as such:; sofa::helper::system::DataRepository.addFirstPath(SOFA_SHARE_DIR); sofa::helper::system::DataRepository.addFirstPath(SOFA_EXAMPLES_DIR). In both cases, the paths are *absolute* which is great (and what I needed) when building an external project, but generating distributable binaries with absolute paths will not work out well...; I realise this PR is not mergeable until this issue is resolved, but don't know how to change that.; With relative paths, finding the install directory from external projects is impossible, and with absolute paths, redistribution of binaries is not feasible. . Looking fwd to your inputs!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/651:162,install,install,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/651,2,['install'],['install']
Deployability,"This PR now fixes the issue cleanly. It would be interesting though, to figure out how many sofa libs are badly installed because of similar issues...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/887#issuecomment-454029284:112,install,installed,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/887#issuecomment-454029284,1,['install'],['installed']
Deployability,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1735:12,update,updateLinks,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735,3,['update'],['updateLinks']
Deployability,This PR unify the API for DataTrackerEngine and DataCallback; so they match. The difference between the two is that in DataTrackerEngine; the callback is called when the data is needed (so the output is accessed); while in a DataCallback the update is done each time the data is changed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1073:242,update,update,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1073,1,['update'],['update']
Deployability,This PR: ; - [ ] successfully compile on each configuration on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not break existing scenes.; - [x] does not break API compatibility. ; - [x] is now 1 week old.; - [x] has been reviewed and agreed to be transitional.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-273725996:46,configurat,configuration,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-273725996,1,['configurat'],['configuration']
Deployability,This PR:; - updates the sceneCheckerAPI by setting the default leve at 19.06 and removing the warning for BoxStiffSpringFF; - set as deprecated MatrixMass for developers; - warns users about the deprecation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1107:12,update,updates,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1107,1,['update'],['updates']
Deployability,This PRs regroups 2 works:. **1. Changes for v19.12 packaging**; - Qt deployment using windeployqt/macdeployqt and post-install scripts; - Improvement of post-install scripts (Linux and MacOS); - MacOS packaging with latest CMake; - Better param names for macros sofa_install_libraries and sofa_copy_libraries. **2. Integration of DocBrowser by Defrost**; - New Qt dependencies (required): WebEngine + WebEngineWidgets; WARNING: this will definitely break VS2015 compatibility. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1275:70,deploy,deployment,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1275,4,"['Integrat', 'deploy', 'install']","['Integration', 'deployment', 'install']"
Deployability,This Pull-request only update the ChangeLog.md; It should be easy to review :),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/58:23,update,update,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/58,1,['update'],['update']
Deployability,"This aims to tackle one point of #4221 . Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; This PR propose to replace tinyxml embedded library, which is unmaintained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240:848,install,installed,848,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240,1,['install'],['installed']
Deployability,"This branch's purpose is to create artificial targets when compiling to avoid the need of installing sofa to be able to use compiled sofa library in external project compilation. . This was needed by @courtecuisse in the development of external library. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4135:90,install,installing,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4135,1,['install'],['installing']
Deployability,This bug may affect every windows VS builds.; @guparan we investigate and found than the problem come from visual studio build directory named Release/Debug. I´m testing my PR and see if everything works well. I added some specific MSVC code inside the main CMakefile to enforce VS to not create release/debug directory.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561#issuecomment-357989953:143,Release,Release,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561#issuecomment-357989953,2,"['Release', 'release']","['Release', 'release']"
Deployability,"This comes from comit 570b09b. > UPDATE: PointSetTopologyContainer maintains a list of point indices, accessible through the data points. Move data nbPoints to private so that only dedicated methods setNbPoints and getNbPoints are accessible to derived / friend classes. Indeed, not sure if Data is needed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/529#issuecomment-423549647:33,UPDATE,UPDATE,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/529#issuecomment-423549647,1,['UPDATE'],['UPDATE']
Deployability,"This commit add the ability to edit shader while sofa is running and on-the fly updating the rendering.; This is an improvement on the workflow for anyone that is developing shading code. Some may be concerned about performances issues so here are more details: . The overhead is near zero.; The GLSLListener is triggered by the file FileMonitor.; FileMonitor is using the event based ""select"" system API and is not actively 'polling' the files. AFAIK this is the most efficient way to monitor files.; If the application don't call FileMonitor::update(0) then this cost nothing. Currently only runSofa is calling FileMonitor::update(0) when started with the -i (for interactive) command line option. So the different scenarios are:; your own app.... (no cost); runSofa -i & changing the file (this cost the reload of the shader (few millisecond each change); runSofa -i & not changing the file (this cost calling the select system call); runSofa as usual...this cost nothing.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/63:545,update,update,545,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/63,2,['update'],['update']
Deployability,"This commit adds a directive to instruct CMake to find/use XCode's framework lastly.; E.g if you have installed libpng with homebrew/macport, CMake will use those first instead of the Apple's (old) ones. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/720:102,install,installed,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/720,1,['install'],['installed']
Deployability,"This commit fixes compilation of a basic configuration with the additional SOFA_NO_OPENGL flag being set, including compilation of Compliant and SofaPython plugins. Tested for runSofa -gui batch",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/18:41,configurat,configuration,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/18,1,['configurat'],['configuration']
Deployability,"This commit fixes issue https://github.com/sofa-framework/sofa/issues/4196#issue-1912081028. ## Issue description:; Upon running ```cmake --install``` on a freshly built Sofa repo, the header files for libQGLViewer are not properly copied to the install/include directory.; First of all the install path is too long and has at least one ${PROJECT_NAME}, i.e. ""QGLViewer"" too much in the path. Also there are header files missing which are relevant for using the provided libQGLViewer in external projects/plugins. This is caused by the now modified ```Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - The last argument for the ```sofa_create_package_with_targets``` macro adds too many ```/${PROJECT_NAME}``` causing the long install path (line 118); - For some reason the ```sofa_create_package_with_targets``` macro does not copy the ```MOC_HEADER_FILES``` (line 21 ff.). ## Solution:; This PR shortens the output path and copies the contents of ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES``` which causes them to be copied to the install/include directory. This does not affect the build but ensures that all headers are copied. This was tested on Windows and two different Linux installations. I am aware that simply re-mentioning the MOC_HEADERS may look redundant, but I could not find a solution to convince the ```sofa_create_package_with_targets``` macro to also consider the MOC_HEADERS for copying. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not g",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4198:140,install,install,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4198,5,['install'],['install']
Deployability,"This commit sets the d_totalMass as read and write in DiagonalMass.; Before set as read-only, without reason.; The commit also updates the coding rules in the Data. Tests are added to check for both hexa and tetra topologies,; the coherency between totalMass and massDensity. It also checks that; if both totalMass and massDensity are defined, totalMass predomines. WARNING: the test showed issue of casting in the EXPECT_EQ(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] breaks existing scenes.; - [x] breaks API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/230:127,update,updates,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/230,1,['update'],['updates']
Deployability,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4635:419,update,update,419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635,2,['update'],['update']
Deployability,This feature was already integrated directly into the two (lagrangian) ConstraintSolvers so this component is a bit superfluous. Closing,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1710899770:25,integrat,integrated,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1710899770,1,['integrat'],['integrated']
Deployability,This file is mandatory but is not created w/o SOFA_INSTALL_RESOURCES_FILES. I think /sofa/CMakeLists.txt lines 206-211 should be outside the if(SOFA_INSTALL_RESOURCES_FILES); as the sofa.ini file has nothing to do with an installation.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/114:222,install,installation,222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/114,1,['install'],['installation']
Deployability,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4448:103,release,release,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448,1,['release'],['release']
Deployability,"This is a comment from @damienmarchal in #413 about deprecation task; __________________________________________; To summary this morning discussion with @guparan, @fredroy, @bcarrez, @StephaneCotin, @bruno-marques , @ErwanDouaille ...let's prepare for the sprint.; ; There is a general envy from people that want to participate to put the efforts to make a lighter version of Sofa. . To match this goal, we discussed a workflow this morning in connection with the branch ; https://github.com/SofaDefrost/sofa/tree/deprecating_components; and issue #346 . Concretely during the sprint we may prepare two kind of tasks:; - deprecating as much as component as possible; - stabilizing as much as component as possible . To deprecate the components we need to make a list with the following information: ; - name, some info why to deprecate it bad/redundant/etc... and the string show to the user to explain what to do/replacement and so on. . To stabilize components we need to integrate the work done in the SofaNG so I let @fredroy & @guparan say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/426#issuecomment-333146181:975,integrat,integrate,975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/426#issuecomment-333146181,1,['integrat'],['integrate']
Deployability,"This is a first attempt to fix our GitHub actions now failing. Solution from : https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3. GitHub Action errors; ```; Run pip install python-graphql-client; error: externally-managed-environment. × This environment is externally managed; ╰─> To install Python packages system-wide, try apt install; python3-xyz, where xyz is the package you are trying to; install.; ; If you wish to install a non-Debian-packaged Python package,; create a virtual environment using python3 -m venv path/to/venv.; Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make; sure you have python3-full installed.; ; If you wish to install a non-Debian packaged Python application,; it may be easiest to use pipx install xyz, which will manage a; virtual environment for you. Make sure you have pipx installed.; ; See /usr/share/doc/python3.12/README.venv for more information. note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.; hint: See PEP 668 for the detailed specification.; ``` . We will therefore investigate in an upcoming PR the use of virtual Python environment and see how it behaves when the action runs itself a python script",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5065:235,install,install,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5065,11,['install'],"['install', 'installation', 'installed']"
Deployability,"This is a first attempt to fix our GitHub actions now failing. Solution from : https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3. GitHub Action errors; ```; Run pip install python-graphql-client; error: externally-managed-environment. × This environment is externally managed; ╰─> To install Python packages system-wide, try apt install; python3-xyz, where xyz is the package you are trying to; install.; ; If you wish to install a non-Debian-packaged Python package,; create a virtual environment using python3 -m venv path/to/venv.; Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make; sure you have python3-full installed.; ; If you wish to install a non-Debian packaged Python application,; it may be easiest to use pipx install xyz, which will manage a; virtual environment for you. Make sure you have pipx installed.; ; See /usr/share/doc/python3.12/README.venv for more information. note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.; hint: See PEP 668 for the detailed specification.; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5061:235,install,install,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5061,11,['install'],"['install', 'installation', 'installed']"
Deployability,"This is a fix for a very specific situation. Here is what happens:. 1. A `msg_warning` is called in a component from a thread different from the main thread. It could be also `msg_error` or `msg_info`, as long as the message count of the element changes. It could be a change of name as well.; 2. The `ObjectStateListener` associated to the component updates the associated `QTreeWidgetItem` (this class is not a `QObject`).; 3. The icon is updated, so it warns the `QTreeWidget` (this class is a QObject) through a signal.; 4. Since the call happens in a thread different from the main thread, the queued connection is used. For that, all signals/slots parameters must be known to Qt's meta-object system. This PR registers the class `QVector<int>`, so it can be used in the queued connection. It partially fixes https://github.com/sofa-framework/sofa/issues/3610. The warning is no longer triggered by Qt. Therefore, the mutex is locked only once in one thread. I say it solves partially, because any other Qt error would trigger the same crash. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3749:351,update,updates,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3749,2,['update'],"['updated', 'updates']"
Deployability,This is a fix to update a bound box for a hyperelastic force field. Without updating the rotation and translation of a virtual camera works incorrectly. This method is a copy of a bound box computation from TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1401:17,update,update,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1401,1,['update'],['update']
Deployability,"This is a follow-up to #326, now with green tests. TL;DR: There should be no unprotected python code in sofa except in extension code. . Any code like this:. ```c++; void my_function(...) {; // ...; PySomething_Something(...);; }; ```. Should be GIL-protected as follows:; ```c++; void my_function(...) {; // ...; // the lock runs until the end of scope; sofa::simulation::PythonEnvironment::gil lock;; PySomething_Something(...);; }; ```. Or even better yet: don't use naked python calls and use the `PythonEnvironment` API instead. You may also temporarily release the GIL while doing a costly/blocking c++ operation as follows:. ```c++; void my_function_that_already_owns_the_gil(...) {; // ...; // unlocks the GIL until the end of scope; sofa::simulation::PythonEnvironment::no_gil unlock;; // ...; }; ``` . I tried looking for all python calls in the codebase, but I may have missed some. . # Changelog. - added `PythonEnvironment::gil` RAII for scoped acquisition of the GIL; - added `PythonEnvironment::no_gil` RAII for scoped release of the GIL; - GIL-protected most (all?) python calls with the above (except in extension code); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/347:559,release,release,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/347,2,['release'],['release']
Deployability,"This is a task for the conda-forge packaging. Add QGLViewer2 name as Conda installs this name instead of QGLViewer on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4841:75,install,installs,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4841,1,['install'],['installs']
Deployability,"This is a variation of the proposal done by @fjourdes in #455 where I allow me a bit more refactoring. . Here is what the PR does:; - implement basic test class in sofa/helper/testing/ BaseTest & NumericTest so that all framework tests can use them. ; - in SofaSimulationGraph/testing add a BaseSimulationTest class that implement facilities for tests that needs scene manipulation & loading. ; - udpates SofaTest to use the previously defined classes but still behaving as they used to in the past. ; - updates the framework_test to use BaseTest or NumericTest in place of Sofa_test or ::testing; - moves the tests in framework to framework_extra when they are manipulating a simulation (thus requires BaseSimulationTest instead of BaseTest); - updates the tests in simulation_test so that they don't use SofaTest anymore. ; - moves SimpleApi from SceneCreator to SofaSimulationGraph & fix a bug.; - creates a plugin in a the application/package directory so that in our tests we can load all the common sofa component with a single RequirePlugin(""SofaAllCommonComponents""). The consequences are:; - SofaTest is no more needed in framework & simulation ; - we can now progressively make the other tests to rely on BaseTest, BaseSimulation and SimpleAPI that are dependency free instead of SofaTest/SceneCreator. . Feel free to provide feedback/comment. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471:504,update,updates,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471,2,['update'],['updates']
Deployability,"This is small feature addition. Currently, LinearMovementConstraint only takes trajectories relative to the rest position of the MechanicalState. Sometimes though, the trajectory is specified in world frame coordinates, and especially with Rigid3D (i.e. orientations), conversion is not trivial for the user . This patch introduces a switch ""relativeMovements"" (default true).; When disabled, trajectories can be specified in world frame coordinates. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/394:315,patch,patch,315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/394,1,['patch'],['patch']
Deployability,"This is still WIP be I would be happy to have some feedback. As discuss in #744 . The idea at the end is to remove all GetMeshTopology. ; 1. Add SingleLink in all component accessing GetMeshTopology from context; 2. Update all scenes but keep backward compability:; ```; if (linkTopology.empty()){; msg_warning() <<""set the link"";; linkTopology.set((this->getContext()->getMeshTopology());; }; ```; 3. Flag all getXXXMeshTopology to Depreciate 20.06 ?; 4. after 20.06 Remove all getMeshTopology(). Component upgraded: ; - DiagonalMass; - [SofaGeneralSimpleFEM]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaSimpleFEM]; - HexahedronFEMForceField; - TetrahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - NonUniformHexahedronFEMForceField; - [SofaGeneralDeformable] ; - QuadBendingSpring; - QuadularBendingSprings; - VectorSpringFF; - FastTriangularBendingSpring; - TriangleBendingSpring; - TriangularBendingSpring; - TriangularBiquadraticSpringFF; - TriangularQuadraticSpringFF; - TriangularTensorMassFF. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1183:216,Update,Update,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1183,2,"['Update', 'upgrade']","['Update', 'upgraded']"
Deployability,"This is the callback system we use in our dev branch for runSofa2.; It lets you add a callback function so that outputs can be updated upon changes on their input data.; The callback function returns a component state (Valid / invalid / ...) which guarantees that the component's state is properly maintained. I kept this PR simple (only tests to show the working principle), but will make another one later on with a few components that we've updated to use this callback mechanism (AddResourceRepository, MeshLoaders (OBJ / VTK / STL ...) . This mechanism is also used in the ""nodephysics"" Links POC (https://github.com/SofaDefrost/ComponentData_POC/pull/2). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1406:127,update,updated,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1406,2,['update'],['updated']
Deployability,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1859:160,update,update,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859,1,['update'],['update']
Deployability,"This is the first PR of a long series concerning ISSofa (InSimo) commits merge.; This branch has to be merged first because it is the base branch of all further integrations.; It contains mostly SofaPython commits and also some CI and environment commits. ## issofa_python. ### New features; Add binding python to get slaves and names on baseObjects.; Add Python bindings for triangle and point topology modifiers. Example scene which show triangle refining.; Creation of Binding_BaseTopologyObject common to PointSetTopologyModifier and TriangleSetTopologyModifier.; Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name. May be extended to include more search options later. ### Improvements; SendScriptEvent should only be applied on a specified node, not on root !; WARNING: may affect python script behavior.; Allow to get the value of a data as a string when its type is not handle by the binding.; Object and type names are now both optional when calling BaseContext_getObjects(). Moreover the search direction can now optionally be passed to BaseContext_getObjects() (default is 'Local').; Binding_Data expose fullPath read only parameter for BaseData that derive from DataFileName, which as the name suggests, returns the fullPath to the file pointed by that data. Returns None otherwise. ### Bugfixes; If the data to be gotten using the bind is a vector of type 'unknown' then the text of the data is returned as a whole.; Fix compilation and warnings with gcc.; Fix SofaPython build on linux.; Fix undefined behaviour and potential crash in Python BaseContext.getObjects() due to PyList accessed out of bounds. ; Fix a memory leak which happens whenever an object is transferred from C++ to Python. _______________________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit te",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171:161,integrat,integrations,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171,1,['integrat'],['integrations']
Deployability,"This is the new call stack after last commit, calling applyTransform at the end of load method... To be discussed. ```; SphereLoader::load; SphereLoader::applyTransform; !! addUpdateCallback filename; m_filename has changed: 1; SphereLoader::load; SphereLoader::applyTransform; SphereLoader::applyTransform exit; SphereLoader::load exit; !! addUpdateCallback exit valid; !! updateTransformPosition; d_translation has changed: 0; d_rotation has changed: 0; d_scale has changed: 1; SphereLoader::applyTransform; SphereLoader::applyTransform exit; !! updateTransformPosition exit; SphereLoader::applyTransform exit; SphereLoader::load exit; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-716717800:374,update,updateTransformPosition,374,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-716717800,2,['update'],['updateTransformPosition']
Deployability,"This is the return of PR https://github.com/sofa-framework/sofa/pull/106 taking into account all the feedback and discussion in https://github.com/sofa-framework/sofa/issues/179. This PR contains: ; - a PerComponentLoggingMessageHandler to stores the messages in components in a much cleaner way compared to the existing code in Sofa.; - the old history code is removed but a compatibility layer on top of the new one is provided to ; provide backward compatibility (eg in third party code like qtSofaQuick). ; - the runSofa GUI is slighly updated and improved to make use of the new component. ; - the msg_api is extended to facilitate its use and coherency; - I fixed all around in the code base the mis-usages of printLog eg: if(f_printLog) cout << .... ; - I didn't replaced the f_printLog data field because it would have broken the API too much ; (maybe one day if someone care). Now a bried summary of the new functions in the msg_* API; ```cpp; msg_info() << ""This is a message sended by the this component"" ;; msg_info(other) << ""This is a message sended by the 'other' component"" ;; msg_info(""A String"") << ""This message is not sended by a component"";; ```; Each version also exist in a conditional form eg:; ```cpp ; msg_info_when(!file.valid()) << ""File is not valid"" ; ```. In the previous examples you can also replace 'info' with the type of message you want to emit among:; 'info', 'advice', 'deprecated', 'warning', 'error', 'fatal'. ; ; 'warning', 'error' and 'fatal' and 'deprecated' message cannot be muted with the printLog parameter while 'info','advice',' can. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190:540,update,updated,540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190,1,['update'],['updated']
Deployability,"This is to fix SOFA configuration without Qt; Not 100% sure of the change inside the cmake.in. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3423:20,configurat,configuration,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3423,1,['configurat'],['configuration']
Deployability,This issue can be closed as the unittests are activated now as advised by @fjourdes since ... I dont remember but few releases ago.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/489#issuecomment-1050660937:118,release,releases,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/489#issuecomment-1050660937,1,['release'],['releases']
Deployability,"This issue has been fixed (or should have been 😛) since the release of the v20.12.; Install and out-of-tree compilation have been a priority for this release.; If there is still some issue on this topic, please don't hesitate to re-open this issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1560#issuecomment-780660230:60,release,release,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1560#issuecomment-780660230,3,"['Install', 'release']","['Install', 'release']"
Deployability,"This issue is connected to the discussion: ; https://github.com/sofa-framework/sofa/commit/aee0d912432d043a792f3b43160417e724b11704. This discussion was continued between I, Mathieu and Guillaume, during our weekly meeting. . Our conclusion were that: ; - in sofa::core the defaultmessagehandler should be the simplest so that people making third party applications out of Sofa are not disturbed by the new formatter. . - runSofa & Test may use the RichStyleFormater . - it would be nice to add more capability of routing the messages (explaination and details in the following). **New features:** ; Currently the _msg_* API has two class of message (Dev and Runtime). Message of class Runtime are supposed to be for ""the users"". Message of class Dev are supposed to be for developers. ; You can send message of class Runtime with _msg_info()_...and message of class Dev with _dmsg info()_. The use of macro was to allows us to totally remove the _dmsg*_ from the sofa official releases (they are totally removed from the binary and thus have a zero cost). ; ; In addition to the classes of message is the 'type' which is among: Advice, Info, Warning, Error, Deprecated, Fatal. To select the type you can use the macro _msg info_, _msg advice, _msg error_, ... or their dmsg_ equivalent. . It was suggested:; - to add one extra class of message for ""Log""; - to add a new MessageHandler that can route precisely the messages depending on the developper's need. ; (eg:; - route all the message to a FileMessageHandler but not the one of type advice); - route all the messages of class Log to a FileMessageHandler as well as the class Runtime&Error). DM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/56:978,release,releases,978,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/56,1,['release'],['releases']
Deployability,This issue is the general discussion about the project Continuous Integration.; Please feel free to share any remark or ongoing work about it.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186:55,Continuous,Continuous,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186,2,"['Continuous', 'Integrat']","['Continuous', 'Integration']"
Deployability,"This issue was first discovered by @rosaliepl : https://www.sofa-framework.org/community/forum/topic/error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile/#post-8397. The image plugin supports the python plugin, but does not require it. However, when linking the image plugin into an external project by using the install path of sofa, the image plugin lists the python plugin as a required dependency. CMake will then return the following error:. ```; CMake Error at CMakeLists.txt:50 (find_package):; Found package configuration file:. /.../sofa/build/install/lib/cmake/image/imageConfig.cmake. but it set image_FOUND to FALSE so package ""image"" is considered to be NOT; FOUND. Reason given by package:. The following imported targets are referenced, but are missing: SofaPython. -- Configuring incomplete, errors occurred!; ```. To reproduce the bug; 1. Compile SOFA with the image plugin activated, but without python plugin; 2. Lauch cmake on an external project and add the image plugin as a dependency; `find_package(image REQUIRED)`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/135:330,install,install,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/135,3,"['configurat', 'install']","['configuration', 'install']"
Deployability,"This issue was first discovered by @rosaliepl : https://www.sofa-framework.org/community/forum/topic/error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile/#post-8397. When installing SOFA's image plugin (ex.: make install), the image plugin installation does not preserve the file's hierarchy which will failed the compilation of any external project that includes the SOFACImg.h file. `/.../sofa/build/install/include/CImg/CImg.h:9341:21: fatal error: plugins/skeleton.h: No such file or directory`. If we look in the installation folder (sofa/build/install), all the required headers are in include/CImg instead of include/CImg/plugins which will then failed the compilation. To reproduce the bug. 1. Compile and install SOFA with the image plugin activated; 2. Create an external project with the image plugin as a requirement, and add the following line in any of the source file: `#include <CImg/SOFACImg.h>`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/136:188,install,installing,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/136,7,['install'],"['install', 'installation', 'installing']"
Deployability,"This last parameter can be deduced from the container traits so there is no need to specify it. ; This allow to simplifying some calling point as in MechanicalVisitor & UpdateMappingVisitor.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1689:169,Update,UpdateMappingVisitor,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1689,1,['Update'],['UpdateMappingVisitor']
Deployability,"This merge is not possible. Hervé, first you have to know your own fork (or a more global fork you could create for asclepios) can be compiled in the sofa continuous integration system. To include your work about high order topology in the sofa-public w/o breaking existing stuff, my suggestion is to create a new plugin in your fork, then to propose it here as a pull request. Once you'll have created the PR, we'll be able to possibly fix the glue with Flexible.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-263809969:155,continuous,continuous,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-263809969,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"This pr aims at fixing the crash on exit for some python scene. It was due to the cache of the Sofa python module not being cleaned up correctly (deleted after the interpreter). This is corrected here by insuring that the interpreter is correcty released through cleanup callback (see the SofaPython3 pr for more insights) . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828:246,release,released,246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828,1,['release'],['released']
Deployability,"This pull request aims at making the gravity clearly appearing in object nodes as a GravityForceField.; Old way to define gravity still works and is not deprecated. Main changes:; - By implementing this, the Mass is not inheriting from ForceField anymore.; - The optional mechanism of a separate gravity and the **Gravity** class are also deprecated.; - Default gravity is now 0 (therefore some scenes might fail and need an update). The GravityForceField can:; - either be manually added by the user in the node; - or the gravity can still be globally defined in the root node which will create the automatic creation of a GravityForceField for each mass in the graph. Fix: #2683. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/305]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/56]; [ci-depends-on https://github.com/sofa-framework/ci/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988:425,update,update,425,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988,1,['update'],['update']
Deployability,"This pull request does not change anything to the compilation, it only affects the install phase. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/383:83,install,install,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/383,1,['install'],['install']
Deployability,This pull request removes classes implementing High Order simplicial elements from SOFA.; Those classes have been moved to plugin sofaFramework/ plugin.HighOrder; Updates include . - removing topological classes for High order triangulation and tetrahedral meshes; - removing tests associated with topological classes; - removing topological and mechanical mapping between regular and highorder meshes; - update of MeshMassMatrix by removing code to compute mass of high order elements. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/222:163,Update,Updates,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/222,2,"['Update', 'update']","['Updates', 'update']"
Deployability,This pull-request adds the following features ; - add numerical integration on tetrahedra and triangles; - add a mechanical tag on a PointSetGeometry object in order to find its associated MechanicalObject; - add the orthogonal of a 2d vector; - add support of high order elements in VTK and Gmesh mesh loaders. It also fixes some bugs ; -Quand2Triangle Topologivcal mapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/219:64,integrat,integration,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/219,1,['integrat'],['integration']
Deployability,This removes warnings that appear when running runSofa from a directory where it was installed from source. This should not affect compilation in any way (but not sure how it would affect packaging Sofa). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/687:85,install,installed,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/687,1,['install'],['installed']
Deployability,"This request contains: ; - Add new tests to LocalMinDistance; - Add new tests Light (the three kind of light); - Add AllComponent (this test is failling until all component have an associated example file, on failure it reports the number of missing examples); - Add new test to LightManager . The ChangeLog is updated with the content of this pull-request.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/89:311,update,updated,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/89,1,['update'],['updated']
Deployability,This should avoid confusion in constraint resolution when mixing integration factors.; Let's see how this affect the CI. This affects the UncoupledConstraintCorrection : the flag _useOdeSolverIntegrationFactors_ is now true by default. This enforces to respect values returned by the ODESolver. See this [forum topic](https://www.sofa-framework.org/community/forum/topic/bilateralinteractionconstraint-reduces-gravity-by-100x/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369:65,integrat,integration,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369,1,['integrat'],['integration']
Deployability,"This should fix #5065. EDIT: `actions/setup-python` could be used to provision the Python install de Python (install provided by the OS). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5066:90,install,install,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5066,2,['install'],['install']
Deployability,This should fix CMake errors like `file cannot create directory: C:/softwares/sofa-soft-build/$C:/softwares/sofa-soft-install/plugins/SofaMiscCollision/lib` on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1154:118,install,install,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1154,1,['install'],['install']
Deployability,This should fix all the scene crashing when performing topological change with some mechanicalMapping in the scene. Like for example identityMapping between the mechanicalObject and the OglModel. This is a temporary fix. Those 2 visitors will be removed as soon as all the component listed in #810 will be updated to use TopologicalData. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/880:306,update,updated,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/880,1,['update'],['updated']
Deployability,This shouldn't break anything and is a first step toward the slighgly more ambitious pr #601 . CHANGELOG:; - update gtest from their master (version 1.9: sha1 447d58b4ee8ea96b4757a5bb5f0b3be75af6c2a1); - update the CMakeLists so that they correctly export the needed -D to be used as a shared library; - Fix the problem of missing GTEST_API_ operator<< gtest by implementing the function in TestMessageHandler_test instead of gtest. NB: A better FIX for the GTEST_API_ operator<< could be to make submit PR to gtest but I have no more time left. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604:109,update,update,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604,2,['update'],['update']
Deployability,"This will avoid updating each year the header, thus polluting the history of the code.; Update list of authors of SOFA. Perl code used for additional cleaning:; ```batch; perl -0777 -i -pe ""s/((\*){78}\/\n)((\/)(.*?)(\n)|\n|(\s*?)\*(.*?)(\n))/\1/s""; ```. Following files could also be discussed:; - SofaKernel/modules/SofaBaseCollision/IntrCapsuleOBB.inl; - SofaKernel/modules/SofaHelper/src/sofa/helper/RandomGenerator.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/gl/Trackball.cpp // h ; - SofaKernel/modules/SofaHelper/src/sofa/helper/polygon_cube_intersection/fast_polygon_cube_intersection.cpp // h; - applications/projects/meshconv/meshconv.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1375:88,Update,Update,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1375,1,['Update'],['Update']
Deployability,"This will contain all the macros/configuration headers needed by all Sofa (config.h, etc); For now, those things are contained are in:; - SofaFramework; - SofaHelper; - Sofa (at the root); - maybe somewhere else ?; ; It will solve the issue raised at #1661",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1667:33,configurat,configuration,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1667,1,['configurat'],['configuration']
Deployability,"This will enable creating SOFA packages on Linux when Qt is installed from the package manager instead of the Qt installer. It also fixes some missing dependencies on Linux distros other than ubuntu 18.04. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1728:60,install,installed,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1728,2,['install'],"['installed', 'installer']"
Deployability,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1971:107,update,update,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971,2,['update'],['update']
Deployability,"This won't be enough. All bindings made for SofaPython fail when building in C++17.; ```; [1208/2186] Building CXX object modules/SofaExporter/CMakeFiles/SofaExporter.dir/src/SofaExporter/bindings/Binding_STLExporter.cpp.o; FAILED: modules/SofaExporter/CMakeFiles/SofaExporter.dir/src/SofaExporter/bindings/Binding_STLExporter.cpp.o; < ... >; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/modules/SofaExporter/src/SofaExporter/bindings/Binding_STLExporter.cpp:24:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/modules/SofaExporter/src/SofaExporter/bindings/Binding_STLExporter.h:25:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/applications/plugins/SofaPython/../SofaPython/PythonMacros.h:29:; In file included from /media/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1284/ubuntu_clang-6_options_release/src/applications/plugins/SofaPython/../SofaPython/PythonCommon.h:27:; In file included from /usr/include/python2.7/Python.h:88:; /usr/include/python2.7/unicodeobject.h:534:5: error: ISO C++17 does not allow 'register' storage class specifier [-Wregister]; register PyObject *obj, /* Object */; ^~~~~~~~~; ```; See https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1284/CI_CONFIG=ubuntu_clang-6,CI_PLUGINS=options,CI_TYPE=release/2/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1284#issuecomment-603846480:1452,release,release,1452,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1284#issuecomment-603846480,1,['release'],['release']
Deployability,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4436:62,update,update,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436,4,['update'],"['update', 'updateVisual']"
Deployability,Those Configurations are also meant to be used by the CI to easily set the type of build. The full build will be the one used for PR and Releases. While plugin will be deactivated by the bash script depending on the installed dependencies on the OS.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4766#issuecomment-2150330645:6,Configurat,Configurations,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4766#issuecomment-2150330645,3,"['Configurat', 'Release', 'install']","['Configurations', 'Releases', 'installed']"
Deployability,"Those issues could be fixed when the OglFluidModel will be a VisualManager or something like that, to do multitexturing with the current FrameBuffer in Sofa.; This rendering is mostly a Proof of Concept so I shall upgrade it when I have time in the future ;); Or if it is deemed necessary...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1194#issuecomment-544897706:214,upgrade,upgrade,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1194#issuecomment-544897706,1,['upgrade'],['upgrade']
Deployability,"Timeout on tests was disabled in 2bc5db53 with commit message ""I have the intuition that this timeout mess might be the reason why continuous builds on Windows are so long. Let's see...""; Should we re-enable this?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289726033:131,continuous,continuous,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289726033,1,['continuous'],['continuous']
Deployability,"To answer directly the question of @epernod , yes 🫠. I think it was designed to mimic https://cmake.org/cmake/help/latest/module/FetchContent.html (kind of), at a time where it did not exist in CMake yet ; as `ExternalProject_Add` https://cmake.org/cmake/help/latest/module/ExternalProject.html have existed since much longer time ago (CMake 3.0 ?). Now that it is been introduced few years from now (2018 I think), I think the `ExternalProject_Add` mechanism should be phased out and replaced by the `FetchContent` one.; It would save the problem of getting the source being pulled into the source dir of SOFA (hence the .gitignore file); **AND** also the problem of plugins' updates, as (normally) the cmake configure step updates the source (except if `FETCHCONTENT_UPDATES_DISCONNECTED` is set)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4409#issuecomment-1886033453:677,update,updates,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409#issuecomment-1886033453,2,['update'],['updates']
Deployability,"To anyone (@guparan and @hugtalbot, @fredroy, @bcarrez ) Can you please check how the formatting sheet should be updated to stick the the sofa guidelines (or withdrawn some rule from the guidelines) so we have an up-to date sheet to use.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353082986:113,update,updated,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353082986,1,['update'],['updated']
Deployability,"To be merged **after** https://github.com/sofa-framework/sofa/pull/3928. Close #3001 and implement it again (move of all files made it too complex to pursue). - Deprecation of the DiagonalMass; - Making it as an inherited class from MeshMatrixMass. **TODO (in this PR)**; - [x] add deprecation macros in CPU and GPU codes (`SOFA_DEPRECATED_HEADER`); - [x] ~~Add callback on lumping to warn user~~ (in another PR); - [x] ~~edge implementation to backport in MMM~~ (not meaning ful, see below patch); - [x] rename the *DiagonalMass.scn* example and use MeshMatrixMass; - [x] specific removed-deprecation macros for RigidTypes: specialized class DiagonalMass for Rigid with a `parse()` function warning for user & deprecation for devs; - [x] assess again performances; - direct; - Diagonal-buildMassMatrix = 0.57%; - MeshMM-buildMassMatrix = 0.57%; - iterative; - Diagonal-addMDx = 0.45%; - MeshMM-addMDx = 0.70% -- 0.47% without the if condition for graph plotting; - TORUS Fall scene over 10 000 steps; - DiagonalMass; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.54	 1 	 0.01	 0.12	 0.01	 0 	 0.01	 0.19	.........DM-buildMassMatrix; - MeshMatrixMass lumped; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.44	 1 	 **0.0**	 **0.04**	 0.01	 0 	 0.01	 **0.18**	.........MMM-buildMassMatrix; - [ ] update all scenes ( `<DiagonalMass` :arrow_right: `<MeshMatrixMass lumping=""1""` ). **TODO (after this PR)**; - deprecate XspLoaders (see #4003). **NOTE** ; Rigid cases previously handled by the DiagonalMass are not anymore, therefore breaking.; Regarding the absence of use of xs3 formats for rigid bodies and the starting project coupling Pinocchio which should bring a more robust description/handling of rigid bodies, I would advocate to :; - deprecated associated components (XspLoader, MeshXspLoader and their impact on RigidMapping, SpringFF, VectorSpringFF) ; - take this opportunity to clean and replace OldTutorials coming with it with new ones. _________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3912:491,patch,patch,491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912,1,['patch'],['patch']
Deployability,To do: update the deprecation dates,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4771#issuecomment-2178054391:7,update,update,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4771#issuecomment-2178054391,1,['update'],['update']
Deployability,"To me compiler's specific default configuration shouldn't have consequence in our code base and we shouldn't design software architecture *because* of a specific compiler issue (which is actually not an issue..because it is something that can be change with command arguments). Compiler's options exists to be used and so I see no problem in using them. . Said differently, setting compiler's option in the CMake to have more inlining is much more legitimate ""and the good way"" than putting ""inline"" in front of every declaration. . EDIT: what surprise me is that this seems related to inlining... while I would have bet it would be more related to LTO/GO.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3343#issuecomment-1265270806:34,configurat,configuration,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3343#issuecomment-1265270806,1,['configurat'],['configuration']
Deployability,To me this PR is to merge once updated.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-459502721:31,update,updated,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-459502721,1,['update'],['updated']
Deployability,To prepare for runSofa2 i feel the need to refactor some aspects. . CHANGELOG:; - ADD a Camera object inheriting from BaseCamera so that it become possible to render a scene. The difference with InteractionCamera is that the Camera component is not having any interaction so you can implement your own 'application specific behavior' by using an external Controller (eg: PythonScriptController).; - ADD a link in BaseCamera to a BackgroundSetting so different camera can have different background. ; - the Camera alias is not anymore creating an InteractionCamera but a Camera object; - Update the caduceus example.; - Light object now have a drawSource so that it is possible to draw the source from without having to change the d_drawSource data field.; ; This PR replace #674 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/676:587,Update,Update,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/676,1,['Update'],['Update']
Deployability,"To redo/update this PR, go in SOFA sources and run ; ```bash; ./scripts/licenseUpdater/licenseUpdater.sh . auto; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1375#issuecomment-627320642:8,update,update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1375#issuecomment-627320642,1,['update'],['update']
Deployability,"To remember, in the core of SOFA the following API is dedicated only to Compliant and Flexible plugins:. - BaseMapping : getJs + updateK + getK; - BarycentricMapping.h : type Eigen sparse matrices defined + instantiation",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1636:129,update,updateK,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1636,1,['update'],['updateK']
Deployability,"To summary this morning discussion with @guparan, @fredroy, @bcarrez, @StephaneCotin, @bruno-marques , @ErwanDouaille ...let's prepare for the sprint.; ; There is a general envy from people that want to participate to put the efforts to make a lighter version of Sofa. . To match this goal, we discussed a workflow this morning in connection with the branch ; https://github.com/SofaDefrost/sofa/tree/deprecating_components; and issue #346 . Concretely during the sprint we may prepare two kind of tasks:; - deprecating as much as component as possible; - stabilizing as much as component as possible . To deprecate the components we need to make a list with the following information: ; - name, some info why to deprecate it bad/redundant/etc... and the string show to the user to explain what to do/replacement and so on. . To stabilize components we need to integrate the work done in the SofaNG so I let @fredroy & @guparan say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-332496965:861,integrat,integrate,861,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-332496965,1,['integrat'],['integrate']
Deployability,Today RST doc is in the /doc folder of the SofaPython3.; It needs to be manually compiled and uploaded on readthedoc to update the documentation.; This should be simplified. It could also be the occasion to improve the doc.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3764:120,update,update,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3764,1,['update'],['update']
Deployability,"Too bad, I was just searching for this feature and discovered it was not integrated.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033#issuecomment-1164402707:73,integrat,integrated,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033#issuecomment-1164402707,1,['integrat'],['integrated']
Deployability,TopologicalChangeProcessor_test needs an update since the number of points is then known. @epernod,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1232712940:41,update,update,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1232712940,1,['update'],['update']
Deployability,Tracy integration in https://github.com/sofa-framework/SofaGLFW/pull/89,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4200#issuecomment-1765861726:6,integrat,integration,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4200#issuecomment-1765861726,1,['integrat'],['integration']
Deployability,Triangle numerical integration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/219:19,integrat,integration,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/219,1,['integrat'],['integration']
Deployability,"Triangles `or `TrianglesAroundEdges `as well as `d_triangles `array inside a `TetrahedronToplogy `where empty at start and created only the first time a getter is called.; For example: `getEdgesInTriangleArray()` was calling: `if(m_edgesInTriangleArray.empty()) createEdgesInTriangleArray()` . This works but means at start component are not fully init (potential unstable behavior) and there is no warranty at which timestep buffer will be created. ; Furthermore means that getter are not const and could change the content of the container which is a bad design (in my opinion). **This PR force the computation of all buffers at component init** using a dedicated method `initTopology()` which is called in cascade -> `Tetrahedron::initTopology()` will call `Triangle::initTopology()` -> `Edge::initTopology()`; **and remove all buffer creation call from the getter.**. - Additional changes: ; - Add more check in the buffer creation methods. Potentially exit if creation is not possible (will return bool in future changes).; - Always check buffer size access in the getter. If out of bound acces, returns Invalid element and only emit a warning if CHECK_TOPOLOGY is ON, as this call could be logical and the caller should check the invalid return. ; - Update all topologicalMapping to init the target topology at end of mapping init. ; - **Add some static invalid buffers in sofa::core::topology::Topology.h -> Im not fully happy about those add. Any better suggestion is welcomed.**. fixes #746; fixes #955; fixes #956 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/967:1403,Update,Update,1403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/967,1,['Update'],['Update']
Deployability,"Trying to include the SofaExporter module in an external project (out-of-tree build of a plugin || test) was not functional since include directories were not exposed properly. I took inspiration from CImgPlugin for this PR, which uses CMAKE_CURRENT_SOURCE_DIR to expose the target's include directory.. but I believe this is actually wrong as this corresponds to the path to the sources (`/home/bruno/dev/sofa/modules/SofaExporter/src/` in my case for instance) and not to the installed include directory, (which should be `/home/bruno/dev/sofa/build/install/include/SofaExporter/src/SofaExporter` on my machine). I took a look at other plugins & pluginized modules & they all seem to do this, so Idk if it's a mistake or done on purpose..?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/975:478,install,installed,478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/975,2,['install'],"['install', 'installed']"
Deployability,"Two events are launched during the constraint solver pipeline:; - `BuildConstraintSystemEndEvent` is launched after the constraint system has been built; - `SolveConstraintSystemEndEvent` is launched after the constraint system has been solved. This allows a Python controller to subscribe automatically to those events if the controller implements `onBuildConstraintSystemEndEvent` and `onSolveConstraintSystemEndEvent`:. ```python; class MyController(Sofa.Core.Controller):; def __init__(self, *args, **kwargs):; Sofa.Core.Controller.__init__(self, *args, *kwargs); ; def onBuildConstraintSystemEndEvent(self, params):; print(""BuildConstraintSystemEndEvent event received ""+str(params)). def onSolveConstraintSystemEndEvent(self, params):; print(""SolveConstraintSystemEndEvent event received ""+str(params)); ```. In collaboration with @TanguyNav and @EtienneMenager. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3418:53,pipeline,pipeline,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3418,1,['pipeline'],['pipeline']
Deployability,"Two forcefields were existing and very similar:; - UniformVelocityDampingForceField : real applied similarly in a isotropic on each dofs (x, y, z); - DiagonalVelocityDampingForceField : possibly anisotropic vector of damping coefficient per node. Unify these two with the NodalLinearDampingForceField. One question : which input do we want ; - a real; - a vector of real (which not existing so far); - a vector of Deriv (allowing for anistropic damping while we do not do much anistropy in SOFA). Remaining TODO; - [ ] Update all tests; - [ ] Update all examples. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4920:519,Update,Update,519,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4920,2,['Update'],['Update']
Deployability,Two regression tests are failing :; - Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver; - Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver_diagonal. I suppose this is because you moved them into a new folder and the Regression project has not been updated accordingly.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-873010397:284,update,updated,284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-873010397,1,['update'],['updated']
Deployability,"UPDATE: SofaHelper compilation with msvc. libpng should not be forced; to be linked using pragma directive. The name of the library may vary,; and it the debug version may well not be available, and its; unavailability should not break the debug build. I fell in the same problem as the one mentionned in issue #443 while compiling; with msvc in debug, without having on my system a version of the libpng ; library called ""libpngd.lib"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/446:0,UPDATE,UPDATE,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/446,1,['UPDATE'],['UPDATE']
Deployability,Unable to load plugin when sofa is installed,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1560:35,install,installed,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1560,1,['install'],['installed']
Deployability,Unfortunately no. SofaPython3 builds without error on my Ubuntu 18.04; My config:; - SOFA v20.06 binaries unzipped in my home; - pybind11 2.4.3 installed in my system; - python 3.8.3 installed in my system,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656144967:144,install,installed,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-656144967,2,['install'],['installed']
Deployability,"Unfortunately, I won't be able to come to Sophia Antipolis for the next STC... But if I haven't investigated the issue until then, I'll try to block 1 or 2 days during the STC to work on it from distance.; I'll keep you updated in the meantime.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-489441938:220,update,updated,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-489441938,1,['update'],['updated']
Deployability,"Unless we are packaging the installation files, remove the automatic installation of external system libraries (glew, boost, etc.). This was messing with out-of-tree plugins compilation as the installed; external libraries were hiding the system's ones. Example of CMake warnings from the out-of-tree plugins:. ```cmake; Cannot generate a safe runtime search path for target MyProject; because files in some directories may conflict with libraries in implicit; directories:. runtime library [libGLEW.so.2.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_filesystem.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_program_options.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_thread.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_date_time.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_chrono.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_system.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_atomic.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; ```. See https://github.com/sofa-framework/sofa/issues/1153 for more details. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test fai",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1387:28,install,installation,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1387,6,['install'],"['install', 'installation', 'installed']"
Deployability,Update (as bench on scenes is unreliable); - Linux/clang: `15.5sec` (master) vs `16.5sec` (pr); - Windows/cl: `17.5sec` (master) vs `18.2sec` (pr). Much less difference after all,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2550#issuecomment-1011986258:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2550#issuecomment-1011986258,1,['Update'],['Update']
Deployability,Update ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270089387:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270089387,1,['Update'],['Update']
Deployability,Update CHANGELOG.md for release 16.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/104:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/104,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update CHANGELOG.md for the upcoming v16.12 release,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/120:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/120,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update CONTRIBUTING.md,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3774:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3774,1,['Update'],['Update']
Deployability,"Update CONTRIBUTING.md further to 20170503 SOFA meeting. - Track the status of each pull request using labels.; - If an issue reports a bug or any abnormal behavior in SOFA, a test highlighting the issue must be written. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/260:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/260,1,['Update'],['Update']
Deployability,Update ChangeLog since last release v16.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/263:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/263,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update ChangeLog to better guide users when facing issues with recent breaking PRs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1562:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1562,1,['Update'],['Update']
Deployability,Update Collodi branch for review,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1492:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1492,1,['Update'],['Update']
Deployability,Update GUIDELINES.md,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/59:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/59,1,['Update'],['Update']
Deployability,Update Git Bash on Windows VMs,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/234:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/234,1,['Update'],['Update']
Deployability,Update SofaMacros.cmake by setting the policy CMP0057 NEW for supporting the IN_LIST operator of if(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1454:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1454,1,['Update'],['Update']
Deployability,Update a Eigen wrapper for SOFA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2474:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2474,1,['Update'],['Update']
Deployability,"Update architecture of plugins examples: doc, PluginExample, Qt template",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1041:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1041,1,['Update'],['Update']
Deployability,Update contributing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/260:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/260,1,['Update'],['Update']
Deployability,Update contributing firsttimers 202302,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3623:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3623,1,['Update'],['Update']
Deployability,Update deprecated components list,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/689:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/689,1,['Update'],['Update']
Deployability,Update doc on collision detection further to #2030,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2048:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2048,1,['Update'],['Update']
Deployability,Update documentation (supported version) : see [pages](https://www.sofa-framework.org/community/doc/getting-started/build/linux/); and make sure that the CI is following these (Guillaume will work on this),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-585110991:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249#issuecomment-585110991,1,['Update'],['Update']
Deployability,Update documentation with new features of 16.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/103:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/103,1,['Update'],['Update']
Deployability,Update fetch mechanism for plugins using cmake 3.24,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4604:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4604,1,['Update'],['Update']
Deployability,Update further to work on the upcoming Optimus plugin:; thanks @guparan for solving the issue !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1498:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1498,1,['Update'],['Update']
Deployability,Update guidelines with sofa::type,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2506:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2506,1,['Update'],['Update']
Deployability,"Update is done.; Good to know: Git Bash added itself at the end of PATH, **after** MinGW. This brings me a question: why MinGW? We don't need all these duplicated tools (sh.exe, bash.exe, ...). @damienmarchal, did you install MinGW only for Ninja?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/234#issuecomment-291490914:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/234#issuecomment-291490914,2,"['Update', 'install']","['Update', 'install']"
Deployability,Update libQGLViewer to 2.7.1,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/545:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/545,1,['Update'],['Update']
Deployability,Update libQGLViewer to latest version,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/464:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/464,1,['Update'],['Update']
Deployability,Update of FixedConstraint in PR #1806,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1589#issuecomment-784952675:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1589#issuecomment-784952675,1,['Update'],['Update']
Deployability,Update of my suggestion:; - Analyze: output data resulting from the analysis of input ones; - Process: output data coming from computations using input data; - Mesh: all operation on topologies/meshes; - Rigid (possibly to merge into Process); - Select; - Transform. any alternative suggestion else Fred will have a gooooo; @epernod @alxbilger,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2812#issuecomment-1108846225:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2812#issuecomment-1108846225,1,['Update'],['Update']
Deployability,"Update of my suggestion:; - Analyze; - Process; - Mesh; - Rigid (possibly to merge into Process); - Select; - Transform. It ""merges"" your proposals more or less. If no other feedback Fred will do the changes and ... :arrow_down: merge !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2812#issuecomment-1106528695:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2812#issuecomment-1106528695,1,['Update'],['Update']
Deployability,Update of texture coordinates in OglModel,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2392:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2392,1,['Update'],['Update']
Deployability,Update of the scene graph view,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2920:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2920,1,['Update'],['Update']
Deployability,Update scene for investigation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2800:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2800,1,['Update'],['Update']
Deployability,"Update scene to show the different methods apply on a same beam (even if I can't see the diff...) ; Move the old TetrahedronFEMForceField.scn into TetrahedronFEMForceField_Chain.scn. TetrahedronFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedronFEMForceField scn 6_11_2021 12_12_37 PM](https://user-images.githubusercontent.com/21199245/121693178-2bfa6700-cac9-11eb-846f-6395d00a1aa0.png). TetrahedralCorotationalFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedralCorotationalFEMForceField scn 6_10_2021 9_26_44 AM](https://user-images.githubusercontent.com/21199245/121483753-d477d080-c9ce-11eb-968a-57009c936706.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2172:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172,1,['Update'],['Update']
Deployability,Update scenes for python3,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1220:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1220,1,['Update'],['Update']
Deployability,Update the Collodi branch,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/8:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/8,1,['Update'],['Update']
Deployability,Update the FIX but now this PR depends on change done in PR #2870,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1098890010:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1098890010,1,['Update'],['Update']
Deployability,"Update the guidelines so that they take into account the latest discussions and conclusion regarding the policy for:; - auto,; - epsilon,; - messaging,; - getContext(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1135:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1135,1,['Update'],['Update']
Deployability,"Update the list of plugins to NOT auto-load when executing runSofa from the release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3197:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3197,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update: . - now with a correct implementation of the timeout parameter. Tests should not fail randomly now...; - also updated the filemonitor tests to use this timeout parameter correctly,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/143:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/143,2,"['Update', 'update']","['Update', 'updated']"
Deployability,Update:; - Components/forcefield/BeamFEMForceField.scn fixed; - Components/constraint/BilateralInteractionConstraint.scn 100 1e-4; - ERRORBYDOF: 22.9926 ; - Demos/caduceus.scn 100 1e-3; - ERRORBYDOF: 2.68482; - Components/collision/FFDDistanceGridCollisionModel.scn 100 1e-4; - Moved into a plugin.; - Components/constraint/FrictionContact.scn 100 1e-4; - ERRORBYDOF: 1.45887; - Components/collision/RuleBasedContactManager.scn 100 1e-4; - ERRORBYDOF: 0.215011. 6/10 working!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/828#issuecomment-439006264:0,Update,Update,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/828#issuecomment-439006264,1,['Update'],['Update']
Deployability,Updated one last time and moved to https://github.com/sofa-framework/Communication; Feel free to open issues and pull-requests there.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-853156278:0,Update,Updated,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-853156278,1,['Update'],['Updated']
Deployability,"Updated to Qt6, and fixed on macos. This required some fixes in upstream nixpkgs: https://github.com/NixOS/nixpkgs/pull/348549, so until this is merged we have to use its source.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2416486756:0,Update,Updated,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2416486756,1,['Update'],['Updated']
Deployability,Upgraded to which version? Folder is still `metis-5.1.0`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1164220172:0,Upgrade,Upgraded,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3063#issuecomment-1164220172,1,['Upgrade'],['Upgraded']
Deployability,"Useless:. For example, the timer in `UpdateMappingVisitor::processMechanicalMapping` does not measure anything. Annoying:. I don't think it is a good practice to add timer on individual components. In particular, the ones I removed measure neglectable durations. The fact that there is one timer for every component adds a lot of pollution in the analysis of the timings, for nothing because it is neglectable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4631:37,Update,UpdateMappingVisitor,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4631,1,['Update'],['UpdateMappingVisitor']
Deployability,"Using the 21.06 sources from SOFA on Ubuntu, I faced a compilation issue with the CGAL plugin. It appears that the issue is fixed in #2246. Should it be backported in 21.06 release branch @guparan ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2480:173,release,release,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2480,1,['release'],['release']
Deployability,"Using the newly released CMake 3.15, the configuring stage fails with:. CMake Error at SofaKernel/SofaFramework/SofaMacros.cmake:686 (message):; Missing parameter TARGETS.; Call Stack (most recent call first):; applications/plugins/SofaMiscCollision/CMakeLists.txt:82 (sofa_generate_package). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105:16,release,released,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105,1,['release'],['released']
Deployability,"Very nice work @Wall-E-76 ! Impressive !; Thank you very much, let's wait the continuous integration !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1116#issuecomment-516328823:78,continuous,continuous,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1116#issuecomment-516328823,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2037:68,install,install,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037,1,['install'],['install']
Deployability,"VisuCatheter.addObject('AdaptiveBeamMapping', interpolation='@../InterpolGuide',; name='visuMapGuide', output='@Quads', isMechanical=False,; input='@../DOFs', useCurvAbs=True, printLog=False). # Ogl model; VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.addObject('OglModel', color=[0.2, 0.2, 0.8], quads='@../ContainerCatheter.quads',; material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20',; name='Visual'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'). CathterCollis = CathterMechanics.addChild('CollisionModel'); CathterCollis.activated = True; CathterCollis.addObject('EdgeSetTopologyContainer', name='collisEdgeSet'); CathterCollis.addObject('EdgeSetTopologyModifier', name='colliseEdgeModifier'); CathterCollis.addObject('MechanicalObject', name='CollisionDOFs'); CathterCollis.addObject('MultiAdaptiveBeamMapping',controller='../DeployController', useCurvAbs=True, printLog=False, name='collisMap'); CathterCollis.addObject('LineCollisionModel', proximity=0.0); CathterCollis.addObject('PointCollisionModel', proximity=0.0). Carotids = rootNode.addChild('Carotids'); Carotids.addObject('MeshSTLLoader', filename='../mesh/carotids.stl', flipNormals=False, triangulate=True,; name='meshLoader', rotation=[10.0, 0.0, -90.0]); Carotids.addObject('MeshTopology', position='@meshLoader.position', triangles='@meshLoader.triangles'); Carotids.addObject('MechanicalObject', position=[0, 0, 400], scale=3, name='DOFs1', ry=90); Carotids.addObject('TriangleCollisionModel', moving=False, simulated=False); Carotids.addObject('LineCollisionModel', moving=False, simulated=False). return rootNode; I used python to edit a simulation similar to a catheter in the carotid artery. I'm imitating the example provided in the sofa file. But I don't know why the error occurred, and I don't know how to solve it. I hope you can give me some help. This is the sofa BeamAdapter plug-in used.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463:4673,Deploy,DeployController,4673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463,1,['Deploy'],['DeployController']
Deployability,"Visual Studio allows to manager multiple compilation modes for one project. The plugin manager writes a list of loaded plugins in a file `loadedPlugins.ini`. This file stores the absolute paths to the loaded plugins. When switching the compilation mode in VS, this file is still loaded. And it will load plugins which paths point to the previous compilation mode. If you switch from Debug to Release, the file contains the paths to the Debug binaries and the plugin manager will try to load them, whereas the compilation mode is now Release.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2338:392,Release,Release,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2338,2,['Release'],['Release']
Deployability,VisualModel does not update,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/152:21,update,update,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/152,1,['update'],['update']
Deployability,"WARNING: this will break SofaPython3. I'm working on it. Before, when 2 nested packages had `RELOCATABLE ""plugins""`, the 2nd was installed in CMAKE_INSTALL_PREFIX/plugins/FirstPackage/plugins/SecondPackage. Now, the RELOCATABLE argument, if relative, will always be treated as CMAKE_INSTALL_PREFIX/<argument>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2603:129,install,installed,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2603,1,['install'],['installed']
Deployability,"WIP project: Add window to display Data graph using [NodeEditor](https://github.com/paceholder/nodeeditor) library. To use it, install NodeEditor.; check option in CMake: SOFA_BUILD_NODEGRAPH; and until better setup, manually set: ; - NODEEDITOR_INCLUDE_PATH to NodeEditor-install/include; - NODEEDITOR_LIBRARY_RELEASE to NodeEditor-install/lib/nodes.lib. DataGraph can be displayed in top menu: Edit->Data Graph... ![graphData_04](https://user-images.githubusercontent.com/21199245/66931696-c2e1f800-f036-11e9-91da-3f6cebcb6880.jpg); ![graphData_03](https://user-images.githubusercontent.com/21199245/66757188-e45aac80-ee9b-11e9-8065-6f379be060b4.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1187:127,install,install,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1187,3,['install'],['install']
Deployability,WIP to update data comments and other locations,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2798#issuecomment-1082772455:7,update,update,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2798#issuecomment-1082772455,1,['update'],['update']
Deployability,"Wait for CI: https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/CI_CONFIG=windows10_vs-2017,CI_TYPE=release/1274/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1949#issuecomment-809382816:97,release,release,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949#issuecomment-809382816,1,['release'],['release']
Deployability,Waiting for CI but I think it's better now:; used enable_if<is_base_of> to compile or not the doUpdate / update methods in the test. should be clean enough,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/760#issuecomment-423956245:105,update,update,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/760#issuecomment-423956245,1,['update'],['update']
Deployability,"Waiting for merge.; Should answer every points of the ""data update"" workgroup (not listed in the issues?).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80#issuecomment-264838982:60,update,update,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80#issuecomment-264838982,1,['update'],['update']
Deployability,"Waiting the final version of the release for merging it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3998:33,release,release,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3998,1,['release'],['release']
Deployability,Warning EXTERMINATOR .. or almost !; I also created a dedicated issue ( #1166 ) on deprecated to remove at v19.12 release ! Get ready for the coding sprint !. Log of important changes:; - ImageTypes: update use of constant indice; - BarycentricMapper : use of new templates on friend class; - AttachConstraint : Add delegate function instead of using twice the same name. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1167:114,release,release,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1167,2,"['release', 'update']","['release', 'update']"
Deployability,"We already talked about that, and indeed you explained very well the nature of the problem and how to solve it. I don't think of a better approach. It is important to note that this pattern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at `BarycentricMapping`, derived from `Mapping`, for example: it calls `Inherit1::doBaseObjectInit`, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252283975:698,update,update,698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252283975,1,['update'],['update']
Deployability,"We are good to go thanks to @fredroy ; **do not mind the build** dashboard is not displaying the right builds, e.g. for windows take a look at : https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/18/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/. LGTM when you agree dear reviewers!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1179664988:263,release,release,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1179664988,1,['release'],['release']
Deployability,"We can't do that 😞 ; Anyway, we all agree that a ""pr: wip"" pull request must not be merged. See the recently updated [PR Lifecycle section](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#lifecycle) of our Contributing.md file.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-304831827:109,update,updated,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-304831827,1,['update'],['updated']
Deployability,We definitely need to get timing and position regression feedback from (at least a few) scene tests. Already existing tools for position regressions:; - applications/plugins/SofaTest/SofaTest_test/Regression_test; - applications/projects/sofaVerification. TODO:; - [x] Choose one tool to update and reactivate; - [ ] Add execution time measure; - [x] Integrate it in CI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/801:288,update,update,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/801,2,"['Integrat', 'update']","['Integrate', 'update']"
Deployability,"We discussed a lot about it...but we never did a PR on that topic probably fearing the refactoring work and the amount of workload it would generates. . > It is important to note that this pattern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at BarycentricMapping, derived from Mapping, for example: it calls Inherit1::doBaseObjectInit, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Yes, all call-super need to be fixed that way (which I didn't in the PR), I will not do that unless it is clear we are really going to do such a breaking change in the sofa code base ;) . > Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get docum",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:889,update,update,889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162,1,['update'],['update']
Deployability,"We don't have anymore the history unfortunately, but for the reference the main author is madurand (Marie Durand, PhD at Grenoble at that time), and main patches are from allardj (Jeremie Allard), hcourtecuisse (Hadrien Courtecuisse)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2535#issuecomment-990934380:154,patch,patches,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2535#issuecomment-990934380,1,['patch'],['patches']
Deployability,"We need to define a better design to handle cross-dependency in the internal update of components (now using the callback mechanism introduced in #1406).; Cross-dependency between data (such as massDensity vs totalMass) is not currently well handled. Then, we could proceed to the deprecation of the doUpdateInternal see #3900",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2173:77,update,update,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2173,1,['update'],['update']
Deployability,We need to update the documentation to describe the new features.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/103:11,update,update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/103,1,['update'],['update']
Deployability,"We noticed using the macro SOFA_UNUSED() from the module SofaKernel/framework/sofa/simulation, the inclusion of the header <sofa/simulation/simulationcore.h> was actually not providing access to the macro. Questions:; what is the default pipeline to include config.h ? i.e. inclusion between config.h, namings of headers (config/module/initmodule.h ?); is the SOFA_UNUSED at the right location ?. @damienmarchal any idea ?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/904:238,pipeline,pipeline,238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/904,1,['pipeline'],['pipeline']
Deployability,We ran into some more compile errors on windows using MSVC 2015. libQGLViewer wouldn't compile without those missing headers. Here's a quick fix but you might want to update libQGLViewer to the latest version (2.7.0). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/461:167,update,update,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/461,1,['update'],['update']
Deployability,"We should improve our packaging process to ease the creation/build of a plugin linked to a SOFA release. Now: CPack (Windows) + Bundle (MacOS) + install archive (Linux); Problems: Not unified, some libs not included (Qt); Future: One unified method for all platforms.; Ideas: Flatpak, CPack, vcpkg; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/690:96,release,release,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/690,2,"['install', 'release']","['install', 'release']"
Deployability,"We tested this scene in debug and release, and both displays a warning message.; The warning message is consistent because it use a default template (aka double). Here is a log on debug :; ` [WARNING] [MergeVectors(merge)] Template <tartempion> incorrect, used <double>; `",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328103188:34,release,release,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328103188,1,['release'],['release']
Deployability,"We will also need to install metis library to distribute it with the binaries. I didn't have time to make it work, I'll try tomorrow.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1952885406:21,install,install,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1952885406,1,['install'],['install']
Deployability,"Weird because Metis sources are shipped with SOFA (see https://github.com/sofa-framework/sofa/tree/master/Sofa/Component/LinearSolver/Direct/extlibs/metis-5.1.0). On my CMake, I see . ![image](https://user-images.githubusercontent.com/10572752/194084610-64eabe13-19a2-4ea8-ace9-6511748851d3.png). I also have `metis_DIR-NOTFOUND` for `metis_DIR`. But `Metis_DIR` is correctly filled. I noticed you try to compile v21.06. The latest release is v22.06. You could try updating your SOFA. And let us know if you succeeded in fixing your problem. Thanks.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3213#issuecomment-1268511413:432,release,release,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3213#issuecomment-1268511413,1,['release'],['release']
Deployability,"Well in this case, the bug was a wrongfully warning printed only when Sofa is built in debug. Can we create tests that are that specific?. I could try to do some regex ninja tests on the application output, but it would have to be executed on debugged configurations. Let me know if this is something you would like to see for this PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329789709:252,configurat,configurations,252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329789709,1,['configurat'],['configurations']
Deployability,"Well it's not critical at all to me (4 years of Shacra-Defrost work with the code and simulation tool). I just saw that the tutorials are out of the releases so I understand that the coming soon 17.12 is more important now. However, these tutorials are the direction new interns (or other new people) are given to discover Sofa. Therefore, I think that ensuring the good functionality of this tool/scene should be added to future priorities [which you did by tagging with v18.06]. Anyway, keep up the good work guys",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/445#issuecomment-343604100:149,release,releases,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/445#issuecomment-343604100,1,['release'],['releases']
Deployability,"Well spotted @jnbrunet :+1: . This is due to the fact that SofaSimulationCore is part of the SofaFramework package and NOT the SofaSimulation package.; I think I wanted to make things simpler by installing SofaSimulationCore under SofaSimulation but I forgot to set the target_include_directories accordingly (as you saw by yourself). I think the most consistent solution is to install SofaSimulationCore back in SofaFramework by setting, in sofa/simulation/CMakeLists.txt, `sofa_install_targets(SofaFramework ${PROJECT_NAME} ""SofaFramework/sofa/simulation"")`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540482203:195,install,installing,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540482203,2,['install'],"['install', 'installing']"
Deployability,"Well to my understanding it's supposed to be `install(DIRECTORY <dir> DESTINATION include/<dir>)`. Taken from [CMake's Doc](https://cmake.org/cmake/help/v3.0/command/install.html):; ""The DIRECTORY form installs contents of one or more directories to a given destination. The directory structure is copied verbatim to the destination."". Obviously though, it's not working in this case. I can't figure out why not",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/887#issuecomment-454019268:46,install,install,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/887#issuecomment-454019268,3,['install'],"['install', 'installs']"
Deployability,"Well, . If I had to choose between a new release with no new features and post-poning the release by 15 days I would definitely prefer the release to be post-poned. . The general idea is that plugins that are tagged experimental and does not change the existing behavior should be integrated... :) ; And I would dream to see people making extra effort to have that happen.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/541#issuecomment-353020245:41,release,release,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/541#issuecomment-353020245,4,"['integrat', 'release']","['integrated', 'release']"
Deployability,"Well, here is the updated log. (I also did small corrections in scene to remove warnings I know how to remove. Anyway, the issue is still there).; The scene with corrections is attached.; [test_scene.zip](https://github.com/sofa-framework/sofa/files/8573660/test_scene.zip). **Full output**. ```txt. [sergei@sergei-20hd0000fr test_scene]$ /home/sergei/Source_code/Sofa_development/sofa/build_release/install/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so /home/sergei/Source_code/test_scene/test_scene.py ; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/runSofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:18,update,updated,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['install', 'update']","['install', 'updated']"
Deployability,"Well, it's now compiling on linux since @bcarrez installed a new version of some ffmpeg libs.; The failure on the ubuntu build is due to the lack of X. @damienmarchal @guparan @hugtalbot do we need to test this ""gui"" ? I means, others gui are not tested and the problem would be the same as we encounter with the headless recorder if we consider testing it. On centos, we need to install newer version of ffmpeg libs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360769714:49,install,installed,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360769714,2,['install'],"['install', 'installed']"
Deployability,"Well...can someone explain briefly how this PR will affect other person's code, how will they be award something have changed and that they need to update something ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311000014:148,update,update,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-311000014,1,['update'],['update']
Deployability,"What about ?; ```cpp; void update() final; {; updateAllInputs(); // a method that calls `updateIfDirty()` on all inputs: can be overridden, but rarely necessary; cleanAllInputsDirty(); // same as cleanDirty(), but does NOT call m_datatracker->clean() so counters are still valid after; doUpdate() // actual magic; cleanAllInputsCounter() // cleaning the counters; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/760#issuecomment-428487686:27,update,update,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/760#issuecomment-428487686,3,['update'],"['update', 'updateAllInputs', 'updateIfDirty']"
Deployability,Whatever I set doUpdate to true or false the BoxROI object seems to update the selected triangles so I wonder what is supposed to be the behavior of this data field ?,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38:68,update,update,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38,1,['update'],['update']
Deployability,"When I try to compile SOFA (on Windows), I observed that apparently some part of the build system (CMake? Or some pre/post-build event) tries to create output folders in the `bin` subfolder of the CMake cache for all the different MSVC build configurations created by Cmake (i.e. Debug, MinSizeRel, Release, RelWithDebInfo), **but instead of creating folders generates some obscure binary files with the same name**. This seems to be ok for the first compilation, where MSVC seems to be faster than the faulty script. E.g. when starting with Debug, I do not see any issues, however after finishing that and trying to compile in Release, MSVC compiler complains that e.g. (same for all other targets). > Error	MSB3191	Unable to create directory ""E:\work\dev\SOFA\sofa\build\bin\Release\"". Cannot create ""E:\work\dev\SOFA\sofa\build\bin\Release"" because a file or directory with the same name already exists.	. until I manually remove this useless extra **""Release"" file** (which was meant to be a folder). ______________________________________________________. Suggested labels: bug (minor)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1331:242,configurat,configurations,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1331,6,"['Release', 'configurat']","['Release', 'configurations']"
Deployability,"When a function defines a procole between a class and its child class, convention of naming _doMyFunction_() → update doc + unify doUpdate; See introduction in #1485 . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1497:111,update,update,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1497,1,['update'],['update']
Deployability,"When an imported module is modified, the sofa app needs to be closed and launched again so the sofa-python interpreter integrates the modifications.; How to force reloading imported modules so any modification can be integrated when reloading the scene?; (right now, the reload works for modified main scene file, but is always using the original module code)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/193:119,integrat,integrates,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/193,2,['integrat'],"['integrated', 'integrates']"
Deployability,"When doing `make install`, the RPATH of the libraries is set to ""../lib:$ORIGIN/../lib:$$ORIGIN/../lib"", and does not include the path to its relocated dependencies:. ```; $ ./bin/runSofa; ./runSofa: error while loading shared libraries: libSofaValidation.so.1.0: cannot open shared object file: No such file or directory; ```. ```; $ find . -name libSofaValidation.so.1.0; ./plugins/SofaValidation/lib/libSofaValidation.so.1.0; ```. Same thing happen if we link our project to some of SOFA's core library:; ```; $ lddtree my_plugin.so; my_plugin.so; libSofaMisc.so.20.06.99 => /sofa/build/install/lib/../lib/libSofaMisc.so.20.06.99; libSofaMiscEngine.so.20.06.99 => /sofa/build/install/lib/../lib/../lib/libSofaMiscEngine.so.20.06.99; libSofaNonUniformFem.so.1.0 => not found; ```; and again.; ```; $ find . -name libSofaNonUniformFem.so.1.0; ./plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so.1.0; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1395:17,install,install,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1395,3,['install'],['install']
Deployability,"When doing `make install`, the installation fails for components SofaGuiQt et QGLViewer because the Qt ""plugins"" directory is not found. A more robust way to do it would be to query the path for each needed plugin (as in http://doc.qt.io/qt-5/cmake-manual.html), but I'm not sure which plugins are needed, or if their installation is really necessary (it is not, on my system). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/794:17,install,install,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/794,3,['install'],"['install', 'installation']"
Deployability,When running ```examples/Demos/caduceusOculus.scn``` the following error occurs. ```; [ERROR] [GLSLShader] ERROR: Compilation of Fragment shader failed:; [ERROR] [GLSLShader] From File: /home/arnaud/dev/sofa/build/install/share/sofa/shaders/phong.frag; [ERROR] [GLSLShader] 0:27(6): error: could not implicitly convert operands to relational operator; 0:27(6): error: LHS of `||' must be scalar boolean; 0:28(6): error: could not implicitly convert operands to relational operator; 0:28(6): error: LHS of `||' must be scalar boolean. [ERROR] [GLSLShader] SHADER compilation failed.; ```,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3530:214,install,install,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3530,1,['install'],['install']
Deployability,When running caduceus scene for 100 time steps:. | Calls to updateIfDirty() | Before | After | | |; |-------------------------------------------|----------|----------|------|---|; | MechanicalObject::position | 2269573 | 515920 | -77% | |; | SparseGridRamificationTopology::hexahedra | 646323 | 77430 | -88% | |; | SparseGridRamificationTopology::position | 644268 | 24473 | -96% | |; | RegularGridTopology::n | 19981966 | 10347192 | -48% | |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263555229:60,update,updateIfDirty,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1263555229,1,['update'],['updateIfDirty']
Deployability,"When trying to map a surface mesh (triangles) into a set of hexahedra using the BarycentricMapping component, mapping fails and deform the triangle mesh unexpectedly. Such issue appears in release v18.12 and master while it seemed to work fine in release v18.06.; Cf. [scene&screenshots](https://mybox.inria.fr/d/7a20cfaa26/; ). Thank you for your help.; @hugtalbot @EulalieCoevoet ; ______________________________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/988:189,release,release,189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/988,2,['release'],['release']
Deployability,When using node.setActive from python the node representation in the scene graphi is not updated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2962:89,update,updated,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2962,1,['update'],['updated']
Deployability,"When you are working on Mac M1, install Qt5 using ` brew install qt@5`, avoid using the official version. @caimingxue @MingshanHe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246:32,install,install,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246,2,['install'],['install']
Deployability,"When you launch ""make install"", CMake will install external dependency binaries (such as boost and glew) into the sofa libraries directory (e.g. the build/install directory). This in turn will be hiding the system binaries when we try to link our project to Sofa, generating the following CMake warnings for every targets that depends on Sofa:. ```; Cannot generate a safe runtime search path for target MyProject; because files in some directories may conflict with libraries in implicit; directories:. runtime library [libGLEW.so.2.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_filesystem.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_program_options.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_thread.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_date_time.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_chrono.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_system.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_atomic.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; ```. Any good reason why we are doing this? Maybe @guparan has an idea?. I understand the use of copying dependencies when **packaging** Sofa, but not for the install command which already has the dependency installed on the system. This is polluting my projects compilation output :-). _____________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1153:22,install,install,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1153,6,['install'],['install']
Deployability,"While investigating the error in image/examples/distanceFieldFilter.scn (raised in #3329 for example),; Eigen3 was throwing an assertion in Debug (and surely throwing unexpected errors in Release). https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_clang,CI_PLUGINS=options,CI_TYPE=debug/3967/testReport/SceneTests/applications_plugins_image_examples/MeshToImageMultipleRoi_scn/; for an example of the dump on the CI. The problem was that if one wants to compute matrices ThinU & ThinV for Eigen::SVD, the given matrices need to be set with a dynamic size.; -> https://gitlab.com/libeigen/eigen/-/blob/3.4/Eigen/src/SVD/JacobiSVD.h#L640. So the solution are either:; - compute full V and full U and keep fixed size matrices; - or set the matrices dynamic and resize to 3x3. It appeared that this combination EigenSVD, ThinU/V and fixed-size matrices was used in PlasticMaterial (FEM.HyperElastic), TriangularFEMForceField (FEM.Elastic) and SVDLinearSolver (LinearSolver.Direct). \+ the use of SVD in MeshToImage was a little weird (doing it on matrix filled of Zeros). It appears that the code fillling the matrix did disappear while the code was converted from NewMat to Eigen3, so I restored it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3452:188,Release,Release,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3452,1,['Release'],['Release']
Deployability,"While making out-of-tree builds with SofaGLFW, which entrypoint is a a cmakelists with two add_sofa_something(), cmake is throwing this kind of error while reading the second project:; ```cmake; CMake Error at C:/Work/sofa/install/master_fredroy/lib/cmake/Sofa.DefaultType/Sofa.DefaultTypeConfig.cmake:44 (set_target_properties):; Attempt to promote imported target ""Sofa.DefaultType"" to global scope (by; setting IMPORTED_GLOBAL) which is not built in this directory.; ```; which appears (after some headaches) to be linked with the fact that the Sofa.DefaultTypeConfig is read twice and cmake tries to set a flag (imported global) on something which has already the flag, and more generally to do twice the job of aliasing. So this PR adds a test on the four ""legacy"" SofaFramework targets to only make aliases if it was not done before.; ; And for good measure, update the date for the removal of the aliases to v22.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2566:223,install,install,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2566,2,"['install', 'update']","['install', 'update']"
Deployability,"Why it is not possible to have with?. Solution:; The installer can detect:; - if there is on the machine, good; - if not, inform the user to download the good package...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454127765:53,install,installer,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454127765,1,['install'],['installer']
Deployability,Will require a PR to https://github.com/sofa-framework/ci to fetch/activate it for the right configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4573#issuecomment-1987931651:93,configurat,configuration,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573#issuecomment-1987931651,1,['configurat'],['configuration']
Deployability,Will require a PR to https://github.com/sofa-framework/ci to fetch/activate them for the right configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4575#issuecomment-1987930649:95,configurat,configuration,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575#issuecomment-1987930649,1,['configurat'],['configuration']
Deployability,With the example used in PR #1093; here is the time of the visitor when no update is done. (green line); ![image](https://user-images.githubusercontent.com/21199245/64020981-3dac8d80-cb33-11e9-9707-5c4b09500975.png),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1131#issuecomment-526584524:75,update,update,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1131#issuecomment-526584524,1,['update'],['update']
Deployability,"With:; - guidelines,; - symbols export (for Windows); - example of mandatory dep and optional dep in Cmake; - cleaning (pragma/nested namespace); - updated init (with data from CMake); - installable (and usable as dep); - add test mechanism (with BaseTest); - Readme as markdown. Remove useless python files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1356:148,update,updated,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1356,2,"['install', 'update']","['installable', 'updated']"
Deployability,"Within recent version of Eigen installed on most OS, there is already a cmake find_package(Eigen3) available. By create a FindEigen3.cmake you will override this. I've seen a couple of projects dealing with this kind of problem with, for example:. SofaKernel/cmake/Modules/**FindEigen3Sofa**.cmake:; ```; # try to find ""FindEigen3.cmake"" from system Eigen; find_package(Eigen3) . if (not Eigen3); # do your thing here; else(); # use system Eigen3; endif(); ```. CMakeLists.txt; `find_package(Eigen3Sofa)`. pybind11 do this for example with find_package(PythonNew) which point to their PythonNew.cmake which trigger a system find_package(Python). Maybe it could be a solution for us?. Edit: Sorry I'm polluting this fast-merge PR for that, we can discuss this elsewhere ;-D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1175#issuecomment-539446978:31,install,installed,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1175#issuecomment-539446978,1,['install'],['installed']
Deployability,"Without this patch, its not possible to call getMSState from the getPotentialEnergy in Mass (well, at least its not possible without casting to a ForceField). This makes it easier",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2293:13,patch,patch,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2293,1,['patch'],['patch']
Deployability,Work done further to a doc update:; - example scene of Newmark solver is improved; - example scene for the PointsFromIndices engine is added; - clean Newmark c++ code. FYI doc is [here](https://www.sofa-framework.org/community/doc/components/integrationscheme/newmarkimplicitsolver/); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1398:27,update,update,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1398,2,"['integrat', 'update']","['integrationscheme', 'update']"
Deployability,Working on it ! I should be able to release it next week !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/36#issuecomment-290764107:36,release,release,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/36#issuecomment-290764107,1,['release'],['release']
Deployability,Would be grant if somebody can provide the patch - may be there are more things to change. Thanks for asking.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1133#issuecomment-529117142:43,patch,patch,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1133#issuecomment-529117142,1,['patch'],['patch']
Deployability,"Wow, green dashboard, is it Xmas already ?; Very nice work @damienmarchal ! 👏 . Could you update your review @matthieu-nesme ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-303038710:90,update,update,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-303038710,1,['update'],['update']
Deployability,"Wow, this SofaCUDA for ConstraintCorrection is exactly what I want! Is there any update here?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3004#issuecomment-1189717472:81,update,update,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3004#issuecomment-1189717472,1,['update'],['update']
Deployability,"Yeah but if you don't do it, than we need to manually update the commit number each time SofaPython3 upgrades. They should follow each others.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820398880:54,update,update,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820398880,2,"['update', 'upgrade']","['update', 'upgrades']"
Deployability,"Yeah, I installed QT5 with `brew install qt@5` and source the `.bashrc` with the installed path. Actually, my `cmake-gui` could find `QT5` also `QT6` which I tried to install. But the building process always occurs with errors. I tried install the QT with the source code, `brew` and the official install tools (x86), but it doesn't fix it successfully.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444:8,install,installed,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372032444,6,['install'],"['install', 'installed']"
Deployability,"Yes I actually fixed it in https://github.com/sofa-framework/sofa/pull/905, see https://github.com/sofa-framework/sofa/commit/c608d441edd35f6e8eb90ebfc420cb941c3bd750 and https://github.com/sofa-framework/sofa/commit/e1b55cba5ff200c7a11f6992974159b55cec000f. The error is printed on CI but you have to open the output of a scene test to see it (Jenkins only shows the first line of an error in the ""SOFA SceneTest Errors"" view). See for example the [output of failing scene Components/forcefield/ForceMaskOff.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/636/artifact/parent_dir/build/scene-tests/examples/Components/forcefield/ForceMaskOff.scn/output.txt) (latest master build).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/922#issuecomment-461353086:628,release,release,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/922#issuecomment-461353086,1,['release'],['release']
Deployability,"Yes I know, and I'm not questioning your work nor the 3 weeks of discussions. But, if you are going to automatically merge the related PR in SP3 to its master branch, than why hard code the commit number? You can automatically update it on the CI, but not actually commit it. Once it passes, no need to change the ""origin/master"" since it contains your automatically merged SP3 PR. If you don't do it, then upgrades in SP3 (bug fixes, new features) that do not have a related PR in SOFA won't be taken into account unless we go do a PR in SOFA to update this pointer. I can guarantee you that nobody will think of doing it. Which means that fetching SP3 within SOFA has great chance to be pointing to an old version. In fact, the reason I asked this to Damien is exactly because of this, SOFA fetched me an outdated version of SP3, which didn't contain the latest bug fix in SP3.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820454841:227,update,update,227,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-820454841,3,"['update', 'upgrade']","['update', 'upgrades']"
Deployability,"Yes because the mechanicalObject is translating the topology:; `<MechanicalObject dx=""0"" dy=""20"" dz=""29"" rz=""64"" />`; z= 29 - 1.75 = 27.25. The problem is in fact that the position in the regularGrid are not transformed... which is weird as they should be updated by the data graph.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/308#issuecomment-315024975:256,update,updated,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/308#issuecomment-315024975,1,['update'],['updated']
Deployability,Yes it is: actions making changes in the repo (here a comment) are forbidden as long as it is not merged; See the end of the message: `Resource not accessible by integration`. You need to trust me :see_no_evil:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4267#issuecomment-1785524462:162,integrat,integration,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4267#issuecomment-1785524462,1,['integrat'],['integration']
Deployability,"Yes it will, but not for 'default' configurations, but - - for 'options' one. Those are the same as the one compiled by the PRs. It actually changes nothing but removes regression errors for 'default' configuration (only on the dashboard) because the lib was not found, which is normal because it is not compiled. . This PR comes along with two other ones on Regression and ci to remove the regression files and add the fetching for 'option' configurations.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1967722990:35,configurat,configurations,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1967722990,3,['configurat'],"['configuration', 'configurations']"
Deployability,"Yes, I don't have the exact commit but, after the version 5.1.0, some changes lead to a crash. Before the changes, it works.; It has been fixed later in this commit: https://github.com/KarypisLab/METIS/commit/36262adecaa9720a4417a67124428061c367fd3f. It means the versions in between both commits cannot be used without a crash. Note also that the version number (in the code) has not been updated properly along the history of the repository: https://github.com/KarypisLab/METIS/commit/f5ae915a84d3bbf1508b529af90292dd7085b9ec. It went from 5.1.0 to 5.2.1, whereas there is a 5.1.1 release. Finally, less importantly, in SOFA we need a portable random generator in METIS for reproductible results. It is enabled via a compilation option `METIS-GKLIB_GKRAND`. This is not enabled by default in releases.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1905527144:390,update,updated,390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1905527144,3,"['release', 'update']","['release', 'releases', 'updated']"
Deployability,"Yes, closing.; I'll update again the doc after my future changes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2048#issuecomment-854618528:20,update,update,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2048#issuecomment-854618528,1,['update'],['update']
Deployability,"Yes, the CI builder generating the binaries is an intel mac. This is a compatibility choice, to enable the use of our binaries by every one. ; To use them on a arm64 you need to install Rosetta on your mac to run x86 libraries. But it will not run at full speed because of the compatibility layer. To have optimized binaries for your architecture, you'll need to compile them yourself.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2082051094:178,install,install,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2082051094,1,['install'],['install']
Deployability,"You are right about the case of 1 iteration. I broke it by starting `i` to 2. Handling the 1 iteration case differently is a bit overkill though. Here is my update (still not tested):; ```cpp; int BatchGUI::mainLoop(); {; if (groot); { ; if (nbIter != -1); { ; msg_info(""BatchGUI"") << ""Computing "" << nbIter << "" iterations."" << msgendl;; }; else; {; msg_info(""BatchGUI"") << ""Computing infinite iterations."" << msgendl;; }; ; sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; msg_info(""BatchGUI"") << ""Processing."" << sofa::helper::AdvancedTimer::end(""Animate"", groot.get()) << msgendl;; // As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());; sofa::simulation::Visitor::ctime_t rtfreq = sofa::helper::system::thread::CTime::getRefTicksPerSec();; sofa::simulation::Visitor::ctime_t tfreq = sofa::helper::system::thread::CTime::getTicksPerSec();; sofa::simulation::Visitor::ctime_t rt = sofa::helper::system::thread::CTime::getRefTime();; sofa::simulation::Visitor::ctime_t t = sofa::helper::system::thread::CTime::getFastTime();; ; signed int i = 1; // one simulation step is animated above ; ; while (i <= nbIter || nbIter == -1); {; if (i != nbIter); {; sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());; }. if ( i == nbIter || (nbIter == -1 && i%1000 == 0) ); {; t = sofa::helper::system::thread::CTime::getFastTime()-t;; rt = sofa::helper::system::thread::CTime::getRefTime()-rt;. msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)t)/((double)tfreq) << "" s ( "" << (((double)tfreq)*i)/((double)t) << "" FPS)."" << msgendl;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)rt)/((double)rtfreq) << "" s ( "" << (((double)rtfr",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378860087:157,update,update,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378860087,2,['update'],"['update', 'updateVisual']"
Deployability,"You are right and it is shitting for the person on whom it falls :); Haa! A stylesheet! But, as usual with sofa, it takes some time to set it up (install astyle, install the QtCreator plugin, add the configuration file). ; I agree with you to make for 17.16 on the whole repository",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353076573:146,install,install,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353076573,3,"['configurat', 'install']","['configuration', 'install']"
Deployability,You are right that the spheres are too dark ; I forgot to add the ambient component in the final color computation ; I will submit a patch right away.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/170#issuecomment-283982065:133,patch,patch,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/170#issuecomment-283982065,1,['patch'],['patch']
Deployability,"You can see an example of regression test results here: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-830/11/CI_CONFIG=windows7_vs-2015_amd64,CI_PLUGINS=options,CI_TYPE=release/testReport",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/830#issuecomment-440201586:181,release,release,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/830#issuecomment-440201586,1,['release'],['release']
Deployability,"You mean, you open the tab, simulate and there is no update?; Could you check if clicking on the refresh button on the bottom update the values?; I guess the gui is not calling ""continuous update"" on the Data to avoid slowing down the simulation but I'm not expert of the DataWidget.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258:53,update,update,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258,4,"['continuous', 'update']","['continuous', 'update']"
Deployability,"You weren't there this morning @marques-bruno but if your proposal is both :. - specifying in a descriptive way the type of numerical integration method; - the inheritance issue. and I think it does. We should go for it. I did not know the OptionsGroup class.; If not, we keep and merge Hervé's work. Hugo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936#issuecomment-595246361:134,integrat,integration,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936#issuecomment-595246361,1,['integrat'],['integration']
Deployability,"[ Follow-up of #253 ]. To sum up the ideas:; - create a manifest file @ plugin post-build; - create a configuration system where applications can find the list of plugins to load automatically at startup; - inform the user that if you want to use `<ComponentAFromPluginXXX>`, you need to add the line `<RequiredPlugin pluginName=""PluginXXX"" >`. (Everything started from:; - hard loading of SofaPython in runSofa; - in the future we want to remove ImageBMP/ImagePNG/ImageQt and use ImageCImg from the plugin CimgPlugin, and avoid to always add the RequiredPlugin line in each scene.). The Manifest file will be useful when the components in the Sofa trunk will be dispatched in several plugins (planned in the far future)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/281:102,configurat,configuration,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/281,1,['configurat'],['configuration']
Deployability,[All] Improve extlibs integration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1137:22,integrat,integration,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1137,1,['integrat'],['integration']
Deployability,[All] Improve install and packaging,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:14,install,install,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['install'],['install']
Deployability,[All] Introduce cmake unified configurations,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4766:30,configurat,configurations,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4766,1,['configurat'],['configurations']
Deployability,[All] Lifecycle update before v22.06,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090:16,update,update,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090,1,['update'],['update']
Deployability,[All] Run clang-tidy and update license headers,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899:25,update,update,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899,1,['update'],['update']
Deployability,[All] Update Data comments,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2719:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2719,1,['Update'],['Update']
Deployability,[All] Update IDE directory for targets,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2239:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239,1,['Update'],['Update']
Deployability,[All] Update codebase to compile w/o Sofa.Compat for v21.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2525:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2525,1,['Update'],['Update']
Deployability,[All] Update license headers 2018,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/585:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/585,1,['Update'],['Update']
Deployability,"[All] Update lifecycle (macros, etc) for v21.12",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2524:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2524,1,['Update'],['Update']
Deployability,[All] VisualModel: implement NVI for init/updateVisual(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827:42,update,updateVisual,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827,1,['update'],['updateVisual']
Deployability,"[BeamAdapter](https://github.com/sofa-framework/beamadapter/) shall now be fetchable from SOFA CMake configuration. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890:101,configurat,configuration,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890,1,['configurat'],['configuration']
Deployability,[Build] FIX Sofa installation failure (tries to install non-existing files),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/470:17,install,installation,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/470,2,['install'],"['install', 'installation']"
Deployability,[CHANGELOG] Update further to latest changes in v23.06,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3998:12,Update,Update,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3998,1,['Update'],['Update']
Deployability,[CImgPlugin] FIX CMakeLists install fail since pluginization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/609:28,install,install,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/609,1,['install'],['install']
Deployability,[CMake] FIX build/install plugins directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/959:18,install,install,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/959,1,['install'],['install']
Deployability,[CMake] FIX resources and translations install on Windows,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1949:39,install,install,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949,1,['install'],['install']
Deployability,[CMake] Fix SOFA install,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4451:17,install,install,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451,1,['install'],['install']
Deployability,[CMake] Fix install config files,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3031:12,install,install,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3031,1,['install'],['install']
Deployability,[CMake] Improve SOFA installation and packaging,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/635:21,install,installation,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/635,1,['install'],['installation']
Deployability,[CMake] Set CMake install default component,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2037:18,install,install,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037,1,['install'],['install']
Deployability,[CMake] Speed-up Configuration (again),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382:17,Configurat,Configuration,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382,1,['Configurat'],['Configuration']
Deployability,[CMake] Update all cmake_minimum_required in plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4886:8,Update,Update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4886,1,['Update'],['Update']
Deployability,[CMake] Update all deps to SofaFramework modules,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2958:8,Update,Update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2958,1,['Update'],['Update']
Deployability,[CMake] Upgrade cmake_minimum_required to 3.22,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4586:8,Upgrade,Upgrade,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586,1,['Upgrade'],['Upgrade']
Deployability,[CMake][tests] installing gtest headers for separate plugin builds,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/395:15,install,installing,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/395,1,['install'],['installing']
Deployability,[CUDA] Update CudaHexahedronTLEDForceField.cpp,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5085:7,Update,Update,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5085,1,['Update'],['Update']
Deployability,[Caribou] Build out-of-tree and properly install in SOFA for binary usage,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2129:41,install,install,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2129,1,['install'],['install']
Deployability,[Changelog] Update Changelog with breaking changes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1562:12,Update,Update,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1562,1,['Update'],['Update']
Deployability,[Cmake] Update warning replacement message for deprecated macro sofa_add_XX,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3611:8,Update,Update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3611,1,['Update'],['Update']
Deployability,[CollisionOBBCapsule] Fix generation of configuration file for installation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3576:40,configurat,configuration,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3576,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,[Compliant] update se3.h license to make it compatible with core,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/793:12,update,update,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/793,1,['update'],['update']
Deployability,[Config] CMake: support interface-type target for install macro,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4356:50,install,install,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356,1,['install'],['install']
Deployability,[Config] Integrate Tracy profiler,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4182:9,Integrat,Integrate,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4182,1,['Integrat'],['Integrate']
Deployability,[Config] POC: enable assertions even in release mode,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4496:40,release,release,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496,1,['release'],['release']
Deployability,[Config] Upgrade to C++20,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5056:9,Upgrade,Upgrade,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5056,1,['Upgrade'],['Upgrade']
Deployability,[Constraint.Lagrangian] Update BilateralInteractionConstraint to support topological changes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3329:24,Update,Update,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329,1,['Update'],['Update']
Deployability,[Constraint.lagrangian] Update BilateralInteractionConstraint namespace,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3468:24,Update,Update,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3468,1,['Update'],['Update']
Deployability,[Contributing] Update file to mention good first issue,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3625:15,Update,Update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3625,1,['Update'],['Update']
Deployability,[Contributing] Update info regarding GitHub Discussions,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2741:15,Update,Update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2741,1,['Update'],['Update']
Deployability,[Core] Make src an explicit link and support late update,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3151:50,update,update,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3151,1,['update'],['update']
Deployability,[Core] Update NarrowPhaseDetection.cpp use prefix,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4557:7,Update,Update,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4557,1,['Update'],['Update']
Deployability,[DCO] Update the CONTRIBUTING to use DCO instead of CLA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/514:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/514,1,['Update'],['Update']
Deployability,[Extlibs] Upgrade eigen from version 3.2.7 to 3.3.7,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1007:10,Upgrade,Upgrade,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1007,1,['Upgrade'],['Upgrade']
Deployability,[GUI.Qt] Fix libQGLViewer cmake install,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4198:32,install,install,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4198,1,['install'],['install']
Deployability,[Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4576:11,Update,Update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576,1,['Update'],['Update']
Deployability,[Geomagic] Update demo scenes to use direct solvers.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1533:11,Update,Update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1533,1,['Update'],['Update']
Deployability,[Geometry] Update method intersectionWithEdge signature and redirect all methods to it in EdgeSetGeometryAlgorithms,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194:11,Update,Update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194,1,['Update'],['Update']
Deployability,[GitHub] Update Changelog and version,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2546:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2546,1,['Update'],['Update']
Deployability,[GitHub] Update sofa-dev action to check timezone,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4877:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4877,1,['Update'],['Update']
Deployability,[GitHub] Update version of the actions/github-script,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4522:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522,1,['Update'],['Update']
Deployability,[Helper] Retrieve the current user local configuration directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4875:41,configurat,configuration,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4875,1,['configurat'],['configuration']
Deployability,[Helper] Update ComponentChange for MechanicalMatrixMapper,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4235:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235,1,['Update'],['Update']
Deployability,[How-to] Profile CMake configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1838:23,configurat,configuration,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1838,1,['configurat'],['configuration']
Deployability,[INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUI,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9521,Release,Release,9521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,[INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [IN,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9390,Release,Release,9390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,[ImagePNG] FIX: Library linking in debug configuration under MSVS,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/297:41,configurat,configuration,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/297,2,['configurat'],['configuration']
Deployability,[Lagrangian.Solver] Add events in the constraint solver pipeline,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3418:56,pipeline,pipeline,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3418,1,['pipeline'],['pipeline']
Deployability,[LinearSolver.Iterative] CMake: Fix package configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3840:44,configurat,configuration,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3840,1,['configurat'],['configuration']
Deployability,[LinearSolver] Update data name in SparseLDLSolver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2904:15,Update,Update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2904,1,['Update'],['Update']
Deployability,[MSVC/Windows][Install] INSTALLATION target copies Debug/Release/RelWithDebInfo directories,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2355:15,Install,Install,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2355,3,"['INSTALL', 'Install', 'Release']","['INSTALLATION', 'Install', 'Release']"
Deployability,[ManifoldTopologies] Update the license in init.cpp,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1414:21,Update,Update,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1414,1,['Update'],['Update']
Deployability,[MechanicalLoad] Update TrianglePressureForceField to remove plan selection and add callback on Data pressure and triangleList,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4743:17,Update,Update,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4743,1,['Update'],['Update']
Deployability,[MultiThreading] FIX: examples installation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/299:31,install,installation,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/299,1,['install'],['installation']
Deployability,[OpenCL] Update OpenCLProgram.cpp remove unused variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4973:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4973,1,['Update'],['Update']
Deployability,[PluginExample] Update example + add comments,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1053:16,Update,Update,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1053,1,['Update'],['Update']
Deployability,[Plugin] Update PluginExample,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1356:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1356,1,['Update'],['Update']
Deployability,[Plugins] Fix Cmake configuration w/o compat,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3209:20,configurat,configuration,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3209,1,['configurat'],['configuration']
Deployability,[Project] Update README,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2905:10,Update,Update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2905,1,['Update'],['Update']
Deployability,[README] Minor update badges,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4417:15,update,update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4417,1,['update'],['update']
Deployability,[README] Update badge with Discord,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4498:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4498,1,['Update'],['Update']
Deployability,[README] Update link to Discord,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4562:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4562,1,['Update'],['Update']
Deployability,[Regression] Update hash,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1321:13,Update,Update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1321,1,['Update'],['Update']
Deployability,[Regression_test] Update ChainHybrid timestep,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1625:18,Update,Update,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1625,1,['Update'],['Update']
Deployability,[Regression_test] Update regression test references for CollisionGroup,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1102:18,Update,Update,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1102,1,['Update'],['Update']
Deployability,[Rendering3D] Add callback in OglModel to update visual after dynamic change of position,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925:42,update,update,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925,1,['update'],['update']
Deployability,[Rendering3D] OglModel: Use glMapBufferRange to update buffers,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3822:48,update,update,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3822,1,['update'],['update']
Deployability,[SOFA] Update the version for the upcoming v16.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/121:7,Update,Update,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/121,1,['Update'],['Update']
Deployability,[Scenes] Update TriangleSurfaceCutting scene to use a bigger mesh with texture,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2381:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2381,1,['Update'],['Update']
Deployability,"[See ComponentState Diagram here](https://imgur.com/a/qylPAWX). This PR sets up a Component State Checking mechanism that allows to know if a call to init / reinit is necessary, and whether or not the component took into account any change applied to its data fields. The idea is that Each component's state can be:; - **Unspecified**: The component has just been created, init has not been called; - **Valid**: The component is ready to be used, and should behave as expected; - **Dirty**: The component is ready to be used, but requires a call to reinit() to update some of its datafields.; - **invalid**:; 1. An error happened during init, reinit or any of the methods called during the simulation step. A call to reinit might fix it; 2. A call to reinit has been made, but the method is improperly implemented, such as one or more Data field has not been updated (call to getValue / updateIfDirty etc...). Because I don't trust programmes to implement the mechanism in their own components, and because it would require all already-implemented component to perform checks in order to get a consistent idea of what's happening, I decided to (try to) embed the state setting mechanisms inside the simulation:. - **setDirtyValue()** on a data sets the dirty state on its owner; - **cleanDirty()** on a data looks at all its owner's data fields and if they're all clean, sets the Valid state on it; - **initVisitor() / init / bwdInit python binding** uses the MessageHandler API to verify that no msg_error has been triggered, and sets either the Valid or Invalid state on the component; - **reinit pythonBinding / the Qt GUI's ModifyObject** calls reinit, and that call is wrapped the same MessageHandling mechanism to set or unset the Valid / Invalid flag. _**LIMITATIONS**_; There is a weak link in this approach:; reinit() will NOT unset the Invalid flag from a component if it is called from elsewhere than the GUI's ModifyObject api. This can happen often: when calling reinit from a c++ program",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/823:561,update,update,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/823,3,['update'],"['update', 'updateIfDirty', 'updated']"
Deployability,[Simulation.Common] Fix tinyXML2 install for windows,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4525:33,install,install,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4525,1,['install'],['install']
Deployability,[Sofa NG] update CMakeLists,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/227:10,update,update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/227,1,['update'],['update']
Deployability,[Sofa v19.06] FIX installation for Windows,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1211:18,install,installation,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1211,1,['install'],['installation']
Deployability,[Sofa.Compat] Fix install,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2360:18,install,install,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2360,1,['install'],['install']
Deployability,[Sofa.Http] Introduction of a latest release checker,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4702:37,release,release,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4702,1,['release'],['release']
Deployability,[Sofa.LinearAlgebra] Fix installation (fwd.h),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2337:25,install,installation,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2337,1,['install'],['installation']
Deployability,[SofaBaseCollision] Fix pipeline warning test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2132:24,pipeline,pipeline,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2132,1,['pipeline'],['pipeline']
Deployability,[SofaBaseMechanics] Update MechanicalObject resize method to exit if not necessary,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1977:20,Update,Update,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977,1,['Update'],['Update']
Deployability,[SofaBaseMechanics_test] Update tests to use Sofa.Testing instead of Sofa_Test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2144:25,Update,Update,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2144,1,['Update'],['Update']
Deployability,[SofaBaseTopology] Fix Last element index update in TopologyData,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2359:42,update,update,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2359,1,['update'],['update']
Deployability,[SofaBaseTopology] Pr change api numerical integration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936:43,integrat,integration,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936,1,['integrat'],['integration']
Deployability,[SofaBaseTopology][DrawTools] Some fix/update in topology internal draw methods.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/877:39,update,update,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/877,1,['update'],['update']
Deployability,[SofaBaseVisual] ADD Update callbacks in VisualModelImpl,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1483:21,Update,Update,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1483,1,['Update'],['Update']
Deployability,[SofaBaseVisual] ADD Update callbacks in VisualModelImpl (#1483),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2245:21,Update,Update,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2245,1,['Update'],['Update']
Deployability,[SofaBaseVisual] Better Fix in VisualModelImpl for texcoord update during topological changes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2415:60,update,update,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2415,1,['update'],['update']
Deployability,[SofaBaseVisual] Fix VisualModelImpl updateTextures callback to not call init method,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2298:37,update,updateTextures,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298,1,['update'],['updateTextures']
Deployability,[SofaCUDA] FIX Configuration/compilation issue with CUDA plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/523:15,Configurat,Configuration,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/523,1,['Configurat'],['Configuration']
Deployability,[SofaCUDA] Fix: Headers of the SofaCUDA plugin are now installed in the include folder,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/383:55,install,installed,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/383,1,['install'],['installed']
Deployability,[SofaCUDA] update .scene-tests files to fix tests on dashboard,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2616:11,update,update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2616,1,['update'],['update']
Deployability,[SofaCarving] Refresh : update file architecture and cmake,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3798:24,update,update,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3798,1,['update'],['update']
Deployability,[SofaCarving] Update and add more tests in SofaCarving_test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3407:14,Update,Update,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3407,1,['Update'],['Update']
Deployability,[SofaConstraint] Set the use of integration factor true by default,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369:32,integrat,integration,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369,1,['integrat'],['integration']
Deployability,[SofaCore SofaConstraint] Update FreeMotionAnimationLoop so that it can compute a linearised version of the constraint force.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:26,Update,Update,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['Update'],['Update']
Deployability,[SofaCore] Move definition of Link::updateLinks to BaseLink.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1735:36,update,updateLinks,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735,1,['update'],['updateLinks']
Deployability,[SofaCore_test] Update the two failling tests so they match the new convention for TypeInfo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1709:16,Update,Update,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1709,1,['Update'],['Update']
Deployability,[SofaDeformable] RestShapeSpringsForceField: use current/updated stiffness vector,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/579:57,update,updated,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/579,1,['update'],['updated']
Deployability,[SofaDeformable] Update RestShapeSpringsForceField,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1431:17,Update,Update,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1431,1,['Update'],['Update']
Deployability,[SofaDistanceGrid] plugin dll not exported at sofa install,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1219:51,install,install,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1219,1,['install'],['install']
Deployability,[SofaExporter] Update OBJExporter example,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1782:15,Update,Update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1782,1,['Update'],['Update']
Deployability,[SofaFramework/CMake] Create configuration type dir before copying lib,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1347:29,configurat,configuration,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1347,1,['configurat'],['configuration']
Deployability,[SofaFramework] FIX Boost::program_options finding in install,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/618:54,install,install,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/618,1,['install'],['install']
Deployability,[SofaFramework] Fix plugin list configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/645:32,configurat,configuration,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/645,1,['configurat'],['configuration']
Deployability,[SofaFramework] Install the SofaSimulationCore target back into the SofaFramework package,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1182:16,Install,Install,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1182,1,['Install'],['Install']
Deployability,[SofaGUICommon] Fix configuration file for install with cxxopts,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2279:20,configurat,configuration,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,[SofaGeneralEngine] Add update on begin animation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1066:24,update,update,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1066,1,['update'],['update']
Deployability,[SofaGeneralEngine] FIX some XyzTransformMatrixEngine::update() function,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/343:55,update,update,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/343,1,['update'],['update']
Deployability,[SofaGeneralSimpleFem] Update BeamFEMForceField topologyHander and add tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2382:23,Update,Update,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2382,1,['Update'],['Update']
Deployability,[SofaGraphComponent] Update sceneCheckerAPI and deprecate MatrixMass,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1107:21,Update,Update,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1107,1,['Update'],['Update']
Deployability,[SofaGuiCommon] Fix include path for compat files when installing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1892:55,install,installing,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1892,1,['install'],['installing']
Deployability,[SofaGuiQt] Fix graph update on startup,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458:22,update,update,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458,1,['update'],['update']
Deployability,[SofaGuiQt] QTreeWidget is not correctly updated with a DefaultCollisionGroupManager,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2066:41,update,updated,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2066,1,['update'],['updated']
Deployability,[SofaGui] Restore and update CMake variables and modules,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3011:22,update,update,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3011,1,['update'],['update']
Deployability,[SofaHelper] FIX Eigen install path,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1240:23,install,install,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1240,1,['install'],['install']
Deployability,[SofaHelper] replace infinite loop Update PipeProcess.cpp,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2477:35,Update,Update,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2477,1,['Update'],['Update']
Deployability,[SofaHighOrder] Update URL of external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1430:16,Update,Update,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1430,1,['Update'],['Update']
Deployability,[SofaKernel] Add updateOnTransformChange update callback on MeshLoader.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1459:17,update,updateOnTransformChange,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1459,2,['update'],"['update', 'updateOnTransformChange']"
Deployability,[SofaKernel] Data file repository now looks into the SOFA install directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1656:58,install,install,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1656,1,['install'],['install']
Deployability,[SofaKernel] Fix the integration scheme for Quaternion,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/172:21,integrat,integration,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/172,1,['integrat'],['integration']
Deployability,[SofaKernel] Remove the installation of external system libraries,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1387:24,install,installation,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1387,1,['install'],['installation']
Deployability,[SofaKernel] Update EulerExplicitSolver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1260:13,Update,Update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1260,1,['Update'],['Update']
Deployability,[SofaKernel] Update Static Solver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/950:13,Update,Update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/950,1,['Update'],['Update']
Deployability,[SofaKernel] Update the RichConsoleStyleMessageFormatter,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/126:13,Update,Update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/126,1,['Update'],['Update']
Deployability,[SofaKernel][examples] Rename TModels into CollisionModels and update all scenes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1034:63,update,update,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1034,1,['update'],['update']
Deployability,[SofaKernel] Implement an update mechanism on component: RequiredPlugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1458:26,update,update,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1458,1,['update'],['update']
Deployability,[SofaLoader] FIX Circular dependency in the update of MeshObjLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2201:44,update,update,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201,1,['update'],['update']
Deployability,[SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3423:13,Update,Update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3423,1,['Update'],['Update']
Deployability,[SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2706:53,update,update,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2706,1,['update'],['update']
Deployability,[SofaMiscForceField] Fix massDensity vector update when adding new elements in MeshMatrixMass,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2257:44,update,update,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257,1,['update'],['update']
Deployability,[SofaOpenCL] Fix Cmake configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1647:23,configurat,configuration,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1647,1,['configurat'],['configuration']
Deployability,[SofaOpenGLVisual] Use updateCallback to update OglModel's internal buffers,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1423:23,update,updateCallback,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1423,2,['update'],"['update', 'updateCallback']"
Deployability,[SofaPython][PSDE] Update on demand as designed initially,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751:19,Update,Update,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751,1,['Update'],['Update']
Deployability,[SofaRigid] Cosmetic clean in RigidRigidMapping & msg_* update.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1005:56,update,update,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1005,1,['update'],['update']
Deployability,[SofaSimulationCore] FIX resizing of bboxes in UpdateBoundingBoxVisitor,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1268:47,Update,UpdateBoundingBoxVisitor,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1268,1,['Update'],['UpdateBoundingBoxVisitor']
Deployability,[SofaSparseSolver] Add cmake configuration for Threads,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2739:29,configurat,configuration,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2739,1,['configurat'],['configuration']
Deployability,[SofaSparseSolver] FIX Metis and CSparse not found in install,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1437:54,install,install,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1437,1,['install'],['install']
Deployability,[SofaSparseSolver] FIX Metis and CSparse not found in install (redo),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1440:54,install,install,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1440,1,['install'],['install']
Deployability,[SofaSphFluid] Clean code of ParticleSource and update scenes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1190:48,update,update,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1190,1,['update'],['update']
Deployability,"[SofaSphFluid] Clean, Fix, Update ParticleSink",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1195:27,Update,Update,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1195,1,['Update'],['Update']
Deployability,[SofaSphFluid] Update rendering & other,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1215:15,Update,Update,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1215,1,['Update'],['Update']
Deployability,[SofaTest] adding automatic tests for updateForceMask,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/209:38,update,updateForceMask,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/209,1,['update'],['updateForceMask']
Deployability,"[SofaTopologyMapping] Clean, fix, upgrade Tetra2TriangleTopologicalMapping",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/876:34,upgrade,upgrade,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/876,1,['upgrade'],['upgrade']
Deployability,"[SofaTopologyMapping] Clean, fix, upgrade Triangle2EdgeTopologicalMapping",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/875:34,upgrade,upgrade,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/875,1,['upgrade'],['upgrade']
Deployability,[SolidMechanics.FEM] Small update on container access to avoid unecessary check,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4639:27,update,update,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639,1,['update'],['update']
Deployability,[SolidMechanics.Spring] CMake: Fix package configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3846:43,configurat,configuration,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3846,1,['configurat'],['configuration']
Deployability,[Testing] Fix installation of gtest headers,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4489:14,install,installation,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489,1,['install'],['installation']
Deployability,[Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2406:8,Update,Update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2406,1,['Update'],['Update']
Deployability,[Tests] Update required plugins in tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3542:8,Update,Update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3542,1,['Update'],['Update']
Deployability,[Tests] Update tests to new modules,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3406:8,Update,Update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3406,1,['Update'],['Update']
Deployability,[Tools] Update astyle config,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/550:8,Update,Update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/550,1,['Update'],['Update']
Deployability,[Topology.Container.Dynamic] Add class TriangleSubdividers to store methods to subdivide a triangle in differents configurations,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4747:114,configurat,configurations,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4747,1,['configurat'],['configurations']
Deployability,[Topology.Container] Update and rename methods in EdgeSetGeometryAlgorithms to compute barycentric coordinates,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4190:21,Update,Update,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4190,1,['Update'],['Update']
Deployability,[Topology] Fix internal infinite update loop in TopologySubsetData remove process,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3330:33,update,update,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3330,1,['update'],['update']
Deployability,[Topology] Update getLastElementIndex in TopologySubsetIndices,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3331:11,Update,Update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3331,1,['Update'],['Update']
Deployability,[Tutorials] Update and fix oneTetrahedron tutorial,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4103:12,Update,Update,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4103,1,['Update'],['Update']
Deployability,[Visual] VisualModelImpl: Fix updateVisual(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3815:30,update,updateVisual,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3815,1,['update'],['updateVisual']
Deployability,[WARNING] [ObjectFactory] Class already registered: SurfacePressureForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TaitSurfacePressureForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TorsionForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: TorsionForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TrianglePressureForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Rigid2d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectToLineConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToLineConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPlaneConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPlaneConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24166,install,install,24166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,[Windows][install] Always copy relocatable DLLs into bin directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2353:10,install,install,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2353,1,['install'],['install']
Deployability,[all] Add update internal mechanism,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1131:10,update,update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1131,1,['update'],['update']
Deployability,[all] Depreciate one of the missing use of Aspect in Link and update the code base,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1712:62,update,update,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1712,1,['update'],['update']
Deployability,[all] FIX scenegraph message's icons updates,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3027:37,update,updates,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3027,1,['update'],['updates']
Deployability,[all] Homogenize api update,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1163:21,update,update,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1163,1,['update'],['update']
Deployability,[all] Install FindTinyXML2,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4545:6,Install,Install,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545,1,['Install'],['Install']
Deployability,[all] Update Data comments (force),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2751:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2751,1,['Update'],['Update']
Deployability,[all] Update code base according to refactoring done in PR1283.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1330:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1330,1,['Update'],['Update']
Deployability,[all] Update code regarding lifecycle in Topology.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4065:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065,1,['Update'],['Update']
Deployability,[all] Update code to use sofa::InvalidID instead of topology::InvalidID,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2116:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2116,1,['Update'],['Update']
Deployability,[all] Update collision response names,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2522:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2522,1,['Update'],['Update']
Deployability,[all] Update containers to support c++x11 features,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113,1,['Update'],['Update']
Deployability,[all] Update data comments,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4751:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4751,1,['Update'],['Update']
Deployability,[all] Update header for cleaner future management,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1375:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1375,1,['Update'],['Update']
Deployability,[all] Update issofa bugfix,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/756:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/756,1,['Update'],['Update']
Deployability,[all] Update licence year and version for future releases,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/123:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/123,2,"['Update', 'release']","['Update', 'releases']"
Deployability,[all] Update the SOFA Guidelines,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1135:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1135,1,['Update'],['Update']
Deployability,[all] Update the code to remove some deprecation warnings,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2529:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2529,1,['Update'],['Update']
Deployability,[all] Update totalmass to totalMass,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3622:6,Update,Update,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3622,1,['Update'],['Update']
Deployability,[applications] FIX Install files that were ignored by the `make install` command,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/687:19,Install,Install,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/687,2,"['Install', 'install']","['Install', 'install']"
Deployability,[ci-build]. I will merge the PR if it compile nicely. . @maxime-tournier can you add a synthetic CHANGELOG section at the end of the description of this PR so that @hugtalbot & @guparan can easily update the CHANGELOG.md file in in sofa.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283#issuecomment-307798058:197,update,update,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283#issuecomment-307798058,1,['update'],['update']
Deployability,[ci-build]; @matthieu-nesme could you update your review?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/288#issuecomment-313442661:38,update,update,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/288#issuecomment-313442661,1,['update'],['update']
Deployability,"[ci-build]; Given the long discussion in ; https://github.com/sofa-framework/sofa/issues/81. It is unclear to me if PR is a WIP or something ready to merge and maybe updated in some future. . @raphaeldeimel, @maxime-tournier, @matthieu-nesme what is your opinion ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/91#issuecomment-267017883:166,update,updated,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/91#issuecomment-267017883,1,['update'],['updated']
Deployability,[ci-build][with-scene-tests]; Regression needs to be updated. . PR to update Regression is: https://github.com/sofa-framework/regression/pull/6,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1794#issuecomment-780168810:53,update,updated,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794#issuecomment-780168810,2,['update'],"['update', 'updated']"
Deployability,[cmake] Remove the use of an internal Eigen3 version and instead use the one installed on the system.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1281:77,install,installed,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1281,1,['install'],['installed']
Deployability,[collections] Install collections in their own directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3196:14,Install,Install,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3196,1,['Install'],['Install']
Deployability,[constraint] Update PrecomputedConstraintCorrection logs when loading compliance file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4026:13,Update,Update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4026,1,['Update'],['Update']
Deployability,[examples] Last pass of plugin finder before the release,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3146:49,release,release,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3146,1,['release'],['release']
Deployability,[examples] Update example scene of RungeKutta to make it stable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5036:11,Update,Update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5036,1,['Update'],['Update']
Deployability,[examples] Update the scene StandardTetrahedralFEMForceField.scn,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1064:11,Update,Update,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1064,1,['Update'],['Update']
Deployability,[extlibs/gtest] Update gtest & clean the CMakeLists.txt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604:16,Update,Update,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604,1,['Update'],['Update']
Deployability,[extlibs] Set Eigen as external project + upgrade to 3.2.10,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101:42,upgrade,upgrade,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101,1,['upgrade'],['upgrade']
Deployability,[extlibs] Upgrade Qwt extlib from 6.1.2 to 6.1.4,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1136:10,Upgrade,Upgrade,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1136,1,['Upgrade'],['Upgrade']
Deployability,[extlibs] update nlohmann_json parser,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1687:10,update,update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1687,1,['update'],['update']
Deployability,[gtest] Update to the latest gtest release (1.10.0).,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1705:8,Update,Update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1705,2,"['Update', 'release']","['Update', 'release']"
Deployability,[headlessRecorder] Update headless recorder to use the new ffmpeg recorder,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/919:19,Update,Update,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/919,2,['Update'],['Update']
Deployability,[image] Fixes #136 : Use the cmake install DIRECTORY instead of FILES…,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/138:35,install,install,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/138,1,['install'],['install']
Deployability,[metis] Upgrade metis and GKlib,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3063:8,Upgrade,Upgrade,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3063,1,['Upgrade'],['Upgrade']
Deployability,"[plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4047:58,update,update,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4047,1,['update'],['update']
Deployability,[plugins] Update license to LGPL of remaining files,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4425:10,Update,Update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4425,1,['Update'],['Update']
Deployability,[regression] Update regression test to compare only last iteration position,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1051:13,Update,Update,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1051,1,['Update'],['Update']
Deployability,[runSofa] Add a button and a mechanism to activate the scenegraph updates,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3026:66,update,updates,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3026,1,['update'],['updates']
Deployability,[runSofa] Centralize configuration into the user local directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4926:21,configurat,configuration,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4926,1,['configurat'],['configuration']
Deployability,[runSofa] OpenGL performance droped down after release 18.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1070:47,release,release,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1070,1,['release'],['release']
Deployability,[scenes] Update tetrahedron and tetrahedralCorotational FEM scenes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2172:9,Update,Update,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172,1,['Update'],['Update']
Deployability,[scripts] Update licenseUpdater,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1498:10,Update,Update,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1498,1,['Update'],['Update']
Deployability,[tests] Update code base to use the new gtest macro and avoid depecations warnings.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1726:8,Update,Update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1726,1,['Update'],['Update']
Deployability,[tools] Add metis relocation in post install fixup,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4767:37,install,install,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4767,1,['install'],['install']
Deployability,[tools] Add new dependency to fix in MacOS post-install-fixup,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4749:48,install,install-fixup,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4749,1,['install'],['install-fixup']
Deployability,[tools] Handles Qt plugins installed from system's package managers,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1728:27,install,installed,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1728,1,['install'],['installed']
Deployability,[tools] Update sofa launcher to use SofaPython3,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2968:8,Update,Update,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2968,1,['Update'],['Update']
Deployability,[tools] Use patchelf for post-install RPATH fixup,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1721:12,patch,patchelf,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1721,2,"['install', 'patch']","['install', 'patchelf']"
Deployability,[tools] Use patchelf for post-install RPATH fixup (#1721),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1729:12,patch,patchelf,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1729,2,"['install', 'patch']","['install', 'patchelf']"
Deployability,"] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [IN",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9457,install,install,9457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RayCollisionModel; [WARNING] [ObjectFactory] Class already registered: RayTraceDetection; [WARNING] [ObjectFactory] Class already registered: SleepController; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [WARNING] [ObjectFactory] Class already registered: ReadState; [WARNING] [ObjectFactory] Class already registered: ReadTopology; [WARNING] [ObjectFactory] Class already registered: GIDMeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class alrea,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:28502,install,install,28502,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [Plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5228,Release,Release,5228,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4670,Release,Release,4670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4258,Release,Release,4258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"] [ObjectFactory] Default template for class DynamicSparseGridGeometryAlgorithms already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-orig",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:1197,Release,Release,1197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,1,['Release'],['Release']
Deployability,] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Componen,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9120,Release,Release,9120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = SimulationHandler(). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.NONE). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.ONE_MODEL). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.TWO_MODELS); ```. No components of the collision pipeline:; ![image](https://user-images.githubusercontent.com/29635054/191464004-4a820fde-efa7-4e3f-b448-a3f734daf367.png); -> No memory increase, even with two collision models. NewProximity; ![image](https://user-images.githubusercontent.com/29635054/191463963-c581e5ce-e315-401c-b9ed-1786c27b66c1.png); -> Some memory increase with one and no collision models, STRONG increase with two collision models. LocalMinDistance; ![image](https://user-images.githubusercontent.com/29635054/191464146-0e656a0d-8850-4b43-bdd3-b1a478fd4f14.png); -> Some memory increase with one and no collision models, STRONG increase with two collision models. As you can see, there is a memory increase with no collision models and one collision model,; but with two collision models, the increase is much stronger. This is why I suspect the leak is somewhere in the pipeline, not the; collision models themselves. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: master commit 0748ab24dff55ebab5c6c339e1ade7ebbd24ddd0; - Version of SofaPython3: commit [71c844503e6939a2aab4255423e05e9e042adefd](https://github.com/sofa-framework/SofaPython3/commit/71c844503e6939a2aab4255423e05e9e042adefd); - State: Install. `mprof run --python python load_unload_env.py`; `mprof plot ...`. I guess @damienmarchal and @hugtalbot would be the right people to annoy with another leak. :D . Cheers,; Paul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:3153,pipeline,pipeline,3153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,2,"['Install', 'pipeline']","['Install', 'pipeline']"
Deployability,"_You made a recent checkout from master and your private plugins does not compile anymore._ . This is an unconfortable situation and be sure a lot of effort are done to reduce the amount of time this is happening. But whatever care we can take, this may and will happen. Two probable cases:; - when breaking stuffs that shouldn't be there have been merged by mistake. Well, we apologize for this situation. To help, do not hesitate to participate in the reviewing of the PRs before they are merged into master to detect this situation. ; ; - when breaking change that are accepted on purpose. The reason is that there is a general consensus that Sofa is currently very ""fat"" and thus PRs trying to clean or make sofa lightweight to compile are positive contribution to Sofa. The drawback of that is that cleaning and modularizing Sofa have a strong impact on file/code organization and for sure is going to break external code. . As this is going to happen I suggest in the following thread to report what he had to do to compile master when encountered a broken compilation. Anyone can contribute... . Hope this will help. . eg:; - I had to add a lot of #include<fstream> to avoid compilation problem with xxx; - Component from #include<SofaVolumetricData> have moved and been renamed ! I had to update my ; CMakeList.txt to add find_package(SofaImplicitField) or find_package(SofaDistanceGrid). An html version of the this thread is at:; Website version: https://www.sofa-framework.org/community/doc/programming-with-sofa/start-coding/help-list/. To edit it checkout: https://github.com/sofa-framework/doc/blob/master/40_Programming_with_SOFA/10_Start_coding/70_Help_list.md. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/418:1297,update,update,1297,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/418,1,['update'],['update']
Deployability,"_pos (4042 times, avg 7 ms); 26905 ms: std::_Vector_base<$> (15456 times, avg 1 ms); 26799 ms: std::__shared_ptr<$>::swap (10296 times, avg 2 ms); 25623 ms: std::vector<$>::_S_nothrow_relocate (11804 times, avg 2 ms); 25273 ms: sofa::core::objectmodel::Data<$>::virtualSetValue (2940 times, avg 8 ms); 24316 ms: std::copy<$> (9493 times, avg 2 ms); 21373 ms: std::_Rb_tree<$>::_M_drop_node (7450 times, avg 2 ms); 20684 ms: std::__cxx11::basic_string<$>::basic_string<$> (3461 times, avg 5 ms); 20371 ms: std::is_scalar<$> (29976 times, avg 0 ms); 19938 ms: sofa::core::objectmodel::TData<$>::read (5854 times, avg 3 ms); 19900 ms: std::__cxx11::basic_string<$>::basic_string (5840 times, avg 3 ms); 19611 ms: std::is_nothrow_copy_constructible<$> (18814 times, avg 1 ms). **** Functions that took longest to compile:; 2701 ms: __cxx_global_var_init.8 (sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/ComponentChange.cpp); 2442 ms: sofa::component::topology::SubsetTopologicalMapping::updateTopologicalMappingTopDown() (sofa/modules/SofaTopologyMapping/SubsetTopologicalMapping.cpp); 2423 ms: sofa::component::topology::TriangleSetTopologyAlgorithms<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul,... (sofa/SofaKernel/modules/SofaBaseTopology/TriangleSetTopologyAlgorithms.cpp); 1839 ms: _GLOBAL__sub_I_TransformEngine_test.cpp (sofa/modules/SofaGeneralEngine/SofaGeneralEngine_test/TransformEngine_test.cpp); 1813 ms: cimg_library::CImg<unsigned char>::get_resize(int, int, int, int, int, unsigned int, float, float, float, float) const (sofa/applications/plugins/CImgPlugin/src/CImgPlugin/ImageCImg.cpp); 1797 ms: _GLOBAL__sub_I_PlaneForceField_test.cpp (sofa/modules/SofaBoundaryCondition/SofaBoundaryCondition_test/PlaneForceField_test.cpp); 1679 ms: sofa::component::engine::GenerateSphere<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul, double>, sofa::d... (sofa/modules/SofaGeneralEngine/GenerateSphere.cpp); 1584 ms: sofa::component::engine::GenerateCylinder<sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:15294,update,updateTopologicalMappingTopDown,15294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['update'],['updateTopologicalMappingTopDown']
Deployability,_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6998,Release,Release,6998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"`. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, double>, sofa::defaulttype::Vec<2, double>, double> >::MechanicalObject(",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1752:1719,install,install,1719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752,1,['install'],['install']
Deployability,"`Actually, I dont even know if anybody uses the GUI with the docker installation ` why so? ; don't we need the gui for the sofa? how did we launch sofa then?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315525997:68,install,installation,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315525997,1,['install'],['installation']
Deployability,"`CompressedRowSparseMatrix::mulTranspose` now supports scalar blocks.; It did not support scalars, because it called `multTranspose` on an object of type `TBloc`, which can be a `float` or a `double`. Unit tests are updated to compile and test the function on scalar blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2331:216,update,updated,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2331,1,['update'],['updated']
Deployability,"`NewmarkImplicitSolver` never accumulated forces in a mapped Node. This PR fixes it. What I think happened:; Initially (before 2011), the ODE solvers did not accumulated mapped forces, because ""_accumulation through mappings is disabled as it will be done by addMBKv after all factors are computed_"" (quote from a [comment](https://github.com/sofa-framework/sofa/commit/0943c8fa75490d0a1d3dc50ba3b22df4ae7d7f07)). This behavior changed in https://github.com/sofa-framework/sofa/commit/0943c8fa75490d0a1d3dc50ba3b22df4ae7d7f07, but `NewmarkImplicitSolver` was never updated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2578:565,update,updated,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2578,1,['update'],['updated']
Deployability,"`SOFA_ROOT` should be set at the root of your install folder; here in your case, you have to do ; `export SOFA_ROOT=/home/sofa/SOFA_v23.06.00` before launching python ; ( or you can set the env.var directly in your python script before importing SOFA)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905#issuecomment-2277774514:46,install,install,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905#issuecomment-2277774514,1,['install'],['install']
Deployability,"`SpatialVector` and `Transform` are extracted from `SolidTypes`. Plan for a future PR: update code including `SolidTypes` just to get `Transform`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4513:87,update,update,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4513,1,['update'],['update']
Deployability,"`SpringForceField` is updated to handle topological changes properly. It now uses callbacks.; A scene example is introduced to test topological changes on a `SpringForceField`. To make the example working, point removal was needed but not implemented. That is why I had to implement `PointSetTopologyModifier::removeItems`, and added the support of points in `TopologicalChangeProcessor`. The use of callbacks fixes the application of the topological changes in `SpringForceField`. Before the use of callbacks, the topological changes were not applied because the force field was not in the same Node than the topology. The new code also supports a change in both input topologies. Previously, changes only in the second topology were possible. Without having testing it, I think the previous code did not handle properly multiple springs connected on a single DoF. This is now fixed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2653:22,update,updated,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2653,1,['update'],['updated']
Deployability,"`SubsetMultiMapping` resizes the target `State` according to the provided input Data. However, it did not update the topology.; For example, a `PointSetTopologyContainer` associated to the target `State` kept a number of vertices equal to zero. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2720:106,update,update,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2720,1,['update'],['update']
Deployability,"``; 1>------ Build started: Project: INSTALL, Configuration: Release x64 ------; 1>-- Install configuration: ""Release""; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glut.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glxew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1100,install,install,1100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['install'],['install']
Deployability,"```. class MatrixStructure {; public:; MatrixStructure() : version(0) {}. void updateStructure() {; // Update the matrix structure (e.g., due to user interaction); // You can update indices, dimensions, or any relevant information here; version++;; }. int getVersion() const {; return version;; }. private:; int version;; };. // Usage example:; MatrixStructure matrixStructure;. // Update the matrix structure when changes occur; matrixStructure.updateStructure();. // Check if the matrix structure has changed before performing a computation; int currentVersion = matrixStructure.getVersion();; if (currentVersion != previousVersion) {; // The matrix structure has changed, perform necessary updates; // For example, recompute matrix intersections or mappings; // ... // Update the previous version to the current one; previousVersion = currentVersion;; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2687#issuecomment-1873489792:79,update,updateStructure,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2687#issuecomment-1873489792,7,"['Update', 'update']","['Update', 'update', 'updateStructure', 'updates']"
Deployability,"```; void NarrowPhaseDetection::endNarrowPhase(); {; for (auto it = m_outputsMap.begin(); it != m_outputsMap.end();); {; DetectionOutputVector *do_vec = (it->second);; if (!do_vec || do_vec->empty()); {; if (do_vec); {; do_vec->release();; }; m_outputsMap.erase(it++);; }; else; {; ++it;; }; }; }; ```. The intended behavior of this is ""if the vector is empty, or it's a nullpointer, remove it from the map. If it is not a nullpointer, also release the vector"", right?. Since the `do_vec->clear()` is in `beginNarrowPhase`, the vector is never released correctly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333:228,release,release,228,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333,3,['release'],"['release', 'released']"
Deployability,"```cmake; find_package(Qt5 COMPONENTS Core QUIET); if (NOT Qt5Core_FOUND); if(CMAKE_VERSION VERSION_GREATER_EQUAL ""3.16""); find_package(Qt6 COMPONENTS Core CoreTools REQUIRED QUIET); if (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); message(FATAL_ERROR ""Image_gui is not compatible with Qt6 yet."") # to remove once image_gui has been updated; endif(); # else() should never happened as it would already break in Sofa.GUI.Qt; endif(); else(); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); endif(); ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4321:349,update,updated,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4321,1,['update'],['updated']
Deployability,"``cmake --install``` on a freshly built Sofa repo, the header files for libQGLViewer are not properly copied to the install/include directory.; First of all the install path is too long and has at least one ${PROJECT_NAME}, i.e. ""QGLViewer"" too much in the path. Also there are header files missing which are relevant for using the provided libQGLViewer in external projects/plugins. This is caused by the now modified ```Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - The last argument for the ```sofa_create_package_with_targets``` macro adds too many ```/${PROJECT_NAME}``` causing the long install path (line 118); - For some reason the ```sofa_create_package_with_targets``` macro does not copy the ```MOC_HEADER_FILES``` (line 21 ff.). ## Solution:; This PR shortens the output path and copies the contents of ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES``` which causes them to be copied to the install/include directory. This does not affect the build but ensures that all headers are copied. This was tested on Windows and two different Linux installations. I am aware that simply re-mentioning the MOC_HEADERS may look redundant, but I could not find a solution to convince the ```sofa_create_package_with_targets``` macro to also consider the MOC_HEADERS for copying. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4198:1202,install,installations,1202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4198,1,['install'],['installations']
Deployability,"``txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; /bd_targaryen/users/kleelakunwet/sofa/build/install; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; ...; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/SparseQRTraits.h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/include/Sofa.Component.LinearSolver.Direct/sofa/component/linearsolver/direct/TypedMatrixLinearSystem[BTDMatrix].h; -- Up-to-date: /bd_targaryen/users/kleelakunwet/sofa/build/install/lib/libmetis.so; CMake Error at _deps/metis-build/cmake_install.cmake:93 (file):; file cannot create directory: /cmake/metis. Maybe need administrative; privileges.; Call Stack (most recent call first):; Sofa/Component/LinearSolver/Direct/cmake_install.cmake:246 (include); Sofa/Component/LinearSolver/cmake_install.cmake:127 (include); Sofa/Component/cmake_install.cmake:133 (include); Sofa/cmake_install.cmake:48 (include); cmake_install.cmake:150 (include). gmake: *** [Makefile:120: install] Error 1. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14815053/CMak",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4622:2213,install,install,2213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4622,1,['install'],['install']
Deployability,a/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded pl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6115,Release,Release,6115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,a/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5977,Release,Release,5977,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"a/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/so",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10945,Release,Release,10945,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,a/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/li,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7243,install,install,7243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"a/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Pleas",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1812,Release,Release,1812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Release'],['Release']
Deployability,"a::type::CPUMemoryManager<sofa::type::Vec<3u, double> > > const&); sofa::component::mapping::linear::BarycentricMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::apply(sofa::core::MechanicalParams const*, sofa::core::objectmodel::Data<sofa::type::vector<sofa::type::Vec<3u, double>, sofa::type::CPUMemoryManager<sofa::type::Vec<3u, double> > > >&, sofa::core::objectmodel::Data<sofa::type::vector<sofa::type::Vec<3u, double>, sofa::type::CPUMemoryManager<sofa::type::Vec<3u, double> > > > const&); sofa::component::collision::response::mapper::BarycentricContactMapper<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::updateXfree(); sofa::component::collision::response::contact::FrictionContact<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::createResponse(sofa::core::objectmodel::BaseContext*); sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionResponse(); sofa::simulation::PipelineImpl::computeCollisionResponse(); sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation:",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3524:1671,update,updateXfree,1671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3524,1,['update'],['updateXfree']
Deployability,a_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7135,Release,Release,7135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"ack/GL/glut.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glxew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Micr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1532,install,install,1532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['install'],['install']
Deployability,aconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8572,Release,Release,8572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,aconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [Plu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5533,Release,Release,5533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4522:404,integrat,integration,404,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522,4,"['integrat', 'update']","['integration', 'updates']"
Deployability,aded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Rele,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4130,Release,Release,4130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"ady registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:32840,install,install,32840,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,ager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8345,install,install,8345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,ager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3867,install,install,3867,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,ager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3700,Release,Release,3700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,alizeSystem; 7 	 3.23	 1 	 0.15	 0.40	 0.19	 0.04	 0.19	 0.30	.......resizeSystem; 7 	 3.41	 1 	 0.07	 0.40	 0.11	 0.05	 0.11	 0.18	.......clearSystem; 7 	 3.53	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.02	.......initializeLocalMatrices; 6 	 3.54	 1 	 50.34	 52.60	 50.89	 0.41	 50.89	 81.62	......AssembleSystem; 7 	 3.54	 1 	 50.31	 52.58	 50.87	 0.41	 50.87	 81.58	.......buildMatrices; 8 	 3.54	 1 	 50.03	 52.24	 50.56	 0.40	 50.56	 81.10	........buildStiffness; 8 	 54.11	 1 	 0.28	 0.45	 0.30	 0.03	 0.30	 0.48	........buildMass; 8 	 54.40	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildDamping; 8 	 54.40	 1 	 0 	 0 	 0 	 0 	 0 	 0 	........buildGeometricStiffness; 7 	 54.41	 1 	 0 	 0 	 0 	 0 	 0 	 0 	.......projectMappedMatrices; 7 	 54.41	 1 	 0.02	 0.03	 0.02	 0 	 0.02	 0.03	.......applyProjectiveConstraint; 4 	 54.43	 1 	 7.47	 8.01	 7.68	 0.11	 7.68	 12.32	....MBKSolve; 5 	 54.57	 1 	 7.31	 7.85	 7.52	 0.11	 7.52	 12.06	.....CG-Solve; 4 	 62.12	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.02	....UpdateVAndX. --- . Normal : 27.3678 FPS. 2 	 0.04	 1 	 37.97	 39.96	 38.38	 0.34	 38.38	 99.38	..solve; 3 	 0.04	 1 	 37.96	 39.95	 38.38	 0.34	 38.38	 99.37	...Mechanical; 4 	 0.06	 1 	 1.70	 2.24	 1.88	 0.12	 1.88	 4.88	....ComputeForce; 4 	 1.94	 1 	 0.94	 1.23	 1.04	 0.06	 1.04	 2.68	....ComputeRHTerm; 4 	 2.98	 1 	 22.20	 23.41	 22.47	 0.18	 22.47	 58.17	....MBKBuild; 5 	 2.98	 1 	 22.20	 23.40	 22.46	 0.18	 22.46	 58.16	.....CG-setSystemMBKMatrix; 6 	 2.98	 1 	 0.01	 0.03	 0.02	 0 	 0.02	 0.04	......getContributors; 6 	 3 	 1 	 0.01	 0.01	 0.01	 0 	 0.01	 0.02	......buildMappingGraph; 6 	 3.01	 1 	 0.25	 0.56	 0.30	 0.04	 0.30	 0.77	......InitializeSystem; 7 	 3.01	 1 	 0.13	 0.28	 0.16	 0.03	 0.16	 0.41	.......resizeSystem; 7 	 3.17	 1 	 0.09	 0.25	 0.12	 0.02	 0.12	 0.32	.......clearSystem; 7 	 3.29	 1 	 0.01	 0.02	 0.01	 0 	 0.01	 0.04	.......initializeLocalMatrices; 6 	 3.31	 1 	 21.92	 22.80	 22.13	 0.15	 22.13	 57.31	......AssembleSystem; 7 	 3.31	 1 	 21.90	 22.77	 22.11	 0.14	 ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958:1782,Update,UpdateVAndX,1782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717065958,1,['Update'],['UpdateVAndX']
Deployability,already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFactory] Class already registered: DevTensionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Vec3d>; [WARNING] [ObjectFactory] Class already registered: EvalSurfaceDistance<Vec3d>; [WARNING] [ObjectF,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:30082,install,install,30082,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['install'],['install']
Deployability,"alue(d_b.getValue() - 1);; }; };; ```. And here's what happens in the base class:. - The SOFAOR_CALLBACK_SYSTEM is a macro that creates a callback functor:; ```; class CallbackFunctor; {; public:; virtual void call(sofa::core::objectmodel::BaseData* o) = 0;; };. #define SOFAOR_CALLBACK_SYSTEM(T) \; typedef T SOFAOR_CLASS; \; class Callback : public sofaor::common::CallbackFunctor \; { \; typedef void (SOFAOR_CLASS::*Func)(sofa::core::objectmodel::BaseData * o); \; \; SOFAOR_CLASS* m_obj; \; Func m_func; \; \; public: \; Callback(SOFAOR_CLASS* _this, Func f) : m_obj(_this), m_func(f) {} \; void call(sofa::core::objectmodel::BaseData* data = 0) \; { \; (m_obj->*m_func)(data); \; } \; }. #define SOFAOR_ADD_CALLBACK(data, callback) \; addDataCallback(data, new Callback(this, callback)). #define SOFAOR_ADD_INPUT_CALLBACK(data, callback, trackOnly) \; addInput(data, trackOnly, new Callback(this, callback)); ```. When reinit is called on the component, all callbacks are called and the update class is called (maybe it's a mistake, maybe only the callbacks should be called..). Then outputs are set to dirty, and an IdleEvent visitor is propagated:; ```; void ImplicitDataEngine::reinit(); {; cleanTrackers();; update();; setDirtyOutputs();; sofa::core::objectmodel::IdleEvent ie;; sofa::simulation::PropagateEventVisitor v(; sofa::core::ExecParams::defaultInstance(), &ie);; this->getContext()->getRootContext()->executeVisitor(&v);; }; ``` . This allows for a complete and instant refresh of all components taking as an input the dirty outputs without calling the previous components in the pipeline again.; Limitations are that those following components have to be initialized AFTER (in terms of scene graph, so either in subnodes, or after the current engine, in the same node). Another feature that I don't like much but that was requested by someone who was supposed to use and contribute to my plugin but never did, is the ""autolink"" feature:. <MySofaORComponent name=""mycomp"" autolink",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816:2332,update,update,2332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816,1,['update'],['update']
Deployability,alyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is depreca,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9782,Release,Release,9782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3288,Release,Release,3288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Release'],['Release']
Deployability,"anager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9765,install,install,9765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"anager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::comp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9607,install,install,9607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,and I also propose to update the APIChange file .. ; I did two in one (but separate commits) since it's super minor!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1414:22,update,update,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1414,1,['update'],['update']
Deployability,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4235:363,update,update,363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235,2,"['integrat', 'update']","['integration', 'update']"
Deployability,and create a new module Sofa.GL which will gather everything.; It will allow people using headless system to not have to install OpenGL libs (mesa & ice) when compiling SOFA; and less weird code with the preprocessor definition SOFA_NO_OPENGL,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1645:121,install,install,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1645,1,['install'],['install']
Deployability,any update on the #2870 @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1106307398:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1106307398,1,['update'],['update']
Deployability,any update on this @ruiliang-gao ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1186879153:4,update,update,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1186879153,1,['update'],['update']
Deployability,"ase""); root.addObject(""MinProximityIntersection"", name=""Proximity"", alarmDistance=0.5, contactDistance=0.3); root.addObject(""CollisionResponse"", response=""FrictionContactConstraint""); root.addObject(""GenericConstraintSolver""). composite_node = root.addChild(""composite""); composite_node.addObject(; ""SparseGridMultipleTopology"",; n=[6, 3, 3],; fileTopology=""mesh/bubille_out.obj"",; fileTopologies=[""mesh/bubille_out.obj"", ""mesh/bubille_in1.obj"", ""mesh/bubille_in2.obj""],; nbVirtualFinerLevels=3,; finestConnectivity=False,; stiffnessCoefs=[1, 0.0001, 50],; massCoefs=[1, 1, 1],; ); composite_node.addObject(""EulerImplicitSolver"", vdamping=0, rayleighMass=0, rayleighStiffness=0); composite_node.addObject(""SparseLDLSolver""); composite_node.addObject(""MechanicalObject""); composite_node.addObject(; ""HexahedronCompositeFEMForceFieldAndMass"",; drawType=""0"",; lumpedMass=False,; nbVirtualFinerLevels=2,; youngModulus=600,; poissonRatio=0.3,; method=""polar"",; density=0.1,; updateStiffnessMatrix=False,; printLog=False,; ); composite_node.addObject(""BoxROI"", box=""-5 -2.1 -10 10 -1.9 10""); composite_node.addObject(""FixedConstraint"", indices=""@BoxROI.indices""); composite_node.addObject(""LinearSolverConstraintCorrection""). collision_node = composite_node.addChild(""collision""). collision_node.addObject(""MeshOBJLoader"", name=""loader"", filename=""mesh/bubille_out.obj""); collision_node.addObject(""MeshTopology"", src=""@loader""); collision_node.addObject(""MechanicalObject"", src=""@loader""); collision_node.addObject(""HexahedronCompositeFEMMapping""); # collision_node.addObject(""TriangleCollisionModel"", group=0); collision_node.addObject(""SphereCollisionModel"", group=0, radius=0.3). visual_node = collision_node.addChild(""visual""); visual_node.addObject(""MeshOBJLoader"", name=""meshLoader_2"", filename=""mesh/bubille_out.obj"", handleSeams=True); visual_node.addObject(""OglModel"", name=""VisualBody"", src=""@meshLoader_2"", normals=""0"", color=[0.1, 0.8, 0.3, 0.6]); visual_node.addObject(""IdentityMapping"", input=",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:4894,update,updateStiffnessMatrix,4894,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['update'],['updateStiffnessMatrix']
Deployability,ase/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5373,install,install,5373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['install'],['install']
Deployability,"at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #2 0x00007ff67cc2aa57 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #3 0x00007ff67cc2af18 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationGraph.so.20.12.99; #4 0x00007ff67b4cf696 in sofa::simulation::Node::propagateEvent(sofa::core::ExecParams const*, sofa::core::objectmodel::Event*) (); at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaSimulationCore.so.20.12.99; #5 0x00007ff6796f1969 in sofa::gui::qt::RealGUI::playpauseGUI(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #6 0x00007ff67968bcad in sofa::gui::qt::RealGUI::qt_static_metacall(QObject*, QMetaObject::Call, int, void**) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #7 0x00007ff678f58555 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #8 0x00007ff6796898b2 in sofa::gui::qt::QSofaListView::Lock(bool) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #9 0x00007ff6796daccd in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /home/Olumide/Downloads/src/sofa/master/Release/lib/libSofaGuiQt.so.20.12.99; #10 0x00007ff6796dad29 in sofa::gui::qt::QSofaListView::expandNode(QTreeWidgetItem*) () at /h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2057:1507,Release,Release,1507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2057,1,['Release'],['Release']
Deployability,"ation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #12 0x7fc300356054 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:607; #13 0x7fc2ff15304b in sofa::simulation::Node::executeVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #14 0x7fc2ff10c119 in sofa::simulation::Node::execute(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:197; #15 0x7fc2ff109df1 in sofa::simulation::AnimateVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:94; #16 0x7fc2ff10a179 in sofa::simulation::AnimateVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:125; #17 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #18 0x7fc300356054 in sofa::simulation::grap",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:6967,Pipeline,Pipeline,6967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['Pipeline'],['Pipeline']
Deployability,"ation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #24 0x7fc300356054 in sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:607; #25 0x7fc2ff15304b in sofa::simulation::Node::executeVisitor(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.cpp:901; #26 0x7fc2ff10c119 in sofa::simulation::Node::execute(sofa::simulation::Visitor*, bool) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:197; #27 0x7fc2ff109df1 in sofa::simulation::AnimateVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:94; #28 0x7fc2ff10a179 in sofa::simulation::AnimateVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/AnimateVisitor.cpp:125; #29 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685. SUMMARY: AddressSanitizer: 9831480 byte(s) l",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:36938,Pipeline,Pipeline,36938,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['Pipeline'],['Pipeline']
Deployability,"backup discussion for logs:. here is the call stack of sphereLoader:; ```; SphereLoader::load; SphereLoader::load END; SphereLoader::updateFileNameAndTransformPosition; - m_filename changed: 1; - d_translation changed: 0; - d_rotation changed: 0; - d_scale changed: 0; SphereLoader::load; SphereLoader::load END; SphereLoader::applyTransform; SphereLoader::applyTransform END; SphereLoader::Callback exit with load(); ```. So as you can see the file is loaded once at parse time (because of the ```canLoad``` mechanism of the Loader) but the m_filename is still flaged as changed in the tracker so it will call the method load a second time when the Data position/radius are pulled from other components. . This was avoided in my previous version by adding ```m_internalEngine[""filename""].cleanDirty();``` at begining of the Load method. . However it is not looping anymore like in the initial version. Maybe we can say that this double call of load is special due to the Loader mechanism at parse stage (which should be replaced by a nice Data grah update...); For the log from epernod@sophia.inria.fr . Loader are loading file/mesh at parse stage to ensure they are ready and all their data are filled before any other component start linking and using the loader data. You can see it like a ""pre-init"" visitor... in comparison to the bwdInit.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1666#issuecomment-746000345:133,update,updateFileNameAndTransformPosition,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1666#issuecomment-746000345,2,['update'],"['update', 'updateFileNameAndTransformPosition']"
Deployability,"based on #4028 . Add method to detect intersection between 2 edges in 2D and 3D.; Add tests with tricky cases; Will update version in EdgeSetTopologyContainer which is not really working later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4029:116,update,update,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4029,1,['update'],['update']
Deployability,"boost::filesystem is the last dependency on a (compiled) boost library.; However, SOFA is still dependent on header-only boost libraries (for graph, stable_vector and intrusive_ptr especially); (config of the target Boost::boost is in Sofa.Type). The change is really easy. just replace boost::filesystem with std::filesystem.; The only non trivial 1-1 replacement was for managing unicode path (not sure on the change actually). This is finally possible because minimum requirement is ubuntu 20.04 (with an updated version of gcc supporting std::filesystem instead of std::experimental::filesystem) and macOS 10.15 (same with its clang version/mac SDK). [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/177]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2342:508,update,updated,508,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2342,1,['update'],['updated']
Deployability,"btw, maybe one VM of each OS should do a make install to test the cpack config.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/194#issuecomment-284471982:46,install,install,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/194#issuecomment-284471982,1,['install'],['install']
Deployability,"but just to compute it. ; - `buildComplianceMatrix` API method needs to be passed a `ConstraintParams` so that concrete instances of `LinearSolver` can retrieve the `MatrixDerivId` that points to the constraint jacobian.; ; FIX. [SofaConstraint]; - `GenericConstraintSolver` block gauss seidel can support arbitrary size of blocks. The previous implementation had an hard coded limit of 6 for the block size. UPDATES. [SofaSimulationCore]; - Adapted `AnimateVisitor`, `MechanicalGetConstraintJacobianVisitor` and `MechanicalResetConstraintVisitor` to the changes introduced in `BaseMechanicalState` API. [SofaBaseMechanics] ; - `MechanicalObject` dynamically allocated state vectors are given a name and a owner like any other Data. As a result, these dynamic state vectors can be displayed by the GUI. Also adapted the code to the API changes introduced in `BaseMechanicalState` API. [SofaMeshCollision]; - Some contact mappers `updateXfree()` method were not calling `applyJ` and therefore were not propagating the free velocity towards contact dofs, resulting in segfault when solving constraints in velocity mode. . [SofaConstraint]; - `GenericConstraintSolver` accumulates the constraint lambdas towards independant dofs, so that non linear mappings can compute the geometric stiffness induced by the constraint forces from the previous time step.; - `FreeMotionAnimationLoop` assembles mapping geometric stiffness when possible. It also uses a single mapping linearisation within the time step. The solving step becomes very similar to the one explained in the ""Stable Constraints"" paper, when the compliance of the constraint is equal to zero.; - `BilateralConstraintResolutionNDofs` uses Eigen library to factorize a constraint block of arbitrary size using LDLT decomposition.; - `ConstraintAnimationLoop` minor changes introduced to reflect API changes. [SofaMiscMapping]; - `DistanceMapping` implements the `applyJT` method for `MatrixDeriv` types using the utility methods provided in #452",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:4312,update,updateXfree,4312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['update'],['updateXfree']
Deployability,"by the way @alxbilger it would be great if you feel it's necessary to update the associated pages ([DirectSAP](https://www.sofa-framework.org/community/doc/components/collisions/detection-sweep-and-prune/), IncrSAP, BruteForce)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2030#issuecomment-825192122:70,update,update,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030#issuecomment-825192122,1,['update'],['update']
