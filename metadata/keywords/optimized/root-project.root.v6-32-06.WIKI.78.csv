quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"als from this object; Int_tfMaxDrawQueriesMax number of Draw queries kept; TList*fOutputlist with output objects; TQueryResult*fPreviousQueryPrevious instance of TQueryResult processed; TProofProgressStatus*fProgressStatusthe progress status object;; TQueryResult*fQueryInstance of TQueryResult currently processed; TList*fQueryResultsList of TQueryResult; TStatus*fSelStatus! status of query in progress; TSelector*fSelector! the latest selector; TClass*fSelectorClass! class of the latest selector; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TTimer*fStopTimerTimer associated with a stop request; TMutex*fStopTimerMtxTo protect the stop timer; Long64_tfTotalEventsnumber of events requested; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static THashList*fgDrawInputParsList of input parameters to be kept on drawing actions. private:. TList*fAutoBinsMap of min/max values by name for slaves. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofPlayer(TProof* proof = 0); Default ctor. ~TProofPlayer(); Destructor. void SetProcessing(Bool_t on = kTRUE); Set processing bit according to 'on'. void StopProcess(Bool_t abort, Int_t timeout = -1); Stop the process after this event. If timeout is positive, start; a timer firing after timeout seconds to hard-stop time-expensive; events. void SetDispatchTimer(Bool_t on = kTRUE); Enable/disable the timer to dispatch pening events while processing. void SetStopTimer(Bool_t on = kTRUE, Bool_t abort = kFALSE, Int_t timeout = 0); Enable/disable the timer to stop/abort processing.; The 'timeout' is in seconds. void AddQueryResult(TQueryResult* q); Add query result to the list, making sure that there are no; duplicates. void RemoveQueryResult(const char* ref); Remove all query result instances referenced 'ref' from; the list of results. TQueryResult * GetQueryResult(const char* ref); Get query result instances referenced 'ref' from; the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofPlayer.html:13972,Inherit,Inheritance,13972,root/html532/TProofPlayer.html,https://root.cern,https://root.cern/root/html532/TProofPlayer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"als. Detailed Description; Special pdf's: linear interpolation between pdf shapes using the 'Alex Read' algorithm . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooIntegralMorph.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf705_linearmorph(); {; // C r e a t e e n d p o i n t p d f s h a p e s; // ------------------------------------------------------; ; // Observable; RooRealVar x(""x"", ""x"", -20, 20);; ; // Lower end point shape: a Gaussian; RooRealVar g1mean(""g1mean"", ""g1mean"", -10);; RooGaussian g1(""g1"", ""g1"", x, g1mean, 2.0);; ; // Upper end point shape: a Polynomial; RooPolynomial g2(""g2"", ""g2"", x, RooArgSet(-0.03, -0.001));; ; // C r e a t e i n t e r p o l a t i n g p d f; // -----------------------------------------------; ; // Create interpolation variable; RooRealVar alpha(""alpha"", ""alpha"", 0, 1.0);; ; // Specify sampling density on observable and interpolation variable; x.setBins(1000, ""cache"");; alpha.setBins(50, ""cache"");; ; // Construct interpolating pdf in (x,a) represent g1(x) at a=a_min; // and g2(x) at a=a_max; RooIntegralMorph lmorph(""lmorph"", ""lmorph"", g1, g2, x, alpha);; ; // P l o t i n t e r p o l a t i n g p d f a t v a r i o u s a l p h a; // -----------------------------------------------------------------------------; ; // Show end points as blue curves; RooPlot *frame1 = x.frame();; g1.plotOn(frame1);; g2.plotOn(frame1);; ; // Show interpolated shapes in red; alpha.setVal(0.125);; lmorph.plotOn(frame1, LineColor(kRed));; alpha.setVal(0.25);; lmorph.plotOn(frame1, LineColor(kRed));; alpha.setVal(0.375);; lmorph.plotOn(frame1, LineColor(kRed));; alpha.setVal(0.50);; lmorph.plotOn(frame1, LineColor(kRed));; alpha.setVal(0.625);; lmorph.plotOn(frame1, LineColor(kRed));; alpha.setVal(0.75);; lmorph.plotOn(frame1, LineColor(kRed));; alpha.setVal(0.875);; lmorph.plotOn(frame1, LineColor(kRed));; alpha.set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf705__linearmorph_8C.html:1229,variab,variable,1229,doc/master/rf705__linearmorph_8C.html,https://root.cern,https://root.cern/doc/master/rf705__linearmorph_8C.html,1,['variab'],['variable']
Modifiability,"als; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fCloseOK button; TGLayoutHints*fL1layout of TGTextEdit; TGLayoutHints*fL2layout of OK button; TGTextView*fTextViewText view widget; TSessionViewer*fViewerpointer on main viewer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSessionLogView(TSessionViewer* viewer, UInt_t w, UInt_t h); Create an editor in a dialog. ~TSessionLogView(). void SetTitle(); Set title in editor window. void Popup(); Show editor. void AddBuffer(const char* buffer); Load a text buffer in the editor. void ClearLogView(); Clear log window. void LoadBuffer(const char* buffer); Load a text buffer in the editor. void LoadFile(const char* file); Load a file in the editor. void CloseWindow(); Called when closed via window manager action. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process OK button. » Author: Bertrand Bellenot, Gerri Ganis 15/09/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id: TSessionLogView.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSessionLogView.html:22072,Inherit,Inheritance,22072,root/html532/TSessionLogView.html,https://root.cern,https://root.cern/root/html532/TSessionLogView.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"als;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Friends; class TGMdiMainFrame;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiWinResizer.html:26510,inherit,inherited,26510,doc/master/classTGMdiWinResizer.html,https://root.cern,https://root.cern/doc/master/classTGMdiWinResizer.html,1,['inherit'],['inherited']
Modifiability,"alsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGIcon(const TGWindow* p = 0, const char* image = 0); Create icon. ~TGIcon(); Delete icon and free picture. void SetPicture(const TGPicture* pic); Set icon picture. void SetImage(const char* img); Set icon image. void SetImage(TImage* img); Change icon image. TGDimension GetDefaultSize() const; Return size of icon. void DoRedraw(); Redraw picture. void Resize(UInt_t w = 0, UInt_t h = 0); Resize. void MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); Move icon to (x,y) and resize it to (w,h). void Reset(); Reset icon to original image. It can be used only via context menu. void SetImagePath(const char* path); Set directory where image is located. void SavePrimitive(ostream& out, Option_t* option = """"); Save an icon widget as a C++ statement(s) on output stream out. TGIcon(const TGIcon& ). TGIcon& operator=(const TGIcon& ). TGIcon(const TGWindow* p, const TGPicture* pic, UInt_t w, UInt_t h, UInt_t options = kChildFrame, Pixel_t b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGIcon.html:17950,Inherit,Inheritance,17950,root/html602/TGIcon.html,https://root.cern,https://root.cern/root/html602/TGIcon.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"alsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLBEntry(const TGWindow* p = 0, Int_t id = -1, UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); Base class entry constructor. void Activate(Bool_t a); Toggle active state of listbox entry. void Toggle(); Toggle active state of listbox entry. void DoRedraw(); { }. TGLBEntry(const TGWindow* p = 0, Int_t id = -1, UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()). void Update(TGLBEntry* ); { }. Int_t EntryId() const; { return fEntryId; }. Bool_t IsActive() const; { return fActive; }. void SetBackgroundColor(Pixel_t col); { TGFrame::SetBackgroundColor(col); fBkcolor = col; }. TGTextLBEntry & operator=(const TGTextLBEntry &). TGLineLBEntry operator=(const TGLineLBEntry&). » Author: Fons Rademakers 12/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:51; This page has been automatically generated. For comments or suggestions reg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLBEntry.html:18364,Inherit,Inheritance,18364,root/html604/TGLBEntry.html,https://root.cern,https://root.cern/root/html604/TGLBEntry.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"alsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLBEntry(const TGWindow* p = 0, Int_t id = -1, UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); Base class entry constructor. void Activate(Bool_t a); Toggle active state of listbox entry. void Toggle(); Toggle active state of listbox entry. void DoRedraw(); { }. TGLBEntry(const TGWindow* p = 0, Int_t id = -1, UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()). void Update(TGLBEntry* ); { }. Int_t EntryId() const; { return fEntryId; }. Bool_t IsActive() const; { return fActive; }. void SetBackgroundColor(Pixel_t col); { TGFrame::SetBackgroundColor(col); fBkcolor = col; }. TGTextLBEntry & operator=(const TGTextLBEntry &). TGLineLBEntry operator=(const TGLineLBEntry&). » Author: Fons Rademakers 12/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:52; This page has been automatically generated. For comments or suggestions reg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLBEntry.html:18364,Inherit,Inheritance,18364,root/html602/TGLBEntry.html,https://root.cern,https://root.cern/root/html602/TGLBEntry.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"alsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGMdiTitleIcon(const TGWindow* p, const TGWindow* titlebar, const TGPicture* pic, Int_t w, Int_t h); TGMdiTitleIcon constructor.; the TGMdiTitleIcon is the left icon used also for the MDI; popup menu allowing access to MDI commands as : restore,; move, size, minimize and close. ~TGMdiTitleIcon(); TGMdiTitleIcon destructor. void DoRedraw(); Redraw icon. Bool_t HandleDoubleClick(Event_t* event); Handle double click event on MDI icon (close the window). Bool_t HandleButton(Event_t* event); Handle button event on MDI icon (popup menu). TGMdiTitleIcon(const TGWindow* p, const TGWindow* titlebar, const TGPicture* pic, Int_t w, Int_t h). TGPopupMenu * GetPopup() const; { return fPopup; }. » Author: Bertrand Bellenot 20/08/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:55; This page has been automatically generated. For comments or suggestions regarding the docume",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGMdiTitleIcon.html:18364,Inherit,Inheritance,18364,root/html604/TGMdiTitleIcon.html,https://root.cern,https://root.cern/root/html604/TGMdiTitleIcon.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"alsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGMdiTitleIcon(const TGWindow* p, const TGWindow* titlebar, const TGPicture* pic, Int_t w, Int_t h); TGMdiTitleIcon constructor.; the TGMdiTitleIcon is the left icon used also for the MDI; popup menu allowing access to MDI commands as : restore,; move, size, minimize and close. ~TGMdiTitleIcon(); TGMdiTitleIcon destructor. void DoRedraw(); Redraw icon. Bool_t HandleDoubleClick(Event_t* event); Handle double click event on MDI icon (close the window). Bool_t HandleButton(Event_t* event); Handle button event on MDI icon (popup menu). TGMdiTitleIcon(const TGWindow* p, const TGWindow* titlebar, const TGPicture* pic, Int_t w, Int_t h). TGPopupMenu * GetPopup() const; { return fPopup; }. » Author: Bertrand Bellenot 20/08/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:55; This page has been automatically generated. For comments or suggestions regarding the docume",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGMdiTitleIcon.html:18364,Inherit,Inheritance,18364,root/html602/TGMdiTitleIcon.html,https://root.cern,https://root.cern/root/html602/TGMdiTitleIcon.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"alsBlocked;  list of connections to this object ;  . Private Member Functions;  TEveParamList (const TEveParamList &);  ; TEveParamList & operator= (const TEveParamList &);  . Friends; class TEveParamListEditor;  . Additional Inherited Members;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveParamList.html:34361,inherit,inherited,34361,doc/master/classTEveParamList.html,https://root.cern,https://root.cern/doc/master/classTEveParamList.html,2,['inherit'],['inherited']
Modifiability,"alse); voidFormatFrameForLikelihood(RooPlot* frame, string XTitle = std::string(""#sigma / #sigma_{SM}""), string YTitle = std::string(""-log likelihood"")); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; RooStats::HistFactory::HistoToWorkspaceFactoryHistoToWorkspaceFactory(); RooStats::HistFactory::HistoToWorkspaceFactoryHistoToWorkspaceFactory(string, string, vector<std::string>, double = 200, double = 20, int = 0, int = 6, TFile* = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; voidLinInterpWithConstraint(RooWorkspace* proto, TH1* nominal, vector<TH1*> lowHist, vector<TH1*> highHist, vector<std::string> sourceName, string prefix, string productPrefix, string systTerm, int lowBin, int highBin, vector<std::string>& likelihoodTermNames); virtual voidTObject::ls(Option_t* option = """") const; RooWorkspace*MakeCombinedModel(vector<std::string>, vector<RooWorkspace*>); TDirectory*Makedirs(TDirectory* file, vector<std::string> names); RooWorkspace*MakeSingleChannelModel(vector<RooStats::HistFactory::EstimateSummary> summary, vector<std::string> systToFix, bool doRa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__HistoToWorkspaceFactory.html:3715,Inherit,InheritsFrom,3715,root/html534/RooStats__HistFactory__HistoToWorkspaceFactory.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__HistoToWorkspaceFactory.html,1,['Inherit'],['InheritsFrom']
Modifiability,"also affects the parameter error matrix, of course, so; MINUIT does a transformation of the error matrix (and the ``parabolic''; parameter errors) when there are parameter limits. Users should however; realize that the transformation is only a linear approximation, and that; it cannot give a meaningful result if one or more parameters is very close; to a limit, where partial Pext /partial Pint #0. Therefore, it is; recommended that:. Limits on variable parameters should be used only when needed in order; to prevent the parameter from taking on unphysical values.; When a satisfactory minimum has been found using limits, the limits; should then be removed if possible, in order to perform or re-perform the; error analysis without limits. How to get the right answer from MINUIT. MINUIT offers the user a choice of several minimization algorithms. The; MIGRAD algorithm is in general the best minimizer for; nearly all functions. It is a variable-metric method with inexact line; search, a stable metric updating scheme, and checks for; positive-definiteness. Its main weakness is that it depends heavily on; knowledge of the first derivatives, and fails miserably if they are very; inaccurate. If parameter limits are needed, in spite of the side effects, then the; user should be aware of the following techniques to alleviate problems; caused by limits:. Getting the right minimum with limits. If MIGRAD converges normally to a point where no parameter is near one of; its limits, then the existence of limits has probably not prevented MINUIT; from finding the right minimum. On the other hand, if one or more; parameters is near its limit at the minimum, this may be because the true; minimum is indeed at a limit, or it may be because the minimizer has; become ``blocked'' at a limit. This may normally happen only if the; parameter is so close to a limit (internal value at an odd multiple of #((pi)/(2)); that MINUIT prints a warning to this effect when it prints; the parameter values.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuit.html:5028,variab,variable-metric,5028,root/html528/TMinuit.html,https://root.cern,https://root.cern/root/html528/TMinuit.html,10,['variab'],['variable-metric']
Modifiability,"aluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1Binding.html:49224,parameteriz,parameterized,49224,doc/master/classRooCFunction1Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1Binding.html,13,['parameteriz'],['parameterized']
Modifiability,"aluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidWriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual voidDeclareCompatibilityOptions(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. Double_tAdaBoost(vector<const TMVA::Event*>&, TMVA::DecisionTree* dt); Double_tAdaBoostR2(vector<const TMVA::Event*>&, TMVA::DecisionTree* dt); Double_tAdaCost(vector<const TMVA::Event*>&, TMVA::DecisionTree* dt); Double_tApplyPreselection",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBDT.html:18132,Config,Configurable,18132,root/html602/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBDT.html,12,['Config'],['Configurable']
Modifiability,"alue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf316_llratioplotDefinition rf316_llratioplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf316_llratioplot.C. tutorialsroofitrf316_llratioplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf316__llratioplot_8C.html:6833,variab,variables,6833,doc/master/rf316__llratioplot_8C.html,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html,2,['variab'],['variables']
Modifiability,"alue (TLeaf *leaf);  Return the size of the underlying array for the current entry in the TTree. ;  ; virtual void * GetLocalValuePointer (char *from, Int_t instance=0);  returns the address of the value pointed to by the TFormLeafInfo. ;  ; virtual void * GetLocalValuePointer (TLeaf *leaf, Int_t instance=0);  returns the address of the value pointed to by the TFormLeafInfo. ;  ; Int_t GetMultiplicity ();  Reminder of the meaning of fMultiplicity: ;  ; virtual Int_t GetNdata ();  Get the number of element in the entry. ;  ; Int_t GetNdata (TLeaf *leaf);  ; char * GetObjectAddress (TLeafElement *leaf, Int_t &instance);  Returns the location of the object pointed to. ;  ; virtual Int_t GetPrimaryIndex ();  Method for multiple variable dimensions. ;  ; virtual Int_t GetSize (Int_t index);  For the current entry, and the value 'index' for the main array, return the size of the secondary variable dimension of the 'array'. ;  ; virtual Int_t GetSumOfSizes ();  Total all the elements that are available for the current entry for the secondary variable dimension. ;  ; template<typename T > ; T GetTypedValue (TLeaf *leaf, Int_t instance=0);  ; virtual Double_t GetValue (TLeaf *leaf, Int_t instance=0);  ; template<typename T > ; T GetValueImpl (TLeaf *leaf, Int_t instance=0);  Return result of a leafobject method. ;  ; virtual Long64_t GetValueLong64 (TLeaf *leaf, Int_t instance=0);  ; virtual LongDouble_t GetValueLongDouble (TLeaf *leaf, Int_t instance=0);  ; virtual void * GetValuePointer (char *from, Int_t instance=0);  returns the address of the value pointed to by the TFormLeafInfo. ;  ; virtual void * GetValuePointer (TLeaf *leaf, Int_t instance=0);  returns the address of the value pointed to by the serie of TFormLeafInfo. ;  ; virtual Int_t GetVarDim ();  Return the index of the dimension which varies for each elements of an enclosing array (typically a TClonesArray) ;  ; virtual Int_t GetVirtVarDim ();  Return the virtual index (for this expression) of the dimension w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormLeafInfo.html:3737,variab,variable,3737,doc/master/classTFormLeafInfo.html,https://root.cern,https://root.cern/doc/master/classTFormLeafInfo.html,1,['variab'],['variable']
Modifiability,"alue (to insert the Cling provided parts); 4619 // back to the default.; 4620 seenCling = kTRUE;; 4621 return dynpath_full;; 4622 }; 4623 ; 4624 // Another thread might have updated this. Even-though this is executed at the; 4625 // start of the process, we might get there if the user is explicitly; 4626 // 'resetting' the value.; 4627 if (!reset && (seenCling || (initialized && gCling == nullptr))); 4628 return dynpath_full;; 4629 ; 4630 if (!initialized) {; 4631 // force one time initialization of gROOT before we start; 4632 // (otherwise it might be done as a side effect of gEnv->GetValue and; 4633 // TROOT's initialization will call this routine).; 4634 gROOT;; 4635 }; 4636 ; 4637 static TString dynpath_envpart;; 4638 static TString dynpath_syspart;; 4639 ; 4640 if (reset || !initialized) {; 4641 ; 4642 dynpath_envpart = gSystem->Getenv(""ROOT_LIBRARY_PATH"");; 4643 TString rdynpath = gEnv->GetValue(""Root.DynamicPath"", (char*)0);; 4644 rdynpath.ReplaceAll("": "", "":""); // in case DynamicPath was extended; 4645 if (rdynpath.IsNull()) {; 4646 rdynpath = "".:""; rdynpath += TROOT::GetLibDir();; 4647 }; 4648 TString ldpath;; 4649 #if defined (R__AIX); 4650 ldpath = gSystem->Getenv(""LIBPATH"");; 4651 #elif defined(R__MACOSX); 4652 ldpath = gSystem->Getenv(""DYLD_LIBRARY_PATH"");; 4653 if (!ldpath.IsNull()); 4654 ldpath += "":"";; 4655 ldpath += gSystem->Getenv(""LD_LIBRARY_PATH"");; 4656 if (!ldpath.IsNull()); 4657 ldpath += "":"";; 4658 ldpath += gSystem->Getenv(""DYLD_FALLBACK_LIBRARY_PATH"");; 4659 #else; 4660 ldpath = gSystem->Getenv(""LD_LIBRARY_PATH"");; 4661 #endif; 4662 if (!ldpath.IsNull()) {; 4663 if (!dynpath_envpart.IsNull()); 4664 dynpath_envpart += "":"";; 4665 dynpath_envpart += ldpath;; 4666 }; 4667 if (!rdynpath.IsNull()) {; 4668 if (!dynpath_envpart.IsNull()); 4669 dynpath_envpart += "":"";; 4670 dynpath_envpart += rdynpath;; 4671 }; 4672 if (!dynpath_envpart.Contains(TROOT::GetLibDir())) {; 4673 dynpath_envpart += "":""; dynpath_envpart += TROOT::GetLibDir();; 4674 }; 4675",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:149082,extend,extended,149082,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['extend'],['extended']
Modifiability,"alue is precisely 1. It is also possible to choose a different normalization for multi-dimensional p.d.f.s: eg. for a pdf f(x,y,z) one can construct a partial cdf c(x,y) that only when integrated itself over z results in a maximum value of 1. To construct such a cdf pass z as argument to the optional nset argument ; Definition at line 2468 of file RooAbsPdf.cxx. ◆ createCdf() [2/2]. RooAbsPdf::createCdf ; (; const RooArgSet & ; iset, . const RooCmdArg & ; arg1, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). Create an object that represents the integral of the function over one or more observables listed in iset. ; The actual integration calculation is only performed when the return object is evaluated. The name of the integral object is automatically constructed from the name of the input function, the variables it integrates and the range integrates over; The following named arguments are accepted . Type of CmdArg Effect on CDF . SupNormSet(const RooArgSet&) Observables over which should be normalized in addition to the integration observables . ScanNumCdf() Apply scanning technique if cdf integral involves numeric integration [ default ] . ScanAllCdf() Always apply scanning technique . ScanNoCdf() Never apply scanning technique . ScanParameters(Int_t nbins, Int_t intOrder) Parameters for scanning technique of making CDF: number of sampled bins and order of interpolation applied on numeric cdf . PyROOT; The RooAbsPdf::createCdf() function is pythonized with the command argument pythonization. The keywords must correspond to the CmdArgs of the function. . Definition at line 2490 of file RooAbsPdf.cxx. ◆ createExpectedEventsFunc(). std::unique_ptr< RooAbsReal > RooAbsPdf::createExpectedEventsFunc ; (; const RooArgSet * ; nset); const. virtual . Returns an object that represents the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:85350,variab,variables,85350,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['variab'],['variables']
Modifiability,"alue is used in two nodes of a graph, it doesn't need to be recomputed. If a node acquires a new value, it notifies its consumers (""clients"") that their cached values are dirty. See the functions in optimisationInterface for details. A node uses its isValueDirty() and isShapeDirty() functions to decide if a computation is necessary. Caching can be vetoed globally by setting a bit using setDirtyInhibit(). This will make computations slower, but all the nodes of the computation graph will be evaluated irrespective of whether their state is clean or dirty. Using setOperMode(), caching can also be enabled/disabled for single nodes. ; Definition at line 79 of file RooAbsArg.h. Classes; struct  ProxyListCache;  . Public Types; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsArg.html:3534,inherit,inherited,3534,doc/master/classRooAbsArg.html,https://root.cern,https://root.cern/doc/master/classRooAbsArg.html,1,['inherit'],['inherited']
Modifiability,"alue; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; RooCategoryProxyRooAbsHiddenReal::_stateProxy to hiding state category; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; RooRealProxy_value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooUnblindOffset(); Default constructor. RooUnblindOffset(const char* name, const char* title, const char* blin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooUnblindOffset.html:37298,config,configuration,37298,root/html602/RooUnblindOffset.html,https://root.cern,https://root.cern/root/html602/RooUnblindOffset.html,4,['config'],['configuration']
Modifiability,"alue; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; RooCategoryProxyRooAbsHiddenReal::_stateProxy to hiding state category; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; RooRealProxy_value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooUnblindUniform(); Default constructor. RooUnblindUniform(const char* name, const char* title, const char* bl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooUnblindUniform.html:36627,config,configuration,36627,root/html602/RooUnblindUniform.html,https://root.cern,https://root.cern/root/html602/RooUnblindUniform.html,4,['config'],['configuration']
Modifiability,"alue; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,int>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction1Binding_double_int_.html:36965,config,configuration,36965,root/html602/RooCFunction1Binding_double_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction1Binding_double_int_.html,4,['config'],['configuration']
Modifiability,"alue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. Int_t_arrSizeSize of the weight array; Bool_t*_binValid! Valid bins with current range definition; Double_t*_binv[_arrSize] Bin volume array ; TIterator*RooAbsData::_cacheIter! Iterator over cached variables; RooArgSetRooAbsData::_cachedVars! External variables cached with this data set; Int_t_curIndexCurrent index; Double_t_curSumW2Current sum of weights^2; Double_t_curVolumeVolume of bin enclosing current coordinate; Double_t_curWeightWeight associated with the current coordinate; Double_t_curWgtErrHiError on weight associated with the current coordinate; Double_t_curWgtErrLoError on weight associated with the current coordinate; TDirectory*RooDirItem::_dir! Associated directory; RooAbsDataStore*RooAbsData::_dstoreData storage implementation; Double_t*_errHi[_arrSize] High-side error on weight array; Double_t*_errLo[_arrSize] Low-side error on weight array; vector<Int_t>_idxMultMultiplier jump table for index calculation; TIterator*RooAbsData::_iterator! Iterator over dimension variables; list<const RooAbsBinning*>_lvbins! List of used binnings associated with lvalues; list<RooAbsLValue*>_lvvars! List of observables casted as RooAbsLValue; static Int_tRooPrintable::_nameLength; vector<Double_t>*_pbinv! Partial bin volume array; RooCacheManager<std::vector<Double_t> >_pbinvCacheMgr! Cache manager for arrays of partial bin volumes; TIterator*_realIter! Iterator over realVars; RooArgSet_realVarsReal dimensions of the dataset ; Double_t*_sumw2[_arrSize] Sum of weights^2; RooArgSetRooAbsData::_varsDimensions of this data set; Double_t*_wgt[_arrSize] Weight array; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDataHist(); Default constructor. RooDataHist(const char* name, const char* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDataHist.html:16700,variab,variables,16700,root/html526/RooDataHist.html,https://root.cern,https://root.cern/root/html526/RooDataHist.html,6,['variab'],['variables']
Modifiability,"alueOnly=*/true)) {; 1468 tmp.add(*arg,true);; 1469 }; 1470 }; 1471 }; 1472 ; 1473 // Add all nodes that depend on selected nodes by value; 1474 for (const auto arg : branchNodeSet) {; 1475 if (arg->dependsOn(*selNodes, nullptr, /*valueOnly=*/true)) {; 1476 tmp.add(*arg,true);; 1477 }; 1478 }; 1479 ; 1480 tmp.remove(*selNodes, true);; 1481 tmp.remove(*this);; 1482 selNodes->add(tmp);; 1483 coutI(Plotting) << ""RooAbsPdf::plotOn("" << GetName() << "") indirectly selected PDF components: "" << tmp << std::endl ;; 1484 ; 1485 // Set PDF selection bits according to selNodes; 1486 for (const auto arg : branchNodeSet) {; 1487 bool select = selNodes->find(arg->GetName()) != nullptr;; 1488 static_cast<RooAbsReal*>(arg)->selectComp(select);; 1489 }; 1490}; 1491 ; 1492 ; 1493 ; 1494////////////////////////////////////////////////////////////////////////////////; 1495/// Plot (project) PDF on specified frame. If a PDF is plotted in an empty frame, it; 1496/// will show a unit normalized curve in the frame variable, taken at the present value; 1497/// of other observables defined for this PDF.; 1498///; 1499/// \param[in] frame pointer to RooPlot; 1500/// \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10 Ordered arguments; 1501///; 1502/// If a PDF is plotted in a frame in which a dataset has already been plotted, it will; 1503/// show a projected curve integrated over all variables that were present in the shown; 1504/// dataset except for the one on the x-axis. The normalization of the curve will also; 1505/// be adjusted to the event count of the plotted dataset. An informational message; 1506/// will be printed for each projection step that is performed.; 1507///; 1508/// This function takes the following named arguments; 1509/// <table>; 1510/// <tr><th><th> Projection control; 1511/// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; 1512/// in set from the projection, i.e. by not integrating over thes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:61212,variab,variable,61212,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variable']
Modifiability,"alue_type _defIndex {std::numeric_limits<value_type>::min()};  ; RooRealProxy _inputVar;  ; std::vector< std::pair< double, value_type > > _threshList;  ;  Protected Attributes inherited from RooAbsCategory; value_type _currentIndex {std::numeric_limits<int>::min()};  Current category state. ;  ; std::vector< std::string > _insertionOrder;  Keeps track in which order state numbers have been inserted. Make sure this is updated in recomputeShape(). ;  ; std::map< value_type, std::unique_ptr< RooCatType, std::function< void(RooCatType *)> > > _legacyStates;  ! Map holding pointers to RooCatType instances. Only for legacy interface. Don't use if possible. ;  ; std::map< std::string, value_type > _stateNames;  Map state names to index numbers. Make sure state names are updated in recomputeShape(). ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooThresholdCategory.html:40401,inherit,inherited,40401,doc/master/classRooThresholdCategory.html,https://root.cern,https://root.cern/doc/master/classRooThresholdCategory.html,1,['inherit'],['inherited']
Modifiability,"alued object. More...;  ; class  RooConvCoefVar;  Auxiliary class that represents the coefficient of a RooAbsAnaConvPdf implementation as a separate RooAbsReal object to be able to interface these coefficient terms with the generic RooRealIntegral integration mechanism. More...;  ; class  RooConvGenContext;  Efficient implementation of the generator context specific for RooAbsAnaConvPdf objects. More...;  ; class  RooConvIntegrandBinding;  Implementation of RooAbsFunc that represent the integrand of a generic (numeric) convolution A (x) B so that it can be passed to a numeric integrator. More...;  ; class  RooCurve;  One-dimensional graphical representation of a real-valued function. More...;  ; class  RooDataHist;  Container class to hold N-dimensional binned data. More...;  ; class  RooDataHistSliceIter;  Iterates over all bins in a RooDataHist that occur in a slice defined by the bin coordinates of the input sliceSet. More...;  ; class  RooDataProjBinding;  adaptor that projects a real function via summation of states provided in a dataset. More...;  ; class  RooDataSet;  Container class to hold unbinned data. More...;  ; class  RooDerivative;  Represents the first, second, or third order derivative of any RooAbsReal as calculated (numerically) by the MathCore Richardson derivator class. More...;  ; class  RooDirItem;  Utility base class for RooFit objects that are to be attached to ROOT directories. More...;  ; class  RooDLLSignificanceMCSModule;  Add-on module to RooMCStudy that calculates the significance of a signal by comparing the likelihood of a fit fit with a given parameter floating with a fit with that given parameter fixed to a nominal value (usually zero). More...;  ; class  RooDouble;  Minimal implementation of a TObject holding a double value. More...;  ; class  RooEffGenContext;  Specialized generator context for p.d.fs represented by class RooEffProd, which are p.d.fs multiplied with an efficiency function. More...;  ; class  RooEfficiency;  A PDF ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Roofitcore.html:8424,adapt,adaptor,8424,doc/master/group__Roofitcore.html,https://root.cern,https://root.cern/doc/master/group__Roofitcore.html,1,['adapt'],['adaptor']
Modifiability,"alues from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; TF1*func; RooListProxyolist; RooListProxyplist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooTFnBinding.html:32685,config,configuration,32685,root/html532/RooTFnBinding.html,https://root.cern,https://root.cern/root/html532/RooTFnBinding.html,2,['config'],['configuration']
Modifiability,"alues from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,double>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. template <> void RooCFunction4Ref<Double_t,Double_t,Double_t,Double_t,Double_t> ShowMembers(TMemberInspector& insp, char* parent). » Last changed: Mon Dec 7 13:46:53 2009 » Last generated: 2009-12-07 13:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction4Binding_double_double_double_double_double_.html:34335,variab,variable,34335,root/html526/RooCFunction4Binding_double_double_double_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction4Binding_double_double_double_double_double_.html,1,['variab'],['variable']
Modifiability,"alues of residual norm obtained on all iterations to date; TQpLinSolverBase*fSys. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TQpSolverBase(); Deconstructor. void Start(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Implements a default starting-point heuristic. While interior-point theory; places fairly loose restrictions on the choice of starting point, the choice; of heuristic can significantly affect the robustness and efficiency of the; algorithm. void DefStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Default starting point. void SteveStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Starting point algoritm according to Stephen Wright. void DumbStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Alternative starting point heuristic: sets the ""complementary"" variables to a large; positive value (based on the norm of the problem data) and the remaining variables; to zero . Double_t FinalStepLength(TQpVar* iterate, TQpVar* step); Implements a version of Mehrotra starting point heuristic,; modified to ensure identical steps in the primal and dual variables. void DoMonitor(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level); Monitor progress / convergence aat each interior-point iteration. Int_t DoStatus(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Int_t i, Double_t mu, Int_t level); Tests for termination. Unless the user supplies a specific termination; routine, this method calls another method defaultStatus, which returns; a code indicating the current convergence status. Int_t DefStatus(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Int_t i, Double_t mu, Int_t level); Default status method. TQpSolverBase & oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQpSolverBase.html:8397,variab,variables,8397,root/html528/TQpSolverBase.html,https://root.cern,https://root.cern/root/html528/TQpSolverBase.html,12,['variab'],['variables']
Modifiability,"alues to set them back when needed; 2836 static TString brName = gEnv->GetValue(""Browser.Name"", """");; 2837 static TString trName = gEnv->GetValue(""TreeViewer.Name"", """");; 2838 ; 2839 fIsWebDisplayBatch = fBatch;; 2840 ; 2841 if (!strcmp(wd, ""off"")) {; 2842 fIsWebDisplay = kFALSE;; 2843 fWebDisplay = ""off"";; 2844 } else {; 2845 fIsWebDisplay = kTRUE;; 2846 ; 2847 // handle server mode; 2848 if (!strncmp(wd, ""server"", 6)) {; 2849 fWebDisplay = ""server"";; 2850 fIsWebDisplayBatch = kFALSE;; 2851 if (wd[6] == ':') {; 2852 if ((wd[7] >= '0') && (wd[7] <= '9')) {; 2853 auto port = TString(wd+7).Atoi();; 2854 if (port > 0); 2855 gEnv->SetValue(""WebGui.HttpPort"", port);; 2856 else; 2857 Error(""SetWebDisplay"", ""Wrong port parameter %s for server"", wd+7);; 2858 } else if (wd[7]) {; 2859 gEnv->SetValue(""WebGui.UnixSocket"", wd+7);; 2860 }; 2861 }; 2862 } else {; 2863 fWebDisplay = wd;; 2864 }; 2865 }; 2866 ; 2867 if (fIsWebDisplay) {; 2868 // restore browser classes configured at the moment when gROOT->SetWebDisplay() was called for the first time; 2869 // This is necessary when SetWebDisplay() called several times and therefore current settings may differ; 2870 gEnv->SetValue(""Canvas.Name"", ""TWebCanvas"");; 2871 gEnv->SetValue(""Browser.Name"", brName);; 2872 gEnv->SetValue(""TreeViewer.Name"", ""RTreeViewer"");; 2873 } else {; 2874 gEnv->SetValue(""Canvas.Name"", ""TRootCanvas"");; 2875 gEnv->SetValue(""Browser.Name"", ""TRootBrowser"");; 2876 gEnv->SetValue(""TreeViewer.Name"", trName);; 2877 }; 2878}; 2879 ; 2880////////////////////////////////////////////////////////////////////////////////; 2881/// Increase the indentation level for ls().; 2882 ; 2883Int_t TROOT::IncreaseDirLevel(); 2884{; 2885 return ++fgDirLevel;; 2886}; 2887 ; 2888////////////////////////////////////////////////////////////////////////////////; 2889/// Functions used by ls() to indent an object hierarchy.; 2890 ; 2891void TROOT::IndentLevel(); 2892{; 2893 for (int i = 0; i < fgDirLevel; i++) std::cout.put(' ');; 2894}; 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TROOT_8cxx_source.html:109312,config,configured,109312,doc/v632/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TROOT_8cxx_source.html,1,['config'],['configured']
Modifiability,"aluex=1, Int_t valuey=1)=0;  ; virtual void SetTickx (Int_t value=1)=0;  ; virtual void SetTicky (Int_t value=1)=0;  ; virtual void SetTitle (const char *title="""")=0;  ; virtual void SetToolTipText (const char *text, Long_t delayms=1000)=0;  ; virtual void SetVertical (Bool_t vert=kTRUE)=0;  ; virtual void SetView (TView *view=nullptr)=0;  ; virtual void SetViewer3D (TVirtualViewer3D *);  ; virtual void ShowGuidelines (TObject *object, const Int_t event, const char mode='i', const bool cling=true)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TVirtualPad. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnZoomed ();  ; virtual void Update ()=0;  ; virtual void UpdateAsync ()=0;  ; virtual Int_t UtoAbsPixel (Double_t u) const =0;  ; virtual Int_t UtoPixel (Double_t u) const =0;  ; virtual Int_t VtoAbsPixel (Double_t v) const =0;  ; virtual Int_t VtoPixel (Double_t v) const =0;  ; virtual TObject * WaitPrimitive (const char *pname="""", const char *emode="""")=0;  ; virtual Int_t XtoAbsPixel (Double_t x) const =0;  ; virtual Double_t XtoPad (Double_t x) const =0;  ; virtual Int_t XtoPixel (Double_t x) const =0;  ; virtual Int_t YtoAbsPixel (Double_t y) const =0;  ; virtual Double_t YtoPad (Double_t y) const =0;  ; virtual Int_t YtoPixel (Double_t y) const =0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPad.html:13035,inherit,inherited,13035,doc/master/classTVirtualPad.html,https://root.cern,https://root.cern/doc/master/classTVirtualPad.html,1,['inherit'],['inherited']
Modifiability,"alysis = 404,; 56 /// Use the new recommended general-purpose setting; it is a best trade-off between compression; 57 /// ratio/decompression speed; 58 kUseGeneralPurpose = 505,; 59 /// Use the setting that results in the smallest files; very slow read and write; 60 kUseSmallest = 207,; 61 };; 62 };; 63 struct ELevel { /// Note: this is only temporarily a struct and will become a enum class hence the name convention; 64 /// used.; 65 enum EValues {; 66 /// Some objects use this value to denote that the compression algorithm; 67 /// should be inherited from the parent object; 68 kInherit = -1,; 69 /// Compression level reserved for ""uncompressed state""; 70 kUncompressed = 0,; 71 /// Compression level reserved when we are not sure what to use (1 is for the fastest compression); 72 kUseMin = 1,; 73 /// Compression level reserved for ZLIB compression algorithm (fastest compression); 74 kDefaultZLIB = 1,; 75 /// Compression level reserved for LZ4 compression algorithm (trade-off between file ratio/decompression speed); 76 kDefaultLZ4 = 4,; 77 /// Compression level reserved for ZSTD compression algorithm (trade-off between file ratio/decompression; 78 /// speed); 79 kDefaultZSTD = 5,; 80 /// Compression level reserved for old ROOT compression algorithm; 81 kDefaultOld = 6,; 82 /// Compression level reserved for LZMA compression algorithm (slowest compression with smallest files); 83 kDefaultLZMA = 7; 84 };; 85 };; 86 struct EAlgorithm { /// Note: this is only temporarily a struct and will become a enum class hence the name; 87 /// convention used.; 88 enum EValues {; 89 /// Some objects use this value to denote that the compression algorithm; 90 /// should be inherited from the parent object (e.g., TBranch should get the algorithm from the TTree); 91 kInherit = -1,; 92 /// Use the global compression algorithm; 93 kUseGlobal = 0,; 94 /// Use ZLIB compression; 95 kZLIB,; 96 /// Use LZMA compression; 97 kLZMA,; 98 /// Use the old compression algorithm; 99 kOldCompressionAlgo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Compression_8h_source.html:3233,inherit,inherited,3233,doc/master/Compression_8h_source.html,https://root.cern,https://root.cern/doc/master/Compression_8h_source.html,1,['inherit'],['inherited']
Modifiability,"al~IMethod(); static TClass*Class(); virtual const TMVA::Ranking*CreateRanking(); virtual voidDeclareOptions(); virtual Double_tGetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); virtual const char*GetName() const; virtual Bool_tHasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual voidInit(); virtual TClass*IsA() const; virtual voidMakeClass(const TString& classFileName = TString("""")) const; virtual Bool_tMonitorBoost(TMVA::MethodBoost* boost); TMVA::IMethod&operator=(const TMVA::IMethod&); virtual voidPrintHelpMessage() const; virtual voidProcessOptions(); virtual voidReadWeightsFromStream(istream&); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTrain(); virtual voidWriteMonitoringHistosToFile() const. protected:. virtual voidGetHelpMessage() const; virtual voidMakeClassSpecific(ostream&, const TString&) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~IMethod(); default destructur. {}. const char * GetName() const; ------- virtual member functions to be implemented by each MVA method; the name of the method. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); calculate the MVA value - some methods may return a per-event error estimate (unless: *err = -1). void Train( void ); training method. void ReadWeightsFromStream(istream& ); read weights from output stream. void WriteMonitoringHistosToFile( void ); write method specific monitoring histograms to target file. void MakeClass(const TString& classFileName = TString("""")) const; make ROOT-independent C++ class for classifier response. const Ranking* CreateRanking(); create ranking. void PrintHelpMessage() const; print help message. Bool_t MonitorBoost(TMVA::MethodBoost* boost); perfrom extra actions during the boosting at different stages. void Init(). void DeclareOptions(). void ProcessOptions(). Bool_t HasAnaly",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__IMethod.html:1424,Inherit,Inheritance,1424,root/html532/TMVA__IMethod.html,https://root.cern,https://root.cern/root/html532/TMVA__IMethod.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"al ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttPad;  TAttPad ();  Constructor. ;  ; virtual ~TAttPad ();  Destructor. ;  ; virtual void Copy (TAttPad &attpad) const;  copy function ;  ; Float_t GetAfile () const;  ; Float_t GetAstat () const;  ; Float_t GetBottomMargin () const;  ; Int_t GetFrameBorderMode () const;  ; Width_t GetFrameBorderSize () const;  ; Color_t GetFrameFillColor () const;  ; Style_t GetFrameFillStyle () const;  ; Color_t GetFrameLineColor () const;  ; Style_t GetFrameLineStyle () const;  ; Width_t GetFrameLineWidth () const;  ; Float_t GetLeftMargin () const;  ; Float_t GetRightMargin () const;  ; Float_t GetTopMargin () const;  ; Float_t GetXfile () const;  ; Float_t GetXstat () const;  ; Float_t GetYfile () const;  ; Float_t GetYstat () const;  ; virtual void ResetAttPad (Option_t *option="""");  Reset pad attributes. ;  ; virtual void SetAfile (Float_t afile);  ; virtual void SetAstat (Float_t astat);  ; virtual void SetBottomMargin (Float_t bottommargin);  Set Pad bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:42095,inherit,inherited,42095,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,8,['inherit'],['inherited']
Modifiability,"am *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/roofit/roofitcore/src/RooChi2Var.h>. Inheritance diagram for RooChi2Var:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ FuncMode. enum RooChi2Var::FuncMode. EnumeratorFunction ; Pdf ; ExtendedPdf . Definition at line 21 of file RooChi2Var.h. Constructor & Destructor Documentation. ◆ RooChi2Var() [1/3]. RooChi2Var::RooChi2Var ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func, . RooDataHist & ; data, . bool ; extended, . RooDataHist::ErrorType ; etype, . RooAbsTestStatistic::Configuration const & ; cfg = RooAbsTestStatistic::Configuration{} . ). Definition at line 67 of file RooChi2Var.cxx. ◆ RooChi2Var() [2/3]. RooChi2Var::RooChi2Var ; (; const RooChi2Var & ; other, . const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:69502,inherit,inherited,69502,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['inherit'],['inherited']
Modifiability,"am *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNormalizedPdf.html:69319,inherit,inherited,69319,doc/master/classRooNormalizedPdf.html,https://root.cern,https://root.cern/doc/master/classRooNormalizedPdf.html,1,['inherit'],['inherited']
Modifiability,"am *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooProjectedPdf; RooObjCacheManager _cacheMgr;  ! The cache manager ;  ; RooSetProxy deps;  dependents of this p.d.f ;  ; RooSetProxy intobs;  observables that p.d.f is integrated over ;  ; RooRealProxy intpdf;  p.d.f that is integrated ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:70238,inherit,inherited,70238,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,1,['inherit'],['inherited']
Modifiability,"am a class object. void ToggleAutoExec(); Toggle pad auto execution of list of TExecs. void ToggleEventStatus(); Toggle event statusbar. void ToggleToolBar(); Toggle toolbar. void ToggleEditor(); Toggle editor. void ToggleToolTips(); Toggle tooltip display. Bool_t SupportAlpha(); Static function returning ""true"" if transparency is supported.; gPad must exist (otherwise this call has no sense), and; either it's a gl-pad or we are on OS X with --enable-cocoa. void Update(); Update canvas pad buffers. void DisconnectWidget(); Used by friend class TCanvasImp. Bool_t IsGrayscale(); Check whether this canvas is to be drawn in grayscale mode. void SetGrayscale(Bool_t set = kTRUE); Set whether this canvas should be painted in grayscale, and re-paint; it if necessary. void CreatePainter(); Probably, TPadPainter must be placed in a separate ROOT module -; ""padpainter"" (the same as ""histpainter""). But now, it's directly in a; gpad dir, so, in case of default painter, no *.so should be loaded,; no need in plugin managers.; May change in future. TVirtualPadPainter * GetCanvasPainter(); Access and (probably) creation of pad painter. void DeleteCanvasPainter(); assert on IsBatch() == false?. TCanvas(const TCanvas& canvas). TCanvas & operator=(const TCanvas& rhs). void Delete(Option_t* = """"); { MayNotUse(""Delete()""); }. void ForceUpdate(); { fCanvasImp->ForceUpdate(); }. const char * GetDISPLAY() const; {return fDISPLAY.Data();}. TContextMenu * GetContextMenu() const; {return fContextMenu;}. Int_t GetDoubleBuffer() const; {return fDoubleBuffer;}. Int_t GetEvent() const; { return fEvent; }. Int_t GetEventX() const; { return fEventX; }. Int_t GetEventY() const; { return fEventY; }. Color_t GetHighLightColor() const; { return fHighLightColor; }. TVirtualPad * GetPadSave() const; { return fPadSave; }. void ClearPadSave(); { fPadSave = 0; }. TObject * GetSelected() const; {return fSelected;}. TObject * GetClickSelected() const; {return fClickSelected;}. Int_t GetSelectedX() const; {retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TCanvas.html:46222,plugin,plugin,46222,root/html534/TCanvas.html,https://root.cern,https://root.cern/root/html534/TCanvas.html,2,['plugin'],['plugin']
Modifiability,"am axis binning for all axis. void SetAxisHistogramHeight(Double_t h = 0.5); Set the same histogram axis height for all axis. void SetGlobalLogScale(Bool_t ); All axes in log scale. void SetGlobalScale(Bool_t gl); Constraint all axes to the same scale. void SetAxisHistogramLineWidth(Int_t lw = 2); Set the same histogram axis line width for all axis. void SetCandleChart(Bool_t can); Set a candle chart display. void SetCurrentFirst(Long64_t ); Set the first entry to be dispayed. void SetCurrentN(Long64_t ); Set the number of entry to be displayed. TParallelCoordSelect* SetCurrentSelection(const char* title); Set the selection beeing edited. void SetCurrentSelection(TParallelCoordSelect* sel); Set the selection beeing edited. void SetDotsSpacing(Int_t s = 0); Set dots spacing. Modify the line style 11.; If the canvas support transparency dot spacing is ignored. void SetEntryList(TParallelCoord* para, TEntryList* enlist); Set the entry lists of ""para"". void SetGlobalMax(Double_t max); Force all variables to adopt the same max. void SetGlobalMin(Double_t min); Force all variables to adopt the same min. void SetLiveRangesUpdate(Bool_t ); If true, the pad is updated while the motion of a dragged range. void SetVertDisplay(Bool_t vert = kTRUE); Set the vertical or horizontal display. void UnzoomAll(); Unzoom all variables. TParallelCoord(). Bool_t GetCandleChart(); {return TestBit(kCandleChart);}. Long64_t GetCurrentFirst(); {return fCurrentFirst;}. Long64_t GetCurrentN(); {return fCurrentN;}. Bool_t GetCurveDisplay() const; {return TestBit(kCurveDisplay);}. Int_t GetDotsSpacing() const; {return fDotsSpacing;}. Bool_t GetGlobalScale(); {return TestBit(kGlobalScale);}. Bool_t GetGlobalLogScale(); {return TestBit(kGlobalLogScale);}. Color_t GetLineColor(); {return fLineColor;}. Width_t GetLineWidth(); {return fLineWidth;}. UInt_t GetNvar(); {return fNvar;}. Long64_t GetNentries(); {return fNentries;}. TList * GetSelectList(); {return fSelectList;}. TList * GetVarList(); {retu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TParallelCoord.html:16930,variab,variables,16930,root/html534/TParallelCoord.html,https://root.cern,https://root.cern/root/html534/TParallelCoord.html,6,['variab'],['variables']
Modifiability,"am bin height for points lying outside the TGraphDelaunay convex hull ie: the bins in the margin. ;  ; void SetMaximum (Double_t maximum=-1111);  Set maximum. ;  ; void SetMaxIter (Int_t n=100000);  ; void SetMinimum (Double_t minimum=-1111);  Set minimum. ;  ; void SetName (const char *name) override;  Changes the name of this 2D graph. ;  ; void SetNameTitle (const char *name, const char *title) override;  Change the name and title of this 2D graph. ;  ; void SetNpx (Int_t npx=40);  Sets the number of bins along X used to draw the function. ;  ; void SetNpy (Int_t npx=40);  Sets the number of bins along Y used to draw the function. ;  ; virtual void SetPoint (Int_t point, Double_t x, Double_t y, Double_t z);  Sets point number n. ;  ; void SetTitle (const char *title="""") override;  Sets the 2D graph title. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D.html:18263,inherit,inherited,18263,doc/master/classTGraph2D.html,https://root.cern,https://root.cern/doc/master/classTGraph2D.html,1,['inherit'],['inherited']
Modifiability,"am bin width (for normalization); Double_t_normNumEvtsNumber of events in histogram (for normalization); const RooPlotable*_normObj! Pointer to normalization object ;; RooArgSet*_normVarsVariables that PDF plots should be normalized over; Double_t_padFactorScale our y-axis to _padFactor of our maximum contents.; RooAbsRealLValue*_plotVarCloneA clone of the variable we are plotting.; RooArgSet*_plotVarSetA list owning the cloned tree nodes of the plotVarClone; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooPlot(); Default constructor; coverity[UNINIT_CTOR]. RooPlot(Double_t xmin, Double_t xmax); Constructor of RooPlot with range [xmin,xmax]. RooPlot(Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax); Construct of a two-dimensioanl RooPlot with ranges [xmin,xmax] x [ymin,ymax]. RooPlot(const RooAbsRealLValue& var1, const RooAbsRealLValue& var2); Construct a two-dimensional RooPlot with ranges and properties taken; from variables var1 and var2. RooPlot(const RooAbsRealLValue& var1, const RooAbsRealLValue& var2, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax); Construct a two-dimensional RooPlot with ranges and properties taken; from variables var1 and var2 but with an overriding range definition; of [xmin,xmax] x [ymin,ymax]. RooPlot(const char* name, const char* title, const RooAbsRealLValue& var, Double_t xmin, Double_t xmax, Int_t nBins); Create an 1-dimensional with all properties taken from 'var', but; with an explicit range [xmin,xmax] and a default binning of 'nbins'. RooPlot(const RooAbsRealLValue& var, Double_t xmin, Double_t xmax, Int_t nBins); Create an 1-dimensional with all properties taken from 'var', but; with an explicit range [xmin,xmax] and a default binning of 'nbins'. RooPlot* emptyClone(const char* name); Return empty clone of current RooPlot. void initialize(); Perform initialization that is common to all con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooPlot.html:13244,variab,variables,13244,root/html528/RooPlot.html,https://root.cern,https://root.cern/root/html528/RooPlot.html,4,['variab'],['variables']
Modifiability,"am by specifying the 'prof' or ’profs' option. The prof option is automatically selected when the output is redirected into a TProfile. For example y:x>>pf where pfis an existing TProfile histogram.; 12.20.11.3 Tree Information; Once we have drawn a tree, we can get information about the tree. These are the methods used to get information from a drawn tree TTree:. GetSelectedRows: Returns the number of entries accepted by the selection expression. In case where no selection was specified, it returns the number of entries processed.; GetV1: Returns a pointer to the float array of the first variable.; GetV2: Returns a pointer to the float array of second variable; GetV3: Returns a pointer to the float array of third variable.; GetW: Returns a pointer to the float array of Weights where the weight equals the result of the selection expression. To read the drawn values of fNtrack into an array, and loop through the entries follow the lines below. First, open the file and draw the fNtrack variable:; root[] TFile *f = new TFile(""Event.root""); root[] T->Draw(""fNtrack""); Then declare a pointer to a float and use the GetV1 method to retrieve the first dimension of the tree. In this example we only drew one dimension (fNtrack) if we had drawn two, we could use GetV2 to get the second one.; root[] Float_t *a; root[] a = T->GetV1(); Loop through the first 10 entries and print the values of fNtrack:; root[] for (int i = 0; i < 10; i++); root[] cout << a[i] << "" "" << endl // need an endl to see the values; 594 597 606 595 604 610 604 602 603 596; By default, TTree::Draw creates these arrays with fEstimate words where fEstimate can be set via TTree::SetEstimate. If you have more entries than fEstimate only the first fEstimate selected entries will be stored in the arrays. The arrays are used as buffers. When fEstimate entries have been processed, ROOT scans the buffers to compute the minimum and maximum of each coordinate and creates the corresponding histograms. You can use these ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:632194,variab,variable,632194,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"am is a TH2PolyBin object. TH2PolyBin is a very simple class containing the vertices (stored as TGraphs or TMultiGraphs ) and contents of the polygonal bin as well as several related functions.; Essentially, a TH2Poly is a TList of TH2PolyBin objects with methods to manipulate them.; Bins are defined using one of the AddBin() methods. The bin definition should be done before filling.; The histogram can be filled with Fill(Double_t x, Double_t y, Double_t w) . w is the weight. If no weight is specified, it is assumed to be 1.; Not all histogram's area need to be binned. Filling an area without bins, will falls into the overflows. Adding a bin is not retroactive; it doesn't affect previous fillings. A Fill() call, that was previously ignored due to the lack of a bin at the specified location, is not reconsidered when that location is binned later.; If there are two overlapping bins, the first one in the list will be incremented by Fill().; The histogram may automatically extends its limits if a bin outside the histogram limits is added. This is done when the default constructor (with no arguments) is used. It generates a histogram with no limits along the X and Y axis. Adding bins to it will extend it up to a proper size.; TH2Poly implements a partitioning algorithm to speed up bins' filling (see the ""Partitioning Algorithm"" section for details). The partitioning algorithm divides the histogram into regions called cells. The bins that each cell intersects are recorded in an array of TLists. When a coordinate in the histogram is to be filled; the method (quickly) finds which cell the coordinate belongs. It then only loops over the bins intersecting that cell to find the bin the input coordinate corresponds to. The partitioning of the histogram is updated continuously as each bin is added. The default number of cells on each axis is 25. This number could be set to another value in the constructor or adjusted later by calling the ChangePartition(Int_t, Int_t) method. The",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Poly.html:1510,extend,extends,1510,doc/master/classTH2Poly.html,https://root.cern,https://root.cern/doc/master/classTH2Poly.html,1,['extend'],['extends']
Modifiability,"am is reset and ALWAYS refilled independently if the histogram was filled before. This is needed when drawing the histogram; action = 1 histogram is filled and buffer is deleted The buffer is automatically deleted when filling the histogram and the entries is larger than the buffer size . Reimplemented in TH2, TH3, TProfile, TProfile2D, and TProfile3D.; Definition at line 1414 of file TH1.cxx. ◆ BufferFill(). Int_t TH1::BufferFill ; (; Double_t ; x, . Double_t ; w . ). protectedvirtual . accumulate arguments in buffer. ; When buffer is full, empty the buffer. fBuffer[0] = number of entries in buffer; fBuffer[1] = w of first entry; fBuffer[2] = x of first entry . Reimplemented in TH2, TH3, TProfile, TProfile2D, and TProfile3D.; Definition at line 1506 of file TH1.cxx. ◆ Build(). void TH1::Build ; (; ). private . Creates histogram basic data structure. ; Definition at line 771 of file TH1.cxx. ◆ CanExtendAllAxes(). Bool_t TH1::CanExtendAllAxes ; (; ); const. virtual . Returns true if all axes are extendable. ; Definition at line 6636 of file TH1.cxx. ◆ CheckAxisLimits(). bool TH1::CheckAxisLimits ; (; const TAxis * ; a1, . const TAxis * ; a2 . ). staticprotected . Check that the axis limits of the histograms are the same. ; If a first and last bin is passed the axis is compared between the given range ; Definition at line 1597 of file TH1.cxx. ◆ CheckBinLabels(). bool TH1::CheckBinLabels ; (; const TAxis * ; a1, . const TAxis * ; a2 . ). staticprotected . Check that axis have same labels. ; Definition at line 1568 of file TH1.cxx. ◆ CheckBinLimits(). bool TH1::CheckBinLimits ; (; const TAxis * ; a1, . const TAxis * ; a2 . ). staticprotected . Check bin limits. ; Definition at line 1541 of file TH1.cxx. ◆ CheckConsistency(). int TH1::CheckConsistency ; (; const TH1 * ; h1, . const TH1 * ; h2 . ). staticprotected . Check histogram compatibility. ; Definition at line 1677 of file TH1.cxx. ◆ CheckConsistentSubAxes(). bool TH1::CheckConsistentSubAxes ; (; const TAxis * ; a1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:84113,extend,extendable,84113,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['extend'],['extendable']
Modifiability,"am out. ;  ; virtual void SetAxisColor (Int_t color=1, Float_t alpha=1);  ; void SetHistogram (TH1 *h);  ; virtual void SetLabelColor (Int_t color=1);  ; virtual void SetLabelFont (Int_t font=42);  ; virtual void SetLabelOffset (Float_t offset=0.005);  ; virtual void SetLabelSize (Float_t size=0.035);  ; void SetLineWidth (Width_t width) override;  Set the line width. ;  ; virtual void SetMaxDigits (Float_t maxdigits=5);  ; virtual void SetNdivisions (Int_t ndiv=10);  ; virtual void SetTickLength (Float_t length=0.03);  ; virtual void SetTitle (const char *title="""");  ; virtual void SetTitleColor (Int_t color=1);  ; virtual void SetTitleFont (Int_t font=42);  ; virtual void SetTitleOffset (Float_t offset=1);  ; virtual void SetTitleSize (Float_t size=0.035);  ; void Streamer (TBuffer &) override;  Stream an object of class TBox. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnZoom ();  Unzoom the palette. ;  ;  Public Member Functions inherited from TPave;  TPave ();  Pave default constructor. ;  ;  TPave (const TPave &pave);  Pave copy constructor. ;  ;  TPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Pave normal constructor. ;  ;  ~TPave () override;  Pave default destructor. ;  ; virtual void ConvertNDCtoPad ();  Convert pave coordinates from NDC to Pad coordinates. ;  ; void Copy (TObject &pave) const override;  Copy this pave to pave. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a pave. ;  ; void Draw (Option_t *option="""") override;  Draw this pave with its current attributes. ;  ; virtual TPave * DrawPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with new coordinates. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Int_t GetBorderSize () const;  ; Double_t GetCornerRadius () con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaletteAxis.html:7348,inherit,inherited,7348,doc/master/classTPaletteAxis.html,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html,1,['inherit'],['inherited']
Modifiability,"am& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual Int_tDataInterface(Double_t*, Double_t*, Int_t*, Int_t*, Int_t*, Int_t*, Double_t*, Int_t*, Int_t*); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); Float_tTMVA::MethodBase::GetTWeight(const TMVA::Event* ev) const; const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidMakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t *const err, Double_t *const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. voidTMVA::MethodCFMlpANN_Utils::Arret(const char* mot); voidTMVA::MethodCFMlpANN_Util",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCFMlpANN.html:14504,Config,Configurable,14504,root/html532/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCFMlpANN.html,6,['Config'],['Configurable']
Modifiability,"am& os) const; recursively print the node and its daughters (--> print the 'tree'). Bool_t ReadDataRecord(istream& is, UInt_t tmva_Version_Code = 262656); Read the data block. void ClearNodeAndAllDaughters(); clear the nodes (their S/N, Nevents etc), just keep the structure of the tree. void ResetValidationData(); temporary stored node values (number of events, etc.) that originate; not from the training but from the validation data (used in pruning). void PrintPrune(ostream& os) const; printout of the node (can be read in with ReadDataRecord). void PrintRecPrune(ostream& os) const; recursive printout of the node and its daughters. void SetCC(Double_t cc). Float_t GetSampleMin(UInt_t ivar) const; return the minimum of variable ivar from the training sample; that pass/end up in this node. Float_t GetSampleMax(UInt_t ivar) const; return the maximum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMin(UInt_t ivar, Float_t xmin); set the minimum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMax(UInt_t ivar, Float_t xmax); set the maximum of variable ivar from the training sample; that pass/end up in this node. void ReadAttributes(void* node, UInt_t tmva_Version_Code = 262656). void AddAttributesToNode(void* node) const; add attribute to xml. void SetFisherCoeff(Int_t ivar, Double_t coeff); set fisher coefficients. void AddContentToNode(stringstream& s) const; adding attributes to tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). void ReadContent(stringstream& s); reading attributes from tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). TMVA::MsgLogger& Log(). Node* CreateNode() const; { return new DecisionTreeNode(); }. void SetNFisherCoeff(Int_t nvars); {fFisherCoeff.resize(nvars);}. U",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__DecisionTreeNode.html:8311,variab,variable,8311,root/html602/TMVA__DecisionTreeNode.html,https://root.cern,https://root.cern/root/html602/TMVA__DecisionTreeNode.html,2,['variab'],['variable']
Modifiability,"am& os) const; recursively print the node and its daughters (--> print the 'tree'). Bool_t ReadDataRecord(istream& is, UInt_t tmva_Version_Code = 262657); Read the data block. void ClearNodeAndAllDaughters(); clear the nodes (their S/N, Nevents etc), just keep the structure of the tree. void ResetValidationData(); temporary stored node values (number of events, etc.) that originate; not from the training but from the validation data (used in pruning). void PrintPrune(ostream& os) const; printout of the node (can be read in with ReadDataRecord). void PrintRecPrune(ostream& os) const; recursive printout of the node and its daughters. void SetCC(Double_t cc). Float_t GetSampleMin(UInt_t ivar) const; return the minimum of variable ivar from the training sample; that pass/end up in this node. Float_t GetSampleMax(UInt_t ivar) const; return the maximum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMin(UInt_t ivar, Float_t xmin); set the minimum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMax(UInt_t ivar, Float_t xmax); set the maximum of variable ivar from the training sample; that pass/end up in this node. void ReadAttributes(void* node, UInt_t tmva_Version_Code = 262657). void AddAttributesToNode(void* node) const; add attribute to xml. void SetFisherCoeff(Int_t ivar, Double_t coeff); set fisher coefficients. void AddContentToNode(stringstream& s) const; adding attributes to tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). void ReadContent(stringstream& s); reading attributes from tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). TMVA::MsgLogger& Log(). Node* CreateNode() const; { return new DecisionTreeNode(); }. void SetNFisherCoeff(Int_t nvars); {fFisherCoeff.resize(nvars);}. U",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__DecisionTreeNode.html:8319,variab,variable,8319,root/html604/TMVA__DecisionTreeNode.html,https://root.cern,https://root.cern/root/html604/TMVA__DecisionTreeNode.html,2,['variab'],['variable']
Modifiability,"am& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tfEnabledpackage has been enabled; Int_tfIdpackage id; TStringfNamepackage name; TStringfPathNamefull path name of package; Bool_tfUploadedpackage has been uploaded. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const char * GetName() const; { return fQueryName; }. » Author: Marek Biskup, Jakub Madejczyk, Bertrand Bellenot 10/08/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPackageDescription.html:5441,Inherit,Inheritance,5441,root/html534/TPackageDescription.html,https://root.cern,https://root.cern/root/html534/TPackageDescription.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"am); voidEmit(const char* signal, Float_t param); TStringGetFormula(); TStringGetFormulaString(); TStringGetLatexFormula(); TList*GetListOfSignals() const; voidHighPriority(const char* signal_name, const char* slot_name = 0); voidLowPriority(const char* signal_name, const char* slot_name = 0); voidMessage(const char* msg); TMVA::StatDialogMVAEffs&operator=(const TMVA::StatDialogMVAEffs&); voidPrintResults(const TMVA::MethodInfo* info); voidRaiseDialog(); voidReadHistograms(TFile* file); voidRedraw()SIGNAL ; voidSetFormula(const TString& f); voidSetNBackground()SIGNAL ; voidSetNSignal()SIGNAL ; TMVA::StatDialogMVAEffsStatDialogMVAEffs(const TMVA::StatDialogMVAEffs&); TMVA::StatDialogMVAEffsStatDialogMVAEffs(const TGWindow* p, Float_t ns, Float_t nb); voidUpdateSignificanceHists(). private:. voidUpdateCanvases(). Data Members; private:. TGNumberEntry*fBkgInput; TGHorizontalFrame*fButtons; TGTextButton*fCloseButton; TGTextButton*fDrawButton; TStringfFormula; TList*fInfoList; TGMainFrame*fMain; Float_tfNBackground; Float_tfNSignal; TQObjSenderfQObject; TGNumberEntry*fSigInput; Int_tmaxLenTitle. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetNSignal(). void SetNBackground(). TString GetFormula(). TString GetLatexFormula(). void Redraw(). void Close(). ~StatDialogMVAEffs(). StatDialogMVAEffs(const TGWindow* p, Float_t ns, Float_t nb). void UpdateCanvases(). void UpdateSignificanceHists(). void ReadHistograms(TFile* file). void DrawHistograms(); counter variables. void PrintResults(const TMVA::MethodInfo* info). StatDialogMVAEffs(const TGWindow* p, Float_t ns, Float_t nb). void SetFormula(const TString& f); { fFormula = f; }. TString GetFormulaString(); { return fFormula; }. void RaiseDialog(). » Last changed: Tue Sep 8 17:46:05 2015 » Last generated: 2015-09-08 17:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__StatDialogMVAEffs.html:2815,variab,variables,2815,root/html604/TMVA__StatDialogMVAEffs.html,https://root.cern,https://root.cern/root/html604/TMVA__StatDialogMVAEffs.html,4,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variables']"
Modifiability,"am::CalcXminXmax ; (; ). protected . Determine foam range [fXmin, fXmax] for all dimensions, such that a fraction of 'fFrac' events lie outside the foam. ; Definition at line 322 of file MethodPDEFoam.cxx. ◆ Class(). static TClass * TMVA::MethodPDEFoam::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::MethodPDEFoam::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::MethodPDEFoam::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 212 of file MethodPDEFoam.h. ◆ CreatePDEFoamKernel(). TMVA::PDEFoamKernelBase * TMVA::MethodPDEFoam::CreatePDEFoamKernel ; (; ). protected . create a pdefoam kernel estimator, depending on the current value of fKernel ; Definition at line 1102 of file MethodPDEFoam.cxx. ◆ CreateRanking(). const TMVA::Ranking * TMVA::MethodPDEFoam::CreateRanking ; (; ). virtual . Compute ranking of input variables from the number of cuts made in each PDEFoam dimension. ; The PDEFoam dimension (the variable) for which the most cuts were done is ranked highest. ; Implements TMVA::MethodBase.; Definition at line 823 of file MethodPDEFoam.cxx. ◆ DeclareCompatibilityOptions(). void TMVA::MethodPDEFoam::DeclareCompatibilityOptions ; (; ). privatevirtual . options that are used ONLY for the READER to ensure backward compatibility ; Reimplemented from TMVA::MethodBase.; Definition at line 243 of file MethodPDEFoam.cxx. ◆ DeclareOptions(). void TMVA::MethodPDEFoam::DeclareOptions ; (; ). privatevirtual . Declare MethodPDEFoam options. ; Implements TMVA::MethodBase.; Definition at line 208 of file MethodPDEFoam.cxx. ◆ DeclFileName(). static const char * TMVA::MethodPDEFoam::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 212 of file MethodPDEFoam.h. ◆ DeleteFoams(). void TMVA::MethodPDEFoam::DeleteFoams ; (; ). protected . Deletes all trained foams. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html:35777,variab,variables,35777,doc/master/classTMVA_1_1MethodPDEFoam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html,1,['variab'],['variables']
Modifiability,"am;  ! Pointer to histogram used for the projection ;  ; TList * fInput;  ! input list to the selector ;  ; const char * fScanFileName;  Name of the file where Scan is redirected. ;  ; bool fScanRedirect;  Switch to redirect TTree::Scan output to a file. ;  ; Long64_t fSelectedRows;  Number of selected entries. ;  ; TSelectorDraw * fSelector;  ! Pointer to current selector ;  ; TClass * fSelectorClass;  ! Pointer to the actual class of the TSelectorFromFile ;  ; TSelector * fSelectorFromFile;  ! Pointer to a user defined selector created by this TTreePlayer object ;  ; TSelector * fSelectorUpdate;  ! Set to the selector address when it's entry list needs to be updated by the UpdateFormulaLeaves function ;  ; TTree * fTree;  ! Pointer to current Tree ;  . Private Member Functions;  TTreePlayer (const TTreePlayer &)=delete;  ; TTreePlayer & operator= (const TTreePlayer &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TVirtualTreePlayer; static constexpr Long64_t kMaxEntries = std::numeric_limits<Long64_t>::max();  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTreePlayer.h>. Inheritance diagram for TTreePlayer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTreePl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePlayer.html:16216,inherit,inherited,16216,doc/master/classTTreePlayer.html,https://root.cern,https://root.cern/doc/master/classTTreePlayer.html,1,['inherit'],['inherited']
Modifiability,"amBoost""]); factory->BookMethod( dataloader, TMVA::Types::kPDEFoam, ""PDEFoamBoost"",; ""!H:!V:Boost_Num=30:Boost_Transform=linear:SigBgSeparate=F:MaxDepth=4:UseYesNoCell=T:DTLogic=MisClassificationError:FillFoamWithOrigWeights=F:TailCut=0:nActiveCells=500:nBin=20:Nmin=400:Kernel=None:Compress=T"" );; ; // K-Nearest Neighbour classifier (KNN); if (Use[""KNN""]); factory->BookMethod( dataloader, TMVA::Types::kKNN, ""KNN"",; ""H:nkNN=20:ScaleFrac=0.8:SigmaFact=1.0:Kernel=Gaus:UseKernel=F:UseWeight=T:!Trim"" );; ; // H-Matrix (chi2-squared) method; if (Use[""HMatrix""]); factory->BookMethod( dataloader, TMVA::Types::kHMatrix, ""HMatrix"", ""!H:!V:VarTransform=None"" );; ; // Linear discriminant (same as Fisher discriminant); if (Use[""LD""]); factory->BookMethod( dataloader, TMVA::Types::kLD, ""LD"", ""H:!V:VarTransform=None:CreateMVAPdfs:PDFInterpolMVAPdf=Spline2:NbinsMVAPdf=50:NsmoothMVAPdf=10"" );; ; // Fisher discriminant (same as LD); if (Use[""Fisher""]); factory->BookMethod( dataloader, TMVA::Types::kFisher, ""Fisher"", ""H:!V:Fisher:VarTransform=None:CreateMVAPdfs:PDFInterpolMVAPdf=Spline2:NbinsMVAPdf=50:NsmoothMVAPdf=10"" );; ; // Fisher with Gauss-transformed input variables; if (Use[""FisherG""]); factory->BookMethod( dataloader, TMVA::Types::kFisher, ""FisherG"", ""H:!V:VarTransform=Gauss"" );; ; // Composite classifier: ensemble (tree) of boosted Fisher classifiers; if (Use[""BoostedFisher""]); factory->BookMethod( dataloader, TMVA::Types::kFisher, ""BoostedFisher"",; ""H:!V:Boost_Num=20:Boost_Transform=log:Boost_Type=AdaBoost:Boost_AdaBoostBeta=0.2:!Boost_DetailedMonitoring"" );; ; // Function discrimination analysis (FDA) -- test of various fitters - the recommended one is Minuit (or GA or SA); if (Use[""FDA_MC""]); factory->BookMethod( dataloader, TMVA::Types::kFDA, ""FDA_MC"",; ""H:!V:Formula=(0)+(1)*x0+(2)*x1+(3)*x2+(4)*x3:ParRanges=(-1,1);(-10,10);(-10,10);(-10,10);(-10,10):FitMethod=MC:SampleSize=100000:Sigma=0.1"" );; ; if (Use[""FDA_GA""]) // can also use Simulated Annealing (SA) algorithm (see ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:96800,variab,variables,96800,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variables']
Modifiability,"amCell*GetDau0() const; TFoamCell*GetDau1() const; virtual Option_t*TObject::GetDrawOption() const; Double_tGetDriv() const; static Long_tTObject::GetDtorOnly(); voidGetHcub(TFoamVect&, TFoamVect&) const; voidGetHSize(TFoamVect&) const; virtual const char*TObject::GetIconName() const; Double_tGetIntg() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFoamCell*GetPare() const; Double_tGetPrim() const; Int_tGetSerial() const; Int_tGetStat() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetVolume() const; Double_tGetXdiv() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFoamCell&operator=(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFoamCell.html:3012,Inherit,InheritsFrom,3012,root/html532/TFoamCell.html,https://root.cern,https://root.cern/root/html532/TFoamCell.html,2,['Inherit'],['InheritsFrom']
Modifiability,"amCell*GetDau0() const; TFoamCell*GetDau1() const; virtual Option_t*TObject::GetDrawOption() const; Double_tGetDriv() const; static Long_tTObject::GetDtorOnly(); voidGetHcub(TFoamVect&, TFoamVect&) const; voidGetHSize(TFoamVect&) const; virtual const char*TObject::GetIconName() const; Double_tGetIntg() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFoamCell*GetPare() const; Double_tGetPrim() const; Int_tGetSerial() const; Int_tGetStat() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetVolume() const; Double_tGetXdiv() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFoamCell&operator=(const TFoamCell&); virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFoamCell.html:2958,Inherit,InheritsFrom,2958,root/html602/TFoamCell.html,https://root.cern,https://root.cern/root/html602/TFoamCell.html,2,['Inherit'],['InheritsFrom']
Modifiability,amDecisionTree. TMVA::PDEFoamDecisionTreeDensity. TMVA::PDEFoamDensityBase←. TMVA::PDEFoamDecisionTreeDensity. TMVA::PDEFoamDiscriminantDensity. TMVA::PDEFoamEventDensity. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamDiscriminant←. TMVA::PDEFoamDecisionTree. TMVA::PDEFoamDiscriminantDensity. TMVA::PDEFoamEvent←. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamEventDensity. TMVA::PDEFoamKernelBase←. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamTarget. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamVect. TMVA::PDF. TMVA::Reader. TMVA::RootFinder. TMVA::SdivSqrtSplusB. TMVA::SimulatedAnnealingFitter. TMVA::TActivationIdentity. TMVA::TActivationRadial. TMVA::TActivationSigmoid. TMVA::TActivationTanh. TMVA::TNeuron. TMVA::TNeuronInputAbs. TMVA::TNeuronInputSqSum. TMVA::TNeuronInputSum. TMVA::TSpline1. TMVA::TSpline2. TMVA::TSynapse. TMVA::Timer. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMVA::VariableTransformBase←. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMacro←. TEveMacro. TMap. TMapFile. TMapIter. TMarker. TMarker3DBox. TMaterial←. TMixture. TMathText. TMatrixT<double>. TMatrixT<float>. TMatrixTBase<double>←. TMatrixT<double>. TMatrixTSparse<double>. TMatrixTSym<double>. TMatrixTBase<float>←. TMatrixT<float>. TMatrixTSparse<float>. TMatrixTSym<float>. TMatrixTColumn<double>. TMatrixTColumn<float>. TMatrixTDiag<double>. TMatrixTDiag<float>. TMatrixTFlat<double>. TMatrixTFlat<float>. TMatrixTLazy<double>←. THaarMatrixT<double>. THilbertMatrixT<double>. TMatrixTLazy<float>←. THaarMatrixT<float>. THilbertMatrixT<float>. TMatrixTRow<double>. TMatrixTR,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassHierarchy.html:77091,Variab,VariableDecorrTransform,77091,root/html534/ClassHierarchy.html,https://root.cern,https://root.cern/root/html534/ClassHierarchy.html,2,['Variab'],['VariableDecorrTransform']
Modifiability,"amDefinition Tools.cxx:1058; TMVA::Tools::GetYTitleWithUnitTString GetYTitleWithUnit(const TH1 &h, const TString &unit, Bool_t normalised)histogramming utilityDefinition Tools.cxx:1048; TMVA::Tools::GetSeparationDouble_t GetSeparation(TH1 *S, TH1 *B) constcompute ""separation"" defined asDefinition Tools.cxx:121; TMVA::Tools::Instancestatic Tools & Instance()Definition Tools.cxx:71; TMVA::Tools::GetSQRootMatrixTMatrixD * GetSQRootMatrix(TMatrixDSym *symMat)square-root of symmetric matrix of course the resulting sqrtMat is also symmetric,...Definition Tools.cxx:271; TMVA::Tools::MVADiffstd::vector< Double_t > MVADiff(std::vector< Double_t > &, std::vector< Double_t > &)computes difference between two vectorsDefinition Tools.cxx:506; TMVA::Tools::GetIndexMinElementInt_t GetIndexMinElement(std::vector< Double_t > &)find index of minimum entry in vectorDefinition Tools.cxx:765; TMVA::Tools::projNormTH1FTH1 * projNormTH1F(TTree *theTree, const TString &theVarName, const TString &name, Int_t nbins, Double_t xmin, Double_t xmax, const TString &cut)projects variable from tree into normalised histogramDefinition Tools.cxx:366; TMVA::Tools::ROOTVersionMessagevoid ROOTVersionMessage(MsgLogger &logger)prints the ROOT release number and dateDefinition Tools.cxx:1325; TMVA::Tools::ReplaceRegularExpressionsTString ReplaceRegularExpressions(const TString &s, const TString &replace=""+"")replace regular expressions helper function to remove all occurrences ""$!%^&()'<>?...Definition Tools.cxx:798; TMVA::Tools::ReadTVectorDFromXMLvoid ReadTVectorDFromXML(void *node, const char *name, TVectorD *vec)Definition Tools.cxx:1267; TMVA::Tools::GetCumulativeDistTH1 * GetCumulativeDist(TH1 *h)get the cumulative distribution of a histogramDefinition Tools.cxx:1756; TMVA::Tools::ReadFloatArbitraryPrecisionvoid ReadFloatArbitraryPrecision(Float_t &val, std::istream &is)reads a float value with the available precision from a streamDefinition Tools.cxx:1073; TMVA::Tools::AddRawLineBool_t AddRawLine(void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8cxx_source.html:74498,variab,variable,74498,doc/master/Tools_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Tools_8cxx_source.html,1,['variab'],['variable']
Modifiability,amEventDensity. TMVA::PDEFoamKernelBase←. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamTarget. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamVect. TMVA::PDF. TMVA::Reader. TMVA::RootFinder. TMVA::SdivSqrtSplusB. TMVA::SimulatedAnnealingFitter. TMVA::TActivationIdentity. TMVA::TActivationRadial. TMVA::TActivationSigmoid. TMVA::TActivationTanh. TMVA::TNeuron. TMVA::TNeuronInputAbs. TMVA::TNeuronInputSqSum. TMVA::TNeuronInputSum. TMVA::TSpline1. TMVA::TSpline2. TMVA::TSynapse. TMVA::Timer. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMVA::VariableTransformBase←. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMacro←. TEveMacro. TMap. TMapFile. TMapIter. TMarker. TMarker3DBox. TMaterial←. TMixture. TMathText. TMatrixT<double>. TMatrixT<float>. TMatrixTBase<double>←. TMatrixT<double>. TMatrixTSparse<double>. TMatrixTSym<double>. TMatrixTBase<float>←. TMatrixT<float>. TMatrixTSparse<float>. TMatrixTSym<float>. TMatrixTColumn<double>. TMatrixTColumn<float>. TMatrixTDiag<double>. TMatrixTDiag<float>. TMatrixTFlat<double>. TMatrixTFlat<float>. TMatrixTLazy<double>←. THaarMatrixT<double>. THilbertMatrixT<double>. TMatrixTLazy<float>←. THaarMatrixT<float>. THilbertMatrixT<float>. TMatrixTRow<double>. TMatrixTRow<float>. TMatrixTSparse<double>. TMatrixTSparse<float>. TMatrixTSparseDiag<double>. TMatrixTSparseDiag<float>. TMatrixTSparseRow<double>. TMatrixTSparseRow<float>. TMatrixTSub<double>. TMatrixTSub<float>. TMatrixTSym<double>. TMatrixTSym<float>. TMatrixTSymLazy<double>←. THilbertMatrixTSym<double>. TMatrixTSymLazy<float>←. THilbertMatrixTSym<,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassHierarchy.html:77439,Variab,VariablePCATransform,77439,root/html534/ClassHierarchy.html,https://root.cern,https://root.cern/root/html534/ClassHierarchy.html,2,['Variab'],['VariablePCATransform']
Modifiability,"amFunction (FuncPtr func, unsigned int dim, Iterator begin, Iterator end) :; 90// fFunc(func),; 91// fDim(dim),; 92// fParams(std::vector<double>(begin,end) ); 93// {}; 94 ; 95 /// clone the function; 96 IMultiGenFunction * Clone() const override {; 97 return new WrappedParamFunction(fFunc, fDim, fParams.begin(), fParams.end());; 98 }; 99 ; 100 const double * Parameters() const override {; 101 return fParams.empty() ? nullptr : &fParams.front();; 102 }; 103 ; 104 void SetParameters(const double * p) override {; 105 std::copy(p, p+NPar(), fParams.begin() );; 106 }; 107 ; 108 unsigned int NPar() const override { return fParams.size(); }; 109 ; 110 unsigned int NDim() const override { return fDim; }; 111 ; 112 ; 113private:; 114 ; 115 /// evaluate the function given values and parameters (requested interface); 116 double DoEvalPar(const double * x, const double * p) const override {; 117 return (*fFunc)( x, p );; 118 }; 119 ; 120 ; 121 FuncPtr fFunc;; 122 unsigned int fDim;; 123 std::vector<double> fParams;; 124 ; 125 ; 126 ; 127};; 128 ; 129 ; 130typedef double( * FreeMultiFunctionPtr ) (const double *);; 131 ; 132/**; 133 WrappedParamGenFunction class to wrap any multi-dimensional function; 134 implementing the operator()(const double * ); 135 in an interface-like IParamFunction, by fixing some of the variables and define them as; 136 parameters.; 137 i.e. transform any multi-dim function in a parametric function; 138 ; 139 @ingroup ParamFunc; 140 ; 141*/; 142template< typename FuncPtr = FreeMultiFunctionPtr >; 143class WrappedParamFunctionGen : public IParamMultiFunction {; 144 ; 145public:; 146 ; 147 /**; 148 Constructor a wrapped function from a pointer to a generic callable object implementation operator()(const double *), the new function dimension, the number of parameters (number of fixed variables) and an array specifying the index of the fixed variables which became; 149 parameters in the new API; 150 */; 151 ; 152 WrappedParamFunctionGen (const FuncPtr & fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/WrappedParamFunction_8h_source.html:4563,variab,variables,4563,doc/master/WrappedParamFunction_8h_source.html,https://root.cern,https://root.cern/doc/master/WrappedParamFunction_8h_source.html,1,['variab'],['variables']
Modifiability,amKernelTrivial.cxx;  PDEFoamMultiTarget.cxx;  PDEFoamTarget.cxx;  PDEFoamTargetDensity.cxx;  PDEFoamVect.cxx;  PDF.cxx;  QuickMVAProbEstimator.cxx;  Ranking.cxx;  Reader.cxx;  RegressionVariance.cxx;  Results.cxx;  ResultsClassification.cxx;  ResultsMulticlass.cxx;  ResultsRegression.cxx;  ROCCalc.cxx;  RootFinder.cxx;  Rule.cxx;  RuleCut.cxx;  RuleEnsemble.cxx;  RuleFit.cxx;  RuleFitAPI.cxx;  RuleFitParams.cxx;  SdivSqrtSplusB.cxx;  SeparationBase.cxx;  SimulatedAnnealing.cxx;  SimulatedAnnealingFitter.cxx;  SVEvent.cxx;  SVKernelFunction.cxx;  SVKernelMatrix.cxx;  SVWorkingSet.cxx;  TActivation.cxx;  TActivationChooser.cxx;  TActivationIdentity.cxx;  TActivationRadial.cxx;  TActivationReLU.cxx;  TActivationSigmoid.cxx;  TActivationTanh.cxx;  Timer.cxx;  TNeuron.cxx;  TNeuronInput.cxx;  TNeuronInputAbs.cxx;  TNeuronInputChooser.cxx;  TNeuronInputSqSum.cxx;  TNeuronInputSum.cxx;  Tools.cxx;  TransformationHandler.cxx;  TSpline1.cxx;  TSpline2.cxx;  TSynapse.cxx;  Types.cxx;  VariableDecorrTransform.cxx;  VariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransformBase.cxx;  Volume.cxx;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h;  tmvaglob.h;  TMVAGui.h;  TMVAMultiClassGui.h;  TMVARegGui.h;  variables.h;  variablesMultiClass.h;  LinkDef.h;  ► src;  annconvergencetest.cxx;  BDT.cxx;  BDT_Reg.cxx;  BDTControlPlots.cxx;  BoostControlPlots.cxx;  compareanapp.cxx;  correlations.cxx;  co,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:94177,Variab,VariableDecorrTransform,94177,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,1,['Variab'],['VariableDecorrTransform']
Modifiability,"amVect operator- (const PDEFoamVect &);  subtraction operator -; difference of 2 vectors; c=a-b, a=a-b, NEVER USE IT, VERY SLOW!!! ;  ; PDEFoamVect & operator-= (const PDEFoamVect &);  unary subtraction operator -= ;  ; PDEFoamVect & operator= (const PDEFoamVect &);  substitution operator ;  ; PDEFoamVect & operator= (Double_t);  Loading in double prec. number, sometimes can be useful. ;  ; PDEFoamVect & operator= (Double_t[]);  Loading in ordinary double prec. vector, sometimes can be useful. ;  ; Double_t & operator[] (Int_t);  [] is for access to elements as in ordinary matrix like a[j]=b[j] (Perhaps against some strict rules but rather practical.) Range protection is built in, consequently for substitution one should use rather use a=b than explicit loop! ;  ; void Print (Option_t *option) const;  Printout of all vector components. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamVect.html:1987,inherit,inherited,1987,doc/master/classTMVA_1_1PDEFoamVect.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamVect.html,1,['inherit'],['inherited']
Modifiability,"amaging it. To add a friend to the list, you can use the TTree::AddFriend; method. The tree in the diagram below has two friends (friend_tree1 and; friend_tree2) and now has access to the variables a,b,c,i,j,k,l and m. /*; ; */. The AddFriend method has two parameters, the first is the tree name and the; second is the name of the ROOT file where the friend tree is saved.; AddFriend automatically opens the friend file. If no file name is given,; the tree called ft1 is assumed to be in the same file as the original tree. tree.AddFriend(""ft1"",""friendfile1.root"");; If the friend tree has the same name as the original tree, you can give it; an alias sin the context of the friendship:. tree.AddFriend(""tree1 = tree"",""friendfile1.root"");; Once the tree has friends, we can use TTree::Draw as if the friend's; variables were in the original tree. To specify which tree to use in; the Draw method, use the syntax:. <treeName>.<branchname>.<varname>; If the variablename is enough to uniquely identify the variable, you can; leave out the tree and/or branch name.; For example, these commands generate a 3-d scatter plot of variable ""var""; in the TTree tree versus variable v1 in TTree ft1 versus variable v2 in; TTree ft2. tree.AddFriend(""ft1"",""friendfile1.root"");; tree.AddFriend(""ft2"",""friendfile2.root"");; tree.Draw(""var:ft1.v1:ft2.v2"");. /*; ; */. The picture illustrates the access of the tree and its friends with a; Draw command.; When AddFriend is called, the ROOT file is automatically opened and the; friend tree (ft1) is read into memory. The new friend (ft1) is added to; the list of friends of tree.; The number of entries in the friend must be equal or greater to the number; of entries of the original tree. If the friend tree has fewer entries a; warning is given and the missing entries are not included in the histogram.; To retrieve the list of friends from a tree use TTree::GetListOfFriends.; When the tree is written to file (TTree::Write), the friends list is saved; with it. An",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:35493,variab,variablename,35493,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,8,['variab'],"['variable', 'variablename']"
Modifiability,"ame ""Peaks""; f#define f(i)Definition RSha256.hxx:104; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TMacroClass supporting a collection of lines with C++ code.Definition TMacro.h:31; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; mTMarker mDefinition textangle.C:8. Definition at line 31 of file TMacro.h. Public Member Functions;  TMacro ();  Create an empty macro, use AddLine() or ReadFile() to fill this macro. ;  ;  TMacro (const char *name, const char *title="""");  Create a macro with a name and a title. ;  ;  TMacro (const TMacro &);  Copy constructor. ;  ; virtual ~TMacro ();  Delete this macro. ;  ; virtual TObjString * AddLine (const char *text);  Add line with text in the list of lines of this macro. ;  ; void Browse (TBrowser *b) override;  When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ;  ; virtual TMD5 * Checksum ();  Returns checksum of the current content. ;  ; virtual Longptr_t Exec (const char *params=nullptr, Int_t *error=nullptr);  Execute this macro with params, if params is 0, default parameters (set via SetParams) are used. ;  ; virtual TObjString * GetLineWith (const char *text) const;  Search the first line containing text. ;  ; TList * GetListOfLines () const;  ; TClass * IsA () const override;  ; virtual Bool_t Load () const;  Load the macro into the interpreter. ;  ; TMacro & operator= (const TMacro &);  Copy constructor. ;  ; void Paint (Option_t *option="""") override;  Execute this macro (called by TPad::Paint). ;  ; void Print (Option_t *option="""") const override;  Print contents of this macro. ;  ; virtual Int_t ReadFile (const char *filename);  Read lines in filename in this macro. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Sa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMacro.html:2437,variab,variable,2437,doc/master/classTMacro.html,https://root.cern,https://root.cern/doc/master/classTMacro.html,1,['variab'],['variable']
Modifiability,"ame () const override;  Returns name of object. ;  ; void HandleMenuBarHiding (Event_t *ev);  Maybe switch menu-bar / menu-button. ;  ; TClass * IsA () const override;  ; void MenuHidingTimeout ();  Action for menu-hiding timeout. ;  ; Bool_t ProcessFrameMessage (Long_t msg, Long_t parm1, Long_t);  Process GUI message capture by the main GUI frame (TGLSAFrame). ;  ; void SelectionChanged () override;  Update GUI components for embedded viewer selection change. ;  ; void Show ();  Show the viewer. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void ToggleEditObject ();  Toggle state of the 'Edit Object' menu entry. ;  ; void ToggleOrthoDolly ();  Toggle state of the 'Ortho allow dolly' menu entry. ;  ; void ToggleOrthoRotate ();  Toggle state of the 'Ortho allow rotate' menu entry. ;  ;  Public Member Functions inherited from TGLViewer;  TGLViewer (TVirtualPad *pad);  ;  TGLViewer (TVirtualPad *pad, Int_t x, Int_t y, Int_t width, Int_t height);  ;  ~TGLViewer () override;  Destroy viewer object. ;  ; virtual void Activated ();  ; void AddCompositeOp (UInt_t) override;  ; Int_t AddObject (const TBuffer3D &, Bool_t *=nullptr) override;  ; Int_t AddObject (UInt_t, const TBuffer3D &, Bool_t *=nullptr) override;  ; void ApplySelection ();  Process result from last selection (in fSelRec) and extract a new current selection from it. ;  ; void AutoFade (Float_t fade, Float_t time=1, Int_t steps=10);  Animate fading from current value to fade over given time (sec) and number of steps. ;  ; void BeginScene () override;  ; Bool_t BuildingScene () const override;  ; Bool_t CanLoopOnPrimitives () const override;  ; void ClearCurrentOvlElm ();  Reset current overlay-element to zero, eventually notifying the old one that the mouse has left. ;  ; virtual void Clicked (TObject *obj);  Emit Clicked signal. ;  ; virtual void Clicked (TObject *obj, UInt_t button, UInt_t state);  Emit Clic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLSAViewer.html:4245,inherit,inherited,4245,doc/master/classTGLSAViewer.html,https://root.cern,https://root.cern/doc/master/classTGLSAViewer.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; TGTextButton ** fColHeader;  column headers for in detailed mode ;  ; Int_t fLastButton;  Indicates the last button clicked if any. ;  ; Int_t fNColumns;  number of columns ;  ; Int_t fOverButton;  Indicates over which button the mouse is. ;  ; Bool_t fOverSplitter;  Indicates if the cursor is over a splitter. ;  ; Cursor_t fSplitCursor;  split cursor; ;  ; TGVFileSplitter ** fSplitHeader;  column splitters ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHeaderFrame.html:25687,inherit,inherited,25687,doc/master/classTGHeaderFrame.html,https://root.cern,https://root.cern/doc/master/classTGHeaderFrame.html,2,['inherit'],['inherited']
Modifiability,"ame ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveProjected; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetDepthLocal (Float_t d) override;  Set depth (z-coordinate) of the projected points. ;  ;  Protected Member Functions inherited from TEvePointSet; void AssertIntIdsSize ();  Assert that size of IntId array is compatible with the size of the point array. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TPointSet3D; void CopyIds (const TPointSet3D &t);  Copy id objects from point-set 't'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLineProjected.html:44050,inherit,inherited,44050,doc/master/classTEveLineProjected.html,https://root.cern,https://root.cern/doc/master/classTEveLineProjected.html,2,['inherit'],['inherited']
Modifiability,"ame ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitButton.html:31558,inherit,inherited,31558,doc/master/classTGSplitButton.html,https://root.cern,https://root.cern/doc/master/classTGSplitButton.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate pull. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPullVar.html:47964,inherit,inherited,47964,doc/master/classRooPullVar.html,https://root.cern,https://root.cern/doc/master/classRooPullVar.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Mak",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContainer.html:25191,inherit,inherited,25191,doc/master/classTRootContainer.html,https://root.cern,https://root.cern/doc/master/classTRootContainer.html,3,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void HandleTooltip ();  Show / hide tooltip for various MouseOver events. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fBrightness;  ; Bool_t fShowTooltip;  ; Bool_t fUseLightColorSet;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveViewerList.html:30873,inherit,inherited,30873,doc/master/classTEveViewerList.html,https://root.cern,https://root.cern/doc/master/classTEveViewerList.html,2,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; enum  { kTemporary = (1ULL << ( 23 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TMarker3DBox (const TMarker3DBox &);  copy constructor ;  ; TMarker3DBox & operator= (const TMarker3DBox &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ; Float_t fPhi;  ; TObject * fRefObject;  ; Float_t fTheta;  ; Float_t fX;  ; Float_t fY;  ; Float_t fZ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . #include <TMarker3DBox.h>. Inheritance diagram for TMarker3DBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. protecte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMarker3DBox.html:14755,inherit,inherited,14755,doc/master/classTMarker3DBox.html,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Public Attributes; RooRealProxy x;  ; RooRealProxy y;  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  . Private Member Functions; double evaluateFull (double thisX, double thisY) const;  Evaluates the sum of the product of the 2D kernels for use in calculating the fixed kernel estimate, f, given the bandwidths _hx[j] and _hy[j]. ;  ; double g (double var1, double *_var1, double sigma1, double var2, double *_var2, double sigma2) const;  Calculates f(t_i) for the bandwidths. ;  ; double highBoundaryCorrection (double thisVar, double thisH, double high, double tVar) const;  Apply the mirror at boundary correction to a dimension given the space position to evaluate at (thisVar), the bandwidth at this position (thisH), the boundary (high/low) and the v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo2DKeysPdf.html:60562,inherit,inherited,60562,doc/master/classRoo2DKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRoo2DKeysPdf.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGeoGlobalMagField * GetInstance ();  Static getter that does not create the object. ;  ; static TGeoGlobalMagField * Instance ();  Returns always a valid static pointer to the field manager. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoGlobalMagField (const TGeoGlobalMagField &)=delete;  ; TGeoGlobalMagField & operator= (const TGeoGlobalMagField &)=delete;  ; void Unlock ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TVirtualMagField * fField {nullptr};  ; Bool_t fLock {kFALSE};  . Static Private Attributes; static TGeoGlobalMagField * fgInstance = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoGlobalMagField.html:10905,inherit,inherited,10905,doc/master/classTGeoGlobalMagField.html,https://root.cern,https://root.cern/doc/master/classTGeoGlobalMagField.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TGWin32ProxyBase; static void GlobalLock ();  lock any proxy (client thread) ;  ; static void GlobalUnlock ();  unlock any proxy (client thread) ;  ; static Bool_t IsGloballyLocked ();  Check the status of the lock. ;  ; static void Lock ();  enter critical section ;  ; static Bool_t Ping ();  send ping messsage to server thread ;  ; static void Unlock ();  leave critical section ;  . Static Protected Attributes; static TVirtualX * fgRealObject = 0;  ;  Static Protected Attributes inherited from TGWin32ProxyBase; static Long_t fgLock = 0;  fgLock=1 - all client threads locked ;  ; static UInt_t fMaxResponseTime = 0;  max period for waiting response from server thread ;  . Friends; class TGWin32;  . Additional Inherited Members;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:48480,inherit,inherited,48480,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Types; using LegacyIterator_t = TIteratorToSTLInterface< Storage_t >;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual bool canBeAdded (const RooAbsArg &arg, bool silent) const =0;  Determine whether it's possible to add a given RooAbsArg to the collection or not. ;  ; void clearStructureTags ();  ; void deleteList ();  Delete contents of the list. ;  ; void makeStructureTag ();  ; void makeTypedStructureTag ();  ; TNamed * structureTag ();  ; TNamed * typedStructureTag ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; template<class T > ; static void assert_is_no_temporary (T &&);  . Protected Attributes; bool _allRRV = true;  All contents are RRV. ;  ; Storage_t _list;  Actual object storage. ;  ; TString _name;  Our name. ;  ; bool _ownCont = false;  Flag to identify a list that owns its contents. ;  ; TNamed * _structureTag {nullptr};  ! Structure tag ;  ; TNamed * _typedStructureTag {nullptr};  ! Typed structure tag ;  . Private Types; using HashAssistedFind = RooFit::Detail::HashAssistedFind;  . Private Member Functions; void insert (RooAbsArg *);  Insert an element into the owned collections. ;  ; bool replaceImpl (const RooAbsArg &var1, const RooAbsArg &var2);  . Static Private Member Functions; static void throwAddTypedException (TClass *klass, RooAbsArg *arg);  . Private At",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsCollection.html:24689,inherit,inherited,24689,doc/v632/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/v632/classRooAbsCollection.html,2,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 ))",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTShape.html:15993,inherit,inherited,15993,doc/master/classTShape.html,https://root.cern,https://root.cern/doc/master/classTShape.html,2,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoIteratorPlugin; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Int_t fColor;  ; Int_t fReplica;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoIteratorPlugin; const TGeoIterator * fIterator = nullptr;  . Inheritance diagram for iterplugin:. T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classiterplugin.html:9574,inherit,inherited,9574,doc/master/classiterplugin.html,https://root.cern,https://root.cern/doc/master/classiterplugin.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TParticlePDG (const TParticlePDG &);  copy constructor ;  ; TParticlePDG & operator= (const TParticlePDG &);  assignement operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TParticlePDG * fAntiParticle;  ; Int_t fBeauty;  ; Double_t fCharge;  ; Int_t fCharm;  ; TObjArray * fDecayList;  ; Double_t fI3;  ; Double_t fIsospin;  ; Double_t fLifetime;  ; Double_t fMass;  ; Int_t fParity;  ; TString fParticleClass;  ; Int_t fPdgCode;  ; Double_t fSpin;  ; Int_t fStable;  ; Int_t fStrangeness;  ; Int_t fTop;  ; Int_t fTrackingCode;  ; Double_t fWidth;  ; Int_t fX;  ; Int_t fY;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParticlePDG.html:12408,inherit,inherited,12408,doc/master/classTParticlePDG.html,https://root.cern,https://root.cern/doc/master/classTParticlePDG.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTable.html:11923,inherit,inherited,11923,doc/master/classRooTable.html,https://root.cern,https://root.cern/doc/master/classRooTable.html,2,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Attributes; Color_t fColor = 0;  color for the contour (for 2D) or function (in 1D) ;  ; Style_t fFillStyle = 4050;  fill style for contours, half transparent by default ;  ; LikelihoodInterval * fInterval = nullptr;  ; Color_t fLineColor = 0;  line color for the interval (1D) or for other contours (2D) ;  ; double fMaximum = -1;  function maximum ;  ; Int_t fNdimPlot = 0;  ; Int_t fNPoints = 0;  number of points used to scan the PL, default depends if 1D or 2D ;  ; RooArgSet * fParamsPlot = nullptr;  ; TObject * fPlotObject = nullptr;  plotted object ;  ; double fPrecision = -1;  RooCurve precision, use default in case of -1. ;  ; doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1LikelihoodIntervalPlot.html:13087,inherit,inherited,13087,doc/master/classRooStats_1_1LikelihoodIntervalPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1LikelihoodIntervalPlot.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Attributes; HypoTestResult * fHypoTestResult = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HypoTestPlot.html:15534,inherit,inherited,15534,doc/master/classRooStats_1_1HypoTestPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HypoTestPlot.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Member Functions; void attachCache (const RooAbsArg *newOwner, const RooArgSet &cachedVars) override;  Initialize cache of dataset: attach variables of cache ArgSet to the corresponding TTree branches. ;  ; void createTree (RooStringView name, RooStringView title);  Create TTree object that lives in memory, independent of current location of gDirectory. ;  ; Int_t getBranchBufferSize () const;  ; void initialize ();  One-time initialization common to all constructor forms. ;  ; std::string makeTreeName () const;  Generate a name for the storage tree from the name and title of this instance. ;  ; void setBranchBufferSize (Int_t size);  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTreeDataStore.html:19276,inherit,inherited,19276,doc/master/classRooTreeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooTreeDataStore.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooArgSet _cachedVars;  ; bool _doDirtyProp = true;  Switch do (de)activate dirty state propagation when loading a data point. ;  ; RooArgSet _vars;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsDataStore.html:14869,inherit,inherited,14869,doc/master/classRooAbsDataStore.html,https://root.cern,https://root.cern/doc/master/classRooAbsDataStore.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; double _range [2];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRangeBinning.html:14569,inherit,inherited,14569,doc/master/classRooRangeBinning.html,https://root.cern,https://root.cern/doc/master/classRooRangeBinning.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; std::vector< double > _array;  ! do not persist ;  ; double _binw;  ; Int_t _nbins;  ; double _xhi;  ; double _xlo;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUniformBinning.html:14897,inherit,inherited,14897,doc/master/classRooUniformBinning.html,https://root.cern,https://root.cern/doc/master/classRooUniformBinning.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; std::vector< double > _count;  Array of counters for each state. ;  ; double _nOverflow;  Number of overflow entries. ;  ; double _total;  Total number of entries. ;  ; TObjArray _types;  Array of defined category states. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo1DTable.html:13557,inherit,inherited,13557,doc/master/classRoo1DTable.html,https://root.cern,https://root.cern/doc/master/classRoo1DTable.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; CatVector * addCategory (RooAbsCategory *cat);  ; RealVector * addReal (RooAbsReal *real);  ; RealFullVector * addRealFull (RooAbsReal *real);  ; void forceCacheUpdate () override;  ; bool hasAsymError (RooAbsReal *real);  ; bool hasError (RooAbsReal *real);  ; bool hasFilledCache () const override;  ; bool isFullReal (RooAbsReal *real);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void reserve (Int_t nEvt);  ; void setAllBuf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVectorDataStore.html:18688,inherit,inherited,18688,doc/master/classRooVectorDataStore.html,https://root.cern,https://root.cern/doc/master/classRooVectorDataStore.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; Int_t binTrans (Int_t bin) const;  ; double invTrans (double x) const;  ; double trans (double x) const;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< double > _array;  ! Array of transformed bin boundaries ;  ; RooAbsBinning * _input {nullptr};  Input binning. ;  ; double _offset {0.};  Offset of transformation. ;  ; double _slope {0.};  Slope of transformation. ;  ;  Protected Attributes inherited from TNamed; TStri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinTransBinning.html:14869,inherit,inherited,14869,doc/master/classRooLinTransBinning.html,https://root.cern,https://root.cern/doc/master/classRooLinTransBinning.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooAbsReal * xhi () const;  ; RooAbsReal * xlo () const;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; double * _array = nullptr;  ; double _binw = 0;  ; RooListProxy * _lp = nullptr;  ; Int_t _nbins = 100;  ; RooAbsArg * _owner = nullptr;  ; RooAbsReal * _xhi = nullptr;  ; RooAbsReal * _xlo = nullptr;  do not persist ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Member",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooParamBinning.html:15418,inherit,inherited,15418,doc/master/classRooParamBinning.html,https://root.cern,https://root.cern/doc/master/classRooParamBinning.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool binEdges (Int_t bin, double &xlo, double &xhi) const;  Return upper and lower bound of bin 'bin'. ;  ; void updateBinCount ();  Update the internal bin counter. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; double * _array = nullptr;  ! Array of boundaries ;  ; Int_t _blo = 0.0;  ! bin number for _xlo ;  ; std::vector< double > _boundaries;  Boundaries. ;  ; Int_t _nbins;  Number of bins. ;  ; bool _ownBoundHi = true;  Does",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinning.html:16049,inherit,inherited,16049,doc/master/classRooBinning.html,https://root.cern,https://root.cern/doc/master/classRooBinning.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsGenContext.html:13147,inherit,inherited,13147,doc/master/classRooAbsGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAbsGenContext.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void DrawHistInterval (const Option_t *options=nullptr);  ; void DrawInterval (const Option_t *options=nullptr);  ; void DrawKeysPdfInterval (const Option_t *options=nullptr);  ; void DrawPosterior (const Option_t *options=nullptr);  ; void * DrawPosteriorHist (const Option_t *options=nullptr, const char *title=nullptr, bool scale=true);  ; void * DrawPosteriorKeysPdf (const Option_t *options=nullptr);  ; void * DrawPosteriorKeysProduct (const Option_t *options=nullptr);  ; void DrawShortestInterval (const Option_t *options=nullptr);  ; void DrawTailFractionInterval (const Option_t *options=nullptr);  ;  Protected Me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCIntervalPlot.html:13036,inherit,inherited,13036,doc/master/classRooStats_1_1MCMCIntervalPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCIntervalPlot.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void addObject (TObject *obj, Option_t *drawOptions=nullptr);  Add a generic object to this plot. ;  ; void addOtherObject (TObject *obj, Option_t *drawOptions=nullptr);  Add a generic object to this plot. ;  ; void GetAbsoluteInterval (double &theMin, double &theMax, double &theYMax) const;  ; void SetSampleWeights (const SamplingDistribution *samplingDist);  Determine if the sampling distribution has weights and store them. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SamplingDistPlot.html:14575,inherit,inherited,14575,doc/master/classRooStats_1_1SamplingDistPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SamplingDistPlot.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void attachCache (const RooAbsArg *newOwner, const RooArgSet &cachedVars) override;  Initialize cache of dataset: attach variables of cache ArgSet to the corresponding TTree branches. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t _curIndex = 0;  ! Index associated with current event ;  ; RooAbsDataStore * _curStore = nullptr;  ! Datastore associated with current event ;  ; std::map< Int_t, RooAbsDataStore * > _dataMap;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCompositeDataStore.html:16968,inherit,inherited,16968,doc/master/classRooCompositeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooCompositeDataStore.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  Generate one event. ;  ; void initGenerator (const RooArgSet &theEvent) override;  One-time initialization of generator. ;  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEffGenContext.html:13582,inherit,inherited,13582,doc/master/classRooEffGenContext.html,https://root.cern,https://root.cern/doc/master/classRooEffGenContext.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  Generate one event. ;  ; void initGenerator (const RooArgSet &theEvent) override;  Perform one-time initialization of the generator context. ;  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenContext.html:13607,inherit,inherited,13607,doc/master/classRooGenContext.html,https://root.cern,https://root.cern/doc/master/classRooGenContext.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooAddGenContext (const RooAddGenContext &other);  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  Randomly choose one of the component contexts to generate this event, with a probability proportional to its coefficient. ;  ; void initGenerator (const RooArgSet &theEvent) override;  One-time initialization of generator context. ;  ; void updateThresholds ();  Update the cumulative threshold table from the current coefficient values. ;  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddGenContext.html:13971,inherit,inherited,13971,doc/master/classRooAddGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAddGenContext.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooBinnedGenContext (const RooBinnedGenContext &other);  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  this method is not implemented for this context ;  ; void initGenerator (const RooArgSet &theEvent) override;  One-time initialization of generator context. ;  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinnedGenContext.html:13210,inherit,inherited,13210,doc/master/classRooBinnedGenContext.html,https://root.cern,https://root.cern/doc/master/classRooBinnedGenContext.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooConvGenContext (const RooConvGenContext &other);  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString _convVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConvGenContext.html:14364,inherit,inherited,14364,doc/master/classRooConvGenContext.html,https://root.cern,https://root.cern/doc/master/classRooConvGenContext.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooProdGenContext (const RooProdGenContext &other);  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  Generate a single event of the product by generating the components of the products sequentially. ;  ; void initGenerator (const RooArgSet &theEvent) override;  One-time initialization of generator context, forward to component generators. ;  ; void updateCCDTable ();  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProdGenContext.html:13347,inherit,inherited,13347,doc/master/classRooProdGenContext.html,https://root.cern,https://root.cern/doc/master/classRooProdGenContext.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooSimGenContext (const RooSimGenContext &other);  ; RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs) override;  Create an empty dataset to hold the events that will be generated. ;  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  Generate event appropriate for current index state. ;  ; void initGenerator (const RooArgSet &theEvent) override;  Perform one-time initialization of generator context. ;  ; void updateFractions ();  No action needed if we have a proto index. ;  ;  Protected Member Functions inherited from RooAbsGenContext; void resampleData (dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimGenContext.html:13627,inherit,inherited,13627,doc/master/classRooSimGenContext.html,https://root.cern,https://root.cern/doc/master/classRooSimGenContext.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooSimSplitGenContext (const RooSimSplitGenContext &other);  ; RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs) override;  this method is empty because it is not used by this context ;  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  this method is empty because it is not used in this type of context ;  ; void initGenerator (const RooArgSet &theEvent) override;  Perform one-time initialization of generator context. ;  ;  Protected Member Functions inherited from RooAbsGenContext; void resampleData (double &ratio);  Rescale existing output buffer with given",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimSplitGenContext.html:13391,inherit,inherited,13391,doc/master/classRooSimSplitGenContext.html,https://root.cern,https://root.cern/doc/master/classRooSimSplitGenContext.html,1,['inherit'],['inherited']
Modifiability,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; std::set< void * > fDirPtrs;  ; XrdCl::FileSystem * fFileSystem;  ; XrdCl::URL * fUrl;  . Static Private Attributes; static THashList fgAddrFQDN;  ; static TMutex fgAddrMutex;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetXNGSystem.html:30143,inherit,inherited,30143,doc/master/classTNetXNGSystem.html,https://root.cern,https://root.cern/doc/master/classTNetXNGSystem.html,2,['inherit'],['inherited']
Modifiability,ame ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TEvePointSelectorConsumer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TEvePointSet ** fBins;  ; Double_t fBinWidth;  ; Double_t fCurMax;  ; Double_t fCurMin;  ; Int_t fDefPointSetCapacity;  ; Int_t fLastBin;  ; Double_t fMax;  ; Double_t fMin;  Index of the last filled TEvePointSet. ;  ; Int_t fNBins;  ; TString fQuantName;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePointSetArray.html:29971,inherit,inherited,29971,doc/master/classTEvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classTEvePointSetArray.html,1,['inherit'],['inherited']
Modifiability,"ame = """" ,; int randomSeed = -1); {; // create minimizer giving a name and a name (optionally) for the specific; // algorithm; // possible choices are:; // minName algoName; // Minuit /Minuit2 Migrad, Simplex,Combined,Scan (default is Migrad); // Minuit2 Fumili2; // Fumili; // GSLMultiMin ConjugateFR, ConjugatePR, BFGS,; // BFGS2, SteepestDescent; // GSLMultiFit; // GSLSimAn; // Genetic; ROOT::Math::Minimizer* minimum =; ROOT::Math::Factory::CreateMinimizer(minName, algoName);; if (!minimum) {; std::cerr << ""Error: cannot create minimizer \"""" << minName; << ""\"". Maybe the required library was not built?"" << std::endl;; return 1;; }; ; // set tolerance , etc...; minimum->SetMaxFunctionCalls(1000000); // for Minuit/Minuit2; minimum->SetMaxIterations(10000); // for GSL; minimum->SetTolerance(0.001);; minimum->SetPrintLevel(1);; ; // create function wrapper for minimizer; // a IMultiGenFunction type; ROOT::Math::Functor f(&RosenBrock,2);; double step[2] = {0.01,0.01};; // starting point; ; double variable[2] = { -1.,1.2};; if (randomSeed >= 0) {; TRandom2 r(randomSeed);; variable[0] = r.Uniform(-20,20);; variable[1] = r.Uniform(-20,20);; }; ; minimum->SetFunction(f);; ; // Set the free variables to be minimized !; minimum->SetVariable(0,""x"",variable[0], step[0]);; minimum->SetVariable(1,""y"",variable[1], step[1]);; ; // do the minimization; minimum->Minimize();; ; const double *xs = minimum->X();; std::cout << ""Minimum: f("" << xs[0] << "","" << xs[1] << ""): ""; << minimum->MinValue() << std::endl;; ; // expected minimum is 0; if ( minimum->MinValue() < 1.E-4 ); std::cout << ""Minimizer "" << minName << "" - "" << algoName; << "" converged to the right minimum"" << std::endl;; else {; std::cout << ""Minimizer "" << minName << "" - "" << algoName; << "" failed to converge !!!"" << std::endl;; Error(""NumericalMinimization"",""fail to converge"");; }; ; return 0;; }; Functor.h; Minimizer.h; f#define f(i)Definition RSha256.hxx:104; TError.h; Errorvoid Error(const char *location, const char *msg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NumericalMinimization_8C.html:1924,variab,variable,1924,doc/master/NumericalMinimization_8C.html,https://root.cern,https://root.cern/doc/master/NumericalMinimization_8C.html,1,['variab'],['variable']
Modifiability,"ame = """"); Constructor for set containing 6 initial objects. RooArgList(const RooAbsArg& var1, const RooAbsArg& var2, const RooAbsArg& var3, const RooAbsArg& var4, const RooAbsArg& var5, const RooAbsArg& var6, const RooAbsArg& var7, const char* name = """"); Constructor for set containing 7 initial objects. RooArgList(const RooAbsArg& var1, const RooAbsArg& var2, const RooAbsArg& var3, const RooAbsArg& var4, const RooAbsArg& var5, const RooAbsArg& var6, const RooAbsArg& var7, const RooAbsArg& var8, const char* name = """"); Constructor for set containing 8 initial objects. RooArgList(const RooAbsArg& var1, const RooAbsArg& var2, const RooAbsArg& var3, const RooAbsArg& var4, const RooAbsArg& var5, const RooAbsArg& var6, const RooAbsArg& var7, const RooAbsArg& var8, const RooAbsArg& var9, const char* name = """"); Constructor for set containing 9 initial objects. RooArgList(const TCollection& tcoll, const char* name); Constructor from a root TCollection. Elements in the collection that; do not inherit from RooAbsArg will be skipped. A warning message; will be printed for every skipped item. RooArgList(const RooArgList& other, const char *name); Copy constructor. Note that a copy of a list is always non-owning,; even the source list is owning. To create an owning copy of; a list (owning or not), use the snaphot() method. ~RooArgList(); Destructor. RooAbsArg& operator[](Int_t idx) const; Array operator. Element in slot 'idx' must already exist, otherwise; code will abort. When used as lvalue in assignment operations, the element contained in; the list will not be changed, only the value of the existing element!. void writeToStream(ostream& os, Bool_t compact); Write the contents of the argset in ASCII form to given stream. All elements will be printed on a single line separated by a single; white space. The contents of each element is written by the arguments'; writeToStream() function. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read the cont",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooArgList.html:14576,inherit,inherit,14576,root/html526/RooArgList.html,https://root.cern,https://root.cern/root/html526/RooArgList.html,1,['inherit'],['inherit']
Modifiability,"ame = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTMatrixTSymLazy<float>::operator=(const TMatrixTSymLazy<float>&). private:. virtual voidFillIn(TMatrixTSym<float>& m) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTMatrixTSymLazy<float>::fRowLwb; Int_tTMatrixTSymLazy<float>::fRowUpb. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void THilbertMatrixTSym<Element> FillIn(TMatrixTSym<float>& m) const. » Last changed: root/matrix:$Id$ » Last generated: 2015-03-14 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THilbertMatrixTSym_float_.html:5796,Inherit,Inheritance,5796,root/html534/THilbertMatrixTSym_float_.html,https://root.cern,https://root.cern/root/html534/THilbertMatrixTSym_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame = ""pTV"";; RooRealVar obsvar(observablename.c_str(), ""observable of pTV"", 10, 600);; RooRealVar kSM(""kSM"", ""sm modifier"", 1.0);; RooRealVar cHq3(""cHq3"", ""EFT modifier"", -10.0, 10.0);; cHq3.setAttribute(""NewPhysics"", true);; RooRealVar cHl3(""cHl3"", ""EFT modifier"", -10.0, 10.0);; cHl3.setAttribute(""NewPhysics"", true);; RooRealVar cHDD(""cHDD"", ""EFT modifier"", -10.0, 10.0);; cHDD.setAttribute(""NewPhysics"", true);; ; // I n p u t s n e e d e d f o r c o n f i g; // ---------------------------------------------; std::string infilename = std::string(gROOT->GetTutorialDir()) + ""/roofit/input_histos_rf_lagrangianmorph.root"";; std::vector<std::string> samplelist = {""SM_NPsq0"", ""cHq3_NPsq1"", ""cHq3_NPsq2"", ""cHl3_NPsq1"",; ""cHl3_NPsq2"", ""cHDD_NPsq1"", ""cHDD_NPsq2"", ""cHl3_cHDD_NPsq2"",; ""cHq3_cHDD_NPsq2"", ""cHl3_cHq3_NPsq2""};; ; // S e t u p C o n f i g; // ---------------------------------------------; RooLagrangianMorphFunc::Config config;; config.fileName = infilename;; config.observableName = observablename;; config.folderNames = samplelist;; config.couplings.add(cHq3);; config.couplings.add(cHl3);; config.couplings.add(cHDD);; config.couplings.add(kSM);; ; // C r e a t e m o r p h i n g f u n c t i o n; // ---------------------------------------------; RooLagrangianMorphFunc morphfunc(""morphfunc"", ""morphed dist. of pTV"", config);; ; // C r e a t e p s e u d o d a t a h i s t o g r a m; // f o r f i t; // ---------------------------------------------; morphfunc.setParameter(""cHq3"", 0.01);; morphfunc.setParameter(""cHl3"", 1.0);; morphfunc.setParameter(""cHDD"", 0.2);; ; auto pseudo_hist = morphfunc.createTH1(""pseudo_hist"");; auto pseudo_dh = new RooDataHist(""pseudo_dh"", ""pseudo_dh"", RooArgList(obsvar), pseudo_hist);; ; // reset parameters to zeros before fit; morphfunc.setParameter(""cHq3"", 0.0);; morphfunc.setParameter(""cHl3"", 0.0);; morphfunc.setParameter(""cHDD"", 0.0);; ; // error set used as initial step size; cHq3.setError(0.1);; cHl3.setError(0.1);; cHDD.setError(0.1);; ; // W ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html:1855,config,config,1855,doc/master/rf712__lagrangianmorphfit_8C.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html,1,['config'],['config']
Modifiability,"ame = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); UInt_tMapFlag(Option_t* flag); Int_tMapOptions(const Int_t* kind). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Option_t*fFlagstransform flags; void*fIninput array; void*fKindtransform kinds in each dimension; Int_t*fNtransform sizes in each dimension; Int_tfNdimnumber of dimensions; void*fOutoutput array; void*fPlanfftw plan (the plan how to compute the transform); Int_tfTotalSizetotal size of the transform; static TStringTVirtualFFT::fgDefaultdefault transformer; static TVirtualFFT*TVirtualFFT::fgFFTcurrent transformer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFFTReal(); default. TFFTReal(Int_t n, Bool_t inPlace = kFALSE); For 1d transforms; n here is the physical size of the transform (see FFTW manual for more details). TFFTReal(Int_t ndim, Int_t* n, Bool_t inPlace = kFALSE); For multidimensional transforms; 1st parameter is the # of dimensions,; 2nd is the sizes (physical) of the transform in each dimension. ~TFFTReal(); clean-up. void Init(Option_t* flags, Int_t sign, const Int_t* kind); Creates the fftw-plan. NOTE: input and output arrays are overwritten during initialisation,; so don't set any points, before running this function!!!!!. 1st parameter:; Possible flag_options:; ""ES"" (from ""estimate"") - no time in preparing the transform, but probably sub-optimal; performance; ""M"" (from ""measure"") - some time spend in finding the optimal way to do the transform; ""P"" (from ""patient"") - more time spend in finding the optimal way to do the transform; ""EX"" (from ""exhaustive"") - the most optima",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFFTReal.html:9044,Inherit,Inheritance,9044,root/html532/TFFTReal.html,https://root.cern,https://root.cern/root/html532/TFFTReal.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TRecEvent::ERecEventTypekCmdEvent; static TRecEvent::ERecEventTypekExtraEvent; static TRecEvent::ERecEventTypekGuiEvent; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TTimefEventTimeTime of original event execution. Class Charts. Inheritance Chart:. TObject. ←; TRecEvent. ←. TRecCmdEvent. TRecExtraEvent. TRecGuiEvent. Function documentation; void ReplayEvent(Bool_t showMouseCursor = kTRUE); Replays (executes) the stored event again. ERecEventType GetType() const; Returns what kind of event it stores. TTime GetTime() const; Returns time of original execution of stored event. void SetTime(TTime t); Sets time of event execution. TRecorder & operator=(const TRecorder&). » Author: Katerina Opocenska 11/09/2008 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRecEvent.html:8461,Inherit,Inheritance,8461,root/html602/TRecEvent.html,https://root.cern,https://root.cern/root/html602/TRecEvent.html,1,['Inherit'],['Inheritance']
Modifiability,"ame = 0, const char *cmd = 0, Int_t pos = kRight, Int_t subpos = -1) allowing to select plugins (can be a macro or a command) to be executed, and where to embed the frame created by the plugin (tab and tab element). Examples:; create a new browser:; TBrowser b;; b#define b(i)Definition RSha256.hxx:100; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; create a new TCanvas in a new top right tab element:; b.ExecPlugin(""Canvas"", 0, ""new TCanvas()"");; create a new top right tab element embedding the TGMainFrame created by the macro 'myMacro.C':; b.ExecPlugin(""MyPlugin"", ""myMacro.C"");; create a new bottom tab element embedding the TGMainFrame created by the macro 'myMacro.C':; b.ExecPlugin(""MyPlugin"", ""myMacro.C"", 0, TRootBrowser::kBottom);; TRootBrowser::kBottom@ kBottomDefinition TRootBrowser.h:121; this browser implementation can be selected via the env Browser.Name in .rootrc, (TRootBrowser or TRootBrowserLite) the default being TRootBrowserLite a list of options (plugins) for the new TRootBrowser is also specified via the env 'Browser.Options' in .rootrc, the default being: FECI; Here is the list of available options:; F: File browser; E: Text Editor; H: HTML browser C: Canvas I: I/O redirection; P: Proof; G: GL viewer . Definition at line 54 of file TRootBrowser.h. Public Types; enum  EInsertPosition { kLeft; , kRight; , kBottom; };  ; enum  ENewBrowserMessages { ;   kBrowse = 11011; , kOpenFile; , kClone; , kHelpAbout; , ;   kHelpOnBrowser; , kHelpOnCanvas; , kHelpOnMenus; , kHelpOnGraphicsEd; , ;   kHelpOnObjects; , kHelpOnPS; , kHelpOnRemote; , kNewEditor; , ;   kNewCanvas; , kNewHtml; , kExecPluginMacro; , kExecPluginCmd; , ;   kCloseTab; , kCloseWindow; , kQuitRoot. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowser.html:1544,plugin,plugins,1544,doc/master/classTRootBrowser.html,https://root.cern,https://root.cern/doc/master/classTRootBrowser.html,1,['plugin'],['plugins']
Modifiability,"ame = nullptr, . bool ; verbose = true, . bool ; createOnTheFly = false . ). overridevirtual . Retrieve binning of this linear transformation. ; A RooLinearVar does not have its own binnings but uses linearly transformed binnings of the input variable. If a given binning exists on the input variable, it will also exist on this linear transformation, and a binning adaptor object is created on the fly. ; Implements RooAbsRealLValue.; Definition at line 206 of file RooLinearVar.cxx. ◆ getBinningNames(). std::list< std::string > RooLinearVar::getBinningNames ; (; ); const. overridevirtual . Get a list of all binning names. ; An empty name implies the default binning. A 0 pointer should be passed to getBinning in this case. ; Implements RooAbsLValue.; Definition at line 247 of file RooLinearVar.cxx. ◆ hasBinning(). bool RooLinearVar::hasBinning ; (; const char * ; name); const. overridevirtual . Returns true if binning with given name exists.If a given binning exists on the input variable, it will also exists on this linear transformation. ; Implements RooAbsRealLValue.; Definition at line 263 of file RooLinearVar.cxx. ◆ IsA(). TClass * RooLinearVar::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsRealLValue.; Definition at line 69 of file RooLinearVar.h. ◆ isJacobianOK(). bool RooLinearVar::isJacobianOK ; (; const RooArgSet & ; depList); const. overridevirtual . Returns true if Jacobian term associated with current expression tree is indeed constant. ; Reimplemented from RooAbsRealLValue.; Definition at line 145 of file RooLinearVar.cxx. ◆ jacobian(). double RooLinearVar::jacobian ; (; ); const. overridevirtual . Return value of Jacobian associated with the transformation. ; Reimplemented from RooAbsRealLValue.; Definition at line 169 of file RooLinearVar.cxx. ◆ operator=(). RooAbsArg & RooAbsRealLValue::operator= ; (; double ; newValue). virtual . Assignment operator from a double. ; Reimplemented from RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinearVar.html:72371,variab,variable,72371,doc/master/classRooLinearVar.html,https://root.cern,https://root.cern/doc/master/classRooLinearVar.html,1,['variab'],['variable']
Modifiability,"ame = x.frame(Title=""Projection on X with LLratio(y,z)>0.7"", Bins=40); dataSel.plotOn(frame); ; # Perform parallel projection using MC integration of pdf using given input dataSet.; # In self mode the data-weighted average of the pdf is calculated by splitting the; # input dataset in N equal pieces and calculating in parallel the weighted average; # one each subset. The N results of those calculations are then weighted into the; # final result; ; # Use four processes; model.plotOn(frame, ProjWData=dataSel, NumCPU=4); ; c = ROOT.TCanvas(""rf603_multicpu"", ""rf603_multicpu"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf603_multicpu.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- Command timer: Real time 0:00:00, CP time 0.130; [#1] INFO:Minimization -- Session timer: Real time 0:00:00, CP time 0.130; [#1] INFO:Minimization -- Command timer: Real time 0:00:00, CP time 0.010; [#1] INFO:Minimization -- Session timer: Real time 0:00:00, CP time 0.140, 2 slices; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf603_multicpu.py. tutorialsroofitrf603_multicpu.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf603__multicpu_8py.html:3789,variab,variables,3789,doc/master/rf603__multicpu_8py.html,https://root.cern,https://root.cern/doc/master/rf603__multicpu_8py.html,1,['variab'],['variables']
Modifiability,"ame OutContainer > ; double forward_backward (LayerContainer &layers, PassThrough &settingsAndBatch, ItWeight itWeightBegin, ItWeight itWeightEnd, ItGradient itGradientBegin, ItGradient itGradientEnd, size_t trainFromLayer, OutContainer &outputContainer, bool fetchOutput) const;  main NN computation function ;  ; template<typename LayerContainer , typename LayerPatternContainer > ; void forwardBatch (const LayerContainer &_layers, LayerPatternContainer &layerPatternData, std::vector< double > &valuesMean, std::vector< double > &valuesStdDev, size_t trainFromLayer) const;  ; template<typename LayerContainer > ; void forwardPattern (const LayerContainer &_layers, std::vector< LayerData > &layerData) const;  ; template<typename OutIterator > ; void initializeWeights (WeightInitializationStrategy eInitStrategy, OutIterator itWeight);  initialize the weights with the given strategy ;  ; size_t inputSize () const;  input size of the DNN ;  ; std::vector< Layer > & layers ();  returns the layers (structure) ;  ; const std::vector< Layer > & layers () const;  returns the layers (structure) ;  ; size_t numNodes (size_t trainingStartLayer=0) const;  returns the number of nodes in this net ;  ; size_t numWeights (size_t trainingStartLayer=0) const;  returns the number of weights in this net ;  ; template<typename Weights , typename PassThrough > ; double operator() (PassThrough &settingsAndBatch, const Weights &weights) const;  execute computation of the DNN for one mini-batch (used by the minimizer); no computation of gradients ;  ; template<typename Weights , typename PassThrough , typename OutContainer > ; double operator() (PassThrough &settingsAndBatch, const Weights &weights, ModeOutput eFetch, OutContainer &outputContainer) const;  execute computation of the DNN for one mini-batch; helper function ;  ; template<typename Weights , typename Gradients , typename PassThrough > ; double operator() (PassThrough &settingsAndBatch, Weights &weights, Gradients &gradients) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html:3389,layers,layers,3389,doc/master/classTMVA_1_1DNN_1_1Net.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html,1,['layers'],['layers']
Modifiability,"ame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooWorkspacePersistable container for RooFit projects.Definition RooWorkspace.h:43; RooWorkspace::Printvoid Print(Option_t *opts=nullptr) const overridePrint contents of the workspace.Definition RooWorkspace.cxx:2095; RooWorkspace::pdfRooAbsPdf * pdf(RooStringView name) constRetrieve p.d.f (RooAbsPdf) with given name. A null pointer is returned if not found.Definition RooWorkspace.cxx:1214; RooWorkspace::varRooRealVar * var(RooStringView name) constRetrieve real-valued variable (RooRealVar) with given name. A null pointer is returned if not found.Definition RooWorkspace.cxx:1232; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::ComponentsRooCmdArg Components(Args_t &&... argsOrArgSet)Definition RooGlobalFunc.h:128; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf509_wsinteractiveDefinition rf509_wsinteractive.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf509__wsinteractive_8C.html:6231,variab,variable,6231,doc/master/rf509__wsinteractive_8C.html,https://root.cern,https://root.cern/doc/master/rf509__wsinteractive_8C.html,1,['variab'],['variable']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TASPaletteEditor.h>. Inheritance diagram for TASPaletteEditor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TASPaletteEditor(). TASPaletteEditor::TASPaletteEditor ; (; TAttImage * ; attImage, . UInt_t ; w, . UInt_t ; h . ). Palette editor constructor. ; The palette editor allows the editing of the color palette of the image. ; Definition at line 83 of file TASPal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASPaletteEditor.html:36512,inherit,inherited,36512,doc/master/classTASPaletteEditor.html,https://root.cern,https://root.cern/doc/master/classTASPaletteEditor.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TEveBrowser.h>. Inheritance diagram for TEveBrowser:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveBrowser() [1/2]. TEveBrowser::TEveBrowser ; (; const TEveBrowser & ; ). private . ◆ TEveBrowser() [2/2]. TEveBrowser::TEveBrowser ; (; UInt_t ; w, . UInt_t ; h . ). Constructor. ; Definition at line 512 of file TEveBrowser.cxx. ◆ ~TEveBrowser(). TEveBrowser::~TEv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBrowser.html:43590,inherit,inherited,43590,doc/master/classTEveBrowser.html,https://root.cern,https://root.cern/doc/master/classTEveBrowser.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TEveParamList.h>. Inheritance diagram for TEveParamListEditor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveParamListEditor() [1/2]. TEveParamListEditor::TEveParamListEditor ; (; const TEveParamListEditor & ; ). private . ◆ TEveParamListEditor() [2/2]. TEveParamListEditor::TEveParamListEditor ; (; const TGWindow * ; p = nullptr, . Int_t ; width = 170, . Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveParamListEditor.html:32649,inherit,inherited,32649,doc/master/classTEveParamListEditor.html,https://root.cern,https://root.cern/doc/master/classTEveParamListEditor.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGCanvas.h>. Inheritance diagram for TGViewPort:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGViewPort() [1/2]. TGViewPort::TGViewPort ; (; const TGViewPort & ; ). privatedelete . ◆ TGViewPort() [2/2]. TGViewPort::TGViewPort ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGViewPort.html:29940,inherit,inherited,29940,doc/master/classTGViewPort.html,https://root.cern,https://root.cern/doc/master/classTGViewPort.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorDialog:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorDialog() [1/2]. TGColorDialog::TGColorDialog ; (; const TGColorDialog & ; ). privatedelete . ◆ TGColorDialog() [2/2]. TGColorDialog::TGColorDialog ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; m = nullptr, . Int_t * ; retc = nullptr, . Pixel_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorDialog.html:37468,inherit,inherited,37468,doc/master/classTGColorDialog.html,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TG16ColorSelector:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TG16ColorSelector() [1/2]. TG16ColorSelector::TG16ColorSelector ; (; const TG16ColorSelector & ; ). privatedelete . ◆ TG16ColorSelector() [2/2]. TG16ColorSelector::TG16ColorSelector ; (; const TGWindow * ; p = nullptr). TG16ColorSelector constructor. ; The TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTG16ColorSelector.html:30199,inherit,inherited,30199,doc/master/classTG16ColorSelector.html,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TGColorPopup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPopup() [1/2]. TGColorPopup::TGColorPopup ; (; const TGColorPopup & ; ). privatedelete . ◆ TGColorPopup() [2/2]. TGColorPopup::TGColorPopup ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; m = nullptr, . Pixel_t ; color = 0 . ). TGColorPopup constr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorPopup.html:30657,inherit,inherited,30657,doc/master/classTGColorPopup.html,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGComboBox.h>. Inheritance diagram for TGComboBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGComboBox() [1/3]. TGComboBox::TGComboBox ; (; const TGComboBox & ; ). privatedelete . ◆ TGComboBox() [2/3]. TGComboBox::TGComboBox ; (; const TGWindow * ; p = nullptr, . Int_t ; id = -1, . UInt_t ; options = kHorizontalFrame | kSunkenFrame | kDoubleBorder, . Pixel_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGComboBox.html:35150,inherit,inherited,35150,doc/master/classTGComboBox.html,https://root.cern,https://root.cern/doc/master/classTGComboBox.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGComboBox.h>. Inheritance diagram for TGComboBoxPopup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGComboBoxPopup() [1/2]. TGComboBoxPopup::TGComboBoxPopup ; (; const TGComboBoxPopup & ; ). privatedelete . ◆ TGComboBoxPopup() [2/2]. TGComboBoxPopup::TGComboBoxPopup ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . UInt_t ; options = kV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGComboBoxPopup.html:30365,inherit,inherited,30365,doc/master/classTGComboBoxPopup.html,https://root.cern,https://root.cern/doc/master/classTGComboBoxPopup.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGComboBox.h>. Inheritance diagram for TGFontTypeComboBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGFontTypeComboBox(). TGFontTypeComboBox::TGFontTypeComboBox ; (; const TGWindow * ; p = nullptr, . Int_t ; id = -1, . UInt_t ; options = kHorizontalFrame | kSunkenFrame | kDoubleBorder, . Pixel_t ; bask = GetWhitePixel() . ). Create a text font combo box. ; De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFontTypeComboBox.html:35185,inherit,inherited,35185,doc/master/classTGFontTypeComboBox.html,https://root.cern,https://root.cern/doc/master/classTGFontTypeComboBox.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGCommandPlugin.h>. Inheritance diagram for TGCommandPlugin:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGCommandPlugin(). TGCommandPlugin::TGCommandPlugin ; (; const TGWindow * ; p, . UInt_t ; w, . UInt_t ; h . ). TGCommandPlugin Constructor. ; Definition at line 43 of file TGCommandPlugin.cxx. ◆ ~TGCommandPlugin(). TGCommandPlugin::~TGCommandPlugin ; (; ). ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCommandPlugin.html:35269,inherit,inherited,35269,doc/master/classTGCommandPlugin.html,https://root.cern,https://root.cern/doc/master/classTGCommandPlugin.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGDockableFrame.h>. Inheritance diagram for TGDockableFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGDockableFrame() [1/2]. TGDockableFrame::TGDockableFrame ; (; const TGDockableFrame & ; ). privatedelete . ◆ TGDockableFrame() [2/2]. TGDockableFrame::TGDockableFrame ; (; const TGWindow * ; p = nullptr, . Int_t ; id = -1, . UInt_t ; options = kHorizontalFra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockableFrame.html:32705,inherit,inherited,32705,doc/master/classTGDockableFrame.html,https://root.cern,https://root.cern/doc/master/classTGDockableFrame.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGDockableFrame.h>. Inheritance diagram for TGUndockedFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGUndockedFrame() [1/2]. TGUndockedFrame::TGUndockedFrame ; (; const TGUndockedFrame & ; ). privatedelete . ◆ TGUndockedFrame() [2/2]. TGUndockedFrame::TGUndockedFrame ; (; const TGWindow * ; p = nullptr, . TGDockableFrame * ; dockable = nullptr . ). Create t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGUndockedFrame.html:35189,inherit,inherited,35189,doc/master/classTGUndockedFrame.html,https://root.cern,https://root.cern/doc/master/classTGUndockedFrame.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGFileBrowser.h>. Inheritance diagram for TGFileBrowser:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ mFiltered_t. typedef std::map<TGListTreeItem*, std::string> TGFileBrowser::mFiltered_t. Definition at line 42 of file TGFileBrowser.h. ◆ sLTI_i. typedef sLTI_t::iterator TGFileBrowser::sLTI_i. Definition at line 40 of file TGFileBrowser.h. ◆ sLTI_ri. typedef sLTI_t::revers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileBrowser.html:40867,inherit,inherited,40867,doc/master/classTGFileBrowser.html,https://root.cern,https://root.cern/doc/master/classTGFileBrowser.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGFileDialog.h>. Inheritance diagram for TGFileDialog:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGFileDialog() [1/2]. TGFileDialog::TGFileDialog ; (; const TGFileDialog & ; ). privatedelete . ◆ TGFileDialog() [2/2]. TGFileDialog::TGFileDialog ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; main = nullptr, . EFileDialogMode ; dlg_type = kFDOpen, . TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileDialog.html:36931,inherit,inherited,36931,doc/master/classTGFileDialog.html,https://root.cern,https://root.cern/doc/master/classTGFileDialog.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGFontDialog.h>. Inheritance diagram for TGFontDialog:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGFontDialog(). TGFontDialog::TGFontDialog ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; t = nullptr, . FontProp_t * ; fontProp = nullptr, . const TString & ; sample = """", . char ** ; fontList = nullptr, . Bool_t ; wait = kTRUE . ). Create font dialog. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFontDialog.html:36933,inherit,inherited,36933,doc/master/classTGFontDialog.html,https://root.cern,https://root.cern/doc/master/classTGFontDialog.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGFrame.h>. Inheritance diagram for TGHeaderFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGHeaderFrame() [1/2]. TGHeaderFrame::TGHeaderFrame ; (; const TGHeaderFrame & ; ). privatedelete . ◆ TGHeaderFrame() [2/2]. TGHeaderFrame::TGHeaderFrame ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . UInt_t ; options = kChildFrame, . Pixel_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHeaderFrame.html:30843,inherit,inherited,30843,doc/master/classTGHeaderFrame.html,https://root.cern,https://root.cern/doc/master/classTGHeaderFrame.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGFrame.h>. Inheritance diagram for TGMainFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. protected . EnumeratorkDontCallClose . Definition at line 400 of file TGFrame.h. Constructor & Destructor Documentation. ◆ TGMainFrame() [1/2]. TGMainFrame::TGMainFrame ; (; const TGMainFrame & ; ). privatedelete . ◆ TGMainFrame() [2/2]. TGMainF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMainFrame.html:33526,inherit,inherited,33526,doc/master/classTGMainFrame.html,https://root.cern,https://root.cern/doc/master/classTGMainFrame.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGFrame.h>. Inheritance diagram for TGTransientFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EPlacement. enum TGTransientFrame::EPlacement. EnumeratorkCenter ; kLeft ; kRight ; kTop ; kBottom ; kTopLeft ; kTopRight ; kBottomLeft ; kBottomRight . Definition at line 511 of file TGFrame.h. Constructor & Destructor Documentation. ◆ TGTransientFrame() [1/2]. TGTransie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTransientFrame.html:34460,inherit,inherited,34460,doc/master/classTGTransientFrame.html,https://root.cern,https://root.cern/doc/master/classTGTransientFrame.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGHtml.h>. Inheritance diagram for TGHtml:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. protected . EnumeratorkM_FILE_SAVEAS ; kM_FILE_PRINT . Definition at line 1132 of file TGHtml.h. Constructor & Destructor Documentation. ◆ TGHtml(). TGHtml::TGHtml ; (; const TGWindow * ; p, . int ; w, . int ; h, . int ; id = -1 . ). HTML Widget const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtml.html:50371,inherit,inherited,50371,doc/master/classTGHtml.html,https://root.cern,https://root.cern/doc/master/classTGHtml.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGLClipSetEditor.h>. Inheritance diagram for TGLClipSetEditor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLClipSetEditor() [1/2]. TGLClipSetEditor::TGLClipSetEditor ; (; const TGLClipSetEditor & ; ). privatedelete . ◆ TGLClipSetEditor() [2/2]. TGLClipSetEditor::TGLClipSetEditor ; (; const TGWindow * ; p = nullptr, . Int_t ; width = 170, . Int_t ; height = 30,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLClipSetEditor.html:31463,inherit,inherited,31463,doc/master/classTGLClipSetEditor.html,https://root.cern,https://root.cern/doc/master/classTGLClipSetEditor.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGLClipSetEditor.h>. Inheritance diagram for TGLClipSetSubEditor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLClipSetSubEditor() [1/2]. TGLClipSetSubEditor::TGLClipSetSubEditor ; (; const TGLClipSetSubEditor & ; ). privatedelete . ◆ TGLClipSetSubEditor() [2/2]. TGLClipSetSubEditor::TGLClipSetSubEditor ; (; const TGWindow * ; p). Constructor. ; Definition at l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLClipSetSubEditor.html:30800,inherit,inherited,30800,doc/master/classTGLClipSetSubEditor.html,https://root.cern,https://root.cern/doc/master/classTGLClipSetSubEditor.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGListBox.h>. Inheritance diagram for TGListBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGListBox() [1/2]. TGListBox::TGListBox ; (; const TGListBox & ; ). privatedelete . ◆ TGListBox() [2/2]. TGListBox::TGListBox ; (; const TGWindow * ; p = nullptr, . Int_t ; id = -1, . UInt_t ; options = kSunkenFrame | kDoubleBorder, . Pixel_t ; back = GetWhitePixel() . )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListBox.html:34898,inherit,inherited,34898,doc/master/classTGListBox.html,https://root.cern,https://root.cern/doc/master/classTGListBox.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGMdiDecorFrame.h>. Inheritance diagram for TGMdiButtons:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGMdiButtons(). TGMdiButtons::TGMdiButtons ; (; const TGWindow * ; p, . const TGWindow * ; titlebar . ). TGMdiButtons constructor. ; the TGMdiButtons is the frame containing MDI picture buttons like minimize, maximize, restore, close and help. ; Definition at li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiButtons.html:29635,inherit,inherited,29635,doc/master/classTGMdiButtons.html,https://root.cern,https://root.cern/doc/master/classTGMdiButtons.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGMdiDecorFrame.h>. Inheritance diagram for TGMdiDecorFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkMdiBorderWidth . Definition at line 254 of file TGMdiDecorFrame.h. Constructor & Destructor Documentation. ◆ TGMdiDecorFrame(). TGMdiDecorFrame::TGMdiDecorFrame ; (; TGMdiMainFrame * ; main, . TGMdiFrame * ; frame, . Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiDecorFrame.html:32624,inherit,inherited,32624,doc/master/classTGMdiDecorFrame.html,https://root.cern,https://root.cern/doc/master/classTGMdiDecorFrame.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGMdiDecorFrame.h>. Inheritance diagram for TGMdiTitleBar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGMdiTitleBar(). TGMdiTitleBar::TGMdiTitleBar ; (; const TGWindow * ; p, . const TGWindow * ; mdiwin, . const char * ; name = ""Untitled"" . ). protected . TGMdiTitleBar constructor. ; the TGMdiTitleBar is the frame containing a title (window name) an icon and MD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiTitleBar.html:31297,inherit,inherited,31297,doc/master/classTGMdiTitleBar.html,https://root.cern,https://root.cern/doc/master/classTGMdiTitleBar.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGMdiFrame.h>. Inheritance diagram for TGMdiFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. protected . EnumeratorkDontCallClose . Definition at line 48 of file TGMdiFrame.h. Constructor & Destructor Documentation. ◆ TGMdiFrame(). TGMdiFrame::TGMdiFrame ; (; TGMdiMainFrame * ; main, . Int_t ; w, . Int_t ; h, . UInt_t ; options = 0, .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiFrame.html:30491,inherit,inherited,30491,doc/master/classTGMdiFrame.html,https://root.cern,https://root.cern/doc/master/classTGMdiFrame.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGMdiMenu.h>. Inheritance diagram for TGMdiMenuBar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGMdiMenuBar(). TGMdiMenuBar::TGMdiMenuBar ; (; const TGWindow * ; p, . Int_t ; w = 1, . Int_t ; h = 20 . ). TGMdiMenuBar constructor. ; Definition at line 54 of file TGMdiMenu.cxx. ◆ ~TGMdiMenuBar(). TGMdiMenuBar::~TGMdiMenuBar ; (; ). override . TGMdiMenuBar destruc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiMenuBar.html:30209,inherit,inherited,30209,doc/master/classTGMdiMenuBar.html,https://root.cern,https://root.cern/doc/master/classTGMdiMenuBar.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGMenu.h>. Inheritance diagram for TGMenuBar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGMenuBar() [1/2]. TGMenuBar::TGMenuBar ; (; const TGMenuBar & ; ). privatedelete . ◆ TGMenuBar() [2/2]. TGMenuBar::TGMenuBar ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 60, . UInt_t ; h = 20, . UInt_t ; options = kHorizontalFrame | kRaisedFrame . ). Create a menu b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMenuBar.html:34189,inherit,inherited,34189,doc/master/classTGMenuBar.html,https://root.cern,https://root.cern/doc/master/classTGMenuBar.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGMsgBox.h>. Inheritance diagram for TGMsgBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGMsgBox() [1/3]. TGMsgBox::TGMsgBox ; (; const TGMsgBox & ; ). privatedelete . ◆ TGMsgBox() [2/3]. TGMsgBox::TGMsgBox ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; main = nullptr, . const char * ; title = nullptr, . const char * ; msg = nullptr, . const TGPict",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMsgBox.html:36672,inherit,inherited,36672,doc/master/classTGMsgBox.html,https://root.cern,https://root.cern/doc/master/classTGMsgBox.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGNumberEntry.h>. Inheritance diagram for TGNumberEntry:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGNumberEntry() [1/2]. TGNumberEntry::TGNumberEntry ; (; const TGNumberEntry & ; ). privatedelete . ◆ TGNumberEntry() [2/2]. TGNumberEntry::TGNumberEntry ; (; const TGWindow * ; parent = nullptr, . Double_t ; val = 0, . Int_t ; digitwidth = 5, . Int_t ; id = -1, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntry.html:36831,inherit,inherited,36831,doc/master/classTGNumberEntry.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntry.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGPack.h>. Inheritance diagram for TGPack:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGPack() [1/3]. TGPack::TGPack ; (; const TGPack & ; ). privatedelete . ◆ TGPack() [2/3]. TGPack::TGPack ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . UInt_t ; options = 0, . Pixel_t ; back = GetDefaultFrameBackground() . ). Constructor. ; Definiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGPack.html:31816,inherit,inherited,31816,doc/master/classTGPack.html,https://root.cern,https://root.cern/doc/master/classTGPack.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGShapedFrame.h>. Inheritance diagram for TGShapedFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGShapedFrame() [1/2]. TGShapedFrame::TGShapedFrame ; (; const TGShapedFrame & ; ). privatedelete . ◆ TGShapedFrame() [2/2]. TGShapedFrame::TGShapedFrame ; (; const char * ; fname = nullptr, . const TGWindow * ; p = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGShapedFrame.html:29687,inherit,inherited,29687,doc/master/classTGShapedFrame.html,https://root.cern,https://root.cern/doc/master/classTGShapedFrame.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGShutter.h>. Inheritance diagram for TGShutter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGShutter() [1/2]. TGShutter::TGShutter ; (; const TGShutter & ; ). privatedelete . ◆ TGShutter() [2/2]. TGShutter::TGShutter ; (; const TGWindow * ; p = nullptr, . UInt_t ; options = kSunkenFrame . ). Create shutter frame. ; Definition at line 38 of file TGShutter.cxx. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGShutter.html:31080,inherit,inherited,31080,doc/master/classTGShutter.html,https://root.cern,https://root.cern/doc/master/classTGShutter.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGShutter.h>. Inheritance diagram for TGShutterItem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGShutterItem() [1/2]. TGShutterItem::TGShutterItem ; (; const TGShutterItem & ; ). privatedelete . ◆ TGShutterItem() [2/2]. TGShutterItem::TGShutterItem ; (; const TGWindow * ; p = nullptr, . TGHotString * ; s = nullptr, . Int_t ; id = -1, . UInt_t ; options = 0 . )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGShutterItem.html:31650,inherit,inherited,31650,doc/master/classTGShutterItem.html,https://root.cern,https://root.cern/doc/master/classTGShutterItem.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGSplitFrame.h>. Inheritance diagram for TGSplitFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGSplitFrame() [1/2]. TGSplitFrame::TGSplitFrame ; (; const TGSplitFrame & ; ). privatedelete . ◆ TGSplitFrame() [2/2]. TGSplitFrame::TGSplitFrame ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . UInt_t ; options = 0 . ). Default construct",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitFrame.html:32166,inherit,inherited,32166,doc/master/classTGSplitFrame.html,https://root.cern,https://root.cern/doc/master/classTGSplitFrame.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGTable.h>. Inheritance diagram for TGTable:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGTable(). TGTable::TGTable ; (; const TGWindow * ; p = nullptr, . Int_t ; id = 0, . TVirtualTableInterface * ; interface = nullptr, . UInt_t ; nrows = 50, . UInt_t ; ncolumns = 20 . ). TGTable constuctor. ; Definition at line 155 of file TGTable.cxx. ◆ ~TGTable(). TGTable::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTable.html:44187,inherit,inherited,44187,doc/master/classTGTable.html,https://root.cern,https://root.cern/doc/master/classTGTable.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGTableContainer.h>. Inheritance diagram for TGTableHeaderFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGTableHeaderFrame(). TGTableHeaderFrame::TGTableHeaderFrame ; (; const TGWindow * ; p, . TGTable * ; table = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . EHeaderType ; type = kColumnHeader, . UInt_t ; option = 0 . ). TGTableHeaderFrame constructor. ; D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableHeaderFrame.html:29820,inherit,inherited,29820,doc/master/classTGTableHeaderFrame.html,https://root.cern,https://root.cern/doc/master/classTGTableHeaderFrame.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGTextEditDialogs.h>. Inheritance diagram for TGGotoDialog:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGGotoDialog(). TGGotoDialog::TGGotoDialog ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; main = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . Long_t * ; ret_code = nullptr, . UInt_t ; options = kVerticalFrame . ). Create a dialog to GoTo a specifi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGotoDialog.html:35478,inherit,inherited,35478,doc/master/classTGGotoDialog.html,https://root.cern,https://root.cern/doc/master/classTGGotoDialog.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGTextEditDialogs.h>. Inheritance diagram for TGPrintDialog:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGPrintDialog(). TGPrintDialog::TGPrintDialog ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; main = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . char ** ; printerName = nullptr, . char ** ; printProg = nullptr, . Int_t * ; ret_code = nullptr, . U",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGPrintDialog.html:36100,inherit,inherited,36100,doc/master/classTGPrintDialog.html,https://root.cern,https://root.cern/doc/master/classTGPrintDialog.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGTextEditor.h>. Inheritance diagram for TGTextEditor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGTextEditor() [1/2]. TGTextEditor::TGTextEditor ; (; const char * ; filename = nullptr, . const TGWindow * ; p = nullptr, . UInt_t ; w = 900, . UInt_t ; h = 600 . ). TGTextEditor constructor with file name as first argument. ; Definition at line 233 of file TGText",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEditor.html:41150,inherit,inherited,41150,doc/master/classTGTextEditor.html,https://root.cern,https://root.cern/doc/master/classTGTextEditor.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGToolBar.h>. Inheritance diagram for TGToolBar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGToolBar() [1/2]. TGToolBar::TGToolBar ; (; const TGToolBar & ; ). privatedelete . ◆ TGToolBar() [2/2]. TGToolBar::TGToolBar ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . UInt_t ; options = kHorizontalFrame, . Pixel_t ; back = GetDefaultFram",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGToolBar.html:30887,inherit,inherited,30887,doc/master/classTGToolBar.html,https://root.cern,https://root.cern/doc/master/classTGToolBar.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGView.h>. Inheritance diagram for TGView:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkNoHSB ; kNoVSB . Definition at line 28 of file TGView.h. ◆ anonymous enum. anonymous enum. EnumeratorkHorizontal ; kVertical . Definition at line 29 of file TGView.h. Constructor & Destructor Documentation. ◆ TGView() [1/2]. TGView::TGView ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGView.html:33560,inherit,inherited,33560,doc/master/classTGView.html,https://root.cern,https://root.cern/doc/master/classTGView.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGedFrame.h>. Inheritance diagram for TGedFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGedFrame() [1/2]. TGedFrame::TGedFrame ; (; const TGedFrame & ; ). privatedelete . ◆ TGedFrame() [2/2]. TGedFrame::TGedFrame ; (; const TGWindow * ; p = nullptr, . Int_t ; width = 140, . Int_t ; height = 30, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame.html:30931,inherit,inherited,30931,doc/master/classTGedFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGeoManagerEditor.h>. Inheritance diagram for TGeoManagerEditor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoManagerEditor(). TGeoManagerEditor::TGeoManagerEditor ; (; const TGWindow * ; p = nullptr, . Int_t ; width = 140, . Int_t ; height = 30, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). Constructor for manager edit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManagerEditor.html:38517,inherit,inherited,38517,doc/master/classTGeoManagerEditor.html,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofProgressMemoryPlot.h>. Inheritance diagram for TProofProgressMemoryPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofProgressMemoryPlot(). TProofProgressMemoryPlot::TProofProgressMemoryPlot ; (; TProofProgressDialog * ; d, . Int_t ; w = 700, . Int_t ; h = 300 . ). Main constructor. ; Definition at line 54 of file TProofProgressMemoryPlot.cxx. ◆ ~TPro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofProgressMemoryPlot.html:35919,inherit,inherited,35919,doc/master/classTProofProgressMemoryPlot.html,https://root.cern,https://root.cern/doc/master/classTProofProgressMemoryPlot.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TRootBrowser.h>. Inheritance diagram for TRootBrowser:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EInsertPosition. enum TRootBrowser::EInsertPosition. EnumeratorkLeft ; kRight ; kBottom . Definition at line 120 of file TRootBrowser.h. ◆ ENewBrowserMessages. enum TRootBrowser::ENewBrowserMessages. EnumeratorkBrowse ; kOpenFile ; kClone ; kHelpAbout ; kHelpOnBrowser ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowser.html:43151,inherit,inherited,43151,doc/master/classTRootBrowser.html,https://root.cern,https://root.cern/doc/master/classTRootBrowser.html,4,['inherit'],['inherited']
Modifiability,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TRootBrowserLite.h>. Inheritance diagram for TRootBrowserLite:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRootBrowserLite() [1/3]. TRootBrowserLite::TRootBrowserLite ; (; const TRootBrowserLite & ; ). privatedelete . ◆ TRootBrowserLite() [2/3]. TRootBrowserLite::TRootBrowserLite ; (; TBrowser * ; b = nullptr, . const char * ; title = ""ROOT Browser"", . UInt_t ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowserLite.html:41416,inherit,inherited,41416,doc/master/classTRootBrowserLite.html,https://root.cern,https://root.cern/doc/master/classTRootBrowserLite.html,4,['inherit'],['inherited']
Modifiability,"ame fMain ;  ; TList * fList;  list of frames to arrange ;  ; TGCompositeFrame * fMain;  container frame ;  ; Int_t fTHeight;  text height ;  ; Int_t fTWidth;  text width of a default character ""1234567890"" / 10 ;  ;  Protected Attributes inherited from TGLayoutManager; Bool_t fModified;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGXYLayout.h>. Inheritance diagram for TGXYLayout:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGXYLayout() [1/2]. TGXYLayout::TGXYLayout ; (; const TGXYLayout & ; xyl). protected . copy constructor ; Definition at line 200 of file TGXYLayout.cxx. ◆ TGXYLayout() [2/2]. TGXYLayout::TGXYLayout ; (; TGCompositeFrame * ; main). Constructor. The main is the frame for which this layout manager works. ; Definition at line 172 of file TGXYLayout.cxx. Member Function Documentation. ◆ Class(). static TClass * TGXYLayout::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGXYLayout::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGXYLayout::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 83 of file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGXYLayout.html:12586,inherit,inherited,12586,doc/master/classTGXYLayout.html,https://root.cern,https://root.cern/doc/master/classTGXYLayout.html,1,['inherit'],['inherited']
Modifiability,"ame from weight file. TMVA::IMethod* BookMVA(TMVA::Types::EMVA method, const TString& weightfile); books MVA method from weightfile. TMVA::IMethod* BookMVA(TMVA::Types::EMVA methodType, const char* xmlstr). Double_t EvaluateMVA( const std::vector<Float_t>& inputVec, const TString& methodTag, Double_t aux ); Evaluate a std::vector<float> of input data for a given method; The parameter aux is obligatory for the cuts method where it represents the efficiency cutoff. Double_t EvaluateMVA( const std::vector<Double_t>& inputVec, const TString& methodTag, Double_t aux ); Evaluate a std::vector<double> of input data for a given method; The parameter aux is obligatory for the cuts method where it represents the efficiency cutoff. Double_t EvaluateMVA(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. Double_t EvaluateMVA(TMVA::MethodBase* method, Double_t aux = 0); evaluates the MVA. const std::vector< Float_t >& EvaluateRegression(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. const std::vector< Float_t >& EvaluateRegression(TMVA::MethodBase* method, Double_t aux = 0); evaluates the regression MVA; check for NaN in event data: (note: in the factory, this check was done already at the creation of the datasets, hence; it is not again checked in each of these subsequet calls.. Float_t EvaluateRegression(UInt_t tgtNumber, const TString& methodTag, Double_t aux = 0); evaluates the regression MVA. const std::vector< Float_t >& EvaluateMulticlass(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. const std::vector< Float_t >& EvaluateMulticlass(TMVA::MethodBase* method, Double_t aux = 0); evaluates the multiclass MVA; check for NaN in event data: (note: in the factory, this check was done already at the creation of the datasets, hence; it is not again checked in each of these subsequet calls.. Float_t EvaluateMulticlass(UInt_t clsNumber, const TString& ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Reader.html:13302,variab,variables,13302,root/html534/TMVA__Reader.html,https://root.cern,https://root.cern/root/html534/TMVA__Reader.html,6,['variab'],['variables']
Modifiability,"ame in given list. ;  ; bool changePointer (std::unordered_map< RooAbsArg *, RooAbsArg * > const &replacements) override;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from RooAbsProxy; virtual void changeNormSet (const RooArgSet *newNormSet);  Destructor. ;  . Protected Attributes; RooAbsArg * _arg = nullptr;  Pointer to content of proxy. ;  ; bool _isFund = true;  If true proxy contains an lvalue. ;  ; bool _ownArg = false;  If true proxy owns contents. ;  ; RooAbsArg * _owner = nullptr;  Pointer to owner of proxy. ;  ; bool _shapeServer = false;  If true contents is shape server of owner. ;  ; bool _valueServer = false;  If true contents is value server of owner. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from RooAbsProxy; RooArgSet * _nset = nullptr;  ! Normalization set to be used for evaluation of RooAbsPdf contents ;  . Friends; class RooRealIntegral;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooArgProxy.h>. Inheritance diagram for RooArgProxy:. This browser is not able",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooArgProxy.html:13527,inherit,inherited,13527,doc/master/classRooArgProxy.html,https://root.cern,https://root.cern/doc/master/classRooArgProxy.html,2,['inherit'],['inherited']
Modifiability,"ame is appended or, if; the URL contains %f, %f is replaced by the file name.; All values default to """".; Examples:; Root.Html.Homepage: http://www.enricos-home.it; Root.Html.SearchEngine: http://root.cern.ch/root/Search.phtml; Root.Html.Search: http://www.google.com/search?q=%s+site%3A%u; II.8 HTML Charset; XHTML 1.0 transitional recommends the specification of the charset in the; content type meta tag, see e.g. http://www.w3.org/TR/2002/REC-xhtml1-20020801/; THtml generates it for the HTML output files. It defaults to ISO-8859-1, and; can be changed using Root.Html.Charset.; Example:; Root.Html.Charset: EUC-JP; III. Documentation syntax; III.1 Class description; A class description block, which must be placed before the first; member function, has a following form:. ////////////////////////////////////////////////////////////////; // //; // TMyClass //; // //; // This is the description block. //; // //; ////////////////////////////////////////////////////////////////. The environment variable Root.Html.Description; (see: TEnv) contains; the delimiter string (default value: //_________________). It means; that you can also write your class description block like this:. //_____________________________________________________________; // A description of the class starts with the line above, and; // will take place here !; //. Note that everything until the first non-commented line is considered; as a valid class description block.; III.2 Class index; All classes to be documented will have an entry in the ClassIndex.html,; showing their name with a link to their documentation page and a miniature; description. This discription for e.g. the class MyClass has to be given; in MyClass's header as a comment right after ClassDef(MyClass, n).; III.3 Method documentation; A member function description block starts immediately after '{'; and looks like this:. void TWorld::HelloWorldFunc(string *text); {; // This is an example of description for the; // TWorld member function;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THtml.html:9460,variab,variable,9460,root/html528/THtml.html,https://root.cern,https://root.cern/root/html528/THtml.html,18,['variab'],['variable']
Modifiability,"ame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static Bool_t fgIsFolder = kFALSE;  Indicates if canvas can be browsed as a folder. ;  ;  Static Protected Attributes inherited from TPad; static Int_t fgMaxPickDistance = 5;  Maximum Pick Distance. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TCanvas (const TCanvas &canvas)=delete;  ; void Build ();  Build a canvas. Called by all constructors. ;  ; void CopyPixmaps () override;  Copy the canvas pixmap of the pad to the canvas. ;  ; void CreatePainter ();  Probably, TPadPainter must be placed in a separate ROOT module - ""padpainter"" (the same as ""histpainter""). ;  ; void DrawEventStatus (Int_t event, Int_t x, Int_t y, TObject *selected);  Report name and title of primitive below the cursor. ;  ; TCanvas & operator= (const TCanvas &rhs)=delete;  ; void RunAutoExec ();  Execute the list of TExecs in the current pad. ;  . Friends; class TCanvasImp;  ; class TInterpreter;  ; class TThread;  ; class TWebCanvas;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:60705,inherit,inherited,60705,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,2,['inherit'],['inherited']
Modifiability,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSPlot.html:18064,inherit,inherits,18064,doc/master/classTSPlot.html,https://root.cern,https://root.cern/doc/master/classTSPlot.html,1,['inherit'],['inherits']
Modifiability,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote.html:10251,inherit,inherits,10251,doc/master/classTApplicationRemote.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote.html,1,['inherit'],['inherits']
Modifiability,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBranchArray.html:7838,inherit,inherits,7838,doc/master/classTGeoBranchArray.html,https://root.cern,https://root.cern/doc/master/classTGeoBranchArray.html,4,['inherit'],['inherits']
Modifiability,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFSFrameElement.html:4744,inherit,inherits,4744,doc/master/classTGFSFrameElement.html,https://root.cern,https://root.cern/doc/master/classTGFSFrameElement.html,2,['inherit'],['inherits']
Modifiability,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLDocument.html:4973,inherit,inherits,4973,doc/master/classTXMLDocument.html,https://root.cern,https://root.cern/doc/master/classTXMLDocument.html,434,['inherit'],['inherits']
Modifiability,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TSchemaRule.html:9678,inherit,inherits,9678,doc/v632/classROOT_1_1TSchemaRule.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TSchemaRule.html,25,['inherit'],['inherits']
Modifiability,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:4526,inherit,inherits,4526,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html,1,['inherit'],['inherits']
Modifiability,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structRooHelpers_1_1WrapIntoTObject.html:4306,inherit,inherits,4306,doc/master/structRooHelpers_1_1WrapIntoTObject.html,https://root.cern,https://root.cern/doc/master/structRooHelpers_1_1WrapIntoTObject.html,54,['inherit'],['inherits']
Modifiability,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInspectorObject.html:4450,inherit,inherits,4450,doc/master/classTInspectorObject.html,https://root.cern,https://root.cern/doc/master/classTInspectorObject.html,1,['inherit'],['inherits']
Modifiability,"ame of the selector to be run; TStringTProofBenchRun::fSelOptionOption field for processing the selector. private:. TCanvas*fCanvascanvas for performance plots; Int_tfDebugdebug switch; TDirectory*fDirProofBenchdirectory for proof outputs; Int_tfDrawdraw switch; TPBHistType*fHistTypehistogram type; TH2*fHist_perfstat_event; TList*fListPerfPlotslist of performance plots; Long64_tfNEventsnumber of events to generate; Int_tfNHistsnumber of histograms; Int_tfNTriesnumber of tries; TStringfNamename of CPU run; TProofNodes*fNodesnode information; TLegend*fNormLegendLegend for norms; TProfile*fNorm_perfstat_evtmax; TProfile*fNorm_queryresult_event; TLegend*fProfLegendLegend for profiles; TProfile*fProfile_cpu_eff; TProfile*fProfile_perfstat_event; TProfile*fProfile_perfstat_evtmax; TProfile*fProfile_queryresult_event; Int_tfStartstart number of workers to scan; Int_tfSteptest to be performed every fStep workers; Int_tfStopstop number of workers to scan. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofBenchRunCPU(TPBHistType* histtype = 0, Int_t nhists = 16, TDirectory* dirproofbench = 0, TProof* proof = 0, TProofNodes* nodes = 0, Long64_t nevents = 1000000, Int_t ntries = 2, Int_t start = 1, Int_t stop = -1, Int_t step = 1, Int_t draw = 0, Int_t debug = 0); Default constructor. ~TProofBenchRunCPU(); Destructor. void BuildHistos(Int_t start, Int_t stop, Int_t step, Bool_t nx); Build histograms, profiles and graphs needed for this run. void Run(Long64_t nevents, Int_t start, Int_t stop, Int_t step, Int_t ntries, Int_t debug, Int_t draw); Run benchmark; Input parameters; nevents: Number of events to run per file. When it is -1, use data member fNEvents.; start: Start scan with 'start' workers. When it is -1, use data member fStart.; When 0, the same number of workers are activated on all nodes.; stop: Stop scan at 'stop' workers. When it is -1 , use data member fStop.; step: Scan every 'step' workers. When it is -1, use data mem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofBenchRunCPU.html:8382,Inherit,Inheritance,8382,root/html602/TProofBenchRunCPU.html,https://root.cern,https://root.cern/root/html602/TProofBenchRunCPU.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGUndockedFrame (const TGUndockedFrame &)=delete;  ; TGUndockedFrame & operator= (const TGUndockedFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGUndockedFrame.html:31260,inherit,inherited,31260,doc/master/classTGUndockedFrame.html,https://root.cern,https://root.cern/doc/master/classTGUndockedFrame.html,1,['inherit'],['inherited']
Modifiability,"ame with spaces replaces by '+'. Non-alphanumerical characters are printed out behind Name. Example:; // Author: Enrico Fermi appears in the source file. THtml will generate the link http://consult.cern.ch/xwho/people?Enrico+Fermi. This works well for people at CERN. Name <link> Info. ; THtml will generate an HTML link for Name as specified by link and print Info behind Name. Example:; // Author: Enrico Fermi <http://www.enricos-home.it&gt; or; // Author: Enrico Fermi <enric.nosp@m.o@fn.nosp@m.al.go.nosp@m.v> in the source file. That's world compatible. . Example (with defaults given):. Root.Html.Author: // Author:; Root.Html.LastUpdate: // @(#); Root.Html.Copyright: * Copyright; Root.Html.XWho: http://consult.cern.ch/xwho/people?II.6 Header and footer; THtml generates a default header and footer for all pages. You can specify your own versions with the configuration variables Root.Html.Header and Root.Html.Footer, or by calling SetHeader(), SetFooter(). Both variables default to """", using the standard Root versions. If it has a ""+"" appended, THtml will write both versions (user and root) to a file, for the header in the order 1st root, 2nd user, and for the footer 1st user, 2nd root (the root versions containing ""&lt;html&gt;"" and </html> tags, resp).; If you want to replace root's header you have to write a file containing all HTML elements necessary starting with the <doctype> tag and ending with (and including) the <body> tag. If you add your header it will be added directly after Root's <body> tag. Any occurrence of the string TITLE% in the user's header file will be replaced by a sensible, automatically generated title. If the header is generated for a class, occurrences of CLASS% will be replaced by the current class's name, SRCFILE% and INCFILE% by the name of the source and header file, resp. (as given by TClass::GetImplFileName(), TClass::GetDeclFileName()). If the header is not generated for a class, they will be replaced by """".; Root's footer starts with",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTHtml.html:6815,variab,variables,6815,doc/v632/classTHtml.html,https://root.cern,https://root.cern/doc/v632/classTHtml.html,2,['variab'],['variables']
Modifiability,"ame workflow processing about 300 MB of simulated events and data.; 14##; 15## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons_spec.json).; 16##; 17## \macro_image; 18## \macro_code; 19## \macro_output; 20##; 21## \date March 2020, August 2022, August 2023; 22## \authors Stefan Wunsch (KIT, CERN), Julia Mathe (CERN), Marta Czurylo (CERN); 23 ; 24import ROOT; 25import os; 26 ; 27# Enable Multi-threaded mode; 28ROOT.EnableImplicitMT(); 29 ; 30# Create the RDataFrame from the spec json file. The df106_HiggsToFourLeptons_spec.json is provided in the same folder as this tutorial; 31dataset_spec = os.path.join(ROOT.gROOT.GetTutorialsDir(), ""dataframe"", ""df106_HiggsToFourLeptons_spec.json""); 32df = ROOT.RDF.Experimental.FromSpec(dataset_spec) # Creates a single dataframe for all the samples; 33 ; 34# Add the ProgressBar feature; 35ROOT.RDF.Experimental.AddProgressBar(df); 36 ; 37# Access metadata information that is stored in the JSON config file of the RDataFrame.; 38# The metadata contained in the JSON file is accessible within a `DefinePerSample` call, through the `RSampleInfo` class.; 39df = df.DefinePerSample(""xsecs"", 'rdfsampleinfo_.GetD(""xsecs"")'); 40df = df.DefinePerSample(""lumi"", 'rdfsampleinfo_.GetD(""lumi"")'); 41df = df.DefinePerSample(""sumws"", 'rdfsampleinfo_.GetD(""sumws"")'); 42df = df.DefinePerSample(""sample_category"", 'rdfsampleinfo_.GetS(""sample_category"")'); 43 ; 44# We must further apply an MC correction for the ZZ decay due to missing gg->ZZ processes.; 45ROOT.gInterpreter.Declare(; 46 """"""; 47float scale(unsigned int slot, const ROOT::RDF::RSampleInfo &id){; 48 return id.Contains(""mc_363490.llll.4lep.root"") ? 1.3f : 1.0f;; 49}; 50""""""; 51); 52 ; 53df = df.DefinePerSample(""scale"", ""scale(rdfslot_, rdfsampleinfo_)""); 54 ; 55# Select events for the analysis; 56ROOT.gInterpreter.Declare(; 57 """"""; 58using ROOT::RVecF;; 59using ROOT::RVecI;; 60bool GoodElectronsAndMuons(const RVe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py_source.html:2110,config,config,2110,doc/master/df106__HiggsToFourLeptons_8py_source.html,https://root.cern,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py_source.html,1,['config'],['config']
Modifiability,"ame x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*TGCheckButton::fgDefaultFont; static const TGFont*TGTextButton::fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*TGCheckButton::fgDefaultGC; static const TGGC*TGButton::fgDefaultGC; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGButton::fgHibckgndGC; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static Window_tTGButton::fgReleaseBtnthe last released button; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGedSelect(const TGWindow* p, Int_t id); Create pattern select button. ~TGedSelect(); Destructor of pattern select button. Bool_t HandleButton(Event_t* event); Handle mouse button events in pattern select button. void Enable(); Set widget state flag (kTRUE=enabled, kFALSE=disabled). void Disable(); Clear widget state flag. void DoRedraw(); Draw separator and arrow. void DrawTriangle(GContext_t gc, Int_t x, Int_t y); Draw small triangle. void SetPopup(TGedPopup* p); { fPopup = p; }. » Author: Marek Biskup, Ilka Antcheva 24/07/03 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-14 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGedSelect.html:23079,Inherit,Inheritance,23079,root/html534/TGedSelect.html,https://root.cern,https://root.cern/root/html534/TGedSelect.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFontDefault font; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*fgDefaultGCDefault graphics context; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTableCell(const TGWindow* p = 0, TGTable* table = 0, TGString* label = 0, UInt_t row = 0, UInt_t column = 0, UInt_t width = 80, UInt_t height = 25, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t option = 0, Bool_t resize = kTRUE); TGTableCell constructor. TGTableCell(const TGWindow* p, TGTable* table, const char* label, UInt_t row = 0, UInt_t column = 0, UInt_t width = 80, UInt_t height = 25, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t option = 0, Bool_t resize = kTRUE); TGTableCell constructor. ~TGTableCell(); TGTableCell destructor. void Init(Bool_t resize); Initialise the TGTableCell. void DoRedraw(); Redraw the TGTableCell. void MoveDraw(Int_t x, Int_t y); Move the TGTableCell and redraw it. void Resize(UInt_t width, UInt_t height); Resize the TGTableCell. void Resize(TGDimension newsize); Resize the TGTableCell. FontStruct_t GetDefaultFontStruct()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTableCell.html:19362,Inherit,Inheritance,19362,root/html602/TGTableCell.html,https://root.cern,https://root.cern/root/html602/TGTableCell.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame y position; Int_tfY0position of container frame in viewport; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGViewPort(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Create a viewport object. void SetContainer(TGFrame* f); Add container frame to the viewport. We must make sure that the added; container is at least a TGCompositeFrame (TGCanvas::AddFrame depends; on it). void SetHPos(Int_t xpos); Moves content of container frame in horizontal direction. void SetVPos(Int_t ypos); Moves content of container frame in vertical direction. void SetPos(Int_t xpos, Int_t ypos); Goto new position. Bool_t HandleConfigureNotify(Event_t* event); Handle resize events. TGContainer& operator=(const TGViewPort& ). void Layout(). TGViewPort(const TGViewPort& ). TGFrame * GetContainer() const; { return fContainer; }. void DrawBorder(); { }. TGDimension GetDefaultSize() const; { return TGDimension(fWidth, fHeight); }. Int_t GetHPos() const; { return fX0; }. Int_t GetVPos() const; { re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGViewPort.html:20921,Inherit,Inheritance,20921,root/html602/TGViewPort.html,https://root.cern,https://root.cern/root/html602/TGViewPort.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame() const; Double_tGetIntegral(Double_t xmin, Double_t xmax); TMVA::PDF::EInterpolateMethodGetInterpolMethod(); virtual const char*GetName() const; Int_tGetNBins() const; TH1*GetNSmoothHist() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; TH1*GetOriginalHist() const; TH1*GetPDFHist() const; UInt_tGetReadingVersion() const; TH1*GetSmoothedHist() const; TSpline*GetSpline() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetVal(Double_t x) const; Double_tGetValInverse(Double_t y, Bool_t isMonotonouslyIncreasingFunction = kFALSE) const; Double_tGetXmax() const; Double_tGetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__PDF.html:3168,Inherit,InheritsFrom,3168,root/html532/TMVA__PDF.html,https://root.cern,https://root.cern/root/html532/TMVA__PDF.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame() const; Double_tGetIntegral(Double_t xmin, Double_t xmax); TMVA::PDF::EInterpolateMethodGetInterpolMethod(); virtual const char*GetName() const; Int_tGetNBins() const; TH1*GetNSmoothHist() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; TH1*GetOriginalHist() const; TH1*GetPDFHist() const; UInt_tGetReadingVersion() const; TH1*GetSmoothedHist() const; TSpline*GetSpline() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetVal(Double_t x) const; Double_tGetValInverse(Double_t y, Bool_t isMonotonouslyIncreasingFunction = kFALSE) const; Double_tGetXmax() const; Double_tGetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDF.html:3272,Inherit,InheritsFrom,3272,root/html602/TMVA__PDF.html,https://root.cern,https://root.cern/root/html602/TMVA__PDF.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*GetListOfNodes() const; virtual TRotMatrix*GetMatrix() const; virtual const char*TNamed::GetName() const; virtual TNode*GetNode(const char* name) const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual TNode*GetParent() const; TShape*GetShape() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetVisibility() const; virtual Double_tGetX() const; virtual Double_tGetY() const; virtual Double_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImportShapeAttributes(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidLocal2Master(const Double_t* local, Double_t* master); virtual voidLocal2Master(const Float_t* local, Float_t* master); virtual voidls(Option_t* option = ""2"") constMENU ; virtual voidMaster2Local(const Double_t* master, Double_t* local); virtual voidMaster2Local(const Float_t* master, Float_t* local); voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TNode.html:3787,Inherit,InheritsFrom,3787,root/html532/TNode.html,https://root.cern,https://root.cern/root/html532/TNode.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame() const; virtual Long_tTChair::GetNRows() const; TObjArray*TDataSet::GetObjArray() const; virtual TObject*TDataSet::GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TDataSet*TDataSet::GetParent() const; virtual TClass*TChair::GetRowClass() const; virtual TTableDescriptor*TChair::GetRowDescriptors() const; virtual Long_tTChair::GetRowSize() const; virtual Long_tTChair::GetTableSize() const; virtual const char*TNamed::GetTitle() const; virtual const Char_t*TChair::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tTChair::HasData() const; virtual ULong_tTNamed::Hash() const; TH1*Histogram(const char* selection = """")MENU ; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TDataSet::Instance() const; static TDataSet*TDataSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tTDataSet::IsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidTChair::ls(Option_t* option = """") const; virtual voidTChair::ls(Int_t deep) const; virtual Char_t*TChair::MakeExpression(const Char_t** expressions, Int_t nExpressions); voidTDataSet::Mark()MENU ; voidTDataSet::Mark(UInt_t flag, TDataSet::EBitOpt reset = kSet); voidTDataSet::MarkAll()MENU ; voidTObject::MayNotUse",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TColumnView.html:4652,Inherit,InheritsFrom,4652,root/html532/TColumnView.html,https://root.cern,https://root.cern/root/html532/TColumnView.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame() const; virtual Long_tTChair::GetNRows() const; TObjArray*TDataSet::GetObjArray() const; virtual TObject*TDataSet::GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TDataSet*TDataSet::GetParent() const; virtual TClass*TChair::GetRowClass() const; virtual TTableDescriptor*TChair::GetRowDescriptors() const; virtual Long_tTChair::GetRowSize() const; virtual Long_tTChair::GetTableSize() const; virtual const char*TNamed::GetTitle() const; virtual const Char_t*TChair::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tTChair::HasData() const; virtual ULong_tTNamed::Hash() const; TH1*Histogram(const char* selection = """")MENU ; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TDataSet::Instance() const; static TDataSet*TDataSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tTDataSet::IsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidTChair::ls(Option_t* option = """") const; virtual voidTChair::ls(Int_t deep) const; virtual Char_t*TChair::MakeExpression(const Char_t*[] expressions, Int_t nExpressions); voidTDataSet::Mark()MENU ; voidTDataSet::Mark(UInt_t flag, TDataSet::EBitOpt reset = kSet); voidTDataSet::MarkAll()MENU ; voidTObject::MayNotUs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TColumnView.html:4561,Inherit,InheritsFrom,4561,root/html602/TColumnView.html,https://root.cern,https://root.cern/root/html602/TColumnView.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame() const; virtual TGeoMatrix*TGeoPatternFinder::GetMatrix(); virtual const char*TObject::GetName() const; Int_tTGeoPatternFinder::GetNdiv() const; Int_tTGeoPatternFinder::GetNext() const; TGeoNode*TGeoPatternFinder::GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoPatternFinder::GetStart() const; Double_tTGeoPatternFinder::GetStep() const; TGeoPatternFinder::ThreadData_t&TGeoPatternFinder::GetThreadData() const; virtual const char*TObject::GetTitle() const; Double_tGetTxz() const; Double_tGetTyz() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*TGeoPatternFinder::GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOnBoundary(const Double_t* point) const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoPatternFinder::IsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGeoPatternFinder::IsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t reflect = kFALSE); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternTrapZ.html:4425,Inherit,InheritsFrom,4425,root/html532/TGeoPatternTrapZ.html,https://root.cern,https://root.cern/root/html532/TGeoPatternTrapZ.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame() const; virtual TGeoMatrix*TGeoPatternFinder::GetMatrix(); virtual const char*TObject::GetName() const; Int_tTGeoPatternFinder::GetNdiv() const; Int_tTGeoPatternFinder::GetNext() const; TGeoNode*TGeoPatternFinder::GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoPatternFinder::GetStart() const; Double_tTGeoPatternFinder::GetStep() const; TGeoPatternFinder::ThreadData_t&TGeoPatternFinder::GetThreadData() const; virtual const char*TObject::GetTitle() const; Double_tGetTxz() const; Double_tGetTyz() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*TGeoPatternFinder::GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOnBoundary(const Double_t* point) const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoPatternFinder::IsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGeoPatternFinder::IsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t reflect = kFALSE); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternTrapZ.html:4215,Inherit,InheritsFrom,4215,root/html602/TGeoPatternTrapZ.html,https://root.cern,https://root.cern/root/html602/TGeoPatternTrapZ.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPave::GetOption() const; Int_tTPave::GetShadowColor() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TPaveLabel::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTPave::GetX1NDC() const; Double_tTBox::GetX2() const; Double_tTPave::GetX2NDC() const; Double_tTBox::GetY1() const; Double_tTPave::GetY1NDC() const; Double_tTBox::GetY2() const; Double_tTPave::GetY2NDC() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTPave::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPave::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPave::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPaveClass.html:4233,Inherit,InheritsFrom,4233,root/html532/TPaveClass.html,https://root.cern,https://root.cern/root/html532/TPaveClass.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPave::GetOption() const; Int_tTPave::GetShadowColor() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TPaveLabel::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTPave::GetX1NDC() const; Double_tTBox::GetX2() const; Double_tTPave::GetX2NDC() const; Double_tTBox::GetY1() const; Double_tTPave::GetY1NDC() const; Double_tTBox::GetY2() const; Double_tTPave::GetY2NDC() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTPave::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPave::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPave::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPaveClass.html:4147,Inherit,InheritsFrom,4147,root/html602/TPaveClass.html,https://root.cern,https://root.cern/root/html602/TPaveClass.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame(), fOnfileObject ? ""Push"" : ""Pop"", buffer.Length(), object, fOffset, fOnfileObject);; 1493 ; 1494 }; 1495 }; 1496 };; 1497 ; 1498 Int_t PushDataCache(TBuffer &b, void *, const TConfiguration *conf); 1499 {; 1500 TConfigurationPushDataCache *config = (TConfigurationPushDataCache*)conf;; 1501 auto onfileObject = config->fOnfileObject;; 1502 ; 1503 // onfileObject->SetSize(1);; 1504 b.PushDataCache( onfileObject );; 1505 ; 1506 return 0;; 1507 }; 1508 ; 1509 Int_t PushDataCacheVectorPtr(TBuffer &b, void *, const void *, const TConfiguration *conf); 1510 {; 1511 TConfigurationPushDataCache *config = (TConfigurationPushDataCache*)conf;; 1512 auto onfileObject = config->fOnfileObject;; 1513 ; 1514 // onfileObject->SetSize(n);; 1515 b.PushDataCache( onfileObject );; 1516 ; 1517 return 0;; 1518 }; 1519 ; 1520 Int_t PushDataCacheGenericCollection(TBuffer &b, void *, const void *, const TLoopConfiguration *loopconfig, const TConfiguration *conf); 1521 {; 1522 TConfigurationPushDataCache *config = (TConfigurationPushDataCache*)conf;; 1523 auto onfileObject = config->fOnfileObject;; 1524 ; 1525 TVirtualCollectionProxy *proxy = ((TGenericLoopConfig*)loopconfig)->fProxy;; 1526 UInt_t n = proxy->Size();; 1527 ; 1528 onfileObject->SetSize(n);; 1529 b.PushDataCache( onfileObject );; 1530 ; 1531 return 0;; 1532 }; 1533 ; 1534 Int_t PopDataCache(TBuffer &b, void *, const TConfiguration *); 1535 {; 1536 b.PopDataCache();; 1537 return 0;; 1538 }; 1539 ; 1540 Int_t PopDataCacheVectorPtr(TBuffer &b, void *, const void *, const TConfiguration *); 1541 {; 1542 b.PopDataCache();; 1543 return 0;; 1544 }; 1545 ; 1546 Int_t PopDataCacheGenericCollection(TBuffer &b, void *, const void *, const TLoopConfiguration *, const TConfiguration *); 1547 {; 1548 b.PopDataCache();; 1549 return 0;; 1550 }; 1551 ; 1552 class TConfigurationUseCache : public TConfiguration {; 1553 // Configuration object for the UseCache case.; 1554 public:; 1555 TConfiguredAction fAction;; 1556 Bool_t fNeedRepeat;; 1557 ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:63010,config,config,63010,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,ame(). static const char * RooNumIntConfig::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 87 of file RooNumIntConfig.h. ◆ defaultConfig(). RooNumIntConfig & RooNumIntConfig::defaultConfig ; (; ). static . Return reference to instance of default numeric integrator configuration object. ; Definition at line 44 of file RooNumIntConfig.cxx. ◆ defaultPrintStyle(). RooPrintable::StyleOption RooNumIntConfig::defaultPrintStyle ; (; Option_t * ; opt); const. overridevirtual . Reimplemented from RooPrintable.; Definition at line 240 of file RooNumIntConfig.cxx. ◆ epsAbs(). double RooNumIntConfig::epsAbs ; (; ); const. inline . Definition at line 50 of file RooNumIntConfig.h. ◆ epsRel(). double RooNumIntConfig::epsRel ; (; ); const. inline . Definition at line 51 of file RooNumIntConfig.h. ◆ getConfigSection() [1/2]. RooArgSet & RooNumIntConfig::getConfigSection ; (; const char * ; name). Return section with configuration parameters for integrator with given (class) name. ; Definition at line 205 of file RooNumIntConfig.cxx. ◆ getConfigSection() [2/2]. const RooArgSet & RooNumIntConfig::getConfigSection ; (; const char * ; name); const. Retrieve configuration information specific to integrator with given name. ; Definition at line 214 of file RooNumIntConfig.cxx. ◆ IsA(). TClass * RooNumIntConfig::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 87 of file RooNumIntConfig.h. ◆ method1D() [1/2]. RooCategory & RooNumIntConfig::method1D ; (; ). inline . Definition at line 34 of file RooNumIntConfig.h. ◆ method1D() [2/2]. const RooCategory & RooNumIntConfig::method1D ; (; ); const. inline . Definition at line 37 of file RooNumIntConfig.h. ◆ method1DOpen() [1/2]. RooCategory & RooNumIntConfig::method1DOpen ; (; ). inline . Definition at line 42 of file RooNumIntConfig.h. ◆ method1DOpen() [2/2]. const RooCategory & RooNumIntConfig::me,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumIntConfig.html:17601,config,configuration,17601,doc/master/classRooNumIntConfig.html,https://root.cern,https://root.cern/doc/master/classRooNumIntConfig.html,1,['config'],['configuration']
Modifiability,"ame(). static const char * RooProdPdf::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 190 of file RooProdPdf.h. ◆ doEvalImpl(). void RooProdPdf::doEvalImpl ; (; RooAbsArg const * ; caller, . const RooProdPdf::CacheElem & ; cache, . RooFit::EvalContext & ; ctx . ); const. private . Evaluate product of PDFs in batch mode. ; Definition at line 413 of file RooProdPdf.cxx. ◆ evaluate(). double RooProdPdf::evaluate ; (; ); const. overrideprivatevirtual . Calculate current value of object. ; Implements RooAbsReal.; Definition at line 371 of file RooProdPdf.cxx. ◆ expectedEvents(). double RooProdPdf::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return the expected number of events associated with the extendable input PDF in the product. ; If there is no extendable term, abort. ; Reimplemented from RooAbsPdf.; Definition at line 1671 of file RooProdPdf.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooProdPdf::extendMode ; (; ); const. overridevirtual . If this product contains exactly one extendable p.d.f return the extension abilities of that p.d.f, otherwise return CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 1660 of file RooProdPdf.cxx. ◆ factorizeProduct(). void RooProdPdf::factorizeProduct ; (; const RooArgSet & ; normSet, . const RooArgSet & ; intSet, . RooLinkedList & ; termList, . RooLinkedList & ; normList, . RooLinkedList & ; impDepList, . RooLinkedList & ; crossDepList, . RooLinkedList & ; intList . ); const. private . Factorize product in irreducible terms for given choice of integration/normalization. ; Definition at line 472 of file RooProdPdf.cxx. ◆ fillNormSetForServer(). std::unique_ptr< RooArgSet > RooProdPdf::fillNormSetForServer ; (; RooArgSet const & ; normSet, . RooAbsArg const & ; server . ); const. private . Definition at line 2281 of file RooProdPdf.cxx. ◆ findPdfNSet(). RooArgSet * RooProdPdf::findPdfNSet ; (; RooAbsPdf const & ; pdf);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProdPdf.html:89185,extend,extendMode,89185,doc/master/classRooProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooProdPdf.html,1,['extend'],['extendMode']
Modifiability,"ame(). static const char * RooProjectedPdf::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 73 of file RooProjectedPdf.h. ◆ evaluate(). double RooProjectedPdf::evaluate ; (; ); const. overrideprotectedvirtual . Evaluate projected p.d.f. ; Implements RooAbsReal.; Reimplemented in xRooProjectedPdf.; Definition at line 94 of file RooProjectedPdf.cxx. ◆ expectedEvents(). double RooProjectedPdf::expectedEvents ; (; const RooArgSet * ; nset); const. inlineoverridevirtual . Return expected number of events to be used in calculation of extended likelihood. ; Return expected number of events from this p.d.f for use in extended likelihood calculations.; This default implementation returns zero ; Reimplemented from RooAbsPdf.; Reimplemented in xRooProjectedPdf.; Definition at line 46 of file RooProjectedPdf.h. ◆ extendMode(). ExtendMode RooProjectedPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Reimplemented in xRooProjectedPdf.; Definition at line 47 of file RooProjectedPdf.h. ◆ forceAnalyticalInt(). bool RooProjectedPdf::forceAnalyticalInt ; (; const RooAbsArg & ; dep); const. overridevirtual . Force RooRealIntegral to relegate integration of all observables to internal logic. ; Reimplemented from RooAbsReal.; Definition at line 157 of file RooProjectedPdf.cxx. ◆ getAnalyticalIntegralWN(). Int_t RooProjectedPdf::getAnalyticalIntegralWN ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const RooArgSet * ; normSet, . const char * ; rangeName = nullptr . ); const. overridevirtual . Mark all requested variables as internally integrated. ; Reimplemented from RooAbsReal.; Definition at line 167 of file RooProjectedPdf.cxx. ◆ getProjection(). const RooAbsReal * RooProjectedPdf::getProjecti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProjectedPdf.html:77972,extend,extended,77972,doc/master/classRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classRooProjectedPdf.html,1,['extend'],['extended']
Modifiability,"ame) Use binning with specified name to draw dataset . RooFit::RefreshNorm() Force refreshing for PDF normalization information in frame. If set, any subsequent PDF will normalize to this dataset, even if it is not the first one added to the frame. By default only the 1st dataset added to a frame will update the normalization information . RooFit::Rescale(double f) Rescale drawn histogram by given factor. . RooFit::Cut(const char*) Only plot entries that pass the given cut. Apart from cutting in continuous variables Cut(""x>5""), this can also be used to plot a specific category state. Use something like Cut(""myCategory == myCategory::stateA""), where myCategory resolves to the state number for a given entry and myCategory::stateA resolves to the state number of the state named ""stateA"". RooFit::CutRange(const char*) Only plot data from given range. Separate multiple ranges with "","". NoteThis often requires passing the normalisation when plotting the PDF because RooFit does not save how many events were being plotted (it will only work for cutting slices out of uniformly distributed variables). data->plotOn(frame01, CutRange(""SB1""));; const double nData = data->sumEntries("""", ""SB1"");; // Make clear that the target normalisation is nData. The enumerator NumEvent; // is needed to switch between relative and absolute scaling.; model.plotOn(frame01, Normalization(nData, RooAbsReal::NumEvent),; ProjectionRange(""SB1""));; RooAbsReal::NumEvent@ NumEventDefinition RooAbsReal.h:276. Histogram drawing options . RooFit::DrawOption(const char* opt) Select ROOT draw option for resulting TGraph object . RooFit::LineStyle(Style_t style) Select line style by ROOT line style code, default is solid . RooFit::LineColor(Color_t color) Select line color by ROOT color code, default is black . RooFit::LineWidth(Width_t width) Select line with in pixels, default is 3 . RooFit::MarkerStyle(Style_t style) Select the ROOT marker style, default is 21 . RooFit::MarkerColor(Color_t color) Select the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:57930,variab,variables,57930,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['variab'],['variables']
Modifiability,"ame) Use binning with specified name to draw dataset . RooFit::RefreshNorm() Force refreshing for PDF normalization information in frame. If set, any subsequent PDF will normalize to this dataset, even if it is not the first one added to the frame. By default only the 1st dataset added to a frame will update the normalization information . RooFit::Rescale(double f) Rescale drawn histogram by given factor. . RooFit::Cut(const char*) Only plot entries that pass the given cut. Apart from cutting in continuous variables Cut(""x>5""), this can also be used to plot a specific category state. Use something like Cut(""myCategory == myCategory::stateA""), where myCategory resolves to the state number for a given entry and myCategory::stateA resolves to the state number of the state named ""stateA"". RooFit::CutRange(const char*) Only plot data from given range. Separate multiple ranges with "","". NoteThis often requires passing the normalisation when plotting the PDF because RooFit does not save how many events were being plotted (it will only work for cutting slices out of uniformly distributed variables). data->plotOn(frame01, CutRange(""SB1""));; const double nData = data->sumEntries("""", ""SB1"");; // Make clear that the target normalisation is nData. The enumerator NumEvent; // is needed to switch between relative and absolute scaling.; model.plotOn(frame01, Normalization(nData, RooAbsReal::NumEvent),; ProjectionRange(""SB1""));; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; RooAbsReal::NumEvent@ NumEventDefinition RooAbsReal.h:276. Histogram drawing options . RooFit::DrawOption(const char* opt) Select ROOT draw option for resulting TGraph object . RooFit::LineStyle(Style_t style) Select line style by ROOT line style code, default is solid . RooFit::LineColor(Color_t color) Select line color by ROOT color code, default is black",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:69728,variab,variables,69728,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,1,['variab'],['variables']
Modifiability,"ame) const; RooAbsArg*findArg(const RooAbsArg*) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; TObject*First() const; RooFIterfwdIterator() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tgetHashTableSize() const; virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; Int_tIndexOf(const char* name) const; Int_tIndexOf(const TObject* arg) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; RooLinkedListIteriterator(Bool_t dir = kTRUE) const; virtual voidTObject::ls(Option_t* option = """") const; TIterator*MakeIterator(Bool_t dir = kTRUE) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooLinkedList.html:2929,Inherit,InheritsFrom,2929,root/html534/RooLinkedList.html,https://root.cern,https://root.cern/root/html534/RooLinkedList.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; RooAbsArg*findArg(const RooAbsArg*) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; TObject*First() const; RooFIterfwdIterator() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tgetHashTableSize() const; virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; Int_tIndexOf(const char* name) const; Int_tIndexOf(const TObject* arg) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; RooLinkedListIteriterator(Bool_t dir = kTRUE) const; virtual voidTObject::ls(Option_t* option = """") const; TIterator*MakeIterator(Bool_t dir = kTRUE) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooLinkedList.html:2853,Inherit,InheritsFrom,2853,root/html602/RooLinkedList.html,https://root.cern,https://root.cern/root/html602/RooLinkedList.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetCL() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Double_tGetLowerLimit() const; Double_tGetMuMax() const; Double_tGetMuMin() const; Double_tGetMuStep() const; virtual const char*TObject::GetName() const; Double_tGetNbackground() const; Double_tGetNMax() const; Double_tGetNobserved() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetUpperLimit() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFeldmanCousins&operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFeldmanCousins.html:3883,Inherit,InheritsFrom,3883,root/html532/TFeldmanCousins.html,https://root.cern,https://root.cern/root/html532/TFeldmanCousins.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetCL() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Double_tGetLowerLimit() const; Double_tGetMuMax() const; Double_tGetMuMin() const; Double_tGetMuStep() const; virtual const char*TObject::GetName() const; Double_tGetNbackground() const; Double_tGetNMax() const; Double_tGetNobserved() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetUpperLimit() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFeldmanCousins&operator=(const TFeldmanCousins&); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFeldmanCousins.html:3781,Inherit,InheritsFrom,3781,root/html602/TFeldmanCousins.html,https://root.cern,https://root.cern/root/html602/TFeldmanCousins.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Float_tGetAngle3D(); Double_tGetAngularOffset(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntries(); Int_tGetEntryFillColor(Int_t); Int_tGetEntryFillStyle(Int_t); const char*GetEntryLabel(Int_t); Int_tGetEntryLineColor(Int_t); Int_tGetEntryLineStyle(Int_t); Int_tGetEntryLineWidth(Int_t); Double_tGetEntryRadiusOffset(Int_t); Double_tGetEntryVal(Int_t); const char*GetFractionFormat(); Double_tGetHeight(); virtual const char*TObject::GetIconName() const; const char*GetLabelFormat(); Float_tGetLabelsOffset(); TLegend*GetLegend(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetPercentFormat(); Double_tGetRadius(); TPieSlice*GetSlice(Int_t i); virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValueFormat(); Double_tGetX(); Double_tGetY(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; TLegend*MakeLegend(Double_t x1 = .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPie.html:3467,Inherit,InheritsFrom,3467,root/html532/TPie.html,https://root.cern,https://root.cern/root/html532/TPie.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBuffer() const; Long64_tGetCapacity() const; Long64_tGetDataSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_t*GetLen() const; Int_tGetLen(Int_t i) const; virtual const char*TObject::GetName() const; Int_tGetNoElem() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_t*GetPos() const; Long64_tGetPos(Int_t i) const; char*GetPtrToPiece(Int_t index) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFPBlock.html:2819,Inherit,InheritsFrom,2819,root/html534/TFPBlock.html,https://root.cern,https://root.cern/root/html534/TFPBlock.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static TVirtualGeoPainter*GeoPainter(); virtual voidGetBombFactors(Double_t& bombx, Double_t& bomby, Double_t& bombz, Double_t& bombr) const; virtual Int_tGetBombMode() const; virtual Int_tGetColor(Int_t base, Float_t light) const; virtual TGeoVolume*GetDrawnVolume() const; virtual Option_t*TObject::GetDrawOption() const; virtual const char*GetDrawPath() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNsegments() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual TGeoVolume*GetTopVolume() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidGetViewAngles(Double_t&, Double_t&, Double_t&); virtual Double_t*GetViewBox(); virtual Int_tGetVisLevel() const; virtual Int_tGetVisOption() const; virtual const char*GetVolumeInfo(const TGeoVolume* volume, Int_t px, Int_t py) const; virtual voidGrabFocus(Int_t nfr = 0, Double_t dlong = 0, Double_t dlat = 0, Double_t dpsi = 0); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsExplodedView() const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsPaintingShape() const; virtual Bool_tIsRaytracing() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual TH2F*LegoPlot(Int_t ntheta = 60, Double_t themin = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualGeoPainter.html:5075,Inherit,InheritsFrom,5075,root/html532/TVirtualGeoPainter.html,https://root.cern,https://root.cern/root/html532/TVirtualGeoPainter.html,8,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree* tree); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTProofDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawGraph.html:2760,Inherit,InheritsFrom,2760,root/html534/TProofDrawGraph.html,https://root.cern,https://root.cern/root/html534/TProofDrawGraph.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree* tree); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTProofDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawGraph.html:2748,Inherit,InheritsFrom,2748,root/html602/TProofDrawGraph.html,https://root.cern,https://root.cern/root/html602/TProofDrawGraph.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDraw.html:2846,Inherit,InheritsFrom,2846,root/html534/TProofDraw.html,https://root.cern,https://root.cern/root/html534/TProofDraw.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDraw.html:2846,Inherit,InheritsFrom,2846,root/html602/TProofDraw.html,https://root.cern,https://root.cern/root/html602/TProofDraw.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTProofDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawEntryList.html:2787,Inherit,InheritsFrom,2787,root/html534/TProofDrawEntryList.html,https://root.cern,https://root.cern/root/html534/TProofDrawEntryList.html,5,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTProofDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawEntryList.html:2764,Inherit,InheritsFrom,2764,root/html602/TProofDrawEntryList.html,https://root.cern,https://root.cern/root/html602/TProofDrawEntryList.html,10,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTProofDraw::Init(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTProofDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawListOfGraphs.html:2795,Inherit,InheritsFrom,2795,root/html534/TProofDrawListOfGraphs.html,https://root.cern,https://root.cern/root/html534/TProofDrawListOfGraphs.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTProofDraw::Init(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTProofDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawListOfGraphs.html:2776,Inherit,InheritsFrom,2776,root/html602/TProofDrawListOfGraphs.html,https://root.cern,https://root.cern/root/html602/TProofDrawListOfGraphs.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ame) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGHorizontalFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHeaderFrame.html:21717,inherit,inherited,21717,doc/master/classTGHeaderFrame.html,https://root.cern,https://root.cern/doc/master/classTGHeaderFrame.html,9,['inherit'],['inherited']
Modifiability,"ame) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProofPlayerRemote; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProofPlayer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualProofPlayer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TVirtualProofPlayer * Create (const char *player, TProof *p, TSocket *s=0);  Create a PROOF player. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerLite.html:18169,inherit,inherited,18169,doc/master/classTProofPlayerLite.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerLite.html,6,['inherit'],['inherited']
Modifiability,"ame). private:. ROOT::Math::GSLMultiRootFinderGSLMultiRootFinder(const ROOT::Math::GSLMultiRootFinder&); ROOT::Math::GSLMultiRootFinder&operator=(const ROOT::Math::GSLMultiRootFinder&). Data Members; public:. static ROOT::Math::GSLMultiRootFinder::ETypekBroyden; static ROOT::Math::GSLMultiRootFinder::ETypekDNewton; static ROOT::Math::GSLMultiRootFinder::EDerivTypekGNewton; static ROOT::Math::GSLMultiRootFinder::ETypekHybrid; static ROOT::Math::GSLMultiRootFinder::EDerivTypekHybridJ; static ROOT::Math::GSLMultiRootFinder::ETypekHybridS; static ROOT::Math::GSLMultiRootFinder::EDerivTypekHybridSJ; static ROOT::Math::GSLMultiRootFinder::EDerivTypekNewton. private:. vector<ROOT::Math::IMultiGenFunction*>fFunctions! transient Vector of the functions; intfItercurrent numer of iterations; intfPrintLevelprint level; ROOT::Math::GSLMultiRootBaseSolver*fSolver; intfStatuscurrent status; intfTypetype of algorithm; boolfUseDerivAlgoalgorithm using derivative. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLMultiRootFinder(EType type); create a multi-root finder based on an algorithm not requiring function derivative. GSLMultiRootFinder(EDerivType type); create a multi-root finder based on an algorithm requiring function derivative. GSLMultiRootFinder(const char* name = 0). create a multi-root finder using a string.; The names are those defined in the GSL manuals; after having remived the GSL prefix (gsl_multiroot_fsolver).; Default algorithm is ""hybrids"" (without derivative). virtual ~GSLMultiRootFinder(); destructor. GSLMultiRootFinder(const GSLMultiRootFinder &); usually copying is non trivial, so we make this unaccessible. void SetType(EType type); set the type for an algorithm without derivatives. void SetType(EDerivType type); set the type of algorithm using derivatives. void SetType(const char* name); set the type using a string. int AddFunction(const ROOT::Math::IMultiGenFunction& func). add (set) a single function fi(x1,...xn)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__GSLMultiRootFinder.html:4644,Inherit,Inheritance,4644,root/html602/ROOT__Math__GSLMultiRootFinder.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__GSLMultiRootFinder.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tHandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidInterruptMacro(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; Int_tIsSaved(); virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* pt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTextEditor.html:14140,Inherit,InheritsFrom,14140,root/html532/TGTextEditor.html,https://root.cern,https://root.cern/root/html532/TGTextEditor.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ame*); virtual Bool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tHandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGShutter.html:9089,Inherit,InheritsFrom,9089,root/html532/TGShutter.html,https://root.cern,https://root.cern/root/html532/TGShutter.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGContainer::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGContainer::HandleKey(Event_t* event); virtual Bool_tTGContainer::HandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tHandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGContainer::Home(Bool_t select = kFALSE); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual voidTGContainer::InvertSelection()SIGNAL ; virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFileContainer.html:11401,Inherit,InheritsFrom,11401,root/html532/TGFileContainer.html,https://root.cern,https://root.cern/root/html532/TGFileContainer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ame*fFBthree tabs element; TGCompositeFrame*fFCthree tabs element; TEditQueryFrame*fFDfourth tab element (edit query frame); Int_tfFilesnumber of files processed; Long64_tfFirstfirst event/entry to process; TGTextView*fInfoTextViewsummary on current query; TGLabel*fLabInfosinfos on current process; TGLabel*fLabStatusactual process status; Bool_tfModifiedkTRUE if settings have changed; Long64_tfPrevProcessedused for progress bar; Long64_tfPrevTotalused for progress bar; TGLabel*fRaterate of process in events/sec; TCanvas*fStatsCanvasnode statistics canvas; TSessionQueryFrame::EQueryStatusfStatusstatus of actual query; TGTab*fTabmain tab frame; TGLabel*fTotaltotal progress info; TSessionViewer*fViewerpointer on main viewer; TGHProgressBar*frmProgcurrent process progress bar; static TSessionQueryFrame::EQueryStatuskAborted; static TSessionQueryFrame::EQueryStatuskDone; static TSessionQueryFrame::EQueryStatuskRunning; static TSessionQueryFrame::EQueryStatuskStopped. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←; TGWindow. TQObject. ←; TGFrame. ←; TGCompositeFrame. ←; TSessionQueryFrame. Function documentation; TSessionQueryFrame(TGWindow* parent, Int_t w, Int_t h); Constructor. ~TSessionQueryFrame(); Destructor. void Build(TSessionViewer* gui); Build query information frame. void Modified(Bool_t mod = kTRUE); Notify changes in query editor settings. void Feedback(TList* objs); Feedback function connected to Feedback signal.; Used to update feedback histograms. void UpdateHistos(TList* objs); Update feedback histograms. void Progress(Long64_t total, Long64_t processed); Update progress bar and status labels. void Progress(Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses); New version of Progress (just forward to the old version; for the time being). void ProgressLocal(Long64_t total, Long64_t processed); Update progress bar and status labels. void In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSessionQueryFrame.html:21989,Inherit,Inheritance,21989,root/html602/TSessionQueryFrame.html,https://root.cern,https://root.cern/root/html602/TSessionQueryFrame.html,2,['Inherit'],['Inheritance']
Modifiability,"ame, . Double_t ; value = 0 . ). Adds variable to known variables, and reprocess formula. ; Definition at line 2569 of file TFormula.cxx. ◆ AddVariables(). void TFormula::AddVariables ; (; const TString * ; vars, . const Int_t ; size . ). Adds multiple variables. ; First argument is an array of pairs<TString,Double>, where first argument is name of variable, second argument represents value. size - number of variables passed in first argument ; Definition at line 2602 of file TFormula.cxx. ◆ Class(). static TClass * TFormula::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFormula::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFormula::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 289 of file TFormula.h. ◆ Clear(). void TFormula::Clear ; (; Option_t * ; option = """"). overridevirtual . Clear the formula setting expression to empty and reset the variables and parameters containers. ; Reimplemented from TObject.; Definition at line 767 of file TFormula.cxx. ◆ Compile(). Int_t TFormula::Compile ; (; const char * ; expression = """"). Compile the given expression with Cling backward compatibility method to be used in combination with the empty constructor if no expression is given , the current stored formula (retrieved with GetExpFormula()) or the title is used. ; return 0 if the formula compilation is successful ; Definition at line 650 of file TFormula.cxx. ◆ Copy(). void TFormula::Copy ; (; TObject & ; object); const. overridevirtual . Copy this to obj. ; Reimplemented from TObject.; Definition at line 684 of file TFormula.cxx. ◆ DeclFileName(). static const char * TFormula::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 289 of file TFormula.h. ◆ DoAddParameter(). void TFormula::DoAddParameter ; (; const TString & ; name, . Double_t ; value, . bool ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:31868,variab,variables,31868,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variables']
Modifiability,"ame, Bool_t subbranches = kFALSE); Add branch with name bname to the Tree cache.; If bname=""*"" all branches are added to the cache.; if subbranches is true all the branches of the subbranches are; also put to the cache. void DropBranchFromCache(TBranch* branch, Bool_t subbranches = kFALSE); Add branch b to the Tree cache.; if subbranches is true all the branches of the subbranches are; also put to the cache. void AddClone(TTree* ); Add a cloned tree to our list of trees to be notified whenever we change; our branch addresses or when we are deleted. TFriendElement* AddFriend(const char* treename, const char* filename = """"); Add a TFriendElement to the list of friends. This function:; -opens a file if filename is specified; -reads a Tree with name treename from the file (current directory); -adds the Tree to the list of friends; see other AddFriend functions. A TFriendElement TF describes a TTree object TF in a file.; When a TFriendElement TF is added to the the list of friends of an; existing TTree T, any variable from TF can be referenced in a query; to T. A tree keeps a list of friends. In the context of a tree (or a chain),; friendship means unrestricted access to the friends data. In this way; it is much like adding another branch to the tree without taking the risk; of damaging it. To add a friend to the list, you can use the TTree::AddFriend; method. The tree in the diagram below has two friends (friend_tree1 and; friend_tree2) and now has access to the variables a,b,c,i,j,k,l and m. /*; ; */. The AddFriend method has two parameters, the first is the tree name and the; second is the name of the ROOT file where the friend tree is saved.; AddFriend automatically opens the friend file. If no file name is given,; the tree called ft1 is assumed to be in the same file as the original tree. tree.AddFriend(""ft1"",""friendfile1.root"");; If the friend tree has the same name as the original tree, you can give it; an alias sin the context of the friendship:. tree.AddFriend(""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:36406,variab,variable,36406,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,2,['variab'],['variable']
Modifiability,"ame, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0); virtual Bool_tTMVA::MethodBase::MonitorBoost(TMVA::MethodBoost*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCFMlpANN.html:10608,Config,Configurable,10608,root/html532/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCFMlpANN.html,2,['Config'],['Configurable']
Modifiability,"ame, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t k = 0); Create a 1-Dim histogram with fix bins of type float; (see TH1K::TH1 for explanation of parameters). ~TH1K(); Destructor. void Copy(TObject& obj) const; Copy this histogram structure to newth1. Note that this function does not copy the list of associated functions.; Use TObject::Clone to make a full copy of an histogram. Int_t Fill(Double_t x); Increment bin with abscissa X by 1. if x is less than the low-edge of the first bin, the Underflow bin is incremented; if x is greater than the upper edge of last bin, the Overflow bin is incremented. If the storage of the sum of squares of weights has been triggered,; via the function Sumw2, then the sum of the squares of weights is incremented; by 1 in the bin corresponding to x. Double_t GetBinContent(Int_t bin) const; Return content of global bin number bin. Double_t GetBinError(Int_t bin) const; Return content of global bin error. void Reset(Option_t* option = """"); Reset. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out; Note the following restrictions in the code generated:; - variable bin size not implemented; - Objects in list of functions not saved (fits); - Contours not saved. void Sort(); Sort. TH1K(). Int_t Fill(Double_t x). Int_t Fill(Double_t x, Double_t w); {return TH1::Fill(x,w);}. Double_t GetBinContent(Int_t bin) const. Double_t GetBinContent(Int_t bin, Int_t ) const; {return GetBinContent(bin);}. Double_t GetBinError(Int_t bin) const. Double_t GetBinError(Int_t bin, Int_t ) const; {return GetBinError(bin);}. void SetKOrd(Int_t k); {fKOrd=k;}. » Author: Victor Perevoztchikov 21/02/2001 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-03-14 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH1K.html:25488,variab,variable,25488,root/html534/TH1K.html,https://root.cern,https://root.cern/root/html534/TH1K.html,2,['variab'],['variable']
Modifiability,"ame, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t k = 0); Create a 1-Dim histogram with fix bins of type float; (see TH1K::TH1 for explanation of parameters). ~TH1K(); Destructor. void Copy(TObject& obj) const; Copy this histogram structure to newth1. Note that this function does not copy the list of associated functions.; Use TObject::Clone to make a full copy of an histogram. Int_t Fill(Double_t x); Increment bin with abscissa X by 1. if x is less than the low-edge of the first bin, the Underflow bin is incremented; if x is greater than the upper edge of last bin, the Overflow bin is incremented. If the storage of the sum of squares of weights has been triggered,; via the function Sumw2, then the sum of the squares of weights is incremented; by 1 in the bin corresponding to x. Double_t GetBinContent(Int_t bin) const; Return content of global bin number bin. Double_t GetBinError(Int_t bin) const; Return content of global bin error. void Reset(Option_t* option = """"); Reset. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out; Note the following restrictions in the code generated:; - variable bin size not implemented; - Objects in list of functions not saved (fits); - Contours not saved. void Sort(); Sort. TH1K(). Int_t Fill(Double_t x). Int_t Fill(Double_t x, Double_t w); {return TH1::Fill(x,w);}. Double_t GetBinContent(Int_t bin) const. Double_t GetBinContent(Int_t bin, Int_t ) const; {return GetBinContent(bin);}. Double_t GetBinError(Int_t bin) const. Double_t GetBinError(Int_t bin, Int_t ) const; {return GetBinError(bin);}. void SetKOrd(Int_t k); {fKOrd=k;}. » Author: Victor Perevoztchikov 21/02/2001 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-02 16:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH1K.html:26970,variab,variable,26970,root/html604/TH1K.html,https://root.cern,https://root.cern/root/html604/TH1K.html,2,['variab'],['variable']
Modifiability,"ame, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t k = 0); Create a 1-Dim histogram with fix bins of type float; (see TH1K::TH1 for explanation of parameters). ~TH1K(); Destructor. void Copy(TObject& obj) const; Copy this histogram structure to newth1. Note that this function does not copy the list of associated functions.; Use TObject::Clone to make a full copy of an histogram. Int_t Fill(Double_t x); Increment bin with abscissa X by 1. if x is less than the low-edge of the first bin, the Underflow bin is incremented; if x is greater than the upper edge of last bin, the Overflow bin is incremented. If the storage of the sum of squares of weights has been triggered,; via the function Sumw2, then the sum of the squares of weights is incremented; by 1 in the bin corresponding to x. Double_t GetBinContent(Int_t bin) const; Return content of global bin number bin. Double_t GetBinError(Int_t bin) const; Return content of global bin error. void Reset(Option_t* option = """"); Reset. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out; Note the following restrictions in the code generated:; - variable bin size not implemented; - Objects in list of functions not saved (fits); - Contours not saved. void Sort(); Sort. TH1K(). Int_t Fill(Double_t x). Int_t Fill(Double_t x, Double_t w); {return TH1::Fill(x,w);}. Double_t GetBinContent(Int_t bin) const. Double_t GetBinContent(Int_t bin, Int_t ) const; {return GetBinContent(bin);}. Double_t GetBinError(Int_t bin) const. Double_t GetBinError(Int_t bin, Int_t ) const; {return GetBinError(bin);}. void SetKOrd(Int_t k); {fKOrd=k;}. » Author: Victor Perevoztchikov 21/02/2001 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1K.html:26970,variab,variable,26970,root/html602/TH1K.html,https://root.cern,https://root.cern/root/html602/TH1K.html,2,['variab'],['variable']
Modifiability,"ame, int argtyp, Bool_t isargptr, TClass* argcl). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringfGetterName! buffer for name of getter method; TStringfSetterName! buffer for name of setter method; TXMLSetupfXmlSetup! buffer for xml names convertion. Class Charts. Inheritance Chart:. TObject. ←; TXMLPlayer. Function documentation; TXMLPlayer(); default constructor. ~TXMLPlayer(); destructor of TXMLPlayer object. TString GetStreamerName(TClass* cl); returns streamer function name for given class. Bool_t ProduceCode(TList* cllist, const char* filename); Produce streamers for provide class list; TList should include list of classes, for which code should be generated.; filename specify name of file (without extension), where streamers should be; created. Function produces two files: header file and source file.; For instance, if filename is ""streamers"", files ""streamers.h"" and ""streamers.cxx""; will be created. TString GetMemberTypeName(TDataMember* member); returns name of simple data type for given data member. TString GetBasicTypeName(TStreamerElement* el); return simple data types for given TStreamerElement object. TString GetBasicTypeReaderMethodName(Int_t type, const char* realname); return functions name to read simple data type from xml file. const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLPlayer.html:10092,Inherit,Inheritance,10092,root/html602/TXMLPlayer.html,https://root.cern,https://root.cern/root/html602/TXMLPlayer.html,2,['Inherit'],['Inheritance']
Modifiability,"ame, int defaultValue=0) const;  Return integer property registered with name 'name'. ;  ; TObject * getObject (const char *name, TObject *obj=nullptr) const;  Return TObject property registered with name 'name'. ;  ; const RooLinkedList & getObjectList (const char *name) const;  Return list of objects registered with name 'name'. ;  ; RooArgSet * getSet (const char *name, RooArgSet *set=nullptr) const;  Return RooArgSet property registered with name 'name'. ;  ; const char * getString (const char *name, const char *defaultValue="""", bool convEmptyToNull=false) const;  Return string property registered with name 'name'. ;  ; bool hasProcessed (const char *cmdName) const;  Return true if RooCmdArg with name 'cmdName' has been processed. ;  ; TClass * IsA () const override;  ; std::string missingArgs () const;  Return string with names of arguments that were required, but not processed. ;  ; bool ok (bool verbose) const;  Return true of parsing was successful. ;  ; void print () const;  Print configuration of parser. ;  ; bool process (const RooCmdArg &arg);  Process given RooCmdArg. ;  ; template<class... Args_t> ; bool process (const RooCmdArg &arg, Args_t &&...args);  Process given RooCmdArgs. ;  ; bool process (const RooLinkedList &argList);  Process given list with RooCmdArgs. ;  ; template<typename It_t > ; bool process (It_t begin, It_t end);  Process several RooCmdArg using iterators. ;  ; void setVerbose (bool flag);  If flag is true verbose messaging is activated. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCmdConfig.html:4773,config,configuration,4773,doc/master/classRooCmdConfig.html,https://root.cern,https://root.cern/doc/master/classRooCmdConfig.html,1,['config'],['configuration']
Modifiability,"ame, std::string_view className);  ;  ~RClassField () override=default;  ; void AcceptVisitor (Detail::RFieldVisitor &visitor) const final;  ; size_t GetAlignment () const final;  As a rule of thumb, the alignment is equal to the size of the type. ;  ; std::uint32_t GetTypeChecksum () const final;  Return the current TClass reported checksum of this class. Only valid if kTraitTypeChecksum is set. ;  ; std::uint32_t GetTypeVersion () const final;  Indicates an evolution of the C++ type itself. ;  ; size_t GetValueSize () const final;  The number of bytes taken by a value of the appropriate type. ;  ; RClassField & operator= (RClassField &&other)=default;  ; std::vector< RValue > SplitValue (const RValue &value) const final;  Creates the list of direct child values given a value for this field. ;  ;  Public Member Functions inherited from ROOT::Experimental::RFieldBase;  RFieldBase (const RFieldBase &)=delete;  ;  RFieldBase (RFieldBase &&)=default;  ;  RFieldBase (std::string_view name, std::string_view type, ENTupleStructure structure, bool isSimple, std::size_t nRepetitions=0);  The constructor creates the underlying column objects and connects them to either a sink or a source. ;  ; virtual ~RFieldBase ()=default;  ; RSchemaIterator begin ();  ; RConstSchemaIterator begin () const;  ; RValue BindValue (std::shared_ptr< void > objPtr);  Creates a value from a memory location with an already constructed object. ;  ; RConstSchemaIterator cbegin () const;  ; RConstSchemaIterator cend () const;  ; std::unique_ptr< RFieldBase > Clone (std::string_view newName) const;  Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns. ;  ; RBulk CreateBulk ();  The returned bulk is initially empty; RBulk::ReadBulk will construct the array of values. ;  ; template<> ; std::unique_ptr< void, typename RFieldBase::RCreateObjectDeleter< void >::deleter > CreateObject () const;  ; template<typename T > ; std::unique_ptr< T, typename RCreateObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html:1695,inherit,inherited,1695,doc/master/classROOT_1_1Experimental_1_1RField.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html,1,['inherit'],['inherited']
Modifiability,"ame, void* receiver, const char* method_name); TQConnection ctor.; Creates connection to method of class specified by name,; it could be interpreted class and with method == funcname. TQConnection(const TQConnection& con); Copy constructor. Ignore connections to this TQConnections. ~TQConnection(); TQConnection dtor.; - remove this connection from all signal lists; - we do not delete fSlot if it has other connections,; TQSlot::fCounter > 0 . const char * GetName() const; Returns name of connection (aka name of slot). void Destroyed(); Signal Destroyed tells that connection is destroyed. void ls(Option_t* option = """") const; List TQConnection full method name and list all signals; connected to this connection. void PrintCollectionHeader(Option_t* option) const; Print TQConnection full method name and print all; signals connected to this connection. void ExecuteMethod(); Apply slot-method to the fReceiver object without arguments. void ExecuteMethod(Int_t nargs, va_list va); Apply slot-method to the fReceiver object with; variable argument list. void ExecuteMethod(Long_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Long64_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Double_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Long_t* params, Int_t nparam = -1); Apply slot-method to the fReceiver object with variable; number of argument values. void ExecuteMethod(const char* params); Apply slot-method to the fReceiver object and; with string parameter. TQConnection & operator=(const TQConnection& ). void * GetReceiver() const; { return fReceiver; }. const char * GetClassName() const; { return fClassName; }. » Author: Valeriy Onuchin & Fons Rademakers 15/10/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-03-14 16:48; This page has been automatically",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TQConnection.html:15724,variab,variable,15724,root/html534/TQConnection.html,https://root.cern,https://root.cern/root/html534/TQConnection.html,2,['variab'],['variable']
Modifiability,"ame, void* receiver, const char* method_name); TQConnection ctor.; Creates connection to method of class specified by name,; it could be interpreted class and with method == funcname. TQConnection(const TQConnection& con); Copy constructor. Ignore connections to this TQConnections. ~TQConnection(); TQConnection dtor.; - remove this connection from all signal lists; - we do not delete fSlot if it has other connections,; TQSlot::fCounter > 0 . const char * GetName() const; Returns name of connection (aka name of slot). void Destroyed(); Signal Destroyed tells that connection is destroyed. void ls(Option_t* option = """") const; List TQConnection full method name and list all signals; connected to this connection. void PrintCollectionHeader(Option_t* option) const; Print TQConnection full method name and print all; signals connected to this connection. void ExecuteMethod(); Apply slot-method to the fReceiver object without arguments. void ExecuteMethod(Int_t nargs, va_list va); Apply slot-method to the fReceiver object with; variable argument list. void ExecuteMethod(Long_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Long64_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Double_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Long_t* params, Int_t nparam = -1); Apply slot-method to the fReceiver object with variable; number of argument values. void ExecuteMethod(const char* params); Apply slot-method to the fReceiver object and; with string parameter. void * GetReceiver() const; { return fReceiver; }. const char * GetClassName() const; { return fClassName; }. » Author: Valeriy Onuchin & Fons Rademakers 15/10/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TQConnection.h 25128 2008-08-12 17:59:19Z pcanal $ » Last generated: 2010-09-23 20:20; This page has been automatica",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQConnection.html:15579,variab,variable,15579,root/html528/TQConnection.html,https://root.cern,https://root.cern/root/html528/TQConnection.html,1,['variab'],['variable']
Modifiability,"ame, void* receiver, const char* method_name); TQConnection ctor.; Creates connection to method of class specified by name,; it could be interpreted class and with method == funcname. TQConnection(const TQConnection& con); Copy constructor. Ignore connections to this TQConnections. ~TQConnection(); TQConnection dtor.; - remove this connection from all signal lists; - we do not delete fSlot if it has other connections,; TQSlot::fCounter > 0 . const char * GetName() const; Returns name of connection (aka name of slot). void Destroyed(); Signal Destroyed tells that connection is destroyed. void ls(Option_t* option = """") const; List TQConnection full method name and list all signals; connected to this connection. void PrintCollectionHeader(Option_t* option) const; Print TQConnection full method name and print all; signals connected to this connection. void ExecuteMethod(); Apply slot-method to the fReceiver object without arguments. void ExecuteMethod(Int_t nargs, va_list va); Apply slot-method to the fReceiver object with; variable argument list. void ExecuteMethod(Long_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Long64_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Double_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Long_t* params, Int_t nparam = -1); Apply slot-method to the fReceiver object with variable; number of argument values. void ExecuteMethod(const char* params); Apply slot-method to the fReceiver object and; with string parameter. void * GetReceiver() const; { return fReceiver; }. const char * GetClassName() const; { return fClassName; }. » Author: Valeriy Onuchin & Fons Rademakers 15/10/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TQConnection.h 25128 2008-08-12 17:59:19Z pcanal $ » Last generated: 2011-07-04 15:36; This page has been automatica",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TQConnection.html:15698,variab,variable,15698,root/html530/TQConnection.html,https://root.cern,https://root.cern/root/html530/TQConnection.html,1,['variab'],['variable']
Modifiability,"ame, void* receiver, const char* method_name); TQConnection ctor.; Creates connection to method of class specified by name,; it could be interpreted class and with method == funcname. TQConnection(const TQConnection& con); Copy constructor. Ignore connections to this TQConnections. ~TQConnection(); TQConnection dtor.; - remove this connection from all signal lists; - we do not delete fSlot if it has other connections,; TQSlot::fCounter > 0 . const char * GetName() const; Returns name of connection (aka name of slot). void Destroyed(); Signal Destroyed tells that connection is destroyed. void ls(Option_t* option = """") const; List TQConnection full method name and list all signals; connected to this connection. void PrintCollectionHeader(Option_t* option) const; Print TQConnection full method name and print all; signals connected to this connection. void ExecuteMethod(); Apply slot-method to the fReceiver object without arguments. void ExecuteMethod(Int_t nargs, va_list va); Apply slot-method to the fReceiver object with; variable argument list. void ExecuteMethod(Long_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Long64_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Double_t param); Apply slot-method to the fReceiver object with; single argument value. void ExecuteMethod(Long_t* params, Int_t nparam = -1); Apply slot-method to the fReceiver object with variable; number of argument values. void ExecuteMethod(const char* params); Apply slot-method to the fReceiver object and; with string parameter. void * GetReceiver() const; { return fReceiver; }. const char * GetClassName() const; { return fClassName; }. » Author: Valeriy Onuchin & Fons Rademakers 15/10/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TQConnection.h 25128 2008-08-12 17:59:19Z pcanal $ » Last generated: 2011-11-03 20:22; This page has been automatica",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQConnection.html:15698,variab,variable,15698,root/html532/TQConnection.html,https://root.cern,https://root.cern/root/html532/TQConnection.html,2,['variab'],['variable']
Modifiability,"ame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; yframe->GetYaxis()->SetTitleOffset(1.6);; yframe->Draw();; c->cd(3);; gPad->SetLeftMargin(0.20);; hh_model->GetZaxis()->SetTitleOffset(2.5);; hh_model->Draw(""surf"");; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolyVar.h; RooProdPdf.h; RooRealVar.h; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolyVarA RooAbsReal implementing a polynomial in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf305__condcorrprod_8C.html:3639,variab,variable,3639,doc/master/rf305__condcorrprod_8C.html,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html,1,['variab'],['variable']
Modifiability,"ame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEdit.html:22918,inherit,inherited,22918,doc/master/classTGTextEdit.html,https://root.cern,https://root.cern/doc/master/classTGTextEdit.html,4,['inherit'],['inherited']
Modifiability,"ame... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void AddEnvVar (const char *name, const char *value);  Add an variable to the list of environment variables passed to proofserv on the master and slaves. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DelEnvVar (const char *name);  Remove an variable from the list of environment variables passed to proofserv on the master and slaves. ;  ; static const TList * GetEnvVars ();  Get environemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long64_t &value",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:32451,variab,variable,32451,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,2,['variab'],"['variable', 'variables']"
Modifiability,"ame: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; ; # Create a SparkConf object with all the desired Spark configuration parameters; sparkconf = pyspark.SparkConf().setAll(; {""spark.app.name"": ""distrdf001_spark_connection"",; ""spark.master"": ""local[2]"",; ""spark.driver.memory"": ""4g""}.items()); # Create a SparkContext with the configuration stored in `sparkconf`; sparkcontext = pyspark.SparkContext(conf=sparkconf); ; # Create an RDataFrame that will use Spark as a backend for computations; df = RDataFrame(1000, sparkcontext=sparkcontext); ; # Set the random seed and define two columns of the dataset with random numbers.; ROOT.gRandom.SetSeed(1); df_1 = df.Define(""gaus"", ""gRandom->Gaus(10, 1)"").Define(""exponential"", ""gRandom->Exp(10)""); ; # Book an histogram for each column; h_gaus = df_1.Histo1D((""gaus"", ""Normal distribution"", 50, 0, 30), ""gaus""); h_exp = df_1.Histo1D((""exponential"", ""Exponential distribution"", 50, 0, 30), ""exponen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/distrdf001__spark__connection_8py.html:2086,config,configuration,2086,doc/master/distrdf001__spark__connection_8py.html,https://root.cern,https://root.cern/doc/master/distrdf001__spark__connection_8py.html,1,['config'],['configuration']
Modifiability,"ame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; Bool_tHasOwnFont() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGGroupFrame.html:10301,Inherit,InheritsFrom,10301,root/html532/TGGroupFrame.html,https://root.cern,https://root.cern/root/html532/TGGroupFrame.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tHandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; voidHide()SIGNAL ; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGToolTip.html:9431,Inherit,InheritsFrom,9431,root/html532/TGToolTip.html,https://root.cern,https://root.cern/root/html532/TGToolTip.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tHandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; voidHide()SIGNAL ; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); virtual voidTGWindow:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGToolTip.html:9130,Inherit,InheritsFrom,9130,root/html602/TGToolTip.html,https://root.cern,https://root.cern/root/html602/TGToolTip.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidHide(); static voidTVirtualPadEditor::HideEditor(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInsertGedFrame(TGedFrame* f); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsGlobal() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGedEditor.html:12415,Inherit,InheritsFrom,12415,root/html532/TGedEditor.html,https://root.cern,https://root.cern/root/html532/TGedEditor.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGTextView::HandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGTextView::HandleSelectionClear(Event_t* event); virtual Bool_tTGTextView::HandleSelectionRequest(Event_t* event); virtual Bool_tTGTextView::HandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); localebasic_ios<char,char_traits<char> >::imbue(const locale& __loc); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTGTextView::IsMarked() const; Bool_tTObject::IsOnHeap() const; Bool_tTGTextView::IsReadOnly() const; virtual Bool_tTGTextView::IsSaved(); virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGTextViewostream.html:11223,Inherit,InheritsFrom,11223,root/html604/TGTextViewostream.html,https://root.cern,https://root.cern/root/html604/TGTextViewostream.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ame::fMustCleanupcleanup mode (see EFrameCleanup); TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGMdiButtons(const TGWindow* p, const TGWindow* titlebar); TGMdiButtons constructor.; the TGMdiButtons is the frame containing MDI picture buttons like; minimize, maximize, restore, close and help. ~TGMdiButtons(); TGMdiButtons destructor. TGPictureButton * GetButton(Int_t no) const; { return fButton[no]; }. » Author: Bertrand Bellenot 20/08/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-04 16:52; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGMdiButtons.html:18929,Inherit,Inheritance,18929,root/html534/TGMdiButtons.html,https://root.cern,https://root.cern/root/html534/TGMdiButtons.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame::fWMYWM y position; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fCancelcancel button; TGTextButton*fOkok button; char*fStrcutsaddress to store cuts string; char*fStrvarsaddress to store variables string; TGTextEntry*fTECutstext entry widget for cuts; TGTextEntry*fTEVarstext entry widget for variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreeInput(const TGWindow* p, const TGWindow* main, char* strvars, char* strcuts); Create simple input dialog. ~TTreeInput(); Cleanup dialog. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t ); Handle button and text enter events. TTreeInput(const TTreeInput& ). TTreeInput & operator=(const TTreeInput& ). » Author: David Gonzalez Maline 21/10/2008 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-15 16:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTreeInput.html:21951,variab,variables,21951,root/html534/TTreeInput.html,https://root.cern,https://root.cern/root/html534/TTreeInput.html,6,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variables']"
Modifiability,"ame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGGC*fgDefaultGC; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLVEntry(const TGWindow* p = 0, const TGPicture* bigpic = 0, const TGPicture* smallpic = 0, TGString* name = 0, TGString** subnames = 0, EListViewMode ViewMode = kLVDetails, UInt_t options = kChildFrame, Pixel_t back = GetWhitePixel()); Create a list view item. TGLVEntry(const TGLVContainer* p, const TString& name, const TString& cname, TGString** subnames = 0, UInt_t options = kChildFrame, Pixel_t back = GetWhitePixel()); Create a list view item. name - is name of item.; cname - is name of icon. In most cases this is class name of object; associated with this item. ~TGLVEntry(); Delete a list view item. void SetSubnames(const char* n1 = """", const char* n2 = """", const char* n3 = """", const char* n4 = """", const char* n5 = """", const char* n6 = """", const char* n7 = """", const char* n8 = """", const char* n9 = """", const char* n10 = """", const char* n11 = """", const char* n12 = """"); Sets new subnames. void Activate(Bool_t a); Make list view item",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLVEntry.html:19986,Inherit,Inheritance,19986,root/html602/TGLVEntry.html,https://root.cern,https://root.cern/root/html602/TGLVEntry.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGGC*fgDefaultGC; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGListView(const TGWindow* p, UInt_t w, UInt_t h, UInt_t options = kSunkenFrame | kDoubleBorder, Pixel_t back = GetDefaultFrameBackground()); Create a list view widget. ~TGListView(); Delete a list view widget. void ScrollHeader(Int_t pos); Scroll header buttons with horizontal scrollbar. void SetHeaders(Int_t ncolumns); Set number of headers, i.e. columns that will be shown in detailed view.; This method must be followed by exactly ncolumns SetHeader() calls,; making sure that every header (i.e. idx) is set (for and example see; SetDefaultHeaders()). void SetHeader(const char* s, Int_t hmode, Int_t cmode, Int_t idx); Set header button idx [0-fNColumns>, hmode is the x text alignmode; (ETextJustification) for the header text and cmode is the x text; alignmode for the item text. const char * GetHeader(Int_t idx) const; Returns name of header idx. If illegal idx or header not set for idx; 0 is returned. void SetDefaultHeaders(); Default ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGListView.html:20841,Inherit,Inheritance,20841,root/html602/TGListView.html,https://root.cern,https://root.cern/root/html602/TGListView.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGGC*fgDefaultGC; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGProgressBar(const TGWindow* p, UInt_t w, UInt_t h, Pixel_t back = GetWhitePixel(), Pixel_t barcolor = GetDefaultSelectedBackground(), GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t options = kDoubleBorder | kSunkenFrame); Create progress bar. void SetRange(Float_t min, Float_t max); Set min and max of progress bar. void SetPosition(Float_t pos); Set progress position between [min,max]. void Increment(Float_t inc); Increment progress position. void Reset(); Reset progress bar (i.e. set pos to 0). void SetFillType(TGProgressBar::EFillType type); Set fill type. void SetBarType(TGProgressBar::EBarType type); Set bar type. void SetBarColor(ULong_t color); Set progress bar color. void SetBarColor(const char* color = ""blue""); Set progress bar color. void Format(const char* format = ""%.2f""); Set format for displaying a value. FontStruct_t GetDefaultFontStruct(); Return default font structure in use. co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGProgressBar.html:20421,Inherit,Inheritance,20421,root/html602/TGProgressBar.html,https://root.cern,https://root.cern/root/html602/TGProgressBar.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGGC*fgDefaultGC; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTextLBEntry(const TGWindow* p = 0, TGString* s = 0, Int_t id = -1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); Create a text listbox entry. The TGString is adopted. ~TGTextLBEntry(); Delete text listbox entry. void DrawCopy(Handle_t id, Int_t x, Int_t y); Draw text listbox entry on window/pixmap. void DoRedraw(); Redraw text listbox entry. void SetText(TGString* new_text); Set or change text in text entry. FontStruct_t GetDefaultFontStruct(); Return default font structure in use for a text listbox entry. const TGGC & GetDefaultGC(); Return default graphics context in use for a text listbox entry. void SavePrimitive(ostream& out, Option_t* = """"); Save a list box entry widget as a C++ statement(s) on output stream out. void Update(TGLBEntry* e); { }. TGTextLBEntry(const TGTextLBEntry& ). TGTextLBEntry & operator=(const TGTextLBEntry&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTextLBEntry.html:19042,Inherit,Inheritance,19042,root/html602/TGTextLBEntry.html,https://root.cern,https://root.cern/root/html602/TGTextLBEntry.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGGC*fgDefaultGC; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTreeLBEntry(const TGWindow* p = 0, TGString* text = 0, const TGPicture* pic = 0, Int_t id = -1, TGString* path = 0, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); Create a tree (i.e. entry can be indented) listbox entry.; The strings text and path are adopted by the entry. ~TGTreeLBEntry(); Delete tree listbox entry. void Activate(Bool_t a); Make entry active (highlight picture). void DrawCopy(Handle_t id, Int_t x, Int_t y); Redraw the tree listbox entry on pixmap/window. void DoRedraw(); Redraw the tree listbox entry. TGDimension GetDefaultSize() const; Return default size of tree listbox entry. void Update(TGLBEntry* e); Update text and picture of a listbox entry. FontStruct_t GetDefaultFontStruct(); Return default font structure. const TGGC & GetDefaultGC(); Return default graphics context. TGTreeLBEntry(const TGWindow* p = 0, TGSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTreeLBEntry.html:18615,Inherit,Inheritance,18615,root/html602/TGTreeLBEntry.html,https://root.cern,https://root.cern/root/html602/TGTreeLBEntry.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TObject * GetSelected(); static; return selected object. TGeoTreeDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1); Constructor. ~TGeoTreeDialog(); Destructor. void DoSelect(TGListTreeItem* item); Update dialog to reflect current clicked object. void BuildListTree(). void ConnectSignalsToSlots(). TGeoTreeDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1). void DoClose(); Slots. void DoItemClick(TGListTreeItem* item, Int_t btn). » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-02 16:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoTreeDialog.html:24202,Inherit,Inheritance,24202,root/html604/TGeoTreeDialog.html,https://root.cern,https://root.cern/root/html604/TGeoTreeDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TObject * GetSelected(); static; return selected object. TGeoTreeDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1); Constructor. ~TGeoTreeDialog(); Destructor. void DoSelect(TGListTreeItem* item); Update dialog to reflect current clicked object. void BuildListTree(). void ConnectSignalsToSlots(). TGeoTreeDialog(TGFrame* caller, const TGWindow* main, UInt_t w = 1, UInt_t h = 1). void DoClose(); Slots. void DoItemClick(TGListTreeItem* item, Int_t btn). » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-30 15:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoTreeDialog.html:24202,Inherit,Inheritance,24202,root/html602/TGeoTreeDialog.html,https://root.cern,https://root.cern/root/html602/TGeoTreeDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. private:. const TBox*fBoxbox in pad to which tooltip is associated; TTimer*fDelaypopup delay timer; TGLayoutHints*fL1layout used to place text in frame; TGLabel*fLabelhelp text; const TVirtualPad*fPadpad to which tooltip is associated; const TGFrame*fWindowframe to which tool tip is associated; Int_tfXX position in fWindow where to popup; Int_tfYY position in fWindow where to popup. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGToolTip(const TGWindow* p = 0, const TGFrame* f = 0, const char* text = 0, Long_t delayms = 350); Create a tool tip. P is the tool tips parent window (normally; fClient->GetRoot(), f is the frame to which the tool tip is associated,; text is the tool tip one-liner and delayms is the delay in ms before; the tool tip is shown. TGToolTip(const TGWindow* p, const TBox* b, const char* text, Long_t delayms); Create a tool tip. P is the tool tips parent window (normally; fClient->GetRoot(), box is the area to which the tool tip is associated,; text is the tool tip one-liner and delayms is the delay in ms before; the tool tip is shown. When using this ctor with the box argument; you have to use Reset(const TVirtualPad *parent). TGToolTip(const TBox* b, const char* text, Long_t delayms); Create a tool tip in the parent window gClient->GetRoot(),; box is the area to which the tool tip is associated,; text is the tool tip one-liner and delayms ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGToolTip.html:20614,Inherit,Inheritance,20614,root/html602/TGToolTip.html,https://root.cern,https://root.cern/root/html602/TGToolTip.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Normal constructor. void MakeVariablesTab(); Make the ""variable"" tab. ~TParallelCoordEditor(); Destructor. void CleanUpSelections(); Clean up the selection combo box. void CleanUpVariables(); Clean up the variables combo box. void ConnectSignals2Slots(); Connect signals to slots. void DoActivateSelection(Bool_t ); Slot to activate or not a selection. void DoAddSelection(); Slot to add a selection. void DoAddVariable(); Slot to add a variable. void DoApplySelect(); Slot to apply a selection to the tree. void DoDelayDrawing(Bool_t ); Slot to delay the drawing. void DoDeleteSelection(); Slot to delete a selection. void DoDeleteVar(); Slot to delete a variable(). void DoDotsSpacing(); Slot to set the line dotspacing. void DoDotsSpacingField(); Slot to set the line dotspacing from the entry field. void DoAlphaField(); Slot to set the alpha value from the entry field. void DoAlpha(); Slot to set the alpha value. void DoEntriesToDraw(); Slot to select the entries to be drawn. void DoFirstEntry(); Slot to set the first entry. void DoGlobalLineColor(Pixel_t ); Slot to set the global line color. void DoGlobalLineWidth(Int_t ); Slot to set the global line width. void DoHideAllRanges(Bool_t ); Slot to hide all the ranges. void DoHistBinning(); Slot to set the axes histogram binning. void DoHistColorSelect(Pixel_t ); Slot to set the histograms color. void DoHistShowBoxes(Bool_t ); Slot to set histogram height. void DoHistPatternSelect(Style_t ); Slot to set the histograms fill style. void DoHistWidth(); Slot to set histogram width. void DoLineType(); Slot to set the line type. void DoLiveDotsSpacing(Int_t a); Slot to set the dot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParallelCoordEditor.html:24640,variab,variable,24640,root/html602/TParallelCoordEditor.html,https://root.cern,https://root.cern/root/html602/TParallelCoordEditor.html,4,['variab'],['variable']
Modifiability,"ame; 1296guarantees that ForeachSlot() will invoke the user expression with different `slot` parameters for different concurrent; 1297executions (see [Special helper columns: rdfentry_ and rdfslot_](\ref helper-cols) for more information on the slot parameter).; 1298We can take advantage of ForeachSlot() to evaluate a thread-safe root mean square of column ""x"":; 1299~~~{.cpp}; 1300// Thread-safe evaluation of RMS of column ""x"" using ForeachSlot; 1301ROOT::EnableImplicitMT();; 1302const unsigned int nSlots = df.GetNSlots();; 1303std::vector<double> sumSqs(nSlots, 0.);; 1304std::vector<unsigned int> ns(nSlots, 0);; 1305 ; 1306df.ForeachSlot([&sumSqs, &ns](unsigned int slot, double x) { sumSqs[slot] += x*x; ns[slot] += 1; }, {""x""});; 1307double sumSq = std::accumulate(sumSqs.begin(), sumSqs.end(), 0.); // sum all squares; 1308unsigned int n = std::accumulate(ns.begin(), ns.end(), 0); // sum all counts; 1309std::cout << ""rms of x: "" << std::sqrt(sumSq / n) << std::endl;; 1310~~~; 1311Notice how we created one `double` variable for each processing slot and later merged their results via `std::accumulate`.; 1312 ; 1313 ; 1314\anchor friends; 1315### Dataset joins with friend trees; 1316 ; 1317Vertically concatenating multiple trees that have the same columns (creating a logical dataset with the same columns and; 1318more rows) is trivial in RDataFrame: just pass the tree name and a list of file names to RDataFrame's constructor, or create a TChain; 1319out of the desired trees and pass that to RDataFrame.; 1320 ; 1321Horizontal concatenations of trees or chains (creating a logical dataset with the same number of rows and the union of the; 1322columns of multiple trees) leverages TTree's ""friend"" mechanism.; 1323 ; 1324Simple joins of trees that do not have the same number of rows are also possible with indexed friend trees (see below).; 1325 ; 1326To use friend trees in RDataFrame, set up trees with the appropriate relationships and then instantiate an RDataFrame; 1327wit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:76248,variab,variable,76248,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ame; 1336guarantees that ForeachSlot() will invoke the user expression with different `slot` parameters for different concurrent; 1337executions (see [Special helper columns: rdfentry_ and rdfslot_](\ref helper-cols) for more information on the slot parameter).; 1338We can take advantage of ForeachSlot() to evaluate a thread-safe root mean square of column ""x"":; 1339~~~{.cpp}; 1340// Thread-safe evaluation of RMS of column ""x"" using ForeachSlot; 1341ROOT::EnableImplicitMT();; 1342const unsigned int nSlots = df.GetNSlots();; 1343std::vector<double> sumSqs(nSlots, 0.);; 1344std::vector<unsigned int> ns(nSlots, 0);; 1345 ; 1346df.ForeachSlot([&sumSqs, &ns](unsigned int slot, double x) { sumSqs[slot] += x*x; ns[slot] += 1; }, {""x""});; 1347double sumSq = std::accumulate(sumSqs.begin(), sumSqs.end(), 0.); // sum all squares; 1348unsigned int n = std::accumulate(ns.begin(), ns.end(), 0); // sum all counts; 1349std::cout << ""rms of x: "" << std::sqrt(sumSq / n) << std::endl;; 1350~~~; 1351Notice how we created one `double` variable for each processing slot and later merged their results via `std::accumulate`.; 1352 ; 1353 ; 1354\anchor friends; 1355### Dataset joins with friend trees; 1356 ; 1357Vertically concatenating multiple trees that have the same columns (creating a logical dataset with the same columns and; 1358more rows) is trivial in RDataFrame: just pass the tree name and a list of file names to RDataFrame's constructor, or create a TChain; 1359out of the desired trees and pass that to RDataFrame.; 1360 ; 1361Horizontal concatenations of trees or chains (creating a logical dataset with the same number of rows and the union of the; 1362columns of multiple trees) leverages TTree's ""friend"" mechanism.; 1363 ; 1364Simple joins of trees that do not have the same number of rows are also possible with indexed friend trees (see below).; 1365 ; 1366To use friend trees in RDataFrame, set up trees with the appropriate relationships and then instantiate an RDataFrame; 1367wit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:77928,variab,variable,77928,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ame; Double_tfXlowNDCX bottom left corner of pad in NDC [0,1]; Float_tTAttPad::fXstatX position where to draw the statistics; Double_tfXtoAbsPixelkConversion coefficient for X World to absolute pixel; Double_tfXtoPixelxpixel = fXtoPixelk + fXtoPixel*xworld; Double_tfXtoPixelkConversion coefficient for X World to pixel; Double_tfY1Y of lower Y coordinate; Double_tfY2Y of upper Y coordinate; Float_tTAttPad::fYfileY position where to draw the file name; Double_tfYlowNDCY bottom left corner of pad in NDC [0,1]; Float_tTAttPad::fYstatY position where to draw the statistics; Double_tfYtoAbsPixelkConversion coefficient for Y World to absolute pixel; Double_tfYtoPixelypixel = fYtoPixelk + fYtoPixel*yworld; Double_tfYtoPixelkConversion coefficient for Y World to pixel; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Int_tfgMaxPickDistanceMaximum Pick Distance. private:. TObject*fTip! tool tip associated with box. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPad(); Pad default constructor. TPad(const char* name, const char* title, Double_t xlow, Double_t ylow, Double_t xup, Double_t yup, Color_t color = -1, Short_t bordersize = -1, Short_t bordermode = -2); Pad constructor. A pad is a linked list of primitives.; A pad is contained in a canvas. It may contain other pads.; A pad has attributes. When a pad is created, the attributes; defined in the current style are copied to the pad attributes. xlow [0,1] is the position of the bottom left point of the pad; expressed in the mother pad reference system; ylow [0,1] is the Y position of this point.; xup [0,1] is the x position of the top right point of the pad; expressed in the mother pad reference system; yup [0,1] is the Y position of this point. the bordersize is in pixels; bordermode = -1 box looks as it is behind the screen; bordermode = 0 no special effects; bordermode = 1 box looks as it is in front of the screen. ~TPad(); Pad destructo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPad.html:28620,Inherit,Inheritance,28620,root/html532/TPad.html,https://root.cern,https://root.cern/root/html532/TPad.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static TContextMenu*TEveCompositeFrame::fgCtxMenu; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TList*TEveCompositeFrame::fgFrameList; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static const TStringTEveCompositeFrame::fgkEmptyFrameName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCompositeFrameInPack(TGCompositeFrame* parent, TEveWindow* eve_parent, TGPack* pack); Constructor. ~TEveCompositeFrameInPack(); Destructor. void Destroy(); Virtual function called from eve side when the frame should be; destroyed. This means we expect that fEveWindow is null. Remove the frame from pack and delete it. TEveCompositeFrame& operator=(const TEveCompositeFrameInPack& ). TEveCompositeFrameInPack(const TEveCompositeFrameInPack& ). » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEveWindow.h 32138 2010-01-28 15:16:30Z matevz $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveCompositeFrameInPack.html:20166,Inherit,Inheritance,20166,root/html532/TEveCompositeFrameInPack.html,https://root.cern,https://root.cern/root/html532/TEveCompositeFrameInPack.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ame;  ; Bool_t fPickable {false};  ; std::unique_ptr< REveRenderData > fRenderData;  Externally assigned and controlled user data. ;  ; Bool_t fRnrChildren {kTRUE};  ; Bool_t fRnrSelf {kTRUE};  ; REveScene * fScene {nullptr};  ; REveElement * fSelectionMaster {nullptr};  ; std::string fTitle;  ; void * fUserData {nullptr};  ; REveElement * fVizModel {nullptr};  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from ROOT::Experimental::REveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  REvePointSetArray (const REvePointSetArray &)=delete;  ; REvePointSetArray & operator= (const REvePointSetArray &)=delete;  . Additional Inherited Members;  Public Types inherited from ROOT::Experimental::REveElement; typedef std::list< REveAunt * > AuntList_t;  ; enum  EChangeBits { ;   kCBColorSelection = BIT(0); , kCBTransBBox = BIT(1); , kCBObjProps = BIT(2); , kCBVisibility = BIT(3); , ;   kCBElementAdded = BIT(4). };  ; typedef std::list< REveElement * > List_t;  ; typedef std::set< REveElement * > Set_t;  ;  Public Types inherited from ROOT::Experimental::REveProjectable; typedef std::list< REveProjected * > ProjList_t;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Protected Types inherited from ROOT::Experimental::REveElement; enum  ECompoundSelectionColorBits { ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html:18096,inherit,inherited,18096,doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,1,['inherit'],['inherited']
Modifiability,"ame;  ; TString fTitle;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  ;  Protected Attributes inherited from TEveProjected; Float_t fDepth;  ; TEveProjectionManager * fManager;  ; TEveProjectable * fProjectable;  . Private Member Functions;  TEveGeoShapeProjected (const TEveGeoShapeProjected &);  ; TEveGeoShapeProjected & operator= (const TEveGeoShapeProjected &);  . Additional Inherited Members;  Public Types inherited from TEveShape; typedef std::vector< TEveVector2 >::iterator vVector2_i;  ; typedef std::vector< TEveVector2 > vVector2_t;  ;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoShapeProjected.html:36066,inherit,inherited,36066,doc/master/classTEveGeoShapeProjected.html,https://root.cern,https://root.cern/doc/master/classTEveGeoShapeProjected.html,3,['inherit'],['inherited']
Modifiability,"ame=nullptr) const override;  Return analytical integral defined by given scenario code. ;  ; Int_t basisCode (const char *name) const override;  Return code for basis function representing by 'name' string. ;  ; bool canComputeBatchWithCuda () const override;  ; bool checkObservables (const RooArgSet *nset) const override;  Check if PDF is valid for given normalization set. ;  ; TObject * clone (const char *newname) const override;  ; const RooArgList & coefList () const;  Return list of coefficients of component p.d.f.s. ;  ; RooResolutionModel * convolution (RooFormulaVar *basis, RooAbsArg *owner) const override;  Instantiate a clone of this resolution model representing a convolution with given basis function. ;  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; double evaluate () const override;  Calculate the current value. ;  ; double expectedEvents (const RooArgSet *nset) const override;  Return expected number of events for extended likelihood calculation, which is the sum of all coefficients. ;  ; ExtendMode extendMode () const override;  Return extended mode capabilities. ;  ; void fixCoefNormalization (const RooArgSet &refCoefNorm);  By default the interpretation of the fraction coefficients is performed in the contextual choice of observables. ;  ; void fixCoefRange (const char *rangeName);  By default the interpretation of the fraction coefficients is performed in the default range. ;  ; bool forceAnalyticalInt (const RooAbsArg &) const override;  ; void generateEvent (Int_t code) override;  This function should never be called as RooAddModel implements a custom generator context. ;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &numVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Variant of getAnalyticalIntegral that is also passed the normalization set that should be applied to the integrand of which the integral is requested. ;  ; I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:2926,extend,extended,2926,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['extend'],['extended']
Modifiability,"ame=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetMaxPointsPerLine (Int_t maxp=50);  Static function to set fgMaxPointsPerLine for graph painting. ;  ;  Static Public Member Functions inherited from TVirtualGraphPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGraphPainter * GetPainter ();  Static function returning a pointer to the current graph painter. ;  ; static void SetPainter (TVirtualGraphPainter *painter);  Static function to set an alternative histogram painter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::vector< Double_t > gxwork;  ; std::vector< Double_t > gxworkl;  ; std::vector< Double_t > gywork;  ; std::vector< Double_t > gyworkl;  Internal buffers for coordinates. Used for graphs painting. ;  . Static Protected Attributes; static Int_t fgMaxPointsPerLine = 50;  Number of points per chunks' line when drawing a graph. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPainter.html:39063,inherit,inherited,39063,doc/master/classTGraphPainter.html,https://root.cern,https://root.cern/doc/master/classTGraphPainter.html,1,['inherit'],['inherited']
Modifiability,"ameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fCancelcancel button; TGLabel*fLabeltext entry label; TGTextButton*fOkok button; char*fRetStraddress to store return string; TGTextEntry*fTEtext entry widget. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGInputDialog(const TGWindow* p = 0, const TGWindow* main = 0, const char* prompt = 0, const char* defval = 0, char* retstr = 0, UInt_t options = kVerticalFrame); Create simple input dialog. It is important to know that the case where the constructor in; which all the variables are initialized to their default values is; only used for the TBrowser to inspect on the classes. For normal; use the only variable that should be free is options. Variables prompt, defval are the content of the input dialog while; retstr has to be initialized to a char[256]. In case these are not; initialized, they will show default values while retstr will be; automatically allocated by the dialog. However this will make; impossible to retrieve the value entered by the dialog. To see TGInputDialog in use see:; $ROOTSYS/tutorials/testInputDialog.cxx. ~TGInputDialog(); Cleanup dialog. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t ); Handle button and text enter events. TGInputDialog(const TGInputDialog& ). TGInputDialog & operator=(const TGInputDialog& ). » Author: David Gonzalez Maline 19/07/2006 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13 19:25; This page has been automatically generated. For comments or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGInputDialog.html:22371,variab,variables,22371,root/html534/TGInputDialog.html,https://root.cern,https://root.cern/root/html534/TGInputDialog.html,2,['variab'],['variables']
Modifiability,"ameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fCancelcancel button; TGLabel*fLabeltext entry label; TGTextButton*fOkok button; char*fRetStraddress to store return string; TGTextEntry*fTEtext entry widget. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGInputDialog(const TGWindow* p = 0, const TGWindow* main = 0, const char* prompt = 0, const char* defval = 0, char* retstr = 0, UInt_t options = kVerticalFrame); Create simple input dialog. It is important to know that the case where the constructor in; which all the variables are initialized to their default values is; only used for the TBrowser to inspect on the classes. For normal; use the only variable that should be free is options. Variables prompt, defval are the content of the input dialog while; retstr has to be initialized to a char[256]. In case these are not; initialized, they will show default values while retstr will be; automatically allocated by the dialog. However this will make; impossible to retrieve the value entered by the dialog. To see TGInputDialog in use see:; $ROOTSYS/tutorials/testInputDialog.cxx. ~TGInputDialog(); Cleanup dialog. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t ); Handle button and text enter events. TGInputDialog(const TGInputDialog& ). TGInputDialog & operator=(const TGInputDialog& ). » Author: David Gonzalez Maline 19/07/2006 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGInputDialog.h 23115 2008-04-10 13:35:37Z rdm $ » Last generated: 2010-09-23 20:06; This page ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGInputDialog.html:22199,variab,variables,22199,root/html528/TGInputDialog.html,https://root.cern,https://root.cern/root/html528/TGInputDialog.html,1,['variab'],['variables']
Modifiability,"ameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fCancelcancel button; TGLabel*fLabeltext entry label; TGTextButton*fOkok button; char*fRetStraddress to store return string; TGTextEntry*fTEtext entry widget. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGInputDialog(const TGWindow* p = 0, const TGWindow* main = 0, const char* prompt = 0, const char* defval = 0, char* retstr = 0, UInt_t options = kVerticalFrame); Create simple input dialog. It is important to know that the case where the constructor in; which all the variables are initialized to their default values is; only used for the TBrowser to inspect on the classes. For normal; use the only variable that should be free is options. Variables prompt, defval are the content of the input dialog while; retstr has to be initialized to a char[256]. In case these are not; initialized, they will show default values while retstr will be; automatically allocated by the dialog. However this will make; impossible to retrieve the value entered by the dialog. To see TGInputDialog in use see:; $ROOTSYS/tutorials/testInputDialog.cxx. ~TGInputDialog(); Cleanup dialog. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t ); Handle button and text enter events. TGInputDialog(const TGInputDialog& ). TGInputDialog & operator=(const TGInputDialog& ). » Author: David Gonzalez Maline 19/07/2006 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGInputDialog.h 23115 2008-04-10 13:35:37Z rdm $ » Last generated: 2011-07-04 15:29; This page ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGInputDialog.html:22352,variab,variables,22352,root/html530/TGInputDialog.html,https://root.cern,https://root.cern/root/html530/TGInputDialog.html,1,['variab'],['variables']
Modifiability,"ameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fCancelcancel button; TGLabel*fLabeltext entry label; TGTextButton*fOkok button; char*fRetStraddress to store return string; TGTextEntry*fTEtext entry widget. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGInputDialog(const TGWindow* p = 0, const TGWindow* main = 0, const char* prompt = 0, const char* defval = 0, char* retstr = 0, UInt_t options = kVerticalFrame); Create simple input dialog. It is important to know that the case where the constructor in; which all the variables are initialized to their default values is; only used for the TBrowser to inspect on the classes. For normal; use the only variable that should be free is options. Variables prompt, defval are the content of the input dialog while; retstr has to be initialized to a char[256]. In case these are not; initialized, they will show default values while retstr will be; automatically allocated by the dialog. However this will make; impossible to retrieve the value entered by the dialog. To see TGInputDialog in use see:; $ROOTSYS/tutorials/testInputDialog.cxx. ~TGInputDialog(); Cleanup dialog. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t ); Handle button and text enter events. TGInputDialog(const TGInputDialog& ). TGInputDialog & operator=(const TGInputDialog& ). » Author: David Gonzalez Maline 19/07/2006 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGInputDialog.h 23115 2008-04-10 13:35:37Z rdm $ » Last generated: 2011-11-03 20:14; This page ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGInputDialog.html:22352,variab,variables,22352,root/html532/TGInputDialog.html,https://root.cern,https://root.cern/root/html532/TGInputDialog.html,2,['variab'],['variables']
Modifiability,"ameBgTransp; Color_tfFrameColor; Char_tfFrameLineTransp; Double_tTGLCameraOverlay::fFrustum[4]; Bool_tfHeaderSelected; TStringfHeaderTxt; Bool_tfInDrag; Float_tfMenuW; Int_tfMouseX! last mouse position; Int_tfMouseY! last mouse position; TGLCameraOverlay::EModeTGLCameraOverlay::fOrthographicMode; TGLCameraOverlay::EModeTGLCameraOverlay::fPerspectiveMode; TAxis*fPlaneAxis; TGLOverlayElement::ERoleTGLOverlayElement::fRole; Color_tfScaleColor; Double_tfScaleCoordX; Double_tfScaleCoordY; Double_tfScaleH; Char_tfScaleTransparencytransaprency in %; Double_tfScaleW; Bool_tTGLCameraOverlay::fShowOrthographic; Bool_tTGLCameraOverlay::fShowPerspective; Bool_tfShowPlane; Bool_tfShowScales; Bool_tfShowSlider; Float_tfSliderHslider height in % of viewport; Float_tfSliderPosYy position of slider bottom up; Float_tfSliderVal; TGLOverlayElement::EStateTGLOverlayElement::fState; Bool_tTGLCameraOverlay::fUseAxisColors; Bool_tTGLCameraOverlay::fUseExternalRefPlane. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloLegoOverlay(); Constructor. Bool_t SetSliderVal(Event_t* event, TGLRnrCtx& rnrCtx); Set height of horizontal plane in the calorimeter. Bool_t Handle(TGLRnrCtx& rnrCtx, TGLOvlSelectRecord& selRec, Event_t* event); Handle overlay event.; Return TRUE if event was handled. Bool_t MouseEnter(TGLOvlSelectRecord& selRec); Mouse has entered overlay area. void MouseLeave(); Mouse has left overlay area. void SetScaleColorTransparency(Color_t colIdx, Char_t transp); Set color and transparency of scales. void SetScalePosition(Double_t x, Double_t y); Set scale coordinates in range [0,1]. void RenderHeader(TGLRnrCtx& rnrCtx); Render text on top right corner of the screen. void RenderPlaneInterface(TGLRnrCtx& rnrCtx); Render menu for plane-value and the plane if marked. void RenderLogaritmicScales(TGLRnrCtx& rnrCtx); Draw slider of calo 2D in mode TEveCalo:fValSize. void RenderPaletteScales(TGLRnrCtx& rnrCtx); Draw slider of calo 2D in mode ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCaloLegoOverlay.html:5075,Inherit,Inheritance,5075,root/html602/TEveCaloLegoOverlay.html,https://root.cern,https://root.cern/root/html602/TEveCaloLegoOverlay.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidsetCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidsetFloor(Bool_t flag); static voidsetFloorGlobal(Bool_t flag); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRealSumPdf.html:29848,config,config,29848,root/html534/RooRealSumPdf.html,https://root.cern,https://root.cern/root/html534/RooRealSumPdf.html,6,['config'],['config']
Modifiability,"ameLineColorpad frame line color; Style_tTAttPad::fFrameLineStylepad frame line style; Width_tTAttPad::fFrameLineWidthpad frame line width; Float_tTAttPad::fLeftMarginLeftMargin; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tfResizing!true when resizing the pad; Float_tTAttPad::fRightMarginRightMargin; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Float_tTAttPad::fTopMarginTopMargin; Float_tTAttPad::fXfileX position where to draw the file name; Float_tTAttPad::fXstatX position where to draw the statistics; Float_tTAttPad::fYfileY position where to draw the file name; Float_tTAttPad::fYstatY position where to draw the statistics; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TVirtualPad *& Pad(); Return the current pad for the current thread. ~TVirtualPad(); VirtualPad destructor. void Streamer(TBuffer& ); Stream an object of class TVirtualPad. Bool_t PadInSelectionMode() const; Should always return false unless you have non-standard picking. Bool_t PadInHighlightMode() const; Should always return false, unless you can highlight selected object in pad. void PushTopLevelSelectable(TObject* top); Does nothing, unless you implement your own picking.; When complex object containing sub-objects (which can be picked); is painted in a pad, this ""top-level"" object is pushed into; the selectables stack. void PushSelectableObject(TObject* obj); Does nothing, unless you implement your own picking.; ""Complete"" object, or part of complex object, which; can be picked. void PopTopLevelSelectable(); Does nothing, unless you implement your own picking.; Remove top level selectable and all its' children. void * GetSender();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualPad.html:21457,Inherit,Inheritance,21457,root/html534/TVirtualPad.html,https://root.cern,https://root.cern/root/html534/TVirtualPad.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ameLineColorpad frame line color; Style_tTAttPad::fFrameLineStylepad frame line style; Width_tTAttPad::fFrameLineWidthpad frame line width; Float_tTAttPad::fLeftMarginLeftMargin; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tfResizing!true when resizing the pad; Float_tTAttPad::fRightMarginRightMargin; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Float_tTAttPad::fTopMarginTopMargin; Float_tTAttPad::fXfileX position where to draw the file name; Float_tTAttPad::fXstatX position where to draw the statistics; Float_tTAttPad::fYfileY position where to draw the file name; Float_tTAttPad::fYstatY position where to draw the statistics; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TVirtualPad *& Pad(); Return the current pad for the current thread. ~TVirtualPad(); VirtualPad destructor. void Streamer(TBuffer& b); Stream an object of class TVirtualPad. Bool_t PadInSelectionMode() const; Should always return false unless you have non-standard picking. Bool_t PadInHighlightMode() const; Should always return false, unless you can highlight selected object in pad. void PushTopLevelSelectable(TObject* top); Does nothing, unless you implement your own picking.; When complex object containing sub-objects (which can be picked); is painted in a pad, this ""top-level"" object is pushed into; the selectables stack. void PushSelectableObject(TObject* obj); Does nothing, unless you implement your own picking.; ""Complete"" object, or part of complex object, which; can be picked. void PopTopLevelSelectable(); Does nothing, unless you implement your own picking.; Remove top level selectable and all its' children. void * GetSender()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualPad.html:20868,Inherit,Inheritance,20868,root/html532/TVirtualPad.html,https://root.cern,https://root.cern/root/html532/TVirtualPad.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ameList&); virtual~TGMdiFrameList(); static TClass*Class(); TGMdiFrameList*GetCycleNext() const; TGMdiFrameList*GetCyclePrev() const; TGMdiDecorFrame*GetDecorFrame() const; UInt_tGetFrameId() const; TGMdiFrameList*GetNext() const; TGMdiFrameList*GetPrev() const; virtual TClass*IsA() const; TGMdiFrameList&operator=(const TGMdiFrameList&); voidSetCycleNext(TGMdiFrameList* next); voidSetCyclePrev(TGMdiFrameList* prev); voidSetDecorFrame(TGMdiDecorFrame* decor); voidSetFrameId(UInt_t id); voidSetNext(TGMdiFrameList* next); voidSetPrev(TGMdiFrameList* prev); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. TGMdiFrameList*fCycleNextpointers on previous and next TGMdiFrameList; TGMdiFrameList*fCyclePrev; TGMdiDecorFrame*fDecorMDI decor frame; UInt_tfFrameIdTGMdiFrameList Id; TGMdiFrameList*fNextpointers on previous and next TGMdiFrameList; TGMdiFrameList*fPrev. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TGMdiFrameList(); { }. UInt_t GetFrameId() const; { return fFrameId; }. TGMdiDecorFrame * GetDecorFrame() const; { return fDecor; }. TGMdiFrameList * GetPrev() const; { return fPrev; }. TGMdiFrameList * GetNext() const; { return fNext; }. TGMdiFrameList * GetCyclePrev() const; { return fCyclePrev; }. TGMdiFrameList * GetCycleNext() const; { return fCycleNext; }. void SetFrameId(UInt_t id); { fFrameId = id; }. void SetDecorFrame(TGMdiDecorFrame* decor); { fDecor = decor; }. void SetPrev(TGMdiFrameList* prev); { fPrev = prev; }. void SetNext(TGMdiFrameList* next); { fNext = next; }. void SetCyclePrev(TGMdiFrameList* prev); { fCyclePrev = prev; }. void SetCycleNext(TGMdiFrameList* next); { fCycleNext = next; }. » Author: Bertrand Bellenot 20/08/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGMdiMainFrame.h 40531 2011-08-10 13:56:13Z bellenot $ » Last generated: 2011-11-03 20:15; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMdiFrameList.html:1404,Inherit,Inheritance,1404,root/html532/TGMdiFrameList.html,https://root.cern,https://root.cern/root/html532/TGMdiFrameList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amed arguments. ;  ; virtual std::list< double > * plotSamplingHint (RooAbsRealLValue &obs, double xlo, double xhi) const;  Interface for returning an optional hint for initial sampling points when constructing a curve projected on observable obs. ;  ; virtual void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const;  Interface method for function objects to indicate their preferred order of observables for scanning their values into a (multi-dimensional) histogram or RooDataSet. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:25770,config,config,25770,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,9,['config'],"['config', 'configuration']"
Modifiability,"amed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*generate(Double_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidinitGenerator(const RooArgSet& theEvent); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tisValid() const; Bool_tisVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsGenContext.html:3315,Inherit,InheritsFrom,3315,root/html534/RooAbsGenContext.html,https://root.cern,https://root.cern/root/html534/RooAbsGenContext.html,1,['Inherit'],['InheritsFrom']
Modifiability,"amed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*generate(Double_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidinitGenerator(const RooArgSet& theEvent); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tisValid() const; Bool_tisVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooAbsGenContext.html:3315,Inherit,InheritsFrom,3315,root/html604/RooAbsGenContext.html,https://root.cern,https://root.cern/root/html604/RooAbsGenContext.html,1,['Inherit'],['InheritsFrom']
Modifiability,"amed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Visual_tGetVisual() const; virtual voidGetWindowAttributes(Window_t id, WindowAttributes_t& attr); virtual Window_tGetWindowID(Int_t wid); virtual voidGetWindowSize(Drawable_t id, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); virtual voidGrabButton(Window_t id, EMouseButton button, UInt_t modifier, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE); virtual voidGrabKey(Window_t id, Int_t keycode, UInt_t modifier, Bool_t grab = kTRUE); virtual voidGrabPointer(Window_t id, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE, Bool_t owner_events = kTRUE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Bool_tHasTTFonts() const; virtual voidIconifyWindow(Window_t id); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tInit(void* display = 0); virtual Int_tInitWindow(ULong_t window); virtual voidTObject::Inspect() constMENU ; static TVirtualX*&Instance(); virtual Atom_tInternAtom(const char* atom_name, Bool_t only_if_exist); virtual voidIntersectRegion(Region_t rega, Region_t regb, Region_t result); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsCmdThread() const; virtual Bool_tIsDNDAware(Window_t win, Atom_t* typelist); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Int_tKeysymToKeycode(UInt_t keysym); virtual char**ListFonts(const char* fontname, Int_t max, Int_t& count); virtual FontStruct_tLoadQueryFont(const char* font_name); virtual voidLookupString(Event_t* event, char* buf, Int_t buflen, UInt_t& keysym); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualX.html:10117,Inherit,InheritsFrom,10117,root/html532/TVirtualX.html,https://root.cern,https://root.cern/root/html532/TVirtualX.html,4,['Inherit'],['InheritsFrom']
Modifiability,"amed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Visual_tGetVisual() const; virtual voidGetWindowAttributes(Window_t id, WindowAttributes_t& attr); virtual Window_tGetWindowID(Int_t wid); virtual voidGetWindowSize(Drawable_t id, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); virtual voidGrabButton(Window_t id, EMouseButton button, UInt_t modifier, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE); virtual voidGrabKey(Window_t id, Int_t keycode, UInt_t modifier, Bool_t grab = kTRUE); virtual voidGrabPointer(Window_t id, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE, Bool_t owner_events = kTRUE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Bool_tHasTTFonts() const; virtual voidIconifyWindow(Window_t id); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tInit(void* display = 0); virtual Int_tInitWindow(ULong_t window); virtual voidTObject::Inspect() constMENU ; static TVirtualX*&TVirtualX::Instance(); virtual Atom_tInternAtom(const char* atom_name, Bool_t only_if_exist); virtual voidIntersectRegion(Region_t rega, Region_t regb, Region_t result); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTVirtualX::IsCmdThread() const; static Int_tIsCoinLoaded(); virtual Bool_tIsDNDAware(Window_t win, Atom_t* typelist); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsHandleValid(Window_t id); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; static Int_tiwid(QPaintDevice* wid); static QPaintDevice*iwid(Int_t wid); static QPaintDevice*iwid(Window_t wid); virtual Int_tKeysymToKeycode(UInt_t keysym); virtual c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGQt.html:10199,Inherit,InheritsFrom,10199,root/html532/TGQt.html,https://root.cern,https://root.cern/root/html532/TGQt.html,2,['Inherit'],['InheritsFrom']
Modifiability,"amed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Visual_tGetVisual() const; virtual voidGetWindowAttributes(Window_t id, WindowAttributes_t& attr); virtual Window_tGetWindowID(Int_t wid); virtual voidGetWindowSize(Drawable_t id, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); virtual voidGrabButton(Window_t id, EMouseButton button, UInt_t modifier, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE); virtual voidGrabKey(Window_t id, Int_t keycode, UInt_t modifier, Bool_t grab = kTRUE); virtual voidGrabPointer(Window_t id, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE, Bool_t owner_events = kTRUE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Bool_tHasTTFonts() const; virtual voidIconifyWindow(Window_t id); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tInit(void* display); virtual Int_tInitWindow(ULong_t window); virtual voidTObject::Inspect() constMENU ; static TVirtualX*&TVirtualX::Instance(); virtual Atom_tInternAtom(const char* atom_name, Bool_t only_if_exist); virtual voidIntersectRegion(Region_t rega, Region_t regb, Region_t result); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTVirtualX::IsCmdThread() const; virtual Bool_tIsDNDAware(Window_t win, Atom_t* typelist); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Int_tKeysymToKeycode(UInt_t keysym); virtual char**ListFonts(const char* fontname, Int_t max, Int_t& count); virtual FontStruct_tLoadQueryFont(const char* font_name); virtual voidLookupString(Event_t* event, char* buf, Int_t buflen, U",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGX11.html:10146,Inherit,InheritsFrom,10146,root/html532/TGX11.html,https://root.cern,https://root.cern/root/html532/TGX11.html,4,['Inherit'],['InheritsFrom']
Modifiability,"amed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_t_isArray; RooLinkedList_list; Bool_t_owning; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooTObjWrap(Bool_t isArray = kFALSE); {}. RooTObjWrap(TObject* inObj, Bool_t isArray = kFALSE); { _list.Add(inObj) ; }. RooTObjWrap(const RooTObjWrap& other); {}. virtual ~RooTObjWrap(); { if (_owning) _list.Delete() ; }. void setOwning(Bool_t flag); { _owning = flag ; }. TObject* obj() const; { return _list.At(0) ; }. const RooLinkedList& objList() const; { return _list ; }. void setObj(TObject* inObj). » Last changed: Tue Mar 10 17:20:54 2015 » Last generated: 2015-03-10 17:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooTObjWrap.html:5766,Inherit,Inheritance,5766,root/html534/RooTObjWrap.html,https://root.cern,https://root.cern/root/html534/RooTObjWrap.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TGeoShape*fShape; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TGeoManager*fgGeoMangeur. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoManager* GetGeoMangeur(); Return static geo-manager that is used intenally to make shapes; lead a happy life.; Set gGeoManager to this object when creating TGeoShapes to be; passed into TEveGeoShapes. TEveGeoShape(const char* name = ""TEveGeoShape"", const char* title = 0); Constructor. ~TEveGeoShape(); Destructor. TGeoShape* MakePolyShape(); Create derived TEveGeoShape form a TGeoCompositeShape. void SetNSegments(Int_t s); Set number of segments. void SetShape(TGeoShape* s); Set TGeoShape shown by this object. The shape is owned by TEveGeoShape but TGeoShape::fUniqueID is; used for reference counting so you can pass the same shape to; several TEveGeoShapes. If it if is taken from an existing TGeoManager, manually; increase the fUniqueID before passing it to TEveGeoShape. void ComputeBBox(); Compute bounding-box. void Paint(Option_t* option = """"); Paint object. void Save(const char* file, const char* name = ""Extract""); Save the shape",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveGeoShape.html:22628,Inherit,Inheritance,22628,root/html532/TEveGeoShape.html,https://root.cern,https://root.cern/root/html532/TEveGeoShape.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TGeoShape*fShape; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TGeoManager*fgGeoMangeur. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoManager* GetGeoMangeur(); Return static geo-manager that is used intenally to make shapes; lead a happy life.; Set gGeoManager to this object when creating TGeoShapes to be; passed into TEveGeoShapes. TGeoHMatrix* GetGeoHMatrixIdentity(); Return static identity matrix in homogeneous representation.; This is needed because TGeoCompositeShape::PaintComposite(); assumes TGeoShape::fgTransform is a TGeoHMatrix and we need to pass in; an identity matrix when painting a composite shape. TEveGeoShape(const char* name = ""TEveGeoShape"", const char* title = 0); Constructor. ~TEveGeoShape(); Destructor. TGeoShape* MakePolyShape(); Create derived TEveGeoShape form a TGeoCompositeShape. void SetNSegments(Int_t s); Set number of segments. void SetShape(TGeoShape* s); Set TGeoShape shown by this object. The shape is owned by TEveGeoShape but TGeoShape::fUniqueID is; used for reference counting so you can pass the same shape to; several TEveGeoSha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveGeoShape.html:22742,Inherit,Inheritance,22742,root/html534/TEveGeoShape.html,https://root.cern,https://root.cern/root/html534/TEveGeoShape.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_t_disableCacheFlag to run object in passthrough (= non-caching mode). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsCachedPdf(); Destructor. Double_t getValV(const RooArgSet* set = 0) const; Implementation of getVal() overriding default implementation; of RooAbsPdf. Return normalized value stored in cache p.d.f; rather than return value of evaluate() which is undefined; for RooAbsCachedPdf. RooAbsPdf* getCachePdf(const RooArgSet* nset = 0) const; Return pointer to RooHistPdf cache pdf for given choice of observables. RooDataHist* getCacheHist(const RooArgSet* nset = 0) const; Return pointer to RooDataHist cache histogram for given choice of observables. void clearCacheObject(RooAbsCachedPdf::PdfCacheElem& cache) const; Mark all bins of given cache as unitialized (value -1). TString cacheNameSuffix(const RooArgSet& nset) const; Construct string with unique suffix for cache objects based on; observable names that define cache configuration. void setInterpolationOrder(Int_t order); Change the interpolation order that is used in RooHistPdf cache; representation smoothing the RooDataHist shapes. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; Force RooRealIntegral to offer all our actual observable for internal; integration. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertises internal (analytical) integration capabilities. Call; is forwarded to RooHistPdf cache p.d.f of cache that is used for; given choice of observables. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implements internal (analytical) integration capabilities. Call; is forwarded to RooHistPdf cache p.d.f of cache that is used for; given choice of observables. Bool_t selfNormalized() const; Declare p.d.f self normalized. RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsCachedPdf.html:44395,config,configuration,44395,root/html532/RooAbsCachedPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsCachedPdf.html,3,['config'],['configuration']
Modifiability,"amed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoIdentity.html:13775,inherit,inherited,13775,doc/master/classTGeoIdentity.html,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html,1,['inherit'],['inherited']
Modifiability,"amed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. Bool_tRooAbsCollection::_allRRVAll contents are RRV; Bool_t_defShapeServer; Bool_t_defValueServer; TIterator*_iter! do not persist; RooLinkedListRooAbsCollection::_listActual object store; TStringRooAbsCollection::_nameOur name.; static Int_tRooPrintable::_nameLength; RooArgSet*RooAbsProxy::_nset! Normalization set to be used for evaluation of RooAbsPdf contents; Bool_tRooAbsCollection::_ownContFlag to identify a list that owns its contents.; RooAbsArg*_owner; static char*RooArgSet::_poolBegin! Start of memory pool; static char*RooArgSet::_poolCur! Next free slot in memory pool; static char*RooArgSet::_poolEnd! End of memory pool . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void* operator new(size_t bytes); Overload new operator must be implemented because it is overloaded; in the RooArgSet base class. Perform standard memory allocation; here instead of memory pool management performed in RooArgSet. void operator delete(void* ptr). RooSetProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t defValueServer = kTRUE, Bool_t defShapeServer = kFALSE); Construct proxy with given name and description, with given owner; The default value and shape dirty propagation of the set contents; to the set owner is controlled by flags defValueServer and defShapeServer. RooSetProxy(const char* name, RooAbsArg* owner, const RooSetProxy& other); Copy constructor. ~RooSetProxy(); Destructor. Bool_t add(const RooAbsArg& var, Bool_t valueServer, Bool_t shapeServer, Bool_t silent); Overloaded RooArgSet::add() method insert object into set; and registers object as server to owner with given value; and shape dirty flag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSetProxy.html:12914,Inherit,Inheritance,12914,root/html532/RooSetProxy.html,https://root.cern,https://root.cern/root/html532/RooSetProxy.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTriangleSetEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. TEveTriangleSetEditor(const TEveTriangleSetEditor& ). TEveTriangleSetEditor& operator=(const TEveTriangleSetEditor& ). virtual ~TEveTriangleSetEditor(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveTriangleSetEditor.html:20625,Inherit,Inheritance,20625,root/html604/TEveTriangleSetEditor.html,https://root.cern,https://root.cern/root/html604/TEveTriangleSetEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTriangleSetEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. TEveTriangleSetEditor(const TEveTriangleSetEditor& ). TEveTriangleSetEditor& operator=(const TEveTriangleSetEditor& ). virtual ~TEveTriangleSetEditor(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTriangleSetEditor.html:20625,Inherit,Inheritance,20625,root/html602/TEveTriangleSetEditor.html,https://root.cern,https://root.cern/root/html602/TEveTriangleSetEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics sys",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TBufferMergerFile.html:20793,inherit,inheritance,20793,doc/v632/classROOT_1_1TBufferMergerFile.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TBufferMergerFile.html,11,['inherit'],['inheritance']
Modifiability,"amer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void RooStats::PdfProposal::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 118 of file PdfProposal.h. Member Data Documentation. ◆ fCache. std::unique_ptr<RooDataSet> RooStats::PdfProposal::fCache. protected . our position in the cached proposal data set ; Definition at line 109 of file PdfProposal.h. ◆ fCachePosition. Int_t RooStats::PdfProposal::fCachePosition = 0. protected . how many points to generate each time ; Definition at line 108 of file PdfProposal.h. ◆ fCacheSize. Int_t RooStats::PdfProposal::fCacheSize = 1. protected . the last point we were at ; Definition at line 107 of file PdfProposal.h. ◆ fIt. std::map<RooRealVar*,RooAbsReal*>::iterator RooStats::PdfProposal::fIt. protected . map of values in pdf to update ; Definition at line 105 of file PdfProposal.h. ◆ fLastX. RooArgSet RooStats::PdfProposal::fLastX. protected . pdf iterator ; Definition at line 106 of file PdfProposal.h. ◆ fMap. std::map<RooRealVar*, RooAbsReal*> RooStats::PdfProposal::fMap. protected . the proposal density function ; Definition at line 104 of file PdfProposal.h. ◆ fMaster. RooArgSet RooStats::PdfProposal::fMaster. protected . the cached proposal data set ; Definition at line 110 of file PdfProposal.h. ◆ fOwnsPdf. bool RooStats::PdfProposal::fOwnsPdf = false. protected . pointers to master variables needed for updates ; Definition at line 111 of file PdfProposal.h. ◆ fPdf. RooAbsPdf* RooStats::PdfProposal::fPdf = nullptr. protected . Definition at line 103 of file PdfProposal.h. Libraries for RooStats::PdfProposal:. [legend]; The documentation for this class was generated from the following files:; roofit/roostats/inc/RooStats/PdfProposal.h; roofit/roostats/src/PdfProposal.cxx. RooStatsPdfProposal. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:55 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1PdfProposal.html:20796,variab,variables,20796,doc/master/classRooStats_1_1PdfProposal.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1PdfProposal.html,1,['variab'],['variables']
Modifiability,"amer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TQObject(). protected:. static Int_tCheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static TStringCompressName(const char* method_name); static Bool_tConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual void*GetSender(); virtual const char*GetSenderClassName() const. private:. TQObject&operator=(const TQObject& tqo); TQObject(const TQObject& tqo). Data Members; protected:. TList*fListOfConnections! list of connections to this object; TList*fListOfSignals! list of signals from this object; Bool_tfSignalsBlocked! flag used for suppression of signals; static Bool_tfgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance Chart:. TQObject. ←. TApplication; ←. PyROOT::TPyROOTApplication. TApplicationRemote. TApplicationServer. TGApplication. TProofServ; ←. TProofServLite. TXProofServ. TQApplication. TRint.  [more...]. Function documentation; TString CompressName(const char* method_name); Removes ""const"" words and blanks from full (with prototype); method name and resolve any typedefs in the method signature.; If a null or empty string is passed in, an empty string; is returned. Example: CompressName("" Draw(const char *, const char *,; Option_t * , Int_t , Int_t)"");; returns the string ""Draw(char*,char*,char*,int,int)"". Int_t CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); Checking of consitency of sender/receiver methods/arguments.; Returns -1 on error, otherwise number or arguments of signal function.; Static method. TQObject(); TQObject Constructor.; Comment:; - In order to minimize memory allocation fListOfSignals and; fListOfC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQObject.html:4754,Inherit,Inheritance,4754,root/html602/TQObject.html,https://root.cern,https://root.cern/root/html602/TQObject.html,2,['Inherit'],['Inheritance']
Modifiability,"amer, public TCollectionStreamer. Small helper to save proxy environment in the event of; recursive calls. Function Members (Methods); public:. TCollectionClassStreamer(); TCollectionClassStreamer(const TCollectionClassStreamer& c); virtual~TCollectionClassStreamer(); voidTCollectionStreamer::AdoptStreamer(TGenCollectionProxy* streamer); virtual TClassStreamer*Generate() const; virtual const TClass*TClassStreamer::GetOnFileClass() const; TGenCollectionProxy*GetXYZ(); virtual voidoperator()(TBuffer& buff, void* obj); TClassStreamer&TClassStreamer::operator=(const TClassStreamer&); virtual voidTClassStreamer::SetOnFileClass(const TClass* cl); virtual voidStream(TBuffer& b, void* obj, const TClass* onfileClass); voidTCollectionStreamer::Streamer(TBuffer& refBuffer, void* obj, int siz, TClass* onFileClass). protected:. voidTCollectionStreamer::InvalidProxyError(). Data Members; protected:. TClassRefTClassStreamer::fOnFileClass; TGenCollectionProxy*TCollectionStreamer::fStreamer/ Pointer to worker streamer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCollectionClassStreamer(); Initializing constructor. { }. TCollectionClassStreamer(const TCollectionClassStreamer& c); Copy constructor. { }. virtual ~TCollectionClassStreamer(); Standard destructor. { }. void operator()(TBuffer& buff, void* obj); Streamer for I/O handling. { Streamer(buff,obj,0,fOnFileClass); }. void Stream(TBuffer& b, void* obj, const TClass* onfileClass). TClassStreamer * Generate() const; Virtual copy constructor. TGenCollectionProxy * GetXYZ(); { return TCollectionStreamer::fStreamer; }. » Author: Markus Frank 28/10/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TCollectionProxyFactory.h 41102 2011-10-03 21:42:02Z pcanal $ » Last generated: 2011-11-03 20:10; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCollectionClassStreamer.html:1338,Inherit,Inheritance,1338,root/html532/TCollectionClassStreamer.html,https://root.cern,https://root.cern/root/html532/TCollectionClassStreamer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amerBasicType, and TStreamerBase.; Definition at line 571 of file TStreamerElement.cxx. Member Data Documentation. ◆ fArrayDim. Int_t TStreamerElement::fArrayDim. protected . Definition at line 42 of file TStreamerElement.h. ◆ fArrayLength. Int_t TStreamerElement::fArrayLength. protected . Definition at line 41 of file TStreamerElement.h. ◆ fClassObject. TClass* TStreamerElement::fClassObject. protected . Definition at line 48 of file TStreamerElement.h. ◆ fFactor. Double_t TStreamerElement::fFactor. protected . Maximum of data member if a range is specified [xmin,xmax,nbits]. ; Definition at line 53 of file TStreamerElement.h. ◆ fMaxIndex. Int_t TStreamerElement::fMaxIndex[5]. protected . Definition at line 43 of file TStreamerElement.h. ◆ fNewClass. TClass* TStreamerElement::fNewClass. protected . pointer to class of object ; Definition at line 49 of file TStreamerElement.h. ◆ fNewType. Int_t TStreamerElement::fNewType. protected . base offset for TObject if the element inherits from it ; Definition at line 46 of file TStreamerElement.h. ◆ fOffset. Int_t TStreamerElement::fOffset. protected . Definition at line 44 of file TStreamerElement.h. ◆ fSize. Int_t TStreamerElement::fSize. protected . Definition at line 40 of file TStreamerElement.h. ◆ fStreamer. TMemberStreamer* TStreamerElement::fStreamer. protected . new element class when reading ; Definition at line 50 of file TStreamerElement.h. ◆ fTObjectOffset. Int_t TStreamerElement::fTObjectOffset. protected . element offset in class ; Definition at line 45 of file TStreamerElement.h. ◆ fType. Int_t TStreamerElement::fType. protected . Definition at line 39 of file TStreamerElement.h. ◆ fTypeName. TString TStreamerElement::fTypeName. protected . new element type when reading ; Definition at line 47 of file TStreamerElement.h. ◆ fXmax. Double_t TStreamerElement::fXmax. protected . Minimum of data member if a range is specified [xmin,xmax,nbits]. ; Definition at line 52 of file TStreamerElement.h. ◆ fXmin. Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerElement.html:28764,inherit,inherits,28764,doc/master/classTStreamerElement.html,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html,1,['inherit'],['inherits']
Modifiability,"amerElement::kSTLstring; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; ROOT::TSchemaRule::ReadFuncPtr_tfReadFunc!; ROOT::TSchemaRule::ReadRawFuncPtr_tfReadRawFunc!; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerArtificial. Function documentation; void Streamer(TBuffer& ); Avoid streaming the synthetic/artificial streamer elements. ROOT::TSchemaRule::ReadFuncPtr_t GetReadFunc(); Return the read function if any. ROOT::TSchemaRule::ReadRawFuncPtr_t GetReadRawFunc(); Return the raw read functio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerArtificial.html:10391,inherit,inherits,10391,root/html602/TStreamerArtificial.html,https://root.cern,https://root.cern/root/html602/TStreamerArtificial.html,2,['inherit'],['inherits']
Modifiability,"amerInfo( expectedClass, bEl->GetClassVersion() ) &&; 2947 !ptrClass->FindConversionStreamerInfo( expectedClass, bEl->GetCheckSum() ) ) {; 2948 Error(""SetBranchAddress"", ""The pointer type given \""%s\"" does not correspond to the type needed \""%s\"" by the branch: %s"", ptrClass->GetName(), bEl->GetClassName(), branch->GetName());; 2949 ; 2950 bEl->SetTargetClass( expectedClass->GetName() );; 2951 return kClassMismatch;; 2952 }; 2953 else {; 2954 ; 2955 bEl->SetTargetClass( ptrClass->GetName() );; 2956 return kMatchConversion;; 2957 }; 2958 ; 2959 } else if (expectedClass && ptrClass && !expectedClass->InheritsFrom(ptrClass)) {; 2960 ; 2961 if (expectedClass->GetCollectionProxy() && ptrClass->GetCollectionProxy() &&; 2962 isBranchElement &&; 2963 expectedClass->GetCollectionProxy()->GetValueClass() &&; 2964 ptrClass->GetCollectionProxy()->GetValueClass() ); 2965 {; 2966 // In case of collection, we know how to convert them, if we know how to convert their content.; 2967 // NOTE: we need to extend this to std::pair ...; 2968 ; 2969 TClass *onfileValueClass = expectedClass->GetCollectionProxy()->GetValueClass();; 2970 TClass *inmemValueClass = ptrClass->GetCollectionProxy()->GetValueClass();; 2971 ; 2972 if (inmemValueClass->GetSchemaRules() &&; 2973 inmemValueClass->GetSchemaRules()->HasRuleWithSourceClass(onfileValueClass->GetName() ) ); 2974 {; 2975 TBranchElement* bEl = (TBranchElement*)branch;; 2976 bEl->SetTargetClass( ptrClass->GetName() );; 2977 return kMatchConversionCollection;; 2978 }; 2979 }; 2980 ; 2981 Error(""SetBranchAddress"", ""The pointer type given (%s) does not correspond to the class needed (%s) by the branch: %s"", ptrClass->GetName(), expectedClass->GetName(), branch->GetName());; 2982 if (isBranchElement) {; 2983 TBranchElement* bEl = (TBranchElement*)branch;; 2984 bEl->SetTargetClass( expectedClass->GetName() );; 2985 }; 2986 return kClassMismatch;; 2987 ; 2988 } else if ((expectedType != kOther_t) && (datatype != kOther_t) && (expectedType != kNoType",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:118044,extend,extend,118044,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['extend'],['extend']
Modifiability,"amerInfoActions::TActionSequence*fReadActionSequence! Set of actions to be executed to extract the data from the basket.; Int_tTBranch::fReadBasket! Current basket number when reading; Long64_tTBranch::fReadEntry! Current entry number when reading; G__p2memfuncTBranch::fReadLeaves! Pointer to the ReadLeaves implementation to use. ; Int_tfSTLtype! STL container type; Bool_tTBranch::fSkipZip! After being read, the buffer will not be unziped.; Int_tTBranch::fSplitLevelBranch split level; Int_tfStreamerTypebranch streamer type; TClassReffTargetClass! Reference to the target in-memory class; TStringTNamed::fTitleobject title; Long64_tTBranch::fTotBytesTotal number of bytes in all leaves before compression; TTree*TBranch::fTree! Pointer to Tree header; Int_tfTypebranch type; Int_tTBranch::fWriteBasketLast basket number written; Long64_tTBranch::fZipBytesTotal number of bytes in all leaves after compression; static Int_tTBranch::fgCount! branch counter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SwitchContainer(TObjArray* ); -- Modify the container type of the branches. TBranchElement(); -- Default and I/O constructor. TBranchElement(TTree* tree, const char* name, TStreamerInfo* sinfo, Int_t id, char* pointer, Int_t basketsize = 32000, Int_t splitlevel = 0, Int_t btype = 0); -- Constructor when the branch object is not a TClonesArray nor an STL container. If splitlevel > 0 this branch in turn is split into sub-branches. TBranchElement(TBranch* parent, const char* name, TStreamerInfo* sinfo, Int_t id, char* pointer, Int_t basketsize = 32000, Int_t splitlevel = 0, Int_t btype = 0); -- Constructor when the branch object is not a TClonesArray nor an STL container. If splitlevel > 0 this branch in turn is split into sub-branches. void Init(TTree* tree, TBranch* parent, const char* name, TStreamerInfo* sinfo, Int_t id, char* pointer, Int_t basketsize = 32000, Int_t splitlevel = 0, Int_t btype = 0); -- Init when the branch objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBranchElement.html:18828,Inherit,Inheritance,18828,root/html532/TBranchElement.html,https://root.cern,https://root.cern/root/html532/TBranchElement.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TNDArrayT<unsigned long long>(); TNDArrayT<unsigned long long>(Int_t ndim, const Int_t* nbins, bool addOverflow = false); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. unsigned long long*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNDArrayT_ULong64_t_.html:6552,Inherit,Inheritance,6552,root/html534/TNDArrayT_ULong64_t_.html,https://root.cern,https://root.cern/root/html534/TNDArrayT_ULong64_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amerNVirtual(TBuffer& b). private:. TMVA::MsgLogger&Log() const. Data Members; public:. enum EKernelType { kNone; kGauss; };; enum EKernelIter { kNonadaptiveKDE; kAdaptiveKDE; };; enum EKernelBorder { kNoTreatment; kKernelRenorm; kSampleMirror; };. private:. Float_tfFineFactorfine tuning factor for Adaptive KDE: factor to multiply the ""width"" of the Kernel function; TH1F*fFirstIterHisthistogram to be filled in the hidden iteration; Bool_tfHiddenIterationDefines if whats currently running is the ; TH1F*fHistcopy of input histogram; TMVA::KDEKernel::EKernelIterfIteriteration number; TMVA::KDEKernel::EKernelBorderfKDEborderThe method to take care about ""border"" effects; TF1*fKernel_integthe integral of the Kernel function; TMVA::MsgLogger*fLoggermessage logger; Float_tfLowerEdgethe lower edge of the PDF; Float_tfSigmaWidth of the Kernel function; TH1F*fSigmaHistcontains the Sigmas Widths for adaptive KDE ; Float_tfUpperEdgethe upper edge of the PDF. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; KDEKernel(TMVA::KDEKernel::EKernelIter kiter = kNonadaptiveKDE, const TH1* hist = 0, Float_t lower_edge = 0., Float_t upper_edge = 1., TMVA::KDEKernel::EKernelBorder kborder = kNoTreatment, Float_t FineFactor = 1.); constructor; sanity check. ~KDEKernel(); destructor. void SetKernelType(TMVA::KDEKernel::EKernelType ktype = kGauss); fIter == 1 ---> nonadaptive KDE; fIter == 2 ---> adaptive KDE. Float_t GetBinKernelIntegral(Float_t lowr, Float_t highr, Float_t mean, Int_t binnum); calculates the integral of the Kernel. KDEKernel(TMVA::KDEKernel::EKernelIter kiter = kNonadaptiveKDE, const TH1* hist = 0, Float_t lower_edge = 0., Float_t upper_edge = 1., TMVA::KDEKernel::EKernelBorder kborder = kNoTreatment, Float_t FineFactor = 1.). const char* GetName() const; modified name (remove TMVA::). { return ""KDEKernel""; }. » Author: Asen Christov » Copyright (c) 2007: *; » Last changed: root/tmva $Id: KDEKernel.h 40005 2011-06-27 15:29:10Z stelze",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__KDEKernel.html:1967,Inherit,Inheritance,1967,root/html532/TMVA__KDEKernel.html,https://root.cern,https://root.cern/root/html532/TMVA__KDEKernel.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amerNVirtual(TBuffer& b). protected:. TMVA::MsgLogger&Log() const. Data Members; public:. Int_tfConvCounterconverging? ... keeps track of the number of improvements. protected:. Double_tfBestFitness; Double_tfConvValuekeeps track of the quantity of improvement; Bool_tfFirstTimeif true its the first time, so no evolution yet; TMVA::IFitterTarget&fFitterTargetthe fitter target; Double_tfLastResultremembers the last obtained result (for internal use); TMVA::MsgLogger*fLoggermessage logger; Bool_tfMakeCopiesif true, the population will make copies of the first individuals; Bool_tfMirrornew values for mutation are mirror-mapped if outside of constraints; TMVA::GeneticPopulationfPopulationcontains and controls the ""individual""; Int_tfPopulationSizethe size of the population; const vector<TMVA::Interval*>&fRangesparameter ranges; Double_tfSpreadregulates the spread of the value change at mutation (sigma); deque<Int_t>fSuccessListto adjust the stepSize . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GeneticAlgorithm(TMVA::IFitterTarget& target, Int_t populationSize, const vector<TMVA::Interval*>& ranges, UInt_t seed = 0); Constructor; Parameters:; int populationSize : defines the number of ""Individuals"" which are created and tested; within one Generation (Iteration of the Evolution); vector<TMVA::Interval*> ranges : Interval holds the information of an interval, where the GetMin; gets the low and GetMax gets the high constraint of the variable; the size of ""ranges"" is the number of coefficients which are optimised; Purpose:; Creates a random population with individuals of the size ranges.size(). ~GeneticAlgorithm(); destructor; deletes fLogger. void Init(); calls evolution, but if it is not the first time.; If it's the first time, the random population created by the; constructor is still not evaluated, .. therefore we wait for the; second time init is called. Double_t NewFitness(Double_t oldValue, Double_t newValue); if the ""fitn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__GeneticAlgorithm.html:2179,Inherit,Inheritance,2179,root/html532/TMVA__GeneticAlgorithm.html,https://root.cern,https://root.cern/root/html532/TMVA__GeneticAlgorithm.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EStatusBits { kMultiply; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfName; intfVal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t TParameter<AParamType> Merge(TCollection* in); Merge objects in the list.; Returns the number of objects that were in the list. const char * GetName() const; { return fName; }. const AParamType & GetVal() const; { return fVal; }. void SetVal(const int& val); { fVal = val; }. void SetMergeMode(char mergemode = '+'). ULong_t Hash() const; { return fName.Hash(); }. Bool_t IsSortable() const; { return kTRUE; }. Int_t Compare(const TObject* obj) const; Compare two TParameter objects. Returns 0 when equal, -1 when this is; smaller and +1 when bigger (like strcmp). void ls(Option_t* ) const; Print this parameter content. void Print(Option_t* ) const; Print this parameter content. cout << IsA(). » Author: Maarten Ballintijn 21/06/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TParameter.h 40272 2011-07-18 11:12:14Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automatically",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParameter_int_.html:5487,Inherit,Inheritance,5487,root/html532/TParameter_int_.html,https://root.cern,https://root.cern/root/html532/TParameter_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amerNVirtual(TBuffer& b); voidUseCLs(bool on = true). protected:. static voidCheckInputModels(const RooStats::HypoTestCalculatorGeneric& hc, const RooRealVar& scanVar); voidCreateResults() const; RooStats::HypoTestResult*Eval(RooStats::HypoTestCalculatorGeneric& hc, bool adaptive, double clsTarget) const; static RooRealVar*GetVariableToScan(const RooStats::HypoTestCalculatorGeneric& hc); RooStats::HypoTestInverterHypoTestInverter(const RooStats::HypoTestInverter& rhs); RooStats::HypoTestInverter&operator=(const RooStats::HypoTestInverter& rhs). Data Members; public:. enum ECalculatorType { kUndefined; kHybrid; kFrequentist; };. private:. RooStats::HypoTestInverter::ECalculatorTypefCalcType; RooStats::HypoTestCalculatorGeneric*fCalculator0pointer to the calculator passed in the constructor; RooStats::HypoTestInverter::auto_ptr<HypoTestCalculatorGeneric>fHC; auto_ptr<TGraphErrors>fLimitPlot! plot of limits; intfMaxToysmaximum number of toys to run ; intfNBins; doublefNumErr; RooStats::HypoTestInverterResult*fResultspointer to the result ; RooRealVar*fScannedVariablepointer to the constrained variable; doublefSize; intfTotalToysRun; boolfUseCLs; intfVerbose; doublefXmax; doublefXmin; static doublefgAbsAccuracy; static stringfgAlgo; static doublefgCLAccuracy; static boolfgCloseProof; static unsigned intfgNToys; static doublefgRelAccuracy. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetCloseProof(Bool_t flag); set flag to close proof for every new run. RooRealVar * GetVariableToScan(const RooStats::HypoTestCalculatorGeneric& hc); get the variable to scan; try first with null model if not go to alternate model. void CheckInputModels(const RooStats::HypoTestCalculatorGeneric& hc, const RooRealVar& scanVar); check the model given the given hypotestcalculator. HypoTestInverter(); default constructor (doesn't do anything). HypoTestInverter( HypoTestCalculatorGeneric& hc, RooRealVar* scannedVariable, double size ); Constructor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__HypoTestInverter.html:4811,variab,variable,4811,root/html530/RooStats__HypoTestInverter.html,https://root.cern,https://root.cern/root/html530/RooStats__HypoTestInverter.html,1,['variab'],['variable']
Modifiability,"amerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGEventHandler.html:13067,inherit,inherited,13067,doc/master/classTGEventHandler.html,https://root.cern,https://root.cern/doc/master/classTGEventHandler.html,2,['inherit'],['inherited']
Modifiability,"amerNVirtual_b);  ; virtual Bool_t TranslateCoordinates (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGButtonGroup.html:12762,inherit,inheritance,12762,doc/master/classTGButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html,14,['inherit'],['inheritance']
Modifiability,"amerNVirtual_b);  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) const override;  One can not save a const TDirectory object. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) override;  Write memory objects to this file. ;  ; virtual Bool_t WriteBuffer (const char *buf, Int_t len);  Write a buffer to the file. ;  ; virtual void WriteFree ();  Write FREE linked list on the file. ;  ; virtual void WriteHeader ();  Write File Header. ;  ; virtual UShort_t WriteProcessID (TProcessID *pid);  Check if the ProcessID pidd is already in the file, if not, add it and return the index number in the local file list. ;  ; virtual void WriteStreamerInfo ();  Write the list of TStreamerInfo as a single object in this file The class Streamer description for all classes written to this file is saved. ;  ;  Public Member Functions inherited from TDirectoryFile;  TDirectoryFile ();  Default TDirectoryFile constructor. ;  ;  TDirectoryFile (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new TDirectoryFile. ;  ;  ~TDirectoryFile () override;  Destructor. ;  ; void Add (TObject *obj, Bool_t replace=kFALSE) override;  ; void Append (TObject *obj, Bool_t replace=kFALSE) override;  Append object to this directory. ;  ; Int_t AppendKey (TKey *key) override;  Insert key in the linked list of keys of this directory. ;  ; void Browse (TBrowser *b) override;  Browse the content of the directory. ;  ; void Build (TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) override;  ; Bool_t cd () override;  Change current directory to ""this"" directory. ;  ; Bool_t cd (const char *path) override;  Change current directory the directory described by the path if given one. ;  ; TObject * CloneObject (const TObject *obj, Bool_t autoadd=kTRUE) override;  Make a clone of an object using the Streamer facilit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TBufferMergerFile.html:10386,inherit,inherited,10386,doc/v632/classROOT_1_1TBufferMergerFile.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TBufferMergerFile.html,8,['inherit'],['inherited']
Modifiability,"ameraYOZ;  ; TString fPictureFileName;  ; Float_t fPointScale;  color-set with light background ;  ; TGLPShapeObj * fPShapeWrap;  GED editor. ;  ; EPushAction fPushAction;  ; TGLRedrawTimer * fRedrawTimer;  ; Bool_t fReferenceOn;  remove guides hidden-lines ;  ; TGLVertex3 fReferencePos;  reference marker on? ;  ; Bool_t fResetCamerasOnNextUpdate;  ; Bool_t fResetCamerasOnUpdate;  ; TGLSelectRecord fSecSelRec;  select record from last select (should go to context) ;  ; TGLManipSet * fSelectedPShapeRef;  select record from last secondary select (should go to context) ;  ; TGLSelectRecord fSelRec;  select record in use as selected ;  ; Bool_t fSmartRefresh;  markup size of viewport in scene units ;  ; Bool_t fSmoothLines;  smooth point edge rendering ;  ; Bool_t fSmoothPoints;  width scale for lines ;  ; Bool_t fStereo;  ; Float_t fStereoEyeOffsetFac;  position of zero-parallax plane: 0 - near clipping plane, 1 - far clipping plane ;  ; Float_t fStereoFrustumAsymFac;  ; Bool_t fStereoQuadBuf;  use stereo rendering ;  ; Float_t fStereoZeroParallax;  draw quad buffer or left/right stereo in left/right half of window ;  ; TGLRect fViewport;  max time for scene rendering at high LOD (in ms) ;  ;  Protected Attributes inherited from TGLViewerBase; TGLCamera * fCamera;  ; Bool_t fChanged;  ; TGLClip * fClip;  ; Short_t fLOD;  ; Float_t fOLLineW;  ; TGLBoundingBox fOverallBoundingBox;  ; OverlayElmVec_t fOverlay;  ; Bool_t fResetSceneInfosOnRender;  ; TGLRnrCtx * fRnrCtx;  ; SceneInfoList_t fScenes;  ; Short_t fStyle;  ; SceneInfoVec_t fVisScenes;  ; Float_t fWFLineW;  ;  Protected Attributes inherited from TGLLockable; ELock fLock;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static Float_t fgAxisLabelScale = 1;  name says it all ;  ; static TGLColorSet fgDefaultColorSet;  fade the vie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLViewer.html:35173,inherit,inherited,35173,doc/master/classTGLViewer.html,https://root.cern,https://root.cern/doc/master/classTGLViewer.html,3,['inherit'],['inherited']
Modifiability,"amerasOnUpdate was toggled. void DoUpdateScene(); UpdateScene was clicked. void DoCameraHome(); CameraHome was clicked. void UpdateMaxDrawTimes(); Slot for fMaxSceneDrawTimeHQ and fMaxSceneDrawTimeLQ. void UpdatePointLineStuff(); Slot for point-sizes and line-widths. void DoCameraOverlay(); Update viewer with GUI state. void DoCameraCenterExt(); Set external camera center. void DoCaptureCenter(); Capture camera-center via picking. void DoDrawCameraCenter(); Draw camera center. void UpdateCameraCenter(); Update current camera with GUI state. void DoAnnotation(); Create annotation via picking. void UpdateViewerAxes(Int_t id); Update viewer with GUI state. void UpdateViewerReference(); Update viewer with GUI state. TGNumberEntry* MakeLabeledNEntry(TGCompositeFrame* p, const char* name, Int_t labelw, Int_t nd = 7, Int_t s = 5); Helper function to create fixed width TGLabel and TGNumberEntry in same row. void CreateStyleTab(); Creates ""Style"" tab. void CreateGuidesTab(); Create ""Guides"" tab. void CreateClippingTab(); Create GUI controls - clip type (none/plane/box) and plane/box properties. void CreateExtrasTab(); Create Extra Tab controls - camera rotator and stereo. void UpdateReferencePosState(); Enable/disable reference position (x/y/z) number edits based on; reference check box. void SetGuides(); Configuration of guides GUI called from SetModel(). void UpdateRotator(); Update rotator related variables. void DoRotatorStart(); Start auto-rotator. void DoRotatorStop(); Stop auto-rotator. void UpdateStereo(); Update stereo related variables. TGLViewerEditor(const TGLViewerEditor& ). void DetachFromPad(); {fIsInPad = kFALSE;}. » Author: Alja Mrak-Tadel, Matevz Tadel, Timur Pocheptsov 08/03/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2010-10-20 08:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLViewerEditor.html:23847,variab,variables,23847,root/html528/TGLViewerEditor.html,https://root.cern,https://root.cern/root/html528/TGLViewerEditor.html,2,['variab'],['variables']
Modifiability,"amespaces; namespace  CocoaTutorials;  ; namespace  Detail;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; class  RDataFrame;  ROOT's RDataFrame offers a high level interface for analyses of data stored in TTrees, CSV's and other data formats. More...;  ; class  ROpaqueTaskArena;  ; class  TExecutor;  This class defines an interface to execute the same task multiple times in parallel, possibly with different arguments every time. More...;  ; class  TGenericClassInfo;  ; class  TIOFeatures;  TIOFeatures provides the end-user with the ability to change the IO behavior of data written via a TTree. More...;  ; class  TModuleGenerator;  ; class  TNumSlots;  Defines the number of threads in some of ROOT's interfaces. More...;  ; class  TProcessExecutor;  This class provides a simple interface to execute the same task multiple times in parallel, possibly with different arguments every time. More...;  ; class  TReadLockGuard;  ; class  TReentrantRWLock;  ; class  TRWMutexImp;  ; class  TRWSpinLock;  ; c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v622/namespaceROOT.html:1397,variab,variable,1397,doc/v622/namespaceROOT.html,https://root.cern,https://root.cern/doc/v622/namespaceROOT.html,1,['variab'],['variable']
Modifiability,"amespaces; namespace  CocoaTutorials;  ; namespace  Detail;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; class  RDataFrame;  ROOT's RDataFrame offers a high level interface for analyses of data stored in TTrees, CSV's and other data formats. More...;  ; class  ROpaqueTaskArena;  ; class  TExecutorCRTP;  This class defines an interface to execute the same task multiple times, possibly in parallel and with different arguments every time. More...;  ; class  TGenericClassInfo;  ; class  TIOFeatures;  TIOFeatures provides the end-user with the ability to change the IO behavior of data written via a TTree. More...;  ; class  TModuleGenerator;  ; class  TNumSlots;  Defines the number of threads in some of ROOT's interfaces. More...;  ; class  TProcessExecutor;  This class provides a simple interface to execute the same task multiple times in parallel, possibly with different arguments every time. More...;  ; class  TReadLockGuard;  ; class  TReentrantRWLock;  ; class  TRWMutexImp;  ; class  TRWSpinLo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/namespaceROOT.html:1438,variab,variable,1438,doc/v624/namespaceROOT.html,https://root.cern,https://root.cern/doc/v624/namespaceROOT.html,1,['variab'],['variable']
Modifiability,"amespaces; namespace  DNN;  ; namespace  Experimental;  ; namespace  Internal;  ; namespace  kNN;  ; namespace  TMVAGlob;  . Classes; class  AbsoluteDeviationLossFunction;  Absolute Deviation Loss Function. More...;  ; class  AbsoluteDeviationLossFunctionBDT;  Absolute Deviation BDT Loss Function. More...;  ; class  AbsValue;  ; class  BDTEventWrapper;  ; class  BinarySearchTree;  A simple Binary search tree including a volume search method. More...;  ; class  BinarySearchTreeNode;  Node for the BinarySearch or Decision Trees. More...;  ; class  BinaryTree;  Base class for BinarySearch and Decision Trees. More...;  ; class  CCPruner;  A helper class to prune a decision tree using the Cost Complexity method (see Classification and Regression Trees by Leo Breiman et al) More...;  ; class  CCTreeWrapper;  ; class  ClassifierFactory;  This is the MVA factory. More...;  ; class  ClassInfo;  Class that contains all the information of a class. More...;  ; class  Config;  Singleton class for global configuration settings used by TMVA. More...;  ; class  Configurable;  ; class  ConvergenceTest;  Check for convergence. More...;  ; class  CostComplexityPruneTool;  A class to prune a decision tree using the Cost Complexity method. More...;  ; class  CrossEntropy;  Implementation of the CrossEntropy as separation criterion. More...;  ; class  CrossValidation;  Class to perform cross validation, splitting the dataloader into folds. More...;  ; class  CrossValidationFoldResult;  ; class  CrossValidationResult;  Class to save the results of cross validation, the metric for the classification ins ROC and you can ROC curves ROC integrals, ROC average and ROC standard deviation. More...;  ; class  CvSplit;  ; class  CvSplitKFolds;  ; class  CvSplitKFoldsExpr;  ; class  DataInputHandler;  Class that contains all the data information. More...;  ; class  DataLoader;  ; class  DataSet;  Class that contains all the data information. More...;  ; class  DataSetFactory;  Class that contains a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTMVA.html:1227,config,configuration,1227,doc/master/namespaceTMVA.html,https://root.cern,https://root.cern/doc/master/namespaceTMVA.html,2,['config'],['configuration']
Modifiability,"ameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:21945,inherit,inherits,21945,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,11,['inherit'],['inherits']
Modifiability,"ameters (see [api:parameters]) supplied as input to the M minimizers such as VariableMetricMinimizer or MnMigrad (see [api:migrad]). Later values are determined by M as it searches for the minimum or performs whatever analysis is requested by the user.; 4.1.2 FCNBase::up(); [howto:errordef] Returns the value of \(\mbox{up}\) (default value \(= 1.\)), defining parameter errors. M defines parameter errors as the change in parameter value required to change the function value by \(\mbox{up}\). Normally, for chisquared fits \(\mbox{up = 1}\), and for negative log likelihood, \(\mbox{up = 0.5}\).; 4.1.3 \(\mbox{FCN}\) function with gradient; By default first derivatives are calculated numerically by M . In case the user wants to supply his own gradient calculator (e.g. analytical derivatives), he needs to implement the FCNGradientBase interface. The size of the output vector is the same as of the input one. The same is true for the position of the elements (first derivative of the function with respect to the \(n_\mathrm{th}\) variable has index \(n\) in the output vector).; 4.2 M parameters; Interaction with the parameters of the function are essential both for M and the user. Different interfaces are provided, depending on the level of interaction.; 4.2.1 Minimal required interface; Starting values of parameters and uncertainties can be provided to M by the user via std::vector\(<\)double\(>\) vector containers. Any interaction with the parameters before minimization (fix, release, limits, etc.) is not possible then.; Optionally if the user wants to provide starting values for the covariance, he has to provide the values in a std::vector\(<\)double\(>\) vector container stored in upper triangular packed storage format (see [api:covariance]).; 4.2.2 MnUserParameters; A more functional interface to the user parameters is provided through M via the class MnUserParameters. The user can add parameters giving them a name and starting values. More information can be found in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:35477,variab,variable,35477,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,2,['variab'],['variable']
Modifiability,"ameters { kNotEnforced; kForceMin; kForceMax; kForceSmart; };; enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one; static const Double_tfgMaxAbsCutVal. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in representative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TString*fAllVarsIwhat to do with variables; TMVA::BinarySearchTree*fBinaryTreeB; TMVA::BinarySearchTree*fBinaryTreeS; Double_t**fCutMaxmaximum requirement; Double_t**fCutMinminimum requirement; vector<Interval*>fCutRangeallowed ranges for cut optimisation; Double_t*fCutRangeMaxmaximum of allowed cut range; Double_t*fCutRangeMinminimum of allowed cut range; TH1*fEffBvsSLocalintermediate eff. background versus eff signal histo; TMVA::MethodCuts::EEffMethodfEffMethodchosen efficiency calculation method; TStringfEffMethodSchosen efficiency calculation method (string); Double_tfEffRefreferenc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodCuts.html:17901,variab,variables,17901,root/html528/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodCuts.html,1,['variab'],['variables']
Modifiability,"ameters:. - txvec - event vector of variables, transformed into foam; coordinates [0,1]. The size of txvec can be smaller than the; dimension of the foam. Return value:. - vector of cells, that fit txvec. std::vector<TMVA::PDEFoamCell*> FindCells(const std::map<Int_t, Float_t> &txvec); Find all cells, that contain the coordinates specified in txvec.; The key in 'txvec' is the dimension, and the corresponding value; is the coordinate. Note, that not all coordinates have to be; specified in txvec. Parameters:. - txvec - map of coordinates (transformed into foam coordinates; [0,1]). Return value:. - vector of cells, that fit txvec. TH1D* Draw1Dim(TMVA::ECellValue cell_value, Int_t nbin, TMVA::PDEFoamKernelBase* kernel = NULL); Draws 1-dimensional foam (= histogram). Parameters:. - cell_value - the cell value to draw. - nbin - number of bins of result histogram. - kernel - a PDEFoam kernel. TH2D* Project2(Int_t idim1, Int_t idim2, TMVA::ECellValue cell_value = kValue, TMVA::PDEFoamKernelBase* kernel = NULL, UInt_t maxbins = 50); Project foam variable idim1 and variable idim2 to histogram. Parameters:. - idim1, idim2 - dimensions to project to. - cell_value - the cell value to draw. - kernel - a PDEFoam kernel (optional). If NULL is given, the; kernel is ignored and the pure cell values are; plotted. - nbin - number of bins in x and y direction of result histogram; (optional, default is 50). Returns:; a 2-dimensional histogram. Float_t GetCellValue(const PDEFoamCell* cell, ECellValue cv); Returns the cell value of 'cell' corresponding to the given; option 'cv'. This function should be overridden by the subclass; in order to specify which cell elements to return for a given; cell value 'cv'. By default kValue returns cell element 0, and; kValueError returns cell element 1. Double_t GetCellElement(const TMVA::PDEFoamCell* cell, UInt_t i) const; Returns cell element i of cell 'cell'. If the cell has no; elements or the index 'i' is out of range, than 0 is returned. void Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__PDEFoam.html:19691,variab,variable,19691,root/html530/TMVA__PDEFoam.html,https://root.cern,https://root.cern/root/html530/TMVA__PDEFoam.html,6,['variab'],['variable']
Modifiability,"ameters; : via the configuration option string, and FDA fits the parameters to; : it, requiring the signal (background) function value to be as close; : as possible to 1 (0). Its advantage over the more involved and; : automatic nonlinear discriminators is the simplicity and transparency ; : of the discrimination expression. A shortcoming is that FDA will; : underperform for involved problems with complicated, phase space; : dependent nonlinear correlations.; : ; : Please consult the Users Guide for the format of the formula string; : and the allowed parameter ranges:; : documentation/tmva/UsersGuide/TMVAUsersGuide.pdf; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : The FDA performance depends on the complexity and fidelity of the; : user-defined discriminator function. As a general rule, it should; : be able to reproduce the discrimination power of any linear; : discriminant analysis. To reach into the nonlinear domain, it is; : useful to inspect the correlation profiles of the input variables,; : and add quadratic and higher polynomial terms between variables as; : necessary. Comparison with more involved nonlinear classifiers can; : be used as a guide.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : Depending on the function used, the choice of ""FitMethod"" is; : crucial for getting valuable solutions with FDA. As a guideline it; : is recommended to start with ""FitMethod=MINUIT"". When more complex; : functions are used where MINUIT does not converge to reasonable; : results, the user should switch to non-gradient FitMethods such; : as GeneticAlgorithm (GA) or Monte Carlo (MC). It might prove to be; : useful to combine GA (or MC) with MINUIT by setting the option; : ""Converger=MINUIT"". GA (MC) will then set the starting parameters; : for MINUIT such that the basic quality of GA (MC) of finding global; : minima is combined with the efficacy of MINUIT of finding local; : minima.; : ; : <Suppress this message by specifying ""!H"" in the booki",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:39559,variab,variables,39559,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,2,['variab'],['variables']
Modifiability,"ameters; vector<double>fGlobalCCglobal Correlation coefficient; stringfMinimTypestring indicating type of minimizer; map<unsigned int,pair<double,double> >fMinosErrorsmap contains the two Minos errors; unsigned intfNCallsnumber of function calls; unsigned intfNFreenumber of fit free parameters (total parameters are in size of parameter vector); unsigned intfNdfnumber of degree of freedom; boolfNormalizedflag for indicating is errors are normalized; vector<string>fParNamesparameter names (only with FCN only fits, when fFitFunc=0); vector<pair<double,double> >fParamBoundsparameter bounds; vector<double>fParamsparameter values. Size is total number of parameters; intfStatusminimizer status code; doublefValminimum function value; boolfValidflag for indicating valid fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FitResult(). Default constructor for an empty (non valid) fit result. FitResult(const FitConfig & fconfig). Constructor from a fit-config for a dummy fit; (e.g. when only one fcn evaluation is done). FitResult(ROOT::Math::Minimizer& min, const ROOT::Fit::FitConfig& fconfig, const ROOT::Fit::FitResult::IModelFunction* f, bool isValid, unsigned int sizeOfData = 0, bool binFit = true, const ROOT::Math::IMultiGenFunction* chi2func = 0, unsigned int ncalls = 0). Construct from a Minimizer instance after fitting; Run also Minos if requested from the configuration. FitResult(const FitResult &). Copy constructor. virtual ~FitResult(). Destructor. bool Update(const ROOT::Math::Minimizer& min, bool isValid, unsigned int ncalls = 0). Update the fit result with a new minimization status; To be run only if same fit is performed with same configuration; Note that in this case MINOS is not re-run. If one wants to run also MINOS; a new result must be created. const std::string & MinimizerType() const; minimization quantities ; minimizer type. { return fMinimType; }. bool IsValid() const. True if fit successful, otherwise false.; A ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__FitResult.html:4788,config,config,4788,root/html602/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__FitResult.html,2,['config'],['config']
Modifiability,"ametric function interface. ; Note that both the input data and the function object are copied by the Fitter. ; Definition at line 144 of file Fitter.h. ◆ Fit() [3/5]. bool ROOT::Fit::Fitter::Fit ; (; const std::shared_ptr< BinData > & ; data, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Fit a binned data set using a least square fit. ; Pass the input data using a shared_ptr for NOT copying the input data. ; Definition at line 165 of file Fitter.h. ◆ Fit() [4/5]. bool ROOT::Fit::Fitter::Fit ; (; const std::shared_ptr< UnBinData > & ; data, . bool ; extended = false, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Fit an un-binned data set using the negative log-likelihood method. ; This function uses a shared_ptr to avoid copying the input data. ; Definition at line 195 of file Fitter.h. ◆ Fit() [5/5]. bool ROOT::Fit::Fitter::Fit ; (; const UnBinData & ; data, . bool ; extended = false, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Fit an un-binned data set using the negative log-likelihood method. ; This function copies the input data. ; Definition at line 188 of file Fitter.h. ◆ FitFCN() [1/6]. bool ROOT::Fit::Fitter::FitFCN ; (; ). Perform a fit with the previously set FCN function. ; Require SetFCN before ; Definition at line 269 of file Fitter.cxx. ◆ FitFCN() [2/6]. bool ROOT::Fit::Fitter::FitFCN ; (; const ROOT::Math::FitMethodFunction & ; fcn, . const double * ; params = nullptr . ). Fit using a FitMethodFunction interface. ; Same as method above, but now extra information can be taken from the function class ; Definition at line 226 of file Fitter.cxx. ◆ FitFCN() [3/6]. bool ROOT::Fit::Fitter::FitFCN ; (; const ROOT::Math::FitMethodGradFunction & ; fcn, . const double * ; params = nullptr . ). Fit using a FitMethodGradFunction interface. ; Same as method above, but now extra information can b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html:23488,extend,extended,23488,doc/master/classROOT_1_1Fit_1_1Fitter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html,1,['extend'],['extended']
Modifiability,"ametricEquationGL&operator=(const TGLParametricEquationGL&). Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; TGLPlotCoordinatesTGLPlot3D::fCoord; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TGLParametricEquation*fM; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; TGLPlotPainter*TGLPlot3D::fPlotPainter; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLParametricEquationGL(); Constructor. ~TGLParametricEquationGL(); Destructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Setup bounding-box. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render the object. TGLParametricEquationGL(const TGLParametricEquationGL& ). TGLParametricEquationGL& operator=(const TGLParametricEquationGL& ). Bool_t KeepDuringSmartRefresh() const; { return kFALSE; }. » Author: Matevz Tadel, Jun 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-13 19:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLParametricEquationGL.html:4695,Inherit,Inheritance,4695,root/html534/TGLParametricEquationGL.html,https://root.cern,https://root.cern/root/html534/TGLParametricEquationGL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"among the k neighbors. It is recommended; : that a histogram which stores the k-NN decision variable is binned with k+1 bins; : between 0 and 1.; : ; : ␛[1m--- Performance tuning via configuration options: ␛[0m; : ; : The k-NN method estimates a density of signal and background events in a ; : neighborhood around the test event. The method assumes that the density of the ; : signal and background events is uniform and constant within the neighborhood. ; : k is an adjustable parameter and it determines an average size of the ; : neighborhood. Small k values (less than 10) are sensitive to statistical ; : fluctuations and large (greater than 100) values might not sufficiently capture ; : local differences between events in the training set. The speed of the k-NN; : method also increases with larger values of k. ; : ; : The k-NN method assigns equal weight to all input variables. Different scales ; : among the input variables is compensated using ScaleFrac parameter: the input ; : variables are scaled so that the widths for central ScaleFrac*100% events are ; : equal among all the input variables.; : ; : ␛[1m--- Additional configuration options: ␛[0m; : ; : The method inclues an option to use a Gaussian kernel to smooth out the k-NN; : response. The kernel re-weights events using a distance to the test event.; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; KNN : <Train> start...; : Reading 2000 events; : Number of signal events 1000; : Number of background events 1000; : Creating kd-tree with 2000 events; : Computing scale factor for 1d distributions: (ifrac, bottom, top) = (80%, 10%, 90%); ModulekNN : Optimizing tree for 4 variables with 2000 values; : <Fill> Class 1 has 1000 events; : <Fill> Class 2 has 1000 events; : Elapsed time for training with 2000 events: 0.00292 sec ; KNN : [dataset] : Evaluation of KNN on training sample (2000 events); : Elapsed time for e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:33856,variab,variables,33856,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,3,['variab'],['variables']
Modifiability,"amp with seconds fraction; For some of these methods TDatime type can be used as parameter / return value.; Be aware, that TDatime supports only dates after 1995-01-01.; There are also methods to get separately year, month, day, hour, minutes and seconds. Different SQL databases has different treatement of date/time types.; For instance, MySQL has all correspondent types (TIME, DATE, DATETIME and TIMESTAMP),; Oracle native driver supports only DATE (which is actually date and time) and TIMESTAMP; ODBC interface provides access for time, date and timestamps.; Therefore, one should use correct methods to access such data.; For instance, in MySQL SQL type 'DATE' is only date (one should use GetDate() to; access such data), while in Oracle it is date and time. Therefore,; to get complete data from 'DATE' column in Oracle, one should use GetDatime() method. The only difference of timestamp from date/time, that it has fractional; seconds part. Be aware, that fractional part can has different meaning; (actual value) in different SQL plugins. 5. Binary data. Most of modern data bases support just binary data, which is; typically has SQL type name 'BLOB'. To access data in such; columns, GetBinary()/SetBinary() methods should be used.; Current implementation supposed, that complete content of the; column must be retrieved at once. Therefore very big data of; gigabytes size may cause a problem. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TSQLStatement(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSQLStatement.html:8305,plugin,plugins,8305,root/html528/TSQLStatement.html,https://root.cern,https://root.cern/root/html528/TSQLStatement.html,4,['plugin'],['plugins']
Modifiability,"ample and the variables used ; Definition at line 2342 of file DecisionTree.cxx. ◆ GetNNodesBeforePruning(). Int_t TMVA::DecisionTree::GetNNodesBeforePruning ; (; ). inline . Definition at line 180 of file DecisionTree.h. ◆ GetNode(). TMVA::Node * TMVA::DecisionTree::GetNode ; (; ULong_t ; sequence, . UInt_t ; depth . ). retrieve node from the tree. ; Its position (up to a maximal tree depth of 64) is coded as a sequence of left-right moves starting from the root, coded as 0-1 bit patterns stored in the ""long-integer"" (i.e. 0:left ; 1:right ; Definition at line 1231 of file DecisionTree.cxx. ◆ GetNodePurityLimit(). Double_t TMVA::DecisionTree::GetNodePurityLimit ; (; ); const. inline . Definition at line 162 of file DecisionTree.h. ◆ GetPruneStrength(). Double_t TMVA::DecisionTree::GetPruneStrength ; (; ); const. inline . Definition at line 147 of file DecisionTree.h. ◆ GetRandomisedVariables(). void TMVA::DecisionTree::GetRandomisedVariables ; (; Bool_t * ; useVariable, . UInt_t * ; variableMap, . UInt_t & ; nVars . ). Definition at line 1247 of file DecisionTree.cxx. ◆ GetRoot(). virtual DecisionTreeNode * TMVA::DecisionTree::GetRoot ; (; ); const. inlinevirtual . Reimplemented from TMVA::BinaryTree.; Definition at line 94 of file DecisionTree.h. ◆ GetSumWeights(). Double_t TMVA::DecisionTree::GetSumWeights ; (; const EventConstList * ; validationSample); const. calculate the normalization factor for a pruning validation sample ; Definition at line 1118 of file DecisionTree.cxx. ◆ GetTreeID(). Int_t TMVA::DecisionTree::GetTreeID ; (; ). inline . Definition at line 186 of file DecisionTree.h. ◆ GetVariableImportance() [1/2]. vector< Double_t > TMVA::DecisionTree::GetVariableImportance ; (; ). Return the relative variable importance, normalized to all variables together having the importance 1. ; The importance in evaluated as the total separation-gain that this variable had in the decision trees (weighted by the number of events) ; Definition at line 2745 of file D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:21367,variab,variableMap,21367,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variableMap']
Modifiability,"ample).; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t). By default, a variable will be copied to the buffer with the number of; bytes specified in the type descriptor character. However, if the type; consists of 2 characters, the second character is an integer that; specifies the number of bytes to be used when copying the variable; to the output buffer. Example:; X ; variable X, type Float_t; Y/I : variable Y, type Int_t; Y/I2 ; variable Y, type Int_t converted to a 16 bits integer. Arrays of values are supported with the following syntax:; If leaf name has the form var[nelem], where nelem is alphanumeric, then; If nelem is a leaf name, it is used as the variable size of the array.; The leaf refered to by neleme **MUST** be an int (/I).; If leaf name has the form var[nelem], where nelem is a digit, then; it is used as the fixed size of the array.; If leaf name has the form of a multi dimenantion array (eg var[nelem][nelem2]); where nelem and nelem2 are digits) then; it is used as a 2 dimensional array of fixed size.; Any of other form is not supported. See an example of a Branch definition in the T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBranch.html:16579,variab,variable,16579,root/html530/TBranch.html,https://root.cern,https://root.cern/root/html530/TBranch.html,1,['variab'],['variable']
Modifiability,"ample).; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t). By default, a variable will be copied to the buffer with the number of; bytes specified in the type descriptor character. However, if the type; consists of 2 characters, the second character is an integer that; specifies the number of bytes to be used when copying the variable; to the output buffer. Example:; X ; variable X, type Float_t; Y/I : variable Y, type Int_t; Y/I2 ; variable Y, type Int_t converted to a 16 bits integer. See an example of a Branch definition in the TTree constructor. Note that in case the data type is an object, this branch can contain; only this object. Note that this function is invoked by TTree::Branch. *. void Init(const char* name, const char* leaflist, Int_t compress); Initialization routine called from the constructor. This should NOT be made virtual. ~TBranch(); Destructor. void AddBasket(TBasket& b, Bool_t ondisk, Long64_t startEntry); Add the basket to this branch. void AddLastBasket(Long64_t startEntry); Add the start entry of the write basket (not yet create). void Browse(TBrowser* b); Browser interface. voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranch.html:15013,variab,variable,15013,root/html526/TBranch.html,https://root.cern,https://root.cern/root/html526/TBranch.html,1,['variab'],['variable']
Modifiability,"ample).; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t). By default, a variable will be copied to the buffer with the number of; bytes specified in the type descriptor character. However, if the type; consists of 2 characters, the second character is an integer that; specifies the number of bytes to be used when copying the variable; to the output buffer. Example:; X ; variable X, type Float_t; Y/I : variable Y, type Int_t; Y/I2 ; variable Y, type Int_t converted to a 16 bits integer. See an example of a Branch definition in the TTree constructor. Note that in case the data type is an object, this branch can contain; only this object. Note that this function is invoked by TTree::Branch. *. void Init(const char* name, const char* leaflist, Int_t compress); Initialization routine called from the constructor. This should NOT be made virtual. ~TBranch(); Destructor. void AddBasket(TBasket& b, Bool_t ondisk, Long64_t startEntry); Add the basket to this branch. void AddLastBasket(Long64_t startEntry); Add the start entry of the write basket (not yet created). void Browse(TBrowser* b); Browser interface. vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TBranch.html:15360,variab,variable,15360,root/html528/TBranch.html,https://root.cern,https://root.cern/root/html528/TBranch.html,1,['variab'],['variable']
Modifiability,"ampler. class TUnuranSampler: public ROOT::Math::DistSampler. Function Members (Methods); public:. virtual~TUnuranSampler(); ROOT::Math::DistSamplerROOT::Math::DistSampler::DistSampler(); ROOT::Math::DistSamplerROOT::Math::DistSampler::DistSampler(const ROOT::Math::DistSampler&); virtual boolROOT::Math::DistSampler::Generate(unsigned int nevt, ROOT::Fit::UnBinData& data); virtual boolROOT::Math::DistSampler::Generate(unsigned int nevt, const int* nbins, ROOT::Fit::BinData& data, bool extend = true); boolROOT::Math::DistSampler::Generate(unsigned int nevt, int nbins, double xmin, double xmax, ROOT::Fit::BinData& data, bool extend = true); virtual TRandom*GetRandom(); virtual boolInit(const char* algo = """"); virtual boolInit(const ROOT::Math::DistSamplerOptions& opt); unsigned intROOT::Math::DistSampler::NDim() const; TUnuranSampler&operator=(const TUnuranSampler&); const ROOT::Math::IMultiGenFunction&ROOT::Math::DistSampler::ParentPdf() const; virtual boolSample(double* x); virtual doubleSample1D(); virtual boolSampleBin(double prob, double& value, double* error = 0); virtual boolROOT::Math::DistSampler::SampleBins(unsigned int n, const double* prob, double* values, double* errors = 0); virtual voidSetArea(double area); virtual voidSetFunction(const ROOT::Math::IGenFunction& func); voidSetFunction(TF1* pdf); voidROOT::Math::DistSampler::SetFunction<const ROOT::Math::IBaseFunctionOneDim>(ROOT::Math::const IBaseFunctionOneDim& func, unsigned int dim); virtual voidSetMode(double mode); voidSetPrintLevel(int level); virtual voidSetRandom(TRandom* r); voidROOT::Math::DistSampler::SetRange(const ROOT::Fit::DataRange& range); voidROOT::Math::DistSampler::SetRange(const double* xmin, const double* xmax); voidROOT::Math::DistSampler::SetRange(double xmin, double xmax, int icoord = 0); virtual voidSetSeed(unsigned int seed); TUnuranSampler(); TUnuranSampler(const TUnuranSampler&). protected:. boolDoInit1D(const char* algo); boolDoInitDiscrete1D(const char* algo); boolDoInitND(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnuranSampler.html:772,extend,extend,772,root/html602/TUnuranSampler.html,https://root.cern,https://root.cern/root/html602/TUnuranSampler.html,8,['extend'],['extend']
Modifiability,"amplerOptions& opt); ROOT::Math::IOptions*ExtraOptions() const; static ROOT::Math::IOptions*FindDefault(const char* name); ROOT::Math::DistSamplerOptions&operator=(const ROOT::Math::DistSamplerOptions& opt); voidPrint(ostream& os = std::cout) const; static voidPrintDefault(const char* name = 0, ostream& os = std::cout); intPrintLevel() const; const string&Sampler() const; voidSetAlgorithm(const char* type); static voidSetDefaultAlgorithm1D(const char* algo); static voidSetDefaultAlgorithmND(const char* algo); static voidSetDefaultPrintLevel(int level); static voidSetDefaultSampler(const char* type); voidSetExtraOptions(const ROOT::Math::IOptions& opt); voidSetPrintLevel(int level); voidSetSampler(const char* type). Data Members; private:. stringfAlgoTypeDistSampler algorithmic specification (for Unuran only); ROOT::Math::IOptions*fExtraOptionsextra options ; intfLeveldebug print level ; stringfSamplerTypeDistSampler type (Unuran, Foam, etc...)xs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetDefaultSampler(const char* type); static methods for setting and retrieving the default options. void SetDefaultAlgorithm1D(const char* algo). void SetDefaultAlgorithmND(const char* algo). void SetDefaultPrintLevel(int level). const std::string & DefaultSampler(). const std::string & DefaultAlgorithm1D(). const std::string & DefaultAlgorithmND(). int DefaultPrintLevel(). ROOT::Math::IOptions & Default(const char* name); retrieve extra options - if not existing create a IOptions. ROOT::Math::IOptions * FindDefault(const char* name); find extra options - return 0 if not existing. void PrintDefault(const char* name = 0, ostream& os = std::cout); print all the default options for the name given. DistSamplerOptions(int dim = 0); constructor using the default options; pass optionally a pointer to the additional options; otherwise look if they exist for this default minimizer; and in that case they are copied in the constructed instan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__DistSamplerOptions.html:1770,Inherit,Inheritance,1770,root/html532/ROOT__Math__DistSamplerOptions.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__DistSamplerOptions.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"amplingDistribution constructor. SamplingDistribution(const char* name, const char* title, const char* varName = 0); SamplingDistribution constructor (with name and title). SamplingDistribution(const char* name, const char* title, RooDataSet& dataSet, const char* varName = 0); Creates a SamplingDistribution from a RooDataSet for debugging; purposes; e.g. if you need a Gaussian type SamplingDistribution; you can generate it from a Gaussian pdf and use the resulting; RooDataSet with this constructor. The result is the projected distribution onto varName; marginalizing the other variables. If varName is not given, the first variable will be used.; This is useful mostly for RooDataSets with only one observable. SamplingDistribution(); SamplingDistribution default constructor. ~SamplingDistribution(); SamplingDistribution destructor. void Add(const RooStats::SamplingDistribution* other); Merge SamplingDistributions (does nothing if NULL is given).; If variable name was not set before, it is copied from the added; SamplingDistribution. Double_t Integral(Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; Returns the integral in the open/closed/mixed interval. Default is [low,high) interval.; Normalization can be turned off. Double_t IntegralAndError(Double_t& error, Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; Returns the integral in the open/closed/mixed interval. Default is [low,high) interval.; Normalization can be turned off.; compute also the error on the integral. Double_t CDF(Double_t x) const; returns the closed integral [-inf,x]. Double_t InverseCDF(Double_t pvalue); returns the inverse of the cumulative distribution function. Double_t InverseCDF(Double_t pvalue, Double_t sigmaVariaton, Double_t& inverseVariation); returns the inverse of the cumulative distribution function, with variations depending on number of samples. Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__SamplingDistribution.html:8688,variab,variable,8688,root/html530/RooStats__SamplingDistribution.html,https://root.cern,https://root.cern/root/html530/RooStats__SamplingDistribution.html,1,['variab'],['variable']
Modifiability,"amplingDistribution constructor. SamplingDistribution(const char* name, const char* title, const char* varName = 0); SamplingDistribution constructor (with name and title). SamplingDistribution(const char* name, const char* title, RooDataSet& dataSet, const char* varName = 0); Creates a SamplingDistribution from a RooDataSet for debugging; purposes; e.g. if you need a Gaussian type SamplingDistribution; you can generate it from a Gaussian pdf and use the resulting; RooDataSet with this constructor. The result is the projected distribution onto varName; marginalizing the other variables. If varName is not given, the first variable will be used.; This is useful mostly for RooDataSets with only one observable. SamplingDistribution(); SamplingDistribution default constructor. ~SamplingDistribution(); SamplingDistribution destructor. void Add(const RooStats::SamplingDistribution* other); Merge SamplingDistributions (does nothing if NULL is given).; If variable name was not set before, it is copied from the added; SamplingDistribution. Double_t Integral(Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; Returns the integral in the open/closed/mixed interval. Default is [low,high) interval.; Normalization can be turned off. void SortValues() const. Double_t IntegralAndError(Double_t& error, Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; Returns the integral in the open/closed/mixed interval. Default is [low,high) interval.; Normalization can be turned off.; compute also the error on the integral. Double_t CDF(Double_t x) const; returns the closed integral [-inf,x]. Double_t InverseCDF(Double_t pvalue); returns the inverse of the cumulative distribution function. Double_t InverseCDF(Double_t pvalue, Double_t sigmaVariaton, Double_t& inverseVariation); returns the inverse of the cumulative distribution function, with variations depending on num",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__SamplingDistribution.html:8895,variab,variable,8895,root/html532/RooStats__SamplingDistribution.html,https://root.cern,https://root.cern/root/html532/RooStats__SamplingDistribution.html,2,['variab'],['variable']
Modifiability,"amplingDistribution constructor. SamplingDistribution(const char* name, const char* title, const char* varName = 0); SamplingDistribution constructor (with name and title). SamplingDistribution(const char* name, const char* title, RooDataSet& dataSet, const char* varName = 0); Creates a SamplingDistribution from a RooDataSet for debugging; purposes; e.g. if you need a Gaussian type SamplingDistribution; you can generate it from a Gaussian pdf and use the resulting; RooDataSet with this constructor. The result is the projected distribution onto varName; marginalizing the other variables. If varName is not given, the first variable will be used.; This is useful mostly for RooDataSets with only one observable. SamplingDistribution(); SamplingDistribution default constructor. ~SamplingDistribution(); SamplingDistribution destructor. void Add(const RooStats::SamplingDistribution* other); Merge SamplingDistributions (does nothing if NULL is given).; If variable name was not set before, it is copied from the added; SamplingDistribution. Double_t InverseCDF(Double_t pvalue); returns the inverse of the cumulative distribution function. Double_t Integral(Double_t low, Double_t high, Bool_t normalize = kTRUE) const; Returns the integral (including lower limit and excluding upper limit); in the given limits. Normalization can be turned off. Double_t CDF(Double_t x) const. Double_t InverseCDF(Double_t pvalue, Double_t sigmaVariaton, Double_t& inverseVariation); returns the inverse of the cumulative distribution function, with variations depending on number of samples. Double_t InverseCDFInterpolate(Double_t pvalue); returns the inverse of the cumulative distribution function. SamplingDistribution(const char* name, const char* title, vector<Double_t>& samplingDist, const char* varName = 0); Constructor for SamplingDistribution. Int_t GetSize() const; size of samples. {return fSamplingDist.size();}. std::vector<Double_t> GetSamplingDistribution() const; Get test statistics values. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__SamplingDistribution.html:8393,variab,variable,8393,root/html528/RooStats__SamplingDistribution.html,https://root.cern,https://root.cern/root/html528/RooStats__SamplingDistribution.html,1,['variab'],['variable']
Modifiability,"ams : the inter-relation of two; measured quantities X and Y can always be visualized by a two-dimensional; histogram or scatter-plot; If Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile; histogram with much better precision than by a scatter-plot. All histogram classes are derived from the base class TH1. TH1; ^; |; |; |; -----------------------------------------------------------; | | | | | | |; | | TH1C TH1S TH1I TH1F TH1D; | | |; | | |; | TH2 TProfile; | |; | |; | ----------------------------------; | | | | | |; | TH2C TH2S TH2I TH2F TH2D; | |; TH3 |; | TProfile2D; |; -------------------------------------; | | | | |; TH3C TH3S TH3I TH3F TH3D; |; |; TProfile3D; The TH*C classes also inherit from the array class TArrayC.; The TH*S classes also inherit from the array class TArrayS.; The TH*I classes also inherit from the array class TArrayI.; The TH*F classes also inherit from the array class TArrayF.; The TH*D classes also inherit from the array class TArrayD. Creating histograms. Histograms are created by invoking one of the constructors, e.g. TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; TH2F *h2 = new TH2F(""h2"", ""h2 title"", 40, 0, 4, 30, -3, 3);. Histograms may also be created by:; ; calling the Clone function, see below; making a projection from a 2-D or 3-D histogram, see below; reading an histogram from a file; ; When an histogram is created, a reference to it is automatically added; to the list of in-memory objects for the current file or directory.; This default behaviour can be changed by:. h->SetDirectory(0); for the current histogram h; TH1::AddDirectory(kFALSE); sets a global switch disabling the reference. When the histogram is deleted, the reference to it is removed from; the list of objects in memory.; When a file is closed, all histograms in memory associated with this file; are automatically deleted.; Fix or variable bin size; All histogram types support either fix or variable bin sizes.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:2821,inherit,inherit,2821,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,10,['inherit'],['inherit']
Modifiability,"ams, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TParameter<Long64_t>::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const Long64_t&TParameter<Long64_t>::GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTParameter<Long64_t>::Hash() const; voidInc(Long_t n = 1); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTParameter<Long64_t>::IsConst() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTParameter<Long64_t>::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTParameter<Long64_t>::ls(Option_t*) const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelectorScalar.html:2647,Inherit,InheritsFrom,2647,root/html602/TSelectorScalar.html,https://root.cern,https://root.cern/root/html602/TSelectorScalar.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ams. Histograms are created by invoking one of the constructors, e.g. TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; TH2F *h2 = new TH2F(""h2"", ""h2 title"", 40, 0, 4, 30, -3, 3);. Histograms may also be created by:; ; calling the Clone function, see below; making a projection from a 2-D or 3-D histogram, see below; reading an histogram from a file; ; When an histogram is created, a reference to it is automatically added; to the list of in-memory objects for the current file or directory.; This default behaviour can be changed by:. h->SetDirectory(0); for the current histogram h; TH1::AddDirectory(kFALSE); sets a global switch disabling the reference. When the histogram is deleted, the reference to it is removed from; the list of objects in memory.; When a file is closed, all histograms in memory associated with this file; are automatically deleted.; Fix or variable bin size; All histogram types support either fix or variable bin sizes.; 2-D histograms may have fix size bins along X and variable size bins; along Y or vice-versa. The functions to fill, manipulate, draw or access; histograms are identical in both cases.; Each histogram always contains 3 objects TAxis: fXaxis, fYaxis and fZaxis; To access the axis parameters, do:. TAxis *xaxis = h->GetXaxis(); etc.; Double_t binCenter = xaxis->GetBinCenter(bin), etc. See class TAxis for a description of all the access functions.; The axis range is always stored internally in double precision.; Convention for numbering bins; For all histogram types: nbins, xlow, xup. bin = 0; underflow bin; bin = 1; first bin with low-edge xlow INCLUDED; bin = nbins; last bin with upper-edge xup EXCLUDED; bin = nbins+1; overflow bin. In case of 2-D or 3-D histograms, a ""global bin"" number is defined.; For example, assuming a 3-D histogram with (binx, biny, binz), the function. Int_t gbin = h->GetBin(binx, biny, binz);. returns a global/linearized gbin number. This global gbin is useful; to access the bin content/error information ind",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:3880,variab,variable,3880,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,10,['variab'],['variable']
Modifiability,"ams.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; 1) 0x803b610 RooRealVar:: f = 0.50733 +/- 0.020971 L(0 - 1) ""f""; 2) 0x79b4c50 RooRealVar:: m = 0.0064018 +/- 0.053686 L(-10 - 10) ""m""; 3) 0x7f83920 RooRealVar:: p0 = 0.0073509 +/- 0.0078312 L(0 - 1) ""p0""; 4) 0x47c4aa0 RooRealVar:: s = 0.96516 +/- 0.047052 L(-10 - 10) ""s""; [#1] INFO:InputAr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf505__asciicfg_8py.html:2206,config,configFile,2206,doc/master/rf505__asciicfg_8py.html,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html,1,['config'],['configFile']
Modifiability,"an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGItemContext.html:2148,inherit,inheritance,2148,doc/master/classTGItemContext.html,https://root.cern,https://root.cern/doc/master/classTGItemContext.html,1,['inherit'],['inheritance']
Modifiability,"an Calculator estimating an interval or a credible region using the Markov-Chain Monte Carlo method to integrate the likelihood function with the prior to obtain the posterior function. ; By using the Markov-Chain Monte Carlo methods this calculator can work with model which require the integration of a large number of parameters.; MCMCCalculator is a concrete implementation of IntervalCalculator. It uses a MetropolisHastings object to construct a Markov Chain of data points in the parameter space. From this Markov Chain, this class can generate a MCMCInterval as per user specification.; The interface allows one to pass the model, data, and parameters via a workspace and then specify them with names.; After configuring the calculator, one only needs to ask GetInterval(), which will return an ConfInterval (MCMCInterval in this case). ; Definition at line 31 of file MCMCCalculator.h. Public Member Functions;  MCMCCalculator ();  default constructor ;  ;  MCMCCalculator (RooAbsData &data, const ModelConfig &model);  Constructor for automatic configuration with basic settings and a ModelConfig. ;  ; double ConfidenceLevel () const override;  Get the Confidence level for the test. ;  ; MCMCInterval * GetInterval () const override;  Main interface to get a ConfInterval. ;  ; TClass * IsA () const override;  ; virtual void SetAxes (RooArgList &axes);  set which variables to put on each axis ;  ; virtual void SetChainParameters (const RooArgSet &set);  specify the parameters to store in the Markov chain By default all the parameters are stored ;  ; virtual void SetConditionalObservables (const RooArgSet &set);  set the conditional observables which will be used when creating the NLL so the pdf's will not be normalized on the conditional observables when computing the NLL ;  ; void SetConfidenceLevel (double cl) override;  set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval) ;  ; void SetData (RooAbsData &data) override;  Set the DataSet if not a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html:1413,config,configuration,1413,doc/master/classRooStats_1_1MCMCCalculator.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html,1,['config'],['configuration']
Modifiability,"an and Fumili).; Refer to the guide for an introduction how Minuit works. ; Definition at line 54 of file Minuit2Minimizer.h. Public Member Functions;  Minuit2Minimizer (const char *type);  Constructor with a char (used by PM) ;  ;  Minuit2Minimizer (ROOT::Minuit2::EMinimizerType type=ROOT::Minuit2::kMigrad);  Default constructor. ;  ;  ~Minuit2Minimizer () override;  Destructor (no operations) ;  ; void Clear () override;  reset for consecutive minimization - implement if needed ;  ; bool Contour (unsigned int i, unsigned int j, unsigned int &npoints, double *xi, double *xj) override;  find the contour points (xi,xj) of the function for parameter i and j around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; double Correlation (unsigned int i, unsigned int j) const override;  return correlation coefficient between variable i and j. ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrix elements if the variable is fixed or const the value is zero The ordering of the variables is the same as in errors and parameter value. ;  ; int CovMatrixStatus () const override;  return the status of the covariance matrix status = -1 : not available (inversion failed or Hesse failed) status = 0 : available but not positive defined status = 1 : covariance only approximate status = 2 : full matrix but forced pos def status = 3 : full accurate matrix ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; bool FixVariable (unsigned int ivar) override;  fix an existing variable ;  ; bool GetCovMatrix (double *cov) const override;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; bool GetHessianMatrix (double *h) const override;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:1684,variab,variable,1684,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,2,['variab'],"['variable', 'variables']"
Modifiability,"an be combined with other channels (e.g. for the combination of multiple experiments, or; to constrain nuisance parameters with information obtained in a control region).; A channel contains one or more samples which describe the contribution from different processes; to this measurement. Function Members (Methods); public:. ~Channel(); voidAddAdditionalData(const RooStats::HistFactory::Data& data); voidAddSample(RooStats::HistFactory::Sample sample); RooStats::HistFactory::ChannelChannel(); RooStats::HistFactory::ChannelChannel(const RooStats::HistFactory::Channel& other); RooStats::HistFactory::ChannelChannel(string Name, string InputFile = """"); boolCheckHistograms(); voidCollectHistograms(); vector<RooStats::HistFactory::Data>&GetAdditionalData(); RooStats::HistFactory::Data&GetData(); stringGetHistoPath(); stringGetInputFile(); stringGetName(); vector<RooStats::HistFactory::Sample>&GetSamples(); RooStats::HistFactory::StatErrorConfig&GetStatErrorConfig(); RooStats::HistFactory::Channel&operator=(const RooStats::HistFactory::Channel&); voidPrint(ostream& = std::cout); voidPrintXML(string Directory, string Prefix = """"); voidSetData(const RooStats::HistFactory::Data& data); voidSetData(double Val); voidSetData(TH1* hData); voidSetData(string HistoName, string InputFile, string HistoPath = """"); voidSetHistoPath(const string& file); voidSetInputFile(const string& file); voidSetName(const string& Name); voidSetStatErrorConfig(RooStats::HistFactory::StatErrorConfig Config); voidSetStatErrorConfig(double RelErrorThreshold, RooStats::HistFactory::Constraint::Type ConstraintType); voidSetStatErrorConfig(double RelErrorThreshold, string ConstraintType). protected:. TH1*GetHistogram(string InputFile, string HistoPath, string HistoName). Data Members; protected:. vector<RooStats::HistFactory::Data>fAdditionalData; RooStats::HistFactory::DatafData; stringfHistoPath; stringfInputFile; stringfName; vector<RooStats::HistFactory::Sample>fSamples; RooStats::HistFactory::StatErrorC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__Channel.html:1930,Config,Config,1930,root/html602/RooStats__HistFactory__Channel.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__Channel.html,2,['Config'],['Config']
Modifiability,"an be reduced. \n \; 1504 - drop out \n \; 1505 [recommended: \n \; 1506 initial training stage: 0.0 for the first layer, 0.5 for later layers. \n \; 1507 later training stage: 0.1 or 0.0 for all layers \n \; 1508 final training stage: 0.0] \n \; 1509 Drop out is a technique where a at each training cycle a fraction of arbitrary \n \; 1510 nodes is disabled. This reduces co-adaptation of weights and thus reduces overfitting. \n \; 1511 - L1 and L2 regularization are available \n \; 1512 - Minibatches \n \; 1513 [recommended 10 - 150] \n \; 1514 Arbitrary mini-batch sizes can be chosen. \n \; 1515 - Multithreading \n \; 1516 [recommended: True] \n \; 1517 Multithreading can be turned on. The minibatches are distributed to the available \n \; 1518 cores. The algorithm is lock-free (\""Hogwild!\""-style) for each cycle. \n \; 1519 \n \; 1520 Options: \n \; 1521 \""Layout\"": \n \; 1522 - example: \""TANH|(N+30)*2,TANH|(N+30),LINEAR\"" \n \; 1523 - meaning: \n \; 1524 . two hidden layers (separated by \"",\"") \n \; 1525 . the activation function is TANH (other options: RELU, SOFTSIGN, LINEAR) \n \; 1526 . the activation function for the output layer is LINEAR \n \; 1527 . the first hidden layer has (N+30)*2 nodes where N is the number of input neurons \n \; 1528 . the second hidden layer has N+30 nodes, where N is the number of input neurons \n \; 1529 . the number of nodes in the output layer is determined by the number of output nodes \n \; 1530 and can therefore not be chosen freely. \n \; 1531 \n \; 1532 \""ErrorStrategy\"": \n \; 1533 - SUMOFSQUARES \n \; 1534 The error of the neural net is determined by a sum-of-squares error function \n \; 1535 For regression, this is the only possible choice. \n \; 1536 - CROSSENTROPY \n \; 1537 The error of the neural net is determined by a cross entropy function. The \n \; 1538 output values are automatically (internally) transformed into probabilities \n \; 1539 using a sigmoid function. \n \; 1540 For signal/background classification",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:55761,layers,layers,55761,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,1,['layers'],['layers']
Modifiability,"an be set: ;  ;  fitpanel_playback.C;  This file will test all the transient frames (aka Dialog windows) displayed in the fitpanel, as the rest of the functionality is tried automatically with the UnitTest.C unit. ;  ;  fitslicesy.C;   Illustrates how to use the TH1::FitSlicesY function It uses the TH2F histogram generated in macro hsimple.C It invokes FitSlicesY and draw the fitted ""mean"" and ""sigma"" in 2 sepate pads. ;  ;  FittingDemo.C;   Example for fitting signal/background. ;  ;  graph2dfit.C;   Fitting a TGraph2D ;  ;  Ifit.C;   Example of a program to fit non-equidistant data points ;  ;  langaus.C;   Convoluted Landau and Gaussian Fitting Function (using ROOT's Landau and Gauss functions) ;  ;  line3Dfit.C;   Fitting of a TGraph2D with a 3D straight line ;  ;  minuit2FitBench.C;   Demonstrate performance and usage of Minuit2 and Fumili2 for monodimensional fits. ;  ;  minuit2FitBench2D.C;   Minuit2 fit 2D benchmark. ;  ;  minuit2GausFit.C;   Perform fits with different configurations using Minuit2 ;  ;  multidimfit.C;   Multi-Dimensional Parametrisation and Fitting ;  ;  multifit.C;   Fitting multiple functions to different ranges of a 1-D histogram Example showing how to fit in a sub-range of an histogram A histogram is created and filled with the bin contents and errors defined in the table below. ;  ;  multifit.py;   Fitting multiple functions to different ranges of a 1-D histogram Example showing how to fit in a sub-range of an histogram A histogram is created and filled with the bin contents and errors defined in the table below. ;  ;  myfit.C;   Get in memory an histogram from a root file and fit a user defined function. ;  ;  NumericalMinimization.C;   Example on how to use the new Minimizer class in ROOT Show usage with all the possible minimizers. ;  ;  NumericalMinimization.py;  ;  qa2.C;   Test generation of random numbers distributed according to a function defined by the user ;  ;  TestBinomial.C;   Perform a fit to a set of data with binomial ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html:3848,config,configurations,3848,doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html,https://root.cern,https://root.cern/doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html,1,['config'],['configurations']
Modifiability,"an be used directly ( TMultiLayerPerceptron::Evaluate() ) or exported to a standalone C++ code ( TMultiLayerPerceptron::Export() ).; Finally, note that even if this implementation is inspired from the mlpfit code, the feature lists are not exactly matching:. mlpfit hybrid learning method is not implemented; output neurons can be normalized, this is not the case for mlpfit; the neural net is exported in C++, FORTRAN or PYTHON; the drawResult() method allows a fast check of the learning procedure. In addition, the paw version of mlpfit had additional limitations on the number of neurons, hidden layers and inputs/outputs that does not apply to TMultiLayerPerceptron. ; Definition at line 26 of file TMultiLayerPerceptron.h. Public Types; enum  EDataSet { kTraining; , kTest; };  ; enum  ELearningMethod { ;   kStochastic; , kBatch; , kSteepestDescent; , kRibierePolak; , ;   kFletcherReeves; , kBFGS. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMultiLayerPerceptron ();  Default constructor. ;  ;  TMultiLayerPerceptron (const char *layout, const char *weight, TTree *data, TEventList *training, TEventList *test, TNeuron::ENeuronType type=TNeuron::kSigmoid, const char *extF="""", const char *extD="""");  The network is described by a simple string: The input/output layers are defined by giving the branch names separated by comas. ;  ;  TMultiLayerPerceptron (const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:9360,inherit,inherited,9360,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['inherit'],['inherited']
Modifiability,"an be used for centered volumes with many shells around * dray: use raycasting to sort volumes in order they appear along rays, coming out of camera point * ddflt: default three.js method for rendering transparent volumes For different geometries different methods can be applied. In any case, all opaque volumes rendered first.; 1.7 Reading ROOT files from other servers; In principle, one could open any ROOT file placed in the web, providing the full URL to it like:. https://jsroot.gsi.de/latest/?file=https://root.cern/js/files/hsimple.root&item=hpx. But one should be aware of Same-origin policy, when the browser blocks requests to files from domains other than current web page. To enable CORS on Apache web server, hosting ROOT files, one should add following lines to .htaccess file:; <IfModule mod_headers.c>; <FilesMatch ""\.root"">; Header set Access-Control-Allow-Origin ""*""; Header set Access-Control-Allow-Headers ""range""; Header set Access-Control-Expose-Headers ""content-range,content-length,accept-ranges""; Header set Access-Control-Allow-Methods ""GET""; </FilesMatch>; </IfModule>; More details about configuring of CORS headers can be found here.; Alternative - enable CORS requests in the browser. It can be easily done with CORS Everywhere plugin for the Firefox browser or Allow CORS plugin for the Chrome browser.; Next solution - install JSROOT on the server hosting ROOT files. In such configuration JSROOT does not issue CORS requests, therefore server and browsers can be used with their default settings. A simplified variant of such solution - copy only the top index.htm file from JSROOT package and specify the full path to modules/gui.mjs script like:; <script type=""module"">; import { openFile, draw } from 'https://root.cern/js/latest/modules/gui.mjs';; // ...; </script>; In the main <div> element one can specify many custom parameters like one do it in URL string:; <div id=""simpleGUI"" path=""files/path"" files=""userfile1.root;subdir/usefile2.root"">; loading script",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html:17390,config,configuring,17390,root/htmldoc/guides/JSROOT/JSROOT.html,https://root.cern,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html,2,['config'],['configuring']
Modifiability,"an existing medium for making a volume. ; Definition at line 1408 of file TGeoManagerEditor.cxx. ◆ DoSelectShape(). void TGeoManagerEditor::DoSelectShape ; (; ). Slot for selecting an existing shape. ; Definition at line 1338 of file TGeoManagerEditor.cxx. ◆ DoSelectShape2(). void TGeoManagerEditor::DoSelectShape2 ; (; ). Slot for selecting a shape for making a volume. ; Definition at line 1352 of file TGeoManagerEditor.cxx. ◆ DoSelectTopVolume(). void TGeoManagerEditor::DoSelectTopVolume ; (; ). Slot for setting top geometry volume. ; Definition at line 1436 of file TGeoManagerEditor.cxx. ◆ DoSelectVolume(). void TGeoManagerEditor::DoSelectVolume ; (; ). Slot for selecting an existing volume. ; Definition at line 1422 of file TGeoManagerEditor.cxx. ◆ DoSetTopVolume(). void TGeoManagerEditor::DoSetTopVolume ; (; ). Set top volume for the geometry. ; Definition at line 1256 of file TGeoManagerEditor.cxx. ◆ LoadLib(). void TGeoManagerEditor::LoadLib ; (; ). static . Dummy static function, used to load plugin. ; Definition at line 1527 of file TGeoManagerEditor.cxx. ◆ SelectedSlot(). void TGeoManagerEditor::SelectedSlot ; (; TVirtualPad * ; pad, . TObject * ; obj, . Int_t ; event . ). virtual . Connected to TCanvas::Selected. ; TGeoManagerEditor takes this function from TGedEditor and only uses it if obj is a TGeoVolume. ; Definition at line 708 of file TGeoManagerEditor.cxx. ◆ SetModel(). void TGeoManagerEditor::SetModel ; (; TObject * ; obj). overridevirtual . Refresh editor according the selected obj. ; Implements TGedFrame.; Definition at line 795 of file TGeoManagerEditor.cxx. ◆ ShowSelectMaterial(). void TGeoManagerEditor::ShowSelectMaterial ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for material selection. ; Definition at line 1491 of file TGeoManagerEditor.cxx. ◆ ShowSelectMatrix(). void TGeoManagerEditor::ShowSelectMatrix ; (; Bool_t ; show = kTRUE). protected . Show/hide interface for matrix selection. ; Definition at line 1515 of file TGeoM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManagerEditor.html:47979,plugin,plugin,47979,doc/master/classTGeoManagerEditor.html,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html,1,['plugin'],['plugin']
Modifiability,"an extended p.d.f. and X-Y values dataset; The value of the function that defines the chi^2 in this form is takes as; the p.d.f. times the expected number of events. An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; as the Y value and the weight error is interpreted as the Y value error. The weight must have an; non-zero error defined at each point for the chi^2 calculation to be meaningful. To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); on each X-type observable for which the error should be stored and add datapoints to the dataset as follows. RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; are the Double_t values that correspond to the Y and its error. RooXYChi2Var(const char *name, const char* title, RooAbsPdf& extPdf, RooDataSet& xydata, RooRealVar& yvar, Bool_t integrate). RooXYChi2Var constructor with an extended p.d.f. and X-Y values dataset; The value of the function that defines the chi^2 in this form is takes as; the p.d.f. times the expected number of events. An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; as the Y value and the weight error is interpreted as the Y value error. The weight must have an; non-zero error defined at each point for the chi^2 calculation to be meaningful. To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); on each X-type observable for which the error should be stored and add datapoints to the dataset as follows. RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; are the Double_t values that correspond to the Y and its error. RooXYChi2Var(const RooXYChi2Var& other, const char* name = 0); Copy constructor. void initialize(); Common constructor initialization. void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooXYChi2Var.html:39186,extend,extended,39186,root/html526/RooXYChi2Var.html,https://root.cern,https://root.cern/root/html526/RooXYChi2Var.html,1,['extend'],['extended']
Modifiability,"an nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; RooRealProxy_realVarRealVar with the original error; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooErrorVar.html:36498,config,configuration,36498,root/html526/RooErrorVar.html,https://root.cern,https://root.cern/root/html526/RooErrorVar.html,2,['config'],['configuration']
Modifiability,"an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const Event * Transform (const Event *const, Int_t cls) const;  apply the Gauss transformation ;  ; void WriteTransformationToStream (std::ostream &) const;  ;  Public Member Functions inherited from TMVA::VariableTransformBase;  VariableTransformBase (DataSetInfo &dsi, Types::EVariableTransform tf, const TString &trfName);  standard constructor ;  ; virtual ~VariableTransformBase (void);  ; virtual void CountVariableTypes (UInt_t &nvars, UInt_t &ntgts, UInt_t &nspcts) const;  count variables, targets and spectators ;  ; virtual Bool_t GetInput (const Event *event, std::vector< Float_t > &input, std::vector< Char_t > &mask, Bool_t backTransform=kFALSE) const;  select the values from the event ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; TString GetShortName () const;  ; virtual std::vector< TString > * GetTransformationStrings (Int_t cls) const;  TODO --> adapt to variable,target,spectator selection default transformation output --> only indicate that transformation occurred. ;  ; Types::EVariableTransform GetVariableTransform () const;  ; Bool_t IsCreated () const;  ; Bool_t IsEnabled () const;  ; Bool_t IsNormalised () const;  ; MsgLogger & Log () const;  ; virtual void SelectInput (const TString &inputVariables, Bool_t putIntoVariables=kFALSE);  select the variables/targets/spectators which serve as input to the transformation ;  ; void SetEnabled (Bool_t e);  ; void SetNormalise (Bool_t n);  ; virtual void SetOutput (Event *event, std::vector< Float_t > &output, std::vector< Char_t > &mask, const Event *oldEvent=nullptr, Bool_t backTransform=kFALSE) const;  select the values from the event ;  ; void SetOutputDataSetInfo (DataSetInfo *outputDsi);  ; void SetTMVAVersion (TMVAVersion_t v);  ; void SetUseSignalTransform (Bool_t e=kTRUE);  ; const std::vector< TMVA::VariableInfo > & Spectators () const;  ; void StreamerNVirtual (TBuffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableGaussTransform.html:2566,adapt,adapt,2566,doc/master/classTMVA_1_1VariableGaussTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableGaussTransform.html,2,"['adapt', 'variab']","['adapt', 'variable']"
Modifiability,"an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; A TStreamerInfo is a list of TStreamerElement objects (one per data member or base class). When streaming an object, the system (TClass) loops on all the TStreamerElement objects and calls the appropriate function for each element type. ; Definition at line 39 of file TStreamerInfo.h. Classes; class  TCompInfo;  ; class  TPointerCollectionAdapter;  . Public Types; typedef TCompInfo TCompInfo_t;  ;  Public Types inherited from TVirtualStreamerInfo; enum  EReadWrite { ;   kBase = 0; , kOffsetL = 20; , kOffsetP = 40; , kCounter = 6; , ;   kCharStar = 7; , kChar = 1; , kShort = 2; , kInt = 3; , ;   kLong = 4; , kFloat = 5; , kDouble = 8; , kDouble32 = 9; , ;   kLegacyChar = 10; , kUChar = 11; , kUShort = 12; , kUInt = 13; , ;   kULong = 14; , kBits = 15; , kLong64 = 16; , kULong64 = 17; , ;   kBool = 18; , kFloat16 = 19; , kObject = 61; , kAny = 62; , ;   kObjectp = 63; , kObjectP = 64; , kTString = 65; , kTObject = 66; , ;   kTNamed = 67; , kAnyp = 68; , kAnyP = 69; , kAnyPnoVT = 70; , ;   kSTLp = 71; , kSkip = 100; , kSkipL = 120; , kSkipP = 140; , ;   kConv = 200; , kConvL = 220; , kConvP = 240; , kSTL = ROOT::kSTLany; , ;   kSTLstring = ROOT::kSTLstring; , kStreamer = 500; , kStreamLoop = 501; , kCache = 600; , ;   kArtificial = 1000; , kCacheNew = 1001; , kCacheDelete = 1002; , kNeedObjectForVirtualBaseClass = 99997; , ;   kMissing = 99999; , kNoType = -1; , kUnsupportedConversion = -2; , kUnset = -3. };  EReadWrite Enumerator. More...;  ; enum  EStatusBits { ;   kCannotOptimize = (1ULL << ( 12 )); , kIgnoreTObjectStreamer = (1ULL << ( 13 )); , kRecovered = (1ULL << ( 14 )); , kNeedCheck = (1ULL << ( 15 )); , ;   kIsCompiled = (1ULL << ( 16 )); , kBuildOldUsed = (1ULL << ( 17 )); , kBuildRunning = (1ULL << ( 18 )). };  ; enum class  EStatusBitsDupExceptions { kIgnoreTObjectStreamer = TVirtualStreamerInfo::kIgnoreTObjectStreamer; };  ;  Public Types inherit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfo.html:1420,inherit,inherited,1420,doc/master/classTStreamerInfo.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html,1,['inherit'],['inherited']
Modifiability,"anBranchName() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual Double_tevaluate() const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; RooFormula&formula() const; virtual RooAbsGenContext*RooAbsPdf::genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tisValidReal(Double_t value, Bool_t printError) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bool_tRooAbsReal::matchArgs(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooGenericPdf.html:34529,extend,extended,34529,root/html602/RooGenericPdf.html,https://root.cern,https://root.cern/root/html602/RooGenericPdf.html,4,['extend'],['extended']
Modifiability,"anBranchName() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual Double_tevaluate() const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; RooFormula&formula() const; virtual RooAbsGenContext*RooAbsPdf::genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tisValidReal(Double_t value, Bool_t printError) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bool_tRooAbsReal::match",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooGenericPdf.html:34536,extend,extended,34536,root/html534/RooGenericPdf.html,https://root.cern,https://root.cern/root/html534/RooGenericPdf.html,2,['extend'],['extended']
Modifiability,"anCousins | false | total events, passed events, confidence level |; 269| Mid-P Lancaster | kMidP | TEfficiency::MidPInterval | false | total events, passed events, confidence level |; 270| Jeffrey | kBJeffrey | TEfficiency::Bayesian | true | total events, passed events, confidence level, fBeta_alpha = 0.5, fBeta_beta = 0.5 |; 271| Uniform prior | kBUniform |TEfficiency::Bayesian | true |total events, passed events, confidence level, fBeta_alpha = 1, fBeta_beta = 1 |; 272| custom prior | kBBayesian |TEfficiency::Bayesian | true |total events, passed events, confidence level, fBeta_alpha, fBeta_beta |; 273 ; 274The following example demonstrates the effect of different statistic options and; 275confidence levels.; 276 ; 277Begin_Macro(source); 278{; 279 //canvas only needed for the documentation; 280 TCanvas* c1 = new TCanvas(""c1"","""",600,400);; 281 c1->Divide(2);; 282 c1->SetFillStyle(1001);; 283 c1->SetFillColor(kWhite);; 284 ; 285 //create one-dimensional TEfficiency object with fixed bin size; 286 TEfficiency* pEff = new TEfficiency(""eff"",""different confidence levels;x;#epsilon"",20,0,10);; 287 TRandom3 rand3;; 288 ; 289 bool bPassed;; 290 double x;; 291 for(int i=0; i<1000; ++i); 292 {; 293 //simulate events with variable under investigation; 294 x = rand3.Uniform(10);; 295 //check selection: bPassed = DoesEventPassSelection(x); 296 bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; 297 pEff->Fill(bPassed,x);; 298 }; 299 ; 300 //set style attributes; 301 pEff->SetFillStyle(3004);; 302 pEff->SetFillColor(kRed);; 303 ; 304 //copy current TEfficiency object and set new confidence level; 305 TEfficiency* pCopy = new TEfficiency(*pEff);; 306 pCopy->SetConfidenceLevel(0.90);; 307 ; 308 //set style attributes; 309 pCopy->SetFillStyle(3005);; 310 pCopy->SetFillColor(kBlue);; 311 ; 312 c1->cd(1);; 313 ; 314 //add legend; 315 TLegend* leg1 = new TLegend(0.3,0.1,0.7,0.5);; 316 leg1->AddEntry(pEff,""68.3%"",""F"");; 317 leg1->AddEntry(pCopy,""90%"",""F"");; 318 ; 319 pEff->Draw(""A4"");; 32",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:14148,variab,variable,14148,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['variab'],['variable']
Modifiability,"anDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TWbox; Short_t fBorderMode {0};  Bordermode (-1=down, 0 = no border, 1=up) ;  ; Short_t fBorderSize {0};  window box bordersize in pixels ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include <TFrame.h>. Inheritance diagram for TFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFrame() [1/3]. TFrame::TFrame ; (; ). Frame default constructor. ; Definition at line 29 of file TFrame.cxx. ◆ TFrame() [2/3]. TFrame::TFrame ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). Frame normal constructor. ; Definition at line 36 of file TFrame.cxx. ◆ TFrame() [3/3]. TFrame::TFrame ; (; const TFrame & ; frame). Frame copy constructor. ; Definition at line 44 of file TFrame.cxx. ◆ ~TFrame(). TFrame::~TFrame ; (; ). override . Frame default destructor. ; Definition at line 52 of file TFrame.cxx. Member Functio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFrame.html:18445,inherit,inherited,18445,doc/master/classTFrame.html,https://root.cern,https://root.cern/doc/master/classTFrame.html,1,['inherit'],['inherited']
Modifiability,"anDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TMVA::EMsgTypefActiveTypeactive type; TMVA::EMsgTypefMinTypeminimum type for output; const TObject*fObjSourcethe source TObject (used for name); stringfStrSourcealternative string source; static map<EMsgType,std::string>*fgColorMapmatches output types with terminal colors; static Bool_tfgInhibitOutputflag to suppress all output; static Int_tfgInstanceCountercounts open MsgLogger instances; static UInt_tfgMaxSourceSizemaximum length of source name; static Bool_tfgOutputSupresseddisable the output globaly (used by generic booster); static const stringfgPrefixthe prefix of the source name; static const stringfgSuffixsuffix following source name; static map<EMsgType,std::string>*fgTypeMapmatches output types with strings. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void InhibitOutput(); { fgInhibitOutput = kTRUE; }. void EnableOutput(). { fgInhibitOutput = kFALSE; }. MsgLogger(const TObject* source, TMVA::EMsgType minType = kINFO); constructor. MsgLogger(const string& source, TMVA::EMsgType minType = kINFO); constructor. MsgLogger( EMsgType minType ); constructor. MsgLogger( const MsgLogger& parent ); copy constructor. ~MsgLogger(); destructor. TMVA::MsgLogger& operator=(const TMVA::MsgLogger& parent); assingment operator. std::string GetFormattedSource() const; make sure the source name is no longer than fgMaxSourceSize:. std::string GetPrintedSource() const; the full logger prefix. void Send(); activates the logger writer. void WriteMsg(TMVA::EMsgType type, const string& line) const; putting the output string, the message type, and the color; switcher together into a single string. TMVA::MsgLogger& Endmsg(TMVA::MsgLogger& logger); end line. void InitMaps(); Create the message type and color map",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MsgLogger.html:10579,Inherit,Inheritance,10579,root/html532/TMVA__MsgLogger.html,https://root.cern,https://root.cern/root/html532/TMVA__MsgLogger.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,anEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; TEveCaloData::vCellId_tTEveCaloData::fCellsHighlighted; TEveCaloData::vCellId_tTEveCaloData::fCellsSelected; UChar_tTEveElement::fChangeBits!; TEveElement::List_tTEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloData::fEps; TAxis*TEveCaloData::fEtaAxis; THStack*fHStack; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloData::fMaxValEcached; Float_tTEveCaloData::fMaxValEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TEveCaloData::vSliceInfo_tTEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query V,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCaloDataHist.html:19752,variab,variable,19752,root/html602/TEveCaloDataHist.html,https://root.cern,https://root.cern/root/html602/TEveCaloDataHist.html,4,['variab'],['variable']
Modifiability,"anEditMainTransparencyAllow editing of main transparency.; Bool_tfCellIdCacheOKdata cell ids cache state; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tfEndCapPosend cap z coordinate in cm; Double_tfEtaMax; Double_tfEtaMin; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tfMaxTowerHbounding box z dimesion; Float_tfMaxValAbs; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tfPhi; Double_tfPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tfPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tfScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assign",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCaloViz.html:20766,variab,variable,20766,root/html528/TEveCaloViz.html,https://root.cern,https://root.cern/root/html528/TEveCaloViz.html,4,['variab'],['variable']
Modifiability,"anStatic flag controlling flipping status of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsRealLValue.html:35451,config,configuration,35451,root/html526/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html526/RooAbsRealLValue.html,8,['config'],['configuration']
Modifiability,"anVector); TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>(const TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; vector<TProofDrawListOfPolyMarkers3D::Point4D_t>*fVectorvector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; std::vector<T> * GetVector() const; { return fVector; }. Long64_t Merge(TCollection* list). » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofVectorContainer_TProofDrawListOfPolyMarkers3D__Point4D_t_.html:6718,Inherit,Inheritance,6718,root/html602/TProofVectorContainer_TProofDrawListOfPolyMarkers3D__Point4D_t_.html,https://root.cern,https://root.cern/root/html602/TProofVectorContainer_TProofDrawListOfPolyMarkers3D__Point4D_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anVector); TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>(const TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; vector<TProofDrawListOfPolyMarkers3D::Point4D_t>*fVectorvector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; std::vector<T> * GetVector() const; { return fVector; }. Long64_t Merge(TCollection* list). » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-09-08 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofVectorContainer_TProofDrawListOfPolyMarkers3D__Point4D_t_.html:6718,Inherit,Inheritance,6718,root/html604/TProofVectorContainer_TProofDrawListOfPolyMarkers3D__Point4D_t_.html,https://root.cern,https://root.cern/root/html604/TProofVectorContainer_TProofDrawListOfPolyMarkers3D__Point4D_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anZig(double sigma) const; ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine&); ROOT::Math::GSLRngRanLuxD1GSLRngRanLuxD1(); ROOT::Math::GSLRngRanLuxD1GSLRngRanLuxD1(const ROOT::Math::GSLRngRanLuxD1&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxD1&operator=(const ROOT::Math::GSLRngRanLuxD1&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRngRanLuxD1(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLRndmEngines.h 37441 2010-12-09 16:27:54Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLRngRanLuxD1.html:3476,Inherit,Inheritance,3476,root/html532/ROOT__Math__GSLRngRanLuxD1.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLRngRanLuxD1.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anZig(double sigma) const; ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine&); ROOT::Math::GSLRngRanLuxD2GSLRngRanLuxD2(); ROOT::Math::GSLRngRanLuxD2GSLRngRanLuxD2(const ROOT::Math::GSLRngRanLuxD2&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxD2&operator=(const ROOT::Math::GSLRngRanLuxD2&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRngRanLuxD2(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLRndmEngines.h 37441 2010-12-09 16:27:54Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLRngRanLuxD2.html:3556,Inherit,Inheritance,3556,root/html532/ROOT__Math__GSLRngRanLuxD2.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLRngRanLuxD2.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anZig(double sigma) const; ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine&); ROOT::Math::GSLRngRanLuxS1GSLRngRanLuxS1(); ROOT::Math::GSLRngRanLuxS1GSLRngRanLuxS1(const ROOT::Math::GSLRngRanLuxS1&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxS1&operator=(const ROOT::Math::GSLRngRanLuxS1&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRngRanLuxS1(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLRndmEngines.h 37441 2010-12-09 16:27:54Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLRngRanLuxS1.html:3555,Inherit,Inheritance,3555,root/html532/ROOT__Math__GSLRngRanLuxS1.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLRngRanLuxS1.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anZig(double sigma) const; ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine&); ROOT::Math::GSLRngRanLuxS2GSLRngRanLuxS2(); ROOT::Math::GSLRngRanLuxS2GSLRngRanLuxS2(const ROOT::Math::GSLRngRanLuxS2&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxS2&operator=(const ROOT::Math::GSLRngRanLuxS2&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRngRanLuxS2(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLRndmEngines.h 37441 2010-12-09 16:27:54Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLRngRanLuxS2.html:3555,Inherit,Inheritance,3555,root/html532/ROOT__Math__GSLRngRanLuxS2.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLRngRanLuxS2.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anager * fDataSetManagerDefinition MethodCategory.h:138; TMVA::MsgLoggerostringstream derivative to redirect and format outputDefinition MsgLogger.h:57; TMVA::MsgLogger::SetMinTypevoid SetMinType(EMsgType minType)Definition MsgLogger.h:70; TMVA::MsgLogger::SetSourcevoid SetSource(const std::string &source)Definition MsgLogger.h:68; TMVA::MsgLogger::InhibitOutputstatic void InhibitOutput()Definition MsgLogger.cxx:67; TMVA::ROCCurveDefinition ROCCurve.h:46; TMVA::ROCCurve::GetEffSForEffBDouble_t GetEffSForEffB(Double_t effB, const UInt_t num_points=41)Calculate the signal efficiency (sensitivity) for a given background efficiency (sensitivity).Definition ROCCurve.cxx:217; TMVA::ROCCurve::GetROCIntegralDouble_t GetROCIntegral(const UInt_t points=41)Calculates the ROC integral (AUC)Definition ROCCurve.cxx:248; TMVA::ROCCurve::GetROCCurveTGraph * GetROCCurve(const UInt_t points=100)Returns a new TGraph containing the ROC curve.Definition ROCCurve.cxx:274; TMVA::RankingRanking for variables in method (implementation)Definition Ranking.h:48; TMVA::Ranking::Printvirtual void Print() constget maximum length of variable namesDefinition Ranking.cxx:111; TMVA::ResultsClassificationClass that is the base-class for a vector of result.Definition ResultsClassification.h:48; TMVA::ResultsMulticlassClass which takes the results of a multiclass classification.Definition ResultsMulticlass.h:55; TMVA::ResultsClass that is the base-class for a vector of result.Definition Results.h:57; TMVA::Tools::FormattedOutputvoid FormattedOutput(const std::vector< Double_t > &, const std::vector< TString > &, const TString titleVars, const TString titleValues, MsgLogger &logger, TString format=""%+1.3f"")formatted output of simple tableDefinition Tools.cxx:887; TMVA::Tools::ROOTVersionMessagevoid ROOTVersionMessage(MsgLogger &logger)prints the ROOT release number and dateDefinition Tools.cxx:1325; TMVA::Tools::UsefulSortDescendingvoid UsefulSortDescending(std::vector< std::vector< Double_t > > &, std::v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:132514,variab,variables,132514,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['variab'],['variables']
Modifiability,"anager.h>. Inheritance diagram for TPluginHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ AtomicInt_t. using TPluginHandler::AtomicInt_t = std::atomic<Int_t>. private . Definition at line 108 of file TPluginManager.h. Constructor & Destructor Documentation. ◆ TPluginHandler() [1/3]. TPluginHandler::TPluginHandler ; (; ). inlineprivate . Definition at line 125 of file TPluginManager.h. ◆ TPluginHandler() [2/3]. TPluginHandler::TPluginHandler ; (; const char * ; base, . const char * ; regexp, . const char * ; className, . const char * ; pluginName, . const char * ; ctor, . const char * ; origin . ). private . Create a plugin handler. Called by TPluginManager. ; Definition at line 116 of file TPluginManager.cxx. ◆ TPluginHandler() [3/3]. TPluginHandler::TPluginHandler ; (; const TPluginHandler & ; ). privatedelete . ◆ ~TPluginHandler(). TPluginHandler::~TPluginHandler ; (; ). private . Cleanup plugin handler object. ; Definition at line 150 of file TPluginManager.cxx. Member Function Documentation. ◆ CanHandle(). Bool_t TPluginHandler::CanHandle ; (; const char * ; base, . const char * ; uri . ). private . Check if regular expression appears in the URI, if so return kTRUE. ; If URI = 0 always return kTRUE. ; Definition at line 159 of file TPluginManager.cxx. ◆ CheckExactMatch() [1/2]. template<typename T0 > . bool TPluginHandler::CheckExactMatch ; (; int ; iarg, . const T0 & ;  . ). inlineprivate . Definition at line 151 of file TPluginManager.h. ◆ CheckExactMatch() [2/2]. template<typename T0 , typename... T> . bool TPluginHandler::CheckExactMatch ; (; int ; iarg, . const T0 & ; , . const T &... ; params . ). inlineprivate . Definition at line 157 of file TPluginManager.h. ◆ CheckForExecPlugin(). Bool_t TPluginHandler::CheckForExecPlugin ; (; Int_t ; nargs). private . Check that we can properly run ExecPlugin. ; Definition at line 303 of file TPluginManager.cxx. ◆ CheckNameMatch()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginHandler.html:13153,plugin,plugin,13153,doc/master/classTPluginHandler.html,https://root.cern,https://root.cern/doc/master/classTPluginHandler.html,1,['plugin'],['plugin']
Modifiability,"anager::fUserOwner of the session; TMapTDataSetManager::fUserUsed<group> --> <map of users> --> <value>; static TStringTDataSetManager::fgCommonDataSetTagName for common datasets, default: COMMON; static TList*TDataSetManager::fgDataSetSrvMapsList of TPair(TRegexp, TObjString) for mapping server coordinates. private:. Int_tfCacheUpdatePeriodPeriod for checking for new updated information; TStringfDataSetDirLocation of datasets; TStringfDataSetLockFileDataset lock file; Bool_tfIsRemoteTrue if the repository is remote; TStringfListFileFile to check repository updates; TStringfLocalCacheDirLocal cache when the repository is remote; Int_tfLockFileTimeLimitLimit in seconds after a lock automatically expires; TStringfMSSUrlURL for the Mass Storage System; Bool_tfOpenPermsTrue if file permissions must be open; TStringfStageOptsOption string to be used in issuing staging requests; Bool_tfUseCacheTrue if the cache is used for browsing remote repositories. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataSetManagerFile(const char* group, const char* user, const char* ins). Main constructor. TDataSetManagerFile(const char* ins). Main constructor. void Init(); Do the real inititialization. void InitLocalCache(); Init the local cache if required. void ParseInitOpts(const char* opts); Parse the input string and set the init bits accordingly; Format is; dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>]; The <datasetdir> is mandatory.; See TDataSetManager::ParseInitOpts for the available; base options.; The base options are already initialized by the base constructor. const char * GetDataSetPath(const char* group, const char* user, const char* dsName, TString& md5path, Bool_t local = kFALSE); Returns path of the indicated dataset. The extension is '.root' for all files; except for 'dsName==ls' which have extension '.txt'.; If 'local' is kTRUE the local cache path is returned instead in the form; <cachedir>/<group>.<user>.<dsName>.<e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataSetManagerFile.html:12353,Inherit,Inheritance,12353,root/html534/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html534/TDataSetManagerFile.html,6,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxysigma; RooRealProxywidth; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooVoigtian.html:39246,config,configuration,39246,root/html528/RooVoigtian.html,https://root.cern,https://root.cern/root/html528/RooVoigtian.html,2,['config'],['configuration']
Modifiability,"anagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxypdfProxy to p.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCachedPdf.html:43917,config,configuration,43917,root/html534/RooCachedPdf.html,https://root.cern,https://root.cern/root/html534/RooCachedPdf.html,4,['config'],['configuration']
Modifiability,"analDeps. Bool_t matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c, const RooArgProxy& d) const; Utility function for use in getAnalyticalIntegral(). If the; contents of proxies a,b,c,d occur in set 'allDeps' then the arguments; held in a,b,c,d are copied from allDeps to analDeps. Bool_t matchArgs(const RooArgSet& allDeps, RooArgSet& analDeps, 			 const RooArgSet& refset); Utility function for use in getAnalyticalIntegral(). If the; contents of 'refset' occur in set 'allDeps' then the arguments; held in 'refset' are copied from allDeps to analDeps. Bool_t matchArgsByName(const RooArgSet& allArgs, RooArgSet& matchedArgs, const TList& nameList) const; Check if allArgs contains matching elements for each name in nameList. If it does,; add the corresponding args from allArgs to matchedArgs and return kTRUE. Otherwise; return kFALSE and do not change matchedArgs. RooNumIntConfig* defaultIntegratorConfig(); Returns the default numeric integration configuration for all RooAbsReals. RooNumIntConfig* specialIntegratorConfig() const; Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned. RooNumIntConfig* specialIntegratorConfig(Bool_t createOnTheFly); Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned,; unless createOnTheFly is kTRUE in which case a clone of the default integrator; configuration is created, installed as specialized configuration, and returned. const RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:58687,config,configuration,58687,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,1,['config'],['configuration']
Modifiability,"analysis.C. The main features of this facility are:. * on-demand loading of branches; * ability to use the 'branchname' as if it was a data member; * protection against array out-of-bound; * ability to use the branch data as object (when the user code is available). See TTree::MakeProxy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; The option=prof is automatically selected in case of y:x>>pf; where pf is an existing TProfile histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a parallel coordinates plot. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Making a candle sticks chart. In case of a 2-Dim or more expression with the option=candle, one can generate; a candle sticks chart. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Saving the result of Draw to a TEventList or a TEntryList. TTree::Draw can be used to fill a TEventList object (list of entry numbers); instead of histogramming one variable.; If varexp0 has the form >>elist , a TEventList object named ""elist""; is created in the current directory. elist will contain the list; of entry numbers satisfying the current selection.; If option ""entrylist"" is used, a TEntryList object is created; Example:; tree.Draw("">>yplus"",""y>0""); will create a TEventList object named ""yplus"" in the current directory.; In an interactive session, one can type (after TTree::Draw); yplus.Print(""all""); to print the list of entry ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:77092,variab,variables,77092,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,1,['variab'],['variables']
Modifiability,"ance diagram for TH1F:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TH1F() [1/6]. TH1F::TH1F ; (; ). Constructor. ; Definition at line 10221 of file TH1.cxx. ◆ TH1F() [2/6]. TH1F::TH1F ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . Double_t ; xlow, . Double_t ; xup . ). Create a 1-Dim histogram with fix bins of type float (see TH1::TH1 for explanation of parameters) ; Definition at line 10232 of file TH1.cxx. ◆ TH1F() [3/6]. TH1F::TH1F ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Float_t * ; xbins . ). Create a 1-Dim histogram with variable bins of type float (see TH1::TH1 for explanation of parameters) ; Definition at line 10246 of file TH1.cxx. ◆ TH1F() [4/6]. TH1F::TH1F ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins . ). Create a 1-Dim histogram with variable bins of type float (see TH1::TH1 for explanation of parameters) ; Definition at line 10258 of file TH1.cxx. ◆ TH1F() [5/6]. TH1F::TH1F ; (; const TVectorF & ; v). explicit . Create a histogram from a TVectorF by default the histogram name is ""TVectorF"" and title = """". ; Definition at line 10270 of file TH1.cxx. ◆ TH1F() [6/6]. TH1F::TH1F ; (; const TH1F & ; h1f). Copy Constructor. ; The list of functions is not copied. (Use Clone() if needed) ; Definition at line 10287 of file TH1.cxx. ◆ ~TH1F(). TH1F::~TH1F ; (; ). override . Destructor. ; Definition at line 10295 of file TH1.cxx. Member Function Documentation. ◆ AddBinContent() [1/2]. void TH1F::AddBinContent ; (; Int_t ; bin). inlineoverridevirtual . Increment bin content by 1. ; Passing an out-of-range bin leads to undefined behavior ; Reimplemented from TH1.; Definition at line 636 of file TH1.h. ◆ AddBinContent() [2/2]. void TH1F::AddBinContent ; (; Int_t ; bin, . Double_t ; w . ). inlineoverridevirtual . Increment bin content by a weight w. ; WarningThe value ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1F.html:52501,variab,variable,52501,doc/master/classTH1F.html,https://root.cern,https://root.cern/doc/master/classTH1F.html,1,['variab'],['variable']
Modifiability,ance in auxiliary dataset. ; Reimplemented from RooAbsMCStudyModule.; Definition at line 149 of file RooDLLSignificanceMCSModule.cxx. ◆ Streamer(). void RooDLLSignificanceMCSModule::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsMCStudyModule. ◆ StreamerNVirtual(). void RooDLLSignificanceMCSModule::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 47 of file RooDLLSignificanceMCSModule.h. Member Data Documentation. ◆ _data. std::unique_ptr<RooDataSet> RooDLLSignificanceMCSModule::_data. private . Summary dataset to store results. ; Definition at line 41 of file RooDLLSignificanceMCSModule.h. ◆ _dll0h. std::unique_ptr<RooRealVar> RooDLLSignificanceMCSModule::_dll0h. private . Container variable for delta NLL. ; Definition at line 43 of file RooDLLSignificanceMCSModule.h. ◆ _nll0h. std::unique_ptr<RooRealVar> RooDLLSignificanceMCSModule::_nll0h. private . Container variable for NLL result on null hypothesis. ; Definition at line 42 of file RooDLLSignificanceMCSModule.h. ◆ _nullValue. double RooDLLSignificanceMCSModule::_nullValue. private . Numeric value of Nsignal parameter representing the null hypothesis. ; Definition at line 45 of file RooDLLSignificanceMCSModule.h. ◆ _parName. std::string RooDLLSignificanceMCSModule::_parName. private . Name of Nsignal parameter. ; Definition at line 40 of file RooDLLSignificanceMCSModule.h. ◆ _sig0h. std::unique_ptr<RooRealVar> RooDLLSignificanceMCSModule::_sig0h. private . Container variable for NLL result with signal. ; Definition at line 44 of file RooDLLSignificanceMCSModule.h. Libraries for RooDLLSignificanceMCSModule:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooDLLSignificanceMCSModule.h; roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx. RooDLLSignificanceMCSModule. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:51 (GVA Time) usin,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDLLSignificanceMCSModule.html:20365,variab,variable,20365,doc/master/classRooDLLSignificanceMCSModule.html,https://root.cern,https://root.cern/doc/master/classRooDLLSignificanceMCSModule.html,1,['variab'],['variable']
Modifiability,"ance to create and show web-based windows like Canvas or FitPanel.Definition RWebWindowsManager.hxx:40; ROOT::RWebWindowsManager::AddServerLocationstatic void AddServerLocation(const std::string &server_prefix, const std::string &files_path)Configure server location which can be used for loading of custom scripts or files When THttpServer i...Definition RWebWindowsManager.cxx:178; ROOT::RWebWindowsManager::GenerateKeystatic std::string GenerateKey(int keylen=32)Static method to generate cryptographic key Parameter keylen defines length of cryptographic key in b...Definition RWebWindowsManager.cxx:250; ROOT::RWebWindowsManager::fUseSessionKeybool fUseSessionKey! is session key has to be used for data signingDefinition RWebWindowsManager.hxx:48; ROOT::RWebWindowsManager::fAssgnExecstd::unique_ptr< TExec > fAssgnExec! special exec to assign thread id via ProcessEventsDefinition RWebWindowsManager.hxx:55; ROOT::RWebWindowsManager::CreateServerbool CreateServer(bool with_http=false)Creates http server, if required - with real http engine (civetweb) One could configure concrete HTTP...Definition RWebWindowsManager.cxx:430; ROOT::RWebWindowsManager::GetLaunchTmoutfloat GetLaunchTmout() constReturns timeout for launching new browser process.Definition RWebWindowsManager.hxx:66; ROOT::RWebWindowsManager::SetUseConnectionKeystatic void SetUseConnectionKey(bool on=true)Enable or disable usage of connection key (default on) If enabled, each connection (and reconnection)...Definition RWebWindowsManager.cxx:168; ROOT::RWebWindowsManager::fExternalProcessEventsbool fExternalProcessEvents! indicate that there are external process events engineDefinition RWebWindowsManager.hxx:54; ROOT::RWebWindowsManager::fMutexstd::recursive_mutex fMutex! main mutex, used for window creationsDefinition RWebWindowsManager.hxx:49; ROOT::RWebWindowsManager::SetDeleteCallbackvoid SetDeleteCallback(WebWindowDeleteCallback_t func)Assign show callback which can catch window showing, used by RBrowser.Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebWindowsManager_8hxx_source.html:7038,config,configure,7038,doc/master/RWebWindowsManager_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RWebWindowsManager_8hxx_source.html,1,['config'],['configure']
Modifiability,"ance; Inherited Members; Includes; Libraries. Function documentation; TFumili(Int_t maxpar = 25); maxpar is the maximum number of parameters used with TFumili object. void BuildArrays(). Allocates memory for internal arrays. Called by TFumili::TFumili. ~TFumili(). TFumili destructor. Double_t Chisquare(Int_t npar, Double_t* params) const; return a chisquare equivalent. void Clear(Option_t* opt = """"). Resets all parameter names, values and errors to zero. Argument opt is ignored. NB: this procedure doesn't reset parameter limits. void DeleteArrays(). Deallocates memory. Called from destructor TFumili::~TFumili. void Derivatives(Double_t* , Double_t* ). Calculates partial derivatives of theoretical function. Input:; fX - vector of data point; Output:; DF - array of derivatives. ARITHM.F; Converted from CERNLIB. Int_t Eval(Int_t& npar, Double_t* grad, Double_t& fval, Double_t* par, Int_t flag); Evaluate the minimisation function; Input parameters:; npar: number of currently variable parameters; par: array of (constant and variable) parameters; flag: Indicates what is to be calculated; grad: array of gradients; Output parameters:; fval: The calculated function value.; grad: The vector of first derivatives. The meaning of the parameters par is of course defined by the user,; who uses the values of those parameters to calculate his function value.; The starting values must be specified by the user. Inside FCN user has to define Z-matrix by means TFumili::GetZ; and TFumili::Derivatives,; set theoretical function by means of TFumili::SetUserFunc,; but first - pass number of parameters by TFumili::SetParNumber. Later values are determined by Fumili as it searches for the minimum; or performs whatever analysis is requested by the user. The default function calls the function specified in SetFCN. Double_t EvalTFN(Double_t* , Double_t* ); Evaluate theoretical function; df: array of partial derivatives; X: vector of theoretical function argument. Int_t ExecuteCommand(const char* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFumili.html:16961,variab,variable,16961,root/html528/TFumili.html,https://root.cern,https://root.cern/root/html528/TFumili.html,12,['variab'],['variable']
Modifiability,"ance; Inherited Members; Includes; Libraries. Function documentation; TFumili(Int_t maxpar = 25); maxpar is the maximum number of parameters used with TFumili object. void BuildArrays(). Allocates memory for internal arrays. Called by TFumili::TFumili. ~TFumili(). TFumili destructor. Double_t Chisquare(Int_t npar, Double_t* params) const; return a chisquare equivalent. void Clear(Option_t* opt = """"). Resets all parameter names, values and errors to zero. Argument opt is ignored. NB: this procedure doesn't reset parameter limits. void DeleteArrays(). Deallocates memory. Called from destructor TFumili::~TFumili. void Derivatives(Double_t* , Double_t* ). Calculates partial derivatives of theoretical function. Input:; fX - vector of data point; Output:; DF - array of derivatives. ARITHM.F; Converted from CERNLIB. Int_t Eval(Int_t& npar, Double_t* grad, Double_t& fval, Double_t* par, Int_t flag); Evaluate the minimisation function; Input parameters:; npar: number of currently variable parameters; par: array of (constant and variable) parameters; flag: Indicates what is to be calculated; grad: array of gradients; Output parameters:; fval: The calculated function value.; grad: The vector of first derivatives. The meaning of the parameters par is of course defined by the user,; who uses the values of those parameters to calculate their function value.; The starting values must be specified by the user. Inside FCN user has to define Z-matrix by means TFumili::GetZ; and TFumili::Derivatives,; set theoretical function by means of TFumili::SetUserFunc,; but first - pass number of parameters by TFumili::SetParNumber. Later values are determined by Fumili as it searches for the minimum; or performs whatever analysis is requested by the user. The default function calls the function specified in SetFCN. Double_t EvalTFN(Double_t* , Double_t* ); Evaluate theoretical function; df: array of partial derivatives; X: vector of theoretical function argument. Int_t ExecuteCommand(const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFumili.html:17524,variab,variable,17524,root/html602/TFumili.html,https://root.cern,https://root.cern/root/html602/TFumili.html,8,['variab'],['variable']
Modifiability,"ance; Inherited Members; Includes; Libraries. Function documentation; virtual ~Minimizer(). Destructor (no operations). {}. void Clear(); reset for consecutive minimizations - implement if needed. {}. void SetFunction(const ROOT::Math::IMultiGenFunction & func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction & func); set a function to minimize using gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). return SetLimitedVariable(unsigned int , const string& , double , double , double , double ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int , double ); set the value of an existing variable. { return false; }. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. bool ProvidesEr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__Minimizer.html:5270,variab,variable,5270,root/html526/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__Minimizer.html,1,['variab'],['variable']
Modifiability,"ancelDimension(). void TTreeFormulaManager::CancelDimension ; (; Int_t ; virt_dim). protectedvirtual . Cancel a dimension. ; This is usually called when an out-of-bounds index is used. ; Definition at line 105 of file TTreeFormulaManager.cxx. ◆ Class(). static TClass * TTreeFormulaManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTreeFormulaManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TTreeFormulaManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 73 of file TTreeFormulaManager.h. ◆ DeclFileName(). static const char * TTreeFormulaManager::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 73 of file TTreeFormulaManager.h. ◆ EnableMultiVarDims(). void TTreeFormulaManager::EnableMultiVarDims ; (; ). protectedvirtual . Set the manager as handling a formula with multiple variable dimensions. ; Definition at line 113 of file TTreeFormulaManager.cxx. ◆ GetMultiplicity(). virtual Int_t TTreeFormulaManager::GetMultiplicity ; (; ); const. inlinevirtual . Definition at line 66 of file TTreeFormulaManager.h. ◆ GetNdata(). Int_t TTreeFormulaManager::GetNdata ; (; bool ; forceLoadDim = false). virtual . Return number of available instances in the formulas. ; Definition at line 122 of file TTreeFormulaManager.cxx. ◆ IsA(). TClass * TTreeFormulaManager::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 73 of file TTreeFormulaManager.h. ◆ Notify(). bool TTreeFormulaManager::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormulaManager.html:14321,variab,variable,14321,doc/master/classTTreeFormulaManager.html,https://root.cern,https://root.cern/doc/master/classTTreeFormulaManager.html,1,['variab'],['variable']
Modifiability,"ancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; voidEvaluateAllMethods(); voidEvaluateAllVariables(TString options = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); TMVA::FactoryFactory(TString theJobName, TFile* theTargetFile, TString theOption = """"); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMVA::IMethod*GetMethod(const TString& title) const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Factory.html:5067,Config,Configurable,5067,root/html532/TMVA__Factory.html,https://root.cern,https://root.cern/root/html532/TMVA__Factory.html,2,['Config'],['Configurable']
Modifiability,"anch(l,16000,2);; T.Print();; }. Int_t Branch(const char* folder, Int_t bufsize = 32000, Int_t splitlevel = 99); Create one branch for each element in the folder.; Returns the total number of branches created. TBranch* Branch(const char* name, void* address, const char* leaflist, Int_t bufsize = 32000); Create a new TTree Branch. This Branch constructor is provided to support non-objects in; a Tree. The variables described in leaflist may be simple; variables or structures. // See the two following; constructors for writing objects in a Tree. By default the branch buffers are stored in the same file as the Tree.; use TBranch::SetFile to specify a different file. * address is the address of the first item of a structure.; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t); - O : a boolean (Bool_t). By default, a variable will be copied to the buffer with the number of; bytes specified in the type descriptor character. However, if the type; consists of 2 characters, the second character is an integer that; specifies the number of bytes to be used when copying the variable; to the output buffer. Example:; X",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:44580,variab,variable,44580,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,4,['variab'],['variable']
Modifiability,"anch, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this is to be used by user (thats why we pass the name of the branch). ;  ; Int_t AddBranch (TBranch *b, bool subgbranches=false) override;  Add a branch to the list of branches to be stored in the cache this function is called by the user via TTree::AddBranchToCache. ;  ; virtual void Disable ();  ; virtual Int_t DropBranch (const char *branch, bool subbranches=false);  Remove a branch to the list of branches to be stored in the cache this is to be used by user (thats why we pass the name of the branch). ;  ; virtual Int_t DropBranch (TBranch *b, bool subbranches=false);  Remove a branch to the list of branches to be stored in the cache this function is called by TBranch::GetBasket. ;  ; virtual void Enable ();  ; virtual bool FillBuffer ();  Fill the cache buffer with the branches in the cache. ;  ; const TObjArray * GetCachedBranches () const;  ; EPrefillType GetConfiguredPrefillType () const;  Return the desired prefill type from the environment or resource variable. ;  ; Double_t GetEfficiency () const;  Give the total efficiency of the primary cache... defined as the ratio of blocks found in the cache vs. ;  ; Double_t GetEfficiencyRel () const;  This will indicate a sort of relative efficiency... a ratio of the reads found in the cache to the number of reads so far. ;  ; virtual Int_t GetEntryMax () const;  ; virtual Int_t GetEntryMin () const;  ; virtual EPrefillType GetLearnPrefill () const;  ; Double_t GetMissEfficiency () const;  The total efficiency of the 'miss cache' - defined as the ratio of blocks found in the cache versus the number of blocks prefetched. ;  ; Double_t GetMissEfficiencyRel () const;  Relative efficiency of the 'miss cache' - ratio of the reads found in cache to the number of reads so far. ;  ; bool GetOptimizeMisses () const;  ; TTree * GetTree () const;  ; TClass * IsA () const override;  ; bool IsAutoCreated () const;  ; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTreeCache.html:13260,variab,variable,13260,doc/v632/classTTreeCache.html,https://root.cern,https://root.cern/doc/v632/classTTreeCache.html,2,['variab'],['variable']
Modifiability,"anch::fEntryOffsetLenInt_t fEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers.Definition TBranch.h:119; TBranch::fMaxBasketsInt_t fMaxBasketsMaximum number of Baskets so far.Definition TBranch.h:125; TBranch::GetTreeTTree * GetTree() constDefinition TBranch.h:252; TBranch::fFillLeavesFillLeaves_t fFillLeaves! Pointer to the FillLeaves implementation to use.Definition TBranch.h:163; TBranch::GetFullNamevirtual TString GetFullName() constReturn the 'full' name of the branch.Definition TBranch.cxx:2031; TBranch::ReadLeaves_tvoid(TBranch::* ReadLeaves_t)(TBuffer &b)Definition TBranch.h:160; TBranch::kBranchAny@ kBranchAnyBranch is an object*.Definition TBranch.h:108; TBranch::kBranchObject@ kBranchObjectBranch is a TObject*.Definition TBranch.h:107; TBranch::kDoNotProcess@ kDoNotProcessActive bit for branches.Definition TBranch.h:105; TBranch::fLeavesTObjArray fLeaves-> List of leaves of this branchDefinition TBranch.h:139; TBranch::fAddresschar * fAddress! Address of 1st leaf (variable or object)Definition TBranch.h:147; TBranch::GetListOfBranchesTObjArray * GetListOfBranches()Definition TBranch.h:246; TBranch::GetBrowsablesvirtual TList * GetBrowsables()Returns (and, if 0, creates) browsable objects for this branch See TVirtualBranchBrowsable::FillListO...Definition TBranch.cxx:1312; TBranch::fOffsetInt_t fOffsetOffset of this branch.Definition TBranch.h:124; TBranch::fBasketEntryLong64_t * fBasketEntry[fMaxBaskets] Table of first entry in each basketDefinition TBranch.h:142; TBranch::GetEntryvirtual Int_t GetEntry(Long64_t entry=0, Int_t getall=0)Read all leaves of entry and return total number of bytes read.Definition TBranch.cxx:1706; TBranch::GetFileNameconst char * GetFileName() constDefinition TBranch.h:234; TBranch::GetIOFeaturesTIOFeatures GetIOFeatures() constReturns the IO settings currently in use for this branch.Definition TBranch.cxx:2255; TBranch::IsATClass * IsA() const overrideDefinition TBranch.h:295; TBranch::fReadEntryLong64_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:274443,variab,variable,274443,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['variab'],['variable']
Modifiability,"anch::fOffsetOffset of this branch; TObject*fOldObject!Pointer to old object; TBranch*TBranch::fParent! Pointer to parent branch.; Int_tTBranch::fReadBasket! Current basket number when reading; Long64_tTBranch::fReadEntry! Current entry number when reading; TBranch::ReadLeaves_tTBranch::fReadLeaves! Pointer to the ReadLeaves implementation to use.; Bool_tTBranch::fSkipZip! After being read, the buffer will not be unziped.; Int_tTBranch::fSplitLevelBranch split level; TStringTNamed::fTitleobject title; Long64_tTBranch::fTotBytesTotal number of bytes in all leaves before compression; TTree*TBranch::fTree! Pointer to Tree header; Int_tTBranch::fWriteBasketLast basket number written; Long64_tTBranch::fZipBytesTotal number of bytes in all leaves after compression; static Int_tTBranch::fgCount! branch counter; static TBranch::EStatusBitsTBranch::kAutoDelete; static TBranch::EStatusBitsTBranch::kDoNotUseBufferMap; static TBranchObject::(anonymous)kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBranchObject(); Default constructor for BranchObject. TBranchObject(TTree* tree, const char* name, const char* classname, void* addobj, Int_t basketsize = 32000, Int_t splitlevel = 0, Int_t compress = -1, Bool_t isptrptr = kTRUE); Create a BranchObject. TBranchObject(TBranch* parent, const char* name, const char* classname, void* addobj, Int_t basketsize = 32000, Int_t splitlevel = 0, Int_t compress = -1, Bool_t isptrptr = kTRUE); Create a BranchObject. void Init(TTree* tree, TBranch* parent, const char* name, const char* classname, void* addobj, Int_t basketsize, Int_t splitlevel, Int_t compress, Bool_t isptrptr); Initialization routine (run from the constructor so do not make this function virtual). ~TBranchObject(); Destructor for a BranchObject. void Browse(TBrowser* b); Browse the branch content. Int_t Fill(); Loop on all leaves of this branch to fill Basket buffer. Int_t GetEntry(Long64_t entry = 0, Int_t getall = 0); Read all b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBranchObject.html:14082,Inherit,Inheritance,14082,root/html602/TBranchObject.html,https://root.cern,https://root.cern/root/html602/TBranchObject.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anch;  ; Int_t * fNodeIdArray;  State info for the parallel world. ;  ; TString fPath;  ; TGeoStateInfo * fPWInfo;  ; TObjArray * fStack;  current matrix ;  ; Int_t fStackLevel;  ; TGeoNode * fTop;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoCache.h>. Inheritance diagram for TGeoNodeCache:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNodeCache() [1/3]. TGeoNodeCache::TGeoNodeCache ; (; const TGeoNodeCache & ; ). privatedelete . array of node id's . ◆ TGeoNodeCache() [2/3]. TGeoNodeCache::TGeoNodeCache ; (; ). Dummy constructor. ; Definition at line 34 of file TGeoCache.cxx. ◆ TGeoNodeCache() [3/3]. TGeoNodeCache::TGeoNodeCache ; (; TGeoNode * ; top, . Bool_t ; nodeid = kFALSE, . Int_t ; capacity = 30 . ). Default constructor. ; Definition at line 62 of file TGeoCache.cxx. ◆ ~TGeoNodeCache(). TGeoNodeCache::~TGeoNodeCache ; (; ). override . Destructor. ; Definition at line 104 of file TGeoCache.cxx. Member Function Documentation. ◆ BuildIdArray(). vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNodeCache.html:13791,inherit,inherited,13791,doc/master/classTGeoNodeCache.html,https://root.cern,https://root.cern/doc/master/classTGeoNodeCache.html,2,['inherit'],['inherited']
Modifiability,anchAddressStatusTTree::kNoCheck; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TTree::(anonymous)TTree::kSplitCollectionOfPointers; static TTree::ESetBranchAddressStatusTTree::kVoidPtr; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TList*TTree::fAliasesList of aliases for expressions based on the tree branches.; Float_t*fArgs! [fNvar] Array of variables; Long64_tTTree::fAutoFlushAutoflush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced; Long64_tTTree::fAutoSaveAutosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced; TBranchRef*TTree::fBranchRefBranch supporting the TRefTable (if any); TObjArrayTTree::fBranchesList of Branches; Bool_tTTree::fCacheDoAutoInit! true if cache auto creation or resize check is needed; Long64_tTTree::fCacheSize! Maximum size of file buffers; Bool_tTTree::fCacheUserSet! true if the cache setting was explicitly given by user; Long64_tTTree::fChainOffset! Offset of 1st entry of this Tree in a TChain; TList*TTree::fClones! List of cloned trees which share our addresses; Long64_t*TTree::fClusterRangeEnd[fNClusterRange] Last entry of a cluster range.; Long64_t*TTree::fClusterSize[fNClusterRange] Number of entries in each cluster for a given range.; Int_tTTree::fDebug! Debug level; Long64_tTTree::fDebugMax! Last entry number to debug; Long64_tTTree::fDebugMin! First entry number to debug; Int_tTTree::fDefaultEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TDirectory*TTree::fDirectory! Pointer to directory holding this tree; Long64_tTTree::fEntriesNumber of entries; TEntryList*TTree::fEntryList! Pointer to event selection list (if one); Long64_tTTree::fEstimateNumber of entries to estimate histogr,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TNtuple.html:23241,variab,variables,23241,root/html604/TNtuple.html,https://root.cern,https://root.cern/root/html604/TNtuple.html,2,['variab'],['variables']
Modifiability,"anchAddressType for the semantic of the return value.; Note: See the comments in TBranchElement::SetAddress() for the meaning of the addr parameter and the object ownership policy. ; Reimplemented in TChain.; Definition at line 8398 of file TTree.cxx. ◆ SetBranchAddressImp(). Int_t TTree::SetBranchAddressImp ; (; TBranch * ; branch, . void * ; addr, . TBranch ** ; ptr . ). protected . Change branch address, dealing with clone trees properly. ; See TTree::CheckBranchAddressType for the semantic of the return value.; Note: See the comments in TBranchElement::SetAddress() for the meaning of the addr parameter and the object ownership policy. ; Definition at line 8440 of file TTree.cxx. ◆ SetBranchStatus(). void TTree::SetBranchStatus ; (; const char * ; bname, . bool ; status = true, . UInt_t * ; found = nullptr . ). virtual . Set branch status to Process or DoNotProcess. ; When reading a Tree, by default, all branches are read. One can speed up considerably the analysis phase by activating only the branches that hold variables involved in a query.; bname is the name of a branch. if bname=""*"", apply to all branches.; if bname=""xxx*"", apply to all branches with name starting with xxx. see TRegexp for wildcarding options. status = 1 branch will be processed; = 0 branch will not be processed. Example:; Assume a tree T with sub-branches a,b,c,d,e,f,g,etc.. when doing T.GetEntry(i) all branches are read for entry i. to read only the branches c and e, one can do T.SetBranchStatus(""*"",0); //disable all branches; T.SetBranchStatus(""c"",1);; T.setBranchStatus(""e"",1);; T.GetEntry(i);; bname is interpreted as a wild-carded TRegexp (see TRegexp::MakeWildcard). Thus, ""a*b"" or ""a.*b"" matches branches starting with ""a"" and ending with ""b"", but not any other branch with an ""a"" followed at some point by a ""b"". For this second behavior, use ""*a*b*"". Note that TRegExp does not support '|', and so you cannot select, e.g. track and shower branches with ""track|shower"".; WARNING! WARNING! WAR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:204548,variab,variables,204548,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,1,['variab'],['variables']
Modifiability,"anchAddressType for the semantic of the return value.; Note: See the comments in TBranchElement::SetAddress() for the meaning of the addr parameter and the object ownership policy. ; Reimplemented in TChain.; Definition at line 8403 of file TTree.cxx. ◆ SetBranchAddressImp(). Int_t TTree::SetBranchAddressImp ; (; TBranch * ; branch, . void * ; addr, . TBranch ** ; ptr . ). protected . Change branch address, dealing with clone trees properly. ; See TTree::CheckBranchAddressType for the semantic of the return value.; Note: See the comments in TBranchElement::SetAddress() for the meaning of the addr parameter and the object ownership policy. ; Definition at line 8445 of file TTree.cxx. ◆ SetBranchStatus(). void TTree::SetBranchStatus ; (; const char * ; bname, . bool ; status = true, . UInt_t * ; found = nullptr . ). virtual . Set branch status to Process or DoNotProcess. ; When reading a Tree, by default, all branches are read. One can speed up considerably the analysis phase by activating only the branches that hold variables involved in a query.; bname is the name of a branch. if bname=""*"", apply to all branches.; if bname=""xxx*"", apply to all branches with name starting with xxx. see TRegexp for wildcarding options. status = 1 branch will be processed; = 0 branch will not be processed. Example:; Assume a tree T with sub-branches a,b,c,d,e,f,g,etc.. when doing T.GetEntry(i) all branches are read for entry i. to read only the branches c and e, one can do T.SetBranchStatus(""*"",0); //disable all branches; T.SetBranchStatus(""c"",1);; T.setBranchStatus(""e"",1);; T.GetEntry(i);; bname is interpreted as a wild-carded TRegexp (see TRegexp::MakeWildcard). Thus, ""a*b"" or ""a.*b"" matches branches starting with ""a"" and ending with ""b"", but not any other branch with an ""a"" followed at some point by a ""b"". For this second behavior, use ""*a*b*"". Note that TRegExp does not support '|', and so you cannot select, e.g. track and shower branches with ""track|shower"".; WARNING! WARNING! WAR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTree.html:207039,variab,variables,207039,doc/master/classTTree.html,https://root.cern,https://root.cern/doc/master/classTTree.html,1,['variab'],['variables']
Modifiability,"anchBrowsable::GetBranch() const; static Int_tGetBrowsables(TList& list, const TBranch* branch, const TVirtualBranchBrowsable* parent = 0); TClass*TVirtualBranchBrowsable::GetClassType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TVirtualBranchBrowsable::GetIconName() const; TList*TVirtualBranchBrowsable::GetLeaves() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TVirtualBranchBrowsable*TVirtualBranchBrowsable::GetParent() const; voidTVirtualBranchBrowsable::GetScope(TString& scope) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTVirtualBranchBrowsable::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TNonSplitBrowsable.html:4782,Inherit,InheritsFrom,4782,root/html532/TNonSplitBrowsable.html,https://root.cern,https://root.cern/root/html532/TNonSplitBrowsable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"anchBrowsable::GetBranch() const; static Int_tGetBrowsables(TList& list, const TBranch* branch, const TVirtualBranchBrowsable* parent = 0); TClass*TVirtualBranchBrowsable::GetClassType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TVirtualBranchBrowsable::GetIconName() const; TList*TVirtualBranchBrowsable::GetLeaves() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TVirtualBranchBrowsable*TVirtualBranchBrowsable::GetParent() const; voidTVirtualBranchBrowsable::GetScope(TString& scope) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTVirtualBranchBrowsable::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNonSplitBrowsable.html:4735,Inherit,InheritsFrom,4735,root/html602/TNonSplitBrowsable.html,https://root.cern,https://root.cern/root/html602/TNonSplitBrowsable.html,2,['Inherit'],['InheritsFrom']
Modifiability,anchElement&operator=(const TBranchElement&); static voidSwitchContainer(TObjArray*). Data Members; public:. enum { kBranchFolder; kDeleteObject; kCache; kOwnOnfileObj; kAddressSet; kMakeClass; kDecomposedObj; };; enum EBranchElementType { kLeafNode; kBaseClassNode; kObjectNode; kClonesNode; kSTLNode; kClonesMemberNode; kSTLMemberNode; };; enum TBranch::EStatusBits { kAutoDelete; kDoNotUseBufferMap; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*TBranch::fAddress! Address of 1st leaf (variable or object); Int_t*TBranch::fBasketBytes[fMaxBaskets] Length of baskets on file; Long64_t*TBranch::fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*TBranch::fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tTBranch::fBasketSizeInitial Size of Basket Buffer; TObjArrayTBranch::fBaskets-> List of baskets of this branch; TClassReffBranchClass! Reference to class definition in fClassName; TBranchElement*fBranchCountpointer to primary branchcount branch; TBranchElement*fBranchCount2pointer to secondary branchcount branch; Int_tfBranchID! ID number assigned by a TRefTable.; Int_t*fBranchOffset! Sub-Branch offsets with respect to current transient class; TObjArrayTBranch::fBranches-> List of Branches of this branch; TList*TBranch::fBrowsables! List of TVirtualBranchBrowsables used for Browse(); UInt_tfCheckSumCheckSum of class; TStringfClassNameClass name of referenced object; Int_tfClassVersionVersion number of class; TClassReffClonesClass! Reference to class definition in fClonesName; TStringfClonesNameName of class in TClonesArray (if any); TVirtualCollectionProxy*fCollProxy! collection interface (if any); Int_tTBranch::fCompressCompression level and algorithm; TBasket*TBranch::fCurrentBasket! Pointer to the current basket.; TCl,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBranchElement.html:14420,variab,variable,14420,root/html534/TBranchElement.html,https://root.cern,https://root.cern/root/html534/TBranchElement.html,2,['variab'],['variable']
Modifiability,"anchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<double>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<double>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaImpProxy_double_.html:4429,Inherit,Inheritance,4429,root/html602/ROOT__TClaImpProxy_double_.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaImpProxy_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<double>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<double>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaImpProxy_double_.html:4429,Inherit,Inheritance,4429,root/html604/ROOT__TClaImpProxy_double_.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaImpProxy_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<unsigned char>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<unsigned char>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaImpProxy_unsigned_char_.html:4618,Inherit,Inheritance,4618,root/html602/ROOT__TClaImpProxy_unsigned_char_.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaImpProxy_unsigned_char_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<unsigned char>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<unsigned char>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaImpProxy_unsigned_char_.html:4618,Inherit,Inheritance,4618,root/html604/ROOT__TClaImpProxy_unsigned_char_.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaImpProxy_unsigned_char_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<unsigned long>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<unsigned long>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaImpProxy_unsigned_long_.html:4618,Inherit,Inheritance,4618,root/html602/ROOT__TClaImpProxy_unsigned_long_.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaImpProxy_unsigned_long_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<unsigned long>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<unsigned long>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaImpProxy_unsigned_long_.html:4618,Inherit,Inheritance,4618,root/html604/ROOT__TClaImpProxy_unsigned_long_.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaImpProxy_unsigned_long_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; RooListProxy_setset of terms to be summed; TIterator*_setIter! Iterator over set; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddition(). RooAddition(const char* name, const char* title, const RooArgSet& sumSet,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAddition.html:33471,config,configuration,33471,root/html532/RooAddition.html,https://root.cern,https://root.cern/root/html532/RooAddition.html,1,['config'],['configuration']
Modifiability,"anches.; Making one single branch and one single buffer can be the right choice; when one wants to process only a subset of all entries in the tree.; (you know for example the list of entry numbers you want to process).; Making several branches is particularly interesting in the data analysis; phase, when one wants to histogram some attributes of an object (entry); without reading all the attributes. /*. */. ==> TTree *tree = new TTree(name, title, maxvirtualsize); Creates a Tree with name and title. Maxvirtualsize is by default 64Mbytes,; maxvirtualsize = 64000000(default) means: Keeps as many buffers in memory until; the sum of all buffers is greater than 64 Megabyte. When this happens,; memory buffers are written to disk and deleted until the size of all; buffers is again below the threshold.; maxvirtualsize = 0 means: keep only one buffer in memory. Various kinds of branches can be added to a tree:; A - simple structures or list of variables. (may be for C or Fortran structures); B - any object (inheriting from TObject). (we expect this option be the most frequent); C - a ClonesArray. (a specialized object for collections of same class objects). ==> Case A. TBranch *branch = tree->Branch(branchname,address, leaflist, bufsize); * address is the address of the first item of a structure; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreePlayer.html:1973,inherit,inheriting,1973,root/html528/TTreePlayer.html,https://root.cern,https://root.cern/root/html528/TTreePlayer.html,1,['inherit'],['inheriting']
Modifiability,"and A*V = V*D. Function Members (Methods); public:. TMatrixDEigen(); TMatrixDEigen(const TMatrixD& a); TMatrixDEigen(const TMatrixDEigen& another); virtual~TMatrixDEigen(); static TClass*Class(); const TMatrixDGetEigenValues() const; const TVectorD&GetEigenValuesIm() const; const TVectorD&GetEigenValuesRe() const; const TMatrixD&GetEigenVectors() const; virtual TClass*IsA() const; TMatrixDEigen&operator=(const TMatrixDEigen& source); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. static voidMakeHessenBerg(TMatrixD& v, TVectorD& ortho, TMatrixD& H); static voidMakeSchurr(TMatrixD& v, TVectorD& d, TVectorD& e, TMatrixD& H); static voidSort(TMatrixD& v, TVectorD& d, TVectorD& e). Data Members; public:. enum { kWorkMax; };. protected:. TVectorDfEigenValuesImEigen-values; TVectorDfEigenValuesReEigen-values; TMatrixDfEigenVectorsEigen-vectors of matrix. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMatrixDEigen(const TMatrixD& a); Constructor for eigen-problem of matrix A . TMatrixDEigen(const TMatrixDEigen& another); Copy constructor. void MakeHessenBerg(TMatrixD& v, TVectorD& ortho, TMatrixD& H); Nonsymmetric reduction to Hessenberg form.; This is derived from the Algol procedures orthes and ortran, by Martin and Wilkinson,; Handbook for Auto. Comp., Vol.ii-Linear Algebra, and the corresponding; Fortran subroutines in EISPACK. void MakeSchurr(TMatrixD& v, TVectorD& d, TVectorD& e, TMatrixD& H); Nonsymmetric reduction from Hessenberg to real Schur form.; This is derived from the Algol procedure hqr2, by Martin and Wilkinson,; Handbook for Auto. Comp., Vol.ii-Linear Algebra, and the corresponding; Fortran subroutine in EISPACK. void Sort(TMatrixD& v, TVectorD& d, TVectorD& e); Sort eigenvalues and corresponding vectors in descending order of Re^2+Im^2; of the complex eigenvalues . TMatrixDEigen & operator=(const TMatrixDEigen& s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixDEigen.html:1781,Inherit,Inheritance,1781,root/html534/TMatrixDEigen.html,https://root.cern,https://root.cern/root/html534/TMatrixDEigen.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"and BgCut ; Definition at line 476 of file DataLoader.cxx. ◆ SetInputTrees() [3/3]. void TMVA::DataLoader::SetInputTrees ; (; TTree * ; signal, . TTree * ; background, . Double_t ; signalWeight = 1.0, . Double_t ; backgroundWeight = 1.0 . ). define the input trees for signal and background; no cuts are applied ; Definition at line 455 of file DataLoader.cxx. ◆ SetInputTreesFromEventAssignTrees(). void TMVA::DataLoader::SetInputTreesFromEventAssignTrees ; (; ). private . assign event-wise local trees to data set ; Definition at line 319 of file DataLoader.cxx. ◆ SetInputVariables(). void TMVA::DataLoader::SetInputVariables ; (; std::vector< TString > * ; theVariables). deprecated ; fill input variables in data set ; Definition at line 541 of file DataLoader.cxx. ◆ SetSignalTree(). void TMVA::DataLoader::SetSignalTree ; (; TTree * ; signal, . Double_t ; weight = 1.0 . ). Definition at line 432 of file DataLoader.cxx. ◆ SetSignalWeightExpression(). void TMVA::DataLoader::SetSignalWeightExpression ; (; const TString & ; variable). Definition at line 549 of file DataLoader.cxx. ◆ SetTree(). void TMVA::DataLoader::SetTree ; (; TTree * ; tree, . const TString & ; className, . Double_t ; weight . ). deprecated ; set background tree ; Definition at line 447 of file DataLoader.cxx. ◆ SetWeightExpression(). void TMVA::DataLoader::SetWeightExpression ; (; const TString & ; variable, . const TString & ; className = """" . ). Definition at line 563 of file DataLoader.cxx. ◆ Streamer(). virtual void TMVA::DataLoader::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TMVA::Configurable. ◆ StreamerNVirtual(). void TMVA::DataLoader::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 214 of file DataLoader.h. ◆ UserAssignEvents(). Bool_t TMVA::DataLoader::UserAssignEvents ; (; UInt_t ; clIndex). Definition at line 311 of file DataLoader.cxx. ◆ VarTransform(). TMVA::DataLoader * TMVA::DataLoader::Var",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataLoader.html:34636,variab,variable,34636,doc/master/classTMVA_1_1DataLoader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataLoader.html,1,['variab'],['variable']
Modifiability,"and V2 persistent binnings. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsBinning;  RooAbsBinning (const char *name=nullptr);  ;  RooAbsBinning (const RooAbsBinning &other, const char *name=nullptr);  ; int binNumber (double x) const;  Returns the bin number corresponding to the value x. ;  ; TObject * Clone (const char *newname=nullptr) const override;  Make a clone of an object using the Streamer facility. ;  ; virtual RooAbsReal * highBoundFunc () const;  Return pointer to RooAbsReal parameterized upper bound, if any. ;  ; virtual void insertHook (RooAbsRealLValue &) const;  Hook interface function to execute code upon insertion into a RooAbsRealLValue. ;  ; virtual bool isParameterized () const;  Interface function. ;  ; virtual bool isShareable () const;  If true (default), the range definition can be shared across clones of a RooRealVar. ;  ; virtual bool isUniform () const;  ; virtual RooAbsReal * lowBoundFunc () const;  Return pointer to RooAbsReal parameterized lower bound, if any. ;  ; Int_t numBins () const;  Return number of bins. ;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print itself. ;  ; void printArgs (std::ostream &os) const override;  Print binning arguments (the RooAbsReal objects represening the variable bin boundaries for parameterized binning implementations. ;  ; void printClassName (std::ostream &os) const override;  Print binning class name. ;  ; void printName (std::ostream &os) const override;  Print binning name. ;  ; void printTitle (std::ostream &os) const override;  Print binning title. ;  ; void printValue (std::ostream &os) const override;  Print binning value, i.e the bin boundary positions. ;  ; virtual void removeHook (RooAbsRealLValue &) const;  Hook interface function to execute code upon removal from a RooAbsRealLValue. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRangeBinning.html:2818,parameteriz,parameterized,2818,doc/master/classRooRangeBinning.html,https://root.cern,https://root.cern/doc/master/classRooRangeBinning.html,1,['parameteriz'],['parameterized']
Modifiability,"and a list of objects in memory. A Key is a small object that describes the type and location of a persistent object in a file. The persistent object may be a directory. The structure of a file is shown in TFile::TFile. PyROOT; In the same way as for TDirectory, it is possible to inspect the content of a TDirectoryFile object from Python as if the subdirectories and objects it contains were its attributes. For more information, please refer to the TDirectory documentation.; In addition to the attribute syntax, one can inspect a TDirectoryFile in Python via the Get method. In this case, the subdirectory/object name is specified as a string: # Access a subdirectory; d.Get('subdir'); ; # We can go further down in the hierarchy of directories; d.Get('subdir/subsubdir'); ; # Access an object (e.g. a histogram) in the directory; d.Get('obj'); ; # ... or in a subdirectory; d.Get('subdir/obj'); ; # Wrong attribute: returns null; x = d.Get('wrongAttr') # x points to null; Furthermore, TDirectoryFile inherits a WriteObject Python method from TDirectory. Such method allows to write an object into a TDirectoryFile with the following syntax: # Write object obj with identifier 'keyName'; d.WriteObject(obj, 'keyName'). Definition at line 32 of file TDirectoryFile.h. Public Types; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDirectoryFile.html:1496,inherit,inherits,1496,doc/master/classTDirectoryFile.html,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html,1,['inherit'],['inherits']
Modifiability,"and can take any name. It is specified using brackets; 194 e.g. `[expected_mass]` or `[0]`.; 195 ; 196 ```; 197 TFormula("""", ""exp([expected_mass])-1""); 198 ```; 199 ; 200 Variables and parameters can be combined in the same TFormula. Here we consider; 201 a very simple case where we have an exponential decay after some time t and a; 202 number of events with timestamps for which we want to evaluate this function.; 203 ; 204 ```; 205 TFormula tf ("""", ""[0]*exp(-[1]*t)"");; 206 tf.SetParameter(0, 1);; 207 tf.SetParameter(1, 0.5);; 208 ; 209 for (auto & event : events) {; 210 tf.Eval(event.t);; 211 }; 212 ```; 213 ; 214 The distinction between variables and parameters arose from the TFormula's; 215 application in fitting. There parameters are fitted to the data provided; 216 through variables. In other applications this distinction can go away.; 217 ; 218 Parameter values can be provided dynamically using `TFormula::EvalPar`; 219 instead of `TFormula::Eval`. In this way parameters can be used identically; 220 to variables. See below for an example that uses only parameters to model a; 221 function.; 222 ; 223 ```; 224 Int_t params[2] = {1, 2}; // {vel_x, vel_y}; 225 TFormula tf ("""", ""[vel_x]/sqrt(([vel_x + vel_y])**2)"");; 226 ; 227 tf.EvalPar(nullptr, params);; 228 ```; 229 ; 230 ### A note on operators; 231 ; 232 All operators of C/C++ are allowed in a TFormula with a few caveats.; 233 ; 234 The operators `|`, `&`, `%` can be used but will raise an error if used in; 235 conjunction with a variable or a parameter. Variables and parameters are treated; 236 as doubles internally for which these operators are not defined.; 237 This means the following command will run successfully; 238 ```root -l -q -e TFormula("""", ""x+(10%3)"").Eval(0)```; 239 but not; 240 ```root -l -q -e TFormula("""", ""x%10"").Eval(0)```.; 241 ; 242 The operator `^` is defined to mean exponentiation instead of the C/C++; 243 interpretation xor. `**` is added, also meaning exponentiation.; 244 ; 245 The opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:8601,variab,variables,8601,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"and combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. Key: Action:. Up Move cursor up.; Shift+Up Move cursor up and extend selection.; Down Move cursor down.; Shift+Down Move cursor down and extend selection.; Left Move cursor left.; Shift+Left Move cursor left and extend selection.; Right Move cursor right.; Shift+Right Move cursor right and extend selection.; Home Move cursor to begin of line.; Shift+Home Move cursor to begin of line and extend selection.; Ctrl+Home Move cursor to top of page.; End Move cursor to end of line.; Shift+End Move cursor to end of line and extend selection.; Ctrl+End Move cursor to end of page.; PgUp Move cursor up one page.; Shift+PgUp Move cursor up one page and extend selection.; PgDn Move cursor down one page.; Shift+PgDn Move cursor down one page and extend selection.; Delete Delete character after cursor, or text selection.; BackSpace Delete character before cursor, or text selection.; Ctrl+B Move cursor left.; Ctrl+D Delete character after cursor, or text selection.; Ctrl+E Move cursor to end of line.; Ctrl+H Delete character before cursor, or text selection.; Ctrl+K Delete characters from current position to the; end of line.; Ctrl+U Delete current line. /*. */. Function Members (Methods); public:. TGTextEditor(const char* filename = 0, const TGWindow* p = 0, UInt_t w = 900, UInt_t h = 600); TGTextEditor(TMacro* macro, const TGWindow* p = 0, UInt_t w = 0, UInt_t h = 0); virtual~TGTextEditor(); voidAbout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); voidAddLine(const char* string); voidAddLineFast(const char* string); voidAddText(TGText* text); virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTextEditor.html:4253,extend,extend,4253,root/html528/TGTextEditor.html,https://root.cern,https://root.cern/root/html528/TGTextEditor.html,6,['extend'],['extend']
Modifiability,"and combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. Key: Action:. Up Move cursor up.; Shift+Up Move cursor up and extend selection.; Down Move cursor down.; Shift+Down Move cursor down and extend selection.; Left Move cursor left.; Shift+Left Move cursor left and extend selection.; Right Move cursor right.; Shift+Right Move cursor right and extend selection.; Home Move cursor to begin of line.; Shift+Home Move cursor to begin of line and extend selection.; Ctrl+Home Move cursor to top of page.; End Move cursor to end of line.; Shift+End Move cursor to end of line and extend selection.; Ctrl+End Move cursor to end of page.; PgUp Move cursor up one page.; Shift+PgUp Move cursor up one page and extend selection.; PgDn Move cursor down one page.; Shift+PgDn Move cursor down one page and extend selection.; Delete Delete character after cursor, or text selection.; BackSpace Delete character before cursor, or text selection.; Ctrl+B Move cursor left.; Ctrl+D Delete character after cursor, or text selection.; Ctrl+E Move cursor to end of line.; Ctrl+H Delete character before cursor, or text selection.; Ctrl+K Delete characters from current position to the; end of line.; Ctrl+U Delete current line. /*. */. Function Members (Methods); public:. virtual~TGTextEditor(); voidAbout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); voidAddLine(const char* string); voidAddLineFast(const char* string); voidAddText(TGText* text); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual Bool_tTGMainFrame::BindKey(const TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTextEditor.html:4253,extend,extend,4253,root/html602/TGTextEditor.html,https://root.cern,https://root.cern/root/html602/TGTextEditor.html,4,['extend'],['extend']
Modifiability,"and controlled user data.; Bool_tfValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloViz(TEveCaloData* data = 0, const char* n = ""TEveCaloViz"", const char* t = """"); Constructor. ~TEveCaloViz(); Destructor. Float_t GetDataSliceThreshold(Int_t slice) const; Get threshold for given slice. TEveElement* ForwardSelection(); Management of selection state and ownership of selected cell list; is done in TEveCaloData. This is a reason selection is forwared to it. TEveElement* ForwardEdit(); Management of selection state and ownership of selected cell list; is done in TEveCaloData. We still want GUI editor to disply; concrete calo-viz object. void SetDataSliceThreshold(Int_t slice, Float_t val); Set threshold for given slice. Color_t GetDataSliceColor(Int_t slice) const; Get slice color from data. void SetDataSliceColor(Int_t slice, Color_t col); Set slice color in data. void SetEta(Float_t l, Float_t u); Set eta range. void SetPlotEt(Bool_t x); Set E/Et plot. Float_t GetMaxVal() const. void SetPhiWithRng(Float_t x, Float",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCaloViz.html:23566,Inherit,Inheritance,23566,root/html602/TEveCaloViz.html,https://root.cern,https://root.cern/root/html602/TEveCaloViz.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"and enhanced spectrum (red line) using Cosine transform (channels 0-1024; were multiplied by 2) ;  ; Script:;  ; // Example to illustrate; Enhance function (class TSpectrumTransform).; // To execute this example,; do; // root > .x Enhance.C;  ; void Enhance() {; �� Int_t i;; �� Double_t nbins =; 4096;; �� Double_t xmin� =; 0;; �� Double_t xmax� =; (Double_t)nbins;; �� Double_t * source = new Double_t[nbins];; �� Double_t * dest = new; Double_t[nbins];�� ; �� TH1F *h = new; TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; �� TH1F *d = new; TH1F(""d"","""",nbins,xmin,xmax);�������� ; �� TFile *f = new; TFile(""spectra\\TSpectrum.root"");; �� h=(TH1F*); f->Get(""transform1;1"");�� ; �� for (i = 0; i < nbins;; i++) source[i]=h->GetBinContent(i + 1);���� ; �� TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; �� if (!Transform1); Transform1 = new; TCanvas(""Transform"",""Transform1"",10,10,1000,700);; ��; h->SetAxisRange(700,1024);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This functio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrumTransform.html:22884,Enhance,Enhance,22884,root/html602/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html602/TSpectrumTransform.html,2,['Enhance'],['Enhance']
Modifiability,and executed from a popup menu. ;  ; TListOfFunctionTemplates * fFuncTemplate;  List of global function templates. ;  ; TCollection * fFunctions;  List of analytic functions. ;  ; TSeqCollection * fGeometries;  List of geometries. ;  ; TString fGitBranch;  Git branch. ;  ; TString fGitCommit;  Git commit SHA1 of built. ;  ; TString fGitDate;  Date and time when make was run. ;  ; TListOfFunctions * fGlobalFunctions;  List of global functions. ;  ; TListOfDataMembers * fGlobals;  List of global variables. ;  ; TInterpreter * fInterpreter;  Command interpreter. ;  ; Bool_t fInterrupt;  True if macro should be interrupted. ;  ; Bool_t fIsWebDisplay;  True if session uses web widgets. ;  ; Bool_t fIsWebDisplayBatch;  True if web widgets are not displayed. ;  ; TSeqCollection * fMappedFiles;  List of memory mapped files. ;  ; TSeqCollection * fMessageHandlers;  List of message handlers. ;  ; Bool_t fMustClean;  True if object destructor scans canvases. ;  ; TPluginManager * fPluginManager;  Keeps track of plugin library handlers. ;  ; const TObject * fPrimitive;  Currently selected primitive. ;  ; TSeqCollection * fProofs;  List of proof sessions. ;  ; TFolder * fRootFolder;  top level folder //root ;  ; TSeqCollection * fSecContexts;  List of security contexts (TSecContext) ;  ; TVirtualPad * fSelectPad;  Currently selected pad. ;  ; TSeqCollection * fSockets;  List of network sockets. ;  ; TSeqCollection * fSpecials;  List of special objects. ;  ; TSeqCollection * fStreamerInfo;  List of active StreamerInfo classes. ;  ; TSeqCollection * fStyles;  List of styles. ;  ; TSeqCollection * fTasks;  List of tasks. ;  ; Int_t fTimer;  Timer flag. ;  ; TCollection * fTypes;  List of data types definition. ;  ; TProcessUUID * fUUIDs;  Pointer to TProcessID managing TUUIDs. ;  ; TString fVersion;  ROOT version (from CMZ VERSQQ) ex 0.05/01. ;  ; Int_t fVersionCode;  ROOT version code as used in RVersion.h. ;  ; Int_t fVersionDate;  Date of ROOT version (ex 951226) ;  ; Int_t fVers,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:36457,plugin,plugin,36457,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,2,['plugin'],['plugin']
Modifiability,"and fEyH arrays with the sorted values. ;  ;  Protected Member Functions inherited from TGraph; Double_t ** AllocateArrays (Int_t Narrays, Int_t arraySize);  Allocate arrays. ;  ; Bool_t CtorAllocate ();  In constructors set fNpoints than call this method. ;  ; Double_t ** ExpandAndCopy (Int_t size, Int_t iend);  if size > fMaxSize allocate new arrays of 2*size points and copy iend first points. ;  ; TString SaveArray (std::ostream &out, const char *suffix, Int_t frameNumber, Double_t *arr);  Save array as C++ code Returns name of created array. ;  ; void SaveHistogramAndFunctions (std::ostream &out, const char *varname, Int_t &frameNumber, Option_t *option);  Save histogram and list of functions of TGraph as C++ statement Used in all TGraph-derived classes. ;  ; Double_t ** ShrinkAndCopy (Int_t size, Int_t iend);  if size*2 <= fMaxSize allocate new arrays of size points, copy points [0,oend). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< TAttFill > fAttFill;  The AttFill attributes of the different errors. ;  ; std::vector< TAttLine > fAttLine;  The AttLine attributes of the different errors. ;  ; Double_t * fExH;  [fNpoints] array of X high errors ;  ; Double_t * fExL;  [fNpoints] array of X low errors ;  ; std::vector< TArrayD > fEyH;  Two dimensional array of Y high errors. ;  ; Double_t * fEyHSum = nullptr;  ! Array of summed Y high errors for fitting ;  ; std::vector< TArrayD > fEyL;  Two dimensional array of Y low errors. ;  ; Double_t * fEyLSum = nullptr;  ! Array of summed Y low errors for fitting ;  ; Int_t fNYErrors;  The amount of different y-errors. ;  ; Int_t fSumErrorsMode;  How y errors are summed: kOnlyFirst = Only First; kSquareSum = Squared Sum; kSum = Absolute Addition. ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Point",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:41930,inherit,inherited,41930,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['inherit'],['inherited']
Modifiability,"and fStatus. void PaintClass(Int_t iclass, Float_t xleft, Float_t y); Paint one class level. void SaveAs(const char* filename = """", Option_t* option = """") const; save current configuration in a Root file; if filename is blank, the name of the file will be the current objectname.root; all the current settings are preserved; the Root file produced can be looked at by a another Root session; with no access to the original classes.; By default a message is printed. Specify option ""Q"" to remove the message. void ScanClasses(Int_t iclass); Select all classes used by/referenced/referencing the class number iclass; and build the list of these classes. void SetClasses(const char* classes, Option_t* option = ""ID""); Set the list of classes for which the hierarchy is to be drawn; See Paint for the syntax. void SetLabelDx(Float_t labeldx = 0.15); Set the size along x of the TPavellabel showing the class name. void SetYoffset(Float_t offset = 0); Set the offset at the top of the picture; The default offset is computed automatically taking into account; classes not inheriting from TObject. void ShowClassesUsedBy(const char* classes); mark classes used by the list of classes in classes. void ShowClassesUsing(const char* classes); mark classes using any class in the list of classes in classes. void ShowCod(); Draw the Code References relationships. void ShowHas(); Draw the ""Has a"" relationships. void ShowLinks(Option_t* option = ""HMR""); Set link options in the ClassTree object. ""C"" show References from code; ""H"" show Has a relations; ""M"" show Multiple Inheritance; ""R"" show References from data members. void ShowMul(); Draw the Multiple inheritance relationships. void ShowRef(); Draw the References relationships (other than inheritance or composition). void Streamer(TBuffer& ); Stream an object of class TClassTree.; the status of the object is saved and can be replayed in a subsequent session. TClassTree(). const char * GetClasses() const; {return fClasses.Data();}. const char * GetS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TClassTree.html:14012,inherit,inheriting,14012,root/html534/TClassTree.html,https://root.cern,https://root.cern/root/html534/TClassTree.html,2,['inherit'],['inheriting']
Modifiability,"and fStatus. void PaintClass(Int_t iclass, Float_t xleft, Float_t y); Paint one class level. void SaveAs(const char* filename = """", Option_t* option = """") const; save current configuration in a Root file; if filename is blank, the name of the file will be the current objectname.root; all the current settings are preserved; the Root file produced can be looked at by a another Root session; with no access to the original classes.; By default a message is printed. Specify option ""Q"" to remove the message. void ScanClasses(Int_t iclass); Select all classes used by/referenced/referencing the class number iclass; and build the list of these classes. void SetClasses(const char* classes, Option_t* option = ""ID""); Set the list of classes for which the hierarchy is to be drawn; See Paint for the syntax. void SetLabelDx(Float_t labeldx = 0.15); Set the size along x of the TPavellabel showing the class name. void SetYoffset(Float_t offset = 0); Set the offset at the top of the picture; The default offset is computed automatically taking into account; classes not inheriting from TObject. void ShowClassesUsedBy(const char* classes); mark classes used by the list of classes in classes. void ShowClassesUsing(const char* classes); mark classes using any class in the list of classes in classes. void ShowCod(); Draw the Code References relationships. void ShowHas(); Draw the ""Has a"" relationships. void ShowLinks(Option_t* option = ""HMR""); Set link options in the ClassTree object. ""C"" show References from code; ""H"" show Has a relations; ""M"" show Multiple Inheritance; ""R"" show References from data members. void ShowMul(); Draw the Multiple inheritance relationships. void ShowRef(); Draw the References relationships (other than inheritance or composition). void Streamer(TBuffer& b); Stream an object of class TClassTree.; the status of the object is saved and can be replayed in a subsequent session. TClassTree(). const char * GetClasses() const; {return fClasses.Data();}. const char * Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClassTree.html:13938,inherit,inheriting,13938,root/html526/TClassTree.html,https://root.cern,https://root.cern/root/html526/TClassTree.html,5,['inherit'],['inheriting']
Modifiability,"and height), positions (x and y), insets and rectangles.; They are trivial and their members are public. Function Members (Methods); public:. virtual~TGRectangle(); Int_tArea() const; static TClass*Class(); Bool_tContains(const TGPosition& p) const; Bool_tContains(Int_t px, Int_t py) const; voidEmpty(); Bool_tIntersects(const TGRectangle& r) const; virtual TClass*IsA() const; Bool_tIsEmpty() const; TGPositionLeftTop() const; voidMerge(const TGRectangle& r); TGRectangle&operator=(const TGRectangle&); TGPositionRightBottom() const; virtual voidShowMembers(TMemberInspector& insp) const; TGDimensionSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TGRectangle(); TGRectangle(const TGRectangle& r); TGRectangle(const TGPosition& p, const TGDimension& d); TGRectangle(Int_t rx, Int_t ry, UInt_t rw, UInt_t rh). Data Members; public:. UInt_tfHheight; UInt_tfWwidth; Int_tfXx position; Int_tfYy position. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Merge(const TGRectangle& r); Merge parameters. TGRectangle(); constructors. { Empty(); }. TGRectangle(Int_t rx, Int_t ry, UInt_t rw, UInt_t rh); { }. TGRectangle(const TGPosition& p, const TGDimension& d); { }. TGRectangle(const TGRectangle& r); { }. virtual ~TGRectangle(); { }. Bool_t Contains(Int_t px, Int_t py) const; methods. Bool_t Contains(const TGPosition& p) const. Bool_t Intersects(const TGRectangle& r) const. Int_t Area() const; { return (fW * fH); }. TGDimension Size() const; { return TGDimension(fW, fH); }. TGPosition LeftTop() const; { return TGPosition(fX, fY); }. TGPosition RightBottom() const; { return TGPosition(fX + (Int_t) fW - 1, fY + (Int_t) fH - 1); }. void Empty(); { fX = fY = 0; fW = fH = 0; }. Bool_t IsEmpty() const; { return ((fW == 0) && (fH == 0)); }. » Author: Fons Rademakers 02/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGRectangle.html:1383,Inherit,Inheritance,1383,root/html602/TGRectangle.html,https://root.cern,https://root.cern/root/html602/TGRectangle.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"and histogramming are implemented and ready to use and customize.; More reliable and robust code - the code inherited from a framework has already been tested and integrated with the rest of the framework.; More consistent and modular code - the code reuse provides consistency and common capabilities between programs, no matter who writes them. Frameworks make it easier to break programs into smaller pieces.; More focus on areas of expertise - users can concentrate on their particular problem domain. They do not have to be experts at writing user interfaces, graphics, or networking to use the frameworks that provide those services. 1.4.2 Why Object-Oriented?; Object-Oriented Programming offers considerable benefits compared to Procedure-Oriented Programming:. Encapsulation enforces data abstraction and increases opportunity for reuse.; Sub classing and inheritance make it possible to extend and modify objects.; Class hierarchies and containment containment hierarchies provide a flexible mechanism for modeling real-world objects and the relationships among them.; Complexity is reduced because there is little growth of the global state, the state is contained within each object, rather than scattered through the program in the form of global variables.; Objects may come and go, but the basic structure of the program remains relatively static, increases opportunity for reuse of design. 1.5 Installing ROOT. To install ROOT you have the choice to download the binaries or the source. The source is quicker to transfer since it is only ~22 MB, but you will need to compile and link it. The binaries compiled with no debug information range from ~35 MB to ~45 MB depending on the target platform.; The installation and building of ROOT is described in Appendix A: Install and Build ROOT. You can download the binaries, or the source. The GNU g++ compiler on most UNIX platforms can compile ROOT.; Before downloading a binary version make sure your machine contains the right run-time",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:14029,flexible,flexible,14029,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['flexible'],['flexible']
Modifiability,"and on the objects used for the parameters ;  CMPIProcess;  CMPITerminate;  CNegativeG2LineSearchIn case that one of the components of the second derivative g2 calculated by the numerical Gradient calculator is negative, a 1dim line search in the direction of that component is done in order to find a better position where g2 is again positive ;  CNumerical2PGradientCalculatorClass performing the numerical gradient calculation ;  CParametricFunctionFunction which has parameters ;  CScanBuilderPerforms a minimization using the simplex method of Nelder and Mead (ref ;  CScanMinimizerClass implementing the required methods for a minimization using SCAN API is provided in the upper ROOT::Minuit2::ModularFunctionMinimizer class ;  CSimplexBuilderPerforms a minimization using the simplex method of Nelder and Mead (ref ;  CSimplexMinimizerClass implementing the required methods for a minimization using Simplex ;  CSimplexParametersClass describing the simplex set of points (f(x), x ) which evolve during the minimization iteration process ;  CSimplexSeedGeneratorGenerate Simplex starting point (state) ;  CSinParameterTransformationClass for the transformation for double-limited parameter Using a sin function one goes from a double-limited parameter range to an unlimited one ;  CSqrtLowParameterTransformationTransformation from external to internal Parameter based on sqrt(1 + x**2) ;  CSqrtUpParameterTransformationTransformation from external to internal Parameter based on sqrt(1 + x**2) ;  CStackAllocatorStackAllocator controls the memory allocation/deallocation of Minuit ;  CStackAllocatorHolder;  CStackError;  CStackOverflowDefine stack allocator symbol ;  Csym;  CVariableMetricBuilderBuild (find) function minimum using the Variable Metric method (MIGRAD) ;  CVariableMetricEDMEstimator;  CVariableMetricMinimizerInstantiates the SeedGenerator and MinimumBuilder for Variable Metric Minimization method ;  Cvec;  CVectorOuterProduct;  ►NQuartz;  CCGAAStateGuard;  CCGStateGuard;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/annotated.html:70359,evolve,evolve,70359,doc/v612/annotated.html,https://root.cern,https://root.cern/doc/v612/annotated.html,1,['evolve'],['evolve']
Modifiability,"and on the objects used for the parameters ;  CMPIProcess;  CMPITerminate;  CNegativeG2LineSearchIn case that one of the components of the second derivative g2 calculated by the numerical Gradient calculator is negative, a 1dim line search in the direction of that component is done in order to find a better position where g2 is again positive ;  CNumerical2PGradientCalculatorClass performing the numerical gradient calculation ;  CParametricFunctionFunction which has parameters ;  CScanBuilderPerforms a minimization using the simplex method of Nelder and Mead (ref ;  CScanMinimizerClass implementing the required methods for a minimization using SCAN API is provided in the upper ROOT::Minuit2::ModularFunctionMinimizer class ;  CSimplexBuilderPerforms a minimization using the simplex method of Nelder and Mead (ref ;  CSimplexMinimizerClass implementing the required methods for a minimization using Simplex ;  CSimplexParametersClass describing the simplex set of points (f(x), x ) which evolve during the minimization iteration process ;  CSimplexSeedGeneratorGenerate Simplex starting point (state) ;  CSinParameterTransformationClass for the transformation for double-limited parameter Using a sin function one goes from a double-limited parameter range to an unlimited one ;  CSqrtLowParameterTransformationTransformation from external to internal Parameter based on sqrt(1 + x**2) ;  CSqrtUpParameterTransformationTransformation from external to internal Parameter based on sqrt(1 + x**2) ;  CStackAllocatorStackAllocator controls the memory allocation/deallocation of Minuit ;  CStackAllocatorHolder;  CStackError;  CStackOverflowDefine stack allocator symbol ;  Csym;  CVariableMetricBuilderBuild (find) function minimum using the Variable Metric method (MIGRAD) Two possible error updators can be choosen ;  CVariableMetricEDMEstimator;  ►CVariableMetricMinimizerInstantiates the SeedGenerator and MinimumBuilder for Variable Metric Minimization method ;  CBFGSType;  Cvec;  CVectorOu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/annotated.html:71609,evolve,evolve,71609,doc/v614/annotated.html,https://root.cern,https://root.cern/doc/v614/annotated.html,3,['evolve'],['evolve']
Modifiability,"and optionally the error between the limits specified by the bin n...Definition TH1.cxx:7977; TH1::fTsumwx2Double_t fTsumwx2Total Sum of weight*X*X.Definition TH1.h:99; TH1::GetStdDevvirtual Double_t GetStdDev(Int_t axis=1) constReturns the Standard Deviation (Sigma).Definition TH1.cxx:7607; TH1::GetNbinsYvirtual Int_t GetNbinsY() constDefinition TH1.h:298; TH1::GetBinErrorvirtual Double_t GetBinError(Int_t bin) constReturn value of error associated to bin number bin.Definition TH1.cxx:9063; TH1::GetMeanvirtual Double_t GetMean(Int_t axis=1) constFor axis = 1,2 or 3 returns the mean value of the histogram along X,Y or Z axis.Definition TH1.cxx:7535; TH1::GetDimensionvirtual Int_t GetDimension() constDefinition TH1.h:283; TH1::Streamervoid Streamer(TBuffer &) overrideStream a class object.Definition TH1.cxx:6933; TH1::kIsNotW@ kIsNotWHistogram is forced to be not weighted even when the histogram is filled with weighted.Definition TH1.h:172; TH1::CanExtendAllAxesvirtual Bool_t CanExtendAllAxes() constReturns true if all axes are extendable.Definition TH1.cxx:6636; TH1::Resetvirtual void Reset(Option_t *option="""")Reset this histogram: contents, errors, etc.Definition TH1.cxx:7103; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::GetNcellsvirtual Int_t GetNcells() constDefinition TH1.h:300; TH1::PutStatsvirtual void PutStats(Double_t *stats)Replace current statistics with the values in array stats.Definition TH1.cxx:7884; TH1::GetPainterTVirtualHistPainter * GetPainter(Option_t *option="""")Return pointer to painter.Definition TH1.cxx:4511; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TH1::GetBinvirtual Int_t GetBin(Int_t binx, Int_t biny=0, Int_t binz=0) constReturn Global bin number corresponding to binx,y,z.Definition TH1.cxx:4961; TH1::GetNbinsXvirtual Int_t GetNbinsX() constDefinition TH1.h:297; TH1::Addvirtual Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:174519,extend,extendable,174519,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['extend'],['extendable']
Modifiability,"and pad itself. ;  ; void CloseToolTip (TObject *tip) override;  Hide tool tip. ;  ; void CopyPixmap () override;  Copy the pixmap of the pad to the canvas. ;  ; void CopyPixmaps () override;  Copy the sub-pixmaps of the pad to the canvas. ;  ; TObject * CreateToolTip (const TBox *b, const char *text, Long_t delayms) override;  Create a tool tip and return its pointer. ;  ; void DeleteExec (const char *name) override;  Remove TExec name from the list of Execs. ;  ; void DeleteToolTip (TObject *tip) override;  Delete tool tip object. ;  ; void Divide (Int_t nx=1, Int_t ny=1, Float_t xmargin=0.01, Float_t ymargin=0.01, Int_t color=0) override;  Automatic pad generation by division. ;  ; virtual void DivideSquare (Int_t n, Float_t xmargin=0.01, Float_t ymargin=0.01, Int_t color=0);  ""n"" is the total number of sub-pads. ;  ; void Draw (Option_t *option="""") override;  Draw Pad in Current pad (re-parent pad if necessary). ;  ; void DrawClassObject (const TObject *obj, Option_t *option="""") override;  Draw class inheritance tree of the class to which obj belongs. ;  ; void DrawCollideGrid ();  This method draws the collide grid on top of the canvas. ;  ; virtual void DrawCrosshair ();  Function called to draw a crosshair in the canvas. ;  ; TH1F * DrawFrame (Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, const char *title="""") override;  Draw an empty pad frame with X and Y axis. ;  ; virtual void EventPave ();  ; void ExecuteEventAxis (Int_t event, Int_t px, Int_t py, TAxis *axis) override;  Execute action corresponding to one event for a TAxis object (called by TAxis::ExecuteEvent.) This member function is called when an axis is clicked with the locator. ;  ; TObject * FindObject (const char *name) const override;  Search if object named name is inside this pad or in pads inside this pad. ;  ; TObject * FindObject (const TObject *obj) const override;  Search if obj is in pad or in pads inside this pad. ;  ; Double_t GetAbsHNDC () const override;  ; Double_t Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:15531,inherit,inheritance,15531,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,4,['inherit'],['inheritance']
Modifiability,"and source files, located in the inc and src subdirectories. To see what classes are in a library, you can check the <library>/inc directory for the list of class definitions. For example, the physics library libPhysics.so contains these class definitions:; > ls -m $ROOTSYS/math/physics/inc/; LinkDef.h, TFeldmanCousins.h, TGenPhaseSpace.h, TLorentzRotation.h,; TLorentzVector.h, TQuaternion.h, TRobustEstimator.h, TRolke.h,; TRotation.h, TVector2.h, TVector3.h; 1.7 How to Find More Information; website The ROOT web site has up to date documentation. The ROOT source code automatically generates this documentation, so each class is explicitly documented on its own web page, which is always up to date with the latest official release of ROOT.; The ROOT Reference Guide web pages can be found at class index reference guide https://root.cern/doc/master/classes.html. Each page contains a class description, and an explanation of each method. It shows the class inheritance tree and lets you jump to the parent class page by clicking on the class name. If you want more details, you can even see the source. There is a help page available in the little box on the upper right hand side of each class documentation page. You can see on the next page what a typical class documentation web page looks like. The ROOT web site also contains in addition to this Reference Guide, “How To’s”, a list of publications and example applications.; 1.7.1 Class Reference Guide; The top of any class reference page lets you jump to different parts of the documentation. The first line links to the class index and the index for the current module (a group of classes, often a library). The second line links to the ROOT homepage and the class overviews. The third line links the source information - a HTML version of the source and header file as well as the CVS (the source management system used for the ROOT development) information of the files. The last line links the different parts of the current pages",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:28788,inherit,inheritance,28788,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inheritance']
Modifiability,"and spread. void FitCoefficients(). Fit the coefficients for the rule ensemble. void CalcImportance(); calculates the importance of each rule. Double_t EvalEvent(const TMVA::Event& e); evaluate single event. void SetTrainingEvents(const vector<TMVA::Event*>& el); set the training events randomly. void GetRndmSampleEvents(vector<const TMVA::Event*>& evevec, UInt_t nevents); draw a random subsample of the training events without replacement. void NormVisHists(vector<TH2F*>& hlist); normalize rule importance hists. if all weights are positive, the scale will be 1/maxweight; if minimum weight < 0, then the scale will be 1/max(maxweight,abs(minweight)). void FillCut(TH2F* h2, const TMVA::Rule* rule, Int_t vind); Fill cut. void FillLin(TH2F* h2, Int_t vind); fill lin. void FillCorr(TH2F* h2, const TMVA::Rule* rule, Int_t v1, Int_t v2); fill rule correlation between vx and vy, weighted with either the importance or the coefficient. void FillVisHistCut(const TMVA::Rule* rule, vector<TH2F*>& hlist); help routine to MakeVisHists() - fills for all variables. void FillVisHistCorr(const TMVA::Rule* rule, vector<TH2F*>& hlist); help routine to MakeVisHists() - fills for all correlation plots. Bool_t GetCorrVars(TString& title, TString& var1, TString& var2); get first and second variables from title. void MakeVisHists(); this will create histograms visualizing the rule ensemble. void MakeDebugHists(); this will create a histograms intended rather for debugging or for the curious user. RuleFit(const TMVA::MethodBase* rfbase); main constructor. void ReshuffleEvents(); { std::random_shuffle(fTrainingEventsRndm.begin(),fTrainingEventsRndm.end()); }. void SetModelLinear(); set usage of linear term. { fRuleEnsemble.SetModelLinear(); }. void SetModelRules(); set usage of rules. { fRuleEnsemble.SetModelRules(); }. void SetModelFull(); set usage of linear term. { fRuleEnsemble.SetModelFull(); }. void SetImportanceCut(Double_t minimp = 0); set minimum importance allowed. { fRuleEnsemble.SetI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__RuleFit.html:6132,variab,variables,6132,root/html528/TMVA__RuleFit.html,https://root.cern,https://root.cern/root/html528/TMVA__RuleFit.html,4,['variab'],['variables']
Modifiability,"and testing events: 10000; : ; <HEADER> DataSetInfo : Correlation matrix (Regression):; : ------------------------; : var1 var2; : var1: +1.000 +0.002; : var2: +0.002 +1.000; : ------------------------; <HEADER> DataSetFactory : [datasetcvreg] : ; : ; : ; : ; : ========================================; : ========================================; : ; <HEADER> Factory : Booking method: BDTG_fold1; : ; : the option NegWeightTreatment=InverseBoostNegWeights does not exist for BoostType=Grad; : --> change to new default NegWeightTreatment=Pray; : Regression Loss Function: Huber; : Training 500 Decision Trees ... patience please; : Elapsed time for training with 4999 events: 1.31 sec ; : Dataset[datasetcvreg] : Create results for training; : Dataset[datasetcvreg] : Evaluation of BDTG_fold1 on training sample; : Dataset[datasetcvreg] : Elapsed time for evaluation of 4999 events: 0.21 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; : Creating xml weight file: datasetcvreg/weights/TMVACrossValidationRegression_BDTG_fold1.weights.xml; <HEADER> Factory : Test all methods; <HEADER> Factory : Test method: BDTG_fold1 for Regression performance; : ; : Dataset[datasetcvreg] : Create results for testing; : Dataset[datasetcvreg] : Evaluation of BDTG_fold1 on testing sample; : Dataset[datasetcvreg] : Elapsed time for evaluation of 5000 events: 0.214 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; <HEADER> Factory : Evaluate all methods; : Evaluate regression method: BDTG_fold1; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 5000 events: 0.213 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 4999 events: 0.21 sec ; : ; : Evaluation results ranked by smallest RMS on test sample:; : (""Bias"" quotes the mean devia",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html:3958,variab,variable,3958,doc/master/TMVACrossValidationRegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html,1,['variab'],['variable']
Modifiability,"and use the ROOT::Math::Minimizer interface to perform the minimization of the objective function. More information about the function interface and the multi-dimensional minimization in ROOT is given in the Mathematical Library chapter.; Here we present a detailed description of the ROOT::Fit classes and how to use them. Using these classes instead of the interface provided directly in the ROOT data objects, like TH1::Fit allow are more fine control to configure and customise the fits. For example, using these classes a combined fit of several histograms can be performed.; To understand how these class work, let’s go through a simple example, such as fitting an histogram.; When fitting an histogram, instead of using TH1::Fit we will show in the following hot wo use the ROOT::Fit classes. We will show how to perform the following different type of fits with the histogram data: * a least square fit using the observed errors (Neyman chi-squared); * a least square fit using the expected errors from the function (Pearson chi-squared); * a binned likelihood fit; * an extended unbinned likelihood fits, if the histogram has been set to store in the buffer the original data used to fill it.; Let’s go through all the steps required for performing these fits using the ROOT::Fit::Fitter class. These steps are: 1. Create the input fit data object. 2. Create the input model function. 3. Configure the fit. 4. Perform the data fitting. 5. Examine the result.; 5.7.1 Creating the input fit data; We have two types of input data, binned data (class ROOT::Fit::BinData) used for least square (chi-square) fits of histograms or TGraph objects or un-binned data (class ROOT::Fit::UnBinData) used for fitting vectors of data points (e.g. from a TTree).; 5.7.1.1 Using Binned data; Let’s suppose we have an histogram, represented as a TH1 type object (it can be one or multi-dimensional). The following shows how to create and fill a ROOT:Fit::BinData object.; ROOT::Fit::DataOptions opt;; opt.fInt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:191018,extend,extended,191018,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['extend'],['extended']
Modifiability,"and vertical) combination of TPadLengths ;  CTPadPainterAbstract interface for object painting on the pad/canvas ;  CTPadUserAxisBaseBase class for user coordinates (e.g ;  ►CTUniWeakPtr;  CAccessorGives transparent access to the shared or unique pointer ;  ►CTVirtualCanvasPainterAbstract interface for painting a canvas ;  CGenerator;  ►CTAxisBaseHistogram axis base class ;  Cconst_iteratorRandom const_iterator through bins ;  ►CTAxisConfigObjects used to configure the different axis types ;  CGrow_tTag type signalling that an axis should be able to grow; used for calling the appropriate constructor ;  CTAxisEquidistantAxis with equidistant bin borders ;  CTAxisGrowAn axis that can extend its range, keeping the number of its bins unchanged ;  CTAxisIrregularAn axis with non-equidistant bins (also known as ""variable binning"") ;  CTAxisLabelsA TAxisGrow that has a label assigned to each bin and a bin width of 1 ;  CTAxisViewCommon view on a TAxis, no matter what its kind ;  CTBufferMergerTBufferMerger is a class to facilitate writing data in parallel from multiple threads, while writing to a single output file ;  CTBufferMergerFile;  CTCanvasA window's topmost TPad ;  ►CTDirectoryKey/value store of objects ;  CToContentType;  CTDirectoryTypeMismatchObjects of this class are thrown to signal that the value known under the given name ;  CTDirectoryUnknownKeyObjects of this class are thrown to signal that no key with that name exists ;  CTDrawableBase class for drawable entities: objects that can be painted on a TPad ;  CTDrawableBase;  ►CTFileA ROOT file ;  COptions_tOptions for TFile construction ;  CTFilePtrPoints to an object that stores or reads objects in ROOT's binary format ;  CTFitResult;  ►CTFrameHolds a user coordinate system with a palette ;  CDrawingOpts;  CTFunction;  CTFutureA TFuture class. It can wrap an std::future ;  CTHistHistogram class for histograms with DIMENSIONS dimensions, where each bin count is stored by a value of type PRECISION ;  CTHist< D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/annotated.html:18091,config,configure,18091,doc/v614/annotated.html,https://root.cern,https://root.cern/doc/v614/annotated.html,3,"['config', 'extend', 'variab']","['configure', 'extend', 'variable']"
Modifiability,"andard constructor for the H-Matrix method. MethodHMatrix(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. void Init( void ); default initialization called by all constructors. ~MethodHMatrix( void ); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); FDA can handle classification with 2 classes and regression with one regression-target. void DeclareOptions(); MethodHMatrix options: none (apart from those implemented in MethodBase). void ProcessOptions(); process user options. void Train( void ); computes H-matrices for signal and background samples. void ComputeCovariance(Bool_t , TMatrixD* ); compute covariance matrix. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns the H-matrix signal estimator. Double_t GetChi2(TMVA::Types::ESBType ); compute chi2-estimator for event according to type (signal/background). void AddWeightsXMLTo(void* parent) const; create XML description for HMatrix classification. void ReadWeightsFromXML(void* wghtnode); read weights from XML file. void ReadWeightsFromStream(istream& istr); read variable names and min/max; NOTE: the latter values are mandatory for the normalisation; in the reader application !!!. void MakeClassSpecific(ostream& , const TString& ) const; write Fisher-specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodHMatrix.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodHMatrix.html:18438,variab,variable,18438,root/html532/TMVA__MethodHMatrix.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodHMatrix.html,4,['variab'],"['variable', 'variables']"
Modifiability,"andard deviation than; does a single point.; The formula was taken from ""Engineering Statistics Handbook"" on site; http://www.itl.nist.gov/div898/handbook/eda/section3/eda3663.htm; Implementation by Anna Kreshuk.; Example:; TF1* fc = new TF1(""fc"", ""TMath::CauchyDist(x, [0], [1])"", -5, 5);; fc->SetParameters(0, 1);; fc->Draw();. Double_t ChisquareQuantile(Double_t p, Double_t ndf); Evaluate the quantiles of the chi-squared probability distribution function.; Algorithm AS 91 Appl. Statist. (1975) Vol.24, P.35; implemented by Anna Kreshuk.; Incorporates the suggested changes in AS R85 (vol.40(1), pp.233-5, 1991); Parameters:; p - the probability value, at which the quantile is computed; ndf - number of degrees of freedom. Double_t FDist(Double_t F, Double_t N, Double_t M); Computes the density function of F-distribution; (probability function, integral of density, is computed in FDistI). Parameters N and M stand for degrees of freedom of chi-squares; mentioned above parameter F is the actual variable x of the; density function p(x) and the point at which the density function; is calculated. About F distribution:; F-distribution arises in testing whether two random samples; have the same variance. It is the ratio of two chi-square; distributions, with N and M degrees of freedom respectively,; where each chi-square is first divided by it's number of degrees; of freedom.; Implementation by Anna Kreshuk. Double_t FDistI(Double_t F, Double_t N, Double_t M); Calculates the cumulative distribution function of F-distribution,; this function occurs in the statistical test of whether two observed; samples have the same variance. For this test a certain statistic F,; the ratio of observed dispersion of the first sample to that of the; second sample, is calculated. N and M stand for numbers of degrees; of freedom in the samples 1-FDistI() is the significance level at; which the hypothesis ""1 has smaller variance than 2"" can be rejected.; A small numerical value of 1 - FDistI() impl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMath.html:30371,variab,variable,30371,root/html528/TMath.html,https://root.cern,https://root.cern/root/html528/TMath.html,10,['variab'],['variable']
Modifiability,"andard is required. Usage of g++ >= 5 or clang >= 3.4 is recommended.; Relevant cmake variables; The CMAKE_CXX_STANDARD cmake variables must be set to at least 14.; Building from source would look similar to this:; $ mkdir root7_build; $ cd root7_build; $ cmake -DCMAKE_CXX_STANDARD=14 path/to/root/source; $ cmake --build . -- -j4. Examples; See the relevant tutorials, for instance for drawing and styling the new histograms.; The new interfaces are not about shortening your code - but about robustness. Here are a few examples of what can go wrong with the ROOT6 interfaces:; ROOT6 interfaces, showing what can go wrong.; #include ""TFile.h""#include ""TH2.h""#include ""TTreeReader.h""#include ""TTreeReaderArray.h""#include ""TTree.h"" // Another function. Who knows what it does in a month from now.void someOtherFunction(); void fill(TTree* tree) { // Create the file before so it can own the histograms. TFile* file = TFile::Open(""jetmuontag.root"", ""RECRAETE"");  // Create the histograms (cannot mix fixed and variable size bins) const double muonPtBins[] = {0., 1., 10., 100.}; // The axis titles might have been changed. Impossible to see. TH2* hMuPtTag = new TH2F(""hMuPtTag"", ""muon pT versus tag value;tag value;muon pT [GeV]"", 4, muonPtBins, 10, 0., 1.); TH1* hJetEt = new TH1F(""hJetEt"", ""jet ET versus tag value;jet ET [GeV];tag value"", 10, 0., 1000.);  // Set up reading from the TTree TTreeReader reader(tree); TTreeReaderArray<float> jetEt(reader, ""jet.ET""); TTreeReaderArray<float> muPt(reader, ""jet.lead_mu.pT""); TTreeReaderArray<float> tag(reader, ""jet.tag"");  // Fill the histograms while (reader.Next()) { for (int iJet = 0; iJet < jetEt.size(); ++iJet) { hMuPtTag->Fill(muPt[iJet], tag[iJet]); hJetEtTag->Fill(jetEt[iJet], tag[iJet]); } }  someOtherFunction();  // Store the result. Ideally using file->Write() but very few people do that. hMuPtTag->Write(); hJetEtTag->Write();  delete file; // but not the histograms!}; Here are the problems:. Constructing the TFile, ""RECRAETE"" is miss",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/root-7.html:3817,variab,variable,3817,d/root-7.html,https://root.cern,https://root.cern/d/root-7.html,1,['variab'],['variable']
Modifiability,"andard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  ; virtual void SetDepthLocal (Float_t d);  Base-class implementation – just sets fDepth. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Protected Attributes inherited from TEveCompound; Short_t fCompoundOpen;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompoundProjected.html:33750,inherit,inherited,33750,doc/master/classTEveCompoundProjected.html,https://root.cern,https://root.cern/doc/master/classTEveCompoundProjected.html,1,['inherit'],['inherited']
Modifiability,"andard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  ; virtual void SetDepthLocal (Float_t d);  Base-class implementation – just sets fDepth. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveElementListProjected.html:33004,inherit,inherited,33004,doc/master/classTEveElementListProjected.html,https://root.cern,https://root.cern/doc/master/classTEveElementListProjected.html,1,['inherit'],['inherited']
Modifiability,"andau(0,1);; 65 hprof3d->Fill(px,py,pz,pt,1);; 66 }; 67 hprof3d->Draw();; 68}; 69~~~~; 70 NOTE: A TProfile3D is drawn as it was a simple TH3; 71*/; 72 ; 73////////////////////////////////////////////////////////////////////////////////; 74/// Default constructor for Profile3D histograms.; 75 ; 76TProfile3D::TProfile3D(); 77{; 78 fTsumwt = fTsumwt2 = 0;; 79 fScaling = kFALSE;; 80 BuildOptions(0,0,"""");; 81}; 82 ; 83////////////////////////////////////////////////////////////////////////////////; 84/// Default destructor for Profile3D histograms.; 85 ; 86TProfile3D::~TProfile3D(); 87{; 88}; 89 ; 90////////////////////////////////////////////////////////////////////////////////; 91/// Normal Constructor for Profile histograms.; 92///; 93/// The first eleven parameters are similar to TH3D::TH3D.; 94/// All values of t are accepted at filling time.; 95/// To fill a profile3D histogram, one must use TProfile3D::Fill function.; 96///; 97/// Note that when filling the profile histogram the function Fill; 98/// checks if the variable t is between fTmin and fTmax.; 99/// If a minimum or maximum value is set for the T scale before filling,; 100/// then all values below tmin or above tmax will be discarded.; 101/// Setting the minimum or maximum value for the T scale before filling; 102/// has the same effect as calling the special TProfile3D constructor below; 103/// where tmin and tmax are specified.; 104///; 105/// H(I,J,K) is printed as the cell contents. The errors computed are s(I,J,K) if CHOPT='S'; 106/// (spread option), or e(I,J,K) if CHOPT=' ' (error on mean).; 107///; 108/// See TProfile3D::BuildOptions for explanation of parameters; 109///; 110/// see other constructors below with all possible combinations of; 111/// fix and variable bin size like in TH3D.; 112 ; 113TProfile3D::TProfile3D(const char *name,const char *title,Int_t nx,Double_t xlow,Double_t xup,Int_t ny,Double_t ylow,Double_t yup,Int_t nz, Double_t zlow,Double_t zup,Option_t *option); 114 : TH3D(name,tit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:3790,variab,variable,3790,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['variab'],['variable']
Modifiability,"andle appear logz-like ;  ; Double_t fMean;  Position of the mean. ;  ; Double_t fMedian;  Position of the median. ;  ; Double_t fMedianErr;  The size of the notch. ;  ; Long64_t fNDatapoints;  Number of Datapoints within this candle. ;  ; Long64_t fNDrawPoints;  max number of outliers or other point to be shown ;  ; int fNHistoPoints;  ; CandleOption fOption;  Setting the style of the candle. ;  ; TString fOptionStr;  String to draw the candle. ;  ; Double_t fPosCandleAxis;  x-pos for a vertical candle ;  ; TH1D * fProj {nullptr};  ; Double_t fWhiskerDown;  Position of the lower whisker end. ;  ; Double_t fWhiskerUp;  Position of the upper whisker end. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . #include <TCandle.h>. Inheritance diagram for TCandle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ CandleOption. enum TCandle::CandleOption : long. EnumeratorkNoOption ; kBox ; kMedianLine ; kMedianNotched ; kMedianCircle ; kMeanLine ; kMeanCircle ; kWhiskerAll ; kWhisker15 ; kAnchor ; kPointsOutliers ; kPointsAll ; kPointsAllScat ; kHistoLeft ; kHistoRight ; kHistoViolin ; kHistoZeroIndicator ; kHorizontal If this bit is not set it is vertical. . Definition at line 30 of file TCandle.h. Constructor & Destructor Documentation. ◆ TCandle() [1/5]. TCandle::TCandle ; (; ). TCandle default constructor. ; Definition at line 38 of file TCandle.cxx. ◆ TCandle() [2/5]. TCandle::TCandle ; (; const char * ; opt). TCandle constructor passing a draw-option. ; Definition at line 70",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCandle.html:11630,inherit,inherited,11630,doc/master/classTCandle.html,https://root.cern,https://root.cern/doc/master/classTCandle.html,1,['inherit'],['inherited']
Modifiability,"andleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tTGTextButton::HasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; virtual Bool_tIsDisabledAndSelected() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tIsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tIsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tIsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidTGTextButton::Layout(); static vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGRadioButton.html:12205,Inherit,InheritsFrom,12205,root/html532/TGRadioButton.html,https://root.cern,https://root.cern/root/html532/TGRadioButton.html,2,['Inherit'],['InheritsFrom']
Modifiability,"andleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tTGTextButton::HasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; virtual Bool_tIsDisabledAndSelected() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tIsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tIsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tIsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidTGTextButton::Layout(); virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGRadioButton.html:11691,Inherit,InheritsFrom,11691,root/html602/TGRadioButton.html,https://root.cern,https://root.cern/root/html602/TGRadioButton.html,2,['Inherit'],['InheritsFrom']
Modifiability,"andleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tTGTextButton::HasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; virtual Bool_tIsDisabledAndSelected() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tIsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGButton::IsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tIsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidTGTextButton::Layout();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGCheckButton.html:12205,Inherit,InheritsFrom,12205,root/html532/TGCheckButton.html,https://root.cern,https://root.cern/root/html532/TGCheckButton.html,4,['Inherit'],['InheritsFrom']
Modifiability,andler (protected). ;  ; void MakeZombie ();  . Protected Attributes; ROOT::R::TRFunctionImport asfactor;  ; ROOT::R::TRFunctionImport C50;  ; ROOT::R::TRFunctionImport C50Control;  ; UInt_t fControlBands;  ; Double_t fControlCF;  ; Bool_t fControlEarlyStopping;  ; Bool_t fControlFuzzyThreshold;  ; UInt_t fControlMinCases;  ; Bool_t fControlNoGlobalPruning;  ; Double_t fControlSample;  ; Int_t fControlSeed;  ; Bool_t fControlSubset;  ; Bool_t fControlWinnow;  ; ROOT::R::TRObject * fModel;  ; ROOT::R::TRObject fModelControl;  ; UInt_t fMvaCounter;  ; UInt_t fNTrials;  ; Bool_t fRules;  ; std::vector< TString > ListOfVariables;  ; ROOT::R::TRFunctionImport predict;  ;  Protected Attributes inherited from TMVA::RMethodBase; ROOT::R::TRDataFrame fDfSpectators;  ; ROOT::R::TRDataFrame fDfTest;  ; ROOT::R::TRDataFrame fDfTrain;  ; std::vector< std::string > fFactorTest;  ; std::vector< std::string > fFactorTrain;  ; TVectorD fWeightTest;  ; TVectorD fWeightTrain;  ; ROOT::R::TRInterface & r;  ;  Protected Attributes inherited from TMVA::MethodBase; Types::EAnalysisType fAnalysisType;  ; UInt_t fBackgroundClass;  ; bool fExitFromTraining = false;  ; std::vector< TString > * fInputVars;  ; IPythonInteractive * fInteractive = nullptr;  temporary dataset used when evaluating on a different data (used by MethodCategory::GetMvaValues) ;  ; UInt_t fIPyCurrentIter = 0;  ; UInt_t fIPyMaxIter = 0;  ; std::vector< Float_t > * fMulticlassReturnVal;  ; Int_t fNbins;  ; Int_t fNbinsH;  ; Int_t fNbinsMVAoutput;  ; Ranking * fRanking;  ; std::vector< Float_t > * fRegressionReturnVal;  ; Results * fResults;  ; UInt_t fSignalClass;  ; DataSet * fTmpData = nullptr;  temporary event when testing on a different DataSet than the own one ;  ; const Event * fTmpEvent;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Bool_t IsM,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodC50.html:24777,inherit,inherited,24777,doc/master/classTMVA_1_1MethodC50.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodC50.html,4,['inherit'],['inherited']
Modifiability,"andler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGraph * fGraph;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProofDraw; enum  { kWarn = (1ULL << ( 12 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TProofDraw.h>. Inheritance diagram for TProofDrawGraph:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofDraw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawGraph.html:13446,inherit,inherited,13446,doc/master/classTProofDrawGraph.html,https://root.cern,https://root.cern/doc/master/classTProofDrawGraph.html,2,['inherit'],['inherited']
Modifiability,"andler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static TGComboBox * BuildHistAddComboBox (TGFrame *parent, Int_t id);  Create Line/Bar combo box. ;  ; static TGComboBox * BuildHistCoordsComboBox (TGFrame *parent, Int_t id);  Create coordinate system type combo box. ;  ; static TGComboBox * BuildHistErrorComboBox (TGFrame *parent, Int_t id);  Create error type combo box. ;  ; static TGComboBox * BuildHistTypeComboBox (TGFrame *parent, Int_t id);  Create histogram type combo box. ;  ; static TGComboBox * BuildPercentComboBox (TGFrame *parent, Int_t id);  Create Percentage combo box for bar option. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; TGCompositeFrame * f10;  Contains the Bar Option Title. ;  ; TGCompositeFrame * f11;  Contains the Bar Width/Offset NumberEntries. ;  ; TGCompositeFrame * f12;  Contains fPercentCombo, fMakeHBar. ;  ; TGCompositeFrame * f15;  Contains outer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1Editor.html:31486,inherit,inherited,31486,doc/master/classTH1Editor.html,https://root.cern,https://root.cern/doc/master/classTH1Editor.html,1,['inherit'],['inherited']
Modifiability,"andler Class Reference. . Definition at line 72 of file TApplicationServer.cxx. Public Member Functions;  TASInterruptHandler (TApplicationServer *s);  ; Bool_t Notify () override;  Handle this interrupt. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASInterruptHandler.html:1213,inherit,inherited,1213,doc/master/classTASInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTASInterruptHandler.html,1,['inherit'],['inherited']
Modifiability,"andler Class Reference. . Definition at line 72 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteInterruptHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle urgent data. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:1235,inherit,inherited,1235,doc/master/classTProofServLiteInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html,1,['inherit'],['inherited']
Modifiability,andler.cxx;  TXProofMgr.cxx;  TXProofServ.cxx;  TXSlave.cxx;  TXSocket.cxx;  TXSocketHandler.cxx;  TXUnixSocket.cxx;  ► xrdinc;  ► Xrd;  XrdPoll.hh;  ► XrdClient;  XrdClientConn.hh;  XrdClientConnMgr.hh;  XrdClientInputBuffer.hh;  XrdClientLogConnection.hh;  XrdClientMessage.hh;  XrdClientPhyConnection.hh;  XrdClientReadCache.hh;  XrdClientSock.hh;  ► XrdSys;  XrdSysPriv.hh;  ► roofit;  ► histfactory;  ► inc;  ► RooStats;  ► HistFactory;  Asimov.h;  Channel.h;  ConfigParser.h;  Data.h;  EstimateSummary.h;  FlexibleInterpVar.h;  HistFactoryException.h;  HistFactoryModelUtils.h;  HistFactoryNavigation.h;  HistFactorySimultaneous.h;  HistoToWorkspaceFactory.h;  HistoToWorkspaceFactoryFast.h;  HistRef.h;  LinInterpVar.h;  MakeModelAndMeasurementsFast.h;  Measurement.h;  ParamHistFunc.h;  PiecewiseInterpolation.h;  PreprocessFunction.h;  RooBarlowBeestonLL.h;  Sample.h;  Systematics.h;  LinkDef.h;  ► src;  Asimov.cxx;  Channel.cxx;  ConfigParser.cxx;  Data.cxx;  EstimateSummary.cxx;  FlexibleInterpVar.cxx;  Helper.cxx;  Helper.h;  hist2workspace.cxx;  HistFactoryModelUtils.cxx;  HistFactoryNavigation.cxx;  HistFactorySimultaneous.cxx;  HistoToWorkspaceFactory.cxx;  HistoToWorkspaceFactoryFast.cxx;  HistRef.cxx;  LinInterpVar.cxx;  MakeModelAndMeasurements.cxx;  MakeModelAndMeasurementsFast.cxx;  Measurement.cxx;  ParamHistFunc.cxx;  PiecewiseInterpolation.cxx;  PreprocessFunction.cxx;  RooBarlowBeestonLL.cxx;  Sample.cxx;  Systematics.cxx;  ► roofit;  ► inc;  LinkDef1.h;  Roo1DMomentMorphFunction.h;  Roo2DKeysPdf.h;  Roo2DMomentMorphFunction.h;  RooArgusBG.h;  RooBCPEffDecay.h;  RooBCPGenDecay.h;  RooBDecay.h;  RooBernstein.h;  RooBifurGauss.h;  RooBlindTools.h;  RooBMixDecay.h;  RooBreitWigner.h;  RooBukinPdf.h;  RooCBShape.h;  RooCFunction1Binding.h;  RooCFunction2Binding.h;  RooCFunction3Binding.h;  RooCFunction4Binding.h;  RooChebychev.h;  RooChi2MCSModule.h;  RooChiSquarePdf.h;  RooDecay.h;  RooDstD0BG.h;  RooExponential.h;  RooFunctor1DBinding.h;  RooFunctorBinding,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:71080,Flexible,FlexibleInterpVar,71080,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,1,['Flexible'],['FlexibleInterpVar']
Modifiability,"andler::HandleConfigureNotify(Event_t* event); virtual Bool_tTGLEventHandler::HandleCrossing(Event_t* event); virtual Bool_tTGLEventHandler::HandleDoubleClick(Event_t* event); virtual Bool_tTGLEventHandler::HandleEvent(Event_t* event); virtual Bool_tTGLEventHandler::HandleExpose(Event_t* event); virtual Bool_tTGLEventHandler::HandleFocusChange(Event_t* event); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGLEventHandler::HandleMotion(Event_t* event); virtual Bool_tTGEventHandler::HandleSelection(Event_t*); virtual Bool_tTGEventHandler::HandleSelectionClear(Event_t*); virtual Bool_tTGEventHandler::HandleSelectionRequest(Event_t*); virtual Bool_tTGLEventHandler::HandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGEventHandler::IsActive() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveLegoEventHandler.html:5981,Inherit,InheritsFrom,5981,root/html532/TEveLegoEventHandler.html,https://root.cern,https://root.cern/root/html532/TEveLegoEventHandler.html,2,['Inherit'],['InheritsFrom']
Modifiability,"andler::HandleConfigureNotify(Event_t* event); virtual Bool_tTGLEventHandler::HandleCrossing(Event_t* event); virtual Bool_tTGLEventHandler::HandleDoubleClick(Event_t* event); virtual Bool_tTGLEventHandler::HandleEvent(Event_t* event); virtual Bool_tTGLEventHandler::HandleExpose(Event_t* event); virtual Bool_tTGLEventHandler::HandleFocusChange(Event_t* event); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGLEventHandler::HandleMotion(Event_t* event); virtual Bool_tTGEventHandler::HandleSelection(Event_t*); virtual Bool_tTGEventHandler::HandleSelectionClear(Event_t*); virtual Bool_tTGEventHandler::HandleSelectionRequest(Event_t*); virtual Bool_tTGLEventHandler::HandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGEventHandler::IsActive() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveLegoEventHandler.html:5952,Inherit,InheritsFrom,5952,root/html602/TEveLegoEventHandler.html,https://root.cern,https://root.cern/root/html602/TEveLegoEventHandler.html,2,['Inherit'],['InheritsFrom']
Modifiability,"andom numbers ;  CGuard;  ►CRooRandomizeParamMCSModuleRooRandomizeParamMCSModule is an add-on modules to RooMCStudy that allows you to randomize input generation parameters ;  CGausParam;  CGausParamSet;  CUniParam;  CUniParamSet;  CRooRangeBinningRooRangeBinning is binning/range definition that only defines a range but no binning ;  CRooRangeBooleanRooRangeBoolean ;  CRooRealAnalyticLightweight RooAbsFunc interface adaptor that binds an analytic integral of a RooAbsReal object (specified by a code) to a set of dependent variables ;  CRooRealBindingLightweight interface adaptor that binds a RooAbsReal object to a subset of its servers and present it as a simple array oriented interface ;  CRooRealConstantRooRealConstant provides static functions to create and keep track of RooRealVar constants ;  CRooRealIntegralRooRealIntegral performs hybrid numerical/analytical integrals of RooAbsReal objects The class performs none of the actual integration, but only manages the logic of what variables can be integrated analytically, accounts for eventual jacobian terms and defines what numerical integrations needs to be done to complement the analytical integral ;  CRooRealMPFERooRealMPFE is the multi-processor front-end for parallel calculation of RooAbsReal objects ;  CRooRealProxyRooRealProxy is the concrete proxy for RooAbsReal objects A RooRealProxy is the general mechanism to store references to RooAbsReals inside a RooAbsArg ;  ►CRooRealSumFunc;  CCacheElem;  ►CRooRealSumPdfClass RooRealSumPdf implements a PDF constructed from a sum of functions: ;  CCacheElem;  CRooRealVarRooRealVar represents a fundamental (non-derived) real valued object ;  CRooRealVarSharedPropertiesClass RooRealVarSharedProperties is an implementation of RooSharedProperties that stores the properties of a RooRealVar that are shared among clones ;  CRooRecursiveFractionClass RooRecursiveFraction is a RooAbsReal implementation that calculates the plain fraction of sum of RooAddPdf components from a se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/annotated.html:118463,variab,variables,118463,doc/v612/annotated.html,https://root.cern,https://root.cern/doc/v612/annotated.html,2,['variab'],['variables']
Modifiability,"andom numbers ;  CGuard;  ►CRooRandomizeParamMCSModuleRooRandomizeParamMCSModule is an add-on modules to RooMCStudy that allows you to randomize input generation parameters ;  CGausParam;  CGausParamSet;  CUniParam;  CUniParamSet;  CRooRangeBinningRooRangeBinning is binning/range definition that only defines a range but no binning ;  CRooRangeBooleanRooRangeBoolean ;  CRooRealAnalyticLightweight RooAbsFunc interface adaptor that binds an analytic integral of a RooAbsReal object (specified by a code) to a set of dependent variables ;  CRooRealBindingLightweight interface adaptor that binds a RooAbsReal object to a subset of its servers and present it as a simple array oriented interface ;  CRooRealConstantRooRealConstant provides static functions to create and keep track of RooRealVar constants ;  CRooRealIntegralRooRealIntegral performs hybrid numerical/analytical integrals of RooAbsReal objects The class performs none of the actual integration, but only manages the logic of what variables can be integrated analytically, accounts for eventual jacobian terms and defines what numerical integrations needs to be done to complement the analytical integral ;  CRooRealMPFERooRealMPFE is the multi-processor front-end for parallel calculation of RooAbsReal objects ;  CRooRealProxyRooRealProxy is the concrete proxy for RooAbsReal objects A RooRealProxy is the general mechanism to store references to RooAbsReals inside a RooAbsArg ;  ►CRooRealSumPdfClass RooRealSumPdf implements a PDF constructed from a sum of functions: ;  CCacheElem;  CRooRealVarRooRealVar represents a fundamental (non-derived) real valued object ;  CRooRealVarSharedPropertiesClass RooRealVarSharedProperties is an implementation of RooSharedProperties that stores the properties of a RooRealVar that are shared among clones ;  CRooRecursiveFractionClass RooRecursiveFraction is a RooAbsReal implementation that calculates the plain fraction of sum of RooAddPdf components from a set of recursive fractions: for a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:102306,variab,variables,102306,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,2,['variab'],['variables']
Modifiability,"andomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngRanLuxD1GSLRngRanLuxD1(); ROOT::Math::GSLRngRanLuxD1GSLRngRanLuxD1(const ROOT::Math::GSLRngRanLuxD1&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxD1&operator=(const ROOT::Math::GSLRngRanLuxD1&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRandomEngine & operator=(const ROOT::Math::GSLRngRanLuxD1& ). Assignment operator : make a deep copy of the contained GSL generator. GSLRngRanLuxD1(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxD1.html:3480,Inherit,Inheritance,3480,root/html534/ROOT__Math__GSLRngRanLuxD1.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxD1.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"andomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngRanLuxD2GSLRngRanLuxD2(); ROOT::Math::GSLRngRanLuxD2GSLRngRanLuxD2(const ROOT::Math::GSLRngRanLuxD2&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxD2&operator=(const ROOT::Math::GSLRngRanLuxD2&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRandomEngine & operator=(const ROOT::Math::GSLRngRanLuxD2& ). Assignment operator : make a deep copy of the contained GSL generator. GSLRngRanLuxD2(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxD2.html:3560,Inherit,Inheritance,3560,root/html534/ROOT__Math__GSLRngRanLuxD2.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxD2.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"andomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngRanLuxS1GSLRngRanLuxS1(); ROOT::Math::GSLRngRanLuxS1GSLRngRanLuxS1(const ROOT::Math::GSLRngRanLuxS1&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxS1&operator=(const ROOT::Math::GSLRngRanLuxS1&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRandomEngine & operator=(const ROOT::Math::GSLRngRanLuxS1& ). Assignment operator : make a deep copy of the contained GSL generator. GSLRngRanLuxS1(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxS1.html:3559,Inherit,Inheritance,3559,root/html534/ROOT__Math__GSLRngRanLuxS1.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxS1.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"andomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngRanLuxS2GSLRngRanLuxS2(); ROOT::Math::GSLRngRanLuxS2GSLRngRanLuxS2(const ROOT::Math::GSLRngRanLuxS2&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxS2&operator=(const ROOT::Math::GSLRngRanLuxS2&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRandomEngine & operator=(const ROOT::Math::GSLRngRanLuxS2& ). Assignment operator : make a deep copy of the contained GSL generator. GSLRngRanLuxS2(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxS2.html:3559,Inherit,Inheritance,3559,root/html534/ROOT__Math__GSLRngRanLuxS2.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxS2.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anf(celmnt[ifld-1],""%lf"",&plist[llist-1]);; 1779 }; 1780 }; 1781// end loop over numeric fields; 1782L900:; 1783 if (lnc <= 0) lnc = 1;; 1784 comand = command;; 1785}; 1786 ; 1787////////////////////////////////////////////////////////////////////////////////; 1788/// Find point where MNEVAL=AMIN+UP; 1789///; 1790/// Find point where MNEVAL=AMIN+UP, along the line through; 1791/// XMIDCR,YMIDCR with direction XDIRCR,YDIRCR, where X and Y; 1792/// are parameters KE1CR and KE2CR. If KE2CR=0 (from MINOS),; 1793/// only KE1CR is varied. From MNCONT, both are varied.; 1794/// Crossing point is at; 1795///; 1796/// (U(KE1),U(KE2)) = (XMID,YMID) + AOPT*(XDIR,YDIR); 1797 ; 1798void TMinuit::mncros(Double_t &aopt, Int_t &iercr); 1799{; 1800 /* Local variables */; 1801 Double_t alsb[3], flsb[3], bmin, bmax, zmid, sdev, zdir, zlim;; 1802 Double_t coeff[3], aleft, aulim, fdist, adist, aminsv;; 1803 Double_t anext, fnext, slope, s1, s2, x1, x2, ecarmn, ecarmx;; 1804 Double_t determ, rt, smalla, aright, aim, tla, tlf, dfda,ecart;; 1805 Int_t iout=0, i, ileft, ierev, maxlk, ibest, ik, it;; 1806 Int_t noless, iworst=0, iright, itoohi, kex, ipt;; 1807 Bool_t ldebug;; 1808 const char *chsign;; 1809 x2 = 0;; 1810 ; 1811 ldebug = fIdbg[6] >= 1;; 1812 aminsv = fAmin;; 1813// convergence when F is within TLF of AIM and next prediction; 1814// of AOPT is within TLA of previous value of AOPT; 1815 aim = fAmin + fUp;; 1816 tlf = fUp*.01;; 1817 tla = .01;; 1818 fXpt[0] = 0;; 1819 fYpt[0] = aim;; 1820 fChpt[0] = ' ';; 1821 ipt = 1;; 1822 if (fKe2cr == 0) {; 1823 fXpt[1] = -1;; 1824 fYpt[1] = fAmin;; 1825 fChpt[1] = '.';; 1826 ipt = 2;; 1827 }; 1828// find the largest allowed A; 1829 aulim = 100;; 1830 for (ik = 1; ik <= 2; ++ik) {; 1831 if (ik == 1) {; 1832 kex = fKe1cr;; 1833 zmid = fXmidcr;; 1834 zdir = fXdircr;; 1835 } else {; 1836 if (fKe2cr == 0) continue;; 1837 kex = fKe2cr;; 1838 zmid = fYmidcr;; 1839 zdir = fYdircr;; 1840 }; 1841 if (fNvarl[kex-1] <= 1) continue;; 1842 if (zdir == 0) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:60774,variab,variables,60774,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"ange . ;  ;  ~TDecompSparse () override;  ; Bool_t Decompose () override;  Decomposition engine . ;  ; void Det (Double_t &, Double_t &) override;  Matrix determinant det = d1*TMath::Power(2.,d2) ;  ; Int_t GetNcols () const override;  ; Int_t GetNrows () const override;  ; TClass * IsA () const override;  ; TDecompSparse & operator= (const TDecompSparse &source);  Assignment operator. ;  ; void Print (Option_t *opt="""") const override;  Print class members. ;  ; virtual void SetMatrix (const TMatrixDSparse &a);  Set matrix to be decomposed . ;  ; void SetVerbose (Int_t v);  ; TVectorD Solve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t Solve (TMatrixDColumn &) override;  ; Bool_t Solve (TVectorD &b) override;  Solve Ax=b . Solution returned in b. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TVectorD TransSolve (const TVectorD &b, Bool_t &ok) override;  ; Bool_t TransSolve (TMatrixDColumn &) override;  ; Bool_t TransSolve (TVectorD &b) override;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompSparse.html:2275,inherit,inherited,2275,doc/master/classTDecompSparse.html,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html,1,['inherit'],['inherited']
Modifiability,"ange which can be changed using the; setPlotMin(),setPlotMax() methods, and the default binning which can be; changed with setPlotBins(). The caller takes ownership of the returned; object and is responsible for deleting it. TH1F * createHistogram(const char* name, const char* yAxisLabel, Double_t xlo, Double_t xhi, Int_t nBins) const; Create an empty 1D-histogram with appropriate scale and labels for this variable.; This method uses the default plot range which can be changed using the; setPlotMin(),setPlotMax() methods, and the default binning which can be; changed with setPlotBins(). The caller takes ownership of the returned; object and is responsible for deleting it. TH1F * createHistogram(const char* name, const char* yAxisLabel, const RooAbsBinning& bins) const; Create an empty 1D-histogram with appropriate scale and labels for this variable. TH2F * createHistogram(const char* name, const RooAbsRealLValue& yvar, const char* zAxisLabel = 0, Double_t* xlo = 0, Double_t* xhi = 0, Int_t* nBins = 0) const; Create an empty 2D-histogram with appropriate scale and labels for this variable (x); and the specified y variable. This method uses the default plot ranges for x and y which; can be changed using the setPlotMin(),setPlotMax() methods, and the default binning which; can be changed with setPlotBins(). The caller takes ownership of the returned object; and is responsible for deleting it. TH2F * createHistogram(const char* name, const RooAbsRealLValue& yvar, const char* zAxisLabel, const RooAbsBinning** bins) const; Create an empty 2D-histogram with appropriate scale and labels for this variable (x); and the specified y variable. TH3F * createHistogram(const char* name, const RooAbsRealLValue& yvar, const RooAbsRealLValue& zvar, const char* tAxisLabel, Double_t* xlo = 0, Double_t* xhi = 0, Int_t* nBins = 0) const; Create an empty 3D-histogram with appropriate scale and labels for this variable (x); and the specified y,z variables. This method uses the default plot ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsRealLValue.html:44318,variab,variable,44318,root/html528/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html528/RooAbsRealLValue.html,18,['variab'],['variable']
Modifiability,"ange, hence the distortions associated with the projections are unaffected. However the movement can result in objects coming ‘through the front’ of the camera and disappearing.; When you zoom, the camera does not move - hence clipping of near objects is unaffected. However with extremely small zooms (FOV large/focal length short) noticeable distortions, causing straight lines to become curved, can be seen with objects near the camera - the ‘fisheye’ lens effect.; Generally dollying is more ‘natural’, but you may need to use both to achieve the desired perspective and eye position - particularly when you are working inside or very close to 3D objects. Configure the camera by calling the methods SetPerspectiveCamera() or SetOrthographicCamera() of TGLViewer:; TGLViewer * v = (TGLViewer *)gPad->GetViewer3D();; v->SetOrthoCamera(TGLViewer::kCameraOrthoXOY,; left,right,top,bottom);; ...; v->SetPerspectiveCamera (camera,fov,dolly,center,hRotate,vRotate);; Note - you can configure any of the six cameras in the viewer at any time, but you will not see the result until the camera is made current.; 9.13.2.3 Draw Styles; The GL Viewer supports three different rendering modes, which are applied to all the objects in your scene, but not Clip Shapes and Guides (See “Clipping” and “Manipulators”). These are shown below, along with the key used to activate the style. GL Viewer draw styles. Filled Polygons Wireframe Outline Enable with ‘r’ key Enable with ‘w’ key Enable with ‘t’ key Solid polygons, with hidden surface Object edges in color, with Combination of Filled Polygons removal, color surface materials, no surface filling/hiding. and Outline styles. Solid opacity, specular reflection etc. shapes with edges. Black background. Black background. White background.; Call method TGLViewer::SetStyle with one of TGLRnrCtx::EDrawStyleflags kFill, kOutline, kWireFrame:; v->SetStyle(TGLRnrCtx::kFill);; 9.13.2.4 Lighting / Style; The GL viewer creates five diffuse lights (left, right, to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:392282,config,configure,392282,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['config'],['configure']
Modifiability,"ange. ;  ; virtual void SetPointerPosition (Double_t pos);  Set pointer position in scaled (real) value. ;  ; virtual void SetPointerPosition (Float_t pos);  ; virtual void SetPointerPosition (Long64_t pos);  ; virtual void SetRelative (Bool_t rel=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGDoubleVSlider;  TGDoubleVSlider (const TGWindow *p=nullptr, UInt_t h=1, UInt_t type=1, Int_t id=-1, UInt_t options=kVerticalFrame, Pixel_t back=GetDefaultFrameBackground(), Bool_t reversed=kFALSE, Bool_t mark_ends=kFALSE);  Create a vertical slider widget. ;  ;  ~TGDoubleVSlider () override;  Delete vertical slider widget. ;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGDoubleSlider;  TGDoubleSlider (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t type=1, Int_t id=-1, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground(), Bool_t reversed=kFALSE, Bool_t mark_ends=kFALSE);  Slider constructor. ;  ;  ~TGDoubleSlider () override;  ; virtual Float_t GetMaxPosition () const;  ; virtual Double_t GetMaxPositionD () const;  ; virtual Long64_t GetMaxPositionL () const;  ; virtual Float_t GetMinPosition () const;  ; virtual Double_t GetMinPositionD () const;  ; virtual Long64_t GetMinPositionL () const;  ; virtual void GetPosition (Double_t &min, Double_t &max) const;  ; virtual void GetPosition (Double_t *min, Double_t *max) const;  ; virtual void GetPosition (Float_t &min, Float_t &max) const;  ; virtual void GetPosition (Float_t *min, Float_t *max) const;  ; virtual void GetPosition (Long64_t &min, Long64_t &max) const;  ; virtual void GetPosition (Long64_t *min, Long64_t *max) const;  ; void MapSubwindows () override;  map sub windows ;  ; virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTripleVSlider.html:3675,inherit,inherited,3675,doc/master/classTGTripleVSlider.html,https://root.cern,https://root.cern/doc/master/classTGTripleVSlider.html,1,['inherit'],['inherited']
Modifiability,"ange; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooObjCacheManager_projCacheMgrManager of cache with coefficient projections and transformations; Bool_t_projectCoefsIf true coefficients need to be projected for use in evaluate(); RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_t_recursiveFlag indicating is fractions are treated recursively; RooSetProxy_refCoefNormReference observable set for coefficient interpretation; TNamed*_refCoefRangeNameReference range name for coefficient interpreation; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooArgList*_snormList! List of supplemental normalization factors; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAddPdf.html:46410,config,configuration,46410,root/html602/RooAddPdf.html,https://root.cern,https://root.cern/root/html602/RooAddPdf.html,8,['config'],['configuration']
Modifiability,"ange; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxypdfProxy to p.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCachedPdf.html:41477,config,configuration,41477,root/html532/RooCachedPdf.html,https://root.cern,https://root.cern/root/html532/RooCachedPdf.html,2,['config'],['configuration']
Modifiability,"ange;  logical slider range ;  ; Int_t fSliderSize;  logical slider size ;  ; Int_t fSmallInc;  Small Increment in the sliding algorithm. ;  ; Window_t fSubw;  sub window in which mouse is pressed ;  ; TGScrollBarElement * fTail;  tail button of scrollbar ;  ; const TGPicture * fTailPic;  picture in tail (down or right arrow) ;  ; Int_t fX0;  ; Int_t fXp;  ; Int_t fY0;  current slider position in pixels ;  ; Int_t fYp;  previous slider position in pixels ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHScrollBar.html:29477,inherit,inherited,29477,doc/master/classTGHScrollBar.html,https://root.cern,https://root.cern/doc/master/classTGHScrollBar.html,3,['inherit'],['inherited']
Modifiability,angeBits!; TEveElement::List_tTEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tfDepthTest; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; TEveStraightLineSet::Line_t*fLastLine!; Color_tTAttLine::fLineColorline color; TEveChunkManagerfLinePlex; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; TEveChunkManagerfMarkerPlex; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tfOwnLinesIdsFlag specifying if id-objects are owned by the line-set; Bool_tfOwnMarkersIdsFlag specifying if id-objects are owned by the line-set; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrLines; Bool_tfRnrMarkers; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is re,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveStraightLineSet.html:25096,variab,variable,25096,root/html602/TEveStraightLineSet.html,https://root.cern,https://root.cern/root/html602/TEveStraightLineSet.html,4,['variab'],['variable']
Modifiability,"angeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxybeta; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxygamma; RooRealProxymu; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooGamma.html:39174,config,configuration,39174,root/html530/RooGamma.html,https://root.cern,https://root.cern/root/html530/RooGamma.html,2,['config'],['configuration']
Modifiability,"angeSign;  used to match cuts to fit parameters (and vice versa) ;  ; std::vector< Double_t > * fRmsB;  RMSs of variables (background) ;  ; std::vector< Double_t > * fRmsS;  RMSs of variables (signal) ;  ; Double_t fTestSignalEff;  used to test optimized signal efficiency ;  ; Double_t * fTmpCutMax;  temporary maximum requirement ;  ; Double_t * fTmpCutMin;  temporary minimum requirement ;  ; std::vector< TH1 * > * fVarHistB;  reference histograms (background) ;  ; std::vector< TH1 * > * fVarHistB_smooth;  smoothed reference histograms (background) ;  ; std::vector< TH1 * > * fVarHistS;  reference histograms (signal) ;  ; std::vector< TH1 * > * fVarHistS_smooth;  smoothed reference histograms (signal) ;  ; std::vector< PDF * > * fVarPdfB;  reference PDFs (background) ;  ; std::vector< PDF * > * fVarPdfS;  reference PDFs (signal) ;  . Additional Inherited Members;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TMVA::MethodBase; Types::EAnalysisType fAnalysisType;  ; UInt_t fBackgroundClass;  ; bool fExitFromTraining = false;  ; std::vector< TString > * fInputVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html:32864,inherit,inherited,32864,doc/master/classTMVA_1_1MethodCuts.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html,2,['inherit'],['inherited']
Modifiability,"angianMorphFunc::expectedEvents ; (; ); const. return the number of expected events for the current parameter set ; Definition at line 2793 of file RooLagrangianMorphFunc.cxx. ◆ expectedEvents() [2/3]. double RooLagrangianMorphFunc::expectedEvents ; (; const RooArgSet & ; nset); const. return expected number of events for extended likelihood calculation, this is the sum of all coefficients ; Definition at line 2804 of file RooLagrangianMorphFunc.cxx. ◆ expectedEvents() [3/3]. double RooLagrangianMorphFunc::expectedEvents ; (; const RooArgSet * ; nset); const. return expected number of events for extended likelihood calculation, this is the sum of all coefficients ; Definition at line 2785 of file RooLagrangianMorphFunc.cxx. ◆ expectedUncertainty(). double RooLagrangianMorphFunc::expectedUncertainty ; (; ); const. return the expected uncertainty for the current parameter set ; Definition at line 2812 of file RooLagrangianMorphFunc.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooLagrangianMorphFunc::extendMode ; (; ); const. return extended mored capabilities ; Definition at line 2776 of file RooLagrangianMorphFunc.cxx. ◆ forceAnalyticalInt(). bool RooLagrangianMorphFunc::forceAnalyticalInt ; (; const RooAbsArg & ; arg); const. overridevirtual . Force analytical integration for the given observable. ; Reimplemented from RooAbsReal.; Definition at line 2938 of file RooLagrangianMorphFunc.cxx. ◆ getAnalyticalIntegralWN(). Int_t RooLagrangianMorphFunc::getAnalyticalIntegralWN ; (; RooArgSet & ; allVars, . RooArgSet & ; numVars, . const RooArgSet * ; normSet, . const char * ; rangeName = nullptr . ); const. overridevirtual . Retrieve the mat. ; Reimplemented from RooAbsReal.; Definition at line 2946 of file RooLagrangianMorphFunc.cxx. ◆ getBinWidth(). RooRealVar * RooLagrangianMorphFunc::getBinWidth ; (; ); const. retrieve the histogram observable ; Definition at line 2531 of file RooLagrangianMorphFunc.cxx. ◆ getCache(). RooLagrangianMorphFunc::CacheElem * RooLagrangianMor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:79485,extend,extendMode,79485,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,1,['extend'],['extendMode']
Modifiability,"angle expressed in degrees. ;  ; void RotateY (Double_t angle) override;  Rotate about Y axis of the master frame with angle expressed in degrees. ;  ; void RotateZ (Double_t angle) override;  Rotate about Z axis of the master frame with angle expressed in degrees. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDx (Double_t dx) override;  ; void SetDy (Double_t dy) override;  ; void SetDz (Double_t dz) override;  ; void SetTranslation (const TGeoMatrix &other);  Set translation components. ;  ; void SetTranslation (Double_t dx, Double_t dy, Double_t dz);  Set translation components. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Subtract (const TGeoTranslation *other);  Subtracting a translation from this one. ;  ;  Public Member Functions inherited from TGeoMatrix;  TGeoMatrix ();  dummy constructor ;  ;  TGeoMatrix (const char *name);  Constructor. ;  ;  ~TGeoMatrix () override;  Destructor. ;  ; virtual Int_t GetByteCount () const;  Get total size in bytes of this. ;  ; void GetHomogenousMatrix (Double_t *hmat) const;  The homogenous matrix associated with the transformation is used for piling up's and visualization. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; Bool_t IsCombi () const;  ; Bool_t IsGeneral () const;  ; Bool_t IsIdentity () const;  ; Bool_t IsOwned () const;  ; Bool_t IsReflection () const;  ; Bool_t IsRegistered () const;  ; Bool_t IsRotAboutZ () const;  Returns true if no rotation or the rotation is about Z axis. ;  ; Bool_t IsRotation () const;  ; Bool_t IsScale () const;  ; Bool_t IsShared () const;  ; Bool_t IsTranslation () const;  ; void Print (Option_t *option="""") const override;  print the matrix in 4x4 format ;  ; virtual void ReflectX (Bool_t leftside, Bool_t rotonly=kFALSE);  Multiply by a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTranslation.html:3839,inherit,inherited,3839,doc/master/classTGeoTranslation.html,https://root.cern,https://root.cern/doc/master/classTGeoTranslation.html,1,['inherit'],['inherited']
Modifiability,"anks to Marc Escalier for asking how to do this correctly. ; #include <RooDataSet.h>; #include <RooExponential.h>; #include <RooPlot.h>; #include <RooRealVar.h>; #include <TCanvas.h>; ; using namespace RooFit;; ; void rf212_plottingInRanges_blinding(); {; // Make a fit model; RooRealVar x(""x"", ""The observable"", 1, 30);; RooRealVar tau(""tau"", ""The exponent"", -0.1337, -10., -0.1);; RooExponential expo(""expo"", ""A falling exponential function"", x, tau);; ; // Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30);; x.setRange(""left"", 1, 10);; x.setRange(""right"", 20, 30);; ; // Generate toy data, and cut out the blinded region.; std::unique_ptr<RooDataSet> data{expo.generate(x, 1000)};; std::unique_ptr<RooAbsData> blindedData{data->reduce(CutRange(""left,right""))};; ; // Kick tau a bit, and run an unbinned fit where the blinded data are missing.; // ----------------------------------------------------------------------------------------------------------; // The fit should be done only in the unblinded regions, otherwise it would; // try to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.);; expo.fitTo(*blindedData, Range(""left,right""), PrintLevel(-1));; ; // Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would; // be automatically taken as the NormRange() for plotting. We want to avoid; // this, because the point of this tutorial is to show what can go wrong when; // the NormRange() is not specified.; expo.removeStringAttribute(""fitrange"");; ; ; // Here we will plot the results; TCanvas *canvas=new TCanvas(""canvas"",""canvas"",800,600);; canvas->Divide(2,1);; ; ; // Wrong:; // ----------------------------------------------------------------------------------------------------------; // Plotting each slice on its own normalises the PDF over its plotting range. For the full curve, that means; // that the blinded region where data is missing is included in the normalisation calculation. The PDF therefore; // co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:1863,adapt,adapt,1863,doc/master/rf212__plottingInRanges__blinding_8C.html,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html,1,['adapt'],['adapt']
Modifiability,"annotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TThread*fConsumerconsumer thread; TFile*fFilereference to the file; TMutex*fMutexPendingListmutex for the pending list; TMutex*fMutexReadListmutex for the list of read blocks; TCondition*fNewBlockAddedsignal the addition of a new pending block; TStringfPathCachepath to the cache directory; TList*fPendingBlockslist of pending blocks to be read; TCondition*fReadBlockAddedsignal the addition of a new red block; TList*fReadBlockslist of blocks read; TSemaphore*fSemChangeFilesemaphore used when changin a file in TChain; TSemaphore*fSemMasterWorkersemaphore used to kill the consumer thread; TSemaphore*fSemWorkerMastersemaphore used to notify the master that worker is killed; Bool_tfThreadJoinedmark if async thread was joined; TStopwatchfWaitTimetime wating to prefetch a buffer (in usec). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFilePrefetch(TFile* ); Constructor. ~TFilePrefetch(); Destructor. void WaitFinishPrefetch(); Killing the async prefetching thread. void ReadAsync(TFPBlock* , Bool_t& ); Read one block and insert it in prefetchBuffers list. void ReadListOfBlocks(); Get blocks specified in prefetchBlocks. Bool_t BinarySearchReadList(TFPBlock* , Long64_t , Int_t , Int_t* ); Search for a requested element in a block and return the index. Long64_t GetWaitTime(); Return the time spent wating for buffer to be read in microseconds. Bool_t ReadBuffer(char* , Long64_t , Int_t ); Return a prefetched element. void ReadBlock(Long64_t* , Int_t* , Int_t ); Create a TFPBlock object or recycle one and add it to the prefetchBlocks list. void AddPendingBlock(TFPBlock* ); Safe method to add a block to the pendingList. TFPBlock* GetPendingBlock(); Safe method to remove a block from the pendingList. void AddReadBlock(TFPBlock* ); Safe method to add a block to the readList.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFilePrefetch.html:6651,Inherit,Inheritance,6651,root/html534/TFilePrefetch.html,https://root.cern,https://root.cern/root/html534/TFilePrefetch.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"annotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie; vector<TH1*>lowHistsx pb per jet bin for - variations over list of systematics; stringname; TH1*nominalx pb per jet bin. all histograms need index of binning to be consistent; vector<RooStats::HistFactory::EstimateSummary::NormFactor>normFactor; stringnormName; map<string,pair<double,double> >overallSyst""acceptance""->(0.8,1.2); TH1*relStatErrorAn (optional) externally provided shape for this error; stringshapeFactorName; vector<RooStats::HistFactory::EstimateSummary::ShapeSys>shapeSysts; vector<string>systSourceForHist. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; EstimateSummary(). ~EstimateSummary(); {}. void Print(const char* opt = 0) const. void AddSyst(const string& sname, TH1* low, TH1* high). bool operator==(const RooStats::HistFactory::EstimateSummary& other) const; Comparator for two Estimate summary objects. Useful to make sure two analyses are the same. bool CompareHisto(const TH1* one, const TH1* two) const. EstimateSummary(); simple structure to hold necessary information about each channel. » Author: Kyle Cranmer, Akira Shibata » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: cranmer $ » Last generated: 2015-06-02 15:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__HistFactory__EstimateSummary.html:7064,Inherit,Inheritance,7064,root/html604/RooStats__HistFactory__EstimateSummary.html,https://root.cern,https://root.cern/root/html604/RooStats__HistFactory__EstimateSummary.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"annotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie; vector<TH1*>lowHistsx pb per jet bin for - variations over list of systematics; stringname; TH1*nominalx pb per jet bin. all histograms need index of binning to be consistent; vector<RooStats::HistFactory::EstimateSummary::NormFactor>normFactor; stringnormName; map<string,pair<double,double> >overallSyst""acceptance""->(0.8,1.2); TH1*relStatErrorAn (optional) externally provided shape for this error; stringshapeFactorName; vector<RooStats::HistFactory::EstimateSummary::ShapeSys>shapeSysts; vector<string>systSourceForHist. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; EstimateSummary(). ~EstimateSummary(); {}. void Print(const char* opt = 0) const. void AddSyst(const string& sname, TH1* low, TH1* high). bool operator==(const RooStats::HistFactory::EstimateSummary& other) const; Comparator for two Estimate summary objects. Useful to make sure two analyses are the same. bool CompareHisto(const TH1* one, const TH1* two) const. EstimateSummary(); simple structure to hold necessary information about each channel. » Author: Kyle Cranmer, Akira Shibata » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: cranmer $ » Last generated: 2015-06-30 14:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__EstimateSummary.html:7064,Inherit,Inheritance,7064,root/html602/RooStats__HistFactory__EstimateSummary.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__EstimateSummary.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TGTextEntry*fAddVarAdd variable field.; TGColorSelect*fAvFillColorSelectfill color widget for the average.; TGedPatternSelect*fAvFillPatternSelectfill pattern widget for the average.; TGColorSelect*fAvLineColorSelectline color widget for the average.; TGLineStyleComboBox*fAvLineStyleComboline style combo box for the average.; TGLineWidthComboBox*fAvLineWidthComboline width combo box for the average.; Bool_tTGedFrame::fAvoidSignalflag for executing slots; Pixel_tTGFrame::fBackgroundframe background color; TGButtonGroup*fBgroupGroup of the plot type selection.; Int_tTGFrame::fBorderWidthframe border width; TGCompositeFrame*fBrowseBrowse tab.; TGClient*TGObject::fClientConnection to display server; Int_tTGFrame::fDNDStateEDNDFlags; TGTextEntry*fDeleteVarDelete variable field.; TGCheckButton*fDisplayAverageButton for the display of the average.; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; UInt_tTGFrame::fEventMaskcurrenty active event mask; TList*TGedFrame::fExtraTabsaddtional tabs in ged editor; TGFrameElement*TGFrame::fFEpointer to frame element; TGedEditor*TGedFrame::fGedEditormanager of this frame; TGNumberEntryField*fGotoEntryJump to an entry field.; TGPictureButton*fGotoFollowingGo to next entry button.; TGPictureButton*fGotoNextGo to next entries button.; TGPictureButton*fGotoPrecedingGo to last entry button.; TGPictureButton*fGotoPreviousGo to previous entries button.; UInt_tTGFrame::fHeightframe height; Handle_tTGObject::fIdX11/Win32 Window identifier; Bool_tTGedFrame::fInitinit flag for setting signals/slots; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TList*TGCompositeFrame::fListco",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpiderEditor.html:19155,variab,variable,19155,root/html602/TSpiderEditor.html,https://root.cern,https://root.cern/root/html602/TSpiderEditor.html,4,['variab'],['variable']
Modifiability,"anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooAbsPdf*fBModelThe pdf of the background model; RooAbsData*fDatapointer to the data sets; boolfGenerateBinnedFlag to control binned generation; unsigned intfNToysnumber of Toys MC; const RooArgSet*fNuisanceParametersCollection of the nuisance parameters in the model; RooArgList*fObservablesCollection of the observables of the model; RooAbsPdf*fPriorPdfPrior PDF of the nuisance parameters; RooAbsPdf*fSbModelThe pdf of the signal+background model; unsigned intfTestStatisticsIdxIndex of the test statistics to use; boolfTmpDoExtended; boolfUsePriorPdfuse a prior for nuisance parameters. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HybridCalculatorOriginal(const char* name = 0); constructor with name and title; set default parameters. HybridCalculatorOriginal(RooAbsPdf& sb_model, RooAbsPdf& b_model, RooArgList& observables, const RooArgSet* nuisance_parameters = 0, RooAbsPdf* prior_pdf = 0, bool GenerateBinned = false, int testStatistics = 1, int ntoys = 1000); HybridCalculatorOriginal constructor without specifying a data set; the user need to specify the models in the S+B case and B-only case,; the list of observables of the model(s) (for MC-generation), the list of parameters; that are marginalised and the prior distribution of those parameters. HybridCalculatorOriginal(RooAbsData& data, RooAbsPdf& sb_model, RooAbsPdf& b_model, const RooArgSet* nuisance_parameters = 0, RooAbsPdf* prior_pdf = 0, bool GenerateBinned = false, int testStatistics = 1, int ntoys = 1000); HybridCalculatorOriginal constructor for performing hypotesis test; the user need to specify the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HybridCalculatorOriginal.html:11106,Inherit,Inheritance,11106,root/html602/RooStats__HybridCalculatorOriginal.html,https://root.cern,https://root.cern/root/html602/RooStats__HybridCalculatorOriginal.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tfDimensionDimension of the current expression; TList*fFormulaList! Pointer to a list of coordinated list TTreeFormula (used by Scan and Query); TH1*fHistogram! Pointer to histogram used for the projection; TList*fInput! input list to the selector; const char*fScanFileNameName of the file where Scan is redirected; Bool_tfScanRedirectSwitch to redirect TTree::Scan output to a file; Long64_tfSelectedRowsNumber of selected entries; TSelectorDraw*fSelector! Pointer to current selector; TClass*fSelectorClass! Pointer to the actual class of the TSelectorFromFile; TSelector*fSelectorFromFile! Pointer to a user defined selector created by this TTreePlayer object; TSelector*fSelectorUpdate! Set to the selector address when it's entry list needs to be updated by the UpdateFormulaLeaves function; TTree*fTree! Pointer to current Tree. Class Charts. Inheritance Chart:. TObject. ←; TVirtualTreePlayer. ←; TTreePlayer. Function documentation; TTreePlayer(); Default Tree constructor*-*-*-; *-* ========================. ~TTreePlayer(); Tree destructor*-*-*-*-; *-* =================. TVirtualIndex * BuildIndex(const TTree* T, const char* majorname, const char* minorname); Build the index for the tree (see TTree::BuildIndex). TTree * CopyTree(const char* selection, Option_t* option, Long64_t nentries, Long64_t firstentry); copy a Tree with selection; make a clone of this Tree header.; then copy the selected entries. selection is a standard selection expression (see TTreePlayer::Draw); option is reserved for possible future use; nentries is the number of entries to process (default is all); first is the first entry to process (default is 0). IMPORTANT: The copied tree stays connected with this tree until this tree; is deleted. In particular, any changes in branch addresses; in this tree are forwarded to the clone trees. Any changes; made to the br",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreePlayer.html:9793,Inherit,Inheritance,9793,root/html602/TTreePlayer.html,https://root.cern,https://root.cern/root/html602/TTreePlayer.html,1,['Inherit'],['Inheritance']
Modifiability,"anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance Chart:. TObject. ←; TQpProbBase. ←; TQpProbSparse. Function documentation; TQpProbSparse(Int_t nx, Int_t my, Int_t mz); Constructor. TQpProbSparse(const TQpProbSparse& another); Copy constructor. TQpDataBase * MakeData(Double_t* c, Int_t nnzQ, Int_t* irowQ, Int_t* icolQ, Double_t* Q, Double_t* xlo, Bool_t* ixlo, Double_t* xup, Bool_t* ixup, Int_t nnzA, Int_t* irowA, Int_t* icolA, Double_t* A, Double_t* bA, Int_t nnzC, Int_t* irowC, Int_t* icolC, Double_t* C, Double_t* clo, Bool_t* iclo, Double_t* cup, Bool_t* icup); Setup the data. TQpDataBase * MakeData(TVectorD& c, TMatrixDBase& Q_in, TVectorD& xlo, TVectorD& ixlo, TVectorD& xup, TVectorD& ixup, TMatrixDBase& A_in, TVectorD& bA, TMatrixDBase& C_in, TVectorD& clo, TVectorD& iclo, TVectorD& cup, TVectorD& icup); Setup the data. TQpResidual* MakeResiduals(const TQpDataBase* data); Setup the residuals. TQpVar* MakeVariables(const TQpDataBase* data); Setup the variables. TQpLinSolverBase* MakeLinSys(const TQpDataBase* data); Setup the linear solver. void JoinRHS(TVectorD& rhs_in, TVectorD& rhs1_in, TVectorD& rhs2_in, TVectorD& rhs3_in); Assembles a single vector object from three given vectors .; rhs_out (output) final joined vector; rhs1_in (input) first part of rhs; rhs2_in (input) middle part of rhs; rhs3_in (input) last part of rhs . void SeparateVars(TVectorD& x_in, TVectorD& y_in, TVectorD& z_in, TVectorD& vars_in); Extracts three component vectors from a given aggregated vector.; vars_in (input) aggregated vector; x_in (output) first part of vars; y_in (output) middle part of vars; z_in (output) last part of vars. void MakeRandomData(TQpDataSparse*& data, TQpVar*& soln, Int_t nnzQ, Int_t nnzA, Int_t nnzC); Create a random QP problem. TQpProbSparse & operator=(const TQpProbSparse& source); Assignment operator. TQpProbSparse(); {}. virtual ~TQpProbSparse(); {}. » Author: Eddy Offermann May 2004 » Copyright (C) 19",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQpProbSparse.html:7813,variab,variables,7813,root/html602/TQpProbSparse.html,https://root.cern,https://root.cern/root/html602/TQpProbSparse.html,4,['variab'],['variables']
Modifiability,"anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Bool_tfBuildingSceneRebuilding 3D scene; TGCanvas*fCanvascanvas widget; TGLayoutHints*fCanvasLayoutlayout for canvas widget; TX3DContainer*fContainercontainer containing X3D window; TGPopupMenu*fFileMenufile menu; UInt_tfHeightviewer height; TGPopupMenu*fHelpMenuhelp menu; TX3DFrame*fMainFramethe main GUI frame; TGMenuBar*fMenuBarmenubar; TGLayoutHints*fMenuBarHelpLayoutlayout hint for help menu in menubar; TGLayoutHints*fMenuBarItemLayoutlayout hints for menu in menubar; TGLayoutHints*fMenuBarLayoutmenubar layout hints; TStringfOptionoption string to be passed to X3D; TVirtualPad*fPadpad we are attached to; TViewerX3D::EPassfPass; TStringfTitleviewer title; UInt_tfWidthviewer width; Window_tfX3DWinX3D window; Int_tfXPosviewer X position; Int_tfYPosviewer Y position; static Bool_tfgCreatedTViewerX3D is a singleton; static TViewerX3D::EPasskDraw; static TViewerX3D::EPasskSize. Class Charts. Inheritance Chart:. TObject. ←; TVirtualViewer3D. ←; TViewerX3D. Function documentation; TViewerX3D(TVirtualPad* pad); Create ROOT X3D viewer. TViewerX3D(TVirtualPad* pad, Option_t* option, const char* title = ""X3D Viewer"", UInt_t width = 800, UInt_t height = 600); Create ROOT X3D viewer. TViewerX3D(TVirtualPad* pad, Option_t* option, const char* title, Int_t x, Int_t y, UInt_t width, UInt_t height); Create ROOT X3D viewer. ~TViewerX3D(); Delete ROOT X3D viewer. void Close(); Close X3D Viewer. void CreateViewer(const char* name); Create the actual canvas. void InitX3DWindow(); Setup geometry and initialize X3D. void BeginScene(); The x3d viewer cannot rebuild a scene once created. void EndScene(); The x3d viewer cannot rebuild a scene once created. Int_t AddObject(const TBuffer3D& buffer, Bool_t* addChildren = 0); The x3d viewer cannot rebuild a scene once created. Int_t AddObject(UInt_t placedID, const TBuffer3D& buffer, Bool_t* addChildren = 0); We don't support placed IDs - discard. void Pai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TViewerX3D.html:8161,Inherit,Inheritance,8161,root/html602/TViewerX3D.html,https://root.cern,https://root.cern/root/html602/TViewerX3D.html,2,['Inherit'],['Inheritance']
Modifiability,"anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMatrixDfCovarianceMatrixCovariance matrix; TVectorDfEigenValuesEigenvalue vector of trans; TMatrixDfEigenVectorsEigenvector matrix of trans; TList*fHistogramsList of histograms; Bool_tfIsNormalisedNormalize matrix?; TVectorDfMeanValuesMean value over all data points; TStringTNamed::fNameobject identifier; Int_tfNumberOfDataPointsNumber of data points; Int_tfNumberOfVariablesNumber of variables; TVectorDfOffDiagonalelements of the tridiagonal; TVectorDfSigmasvector of sigmas; Bool_tfStoreDataShould we store input data?; TStringTNamed::fTitleobject title; Double_tfTraceTrace of covarience matrix; TVectorDfUserDataVector of original data points. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPrincipal(); Empty CTOR, Do not use. TPrincipal(Int_t nVariables, Option_t* opt = ""ND""); Ctor. Argument is number of variables in the sample of data; Options are:; N Normalize the covariance matrix (default); D Store input data (default). The created object is named ""principal"" by default. TPrincipal(const TPrincipal& ); copy constructor. TPrincipal& operator=(const TPrincipal& ); assignement operator. ~TPrincipal(); destructor. void AddRow(const Double_t* x). /*; >; Add a data point and update the covariance matrix. The input; array must be fNumberOfVariables long. The Covariance matrix and mean values of the input data is caculated; on the fly by the following equations:. since this is a really fast method, with no rounding errors (please; refer to CERN 72-21 pp. 54-106). The data is stored internally in a TVectorD, in the following; way:. With as defined in the class description.; ; */; . void Browse(TBrowser* b); Browse the TPrincipal object in the TBrowser. void Clear(Option_t* option = """"); Clear the data in Object. Notice, that's not possible to change; the dimension of the original data. const Double_t * GetRow(Int_t row); Return a row of t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPrincipal.html:12802,variab,variables,12802,root/html602/TPrincipal.html,https://root.cern,https://root.cern/root/html602/TPrincipal.html,4,['variab'],['variables']
Modifiability,"ansform. These need 2*size length to supply real and; imaginary coefficients.; destVector-pointer to the vector of dest data, its length should be; size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; need 2*size length to store real and imaginary coefficients. . Example of enhancement;  ; Function:; void TSpectrumTransform::Enhance(const float *fSource,; float; *fDest);  ; This function transforms the; source spectrum (for details see Transform function). Before the Enhance; function is called the class must be created by constructor and the type of the; transform as well as some other parameters must be set using a set of setter functions.; The Enhance function multiplies transformed coefficients in the given region; (fXmin, fXmax) by the given fEnhancCoeff and transforms it back. Enhanced data; are written into dest spectrum.;  ; Example� � script Enhance.c:.  ; Fig. 1 Original spectrum (black; line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024; were multiplied by 2) ;  ; Script:;  ; // Example to illustrate; Enhance function (class TSpectrumTransform).; // To execute this example,; do; // root > .x Enhance.C;  ; void Enhance() {; �� Int_t i;; �� Double_t nbins =; 4096;; �� Double_t xmin� =; 0;; �� Double_t xmax� =; (Double_t)nbins;; �� Float_t * source = new float[nbins];; �� Float_t * dest = new; float[nbins];�� ; �� TH1F *h = new; TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; �� TH1F *d = new; TH1F(""d"","""",nbins,xmin,xmax);�������� ; �� TFile *f = new; TFile(""spectra\\TSpectrum.root"");; �� h=(TH1F*); f->Get(""transform1;1"");�� ; �� for (i = 0; i < nbins;; i++) source[i]=h->GetBinContent(i + 1);���� ; �� TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; �� if (!Transform1); Transform1 = new; TCanvas(""Transform"",""Transform1"",10,10,1000,700);; ��; h->SetAxisRange(700,1024);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransfo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrumTransform.html:20437,enhance,enhanced,20437,root/html528/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html528/TSpectrumTransform.html,8,"['Enhance', 'enhance']","['Enhance', 'enhanced']"
Modifiability,"ansform1"",10,10,1000,700);; ��; h->SetAxisRange(700,1024);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Float_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Float_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id$ » Last generated: 2015-03-14 16:49; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSpectrumTransform.html:22857,enhance,enhanceCoeff,22857,root/html534/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html534/TSpectrumTransform.html,10,['enhance'],"['enhanceCoeff', 'enhanced', 'enhancement']"
Modifiability,"ansform2).; // To execute this example,; do; // root > .x Enhance2.C; �; void Enhance2() {; �� Int_t i, j;; �� Int_t nbinsx =; 256;; �� Int_t nbinsy =; 256;�� ; �� Int_t xmin� = 0;; �� Int_t xmax� =; nbinsx;; �� Int_t ymin� = 0;; �� Int_t ymax� =; nbinsy;; �� Double_t ** source = new Double_t *[nbinsx];�� ; �� Double_t ** dest = new; Double_t *[nbinsx];����� ; �� for (i=0;i<nbinsx;i++); ����������������������������������������������� source[i]=new; Double_t[nbinsy];; �� for (i=0;i<nbinsx;i++); ����������������������������������������������� dest[i]=new; Double_t[nbinsy];�� ; �� TH2F *trans = new; TH2F(""trans"",""Background; estimation"",nbinsx,xmin,xmax,nbinsy,ymin,ymax);; �� TFile *f = new; TFile(""TSpectrum2.root"");; �� trans=(TH2F*); f->Get(""back3;1"");; �� TCanvas *Tr = new; TCanvas(""Transform"",""Illustation of transform; function"",10,10,1000,700);; �� for (i = 0; i < nbinsx;; i++){; ���� for (j = 0; j <; nbinsy; j++){; �� ������������ ����source[i][j] = trans->GetBinContent(i + 1,j; + 1); ; �� ������������ �}; �� }���������� ; ��; TSpectrumTransform2 *t = new TSpectrumTransform2(256,256);�� ; ��; t->SetTransformType(t->kTransformCos,0);�� ; ��; t->SetRegion(0,63,0,63);�� ; ��; t->SetEnhanceCoeff(5);; ��; t->Enhance(source,dest);�� ; �� trans->Draw(""SURF"");���� ; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax, Int_t ymin, Int_t ymax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax, ymin, ymax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum2Transform.html:25142,Enhance,Enhance,25142,root/html602/TSpectrum2Transform.html,https://root.cern,https://root.cern/root/html602/TSpectrum2Transform.html,2,['Enhance'],['Enhance']
Modifiability,"ansformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMVA::VariableTransformBase::ToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tTMVA::VariableTransformBase::UseSignalTransform() const; TMVA::VariableDecorrTransformVariableDecorrTransform(TMVA::DataSetInfo& dsi); TMVA::VariableDecorrTransformVariableDecorrTransform(const TMVA::VariableDecorrTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(const TMVA::VariableTransformBase&); TMVA::VariableTransformBaseTMVA::VariableTransformBase::VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html:6644,Variab,VariableTransformBase,6644,root/html602/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html,28,['Variab'],"['VariableDecorrTransform', 'VariableDecorrTransformVariableDecorrTransform', 'VariableInfo', 'VariableTransformBase', 'VariableTransformBaseTMVA', 'Variables']"
Modifiability,"ansformBase::Spectators(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). private:. vector<TMatrixDSym*>*CalcCovarianceMatrices(const vector<TMVA::Event*,allocator<TMVA::Event*> >& events, Int_t maxCls); voidCalcSQRMats(const vector<TMVA::Event*,allocator<TMVA::Event*> >&, Int_t maxCls). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<TMatrixD*>fDecorrMatrices! Decorrelation matrix [class0/class1/.../all classes]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableDecorrTransform( DataSetInfo& dsi ); constructor. ~VariableDecorrTransform(); destructor. void Initialize(); initialisation. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); calculate the decorrelation matrix and the normalization. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const; apply ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__VariableDecorrTransform.html:8907,variab,variables,8907,root/html530/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html530/TMVA__VariableDecorrTransform.html,16,"['Variab', 'variab']","['VariableTransformBase', 'variables']"
Modifiability,"ansformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoSphere (const TGeoSphere &)=delete;  ; TGeoSphere & operator= (const TGeoSphere &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fNseg;  ; Int_t fNz;  ; Double_t fPhi1;  ; Double_t fPhi2;  ; Double_t fRmax;  ; Double_t fRmin;  ; Double_t fTheta1;  ; Double_t fTheta2;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoSphere.html:19391,inherit,inherited,19391,doc/master/classTGeoSphere.html,https://root.cern,https://root.cern/doc/master/classTGeoSphere.html,1,['inherit'],['inherited']
Modifiability,"ansformation(vector<double>& startValues, const ROOT::Math::IMultiGradFunction* func = 0); voidSetFinalValues(const double* x); voidSetMinValue(double val). private:. ROOT::Math::BasicMinimizerBasicMinimizer(const ROOT::Math::BasicMinimizer&); ROOT::Math::BasicMinimizer&operator=(const ROOT::Math::BasicMinimizer& rhs). Data Members; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer ; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. map<unsigned int,std::pair<double,double> >fBoundsmap specifying the bound using as key the parameter index; unsigned intfDim; doublefMinVal; vector<std::string>fNames; const ROOT::Math::IMultiGenFunction*fObjFunc; vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BasicMinimizer(). Default constructor. virtual ~BasicMinimizer(). Destructor. BasicMinimizer(const ROOT::Math::BasicMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__BasicMinimizer.html:6256,Inherit,Inheritance,6256,root/html534/ROOT__Math__BasicMinimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__BasicMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ansformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetBoostedMethodName(TString methodName); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBoost.html:12569,Config,Configurable,12569,root/html602/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBoost.html,2,['Config'],['Configurable']
Modifiability,"ansformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetBoostedMethodName(TString methodName); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBoost.html:11403,Config,Configurable,11403,root/html534/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBoost.html,1,['Config'],['Configurable']
Modifiability,"ansformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetHiddenLayer(TString hiddenlayer = """"); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodTMlpANN.html:12055,Config,Configurable,12055,root/html602/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodTMlpANN.html,2,['Config'],['Configurable']
Modifiability,"ansformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetHiddenLayer(TString hiddenlayer = """"); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodTMlpANN.html:11419,Config,Configurable,11419,root/html534/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodTMlpANN.html,1,['Config'],['Configurable']
Modifiability,"ansient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_t_valueConstant value of self; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooConstVar(const char* name, const char* title, Double_t value); Constructor with value; _fast = kTRUE ;. RooConstVar(const RooConst",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooConstVar.html:32892,config,configuration,32892,root/html532/RooConstVar.html,https://root.cern,https://root.cern/root/html532/RooConstVar.html,2,['config'],['configuration']
Modifiability,"ansitionPointbreak-down point for gradient regression; Bool_tfUseExclusiveVarsindividual variables already used in fisher criterium are not anymore analysed individually for node splitting; Bool_tfUseFisherCutsuse multivariate splits using the Fisher criterium; UInt_tfUseNTrainEventsnumber of randomly picked training events used in randomised (and bagged) trees; UInt_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsuse ""fUseNvars"" not as fixed number but as mean of a possion distr. in each split; Bool_tfUseYesNoLeafuse sig or bkg classification in leave nodes or sig/bkg; vector<const TMVA::Event*>fValidationSamplethe Validation events; vector<Double_t>fVariableImportancethe relative importance of the different variables; map<const TMVA::Event*,pair<Double_t,Double_t> >fWeightedResidualsweighted regression residuals; static const Int_tfgDebugLeveldebug level determining some printout/control plots etc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodBDT(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); the standard constructor for the ""boosted decision trees"". MethodBDT(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = __null). Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); BDT can handle classification with multiple classes and regression with one regression-target. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; nTrees number of trees in the forest to be created; BoostType the boosting type for the trees in the forest (AdaBoost e.t.c..); known: AdaBoost; AdaBoostR2 (Adaboost for regression); Bagging; GradBoost; AdaBoostBeta the boosting parameter, beta, for AdaBoost; UseRandomisedTrees choose at each node splitting a random set of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBDT.html:27240,Inherit,Inheritance,27240,root/html602/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBDT.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ansparency; 59 ; 60`SetMarkerColorAlpha()`, allows to set a transparent color.; 61In the following example the marker color of the histogram `histo`; 62is set to blue with an opacity of 35% (i.e. a transparency of 65%).; 63(The color `kBlue` itself is internally stored as fully opaque.); 64 ; 65~~~ {.cpp}; 66histo->SetMarkerColorAlpha(kBlue, 0.35);; 67~~~; 68 ; 69The transparency is available on all platforms when the flag `OpenGL.CanvasPreferGL` is set to `1`; 70in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; 71it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript.; 72 ; 73Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; 74Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`.; 75 ; 76\anchor ATTMARKER2; 77## Marker style; 78 ; 79The Marker style defines the markers' shape.; 80The marker style of any class inheriting from `TAttMarker` can; 81be changed using the method `SetMarkerStyle` and retrieved using the; 82method `GetMarkerStyle`.; 83 ; 84The following list gives the currently supported markers (screen; 85and PostScript) style. Each marker style is identified by an integer number; 86(first column) corresponding to a marker shape (second column) and can be also; 87accessed via a global name (third column).; 88 ; 89~~~ {.cpp}; 90 Marker number Marker shape Marker name; 91 1 dot kDot; 92 2 + kPlus; 93 3 * kStar; 94 4 o kCircle; 95 5 x kMultiply; 96 6 small dot kFullDotSmall; 97 7 medium dot kFullDotMedium; 98 8 large scalable dot kFullDotLarge; 99 9 -->19 large scalable dot; 100 20 full circle kFullCircle; 101 21 full square kFullSquare; 102 22 full triangle up kFullTriangleUp; 103 23 full triangle down kFullTriangleDown; 104 24 open circle kOpenCircle; 105 25 open square kOpenSquare; 106 26 open triangle up kOpenTriangleUp; 107 27 open diamond kOpenDiamond; 108 28 open cross kOpenCross; 109 29 full star kFullStar; 110 30 open star ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttMarker_8cxx_source.html:2802,inherit,inheriting,2802,doc/master/TAttMarker_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttMarker_8cxx_source.html,1,['inherit'],['inheriting']
Modifiability,"ansparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Bool_tfLogX; Bool_tfLogY; Bool_tfLogZ; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TObject*fPlotPlot object.; TStringfPlotOptionOptions for the plot-painter.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to que",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEvePlot3D.html:18457,variab,variable,18457,root/html528/TEvePlot3D.html,https://root.cern,https://root.cern/root/html528/TEvePlot3D.html,1,['variab'],['variable']
Modifiability,"ansparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Bool_tfLogX; Bool_tfLogY; Bool_tfLogZ; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TObject*fPlotPlot object.; TStringfPlotOptionOptions for the plot-painter.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to que",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEvePlot3D.html:18823,variab,variable,18823,root/html530/TEvePlot3D.html,https://root.cern,https://root.cern/root/html530/TEvePlot3D.html,5,['variab'],['variable']
Modifiability,ant expressions; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAbsData*RooAbsTestStatistic::_dataPointer to original input dataset; RooAbsData*_dataClonePointer to internal clone if input data; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; Bool_tRooAbsTestStatistic::_doOffsetApply interval value offset to control numeric precision?; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Double_tRooAbsTestStatistic::_evalCarry! carry of Kahan sum in evaluatePartition; Int_tRooAbsTestStatistic::_extSet! Number of designated set to calculated extended term; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAbsReal*RooAbsTestStatistic::_funcPointer to original input function; RooAbsReal*_funcClonePointer to internal clone of input function; RooArgSet*_funcCloneSetSet owning all components of internal clone of input function; RooArgSet*_funcObsSetList of observables in the pdf expression; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; RooAbsTestStatistic**RooAbsTestStatistic::_gofArray! Array of sub-contexts representing part of the combined test statistic; RooAbsTestStatistic::GOFOpModeRooAbsTestStatistic::_gofOpModeOperation mode of test statistic instance ; vector<RooFit::MPSplit>RooAbsTestStatistic::_gofSplitMode! GOF MP Split mode specified by component (when Auto is active); static Bool_tRooAbsR,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsOptTestStatistic.html:36479,extend,extended,36479,root/html534/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html534/RooAbsOptTestStatistic.html,2,['extend'],['extended']
Modifiability,"ant something different here. void Help(const char* line); Print help on interpreter. void LoadGraphicsLibs(); Load shared libs neccesary for graphics. These libraries are only; loaded when gROOT->IsBatch() is kFALSE. void MakeBatch(); Switch to batch mode. Int_t ParseRemoteLine(const char* ln, TString& hostdir, TString& user, Int_t& dbg, TString& script); Parse the content of a line starting with "".R"" (already stripped-off); The format is; [user@]host[:dir] [-l user] [-d dbg] [script]; The variable 'dir' is the remote directory to be used as working dir.; The username can be specified in two ways, ""-l"" having the priority; (as in ssh).; A 'dbg' value > 0 gives increasing verbosity.; The last argument 'script' allows to specify an alternative script to; be executed remotely to startup the session. Long_t ProcessRemote(const char* line, Int_t* error = 0); Process the content of a line starting with "".R"" (already stripped-off); The format is; [user@]host[:dir] [-l user] [-d dbg] [script] | [host] -close; The variable 'dir' is the remote directory to be used as working dir.; The username can be specified in two ways, ""-l"" having the priority; (as in ssh).; A 'dbg' value > 0 gives increasing verbosity.; The last argument 'script' allows to specify an alternative script to; be executed remotely to startup the session. Long_t ProcessLine(const char* line, Bool_t sync = kFALSE, Int_t* error = 0); Process a single command line, either a C++ statement or an interpreter; command starting with a ""."".; Return the return value of the command cast to a long. Long_t ProcessFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); Process a file containing a C++ macro. Long_t ExecuteFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); Execute a file containing a C++ macro (static method). Can be used; while TApplication is not yet created. void Run(Bool_t retrn = kFALSE); Main application eventloop. Calls system dependent eventloop via gSystem. void SetIdleTimer(UI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TApplication.html:17746,variab,variable,17746,root/html602/TApplication.html,https://root.cern,https://root.cern/root/html602/TApplication.html,4,['variab'],['variable']
Modifiability,"ant something different here. void Help(const char* line); Print help on interpreter. void LoadGraphicsLibs(); Load shared libs neccesary for graphics. These libraries are only; loaded when gROOT->IsBatch() is kFALSE. void MakeBatch(); Switch to batch mode. Int_t ParseRemoteLine(const char* ln, TString& hostdir, TString& user, Int_t& dbg, TString& script); Parse the content of a line starting with "".R"" (already stripped-off); The format is; [user@]host[:dir] [-l user] [-d dbg] [script]; The variable 'dir' is the remote directory to be used as working dir.; The username can be specified in two ways, ""-l"" having the priority; (as in ssh).; A 'dbg' value > 0 gives increasing verbosity.; The last argument 'script' allows to specify an alternative script to; be executed remotely to startup the session. Long_t ProcessRemote(const char* line, Int_t* error = 0); Process the content of a line starting with "".R"" (already stripped-off); The format is; [user@]host[:dir] [-l user] [-d dbg] [script] | [host] -close; The variable 'dir' is the remote directory to be used as working dir.; The username can be specified in two ways, ""-l"" having the priority; (as in ssh).; A 'dbg' value > 0 gives increasing verbosity.; The last argument 'script' allows to specify an alternative script to; be executed remotely to startup the session. Long_t ProcessLine(const char* line, Bool_t sync = kFALSE, Int_t* error = 0); Process a single command line, either a C++ statement or an interpreter; command starting with a ""."".; Return the return value of the command casted to a long. Long_t ProcessFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); Process a file containing a C++ macro. Long_t ExecuteFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); Execute a file containing a C++ macro (static method). Can be used; while TApplication is not yet created. void Run(Bool_t retrn = kFALSE); Main application eventloop. Calls system dependent eventloop via gSystem. void SetIdleTimer(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TApplication.html:16285,variab,variable,16285,root/html526/TApplication.html,https://root.cern,https://root.cern/root/html526/TApplication.html,7,['variab'],['variable']
Modifiability,"ant variables are uncorrelated. If it were the case,; it can be proven that the discrimination obtained by the above likelihood; ratio is optimal, ie, no other method can beat it. However, in most; practical applications of MVAs correlations are present. . Linear correlations, measured from the training sample, can be taken; into account in a straightforward manner through the square-root; of the covariance matrix. The square-root of a matrix; C is the matrix C′ that multiplied with itself; yields C: C=C′C′. We compute the; square-root matrix (SQM) by means of diagonalising (D) the; covariance matrix: . and the linear transformation of the linearly correlated into the; uncorrelated variables space is then given by multiplying the measured; variable tuple by the inverse of the SQM. Note that these transformations; are performed for both signal and background separately, since the; correlation pattern is not the same in the two samples.; ; The above diagonalisation is complete for linearly correlated,; Gaussian distributed variables only. In real-world examples this; is not often the case, so that only little additional information; may be recovered by the diagonalisation procedure. In these cases,; non-linear methods must be applied.; . Function Members (Methods); public:. virtual~MethodLikelihood(); voidTObject::AbstractMethod(const char* method) const; voidTMVA::Configurable::AddOptionsXMLTo(void* parent) const; voidTMVA::MethodBase::AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType); virtual voidAddWeightsXMLTo(void* parent) const; virtual voidTObject::AppendPad(Option_t* option = """"); TDirectory*TMVA::MethodBase::BaseDir() const; virtual voidTObject::Browse(TBrowser* b); voidTMVA::Configurable::CheckForUnusedOptions() const; virtual voidTMVA::MethodBase::CheckSetup(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """"",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodLikelihood.html:2451,variab,variables,2451,root/html528/TMVA__MethodLikelihood.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodLikelihood.html,8,['variab'],['variables']
Modifiability,"ant variables are uncorrelated. If it were the case,; it can be proven that the discrimination obtained by the above likelihood; ratio is optimal, ie, no other method can beat it. However, in most; practical applications of MVAs correlations are present. . Linear correlations, measured from the training sample, can be taken; into account in a straightforward manner through the square-root; of the covariance matrix. The square-root of a matrix; C is the matrix C′ that multiplied with itself; yields C: C=C′C′. We compute the; square-root matrix (SQM) by means of diagonalising (D) the; covariance matrix: . and the linear transformation of the linearly correlated into the; uncorrelated variables space is then given by multiplying the measured; variable tuple by the inverse of the SQM. Note that these transformations; are performed for both signal and background separately, since the; correlation pattern is not the same in the two samples.; ; The above diagonalisation is complete for linearly correlated,; Gaussian distributed variables only. In real-world examples this; is not often the case, so that only little additional information; may be recovered by the diagonalisation procedure. In these cases,; non-linear methods must be applied.; ; . Function Members (Methods); public:. virtual~MethodLikelihood(); voidTObject::AbstractMethod(const char* method) const; voidTMVA::Configurable::AddOptionsXMLTo(void* parent) const; voidTMVA::MethodBase::AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType); virtual voidAddWeightsXMLTo(void* parent) const; virtual voidTObject::AppendPad(Option_t* option = """"); TDirectory*TMVA::MethodBase::BaseDir() const; virtual voidTObject::Browse(TBrowser* b); voidTMVA::Configurable::CheckForUnusedOptions() const; virtual voidTMVA::MethodBase::CheckSetup(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodLikelihood.html:2451,variab,variables,2451,root/html534/TMVA__MethodLikelihood.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodLikelihood.html,2,['variab'],['variables']
Modifiability,"anual</A>; 59 */; 60 ; 61 ; 62 template<class UserFunc>; 63 class GSLFunctionAdapter {; 64 ; 65 public:; 66 ; 67 GSLFunctionAdapter() {}; 68 virtual ~GSLFunctionAdapter() {}; 69 ; 70 static double F( double x, void * p) {; 71 ; 72 UserFunc * function = reinterpret_cast< UserFunc *> (p);; 73 return (*function)( x );; 74 }; 75 ; 76 ; 77 static double Df( double x, void * p) {; 78 ; 79 UserFunc * function = reinterpret_cast< UserFunc *> (p);; 80 return (*function).Derivative( x );; 81 }; 82 ; 83 static void Fdf( double x, void * p, double *f, double *df ) {; 84 ; 85 UserFunc * function = reinterpret_cast< UserFunc *> (p);; 86 *f = (*function) ( x );; 87 *df = (*function).Derivative( x );; 88 }; 89 ; 90 };; 91 ; 92 ; 93} // namespace Math; 94} // namespace ROOT; 95 ; 96 ; 97#endif /* ROOT_Math_GSLFunctionAdapter */; f#define f(i)Definition RSha256.hxx:104; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; ROOT::Math::GSLFunctionAdapterClass for adapting any C++ functor class to C function pointers used by GSL.Definition GSLFunctionAdapter.h:63; ROOT::Math::GSLFunctionAdapter::Fdfstatic void Fdf(double x, void *p, double *f, double *df)Definition GSLFunctionAdapter.h:83; ROOT::Math::GSLFunctionAdapter::GSLFunctionAdapterGSLFunctionAdapter()Definition GSLFunctionAdapter.h:67; ROOT::Math::GSLFunctionAdapter::Fstatic double F(double x, void *p)Definition GSLFunctionAdapter.h:70; ROOT::Math::GSLFunctionAdapter::~GSLFunctionAdaptervirtual ~GSLFunctionAdapter()Definition GSLFunctionAdapter.h:68; ROOT::Math::GSLFunctionAdapter::Dfstatic double Df(double x, void *p)Definition GSLFunctionAdapter.h:77; double; xDouble_t x[n]Definition legend1.C:17; MathNamespace for new Math classes and functions.; ROOT::Math::GSLFuncPointerdouble(* GSLFuncPointer)(double, void *)Function pointer corresponding to gsl_function signature.Definition GSLFunctionAdapter.h:45; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forwa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLFunctionAdapter_8h_source.html:3412,adapt,adapting,3412,doc/master/GSLFunctionAdapter_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLFunctionAdapter_8h_source.html,1,['adapt'],['adapting']
Modifiability,"anup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGLTH3Composition ();  I have to define it, since explicit copy ctor was declared. ;  ; void AddTH3 (const TH3 *hist, ETH3BinShape shape=kBox);  Add TH3 into collection. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Check if ""this"" is under cursor. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Mouse and keyboard events. ;  ; char * GetObjectInfo (Int_t px, Int_t py) const override;  I cannot show bin content in a status bar - since there can be several bins in one. ;  ; TClass * IsA () const override;  ; void Paint (Option_t *option) override;  Paint a composition of 3d hists. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH3C;  TH3C ();  Constructor. ;  ;  TH3C (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size 3-D histograms. ;  ;  TH3C (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size 3-D histograms. ;  ;  TH3C (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3C (const TH3C &h3c);  Copy constructor. ;  ;  ~TH3C () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin cont",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:2962,inherit,inherited,2962,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,1,['inherit'],['inherited']
Modifiability,"anup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Int_tfIteriteration counter. protected:. Double_tfArtol; Double_tfDnormnorm of problem data; Double_tfGamma_a; Double_tfGamma_fparameters associated with the step length heuristic; Int_tfMaxitmaximum number of iterations allowed; Double_t*fMu_history[fMaxit] history of values of mu obtained on all iterations to date; Double_tfMutoltermination parameters; Double_tfPhimerit function, defined as the sum of the complementarity gap; Double_t*fPhi_history[fMaxit] history of values of phi obtained on all iterations to date; Double_t*fPhi_min_history[fMaxit] the i-th entry of this array contains the minimum value of phi; Double_t*fRnorm_history[fMaxit] history of values of residual norm obtained on all iterations to date; TQpLinSolverBase*fSys. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TQpSolverBase(); Deconstructor. void Start(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Implements a default starting-point heuristic. While interior-point theory; places fairly loose restrictions on the choice of starting point, the choice; of heuristic can significantly affect the robustness and efficiency of the; algorithm. void DefStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Default starting point. void SteveStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Starting point algoritm according to Stephen Wright. void DumbStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Alternative starting point heuristic: sets the ""complementary"" variables to a large; positive value (based on the norm of the problem data) and the remain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQpSolverBase.html:7531,Inherit,Inheritance,7531,root/html532/TQpSolverBase.html,https://root.cern,https://root.cern/root/html532/TQpSolverBase.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anupcleanup mode (see EFrameCleanup); TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTriangleSetEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. TEveTriangleSetEditor(const TEveTriangleSetEditor& ). TEveTriangleSetEditor& operator=(const TEveTriangleSetEditor& ). virtual ~TEveTriangleSetEditor(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveTriangleSetEditor.html:19803,Inherit,Inheritance,19803,root/html534/TEveTriangleSetEditor.html,https://root.cern,https://root.cern/root/html534/TEveTriangleSetEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from THnBase; enum  { kNoInt; , kValidInt; , kInvalidInt; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from THnBase; static THnBase * CreateHnAny (const char *name, const char *title, const TH1 *h1, Bool_t sparse, Int_t chunkSize=1024 *16);  Create a THn / THnSparse object from a histogram deriving from TH1. ;  ; static THnBase * CreateHnAny (const char *name, const char *title, const THnBase *hn, Bool_t sparse, Int_t chunkSize=1024 *16);  Create a THnSparse (if ""sparse"") or THn from ""hn"", possibly converting THn <-> THnSparse. ;  ;  Protected Attributes inherited from THnBase; TObjArray fAxes;  Axes of the histogram. ;  ; TObjArray fBrowsables;  ! Browser-helpers for each axis ;  ; Double_t fEntries;  Number of entries, spread over chunks. ;  ; std::vector< Double_t > fIntegral;  ! vector with bin weight sums ;  ; enum THnBase:: { ... }  fIntegralStatus;  ! status of integral ;  ; Int_t fNdimensions;  Number of dimensions. ;  ; Double_t fTsumw;  Total sum of weights. ;  ; Double_t fTsumw2;  Total sum of weights squared; -1 if no errors are calculated. ;  ; TArrayD fTsumwx;  Total sum of weight*X for each dimension. ;  ; TArrayD fTsumwx2;  Total sum of weight*X*X for each dimension. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <THnSparse.h>. Inheritance diagram for THnSparse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ THnSparse() [1/3]. THnSparse::THnSparse ; (; const THnSparse & ; ). privatedelete . ◆ THnSpa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnSparse.html:28357,inherit,inherited,28357,doc/master/classTHnSparse.html,https://root.cern,https://root.cern/doc/master/classTHnSparse.html,1,['inherit'],['inherited']
Modifiability,"anvas.; To automate files loading and objects drawing, one can provide number of URL parameters in address string like:. file - name of the file, which will be automatically open with page loading; files - array of file names for loading; json - name of JSON file with stored ROOT object like histogram or canvas; item - item name to be displayed; opt - drawing option for the item; items - array of items name to be displayed; opts - array of drawing options for the items; expand - item name(s) to be expanded in the hierarchy browser; focus - item name to be focused on in the hierarchy browser; title - set browser title; dir - list files in directory on http server, see https://github.com/root-project/jsroot/issues/283; layout - can be ‘simple’, ‘flex’, ‘tabs’, ‘gridNxM’, ‘horizNMK’, ‘vertNMK’; browser - layout of the browser ‘fix’ (default), ‘float’, ‘no’ (hidden), ‘off’ (fully disabled); nobrowser - do not display file browser (same as browser=no); float - display floating browser (same as browser=float); status - configure status line ‘no’ (default), ‘off’ (completely disable), ‘size’; inject - name of extra JavaScript to load, see several examples in demo/ subdir; optimize - drawing optimization 0:off, 1:only large histograms (default), 2:always; palette - id of default color palette, 51..121 - new ROOT6 palette (default 57); interactive - enable/disable interactive functions 0 - disable all, 1 - enable all; noselect - hide file-selection part in the browser (only when file name is specified); mathjax - use MathJax for latex output; latex - ‘off’, ‘symbols’, ‘normal’, ‘mathjax’, ‘alwaysmath’ control of TLatex processor; style - name of TStyle object to define global JSROOT style; toolbar - show canvas tool buttons ‘off’, ‘on’ and ‘popup’, ‘left’ or ‘right’ for position, ‘vert’ for vertical; divsize - fixed size in pixels for main div element like &dvisize=1500x800; canvsize - default canvas size in pixels like &canvsize=1200x800; optstat - settings for stat box, def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html:2272,config,configure,2272,root/htmldoc/guides/JSROOT/JSROOT.html,https://root.cern,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html,2,['config'],['configure']
Modifiability,"anvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static Double_t EpsMch ();  static function returning the machine round-off error ;  ; static TGeoMatrix * GetTran",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBBox.html:14673,inherit,inherited,14673,doc/master/classTGeoBBox.html,https://root.cern,https://root.cern/doc/master/classTGeoBBox.html,1,['inherit'],['inherited']
Modifiability,"anvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. void*fBinData! binary data, assigned with http call; Long_tfBinDataLength! length of binary data; TConditionfCond! condition used to wait for processing; TStringfContent! text content (if any); TStringfContentType! type of content; TStringfFileName! file name; TStringfHeader! response header like ContentEncoding, Cache-Control and so on; TStringfMethod! request method like GET or POST; TStringfPathName! item path; void*fPostData! binary data received with post request; Long_tfPostDataLength! length of binary data; TStringfQuery! additional arguments; TStringfRequestHeader! complete header, provided with request; TStringfTopName! top item name; TStringfUserName! authenticated user name (if any); Int_tfZipping! indicate if content should be zipped. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THttpCallArg(); constructor. ~THttpCallArg(); destructor. TString AccessHeader(TString& buf, const char* name, const char* value = 0, Bool_t doing_set = kFALSE); method used to get or set http header in the string buffer; Header has following format:; field1 : value1\r\n; field2 : value2\r\n; Such format corresponds to header format in HTTP requests. TString CountHeader(const TString& buf, Int_t number = -1111) const; method used to counter number of headers or returns name of specified header. void SetPostData(void* data, Long_t length); set data, posted with the request; buffer should be allocated with malloc(length+1) call,; while last byte will be set to 0; Than one could use post data as null-terminated string. void SetBinData(void* data, Long_t length); set binary data, which will be returned as reply body. void SetPathAndFileName(const char* fullpath); set complete path of requested http element; For instance, it could be ""/fold",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THttpCallArg.html:7634,Inherit,Inheritance,7634,root/html534/THttpCallArg.html,https://root.cern,https://root.cern/root/html534/THttpCallArg.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsDataStore::_cacheIter! Iterator over cached variables; const RooAbsArg*_cacheOwner! Object owning cache contents; TTree*_cacheTree! TTree holding the cached function values; RooArgSetRooAbsDataStore::_cachedVars; Double_t_curWgtWeight of current event; Double_t_curWgtErrWeight of current event; Double_t_curWgtErrHiWeight of current event; Double_t_curWgtErrLoWeight of current event; Bool_t_defCtor! Was object constructed with default ctor?; static Int_t_defTreeBufSize; Bool_tRooAbsDataStore::_doDirtyPropSwitch do (de)activate dirty state propagation when loading a data point; Double_t*_extSumW2Array! External sum of weights array; Double_t*_extWgtArray! External weight array; Double_t*_extWgtErrHiArray! External weight array - high error; Double_t*_extWgtErrLoArray! External weight array - low error; TIterator*RooAbsDataStore::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; TTree*_treeTTree holding the data points; RooArgSetRooAbsDataStore::_vars; RooArgSet_varsww; RooRealVar*_wgtVarPointer to weight variable (if set); TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooTreeDataStore(). RooTreeDataStore(TTree* t, const RooArgSet& vars, const char* wgtVarName = 0); Constructor to facilitate reading of legacy RooDataSets. RooTreeDataStore(const char* name, const char* title, const RooArgSet& vars, const char* wgtVarName = 0). RooTreeDataStore(const char* name, const char* title, const RooAr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooTreeDataStore.html:10138,variab,variables,10138,root/html528/RooTreeDataStore.html,https://root.cern,https://root.cern/root/html528/RooTreeDataStore.html,6,['variab'],"['variable', 'variables']"
Modifiability,"anvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsDataStore::_cacheIter! Iterator over cached variables; const RooAbsArg*_cacheOwner! Object owning cache contents; TTree*_cacheTree! TTree holding the cached function values; RooArgSetRooAbsDataStore::_cachedVars; Double_t_curWgtWeight of current event; Double_t_curWgtErrWeight of current event; Double_t_curWgtErrHiWeight of current event; Double_t_curWgtErrLoWeight of current event; Bool_t_defCtor! Was object constructed with default ctor?; static Int_t_defTreeBufSize; Bool_tRooAbsDataStore::_doDirtyPropSwitch do (de)activate dirty state propagation when loading a data point; Double_t*_extSumW2Array! External sum of weights array; Double_t*_extWgtArray! External weight array; Double_t*_extWgtErrHiArray! External weight array - high error; Double_t*_extWgtErrLoArray! External weight array - low error; TIterator*RooAbsDataStore::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; TTree*_treeTTree holding the data points; RooArgSetRooAbsDataStore::_vars; RooArgSet_varsww; RooRealVar*_wgtVarPointer to weight variable (if set); TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooTreeDataStore(). RooTreeDataStore(TTree* t, const RooArgSet& vars, const char* wgtVarName); Constructor to facilitate reading of legacy RooDataSets. RooTreeDataStore(const char* name, const char* title, const RooArgSet& vars, const char* wgtVarName = 0). RooTreeDataStore(const char* name, const char* title, const RooArgSet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooTreeDataStore.html:10129,variab,variables,10129,root/html526/RooTreeDataStore.html,https://root.cern,https://root.cern/root/html526/RooTreeDataStore.html,3,['variab'],"['variable', 'variables']"
Modifiability,"anvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Float_tfAspectRatiodefines (the ellipse semi-axis in Y)/(the ellipse semi-axis in X); Double_t*fCoTab! Table of cos(fPhi1) .... cos(fPhil+fDphi1); Float_tfDzhalf length in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tfNdivnumber of segments (precision); Int_tTShape::fNumberShape number; Float_tfRmaxellipse semi-axis in X outside; Float_tfRminellipse semi-axis in X inside; Double_t*fSiTab! Table of sin(fPhi1) .... sin(fPhil+fDphi1); TStringTNamed::fTitleobject title; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance Chart:. TObject. ←; TNamed. TAttLine. TAttFill. TAtt3D. ←; TShape. ←; TTUBE. ←. TCONE. TELTU. THYPE. TTUBS; ←. TCONS. TCTUB. Function documentation; TTUBE(); TUBE shape default constructor. TTUBE(const char* name, const char* title, const char* material, Float_t rmin, Float_t rmax, Float_t dz, Float_t aspect = 1); TUBE shape normal constructor. TTUBE(const char* name, const char* title, const char* material, Float_t rmax, Float_t dz); TUBE shape ""simplified"" constructor. TTUBE(const TTUBE& ); copy constructor. TTUBE& operator=(const TTUBE& ); assignement operator. void MakeTableOfCoSin() const; Make table of sine and cosine. ~TTUBE(); TUBE shape default destructor. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to a TUBE. Compute the closest distance of approach from point px,py to each; computed outline point of the TUBE. void SetNumberOfDivisions(Int_t ndiv); Set number of divisions used to draw this tube. void SetPoints(Double_t* points) const; C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTUBE.html:9191,Inherit,Inheritance,9191,root/html602/TTUBE.html,https://root.cern,https://root.cern/root/html602/TTUBE.html,2,['Inherit'],['Inheritance']
Modifiability,"anvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TPolyMarker3D*fPolyMarker3D; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* tree); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the scatter plot with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawPolyMarker3D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-03 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofDrawPolyMarker3D.html:8507,Inherit,Inheritance,8507,root/html604/TProofDrawPolyMarker3D.html,https://root.cern,https://root.cern/root/html604/TProofDrawPolyMarker3D.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TPolyMarker3D*fPolyMarker3D; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* tree); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the scatter plot with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawPolyMarker3D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawPolyMarker3D.html:8507,Inherit,Inheritance,8507,root/html602/TProofDrawPolyMarker3D.html,https://root.cern,https://root.cern/root/html602/TProofDrawPolyMarker3D.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Private Member Functions; static NumBins getNumBinsPerDim (RooArgSet const &vars);  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classParamHistFunc.html:60218,inherit,inherited,60218,doc/master/classParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classParamHistFunc.html,3,['inherit'],['inherited']
Modifiability,"any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Int_t fActive;  active color index ;  ; Pixel_t fCurrentColor;  currently selected color value ;  ; Int_t fLaunchDialog;  flag used for launching color dialog ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorPopup.html:25505,inherit,inherited,25505,doc/master/classTGColorPopup.html,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html,2,['inherit'],['inherited']
Modifiability,"any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGButton.html:24060,inherit,inherited,24060,doc/master/classTGButton.html,https://root.cern,https://root.cern/doc/master/classTGButton.html,1,['inherit'],['inherited']
Modifiability,"any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGLVEntry; static const TGFont * fgDefaultFont = nullptr;  ; static TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGFSContainer.h>. Inheritance diagram for TGFileItem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGFileItem() [1/2]. TGFileItem::TGFileItem ; (; const TGWindow * ; p = nullptr, . const TGPicture * ; bpic = nullptr, . const TGPicture * ; blpic = nullptr, . const TGPicture * ; spic = nullptr, . const TGPicture * ; slpic = nullptr, . TGString * ; n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileItem.html:30818,inherit,inherited,30818,doc/master/classTGFileItem.html,https://root.cern,https://root.cern/doc/master/classTGFileItem.html,4,['inherit'],['inherited']
Modifiability,"any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGLVEntry; static const TGFont * fgDefaultFont = nullptr;  ; static TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TTVLVContainer.h>. Inheritance diagram for TTVLVEntry:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTVLVEntry(). TTVLVEntry::TTVLVEntry ; (; const TGWindow * ; p, . const TGPicture * ; bigpic, . const TGPicture * ; smallpic, . TGString * ; name, . TGString ** ; subnames, . EListViewMode ; ViewMode . ). TTVLVEntry constructor. ; Definition at line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVLVEntry.html:30610,inherit,inherited,30610,doc/master/classTTVLVEntry.html,https://root.cern,https://root.cern/doc/master/classTTVLVEntry.html,4,['inherit'],['inherited']
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html604/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html604/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html602/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html604/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html602/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html604/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html604/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html604/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html604/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html604/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html602/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"any). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow_const.html:2261,Inherit,Inheritance,2261,root/html604/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"anyc(); virtual intbasic_streambuf<char,char_traits<char> >::sync(); virtual basic_streambuf<char,char_traits<char> >::int_typebasic_streambuf<char,char_traits<char> >::uflow(); virtual basic_streambuf<char,char_traits<char> >::int_typebasic_streambuf<char,char_traits<char> >::underflow(); virtual streamsizebasic_streambuf<char,char_traits<char> >::xsgetn(basic_streambuf<char,char_traits<char> >::char_type* __s, streamsize __n); virtual streamsizebasic_streambuf<char,char_traits<char> >::xsputn(const basic_streambuf<char,char_traits<char> >::char_type* __s, streamsize __n). Data Members; protected:. localebasic_streambuf<char,char_traits<char> >::_M_buf_locale; basic_streambuf<char,char_traits<char> >::char_type*basic_streambuf<char,char_traits<char> >::_M_in_beg; basic_streambuf<char,char_traits<char> >::char_type*basic_streambuf<char,char_traits<char> >::_M_in_cur; basic_streambuf<char,char_traits<char> >::char_type*basic_streambuf<char,char_traits<char> >::_M_in_end; basic_streambuf<char,char_traits<char> >::char_type*basic_streambuf<char,char_traits<char> >::_M_out_beg; basic_streambuf<char,char_traits<char> >::char_type*basic_streambuf<char,char_traits<char> >::_M_out_cur; basic_streambuf<char,char_traits<char> >::char_type*basic_streambuf<char,char_traits<char> >::_M_out_end; vector<char>fInputbuffer. private:. vector<char>fLinebuffer; TGTextView*fTextView. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTextViewStreamBuf(TGTextView* textview); TGTextViewStreamBuf constructor. Int_t overflow(int = traits::eof()); Method called to put a character into the controlled output sequence; without changing the current position. TGTextViewStreamBuf(TGTextView* textview). virtual ~TGTextViewStreamBuf(); { }. » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGTextViewStreamBuf.html:6758,Inherit,Inheritance,6758,root/html604/TGTextViewStreamBuf.html,https://root.cern,https://root.cern/root/html604/TGTextViewStreamBuf.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ap); static Ssiz_tAlign(Ssiz_t s); voidAssertElement(Ssiz_t nc) const; voidClobber(Ssiz_t nc); voidInitChar(char c); static Ssiz_tRecommend(Ssiz_t s). private:. voidClone(Ssiz_t nc); voidFormImp(const char* fmt, va_list ap); Ssiz_tGetLongCap() const; char*GetLongPointer(); const char*GetLongPointer() const; Ssiz_tGetLongSize() const; char*GetPointer(); const char*GetPointer() const; char*GetShortPointer(); const char*GetShortPointer() const; Ssiz_tGetShortSize() const; UInt_tHashCase() const; UInt_tHashFoldCase() const; char*Init(Ssiz_t capacity, Ssiz_t nchar); Bool_tIsLong() const; static Ssiz_tMaxSize(); voidSetLongCap(Ssiz_t s); voidSetLongPointer(char* p); voidSetLongSize(Ssiz_t s); voidSetShortSize(Ssiz_t s); voidSetSize(Ssiz_t s); voidUnLink() const; voidZero(). Data Members; public:. enum { kShortMask; kLongMask; kMinCap; kNwords; kAlignment; };; enum EStripType { kLeading; kTrailing; kBoth; };; enum ECaseCompare { kExact; kIgnoreCase; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TString(); TString default ctor. TString(Ssiz_t ic); Create TString able to contain ic characters. TString(const char* s); Create TString and initialize it with string cs. TString(const std::string &s); Create TString and initialize it with string cs. TString(const char* s, Ssiz_t n); Create TString and initialize it with the first n characters of cs. void InitChar(char c); Initialize a string with a single character. TString(char c); Initialize a string with a single character. TString(char c, Ssiz_t s); Initialize the first n locations of a TString with character c. TString(const TString& s); Copy constructor. TString(const TSubString& sub); Copy a TSubString in a TString. TString(const char* a1, Ssiz_t n1, const char* a2, Ssiz_t n2); Special constructor to initialize with the concatenation of a1 and a2. ~TString(); Delete a TString. char * Init(Ssiz_t capacity, Ssiz_t nchar); Private member function returning an empty string represe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TString.html:7844,Inherit,Inheritance,7844,root/html532/TString.html,https://root.cern,https://root.cern/root/html532/TString.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ap. ;  ; virtual void SetOwnerKeyValue (Bool_t ownkeys=kTRUE, Bool_t ownvals=kTRUE);  Set ownership for keys and values. ;  ; virtual void SetOwnerValue (Bool_t enable=kTRUE);  Set whether this map is the owner (enable==true) of its values. ;  ; void Streamer (TBuffer &) override;  Stream all key/value pairs in the map to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this map. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this map. ;  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMap.html:5205,inherit,inherit,5205,doc/master/classTMap.html,https://root.cern,https://root.cern/doc/master/classTMap.html,1,['inherit'],['inherit']
Modifiability,"ap; kGeoCtub; kGeoTrd1; kGeoTrd2; kGeoComb; kGeoClosedShape; kGeoXtru; kGeoParaboloid; kGeoHalfSpace; kGeoHype; kGeoSavePrimitive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; TStringTNamed::fNameobject identifier; Int_tfNsegnumber of segments for drawing; Int_tfNznumber of z planes for drawing; Double_tTGeoBBox::fOrigin[3]box origin; Double_tfPhi1lower phi limit; Double_tfPhi2higher phi limit; Double_tfRmaxouter radius; Double_tfRmininner radius; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; Double_tfTheta1lower theta limit; Double_tfTheta2higher theta limit; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoSphere(); Default constructor. TGeoSphere(Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); Default constructor specifying minimum and maximum radius. TGeoSphere(const char* name, Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); Default constructor specifying minimum and maximum radius. TGeoSphere(Double_t* param, Int_t nparam = 6); Default constructor specifying minimum and maximum radius; param[0] = Rmin; param[1] = Rmax. ~TGeoSphere(); destructor. Double_t Capacity() const; Computes capacity of the shape in [length^3]. void ComputeBBox(); compute bounding box of the sphere; Double_t xmin, xmax, ymin, ymax, zmin, zmax;. void ComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); Compute normal to closest surface from POINT. Int_t IsOnBoundary(Double_t* point) const; Check if a point in local s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoSphere.html:12295,Inherit,Inheritance,12295,root/html532/TGeoSphere.html,https://root.cern,https://root.cern/root/html532/TGeoSphere.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ap; kGeoCtub; kGeoTrd1; kGeoTrd2; kGeoComb; kGeoClosedShape; kGeoXtru; kGeoParaboloid; kGeoHalfSpace; kGeoHype; kGeoSavePrimitive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; TStringTNamed::fNameobject identifier; Int_tfNsegnumber of segments for drawing; Int_tfNznumber of z planes for drawing; Double_tTGeoBBox::fOrigin[3]box origin; Double_tfPhi1lower phi limit; Double_tfPhi2higher phi limit; Double_tfRmaxouter radius; Double_tfRmininner radius; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; Double_tfTheta1lower theta limit; Double_tfTheta2higher theta limit; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoSphere(); Default constructor. TGeoSphere(Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); Default constructor specifying minimum and maximum radius. TGeoSphere(const char* name, Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); Default constructor specifying minimum and maximum radius. TGeoSphere(Double_t* param, Int_t nparam = 6); Default constructor specifying minimum and maximum radius; param[0] = Rmin; param[1] = Rmax; param[2] = theta1; param[3] = theta2; param[4] = phi1; param[5] = phi2. ~TGeoSphere(); destructor. Double_t Capacity() const; Computes capacity of the shape in [length^3]. void ComputeBBox(); compute bounding box of the sphere; Double_t xmin, xmax, ymin, ymax, zmin, zmax;. void ComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); Compute normal to closest surfac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoSphere.html:13275,Inherit,Inheritance,13275,root/html534/TGeoSphere.html,https://root.cern,https://root.cern/root/html534/TGeoSphere.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMatrixDfCovarianceMatrixCovariance matrix; TVectorDfEigenValuesEigenvalue vector of trans; TMatrixDfEigenVectorsEigenvector matrix of trans; TList*fHistogramsList of histograms; Bool_tfIsNormalisedNormalize matrix?; TVectorDfMeanValuesMean value over all data points; TStringTNamed::fNameobject identifier; Int_tfNumberOfDataPointsNumber of data points; Int_tfNumberOfVariablesNumber of variables; TVectorDfOffDiagonalelements of the tridiagonal; TVectorDfSigmasvector of sigmas; Bool_tfStoreDataShould we store input data?; TStringTNamed::fTitleobject title; Double_tfTraceTrace of covarience matrix; TVectorDfUserDataVector of original data points. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPrincipal(); Empty CTOR, Do not use. TPrincipal(Int_t nVariables, Option_t* opt = ""ND""); Ctor. Argument is number of variables in the sample of data; Options are:; N Normalize the covariance matrix (default); D Store input data (default). The created object is named ""principal"" by default. TPrincipal(const TPrincipal& ); copy constructor. TPrincipal& operator=(const TPrincipal& ); assignement operator. ~TPrincipal(); destructor. void AddRow(const Double_t* x). /*; >; Add a data point and update the covariance matrix. The input; array must be fNumberOfVariables long. The Covariance matrix and mean values of the input data is caculated; on the fly by the following equations:. since this is a really fast method, with no rounding errors (please; refer to CERN 72-21 pp. 54-106). The data is stored internally in a TVectorD, in the following; way:. With as defined in the class description.; ; */; . void Browse(TBrowser* b); Browse the TPrincipal object in the TBrowser. void Clear(Option_t* option = """"); Clear the data in Object. Notice, that's not possible to change; the dimension of the original data. const Double_t * GetRow(Int_t row); Return a row of t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPrincipal.html:12251,variab,variables,12251,root/html528/TPrincipal.html,https://root.cern,https://root.cern/root/html528/TPrincipal.html,6,['variab'],['variables']
Modifiability,"ap; static TObject::EStatusBitsTObject::kIsReferenced; static TDictionary::ESTLTypeTDictionary::kList; static TDictionary::ESTLTypeTDictionary::kMap; static TDictionary::ESTLTypeTDictionary::kMultimap; static TDictionary::ESTLTypeTDictionary::kMultiset; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TDictionary::ESTLTypeTDictionary::kNone; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TDictionary::ESTLTypeTDictionary::kSet; static TObject::(anonymous)TObject::kSingleKey; static TDictionary::ESTLTypeTDictionary::kVector; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. const TEnum*fEnumthe enum type; Long64_tfValuethe value for the constant. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEnumConstant(DataMemberInfo_t* info, const char* name, Long64_t value, TEnum* type); Constructor of the TEnumConstant.; Takes as parameters DataMemberInfo, value, and enum type. ~TEnumConstant(); Destructor. TEnumConstant(); {}. TEnumConstant(DataMemberInfo_t* info, const char* name, Long64_t value, TEnum* type). void * GetAddress() const; { auto valPtr = &fValue; return (void*) const_cast<Long64_t*>(valPtr); }. Long64_t GetValue() const; { return fValue; }. const TEnum * GetType() const; { return fEnum; }. const char * GetTypeName() const; { return fEnum->GetQualifiedName(); }. const char * GetFullTypeName() const; { return GetTypeName(); }. » Author: Bianca-Cristina Cristescu 09/07/13 » Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; » Last changed: root/meta:$Id$ » Last generated: 2015-06-30 14:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general pleas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEnumConstant.html:7339,Inherit,Inheritance,7339,root/html602/TEnumConstant.html,https://root.cern,https://root.cern/root/html602/TEnumConstant.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ap<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooErrorVar(const char* name, const char* title, const RooRealVar& input); Construct an lvalue variable representing the error of RooRealVar input. RooErrorVar(const RooErrorVar& other, const char* name = 0). ~RooErrorVar(); Destructor. Double_t getValV(const RooArgSet* set = 0) const; Return value, i.e. error on input variable. Bool_t hasBinning(const char* name) const; Return true if we have binning with given name. const RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE) const; Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE); Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. std::list<std::string> getBinningNames() const; Get a list of all binning names. An empty name implies the default binning.; A 0 pointer should be passed to getBinning in this case. void setBinning(const RooAbsBinning& binning, const char* name = 0); Store given binning with this variable under the given name. void setMin(const char* name, Double_t value); Set the lower bound of the range with the given name to the giv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooErrorVar.html:40951,variab,variable,40951,root/html534/RooErrorVar.html,https://root.cern,https://root.cern/root/html534/RooErrorVar.html,2,['variab'],['variable']
Modifiability,"ap<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooErrorVar(const char* name, const char* title, const RooRealVar& input); Construct an lvalue variable representing the error of RooRealVar input. RooErrorVar(const RooErrorVar& other, const char* name = 0). ~RooErrorVar(); Destructor. Double_t getValV(const RooArgSet* set = 0) const; Return value, i.e. error on input variable. Bool_t hasBinning(const char* name) const; Return true if we have binning with given name. const RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE) const; Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE); Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. void setBinning(const RooAbsBinning& binning, const char* name = 0); Store given binning with this variable under the given name. void setMin(const char* name, Double_t value); Set the lower bound of the range with the given name to the given value; If name is a null pointer, set the lower bound of the default range. void setMax(const char* name, Double_t value); Set the upper bound of the range with the given name to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooErrorVar.html:39060,variab,variable,39060,root/html532/RooErrorVar.html,https://root.cern,https://root.cern/root/html532/RooErrorVar.html,2,['variab'],['variable']
Modifiability,"ap<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:15:18 2015 » Last generated: 2015-03-10 17:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Binding_double_double_int_int_.html:37446,variab,variable,37446,root/html534/RooCFunction3Binding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Binding_double_double_int_int_.html,2,['variab'],['variable']
Modifiability,"ap<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Mon Jul 4 15:22:04 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction3Binding_double_double_int_int_.html:34895,variab,variable,34895,root/html530/RooCFunction3Binding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html530/RooCFunction3Binding_double_double_int_int_.html,1,['variab'],['variable']
Modifiability,"ap<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Nov 3 20:07:23 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction3Binding_double_double_int_int_.html:35274,variab,variable,35274,root/html532/RooCFunction3Binding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html532/RooCFunction3Binding_double_double_int_int_.html,1,['variab'],['variable']
Modifiability,"ap<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 13:07:43 2015 » Last generated: 2015-06-02 13:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Binding_double_unsigned_int_double_double_.html:39048,variab,variable,39048,root/html602/RooCFunction3Binding_double_unsigned_int_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Binding_double_unsigned_int_double_double_.html,2,['variab'],['variable']
Modifiability,"ap<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 15:28:57 2015 » Last generated: 2015-06-02 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction3Binding_double_unsigned_int_double_double_.html:39048,variab,variable,39048,root/html604/RooCFunction3Binding_double_unsigned_int_double_double_.html,https://root.cern,https://root.cern/root/html604/RooCFunction3Binding_double_unsigned_int_double_double_.html,2,['variab'],['variable']
Modifiability,"apInstanceCount() const { return fOnHeap; }; 468 void GetMenuItems(TList *listitems);; 469 TList *GetMenuList() const;; 470 TMethod *GetMethod(const char *method, const char *params, Bool_t objectIsConst = kFALSE);; 471 TMethod *GetMethodWithPrototype(const char *method, const char *proto, Bool_t objectIsConst = kFALSE,; 472 ROOT::EFunctionMatchMode mode = ROOT::kConversionMatch);; 473 TMethod *GetMethodAny(const char *method);; 474 TMethod *GetMethodAllAny(const char *method);; 475 Int_t GetNdata();; 476 ROOT::MergeFunc_t GetMerge() const;; 477 ROOT::ResetAfterMergeFunc_t GetResetAfterMerge() const;; 478 ROOT::NewFunc_t GetNew() const;; 479 ROOT::NewArrFunc_t GetNewArray() const;; 480 Int_t GetNmethods();; 481 TClass *const*GetPersistentRef() const { return fPersistentRef; }; 482 TRealData *GetRealData(const char *name) const;; 483 TVirtualRefProxy *GetReferenceProxy() const { return fRefProxy; }; 484 const ROOT::Detail::TSchemaRuleSet *GetSchemaRules() const;; 485 ROOT::Detail::TSchemaRuleSet *GetSchemaRules(Bool_t create = kFALSE);; 486 const char *GetSharedLibs();; 487 ShowMembersFunc_t GetShowMembersWrapper() const { return fShowMembers; }; 488 EState GetState() const { return fState; }; 489 TClassStreamer *GetStreamer() const;; 490 ClassStreamerFunc_t GetStreamerFunc() const;; 491 ClassConvStreamerFunc_t GetConvStreamerFunc() const;; 492 const TObjArray *GetStreamerInfos() const { return fStreamerInfo; }; 493 TVirtualStreamerInfo *GetStreamerInfo(Int_t version=0, Bool_t isTransient = kFALSE) const;; 494 TVirtualStreamerInfo *GetStreamerInfoAbstractEmulated(Int_t version=0) const;; 495 TVirtualStreamerInfo *FindStreamerInfoAbstractEmulated(UInt_t checksum) const;; 496 const std::type_info *GetTypeInfo() const { return fTypeInfo; };; 497 ; 498 /// @brief Return 'true' if we can guarantee that if this class (or any class in; 499 /// this class inheritance hierarchy) overload TObject::Hash it also starts; 500 /// the RecursiveRemove process from its own destructor.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8h_source.html:25441,inherit,inheritance,25441,doc/master/TClass_8h_source.html,https://root.cern,https://root.cern/doc/master/TClass_8h_source.html,2,['inherit'],['inheritance']
Modifiability,"ape * fClippingShape;  ; Int_t fExplodedView;  ; TGeoManager * fGeoManager;  ; TGeoHMatrix * fGlobal;  ; Bool_t fIsEditable;  ; Bool_t fIsPaintingShape;  ; Bool_t fIsRaytracing;  ; TGeoVolume * fLastVolume;  ; Double_t fMat [9];  ; Int_t fNsegments;  ; Int_t fNVisNodes;  ; TGeoOverlap * fOverlap;  ; Bool_t fPaintingOverlaps;  ; TGeoIteratorPlugin * fPlugin;  ; Bool_t fTopVisible;  ; TGeoVolume * fTopVolume;  ; TString fVisBranch;  ; Int_t fVisLevel;  ; Bool_t fVisLock;  ; Int_t fVisOption;  ; TObjArray * fVisVolumes;  ; TString fVolInfo;  . Additional Inherited Members;  Public Types inherited from TVirtualGeoPainter; enum  EGeoBombOption { kGeoNoBomb = 0; , kGeoBombXYZ = 1; , kGeoBombCyl = 2; , kGeoBombSph = 3; };  ; enum  EGeoVisLevel { kGeoVisLevel = 0; };  ; enum  EGeoVisOption { ;   kGeoVisDefault = 0; , kGeoVisLeaves = 1; , kGeoVisOnly = 2; , kGeoVisBranch = 3; , ;   kGeoVisChanged = 4. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TVirtualGeoPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGeoPainter * GeoPainter ();  Static function returning a pointer to the geometry painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPainter.html:19320,inherit,inherited,19320,doc/master/classTGeoPainter.html,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html,1,['inherit'],['inherited']
Modifiability,"ape(TGeoShape*, TGeoMatrix*) const; virtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual Double_t*GetNorm(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; virtual Double_t*GetPoint(); const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRunTimeShape",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoHalfSpace.html:5117,Inherit,InheritsFrom,5117,root/html532/TGeoHalfSpace.html,https://root.cern,https://root.cern/root/html532/TGeoHalfSpace.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ape(TGeoShape*, TGeoMatrix*) const; virtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual Double_t*GetNorm(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; virtual Double_t*GetPoint(); const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoHalfSpace.html:5724,Inherit,InheritsFrom,5724,root/html534/TGeoHalfSpace.html,https://root.cern,https://root.cern/root/html534/TGeoHalfSpace.html,3,['Inherit'],['InheritsFrom']
Modifiability,"ape); voidTGLOverlayElement::SetRole(TGLOverlayElement::ERole r); voidTGLOverlayElement::SetState(TGLOverlayElement::EState s); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. voidTGLOverlayElement::ProjectionMatrixPushIdentity(). private:. TGLManipSet(const TGLManipSet&); TGLManipSet&operator=(const TGLManipSet&). Data Members; public:. enum EManip { kTrans; kScale; kRotate; kEndType; };; enum TGLOverlayElement::ERole { kUser; kViewer; kAnnotation; kAll; };; enum TGLOverlayElement::EState { kInvisible; kDisabled; kActive; kAllVisible; };. protected:. Bool_tfDrawBBox! also draw bounding-box around physical; TGLManip*fManip[3]! manipulator store; TGLPhysicalShape*TGLPShapeRef::fPShapePointer to referenced physical shape.; TGLOverlayElement::ERoleTGLOverlayElement::fRole; TGLOverlayElement::EStateTGLOverlayElement::fState; TGLManipSet::EManipfType! current manipulator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLManipSet(); Constructor. ~TGLManipSet(); Destructor. void SetPShape(TGLPhysicalShape* shape); Set phys-shape, override of virtual from TGLPShapeRef.; Forward to all managed manipulators. Bool_t MouseEnter(TGLOvlSelectRecord& selRec); Mouse has enetered this element.; Always accept. Bool_t Handle(TGLRnrCtx& rnrCtx, TGLOvlSelectRecord& selRec, Event_t* event); Handle overlay event.; Return TRUE if event was handled. void MouseLeave(); Mouse has left the element. void Render(TGLRnrCtx& rnrCtx); Render the manipulator and bounding-box. void SetManipType(Int_t type); Set manipulator type, range checked. TGLManipSet(const TGLManipSet& ). TGLManipSet& operator=(const TGLManipSet& ). TGLManip* GetCurrentManip() const; { return fManip[fType]; }. Int_t GetManipType() const; { return fType; }. Bool_t GetDrawBBox() const; { return fDrawBBox; }. void SetDrawBBox(Bool_t bb); { fDrawBBox = bb; }. » Author: Matevz Tadel, Feb 2007 » Copyright (C) 19",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLManipSet.html:2343,Inherit,Inheritance,2343,root/html532/TGLManipSet.html,https://root.cern,https://root.cern/root/html532/TGLManipSet.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ape* mother, TGeoMatrix* mat) const; virtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; TGeoScale*GetScale() const; TGeoShape*GetShape() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsReflected() const; Bool_tTGeoShape::IsRunTimeShape() const; static Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoScaledShape.html:5025,Inherit,InheritsFrom,5025,root/html532/TGeoScaledShape.html,https://root.cern,https://root.cern/root/html532/TGeoScaledShape.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ape* mother, TGeoMatrix* mat) const; virtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; TGeoScale*GetScale() const; TGeoShape*GetShape() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsReflected() const; Bool_tTGeoShape::IsRunTimeSha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoScaledShape.html:5632,Inherit,InheritsFrom,5632,root/html534/TGeoScaledShape.html,https://root.cern,https://root.cern/root/html534/TGeoScaledShape.html,3,['Inherit'],['InheritsFrom']
Modifiability,"ape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; std::string _string;  ; std::string * _stringAddr;  . Additional Inherited Members;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStringVar.html:34310,inherit,inherited,34310,doc/master/classRooStringVar.html,https://root.cern,https://root.cern/doc/master/classRooStringVar.html,2,['inherit'],['inherited']
Modifiability,"ape::EManipTGLPhysicalShape::kManipAll; static TGLClip::EModeTGLClip::kOutside; static TGLPhysicalShape::EManipTGLPhysicalShape::kRotateAll; static TGLPhysicalShape::EManipTGLPhysicalShape::kRotateX; static TGLPhysicalShape::EManipTGLPhysicalShape::kRotateY; static TGLPhysicalShape::EManipTGLPhysicalShape::kRotateZ; static TGLPhysicalShape::EManipTGLPhysicalShape::kScaleAll; static TGLPhysicalShape::EManipTGLPhysicalShape::kScaleX; static TGLPhysicalShape::EManipTGLPhysicalShape::kScaleY; static TGLPhysicalShape::EManipTGLPhysicalShape::kScaleZ; static TGLPhysicalShape::EManipTGLPhysicalShape::kTranslateAll; static TGLPhysicalShape::EManipTGLPhysicalShape::kTranslateX; static TGLPhysicalShape::EManipTGLPhysicalShape::kTranslateY; static TGLPhysicalShape::EManipTGLPhysicalShape::kTranslateZ. protected:. TGLClip::EModeTGLClip::fMode; UInt_tTGLClip::fTimeStamp; Bool_tTGLClip::fValid. private:. static const floatfgColor[4]! Fixed color of clip plane. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLClipPlane(); Construct a clip plane object, based on supplied 'plane', with; initial manipulation pivot at 'center', with drawn extents (in; local x/y axes) of 'extents'. Plane can have center pivot translated in all directions, and; rotated round center in X/Y axes , the in-plane axes. It cannot; be scaled. Note theorectically a plane is of course infinite - however we; want to draw the object in viewer - so we fake it with a single; GL face (polygon) - extents defines the width/depth of this -; should be several times scene extents - see Setup(). ~TGLClipPlane(); Destroy clip plane object. void Setup(const TGLBoundingBox& bbox); Setup the clip object for scene encompassed by bbox. void Setup(const TGLVector3& point, const TGLVector3& normal); Setup the clipping plane by point and normal.; Length of the normal determines the size of the plane drawn in; GL viewer. The normal points into the direction of visible half-plane. This only",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLClipPlane.html:4467,Inherit,Inheritance,4467,root/html602/TGLClipPlane.html,https://root.cern,https://root.cern/root/html602/TGLClipPlane.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ape; kGeoInvalidShape; kGeoTorus; kGeoBox; kGeoPara; kGeoSph; kGeoTube; kGeoTubeSeg; kGeoCone; kGeoConeSeg; kGeoPcon; kGeoPgon; kGeoArb8; kGeoEltu; kGeoTrap; kGeoCtub; kGeoTrd1; kGeoTrd2; kGeoComb; kGeoClosedShape; kGeoXtru; kGeoParaboloid; kGeoHalfSpace; kGeoHype; kGeoSavePrimitive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; Double_tfDzhalf length in Z; TStringTNamed::fNameobject identifier; Double_tTGeoBBox::fOrigin[3]box origin; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; TStringTNamed::fTitleobject title; Double_t*fTwist! [4] tangents of twist angles ; Double_tfXY[8][2]list of vertices. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoArb8(); Default ctor. TGeoArb8(Double_t dz, Double_t* vertices = 0); Constructor. If the array of vertices is not null, this should be; in the format : (x0, y0, x1, y1, ... , x7, y7). TGeoArb8(const char* name, Double_t dz, Double_t* vertices = 0); Named constructor. If the array of vertices is not null, this should be; in the format : (x0, y0, x1, y1, ... , x7, y7). TGeoArb8(const TGeoArb8& ); copy constructor. TGeoArb8& operator=(const TGeoArb8& ); assignment operator. ~TGeoArb8(); Destructor. Double_t Capacity() const; Computes capacity of the shape in [length^3]. void ComputeBBox(); Computes bounding box for an Arb8 shape. void ComputeTwist(); Computes tangents of twist angles (angles between projections on XY plane; of corresponding -dz +dz edges). Computes also if the vertices are defined; clockwise or anti-clockwise. Double_t GetTwist(Int_t iseg) const; Get twist for segment I in range [0,3]. Double_t GetClosestEdge(Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoArb8.html:12729,Inherit,Inheritance,12729,root/html532/TGeoArb8.html,https://root.cern,https://root.cern/root/html532/TGeoArb8.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ape; kGeoInvalidShape; kGeoTorus; kGeoBox; kGeoPara; kGeoSph; kGeoTube; kGeoTubeSeg; kGeoCone; kGeoConeSeg; kGeoPcon; kGeoPgon; kGeoArb8; kGeoEltu; kGeoTrap; kGeoCtub; kGeoTrd1; kGeoTrd2; kGeoComb; kGeoClosedShape; kGeoXtru; kGeoParaboloid; kGeoHalfSpace; kGeoHype; kGeoSavePrimitive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; Double_tfDzhalf length in Z; TStringTNamed::fNameobject identifier; Double_tTGeoBBox::fOrigin[3]box origin; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; TStringTNamed::fTitleobject title; Double_t*fTwist! [4] tangents of twist angles ; Double_tfXY[8][2]list of vertices. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoArb8(); Default ctor. TGeoArb8(Double_t dz, Double_t* vertices = 0); Constructor. If the array of vertices is not null, this should be; in the format : (x0, y0, x1, y1, ... , x7, y7). TGeoArb8(const char* name, Double_t dz, Double_t* vertices = 0); Named constructor. If the array of vertices is not null, this should be; in the format : (x0, y0, x1, y1, ... , x7, y7). TGeoArb8(const TGeoArb8& ); copy constructor. TGeoArb8& operator=(const TGeoArb8& ); assignment operator. ~TGeoArb8(); Destructor. Double_t Capacity() const; Computes capacity of the shape in [length^3]. void ComputeBBox(); Computes bounding box for an Arb8 shape. void ComputeTwist(); Computes tangents of twist angles (angles between projections on XY plane; of corresponding -dz +dz edges). Computes also if the vertices are defined; clockwise or anti-clockwise. Double_t GetTwist(Int_t iseg) const; Get twist for segment I in range [0,3]. Double_t GetClosestEdge(const Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoArb8.html:13671,Inherit,Inheritance,13671,root/html534/TGeoArb8.html,https://root.cern,https://root.cern/root/html534/TGeoArb8.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ape; kGeoTorus; kGeoBox; kGeoPara; kGeoSph; kGeoTube; kGeoTubeSeg; kGeoCone; kGeoConeSeg; kGeoPcon; kGeoPgon; kGeoArb8; kGeoEltu; kGeoTrap; kGeoCtub; kGeoTrd1; kGeoTrd2; kGeoComb; kGeoClosedShape; kGeoXtru; kGeoParaboloid; kGeoHalfSpace; kGeoHype; kGeoSavePrimitive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; Double_tfDphiphi extent; TStringTNamed::fNameobject identifier; Double_tTGeoBBox::fOrigin[3]box origin; Double_tfPhi1starting phi; Double_tfRaxial radius; Double_tfRmaxouter radius; Double_tfRmininner radius; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTorus(); Default constructor. TGeoTorus(Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); Constructor without name. TGeoTorus(const char* name, Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); Constructor with name. TGeoTorus(Double_t* params); Constructor based on an array of parameters.; param[0] = R; param[1] = Rmin; param[2] = Rmax; param[3] = Phi1; param[4] = Dphi. Double_t Capacity() const; Computes capacity of the shape in [length^3]. void ComputeBBox(); Compute bounding box of the torus. void ComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); Compute normal to closest surface from POINT. Bool_t Contains(Double_t* point) const; Test if point is inside the torus.; check phi range. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute closest distance from point px,py to each vertex. Double_t Daxis(Double_t* pt, Double_t* dir, Double_t t) const; Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTorus.html:11971,Inherit,Inheritance,11971,root/html532/TGeoTorus.html,https://root.cern,https://root.cern/root/html532/TGeoTorus.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ape; kGeoTorus; kGeoBox; kGeoPara; kGeoSph; kGeoTube; kGeoTubeSeg; kGeoCone; kGeoConeSeg; kGeoPcon; kGeoPgon; kGeoArb8; kGeoEltu; kGeoTrap; kGeoCtub; kGeoTrd1; kGeoTrd2; kGeoComb; kGeoClosedShape; kGeoXtru; kGeoParaboloid; kGeoHalfSpace; kGeoHype; kGeoSavePrimitive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; Double_tfDphiphi extent; TStringTNamed::fNameobject identifier; Double_tTGeoBBox::fOrigin[3]box origin; Double_tfPhi1starting phi; Double_tfRaxial radius; Double_tfRmaxouter radius; Double_tfRmininner radius; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTorus(); Default constructor. TGeoTorus(Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); Constructor without name. TGeoTorus(const char* name, Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); Constructor with name. TGeoTorus(Double_t* params); Constructor based on an array of parameters.; param[0] = R; param[1] = Rmin; param[2] = Rmax; param[3] = Phi1; param[4] = Dphi. Double_t Capacity() const; Computes capacity of the shape in [length^3]. void ComputeBBox(); Compute bounding box of the torus. void ComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); Compute normal to closest surface from POINT. Bool_t Contains(const Double_t* point) const; Test if point is inside the torus.; check phi range. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute closest distance from point px,py to each vertex. Double_t Daxis(const Double_t* pt, const Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTorus.html:12925,Inherit,Inheritance,12925,root/html534/TGeoTorus.html,https://root.cern,https://root.cern/root/html534/TGeoTorus.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"apeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); virtual voidRooAbsRealLValue::setValFast(Double_t value); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. RooLinkedList_altBinning!; RooLinTransBinning_binning; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branche",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooLinearVar.html:36149,Config,ConfigChange,36149,root/html534/RooLinearVar.html,https://root.cern,https://root.cern/root/html534/RooLinearVar.html,1,['Config'],['ConfigChange']
Modifiability,"apeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); virtual Bool_tRooAbsPdf::syncNormalization(const RooArgSet* dset, Bool_t adjustProxies = kTRUE) const; Double_tRooAbsReal::traceEval(const RooArgSet* set) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooObjCacheManager_cacheMgr! The cache manager; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooEffProd.html:36697,Extend,ExtendMode,36697,root/html532/RooEffProd.html,https://root.cern,https://root.cern/root/html532/RooEffProd.html,4,"['Config', 'Extend']","['ConfigChange', 'ExtendMode']"
Modifiability,"apeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); virtual Bool_tRooAbsPdf::syncNormalization(const RooArgSet* dset, Bool_t adjustProxies = kTRUE) const; Double_tRooAbsReal::traceEval(const RooArgSet* set) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealSumPdf.html:37031,Extend,ExtendMode,37031,root/html532/RooRealSumPdf.html,https://root.cern,https://root.cern/root/html532/RooRealSumPdf.html,4,"['Config', 'Extend']","['ConfigChange', 'ExtendMode']"
Modifiability,"apeDirty(const RooAbsArg* source) const; voidsetSimCount(Int_t simCount); virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum GOFOpMode { SimMaster; MPMaster; Slave; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. string_addCoefRangeNameName of reference to be used for RooAddPdf components; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsTestStatistic.html:32930,Config,ConfigChange,32930,root/html534/RooAbsTestStatistic.html,https://root.cern,https://root.cern/root/html534/RooAbsTestStatistic.html,1,['Config'],['ConfigChange']
Modifiability,"apeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooListProxy_coefList; TNamed*_refRangeName; RooRealProxy_x. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooChebychev(). RooChebychev(const char* name, const char* title, RooAbsReal& _x, const RooArgList& _coefList); Constructor. RooChebychev(const RooChebychev& other, const char* name = 0). void selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE). Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Double_t evalAnaInt(const Double_t x) const. TObject* clone(const char* newname) const; { return new RooChebychev(*this, newname); }. virtual ~RooChebychev(); { }. » Last changed: Tue Jun 2 15:29:54 2015 » Last generated: 2015-06-02 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooChebychev.html:44726,Inherit,Inheritance,44726,root/html604/RooChebychev.html,https://root.cern,https://root.cern/root/html604/RooChebychev.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"apeProp); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tRooAbsCachedReal::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsCachedReal::setInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsSelfCachedReal.html:22815,config,config,22815,root/html526/RooAbsSelfCachedReal.html,https://root.cern,https://root.cern/root/html526/RooAbsSelfCachedReal.html,3,['config'],['config']
Modifiability,"apeServer() const; Bool_tisValueServer() const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooAbsArg*_argPointer to content of proxy; Bool_t_isFundIf true proxy contains an lvalue; RooArgSet*RooAbsProxy::_nset! Normalization set to be used for evaluation of RooAbsPdf contents; Bool_t_ownArgIf true proxy owns contents; RooAbsArg*_ownerPointer to owner of proxy; Bool_t_shapeServerIf true contents is shape server of owner; Bool_t_valueServerIf true contents is value server of owner; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooArgProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer, Bool_t shapeServer, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied variable. RooArgProxy(const char* name, const char* desc, RooAbsArg* owner, RooAbsArg& arg, Bool_t valueServer, Bool_t shapeServer, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied variable. The valueServer and shapeServer booleans; control if the inserted client-server link in the owner propagates value and/or; shape dirty flags. If proxyOwnsArg is true, the proxy takes ownership of its component. RooArgProxy(const char* name, RooAbsArg* owner, const RooArgProxy& other); Copy constructor. ~RooArgProxy(); Destructor. Bool_t changePointer(const RooAbsCollection& newServerSet, Bool_t nameChange = kFALSE, Bool_t factoryInitMode = kFALSE); Change proxied object to object of same name in given list. If nameChange is true; the replacement object can have a different name and is identified as the replacement object by; the existence of a boolean attribute ""origName:MyName"" where MyNa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooArgProxy.html:7376,variab,variable,7376,root/html526/RooArgProxy.html,https://root.cern,https://root.cern/root/html526/RooArgProxy.html,6,['variab'],['variable']
Modifiability,"aphical representation. ;  ; std::unique_ptr< TF1Parameters > fParams;  Pointer to Function parameters object (exists only for not-formula functions) ;  ; TObject * fParent {nullptr};  ! Parent object hooking this function (if one) ;  ; std::vector< Double_t > fParErrors;  Array of errors of the fNpar parameters. ;  ; std::vector< Double_t > fParMax;  Array of upper limits of the fNpar parameters. ;  ; std::vector< Double_t > fParMin;  Array of lower limits of the fNpar parameters. ;  ; std::vector< Double_t > fSave;  Array of fNsave function values. ;  ; EFType fType {EFType::kTemplScalar};  ; Double_t fXmax {-1111};  Upper bounds for the range. ;  ; Double_t fXmin {-1111};  Lower bounds for the range. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TF1; enum class  EAddToList { kDefault; , kAdd; , kNo; };  Add to list behavior. More...;  ; enum  EStatusBits { kNotGlobal = (1ULL << ( 10 )); , kNotDraw = (1ULL << ( 9 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF12.html:37730,inherit,inherited,37730,doc/master/classTF12.html,https://root.cern,https://root.cern/doc/master/classTF12.html,3,['inherit'],['inherited']
Modifiability,"aphical representation. ;  ; std::unique_ptr< TF1Parameters > fParams;  Pointer to Function parameters object (exists only for not-formula functions) ;  ; TObject * fParent {nullptr};  ! Parent object hooking this function (if one) ;  ; std::vector< Double_t > fParErrors;  Array of errors of the fNpar parameters. ;  ; std::vector< Double_t > fParMax;  Array of upper limits of the fNpar parameters. ;  ; std::vector< Double_t > fParMin;  Array of lower limits of the fNpar parameters. ;  ; std::vector< Double_t > fSave;  Array of fNsave function values. ;  ; EFType fType {EFType::kTemplScalar};  ; Double_t fXmax {-1111};  Upper bounds for the range. ;  ; Double_t fXmin {-1111};  Lower bounds for the range. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Static Protected Attributes; static std::atomic< Bool_t > fgAbsValue;  ; static std::atomic< Bool_t > fgAddToGlobList;  ; static TF1 * fgCurrent = nullptr;  ; static Bool_t fgRejectPoint = kFALSE;  . Private Member Functions; void DefineNSUMTerm (TObjArray *newFuncs, TObjArray *coeffNames, TString &fullFormula, TString &formula, int termStart, int termEnd, Double_t xmin, Double_t xmax);  Helper functions for NSUM parsing. ;  ; template<class T > ; T EvalParTempl (const T *data, const Double_t *params=nullptr);  Eval for vectorized functions. ;  ; int TermCoeffLength (TString &term);  . Friends; template<class Func > ; struct ROOT::Internal::TF1Builder;  . #include <TF1.h>. Inheritance diagram for TF1:. This browser is not ab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1.html:48099,inherit,inherited,48099,doc/master/classTF1.html,https://root.cern,https://root.cern/doc/master/classTF1.html,1,['inherit'],['inherited']
Modifiability,"aphicsFunction v);  Set graphics context drawing function. ;  ; void SetGraphicsExposures (Bool_t v);  True if graphics exposure should be generated. ;  ; void SetJoinStyle (Int_t v);  Set line join style (kJoinMiter, kJoinRound, kJoinBevel). ;  ; void SetLineStyle (Int_t v);  Set line style (kLineSolid, kLineOnOffDash, kLineDoubleDash). ;  ; void SetLineWidth (Int_t v);  Set line width. ;  ; void SetPlaneMask (ULong_t v);  Set plane mask. ;  ; void SetStipple (Pixmap_t v);  Set 1 plane pixmap for stippling. ;  ; void SetSubwindowMode (Int_t v);  Set sub window mode (kClipByChildren, kIncludeInferiors). ;  ; void SetTile (Pixmap_t v);  Set tile pixmap for tiling operations. ;  ; void SetTileStipXOrigin (Int_t v);  X offset for tile or stipple operations. ;  ; void SetTileStipYOrigin (Int_t v);  Y offset for tile or stipple operations. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGC.html:4091,inherit,inherited,4091,doc/master/classTGGC.html,https://root.cern,https://root.cern/doc/master/classTGGC.html,1,['inherit'],['inherited']
Modifiability,"app/"" ""fcgi://localhost:9000/"" enablereuse=on; More information can be found in FastCGI proxy docu. After restarting apache server one should be able to open address: http://apache_host_name/root.app/. There are many ways to configure user authentication in Apache. Example of digest auth for FastCGI server:; <Location ""/root.app/"">; AuthType Digest; AuthName ""root""; AuthDigestDomain ""/root.app/"" ""root""; AuthDigestProvider file; AuthUserFile ""/srv/auth/auth.txt""; Require valid-user; </Location>; 1.7.2 Configure fastcgi with lighttpd; An example of configuration file for lighttpd server is:; server.modules += ( ""mod_fastcgi"" ); fastcgi.server = (; ""/root.app"" =>; (( ""host"" => ""192.168.1.11"",; ""port"" => 9000,; ""check-local"" => ""disable"",; ""docroot"" => ""/""; )); ); Be aware, that with lighttpd one should specify IP address of the host, where ROOT application is running. Address of the ROOT application will be following: http://lighttpd_host_name/root.app/. Example of authorization configuration for FastCGI connection:; auth.require = ( ""/root.app"" => (; ""method"" => ""digest"",; ""realm"" => ""root"",; ""require"" => ""valid-user""; ) ); 1.8 Integration with existing applications; In many practical cases no change of existing code is required. Opened files (and all objects inside), existing canvas and histograms are automatically scanned by the server and will be available to the users. If necessary, any object can be registered directly to the server with a THttpServer::Register() call.; Central point of integration - when and how THttpServer get access to data from a running application. By default it is done during the gSystem->ProcessEvents() call - THttpServer uses a synchronous timer which is activated every 100 ms. Such approach works perfectly when running macros in an interactive ROOT session.; If an application runs in compiled code and does not contain gSystem->ProcessEvents() calls, two method are available.; 1.8.1 Asynchronous timer; The first method is to configure an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html:11518,config,configuration,11518,root/htmldoc/guides/HttpServer/HttpServer.html,https://root.cern,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html,2,['config'],['configuration']
Modifiability,"apped on z axis of ROOT histogram. The YVar() and ZVar() arguments can be supplied with optional Binning() arguments to control the binning of the Y and Z axes, e.g.; createHistogram(""histo"",x,Binning(-1,1,20), YVar(y,Binning(-1,1,30)), ZVar(z,Binning(""zbinning""))). The caller takes ownership of the returned histogram. TH1* createHistogram(const char* name, const RooAbsRealLValue& xvar, RooLinkedList& argList) const; Internal method implementing createHistogram. RooPlot* plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; Plot (project) PDF on specified frame. If a PDF is plotted in an empty frame, it; will show a unit normalized curve in the frame variable, taken at the present value; of other observables defined for this PDF. If a PDF is plotted in a frame in which a dataset has already been plotted, it will; show a projected curve integrated over all variables that were present in the shown; dataset except for the one on the x-axis. The normalization of the curve will also; be adjusted to the event count of the plotted dataset. An informational message; will be printed for each projection step that is performed. This function takes the following named arguments. Projection control. Slice(const RooArgSet& set) -- Override default projection behaviour by omittting observables listed; in set from the projection, resulting a 'slice' plot. Slicing is usually; only sensible in discrete observables. The slice is position at the 'current'; value of the observable objects. Slice(RooCategory& cat, -- Override default projection behaviour by omittting specified category; const char* label) observable from the projection, resulting i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:43410,variab,variable,43410,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,4,['variab'],['variable']
Modifiability,"appended at the end of the format string. The time; offset has the following format: 'yyyy-mm-dd hh:mm:ss'; Example:. h = new TH1F(""Test"",""h"",3000,0.,200000.);; h->GetXaxis()->SetTimeDisplay(1);; h->GetXaxis()->SetTimeFormat(""%d\/%m\/%y%F2000-02-28 13:00:01"");. This defines the time format being ""dd/mm/yy"" and the time offset as the; February 28th 2003 at 13:00:01. If %F is not specified, the time offset used will be the one defined by:; gStyle->SetTimeOffset. For example like that:. TDatime da(2003,02,28,12,00,00);; gStyle->SetTimeOffset(da.Convert());. void SetTimeOffset(Double_t toffset, Option_t* option = ""local""); Change the time offset; If option = ""gmt"" the time offset is treated as a GMT time. void Streamer(TBuffer& b); Stream an object of class TAxis. void UnZoom(); Reset first & last bin to the full range. TAxis& operator=(const TAxis& ). void Delete(Option_t* = """"); { }. TObject * DrawClone(Option_t* = """") const; {return 0;}. THashList * GetLabels(); {return fLabels;}. Int_t GetNbins() const; { return fNbins; }. TObject * GetParent() const; {return fParent;}. Bool_t GetTimeDisplay() const; {return fTimeDisplay;}. const char * GetTimeFormat() const; {return fTimeFormat.Data();}. const char * GetTitle() const; {return fTitle.Data();}. const TArrayD * GetXbins() const; {return &fXbins;}. Double_t GetXmin() const; {return fXmin;}. Double_t GetXmax() const; {return fXmax;}. Bool_t IsVariableBinSize() const; true if axis has variable bin sizes, false otherwise. void SetDrawOption(Option_t* = """"); { }. void SetParent(TObject* obj); {fParent = obj;}. void SetTimeDisplay(Int_t value); {fTimeDisplay = (value != 0);}. » Author: Rene Brun 12/12/94 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id: TAxis.h 27982 2009-03-28 19:05:50Z brun $ » Last generated: 2009-12-07 15:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAxis.html:19943,variab,variable,19943,root/html526/TAxis.html,https://root.cern,https://root.cern/root/html526/TAxis.html,1,['variab'],['variable']
Modifiability,"apper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngRanLuxGSLRngRanLux(); ROOT::Math::GSLRngRanLuxGSLRngRanLux(const ROOT::Math::GSLRngRanLux&); ROOT::Math::GSLRngRanLuxGSLRngRanLux(ROOT::Math::GSLRngRanLux&&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLux&operator=(const ROOT::Math::GSLRngRanLux&); ROOT::Math::GSLRngRanLux&operator=(ROOT::Math::GSLRngRanLux&&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRandomEngine & operator=(const GSLRandomEngine & eng). Assignment operator : make a deep copy of the contained GSL generator. GSLRngRanLux(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-06-30 14:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__GSLRngRanLux.html:3595,Inherit,Inheritance,3595,root/html602/ROOT__Math__GSLRngRanLux.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__GSLRngRanLux.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"apper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngRanLuxGSLRngRanLux(); ROOT::Math::GSLRngRanLuxGSLRngRanLux(const ROOT::Math::GSLRngRanLux&); ROOT::Math::GSLRngRanLuxGSLRngRanLux(ROOT::Math::GSLRngRanLux&&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLux&operator=(const ROOT::Math::GSLRngRanLux&); ROOT::Math::GSLRngRanLux&operator=(ROOT::Math::GSLRngRanLux&&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRandomEngine & operator=(const GSLRandomEngine & eng). Assignment operator : make a deep copy of the contained GSL generator. GSLRngRanLux(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__GSLRngRanLux.html:3595,Inherit,Inheritance,3595,root/html604/ROOT__Math__GSLRngRanLux.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__GSLRngRanLux.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"approximation valid for small residuals. More...;  ; class  FumiliMaximumLikelihoodFCN;  Extension of the FCNBase for the Fumili method. More...;  ; class  FumiliMinimizer;  Instantiates the seed generator and Minimum builder for the Fumili minimization method. More...;  ; class  FumiliStandardChi2FCN;  Class implementing the standard chi square function, which is the sum of the squares of the figures-of-merit calculated for each measurement point, the individual figures-of-merit being: (the Value predicted by the model-measured Value)/standard deviation. More...;  ; class  FumiliStandardMaximumLikelihoodFCN;  Class implementing the Elements member function for the standard maximum likelihood method. More...;  ; class  FunctionGradient;  ; class  FunctionMinimum;  class holding the full result of the minimization; both internal and external (MnUserParameterState) representation available for the parameters at the Minimum More...;  ; class  gen;  ; class  GenericFunction;  Class from which all the other classes, representing functions, inherit. More...;  ; class  GradientCalculator;  interface class for gradient calculators More...;  ; class  HessianGradientCalculator;  HessianGradientCalculator: class to calculate Gradient for Hessian. More...;  ; class  InitialGradientCalculator;  Class to calculate an initial estimate of the gradient. More...;  ; class  LASquareMatrix;  ; class  LASymMatrix;  Class describing a symmetric matrix of size n. More...;  ; class  LAVector;  ; class  MatrixInverse;  ; class  MatrixInverse< vec, M, T >;  ; class  MinimumBuilder;  ; class  MinimumError;  MinimumError keeps the inv. More...;  ; class  MinimumErrorUpdator;  ; class  MinimumParameters;  ; class  MinimumSeed;  ; class  MinimumSeedGenerator;  base class for seed generators (starting values); the seed generator prepares initial starting values from the input (MnUserParameterState) for the minimization; More...;  ; class  MinimumState;  MinimumState keeps the information (position",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Minuit2.html:3920,inherit,inherit,3920,doc/master/namespaceROOT_1_1Minuit2.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Minuit2.html,1,['inherit'],['inherit']
Modifiability,"apse ();  constructor ;  ; virtual ~TSynapse ();  destructor ;  ; void AdjustWeight ();  adjust the weight based on the error field all ready calculated by CalculateDelta ;  ; void CalculateDelta ();  calculate/adjust the error field for this synapse ;  ; void DecayLearningRate (Double_t rate);  ; Double_t GetDEDw ();  ; Double_t GetDelta ();  ; Double_t GetLearningRate ();  ; Double_t GetWeight ();  ; Double_t GetWeightedDelta ();  get error field of post-neuron weighted by synapse weight ;  ; Double_t GetWeightedValue ();  get output of pre-neuron weighted by synapse weight ;  ; void InitDelta ();  ; virtual TClass * IsA () const;  ; void SetDEDw (Double_t DEDw);  ; void SetLearningRate (Double_t rate);  ; void SetPostNeuron (TNeuron *post);  ; void SetPreNeuron (TNeuron *pre);  ; void SetWeight (Double_t weight);  set synapse weight ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TSynapse.html:1470,inherit,inherited,1470,doc/master/classTMVA_1_1TSynapse.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TSynapse.html,1,['inherit'],['inherited']
Modifiability,apsulates one mini-batch ;  CClassificationSettingsSettings for classificationused to distinguish between different function signatures ;  CLayerLayer defines the layout of a layer ;  CLayerDataLayerData holds the data of one layer ;  CMeanVariance;  CNetNeural net ;  CSettingsSettings for the training of the neural net ;  CSteepestSteepest Gradient Descent algorithm (SGD) ;  CTBatchTBatch ;  CTBatchIteratorTBatchIterator ;  CTCpuThe TCpu architecture class ;  ►CTCpuBufferTCpuBuffer ;  CTDestructor;  CTCpuMatrixThe TCpuMatrix class ;  CTCudaThe TCuda architecture class ;  ►CTCudaDeviceBufferTCudaDeviceBuffer ;  CTDestructor;  CTCudaDeviceReferenceTCudaDeviceReference ;  ►CTCudaHostBufferTCudaHostBuffer ;  CTDestructor;  CTCudaMatrixTCudaMatrix Class ;  CTDataLoaderTDataLoader ;  CTDeviceTDevice ;  CTGradientDescent;  CTLayerGeneric layer class ;  CTNetGeneric neural network class ;  CTReferenceThe reference architecture class ;  CTSharedLayerLayer class width shared weight and bias layers ;  ►NkNN;  CEvent;  CModulekNN;  CNode;  CAbsoluteDeviationLossFunction;  CAbsoluteDeviationLossFunctionBDT;  CAbsValue;  CBDTEventWrapper;  CBinarySearchTree;  CBinarySearchTreeNode;  CBinaryTree;  CCCPruner;  ►CCCTreeWrapper;  CCCTreeNode;  CClassifierFactory;  CClassInfo;  Ccompose_binary_t;  Ccompose_unary_t;  ►CConfig;  CIONames;  CVariablePlotting;  CConfigurable;  CConvergenceTest;  CCostComplexityPruneTool;  CCrossEntropy;  CCrossValidation;  CCrossValidationResult;  CDataInputHandler;  CDataLoader;  CDataSet;  ►CDataSetFactory;  CEventStats;  CDataSetInfo;  CDataSetManager;  CDecisionTree;  CDecisionTreeNode;  CDeleteFunctor_t;  CDTNodeTrainingInfo;  CEnvelopeBase class for all machine learning algorithms ;  CEvent;  CExpectedErrorPruneTool;  CFactory;  CFitterBase;  CGeneticAlgorithm;  CGeneticFitter;  CGeneticGenes;  CGeneticPopulation;  CGeneticRange;  CGiniIndex;  CGiniIndexWithLaplace;  CHuberLossFunction;  CHuberLossFunctionBDT;  CHyperParameterOptimisation;  CHyperPa,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:67591,layers,layers,67591,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,1,['layers'],['layers']
Modifiability,apsulates one mini-batch ;  CClassificationSettingsSettings for classificationused to distinguish between different function signatures ;  CLayerLayer defines the layout of a layer ;  CLayerDataLayerData holds the data of one layer ;  CMeanVariance;  CNetNeural net ;  CSettingsSettings for the training of the neural net ;  CSteepestSteepest Gradient Descent algorithm (SGD) ;  CTBatchTBatch ;  CTBatchIteratorTBatchIterator ;  CTCpuThe TCpu architecture class ;  ►CTCpuBufferTCpuBuffer ;  CTDestructor;  CTCpuMatrixThe TCpuMatrix class ;  CTCudaThe TCuda architecture class ;  ►CTCudaDeviceBufferTCudaDeviceBuffer ;  CTDestructor;  CTCudaDeviceReferenceTCudaDeviceReference ;  ►CTCudaHostBufferTCudaHostBuffer ;  CTDestructor;  CTCudaMatrixTCudaMatrix Class ;  CTDataLoaderTDataLoader ;  CTDeviceTDevice ;  CTGradientDescent;  CTLayerGeneric layer class ;  CTNetGeneric neural network class ;  CTReferenceThe reference architecture class ;  CTSharedLayerLayer class width shared weight and bias layers ;  ►NkNN;  CEvent;  CModulekNN;  CNode;  CAbsoluteDeviationLossFunctionAbsolute Deviation Loss Function ;  CAbsoluteDeviationLossFunctionBDTAbsolute Deviation BDT Loss Function ;  CAbsValue;  CBDTEventWrapper;  CBinarySearchTreeA simple Binary search tree including a volume search method ;  CBinarySearchTreeNodeNode for the BinarySearch or Decision Trees ;  CBinaryTreeBase class for BinarySearch and Decision Trees ;  CCCPrunerA helper class to prune a decision tree using the Cost Complexity method (see Classification and Regression Trees by Leo Breiman et al) ;  ►CCCTreeWrapper;  CCCTreeNode;  CClassifierFactoryThis is the MVA factory ;  CClassInfoClass that contains all the information of a class ;  Ccompose_binary_t;  Ccompose_unary_t;  ►CConfigSingleton class for global configuration settings used by TMVA ;  CIONames;  CVariablePlotting;  CConfigurable;  CConvergenceTestCheck for convergence ;  CCostComplexityPruneToolA class to prune a decision tree using the Cost Complexity met,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:69068,layers,layers,69068,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,1,['layers'],['layers']
Modifiability,"aptive pass for; the calculation of adaptive keys p.d.f.s. The optional weight arguments allows to specify an observable or function; expression in observables that specifies the weight of each event. RooNDKeysPdf(const char* name, const char* title, RooAbsReal& x, RooDataSet& data, RooNDKeysPdf::Mirror mirror = NoMirror, Double_t rho = 1, Double_t nSigma = 3, Bool_t rotate = kTRUE); Backward compatibility constructor for (1-dim) RooKeysPdf. If you are a new user,; please use the first constructor form. RooNDKeysPdf(const char* name, const char* title, RooAbsReal& x, RooAbsReal& y, RooDataSet& data, TString options = ""a"", Double_t rho = 1.0, Double_t nSigma = 3, Bool_t rotate = kTRUE); Backward compatibility constructor for Roo2DKeysPdf. If you are a new user,; please use the first constructor form. RooNDKeysPdf(const RooNDKeysPdf& other, const char* name = 0); Constructor. ~RooNDKeysPdf(). createPdf(Bool_t firstCall = kTRUE) const; evaluation order of constructor. setOptions() const; set the configuration. initialize() const; initialization. loadDataSet(Bool_t firstCall) const; copy the dataset and calculate some useful variables. mirrorDataSet() const; determine mirror dataset.; mirror points are added around the physical boundaries of the dataset; Two steps:; 1. For each entry, determine if it should be mirrored (the mirror configuration).; 2. For each mirror configuration, make the mirror points. loadWeightSet() const. calculateShell(RooNDKeysPdf::BoxInfo* bi) const; determine points in +/- nSigma shell around the box determined by the variable; ranges. These points are needed in the normalization, to determine probability; leakage in and out of the box. calculatePreNorm(RooNDKeysPdf::BoxInfo* bi) const; bi->nEventsBMSW=0.;; bi->nEventsBW=0.;. sortDataIndices(RooNDKeysPdf::BoxInfo* bi = 0) const; sort entries, as needed for loopRange(). calculateBandWidth() const. gauss(vector<Double_t>& x, vector<vector<Double_t> >& weights) const; loop over all closest point to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNDKeysPdf.html:45154,config,configuration,45154,root/html528/RooNDKeysPdf.html,https://root.cern,https://root.cern/root/html528/RooNDKeysPdf.html,4,['config'],['configuration']
Modifiability,"ar () const override;  Return the number of Parameters. ;  ; MultiDimParamFunctionAdapter & operator= (const MultiDimParamFunctionAdapter &rhs);  Assignment operator. ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; void SetParameters (const double *p) override;  Set the parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricFunctionMultiDimTempl< double >; double operator() (const double *x) const;  ; double operator() (const double *x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual bool HasGradient () const;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  . Private Member Functions; double DoEvalPar (const double *x, const double *p) const override;  needed by the interface ;  . Private Attributes; IParamFunction * fFunc;  ; bool fOwn;  . #include <Math/MultiDimParamFunctionAdapter.h>. Inheritance diagram for ROOT::Math::MultiDimParamFunctionAdapter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseFunc. typedef IParamMultiFunction::BaseFunc ROOT::Math::MultiDimParamFunctionAdapter::BaseFunc. Definition at line 45 of file MultiDimParamFunctionAdapter.h. Constructor & Destructor Documentation. ◆ MultiDimParamFunctionAdapter() [1/3]. ROOT::Math::MultiDimParamFunctionAdapter::MultiDimParamFunctionAdapter ; (; const IParamFunction & ; f). inline . Constructor from a parametric one dim function in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html:3068,inherit,inherited,3068,doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html,1,['inherit'],['inherited']
Modifiability,"ar () const;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooArgSet &nset=RooArgSet());  Create a cumulative distribution function of this p.d.f in terms of the observables listed in iset. ;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create an object that represents the integral of the function over one or more observables listed in iset. ;  ; virtual std::unique_ptr< RooAbsReal > createExpectedEventsFunc (const RooArgSet *nset) const;  Returns an object that represents the expected number of events for a given normalization set, similar to how createIntegral() return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvPdf.html:4904,extend,extended,4904,doc/master/classRooNumConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooNumConvPdf.html,1,['extend'],['extended']
Modifiability,"ar *arg);  Process a single high-level expression. ;  ; TClass * resolveClassName (const char *className);  ; std::string varTag (std::string &func, std::vector< std::string > &args);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void checkIndex (UInt_t index);  ; static std::map< std::string, IFace * > & hooks ();  ; static RooFactoryWSTool * of ();  . Protected Attributes; std::vector< std::string > _args;  ; std::string _autoClassPostFix;  ; std::stack< std::string > _autoNamePrefix;  ; Int_t _errorCount = 0;  ; std::map< std::string, std::string > _typeAliases;  ; RooWorkspace * _ws;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static std::map< std::string, IFace * > * _hooks =nullptr;  ; static RooFactoryWSTool * _of = nullptr;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFactoryWSTool.html:19851,inherit,inherited,19851,doc/master/classRooFactoryWSTool.html,https://root.cern,https://root.cern/doc/master/classRooFactoryWSTool.html,1,['inherit'],['inherited']
Modifiability,"ar *cutRange=nullptr) const;  ; TH1 * createHistogram (const char *name, const RooAbsRealLValue &xvar, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) const;  Calls createHistogram(const char *name, const RooAbsRealLValue& xvar, const RooLinkedList& argList) const. ;  ; TH1 * createHistogram (const char *name, const RooAbsRealLValue &xvar, const RooLinkedList &argList) const;  Create and fill a ROOT histogram TH1,TH2 or TH3 with the values of this dataset. ;  ; TH1 * createHistogram (const char *varNameList, const RooCmdArg &binArgX={}, const RooCmdArg &binArgY={}, const RooCmdArg &binArgZ={}) const;  Create and fill a ROOT histogram TH1,TH2 or TH3 with the values of this dataset for the variables with given names. ;  ; TH2F * createHistogram (const RooAbsRealLValue &var1, const RooAbsRealLValue &var2, const char *cuts="""", const char *name=""hist"") const;  Create a TH2F histogram of the distribution of the specified variable using this dataset. ;  ; TH2F * createHistogram (const RooAbsRealLValue &var1, const RooAbsRealLValue &var2, int nx, int ny, const char *cuts="""", const char *name=""hist"") const;  Create a TH2F histogram of the distribution of the specified variable using this dataset. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define default print options, for a given print style. ;  ; void Draw (Option_t *option="""") override;  Forward draw command to data store. ;  ; virtual RooFit::OwningPtr< RooAbsData > emptyClone (const char *newName=nullptr, const char *newTitle=nullptr, const RooArgSet *vars=nullptr, const char *wgtVarName=nullptr) const =0;  ; virtual void fill ();  ; virtual TH1 * fillHistogram (TH1 *hist, const RooArgList &plotVars, const char *cuts="""", const char *cutRange=nullptr) const;  Loop over columns of our tree data and fill the input histogram. ;  ; virtual const Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTreeData.html:3264,variab,variable,3264,doc/master/classRooTreeData.html,https://root.cern,https://root.cern/doc/master/classRooTreeData.html,2,['variab'],['variable']
Modifiability,"ar *cutRange=nullptr) const;  ; TH1 * createHistogram (const char *name, const RooAbsRealLValue &xvar, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) const;  Calls createHistogram(const char *name, const RooAbsRealLValue& xvar, const RooLinkedList& argList) const. ;  ; TH1 * createHistogram (const char *name, const RooAbsRealLValue &xvar, const RooLinkedList &argList) const;  Create and fill a ROOT histogram TH1,TH2 or TH3 with the values of this dataset. ;  ; TH1 * createHistogram (const char *varNameList, const RooCmdArg &binArgX={}, const RooCmdArg &binArgY={}, const RooCmdArg &binArgZ={}) const;  Create and fill a ROOT histogram TH1,TH2 or TH3 with the values of this dataset for the variables with given names. ;  ; TH2F * createHistogram (const RooAbsRealLValue &var1, const RooAbsRealLValue &var2, const char *cuts="""", const char *name=""hist"") const;  Create a TH2F histogram of the distribution of the specified variable using this dataset. ;  ; TH2F * createHistogram (const RooAbsRealLValue &var1, const RooAbsRealLValue &var2, int nx, int ny, const char *cuts="""", const char *name=""hist"") const;  Create a TH2F histogram of the distribution of the specified variable using this dataset. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define default print options, for a given print style. ;  ; void Draw (Option_t *option="""") override;  Forward draw command to data store. ;  ; virtual void fill ();  ; virtual TH1 * fillHistogram (TH1 *hist, const RooArgList &plotVars, const char *cuts="""", const char *cutRange=nullptr) const;  Loop over columns of our tree data and fill the input histogram. ;  ; RealSpans getBatches (std::size_t first=0, std::size_t len=std::numeric_limits< std::size_t >::max()) const;  Write information to retrieve data columns into evalData.spans. ;  ; CategorySpans getCategor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:15179,variab,variable,15179,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,2,['variab'],['variable']
Modifiability,"ar *extensions,; 18428 mg_websocket_data_handler data_func,; 18429 mg_websocket_close_handler close_func,; 18430 void *user_data); 18431{; 18432 struct mg_client_options client_options;; 18433 memset(&client_options, 0, sizeof(client_options));; 18434 client_options.host = host;; 18435 client_options.port = port;; 18436 ; 18437 return mg_connect_websocket_client_impl(&client_options,; 18438 use_ssl,; 18439 error_buffer,; 18440 error_buffer_size,; 18441 path,; 18442 origin,; 18443 extensions,; 18444 data_func,; 18445 close_func,; 18446 user_data);; 18447}; 18448 ; 18449struct mg_connection *; 18450mg_connect_websocket_client_secure_extensions(; 18451 const struct mg_client_options *client_options,; 18452 char *error_buffer,; 18453 size_t error_buffer_size,; 18454 const char *path,; 18455 const char *origin,; 18456 const char *extensions,; 18457 mg_websocket_data_handler data_func,; 18458 mg_websocket_close_handler close_func,; 18459 void *user_data); 18460{; 18461 if (!client_options) {; 18462 return NULL;; 18463 }; 18464 return mg_connect_websocket_client_impl(client_options,; 18465 1,; 18466 error_buffer,; 18467 error_buffer_size,; 18468 path,; 18469 origin,; 18470 extensions,; 18471 data_func,; 18472 close_func,; 18473 user_data);; 18474}; 18475 ; 18476/* Prepare connection data structure */; 18477static void; 18478init_connection(struct mg_connection *conn); 18479{; 18480 /* Is keep alive allowed by the server */; 18481 int keep_alive_enabled =; 18482 !mg_strcasecmp(conn->dom_ctx->config[ENABLE_KEEP_ALIVE], ""yes"");; 18483 ; 18484 if (!keep_alive_enabled) {; 18485 conn->must_close = 1;; 18486 }; 18487 ; 18488 /* Important: on new connection, reset the receiving buffer. Credit; 18489 * goes to crule42. */; 18490 conn->data_len = 0;; 18491 conn->handled_requests = 0;; 18492 conn->connection_type = CONNECTION_TYPE_INVALID;; 18493 mg_set_user_connection_data(conn, NULL);; 18494 ; 18495#if defined(USE_SERVER_STATS); 18496 conn->conn_state = 2; /* init */; 18497#endif; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:548066,config,config,548066,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"ar *extensions,; 18429 mg_websocket_data_handler data_func,; 18430 mg_websocket_close_handler close_func,; 18431 void *user_data); 18432{; 18433 struct mg_client_options client_options;; 18434 memset(&client_options, 0, sizeof(client_options));; 18435 client_options.host = host;; 18436 client_options.port = port;; 18437 ; 18438 return mg_connect_websocket_client_impl(&client_options,; 18439 use_ssl,; 18440 error_buffer,; 18441 error_buffer_size,; 18442 path,; 18443 origin,; 18444 extensions,; 18445 data_func,; 18446 close_func,; 18447 user_data);; 18448}; 18449 ; 18450struct mg_connection *; 18451mg_connect_websocket_client_secure_extensions(; 18452 const struct mg_client_options *client_options,; 18453 char *error_buffer,; 18454 size_t error_buffer_size,; 18455 const char *path,; 18456 const char *origin,; 18457 const char *extensions,; 18458 mg_websocket_data_handler data_func,; 18459 mg_websocket_close_handler close_func,; 18460 void *user_data); 18461{; 18462 if (!client_options) {; 18463 return NULL;; 18464 }; 18465 return mg_connect_websocket_client_impl(client_options,; 18466 1,; 18467 error_buffer,; 18468 error_buffer_size,; 18469 path,; 18470 origin,; 18471 extensions,; 18472 data_func,; 18473 close_func,; 18474 user_data);; 18475}; 18476 ; 18477/* Prepare connection data structure */; 18478static void; 18479init_connection(struct mg_connection *conn); 18480{; 18481 /* Is keep alive allowed by the server */; 18482 int keep_alive_enabled =; 18483 !mg_strcasecmp(conn->dom_ctx->config[ENABLE_KEEP_ALIVE], ""yes"");; 18484 ; 18485 if (!keep_alive_enabled) {; 18486 conn->must_close = 1;; 18487 }; 18488 ; 18489 /* Important: on new connection, reset the receiving buffer. Credit; 18490 * goes to crule42. */; 18491 conn->data_len = 0;; 18492 conn->handled_requests = 0;; 18493 conn->connection_type = CONNECTION_TYPE_INVALID;; 18494 mg_set_user_connection_data(conn, NULL);; 18495 ; 18496#if defined(USE_SERVER_STATS); 18497 conn->conn_state = 2; /* init */; 18498#endif; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:548099,config,config,548099,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"ar *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fEXhigh {nullptr};  [fNpoints] array of X high errors ;  ; Double_t * fEXlow {nullptr};  [fNpoints] array of X low errors ;  ; Double_t * fEYhigh {nullptr};  [fNpoints] array of Y high errors ;  ; Double_t * fEYlow {nullptr};  [fNpoints] array of Y low errors ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphAsymmErrors.html:33905,inherit,inherited,33905,doc/master/classTGraphAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphAsymmErrors.html,2,['inherit'],['inherited']
Modifiability,"ar *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t GetNextRange (Int_t);  Advance to the next range in the file; returns the number of events in the range. ;  ; void Initialize ();  Initialization of the director. ;  . Private Attributes; Long64_t fBaseEvent {-1};  ; ROOT::Internal::TBranchProxyDirector * fDirector {nullptr};  proxying director, owned ;  ; TDirectory * fDirectory {nullptr};  directory (or current file for chains) ;  ; TTreeReader::EEntryStatus fEntryStatus {TTreeReader::kEntryNotLoaded};  status of most recent read request ;  ; Int_t fEvtIndex {-1};  ; Long64_t fLastEntry {-1};  ; TTree * fTree {nullptr};  tree that's read ;  ; std::deque< ROOT::Experimental::Internal::TTreeReaderValueFastBase * > fValues;  readers that use our director ;  . Friends; class ROOT::Experimental::Internal::TTreeReaderValueFastBase;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <ROOT/TTreeReaderFast.hxx>. Inheritance diagram for ROOT::Experimental::TTreeReaderFast:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ iterator. typedef Iterator_t ROOT::Experimental::TTreeReaderFast::iterator. Definition at line 122 of file TTreeReaderFast.hxx. Constructor & Destructor Documentation. ◆ TTreeReaderFast() [1/3]. ROOT::Experimental::TTreeReaderFast::TTreeReaderFast ; (; ). inline . Definition at line 124 of file TTreeReaderFast.hxx. ◆ TTreeReaderFast() [2/3]. TTreeReaderFast::TTreeReaderFast ; (; TTree * ; tree). Definition at line 22 of file TTreeReaderFast.cxx. ◆ TTreeReaderFast() [3/3]. TTreeReaderFast::TTreeReaderFast ; (; const char * ; keyname, . TDirectory * ; dir = nullptr . ). Definition at line 32 of file TTreeReaderFast.cxx. ◆ ~TTreeReaderFast(). TTreeReaderFast::~TTreeReaderFast ; (; ). override . Tell all val",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1TTreeReaderFast.html:11619,inherit,inherited,11619,doc/master/classROOT_1_1Experimental_1_1TTreeReaderFast.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1TTreeReaderFast.html,1,['inherit'],['inherited']
Modifiability,"ar *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TSplinePoly5 * fPoly = nullptr;  [fNp] Array of polynomial terms ;  ;  Protected Attributes inherited from TSpline; Double_t fDelta = -1.;  Distance between equidistant knots. ;  ; TGraph * fGraph = nullptr;  Graph for drawing the knots. ;  ; TH1F * fHistogram = nullptr;  Temporary histogram. ;  ; Bool_t fKstep = kFALSE;  True of equidistant knots. ;  ; Int_t fNp = 0;  Number of knots. ;  ; Int_t fNpx = 100;  Number of points used for graphical representation. ;  ; Double_t fXmax = 0.;  Maximum value of abscissa. ;  ; Double_t fXmin = 0.;  Minimum value of abscissa. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline5.html:20329,inherit,inherited,20329,doc/master/classTSpline5.html,https://root.cern,https://root.cern/doc/master/classTSpline5.html,1,['inherit'],['inherited']
Modifiability,"ar *name) const;  Returns the character value for a named resource. ;  ; TEnv & operator= (const TEnv &)=delete;  . Private Attributes; Bool_t fIgnoreDup;  ; TString fRcName;  ; THashList * fTable;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEnv.h>. Inheritance diagram for TEnv:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEnv() [1/2]. TEnv::TEnv ; (; const TEnv & ; ). privatedelete . ◆ TEnv() [2/2]. TEnv::TEnv ; (; const char * ; name = """"). Create a resource table and read the (possibly) three resource files, i.e. $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>), $HOME/<name> and $PWD/<name>. ; ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You can read additional user defined resource files by creating additional TEnv objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of the $HOME/<name> resource file will be skipped. This might be useful in case the home directory resides on an auto-mounted remote file system and one wan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnv.html:15207,inherit,inherited,15207,doc/master/classTEnv.html,https://root.cern,https://root.cern/doc/master/classTEnv.html,2,['inherit'],['inherited']
Modifiability,"ar *name) override;  Set the name of the TNamed. ;  ; void SetRange (const char *range, double low=std::numeric_limits< double >::quiet_NaN(), double high=std::numeric_limits< double >::quiet_NaN());  ; void SetTitle (const char *title) override;  Set the title of the TNamed. ;  ; bool SetXaxis (const char *name, const char *title, int nbins, const double *bins);  ; bool SetXaxis (const char *name, const char *title, int nbins, double low, double high);  ; bool SetXaxis (const char *title, int nbins, const double *bins);  ; bool SetXaxis (const char *title, int nbins, double low, double high);  ; bool SetXaxis (const RooAbsBinning &binning);  ; bool SetXaxis (int nbins, const double *bins);  ; bool SetXaxis (int nbins, double low, double high);  ; bool SetXaxis (TAxis *ax);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; std::shared_ptr< TStyle > style (TObject *initObject=nullptr, bool autoCreate=true) const;  ; xRooNode variations () const;  ; xRooNode vars () const;  List of variables (observables and parameters) of this node. ;  ; xRooNode Vary (const xRooNode &child);  ; RooWorkspace * ws () const;  The RooWorkspace this node belong to, if any. ;  ; template<typename T > ; T * xget () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html:8135,variab,variables,8135,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,1,['variab'],['variables']
Modifiability,"ar *name, const char *title, RooAbsReal &_intpdf, const RooArgSet &intObs);  Construct projection of input pdf '_intpdf' over observables 'intObs'. ;  ;  RooProjectedPdf (const RooProjectedPdf &other, const char *name=nullptr);  Copy constructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Return analytical integral represent by appropriate element of projection cache. ;  ; TObject * clone (const char *newname) const override;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; RooAbsPdf * createProjection (const RooArgSet &iset) override;  Special version of RooAbsReal::createProjection that deals with projections of projections. ;  ; double expectedEvents (const RooArgSet *nset) const override;  Return expected number of events to be used in calculation of extended likelihood. ;  ; ExtendMode extendMode () const override;  Returns ability of PDF to provide extended likelihood terms. ;  ; bool forceAnalyticalInt (const RooAbsArg &dep) const override;  Force RooRealIntegral to relegate integration of all observables to internal logic. ;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Mark all requested variables as internally integrated. ;  ; void initGenerator (Int_t) override;  Interface for one-time initialization to setup the generator for the specified code. ;  ; TClass * IsA () const override;  ; void printMetaArgs (std::ostream &os) const override;  Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the integration operation. ;  ; bool selfNormalized () const override;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void Stream",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProjectedPdf.html:2215,extend,extendMode,2215,doc/master/classRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classRooProjectedPdf.html,2,['extend'],"['extendMode', 'extended']"
Modifiability,"ar *name=""_pfy"", Int_t firstxbin=1, Int_t lastxbin=-1, Option_t *option="""") const;  Project a 2-D histogram into a profile histogram along Y. ;  ; TH1D * ProjectionX (const char *name=""_px"", Int_t firstybin=0, Int_t lastybin=-1, Option_t *option="""") const;  Project a 2-D histogram into a 1-D histogram along X. ;  ; TH1D * ProjectionY (const char *name=""_py"", Int_t firstxbin=0, Int_t lastxbin=-1, Option_t *option="""") const;  Project a 2-D histogram into a 1-D histogram along Y. ;  ; TH1D * QuantilesX (Double_t prob=0.5, const char *name=""_qx"") const;  Compute the X distribution of quantiles in the other variable Y name is the name of the returned histogram prob is the probability content for the quantile (0.5 is the default for the median) An approximate error for the quantile is computed assuming that the distribution in the other variable is normal. ;  ; TH1D * QuantilesY (Double_t prob=0.5, const char *name=""_qy"") const;  Compute the Y distribution of quantiles in the other variable X name is the name of the returned histogram prob is the probability content for the quantile (0.5 is the default for the median) An approximate error for the quantile is computed assuming that the distribution in the other variable is normal. ;  ; TH2 * Rebin (Int_t ngroup=2, const char *newname="""", const Double_t *xbins=nullptr) override;  Override TH1::Rebin as TH2::RebinX Rebinning in variable binning as for TH1 is not allowed If a non-null pointer is given an error is flagged see RebinX and Rebin2D. ;  ; void SetBinContent (Int_t bin, Double_t content) override;  Set bin content. ;  ; void SetBinContent (Int_t binx, Int_t biny, Double_t content) override;  ; void SetBinContent (Int_t binx, Int_t biny, Int_t, Double_t content) override;  ; virtual void SetShowProjectionX (Int_t nbins=1);  When the mouse is moved in a pad containing a 2-d view of this histogram a second canvas shows the projection along X corresponding to the mouse position along Y. ;  ; virtual void SetShowProjecti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:18040,variab,variable,18040,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['variab'],['variable']
Modifiability,"ar *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static THLimitsFinder * GetLimitsFinder ();  Return pointer to the current finder. ;  ; static void Optimize (Double_t A1, Double_t A2, Int_t nold, Double_t &BinLow, Double_t &BinHigh, Int_t &nbins, Double_t &BWID, Option_t *option="""");  Static function to compute reasonable axis limits. ;  ; static void OptimizeLimits (Int_t nbins, Int_t &newbins, Double_t &xmin, Double_t &xmax, Bool_t isInteger);  Optimize axis limits. ;  ; static void SetLimitsFinder (THLimitsFinder *finder);  This static function can be used to specify a finder derived from THLimitsFinder. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Static Protected Attributes; static THLimitsFinder * fgLimitsFinder = nullptr;  ! Pointer to hist limits finder ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHLimitsFinder.html:9704,inherit,inherited,9704,doc/master/classTHLimitsFinder.html,https://root.cern,https://root.cern/doc/master/classTHLimitsFinder.html,1,['inherit'],['inherited']
Modifiability,"ar *package, TList *loadopts, Bool_t notOnClient=kFALSE, TList *workers=0);  Enable specified package. ;  ; Int_t Exec (const char *cmd, Bool_t plusMaster=kFALSE);  Send command to be executed on the PROOF master and/or slaves. ;  ; Int_t Exec (const char *cmd, const char *ord, Bool_t logtomacro=kFALSE);  Send command to be executed on node of ordinal 'ord' (use ""0"" for master). ;  ; void Feedback (TList *objs);  Get list of feedback objects. ;  ; Long64_t Finalize (const char *queryref, Bool_t force=kFALSE);  Finalize query with reference ref. ;  ; Long64_t Finalize (Int_t query=-1, Bool_t force=kFALSE);  Finalize the qry-th query in fQueries. ;  ; TList * FindDataSets (const char *searchString, const char *optStr="""");  Find datasets, returns in a TList all found datasets. ;  ; Long64_t GetBytesRead () const;  ; Int_t GetClientProtocol () const;  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataPoolUrl () const;  ; TMap * GetDataSetQuota (const char *optStr="""");  returns a map of the quotas of all groups ;  ; TString Getenv (const char *env, const char *ord=""0"");  Get value of environment variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:10820,variab,variable,10820,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,1,['variab'],['variable']
Modifiability,"ar *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStdExceptionHandler.html:14098,inherit,inherited,14098,doc/master/classTStdExceptionHandler.html,https://root.cern,https://root.cern/doc/master/classTStdExceptionHandler.html,2,['inherit'],['inherited']
Modifiability,"ar *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the scatter plot with the given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TPolyMarker3D * fPolyMarker3D;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawPolyMarker3D.html:11926,variab,variable,11926,doc/master/classTProofDrawPolyMarker3D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawPolyMarker3D.html,1,['variab'],['variable']
Modifiability,"ar *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the scatter plot with the given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TProofVectorContainer< Point3D_t > * fPoints;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelectio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawListOfGraphs.html:11955,variab,variable,11955,doc/master/classTProofDrawListOfGraphs.html,https://root.cern,https://root.cern/doc/master/classTProofDrawListOfGraphs.html,1,['variab'],['variable']
Modifiability,"ar *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the scatter plot with the given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TProofVectorContainer< Point4D_t > * fPoints;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelectio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawListOfPolyMarkers3D.html:11976,variab,variable,11976,doc/master/classTProofDrawListOfPolyMarkers3D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawListOfPolyMarkers3D.html,1,['variab'],['variable']
Modifiability,"ar *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Redraw horizontal slider widget. ;  ;  Protected Member Functions inherited from TGDoubleSlider; void ChangeCursor (Event_t *event);  Change the cursor shape depending on the slider area. ;  ; TString GetSString () const;  returns scaling type as string ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDoubleHSlider.html:25146,inherit,inherited,25146,doc/master/classTGDoubleHSlider.html,https://root.cern,https://root.cern/doc/master/classTGDoubleHSlider.html,1,['inherit'],['inherited']
Modifiability,"ar *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Attributes; TGLVContainer * fLVContainer;  ; TSessionViewer * fViewer;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionInputFrame.html:24454,inherit,inherited,24454,doc/master/classTSessionInputFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionInputFrame.html,1,['inherit'],['inherited']
Modifiability,"ar *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions; void * GetSender () override;  ; void SetReady (TSocket *sock);  Called by TSocketHandler::Notify() to signal which socket is ready to be read or written. ;  . Private Attributes; TList * fActive;  ; TList * fDeActive;  ; Bool_t fInterrupt;  ; Bool_t fMainLoop;  ; TSocket * fReady;  . Friends; class TSocketHandler;  ; class TTimeOutTimer;  ; class TXSlave;  ; class TXSocket;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMonitor.html:15180,inherit,inherited,15180,doc/master/classTMonitor.html,https://root.cern,https://root.cern/doc/master/classTMonitor.html,2,['inherit'],['inherited']
Modifiability,"ar *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TContextMenuImp;  TContextMenuImp (TContextMenu *c=nullptr);  ; virtual ~TContextMenuImp ();  ; virtual TContextMenu * GetContextMenu () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGPopupMenu; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContextMenu.html:23213,inherit,inherited,23213,doc/master/classTRootContextMenu.html,https://root.cern,https://root.cern/doc/master/classTRootContextMenu.html,2,['inherit'],['inherited']
Modifiability,"ar *text1, const char *text2="""");  Set small display text (two lines). ;  ; void SetLabelText (const char *text1, const char *text2="""");  Set main label text (two lines). ;  ; void SetMeanValue (Float_t mean);  ; void SetMinMaxScale (Float_t min, Float_t max);  Set min and max scale values. ;  ; void SetOdoValue (Int_t val);  Set actual value of odo meter. ;  ; void SetScaleValue (Float_t val);  Set actual scale (needle position) value. ;  ; void SetScaleValue (Float_t val, Int_t damping);  Set actual scale (needle position) value. ;  ; void SetThresholdColors (EGlowColor col1, EGlowColor col2, EGlowColor col3);  ; void SetThresholds (Float_t th1=0.0, Float_t th2=0.0, Float_t th3=0.0);  ; void StepScale (Float_t step);  Increment/decrement scale (needle position) of ""step"" value. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSpeedo.html:4400,inherit,inherited,4400,doc/master/classTGSpeedo.html,https://root.cern,https://root.cern/doc/master/classTGSpeedo.html,1,['inherit'],['inherited']
Modifiability,"ar *value)Set item field in sniffer.Definition THttpServer.cxx:1463; THttpServer::SetJSROOTvoid SetJSROOT(const char *location)Set location of JSROOT to use with the server.Definition THttpServer.cxx:355; THttpServer::fMutexstd::mutex fMutex! mutex to protect list with argumentsDefinition THttpServer.h:57; THttpServer::fDefaultPagestd::string fDefaultPage! file name for default page nameDefinition THttpServer.h:50; THttpServer::UnregisterWSvoid UnregisterWS(std::shared_ptr< THttpWSHandler > ws)Unregister WS handler.Definition THttpServer.cxx:1272; THttpServer::GetMimeTypestatic const char * GetMimeType(const char *path)Guess mime type base on file extension.Definition THttpServer.cxx:1479; THttpServer::GetSnifferTRootSniffer * GetSniffer() constreturns pointer on objects snifferDefinition THttpServer.h:89; THttpServer::ReplaceJSROOTLinksvoid ReplaceJSROOTLinks(std::shared_ptr< THttpCallArg > &arg, const std::string &version="""")Replaces all references like ""jsrootsys/..."" or other pre-configured pathes.Definition THttpServer.cxx:847; THttpServer::fTerminatedBool_t fTerminated! termination flag, disables all requests processingDefinition THttpServer.h:37; THttpServer::Restrictvoid Restrict(const char *path, const char *options)Restrict access to specified object.Definition THttpServer.cxx:1386; THttpTimerDefinition THttpServer.cxx:42; THttpTimer::fNormalTmoutLong_t fNormalTmoutDefinition THttpServer.cxx:43; THttpTimer::fSlowBool_t fSlowDefinition THttpServer.cxx:44; THttpTimer::fSlowCntInt_t fSlowCntDefinition THttpServer.cxx:45; THttpTimer::Timeoutvoid Timeout() overridetimeout handler used to process http requests in main ROOT threadDefinition THttpServer.cxx:73; THttpTimer::IsSlowBool_t IsSlow() constDefinition THttpServer.cxx:69; THttpTimer::SetSlowvoid SetSlow(Bool_t flag)Definition THttpServer.cxx:53; THttpTimer::fServerTHttpServer & fServerDefinition THttpServer.cxx:48; THttpTimer::THttpTimerTHttpTimer(Long_t milliSec, Bool_t mode, THttpServer &serv)!< server pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THttpServer_8cxx_source.html:65761,config,configured,65761,doc/master/THttpServer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THttpServer_8cxx_source.html,1,['config'],['configured']
Modifiability,"ar *value)Set item field in sniffer.Definition THttpServer.cxx:1463; THttpServer::SetJSROOTvoid SetJSROOT(const char *location)Set location of JSROOT to use with the server.Definition THttpServer.cxx:355; THttpServer::fMutexstd::mutex fMutex! mutex to protect list with argumentsDefinition THttpServer.h:57; THttpServer::fDefaultPagestd::string fDefaultPage! file name for default page nameDefinition THttpServer.h:50; THttpServer::UnregisterWSvoid UnregisterWS(std::shared_ptr< THttpWSHandler > ws)Unregister WS handler.Definition THttpServer.cxx:1272; THttpServer::GetMimeTypestatic const char * GetMimeType(const char *path)Guess mime type base on file extension.Definition THttpServer.cxx:1479; THttpServer::GetSnifferTRootSniffer * GetSniffer() constreturns pointer on objects snifferDefinition THttpServer.h:89; THttpServer::ReplaceJSROOTLinksvoid ReplaceJSROOTLinks(std::shared_ptr< THttpCallArg > &arg, const std::string &version="""")Replaces all references like ""jsrootsys/..."" or other pre-configured pathes.Definition THttpServer.cxx:847; THttpServer::fTerminatedBool_t fTerminated! termination flag, disables all requests processingDefinition THttpServer.h:37; THttpServer::SetTopNamevoid SetTopName(const char *top)set name of top item in objects hierarchyDefinition THttpServer.h:127; THttpServer::Restrictvoid Restrict(const char *path, const char *options)Restrict access to specified object.Definition THttpServer.cxx:1386; THttpTimerDefinition THttpServer.cxx:42; TListA doubly linked list.Definition TList.h:38; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TObjectMother of all ROOT objects.Definition TObject.h:41; TRootSnifferSniffer of ROOT objects, data provider for THttpServer.Definition TRootSniffer.h:115; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; bool. nethttpincTHttpServer.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:46 (GVA Tim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THttpServer_8h_source.html:20515,config,configured,20515,doc/master/THttpServer_8h_source.html,https://root.cern,https://root.cern/doc/master/THttpServer_8h_source.html,1,['config'],['configured']
Modifiability,"ar * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const char * GetInputNeuronTitle (Int_t in);  Returns the name of any neuron from the input layer. ;  ; Int_t GetLayers ();  Returns the number of layers. ;  ; TString GetNeuronFormula (Int_t idx);  Returns the formula used as input for neuron (idx) in the first layer. ;  ; Int_t GetNeurons (Int_t layer);  Returns the number of neurons in given layer. ;  ; const char * GetOutputNeuronTitle (Int_t out);  Returns the name of any neuron from the output layer. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TTree * fAnalysisTree;  ; TTree * fIOTree;  ; TMultiLayerPerceptron * fNetwork;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMLPAnal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMLPAnalyzer.html:11227,inherit,inherited,11227,doc/master/classTMLPAnalyzer.html,https://root.cern,https://root.cern/doc/master/classTMLPAnalyzer.html,1,['inherit'],['inherited']
Modifiability,"ar * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooSimSplitGenContext (const RooSimSplitGenContext &other);  ; RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs) override;  this method is empty because it is not used by this context ;  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  this method is empty because it is not used in this type of context ;  ; void initGenerator (const RooArgSet &theEvent) override;  Perform one-time initialization of generator context. ;  ;  Protected Member Functions inherited from RooAbsGenContext; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooArgSet _allVarsPdf;  All pdf variables. ;  ; double * _fracThresh;  fraction thresholds ;  ; std::vector< int > _gcIndex;  Index value corresponding to component. ;  ; std::vector< RooAbsGenContext * > _gcList;  List of component generator contexts. ;  ; RooAbsCategoryLValue * _idxCat;  Clone of index category. ;  ; TString _idxCatName;  Name of index category. ;  ; RooArgSet _idxCatSet;  Owner of index category components. ;  ; Int_t _numPdf;  Number of generated PDFs. ;  ; const RooSimultaneous * _pdf;  Original PDF. ;  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimSplitGenContext.html:14423,inherit,inherited,14423,doc/master/classRooSimSplitGenContext.html,https://root.cern,https://root.cern/doc/master/classRooSimSplitGenContext.html,1,['inherit'],['inherited']
Modifiability,"ar * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; enum  { kSonsInvisible = (1ULL << ( 17 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TNode (const TNode &);  copy constructor ;  ; TNode & operator= (const TNode &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TRotMatrix * fMatrix;  ; TList * fNodes;  ; TString fOption;  ; TNode * fParent;  ; TShape * fShape;  ; Int_t fVisibility;  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNode.html:16946,inherit,inherited,16946,doc/master/classTNode.html,https://root.cern,https://root.cern/doc/master/classTNode.html,2,['inherit'],['inherited']
Modifiability,"ar * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGlobal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; const TEnum * fEnum;  ; Long64_t fValue;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForward",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnumConstant.html:12069,inherit,inherited,12069,doc/master/classTEnumConstant.html,https://root.cern,https://root.cern/doc/master/classTEnumConstant.html,2,['inherit'],['inherited']
Modifiability,"ar * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TCollection * fFolders;  ; Bool_t fIsOwner;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TFolder (const TFolder &folder)=delete;  ; void operator= (const TFolder &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFolder.h>. Inheritance diagram for TFolder:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFolder.html:15769,inherit,inherited,15769,doc/master/classTFolder.html,https://root.cern,https://root.cern/doc/master/classTFolder.html,1,['inherit'],['inherited']
Modifiability,"ar * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void FindMomentumLimits (TEveElement *el, Bool_t recurse=kTRUE);  Loop over track elements of argument el and find highest pT and p. ;  ; Double_t RoundMomentumLimit (Double_t x);  Round the momentum limit up to a nice value. ;  ; void SanitizeMinMaxCuts ();  Set Min/Max cuts so that they are within detected limits. ;  ;  Protected Member Functions inherited from TEveElement",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackList.html:33978,inherit,inherited,33978,doc/master/classTEveTrackList.html,https://root.cern,https://root.cern/doc/master/classTEveTrackList.html,2,['inherit'],['inherited']
Modifiability,ar * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveProjected; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetDepthLocal (Float_t d) override;  This is not needed for functionality as SetDepth(Float_t d) is overriden – but SetDepthLocal() is abstract. ;  ;  Prot,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackListProjected.html:35352,inherit,inherited,35352,doc/master/classTEveTrackListProjected.html,https://root.cern,https://root.cern/doc/master/classTEveTrackListProjected.html,2,['inherit'],['inherited']
Modifiability,"ar * DeclFileName ();  ; static TSelector * GetSelector (const char *filename);  The code in filename is loaded (interpreted or compiled, see below), filename must contain a valid class implementation derived from TSelector. ;  ; static bool IsStandardDraw (const char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kWarn = (1ULL << ( 12 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual bool CompileVariables (const char *varexp="""", const char *selection="""");  Compile input variables and selection expression. ;  ; virtual void InitArrays (Int_t newsize);  Initialization of the primitive type arrays if the new size is bigger than the available space. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fAction;  ! Action type ;  ; bool fCleanElist;  True if original Tree elist must be saved. ;  ; Long64_t fCurrentSubEntry;  Current subentry when fSelectMultiple is true. Used to fill TEntryListArray. ;  ; Int_t fDimension;  Dimension of the current expression. ;  ; Long64_t fDraw;  ! Last entry loop number when",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorDraw.html:13119,inherit,inherited,13119,doc/master/classTSelectorDraw.html,https://root.cern,https://root.cern/doc/master/classTSelectorDraw.html,1,['inherit'],['inherited']
Modifiability,"ar * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TNetXNGFile (const TNetXNGFile &other);  ; virtual Bool_t GetVectorReadLimits ();  Find the server-specific readv config params. ;  ; virtual Bool_t IsUseable () const;  Check the file is open and isn't a zombie. ;  ; TNetXNGFile & operator= (const TNetXNGFile &other);  ; virtual void SetEnv ();  Map ROOT and xrootd environment variables. ;  . Private Attributes; XrdCl::File * fFile;  ; XrdSysCondVar * fInitCondVar;  ; int fMode;  ; TString fNewUrl;  ; Int_t fQueryReadVParams;  ; Int_t fReadvIorMax;  ; Int_t fReadvIovMax;  ; XrdCl::URL * fUrl;  . Additional Inherited Members;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More..",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetXNGFile.html:29263,config,config,29263,doc/master/classTNetXNGFile.html,https://root.cern,https://root.cern/doc/master/classTNetXNGFile.html,1,['config'],['config']
Modifiability,"ar * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html:14204,inherit,inherited,14204,doc/v632/classROOT_1_1RBrowserTimer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html,33,['inherit'],['inherited']
Modifiability,"ar * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void BuildCellIdCache () override;  Build list of drawn cell IDs. For more information see TEveCaloLegoGL:DirectDraw(). ;  ;  Protected Member Functions inherited from TEveCaloViz; void AssignCaloVizParameters (TEveCaloViz *cv);  Assign parameters from given model. ;  ; void SetupColorHeight (Float_t value, Int_t slice, Float_t &height) const;  Set color and height for a given value and slice using slice color or TEveRGBAPalette. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloLego.html:36245,inherit,inherited,36245,doc/master/classTEveCaloLego.html,https://root.cern,https://root.cern/doc/master/classTEveCaloLego.html,1,['inherit'],['inherited']
Modifiability,"ar * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Types; enum  { ;   attrLine = 0x1; , attrFill = 0x2; , attrMarker = 0x4; , attrText = 0x8; , ;   attrAll = 0xf. };  !< object to store all painting, owned by TWebPS object More...;  . Protected Member Functions; Float_t * StoreOperation (const std::string &oper, unsigned attrkind, int opersize=0);  Store operation identifier with appropriate attributes. ;  . Protected Attributes; TWebPainting * fPainting {nullptr};  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TWebPadPainter (const TWebPadPainter &rhs)=delete;  ;  TWebPadPainter (TWebPadPainter &&rhs)=delete;  ; TWebPadPainter & operator= (const TWebPadPainter &rhs)=delete;  ; TWebPadPainter & operator= (TWebPadPainter &&rhs)=delete;  . Friends; class TWebCanvas;  . Additional Inherite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPadPainter.html:11125,inherit,inherited,11125,doc/master/classTWebPadPainter.html,https://root.cern,https://root.cern/doc/master/classTWebPadPainter.html,1,['inherit'],['inherited']
Modifiability,"ar ; (; const char * ; name, . const char * ; title, . const char * ; inFormula, . const RooArgList & ; dependents, . bool ; checkVariables = true . ). Constructor with formula expression and list of input variables. ; Parameters. [in]nameName of the formula. ; [in]titleTitle of the formula. ; [in]inFormulaExpression to be evaluated. ; [in]dependentsVariables that should be passed to the formula. ; [in]checkVariablesCheck that all variables from dependents are used in the expression. . Definition at line 79 of file RooFormulaVar.cxx. ◆ RooFormulaVar() [3/4]. RooFormulaVar::RooFormulaVar ; (; const char * ; name, . const char * ; title, . const RooArgList & ; dependents, . bool ; checkVariables = true . ). Constructor with formula expression, title and list of input variables. ; Parameters. [in]nameName of the formula. ; [in]titleFormula expression. Will also be used as the title. ; [in]dependentsVariables that should be passed to the formula. ; [in]checkVariablesCheck that all variables from dependents are used in the expression. . Definition at line 102 of file RooFormulaVar.cxx. ◆ RooFormulaVar() [4/4]. RooFormulaVar::RooFormulaVar ; (; const RooFormulaVar & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 122 of file RooFormulaVar.cxx. Member Function Documentation. ◆ binBoundaries(). std::list< double > * RooFormulaVar::binBoundaries ; (; RooAbsRealLValue & ; obs, . double ; xlo, . double ; xhi . ); const. overridevirtual . Forward the plot sampling hint from the p.d.f. that defines the observable obs. ; Reimplemented from RooAbsReal.; Definition at line 237 of file RooFormulaVar.cxx. ◆ Class(). static TClass * RooFormulaVar::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooFormulaVar::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooFormulaVar::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormulaVar.html:63883,variab,variables,63883,doc/master/classRooFormulaVar.html,https://root.cern,https://root.cern/doc/master/classRooFormulaVar.html,1,['variab'],['variables']
Modifiability,"ar ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t unsigned char prop_list Atom_t Atom_t Atom_t Time_t UChar_t lenDefinition TGWin32VirtualXProxy.cxx:249; namechar name[80]Definition TGX11.cxx:110; TInterpreterValue.h; TInterpreter.h; gClingR__EXTERN TInterpreter * gClingDefinition TInterpreter.h:574; gInterpreter#define gInterpreterDefinition TInterpreter.h:573; TMethodCall.h; TMethod.h; gDebugInt_t gDebugDefinition TROOT.cxx:597; TROOT.h; gROOTMutexR__EXTERN TVirtualMutex * gROOTMutexDefinition TROOT.h:63; gROOT#define gROOTDefinition TROOT.h:406; TRegexp.h; R__LOCKGUARD#define R__LOCKGUARD(mutex)Definition TVirtualMutex.h:95; ROOT::v5::TFormulaThe FORMULA class (ROOT version 5)Definition TFormula.h:65; ROOT::v5::TFormula::GetParametersvirtual Double_t * GetParameters() constDefinition TFormula.h:243; ROOT::v5::TFormula::GetExpFormulavirtual TString GetExpFormula(Option_t *option="""") constReconstruct the formula expression from the internal TFormula member variables.Definition TFormula_v5.cxx:3022; ROOT::v5::TFormula::Streamervoid Streamer(TBuffer &b, const TClass *onfile_class)Stream a class object.Definition TFormula_v5.cxx:3460; TBufferBuffer base class used for serializing objects.Definition TBuffer.h:43; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClass::GetListOfAllPublicMethodsconst TList * GetListOfAllPublicMethods(Bool_t load=kTRUE)Returns a list of all public methods of this class and its base classes.Definition TClass.cxx:3912; TClass::GetClassstatic TClass * GetClass(const char *name, Bool_t load=kTRUE, Bool_t silent=kFALSE)Static method returning pointer to TClass of the specified class name.Definition TClass.cxx:3035; TF11-Dim function classDefinition TF1.h:233; TF1::GetFormulavirtual TFormula * GetFormula()Definition TF1.h:481; TFormulaFunctionHelper class for TFormula.Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:150916,variab,variables,150916,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"ar ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h offsetDefinition TGWin32VirtualXProxy.cxx:245; namechar name[80]Definition TGX11.cxx:110; ROOT::Experimental::Detail::RLogBuilderBuilds a diagnostic entry, emitted by the static RLogManager upon destruction of this builder,...Definition RLogger.hxx:213; ROOT::Experimental::Detail::RLogBuilder::RLogBuilderRLogBuilder(ELogLevel level, RLogChannel &channel)Definition RLogger.hxx:218; ROOT::Experimental::Detail::RLogBuilder::RLogBuilderRLogBuilder(ELogLevel level, RLogChannel &channel, const std::string &filename, int line, const std::string &funcname)Definition RLogger.hxx:219; ROOT::Experimental::Detail::RLogBuilder::fEntryRLogEntry fEntryThe log entry to be built.Definition RLogger.hxx:215; ROOT::Experimental::Detail::RLogBuilder::~RLogBuilder~RLogBuilder()Emit the log entry through the static log manager.Definition RLogger.hxx:226; ROOT::Experimental::RLogChannelA log configuration for a channel, e.g.Definition RLogger.hxx:101; ROOT::Experimental::RLogChannel::RLogChannelRLogChannel(const std::string &name)Construct a log channel given its name, which is part of the diagnostics.Definition RLogger.hxx:116; ROOT::Experimental::RLogChannel::fVerbosityELogLevel fVerbosityVerbosity of this channel. By default, use the global verbosity.Definition RLogger.hxx:106; ROOT::Experimental::RLogChannel::RLogChannelRLogChannel()=defaultConstruct an anonymous channel.; ROOT::Experimental::RLogChannel::GetEffectiveVerbosityELogLevel GetEffectiveVerbosity(const RLogManager &mgr) constDefinition RLogger.hxx:313; ROOT::Experimental::RLogChannel::fNamestd::string fNameName as shown in diagnostics.Definition RLogger.hxx:103; ROOT::Experimental::RLogChannel::GetVerbosityELogLevel GetVerbosity() constDefinition RLogger.hxx:123; ROOT::Experimental::RLogChannel::SetVerbosityELogLevel SetVerbosity(ELogLevel verbosity)Definition RLogger.hxx:118; ROOT::Experimental::RLog",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RLogger_8hxx_source.html:16340,config,configuration,16340,doc/master/RLogger_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RLogger_8hxx_source.html,1,['config'],['configuration']
Modifiability,"ar RooAbsArg Bool bool shapeServer;  ; const char RooAbsArg Bool bool bool shapeServer;  ; const char RooAbsArg Bool valueServer;  ; const char RooAbsArg Bool bool bool valueServer;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooArgProxy; virtual void changeDataSet (const RooArgSet *newNormSet);  Change the normalization set that should be offered to the content objects getVal() when evaluated. ;  ; bool changePointer (const RooAbsCollection &newServerSet, bool nameChange=false, bool factoryInitMode=false) override;  Change proxied object to object of same name in given list. ;  ; bool changePointer (std::unordered_map< RooAbsArg *, RooAbsArg * > const &replacements) override;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from RooAbsProxy; virtual void changeNormSet (const RooArgSet *newNormSet);  Destructor. ;  ;  Protected Attributes inherited from RooArgProxy; RooAbsArg * _arg = nullptr;  Pointer to content of proxy. ;  ; bool _isFund = true;  If true proxy contains an lvalue. ;  ; bool _ownArg = false;  If true proxy ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTemplateProxy.html:19537,inherit,inherited,19537,doc/master/classRooTemplateProxy.html,https://root.cern,https://root.cern/doc/master/classRooTemplateProxy.html,2,['inherit'],['inherited']
Modifiability,"ar Sig "" + GetInputVar( ivar ), (*fVarHistS_smooth)[ivar], PDF::kSpline2 );; 1210 (*fVarPdfB)[ivar] = new PDF( TString(GetName()) + "" PDF Var Bkg "" + GetInputVar( ivar ), (*fVarHistB_smooth)[ivar], PDF::kSpline2 );; 1211 }; 1212}; 1213 ; 1214////////////////////////////////////////////////////////////////////////////////; 1215/// read the cuts from stream; 1216 ; 1217void TMVA::MethodCuts::ReadWeightsFromStream( std::istream& istr ); 1218{; 1219 TString dummy;; 1220 UInt_t dummyInt;; 1221 ; 1222 // first the dimensions; 1223 istr >> dummy >> dummy;; 1224 // coverity[tainted_data_argument]; 1225 istr >> dummy >> fNbins;; 1226 ; 1227 // get rid of one read-in here because we read in once all ready to check for decorrelation; 1228 istr >> dummy >> dummy >> dummy >> dummy >> dummy >> dummy >> dummyInt >> dummy ;; 1229 ; 1230 // sanity check; 1231 if (dummyInt != Data()->GetNVariables()) {; 1232 Log() << kFATAL << ""<ReadWeightsFromStream> fatal error: mismatch ""; 1233 << ""in number of variables: "" << dummyInt << "" != "" << Data()->GetNVariables() << Endl;; 1234 }; 1235 //SetNvar(dummyInt);; 1236 ; 1237 // print some information; 1238 if (fFitMethod == kUseMonteCarlo) {; 1239 Log() << kWARNING << ""Read cuts optimised using sample of MC events"" << Endl;; 1240 }; 1241 else if (fFitMethod == kUseMonteCarloEvents) {; 1242 Log() << kWARNING << ""Read cuts optimised using sample of MC events"" << Endl;; 1243 }; 1244 else if (fFitMethod == kUseGeneticAlgorithm) {; 1245 Log() << kINFO << ""Read cuts optimised using Genetic Algorithm"" << Endl;; 1246 }; 1247 else if (fFitMethod == kUseSimulatedAnnealing) {; 1248 Log() << kINFO << ""Read cuts optimised using Simulated Annealing algorithm"" << Endl;; 1249 }; 1250 else if (fFitMethod == kUseEventScan) {; 1251 Log() << kINFO << ""Read cuts optimised using Full Event Scan"" << Endl;; 1252 }; 1253 else {; 1254 Log() << kWARNING << ""unknown method: "" << fFitMethod << Endl;; 1255 }; 1256 Log() << kINFO << ""in "" << fNbins << "" signal efficiency bin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8cxx_source.html:46384,variab,variables,46384,doc/master/MethodCuts_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8cxx_source.html,1,['variab'],['variables']
Modifiability,"ar name[80]Definition TGX11.cxx:110; Where <SystemName> is either Unix, WinNT, MacOS or Vms, <RootName> the name as given in the TApplication ctor (or ""RootApp"" in case no explicit TApplication derived object was created), <ProgName> the current program name and <name> the resource name, with optionally a type specification. <value> can be either a string, an integer, a float/double or a boolean with the values TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as an integer 0 or 1. The options [+] allows the concatenation of values to the same resource name.; E.g.: Unix.Rint.Root.DynamicPath: .:$(ROOTSYS)/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.ObjStat: 1; Debugvoid Debug(Int_t level, const char *fmt,...)Definition TTreeProxyGenerator.cxx:79; FALSE#define FALSEDefinition mesh.c:45; <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"". A # in the first column starts comment line.; Note that the environment variables (like $ROOTSYS) need to be surrounded in parentheses in order to be expanded.; For the currently defined resources (and their default values) see $ROOTSYS/etc/system.rootrc.; Note that the .rootrc config files contain the config for all ROOT based applications.; To add new entries to a TEnv: TEnv env("".myfile"");; env.SetValue(""myname"",""value"");; env.SaveLevel(kEnvLocal);; kEnvLocal@ kEnvLocalDefinition TEnv.h:72; TEnvThe TEnv class reads config files, by default named .rootrc.Definition TEnv.h:124; All new entries will be saved in the file corresponding to the first SaveLevel() command. If Save() is used, new entries go into the local file by default. ; Definition at line 124 of file TEnv.h. Public Member Functions;  TEnv (const char *name="""");  Create a resource table and read the (possibly) three resource files, i.e. $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>), $HOME/<name> and $PWD/<name>. ;  ; virtual ~TEnv ();  Delete the resource table. ;  ; Bool_t Defined (const char *name) const;  ; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnv.html:3005,variab,variables,3005,doc/master/classTEnv.html,https://root.cern,https://root.cern/doc/master/classTEnv.html,1,['variab'],['variables']
Modifiability,"ar type = 'F', Double_t min = 0, Double_t max = 0); voidAddVariable(const TString& expression, const TString& title, const TString& unit, char type = 'F', Double_t min = 0, Double_t max = 0); virtual voidTObject::AppendPad(Option_t* option = """"); TMVA::MethodBase*BookMethod(TString theMethodName, TString methodTitle, TString theOption = """"); TMVA::MethodBase*BookMethod(TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """"); TMVA::MethodBase*BookMethod(TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString); virtual voidTObject::Browse(TBrowser* b); voidTMVA::Configurable::CheckForUnusedOptions() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; TMVA::ConfigurableTMVA::Configurable::Configurable(const TString& theOption = """"); TMVA::ConfigurableTMVA::Configurable::Configurable(const TMVA::Configurable&); virtual voidTObject::Copy(TObject& object) const; TTree*CreateEventAssignTrees(const TString& name); virtual voidTObject::Delete(Option_t* option = """")MENU ; voidDeleteAllMethods(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; voidEvaluateAllMethods(); voidEvaluateAllVariables(TString options = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); TMVA::FactoryFactory(const TMVA::Factory&); TMVA::FactoryFactory(TString theJobName, TFile* theTargetFile, TString theOption = """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Factory.html:3861,Config,Configurable,3861,root/html602/TMVA__Factory.html,https://root.cern,https://root.cern/root/html602/TMVA__Factory.html,2,['Config'],['Configurable']
Modifiability,"ar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Mon Jul 4 15:22:00 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction2PdfBinding_double_unsigned_int_double_.html:41695,variab,variable,41695,root/html530/RooCFunction2PdfBinding_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html530/RooCFunction2PdfBinding_double_unsigned_int_double_.html,1,['variab'],['variable']
Modifiability,"ar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Sat Oct 9 06:58:12 2010 » Last generated: 2010-10-09 06:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooCFunction2PdfBinding_double_unsigned_int_double_.html:41133,variab,variable,41133,root/html528/RooCFunction2PdfBinding_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html528/RooCFunction2PdfBinding_double_unsigned_int_double_.html,1,['variab'],['variable']
Modifiability,"ar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Nov 3 20:07:19 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction2PdfBinding_double_unsigned_int_double_.html:42102,variab,variable,42102,root/html532/RooCFunction2PdfBinding_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html532/RooCFunction2PdfBinding_double_unsigned_int_double_.html,1,['variab'],['variable']
Modifiability,"ar(""cHq3"", ""EFT modifier"", -10.0, 10.0); cHq3.setAttribute(""NewPhysics"", True); cHl3 = ROOT.RooRealVar(""cHl3"", ""EFT modifier"", -10.0, 10.0); cHl3.setAttribute(""NewPhysics"", True); cHDD = ROOT.RooRealVar(""cHDD"", ""EFT modifier"", -10.0, 10.0); cHDD.setAttribute(""NewPhysics"", True); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/input_histos_rf_lagrangianmorph.root""; par = ""cHq3""; samplelist = [; ""SM_NPsq0"",; ""cHq3_NPsq1"",; ""cHq3_NPsq2"",; ""cHl3_NPsq1"",; ""cHl3_NPsq2"",; ""cHDD_NPsq1"",; ""cHDD_NPsq2"",; ""cHl3_cHDD_NPsq2"",; ""cHq3_cHDD_NPsq2"",; ""cHl3_cHq3_NPsq2"",; ]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = observablename; config.folderNames = samplelist; config.couplings.add(cHq3); config.couplings.add(cHDD); config.couplings.add(cHl3); config.couplings.add(kSM); ; ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of pTV"", config); ; # Create pseudo data histogram to fit at cHq3 = 0.01, cHl3 = 1.0, cHDD = 0.2; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; morphfunc.setParameter(""cHq3"", 0.01); morphfunc.setParameter(""cHl3"", 1.0); morphfunc.setParameter(""cHDD"", 0.2); ; pseudo_hist = morphfunc.createTH1(""pseudo_hist""); pseudo_dh = ROOT.RooDataHist(""pseudo_dh"", ""pseudo_dh"", [obsvar], pseudo_hist); ; # reset parameters to zeros before fit; morphfunc.setParameter(""cHq3"", 0.0); morphfunc.setParameter(""cHl3"", 0.0); morphfunc.setParameter(""cHDD"", 0.0); ; # set error to set initial step size in fit; cHq3.setError(0.1); cHl3.setError(0.1); cHDD.setError(0.1); ; # Wrap pdf on morphfunc and fit to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8py.html:1765,coupling,couplings,1765,doc/master/rf712__lagrangianmorphfit_8py.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8py.html,1,['coupling'],['couplings']
Modifiability,"ar* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodBDT&operator=(const TMVA::MethodBDT&); virtual map<TString,Double_t>OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* parent); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSetAdaBoostBeta(Double_t b); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidSetBaggedSampleFraction(Double_t f); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBDT.html:14391,Config,Configurable,14391,root/html602/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBDT.html,2,['Config'],['Configurable']
Modifiability,"ar* filename); Process an additional configuration file. int fReadFile(const char* fileName, bool is_included = false); Parses the configuration file. The objects can be specified following; the rules of the RooFactoryWSTool, plus some more flexibility. The official format for the datacards is "".rs"". All the instructions end with a "";"" (like in C++). Carriage returns and white lines are irrelevant but adviced since they; improve readability (like in C++). The (Roo)ClassName::objname(description) can be replaced with the more; ""pythonic"" objname = (Roo)ClassName(description). The comments can be specified with a ""//"" if on a single line or with; /* */ if on multiple lines (like in C++). The ""#include path/to/file.rs"" statement triggers the inclusion of a; configuration fragment. The ""import myobject:myworkspace:myrootfile"" will add to the Workspace; the object myobject located in myworkspace recorded in myrootfile.; Alternatively, one could choose the ""import myobject:myrootfile"" in case; no Workspace is present. The ""echo"" statement prompts a message on screen. void fCreateCategory(); Builds the category necessary for the mutidimensional models. Its name; will be <HLFactory name>_category and the types are specified by the; model labels. bool fNamesListsConsistent(); Check the number of entries in each list. If not the same and the list; is not empty prompt an error. int fParseLine(TString& line); Parse a single line and puts the content in the RooWorkSpace. void DumpCfg(const char* ); Dump the Workspace content as configuration file; It needs some workspace object list or something.. { /* t.b.i. */ }. RooWorkspace* GetWs(); Get the RooWorkspace containing the models and variables. {return fWs;}. » Last changed: root/roostats:$Id: HLFactory.h 39391 2011-05-26 09:51:59Z moneta $ » Last generated: 2011-07-04 15:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__HLFactory.html:9528,config,configuration,9528,root/html530/RooStats__HLFactory.html,https://root.cern,https://root.cern/root/html530/RooStats__HLFactory.html,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"ar* filename); Process an additional configuration file. int fReadFile(const char* fileName, bool is_included = false); Parses the configuration file. The objects can be specified following; the rules of the RooFactoryWSTool, plus some more flexibility. The official format for the datacards is "".rs"". All the instructions end with a "";"" (like in C++). Carriage returns and white lines are irrelevant but adviced since they; improve readability (like in C++). The (Roo)ClassName::objname(description) can be replaced with the more; ""pythonic"" objname = (Roo)ClassName(description). The comments can be specified with a ""//"" if on a single line or with; /* */ if on multiple lines (like in C++). The ""#include path/to/file.rs"" statement triggers the inclusion of a; configuration fragment. The ""import myobject:myworkspace:myrootfile"" will add to the Workspace; the object myobject located in myworkspace recorded in myrootfile.; Alternatively, one could choose the ""import myobject:myrootfile"" in case; no Workspace is present. The ""echo"" statement prompts a message on screen. void fCreateCategory(); Builds the category necessary for the mutidimensional models. Its name; will be <HLFactory name>_category and the types are specified by the; model labels. bool fNamesListsConsistent(); Check the number of entries in each list. If not the same and the list; is not empty prompt an error. int fParseLine(TString& line); Parse a single line and puts the content in the RooWorkSpace. void DumpCfg(const char* ); Dump the Workspace content as configuration file; It needs some workspace object list or something.. { /* t.b.i. */ }. RooWorkspace* GetWs(); Get the RooWorkspace containing the models and variables. {return fWs;}. » Last changed: root/roostats:$Id: HLFactory.h 39391 2011-05-26 09:51:59Z moneta $ » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__HLFactory.html:9528,config,configuration,9528,root/html532/RooStats__HLFactory.html,https://root.cern,https://root.cern/root/html532/RooStats__HLFactory.html,4,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"ar* fmt, va_list va) const; TDataSet*GetNullSet(); voidTObject::MakeZombie(); TDataSet*NextDataSet(TIter& next); TDataSet*NextDataSet(Int_t nDataSet). private:. TDataSetIter(const TDataSetIter&); TDataSetIter&operator=(const TDataSetIter&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TDataSet*fDataSetPointer to the last selected TDataSet; Int_tfDepththe current depth of the passing; Int_tfMaxDepththe max depth of the passing (=1 by default); TIter*fNext""standard"" ROOT iterator for containers; TIter*fNextSet[100]the list of the TList iterators to bypass the whole dataset; TDataSet*fRootDataSetPointer to the root TDataSet; TDataSet*fWorkingDataSetPointer to the working TDataSet; static TDataSet*fgNullDataSet. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataSetIter(TDataSet* l, Bool_t dir); to be documented. TDataSetIter(TDataSet* l = 0, Int_t depth = 1, Bool_t dir = kIterForward); to be documented. ~TDataSetIter(); to be documented. TDataSet * GetNullSet(); return a fake pointer == -1 casted to (TDataSet *). TDataSet * Add(TDataSet* set, TDataSet* dataset). Add - adds the set to the dataset defined with the second parameters. TDataSet dataset != 0 - Add the set to the TDataSet *dataset. = 0 - (by default) to the current TDataSet defined; with fWorkingDataSet data member. returns the pointer to set is success or ZERO poiner. Note: If this TDataSetIter is empty (i.e. Cwd() returns 0), the ""set""; becomes the ""root"" dataset of this iterator //. TDataSet * Add(TDataSet* set, const Char_t* path). Add. Char_t path != 0 - Add a TDataSet dataset to the TDataSet dataset; defined with ""path""; = 0 - (by default) to the current TDataSet defined; with fWorkingDataSet data member. returns the data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataSetIter.html:8648,Inherit,Inheritance,8648,root/html534/TDataSetIter.html,https://root.cern,https://root.cern/root/html534/TDataSetIter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ar* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. static RooExpensiveObjectCache*_instance!; map<TString,RooExpensiveObjectCache::ExpensiveObject*>_map; Int_t_nextUID. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooExpensiveObjectCache(); Constructor. RooExpensiveObjectCache(const RooExpensiveObjectCache& ); Copy constructor. ~RooExpensiveObjectCache(); Destructor. RooExpensiveObjectCache& instance(); Return reference to singleton instance. void cleanup(); Static function called by RooSentinel atexit() handler to cleanup at end of program. Bool_t registerObject(const char* ownerName, const char* objectName, TObject& cacheObject, const RooArgSet& params); Register object associated with given name and given associated parameters with given values in cache.; The cache will take _ownership_of_object_ and is indexed under the given name (which does not; need to be the name of cacheObject and with given set of dependent parameters with validity for the; current values of those parameters. It can be retrieved later by callin retrieveObject(). Bool_t registerObject(const char* ownerName, const char* objectName, TObject& cacheObject, TIterator* paramI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooExpensiveObjectCache.html:6776,Inherit,Inheritance,6776,root/html602/RooExpensiveObjectCache.html,https://root.cern,https://root.cern/root/html602/RooExpensiveObjectCache.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ar* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGeoHelix(const TGeoHelix&); TGeoHelix&operator=(const TGeoHelix&). Data Members; public:. enum EGeoHelixTypes { kHelixNeedUpdate; kHelixStraigth; kHelixCircle; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Double_tfB[3]normalized direction for magnetic field; Double_tfCcurvature in XY plane; Double_tfDir[3]direction after a step; Double_tfDirInit[3]normalized initial direction; TGeoHMatrix*fMatrixtransformation of local helix frame to MARS ; Double_tfPhiphi angle; Double_tfPoint[3]point after a step; Double_tfPointInit[3]initial point; Int_tfQright/left-handed (+/- 1) - ""charge""; Double_tfSZ step of the helix / 2*PI; Double_tfStepcurrent step. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoHelix(); Dummy constructor. TGeoHelix(Double_t curvature, Double_t step, Int_t charge = 1); Normal constructor. ~TGeoHelix(); Destructor. Double_t ComputeSafeStep(Double_t epsil = 1E-6) const; Compute safe linear step that can be made such that the error; between linear-helix extrapolation is less than EPSIL. void InitPoint(Double_t x0, Double_t y0, Double_t z0); Initialize coordinates of a point on the helix. void InitPoint(Double_t* point); Set initial point on the helix. void InitDirection(Double_t dirx, Double_t diry, Double_t dirz, Bool_t is_normalized = kTRUE); Initialize particle direction (tangent on the helix in initial point). void InitDirection(Double_t* dir, Bool_t is_normalized = kTRUE); Initialize particle direction (tangent on the helix in initial point). Double_t GetTotalCurvature() const; Compute helix total curvature. void SetXYcurvature(Double_t curvature); Set XY curvature: c = 1/Rxy. void SetCharge(Int_t charge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoHelix.html:7545,Inherit,Inheritance,7545,root/html534/TGeoHelix.html,https://root.cern,https://root.cern/root/html534/TGeoHelix.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ar* method) const; Double_tNewFitness(Double_t oldF, Double_t newF); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetParameters(Int_t cycles, Int_t nsteps, Int_t popSize, Int_t SC_steps, Int_t SC_rate, Double_t SC_factor, Double_t convCrit); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__GeneticFitter.html:4492,Config,Configurable,4492,root/html532/TMVA__GeneticFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__GeneticFitter.html,2,['Config'],['Configurable']
Modifiability,"ar* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidGuessObsNameVec(TH1* hist). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. stringfFileNamePrefix; intfHighBin; intfLowBin; doublefLumiError; doublefNomLumi; TFile*fOut_f; stringstreamfResultsPrefixStr; stringfRowTitle; vector<string>fSystToFix; FILE*pFile. private:. stringfObsName; vector<std::string>fObsNameVec; vector<string>fPreprocessFunctions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HistoToWorkspaceFactoryFast(); {}. ~HistoToWorkspaceFactoryFast(). HistoToWorkspaceFactoryFast(string , string , vector<string> , double = 200, double = 20, int = 0, int = 6, TFile* = 0). string FilePrefixStr(string ). void ProcessExpectedHisto(TH1* hist, RooWorkspace* proto, string prefix, string productPrefix, string systTerm, double low, double high, int lowBin, int highBin). void AddMultiVarGaussConstraint(RooWorkspace* proto, string prefix, int lowBin, int highBin, vector<string>& likelihoodTermNames); these are the nominal predictions: eg. the mean of some space of variations; later fill these in a loop over histogram bins. void LinInterpWithConstraint(RooWorkspace* proto, TH1* nominal, vector<TH1*> lowHist, vector<TH1*> highHist, vector<string> sourceName, string prefix, string productPrefix, string systTerm, int lowBin, int highBin, vector<string>& likelihoodTermNames); these are the nominal predictions: eg. the mean of some sp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__HistFactory__HistoToWorkspaceFactoryFast.html:8492,Inherit,Inheritance,8492,root/html532/RooStats__HistFactory__HistoToWorkspaceFactoryFast.html,https://root.cern,https://root.cern/root/html532/RooStats__HistFactory__HistoToWorkspaceFactoryFast.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ar* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Int_tFindClass(const char* classname); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetClasses() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetSourceDir() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TClassTree&operator=(const TClass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TClassTree.html:6864,Inherit,InheritsFrom,6864,root/html532/TClassTree.html,https://root.cern,https://root.cern/root/html532/TClassTree.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Int_tFindClass(const char* classname); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetClasses() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetSourceDir() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TClassTree&operator=(const TClassTree&); virtual voidPaint(Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClassTree.html:6763,Inherit,InheritsFrom,6763,root/html602/TClassTree.html,https://root.cern,https://root.cern/root/html602/TClassTree.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFlush(Int_t ctxInd); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual char*GetPlotInfo(TVirtualGLPainter* plot, Int_t px, Int_t py); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetVirtualXInd(Int_t devInd); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Bool_tHighColorFormat(Int_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Int_tInitGLWindow(Window_t winID); virtual voidTObject::Inspect() constMENU ; static TGLManager*&TGLManager::Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMakeCurrent(Int_t devInd); virtual voidMarkForDirectCopy(Int_t devInd, Bool_t); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TX11GLManager.html:2789,Inherit,InheritsFrom,2789,root/html532/TX11GLManager.html,https://root.cern,https://root.cern/root/html532/TX11GLManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFlush(Int_t ctxInd); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual char*GetPlotInfo(TVirtualGLPainter* plot, Int_t px, Int_t py); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetVirtualXInd(Int_t devInd); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Bool_tHighColorFormat(Int_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Int_tInitGLWindow(Window_t winID); virtual voidTObject::Inspect() constMENU ; static TGLManager*&TGLManager::Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMakeCurrent(Int_t devInd); virtual voidMarkForDirectCopy(Int_t devInd, Bool_t); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TX11GLManager.html:2796,Inherit,InheritsFrom,2796,root/html602/TX11GLManager.html,https://root.cern,https://root.cern/root/html602/TX11GLManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLPShapeObj.html:2375,Inherit,InheritsFrom,2375,root/html532/TGLPShapeObj.html,https://root.cern,https://root.cern/root/html532/TGLPShapeObj.html,8,['Inherit'],['InheritsFrom']
Modifiability,"ar* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLPShapeObj.html:2309,Inherit,InheritsFrom,2309,root/html602/TGLPShapeObj.html,https://root.cern,https://root.cern/root/html602/TGLPShapeObj.html,8,['Inherit'],['InheritsFrom']
Modifiability,"ar* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSetPair.html:2357,Inherit,InheritsFrom,2357,root/html532/RooSetPair.html,https://root.cern,https://root.cern/root/html532/RooSetPair.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ar* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSetPair.html:2291,Inherit,InheritsFrom,2291,root/html602/RooSetPair.html,https://root.cern,https://root.cern/root/html602/RooSetPair.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ar* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. pthread_cond_tfCondthe pthread condition variable; TPosixMutex*fMutexmutex used around Wait() and TimedWait(). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPosixCondition(TMutexImp* m); Create Condition variable. Ctor must be given a pointer to an; existing mutex. The condition variable is then linked to the mutex,; so that there is an implicit unlock and lock around Wait() and; TimedWait(). ~TPosixCondition(); TCondition dtor. Int_t Wait(); Wait for the condition variable to be signalled. The mutex is; implicitely released before waiting and locked again after waking up.; If Wait() is called by multiple threads, a signal may wake up more; than one thread. See POSIX threads documentation for details. Int_t TimedWait(ULong_t secs, ULong_t nanoSecs = 0); TimedWait() is given an absolute time to wait until. To wait for a; relative time from now, use TThread::GetTime(). See POSIX threads; documentation for why absolute times are better than relative.; Returns 0 if successfully signalled, 1 if time expired. Int_t Signal(); If one or more threads have called Wait(), Signal() wakes up at least; one of them, possibly more. See POSIX threads documentation for details. Int_t Broadcast(); Broadcast is like signal but wakes all threads which have called Wait(). TPosixCondition(TMutexImp* m). » Author: Fons Rademakers 01",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPosixCondition.html:5608,variab,variable,5608,root/html528/TPosixCondition.html,https://root.cern,https://root.cern/root/html528/TPosixCondition.html,6,['variab'],['variable']
Modifiability,"ar* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TTreeRow(TSQLRow* original); TTreeRow(const TTreeRow&); Bool_tIsValid(Int_t field); TTreeRow&operator=(const TTreeRow&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Int_tfColumnCountnumber of columns in row; Int_t*fFields[fColumnCount] index in fRow of the end of each field; TTreeRow*fOriginal! pointer to original row; char*fRowstring with all the fColumnCount fields. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreeRow(); Single row of a query result. TTreeRow(Int_t nfields); Single row of a query result. TTreeRow(Int_t nfields, const Int_t* fields, const char* row); Single row of a query result. TTreeRow(TSQLRow* original); This is a shallow copy of a real row, i.e. it only contains; a pointer to the original. ~TTreeRow(); Destroy row object. void Close(Option_t* option = """"); Close row. Bool_t IsValid(Int_t field); Check if row is open and field index within range. ULong_t GetFieldLength(Int_t field); Get length in bytes of specified field. const char * GetField(Int_t field); Get specified field from row (0 <= field < GetFieldCount()). void SetRow(const Int_t* fields, const char* row); The field and row information. void Streamer(TBuffer& ); Stream an object of class TTreeRow. TTreeRow(TSQLRow* original). TTreeRow & operator=(const TTreeRow& ). » Author: Fons Rademakers 30/11/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTreeRow.html:5823,Inherit,Inheritance,5823,root/html534/TTreeRow.html,https://root.cern,https://root.cern/root/html534/TTreeRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ar* msgfmt) const; virtual Int_tfill(); Int_tFill(); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*get(Int_t index) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Stat_tGetEntries() const; Int_tGetEntry(Int_t entry = 0, Int_t getall = 0); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsDataStore::hasFilledCache() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; voidloadValues(const TTree* t, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); virtual voidloadValues(const RooAbsDataStore* tds, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual RooAbsDataStore*merge(const RooArgSet& allvars, list<RooAbsDataStore*> dstoreList); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooTreeDataStore.html:4784,Inherit,InheritsFrom,4784,root/html532/RooTreeDataStore.html,https://root.cern,https://root.cern/root/html532/RooTreeDataStore.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ar* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetComment() const; Long64_tGetCompressedSize() const; Long64_tGetDecompressedSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetFilePosition() const; virtual const char*TObject::GetIconName() const; TDatimeGetModTime() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tGetPosition() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDirectory() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TArchiveMember.html:2715,Inherit,InheritsFrom,2715,root/html532/TArchiveMember.html,https://root.cern,https://root.cern/root/html532/TArchiveMember.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetComment() const; Long64_tGetCompressedSize() const; Long64_tGetDecompressedSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetFilePosition() const; virtual const char*TObject::GetIconName() const; TDatimeGetModTime() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tGetPosition() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDirectory() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TArchiveMember&operator=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TArchiveMember.html:2617,Inherit,InheritsFrom,2617,root/html602/TArchiveMember.html,https://root.cern,https://root.cern/root/html602/TArchiveMember.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* name) const; virtual TList*TProofPlayer::GetOutputList() const; virtual TVirtualPacketizer*TProofPlayerRemote::GetPacketizer() const; virtual TProofProgressStatus*TProofPlayer::GetProgressStatus() const; virtual TQueryResult*TProofPlayer::GetQueryResult(const char* ref); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTProofPlayer::HandleGetTreeHeader(TMessage* mess); TObject*TProofPlayerRemote::HandleHistogram(TObject* obj, Bool_t& merged); virtual voidTProofPlayer::HandleRecvHisto(TMessage* mess); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); Bool_tTProofPlayerRemote::HistoSameAxis(TH1* h0, TH1* h1); Int_tTProofPlayerRemote::Incorporate(TObject* obj, TList* out, Bool_t& merged); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTProofPlayerRemote::IsClient() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTProofPlayerRemote::MergeOutput(); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofPlayerLite.html:7063,Inherit,InheritsFrom,7063,root/html532/TProofPlayerLite.html,https://root.cern,https://root.cern/root/html532/TProofPlayerLite.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* name) const; virtual TList*TProofPlayer::GetOutputList() const; virtual TVirtualPacketizer*TProofPlayerRemote::GetPacketizer() const; virtual TProofProgressStatus*TProofPlayer::GetProgressStatus() const; virtual TQueryResult*TProofPlayer::GetQueryResult(const char* ref); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTProofPlayer::HandleGetTreeHeader(TMessage* mess); TObject*TProofPlayerRemote::HandleHistogram(TObject* obj, Bool_t& merged); virtual voidTProofPlayer::HandleRecvHisto(TMessage* mess); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); Bool_tTProofPlayerRemote::HistoSameAxis(TH1* h0, TH1* h1); Int_tTProofPlayerRemote::Incorporate(TObject* obj, TList* out, Bool_t& merged); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTProofPlayerRemote::IsClient() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tTProofPlayerRemote::JoinProcess(TList* workers); static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTProofPlayerRemote::MergeOutput(Bool_t savememvalues = kFALSE); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofPlayerLite.html:7063,Inherit,InheritsFrom,7063,root/html534/TProofPlayerLite.html,https://root.cern,https://root.cern/root/html534/TProofPlayerLite.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* name) const; virtual TList*TProofPlayer::GetOutputList() const; virtual TVirtualPacketizer*TProofPlayerRemote::GetPacketizer() const; virtual TProofProgressStatus*TProofPlayer::GetProgressStatus() const; virtual TQueryResult*TProofPlayer::GetQueryResult(const char* ref); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTProofPlayer::HandleGetTreeHeader(TMessage* mess); TObject*TProofPlayerRemote::HandleHistogram(TObject* obj, Bool_t& merged); virtual voidTProofPlayer::HandleRecvHisto(TMessage* mess); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); Bool_tTProofPlayerRemote::HistoSameAxis(TH1* h0, TH1* h1); Int_tTProofPlayerRemote::Incorporate(TObject* obj, TList* out, Bool_t& merged); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTProofPlayerRemote::IsClient() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tTProofPlayerRemote::JoinProcess(TList* workers); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTProofPlayerRemote::MergeOutput(); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofPlayerLite.html:7051,Inherit,InheritsFrom,7051,root/html602/TProofPlayerLite.html,https://root.cern,https://root.cern/root/html602/TProofPlayerLite.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* name) const; virtual TList*TProofPlayer::GetOutputList() const; virtual TVirtualPacketizer*TProofPlayerRemote::GetPacketizer() const; virtual TProofProgressStatus*TProofPlayer::GetProgressStatus() const; virtual TQueryResult*TProofPlayer::GetQueryResult(const char* ref); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTProofPlayer::HandleGetTreeHeader(TMessage* mess); TObject*TProofPlayerRemote::HandleHistogram(TObject* obj, Bool_t& merged); virtual voidTProofPlayer::HandleRecvHisto(TMessage* mess); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); Bool_tTProofPlayerRemote::HistoSameAxis(TH1* h0, TH1* h1); Int_tTProofPlayerRemote::Incorporate(TObject* obj, TList* out, Bool_t& merged); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTProofPlayerRemote::IsClient() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tTProofPlayerRemote::JoinProcess(TList* workers); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTProofPlayerRemote::MergeOutput(Bool_t savememvalues = kFALSE); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofPlayerLite.html:7051,Inherit,InheritsFrom,7051,root/html604/TProofPlayerLite.html,https://root.cern,https://root.cern/root/html604/TProofPlayerLite.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDictAttributeMap*TDictionary::GetAttributeMap() const; TClass*GetClassPointer(Bool_t load = kTRUE); Int_tGetDelta(); static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; ROOT::ESTLTypeIsSTLContainer(); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBaseClass.html:2876,Inherit,InheritsFrom,2876,root/html602/TBaseClass.html,https://root.cern,https://root.cern/root/html602/TBaseClass.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidGetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*GetPointerName() const; virtual const Double_t*GetRotationMatrix() const; virtual const Double_t*GetScale() const; virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsGeneral() const; Bool_tIsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReflection() const; Bool_tIsRegistered() const; Bool_tIsRotAboutZ() const; Bool_tIsRotation() const; Bool_tIsScale() const; Bool_tIsShared() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsTranslation() const; Bool_tTObject::IsZombie() const; virtual voidLocalToMaster(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterBomb(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterVect(const Double_t* local, Double_t* master) const; virtual voidTNamed::ls(Option_t* option = """") const; virtual TGeoMatrix*MakeClone() const; virtual voidMasterToLocal(const Double_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoMatrix.html:9419,Inherit,InheritsFrom,9419,root/html534/TGeoMatrix.html,https://root.cern,https://root.cern/root/html534/TGeoMatrix.html,3,['Inherit'],['InheritsFrom']
Modifiability,"ar* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidGetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*GetPointerName() const; virtual const Double_t*GetRotationMatrix() const; virtual const Double_t*GetScale() const; virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsGeneral() const; Bool_tIsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReflection() const; Bool_tIsRegistered() const; Bool_tIsRotAboutZ() const; Bool_tIsRotation() const; Bool_tIsScale() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsTranslation() const; Bool_tTObject::IsZombie() const; virtual voidLocalToMaster(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterBomb(const Double_t* local, Double_t* master) const; virtual voidLocalToMasterVect(const Double_t* local, Double_t* master) const; virtual voidTNamed::ls(Option_t* option = """") const; virtual TGeoMatrix*MakeClone() const; virtual voidMasterToLocal(const Double_t* master, Double_t* local",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMatrix.html:9419,Inherit,InheritsFrom,9419,root/html532/TGeoMatrix.html,https://root.cern,https://root.cern/root/html532/TGeoMatrix.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ar* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGraph2D*GetGraph2D() const; virtual const char*TObject::GetIconName() const; Double_tGetMarginBinsContent() const; Int_t*GetMTried() const; virtual const char*TNamed::GetName() const; Int_tGetNdt() const; Int_t*GetNTried() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_t*GetPTried() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*GetXN() const; Double_tGetXNmax() const; Double_tGetXNmin() const; Double_t*GetYN() const; Double_tGetYNmax() const; Double_tGetYNmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; Double_tInterpolate(Double_t x, Double_t y); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphDelaunay.html:3817,Inherit,InheritsFrom,3817,root/html532/TGraphDelaunay.html,https://root.cern,https://root.cern/root/html532/TGraphDelaunay.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGraph2D*GetGraph2D() const; virtual const char*TObject::GetIconName() const; Double_tGetMarginBinsContent() const; Int_t*GetMTried() const; virtual const char*TNamed::GetName() const; Int_tGetNdt() const; Int_t*GetNTried() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_t*GetPTried() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*GetXN() const; Double_tGetXNmax() const; Double_tGetXNmin() const; Double_t*GetYN() const; Double_tGetYNmax() const; Double_tGetYNmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; Double_tInterpolate(Double_t x, Double_t y); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraphDelaunay.html:3770,Inherit,InheritsFrom,3770,root/html602/TGraphDelaunay.html,https://root.cern,https://root.cern/root/html602/TGraphDelaunay.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* name, const char* formula); Initialiation called from the constructors. ~TTreeFormula(); Tree Formula default destructor; *-* =================================. void DefineDimensions(Int_t code, Int_t size, TFormLeafInfoMultiVarDim* info, Int_t& virt_dim); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(const char* size, Int_t code); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(Int_t code, Int_t size, TFormLeafInfoMultiVarDim* multidim = 0); This method stores the dimension information for later usage. Int_t RegisterDimensions(Int_t code, TFormLeafInfo* info, TFormLeafInfo* maininfo, Bool_t useCollectionObject); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(Int_t code, TBranchElement* branch); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(Int_t code, TLeaf* leaf); This method is used internally to decode the dimensions of the variables. Int_t DefineAlternate(const char* expression); This method check for treat the case where expression contains $Atl and load up; both fAliases and fExpr.; We return; -1 in case of failure; 0 in case we did not find $Alt; the action number in case of success. Int_t ParseWithLeaf(TLeaf* leaf, const char* expression, Bool_t final, UInt_t paran_level, TObjArray& castqueue, Bool_t useLeafCollectionObject, const char* fullExpression); Decompose 'expression' as pointing to something inside the leaf; Returns:; -2 Error: some information is missing (message already printed); -1 Error: Syntax is incorrect (message already printed); 0; >0 the value returns is the action code. Int_t FindLeafForExpression(const char* expression, TLeaf*& leaf, TString& leftover, Bool_t& final, UInt_t& paran_level, TObjArray& castqueue, vector<std::string>& aliasUsed, Bool_t& useLeafCollectionObject, const char* fullExpression); Look for the leaf correspon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeFormula.html:19070,variab,variables,19070,root/html528/TTreeFormula.html,https://root.cern,https://root.cern/root/html528/TTreeFormula.html,6,['variab'],['variables']
Modifiability,"ar* name, const char* formula); Initialiation called from the constructors. ~TTreeFormula(); Tree Formula default destructor; *-* =================================. void DefineDimensions(Int_t code, Int_t size, TFormLeafInfoMultiVarDim* info, Int_t& virt_dim); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(const char* size, Int_t code); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(Int_t code, Int_t size, TFormLeafInfoMultiVarDim* multidim = 0); This method stores the dimension information for later usage. Int_t RegisterDimensions(Int_t code, TFormLeafInfo* info, TFormLeafInfo* maininfo, Bool_t useCollectionObject); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(Int_t code, TBranchElement* branch); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(Int_t code, TLeaf* leaf); This method is used internally to decode the dimensions of the variables. Int_t DefineAlternate(const char* expression); This method check for treat the case where expression contains $Atl and load up; both fAliases and fExpr.; We return; -1 in case of failure; 0 in case we did not find $Alt; the action number in case of success. Int_t ParseWithLeaf(TLeaf* leaf, const char* expression, Bool_t final, UInt_t paran_level, TObjArray& castqueue, Bool_t useLeafCollectionObject, const char* fullExpression); Decompose 'expression' as pointing to something inside the leaf; Returns:; -2 Error: some information is missing (message already printed); -1 Error: Syntax is incorrect (message already printed); 0; >0 the value returns is the action code. Int_t FindLeafForExpression(const char* expression, TLeaf*& leaf, TString& leftover, Bool_t& final, UInt_t& paran_level, TObjArray& castqueue, vector<string>& aliasUsed, Bool_t& useLeafCollectionObject, const char* fullExpression); Look for the leaf corresponding ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeFormula.html:24643,variab,variables,24643,root/html602/TTreeFormula.html,https://root.cern,https://root.cern/root/html602/TTreeFormula.html,4,['variab'],['variables']
Modifiability,"ar* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const double&GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsConst() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t*) const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* in); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TParameter_double_.html:2599,Inherit,InheritsFrom,2599,root/html534/TParameter_double_.html,https://root.cern,https://root.cern/root/html534/TParameter_double_.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ar* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const double&GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsConst() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t*) const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* in); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParameter_double_.html:2326,Inherit,InheritsFrom,2326,root/html602/TParameter_double_.html,https://root.cern,https://root.cern/root/html602/TParameter_double_.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const double&GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t*) const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* in); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParameter_double_.html:2599,Inherit,InheritsFrom,2599,root/html532/TParameter_double_.html,https://root.cern,https://root.cern/root/html532/TParameter_double_.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ar* path, void* dirptr = 0); virtual const char*TSystem::GetLinkedLibraries(); voidTObject::MakeZombie(); virtual voidTSystem::SigAlarmInterruptsSyscalls(Bool_t); static const char*TSystem::StripOffProto(const char* path, const char* proto). private:. virtual void*GetDirPtr() const. Data Members; public:. enum TSystem::EAclicMode { kDefault; kDebug; kOpt; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSystem::EAclicModeTSystem::fAclicModeWhether the compilation should be done debug or opt; Int_tTSystem::fBeepDurationUsed by Beep(); Int_tTSystem::fBeepFreqUsed by Beep(); TStringTSystem::fBuildArchArchitecure for which ROOT was built (passed to ./configure); TStringTSystem::fBuildCompilerCompiler used to build this ROOT; TStringTSystem::fBuildCompilerVersionCompiler version used to build this ROOT; TStringTSystem::fBuildDirLocation where to build ACLiC shared library and use as scratch area.; TStringTSystem::fBuildNodeDetailed information where ROOT was built; TSeqCollection*TSystem::fCompiledList of shared libs from compiled macros to be deleted; Bool_tTSystem::fDoneTrue if eventloop should be finished; TSeqCollection*TSystem::fFileHandlerList of file handlers; TStringTSystem::fFlagsDebugFlags for debug compilation; TStringTSystem::fFlagsOptFlags for optimized compilation; TSeqCollection*TSystem::fHelpersList of helper classes for alternative file/directory access; TStringTSystem::fHostnameHostname; Bool_tTSystem::fInControlTrue if in eventloop; TStringTSystem::fIncludePathUsed to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; Bool_tTSystem::fInsideNotifyUsed by DispatchTimers(); TStringTSystem::fLastErrorStringLast system error message; Int_tTSystem::fLevelLevel of nested eventloops; TStringTSystem::fLinkdefSuffixD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TDCacheSystem.html:15734,config,configure,15734,root/html526/TDCacheSystem.html,https://root.cern,https://root.cern/root/html526/TDCacheSystem.html,1,['config'],['configure']
Modifiability,"ar* s1, const TString& s2); TString&TString::ReplaceAll(const char* s1, const char* s2); TString&TString::ReplaceAll(const char* s1, Ssiz_t ls1, const char* s2, Ssiz_t ls2); voidTString::Resize(Ssiz_t n); static Ssiz_tTString::ResizeIncrement(Ssiz_t ri = 16); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTString::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); TSubStringTString::Strip(TString::EStripType s = kTrailing, char c = ' ') const; TSubStringTString::SubString(const char* pat, Ssiz_t start = 0, TString::ECaseCompare cmp = kExact) const; TObjArray*TString::Tokenize(const TString& delim) const; Bool_tTString::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); virtual const char*what() const; static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap); static Ssiz_tTString::Align(Ssiz_t s); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidTString::InitChar(char c); static Ssiz_tTString::Recommend(Ssiz_t s). Data Members; public:. enum TString::[unnamed] { kAlignment; };; enum TString::EStripType { kLeading; kTrailing; kBoth; };; enum TString::ECaseCompare { kExact; kIgnoreCase; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveException(const std::string& s); Constructor. TEveException(); {}. TEveException(const TString& s); {}. TEveException(const char* s); {}. TEveException(const std::string& s). virtual ~TEveException(); {}. const char* what() const; { return Data(); }. TEvePadHolder& operator=(const TEveException& ). » Last changed: root/eve:$Id: TEveUtil.h 36373 2010-10-19 17:43:35Z matevz $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveException.html:7601,Inherit,Inheritance,7601,root/html532/TEveException.html,https://root.cern,https://root.cern/root/html532/TEveException.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ar* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(). Data Members; public:. enum EStatusBits { kIsSubmerger; };; enum EExitStatus { kFinished; kStopped; kAborted; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TVirtualProofPlayer(); { }. Long64_t Process(TDSet* set, const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). Bool_t JoinProcess(TList* workers). Long64_t Finalize(Bool_t force = kFALSE, Bool_t sync = kFALSE). Long64_t Finalize(TQueryResult* qr). Long64_t DrawSelect(TDSet* set, const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). void HandleGetTreeHeader(TMessage* mess). void HandleRecvHisto(TMessage* mess). void StopProcess(Bool_t abort, Int_t timeout = -1). void AddInput(TObject* inp). void ClearInput(). TObject * GetOutput(const char* name) const. TList * GetOutputList() const. TList * GetInputList() const. TList * GetListOfResults() const. void AddQueryResult(TQueryResult* q). TQueryResult * GetCurrentQuery() const. TQueryResult * GetQueryResult(const char* ref). void RemoveQueryResult(const char* ref). void SetCurrentQ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualProofPlayer.html:12450,Inherit,Inheritance,12450,root/html534/TVirtualProofPlayer.html,https://root.cern,https://root.cern/root/html534/TVirtualProofPlayer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ar* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(). Data Members; public:. enum EStatusBits { kIsSubmerger; };; enum EExitStatus { kFinished; kStopped; kAborted; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TVirtualProofPlayer(); { }. Long64_t Process(TDSet* set, const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). Long64_t Finalize(TQueryResult* qr). Long64_t DrawSelect(TDSet* set, const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). void HandleGetTreeHeader(TMessage* mess). void HandleRecvHisto(TMessage* mess). void StopProcess(Bool_t abort, Int_t timeout = -1). void AddInput(TObject* inp). void ClearInput(). TObject * GetOutput(const char* name) const. TList * GetOutputList() const. TList * GetInputList() const. TList * GetListOfResults() const. void AddQueryResult(TQueryResult* q). TQueryResult * GetCurrentQuery() const. TQueryResult * GetQueryResult(const char* ref). void RemoveQueryResult(const char* ref). void SetCurrentQuery(TQueryResult* q). void SetMaxDrawQueries(Int_t max). void RestorePreviousQuery(). Int_t AddOutp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualProofPlayer.html:11976,Inherit,Inheritance,11976,root/html532/TVirtualProofPlayer.html,https://root.cern,https://root.cern/root/html532/TVirtualProofPlayer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ar* user, const char* dsName, TString& md5path, Bool_t local = kFALSE); Returns path of the indicated dataset. The extension is '.root' for all files; except for 'dsName==ls' which have extension '.txt'.; If 'local' is kTRUE the local cache path is returned instead in the form; <cachedir>/<group>.<user>.<dsName>.<ext>.; NB: contains a static TString for result, so copy result before using twice. Int_t NotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated; or created or modified dataset. For still existing datasets, fill the; modification date in seconds anf the checksum.; Returns 0 on success, -1 on error. Int_t CreateLsFile(const char* group, const char* user, Long_t& mtime, TString& checksum); Create or recreate the dataset lists for 'uri'.; The list are saved in text form in 'uri'/ls.txt for fast browsing and in; 'uri'/ls.root in form of TMacro for optimized and portable transfer.; Return 0 on success, 1 if the file was empty, -1 on error. Bool_t BrowseDataSets(const char* group, const char* user, const char* dsName, UInt_t option, TObject* target); Adds the dataset in the folder of group, user to the list in target.; If dsName is defined, only the information about the specified dataset; is processed. The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; Available options (to be .or.ed):; kPrint print the dataset content; kQuotaUpdate update quotas; kExport use export naming; kList get a list of dataset names. NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null. TMap * GetDataSets(const char* group, const char* user, const char* dsName = 0, UInt_t option = 0); General purpose call to go through the existing datasets.; If <user> is 0 or ""*"", act on all datasets for the given <group>.; If <group> is 0 or ""*"", act on all datasets.; I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManagerFile.html:13453,portab,portable,13453,root/html528/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html528/TDataSetManagerFile.html,10,['portab'],['portable']
Modifiability,"ar*, Int_t); voidInl(); voidInnit(char* det, Double_t* tout2, Double_t* tin2, Int_t); voidLecev2(Int_t* ktest, Double_t* tout2, Double_t* tin2); voidLeclearn(Int_t* ktest, Double_t* tout2, Double_t* tin2); voidOut(Int_t* iii, Int_t* maxcycle); Double_tSen3a(); voidSetLogger(TMVA::MsgLogger* l); voidTestNN(); voidTrain_nn(Double_t* tin2, Double_t* tout2, Int_t* ntrain, Int_t* ntest, Int_t* nvar2, Int_t* nlayer, Int_t* nodes, Int_t* ncycle); Double_tW_ref(const Double_t[] wNN, Int_t a_1, Int_t a_2, Int_t a_3) const; Double_t&W_ref(Double_t[] wNN, Int_t a_1, Int_t a_2, Int_t a_3); voidWini(); Double_tWw_ref(const Double_t[] wwNN, Int_t a_1, Int_t a_2) const; Double_t&Ww_ref(Double_t[] wwNN, Int_t a_1, Int_t a_2). private:. TMVA::MsgLogger&ULog(). Data Members; protected:. struct(anonymous)fCost_1; struct(anonymous)fDel_1; struct(anonymous)fNeur_1; struct(anonymous)fParam_1; VARn2fVarn2_1; VARn2fVarn3_1; struct(anonymous)fVarn_1; static Int_tfg_0constant; static Int_tfg_100constant; static Int_tfg_999constant; static const char*constfg_MethodNamemethod name for print; static const Int_tfg_max_nNodes_maximum number of nodes per variable; static const Int_tfg_max_nVar_static maximum number of input variables. private:. TMVA::MsgLogger*fLogger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodCFMlpANN_Utils(); default constructor. ~MethodCFMlpANN_Utils(); destructor. void Train_nn(Double_t* tin2, Double_t* tout2, Int_t* ntrain, Int_t* ntest, Int_t* nvar2, Int_t* nlayer, Int_t* nodes, Int_t* ncycle); training interface - called from MethodCFMlpANN class object. void Entree_new(Int_t* , char* , Int_t* ntrain, Int_t* ntest, Int_t* numlayer, Int_t* nodes, Int_t* numcycle, Int_t ); first initialisation of ANN. void Wini(); [smart comments to be added]. void En_avant(Int_t* ievent); [smart comments to be added]. void Leclearn(Int_t* ktest, Double_t* tout2, Double_t* tin2); [smart comments to be added]. void En_arriere(Int_t* ievent)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCFMlpANN_Utils.html:2957,variab,variable,2957,root/html602/TMVA__MethodCFMlpANN_Utils.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCFMlpANN_Utils.html,8,['variab'],"['variable', 'variables']"
Modifiability,"ar*GetUser() const; static Long_tGetVirtMemMax(); const char*GetWorkDir() const; virtual TProofServ::EQueryActionGetWorkers(TList* workers, Int_t& prioritychange, Bool_t resume = kFALSE); virtual voidHandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual voidHandleSigPipe(); virtual voidHandleSocketInput(); virtual Int_tHandleSocketInput(TMessage* mess, Bool_t all); virtual voidHandleTermination(); virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual voidHandleUrgentData(); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidInterrupt(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tIsActive(); virtual Bool_tTApplication::IsCmdThread(); Bool_tIsEndMaster() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tIsParallel() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsTopMaster() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); voidLogToMaster(Bool_t on = kTRUE); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofServ.html:7657,Inherit,InheritsFrom,7657,root/html532/TProofServ.html,https://root.cern,https://root.cern/root/html532/TProofServ.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar*GetUser() const; static Long_tGetVirtMemMax(); const char*GetWorkDir() const; virtual TProofServ::EQueryActionGetWorkers(TList* workers, Int_t& prioritychange, Bool_t resume = kFALSE); virtual voidHandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual voidHandleSigPipe(); virtual voidHandleSocketInput(); virtual Int_tHandleSocketInput(TMessage* mess, Bool_t all); virtual voidHandleTermination(); virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual voidHandleUrgentData(); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidInterrupt(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tIsActive(); virtual Bool_tTApplication::IsCmdThread(); Bool_tIsEndMaster() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tIsParallel() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsTopMaster() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; voidLogToMaster(Bool_t on = kTRUE); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofServ.html:7830,Inherit,InheritsFrom,7830,root/html602/TProofServ.html,https://root.cern,https://root.cern/root/html602/TProofServ.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar*TObject::GetIconName() const; Double_tGetIfSpecified(Int_t num, Double_t def) const; static Int_tGetMaxDimension(); virtual const char*TObject::GetName() const; Int_tGetNoParameters() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; TStringGetObjectName() const; static Bool_tTObject::GetObjectStat(); TStringGetObjectTitle() const; virtual Option_t*TObject::GetOption() const; Bool_tGetOptionSame() const; TObject*GetOriginal() const; Double_tGetParameter(int num) const; TStringGetProofSelectorName() const; TStringGetSelection() const; Bool_tGetShouldDraw() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TStringGetVarExp() const; TStringGetVarExp(Int_t num) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSpecified(int num) const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTreeDrawArgsParser.html:3028,Inherit,InheritsFrom,3028,root/html532/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html532/TTreeDrawArgsParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar*TObject::GetIconName() const; Double_tGetIfSpecified(Int_t num, Double_t def) const; static Int_tGetMaxDimension(); virtual const char*TObject::GetName() const; Int_tGetNoParameters() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; TStringGetObjectName() const; static Bool_tTObject::GetObjectStat(); TStringGetObjectTitle() const; virtual Option_t*TObject::GetOption() const; Bool_tGetOptionSame() const; TObject*GetOriginal() const; Double_tGetParameter(int num) const; TStringGetProofSelectorName() const; TStringGetSelection() const; Bool_tGetShouldDraw() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TStringGetVarExp() const; TStringGetVarExp(Int_t num) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSpecified(int num) const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TTreeDrawArgsPars",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeDrawArgsParser.html:2980,Inherit,InheritsFrom,2980,root/html602/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html602/TTreeDrawArgsParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTPCON::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTPCON::GetNumberOfDivisions() const; virtual Int_tTPCON::GetNz() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTPCON::GetPhi1() const; virtual Float_t*TPCON::GetRmax() const; virtual Float_t*TPCON::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPGON.html:4034,Inherit,InheritsFrom,4034,root/html532/TPGON.html,https://root.cern,https://root.cern/root/html532/TPGON.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTPCON::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTPCON::GetNumberOfDivisions() const; virtual Int_tTPCON::GetNz() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTPCON::GetPhi1() const; virtual Float_t*TPCON::GetRmax() const; virtual Float_t*TPCON::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPGON.html:3887,Inherit,InheritsFrom,3887,root/html602/TPGON.html,https://root.cern,https://root.cern/root/html602/TPGON.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar*TObject::GetIconName() const; virtual Int_tGetIndex() const; virtual TGeoMatrix*GetMatrix() const; TGeoMedium*TGeoNode::GetMedium() const; TGeoVolume*TGeoNode::GetMotherVolume() const; virtual const char*TNamed::GetName() const; Int_tTGeoNode::GetNdaughters() const; TObjArray*TGeoNode::GetNodes() const; Int_tTGeoNode::GetNumber() const; virtual char*TGeoNode::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Double_tGetOffset() const; virtual Int_tTGeoNode::GetOptimalVoxels() const; virtual Option_t*TObject::GetOption() const; Int_t*TGeoNode::GetOverlaps(Int_t& novlp) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*TGeoNode::GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTGeoNode::InspectNode() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoAtt::IsActive() const; Bool_tTGeoAtt::IsActiveDaughters() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTGeoNode::IsFolder() const; Bool_tTGeoNode::IsOffset() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoNode::IsOnScreen() constMENU ; Bool_tTGeoNode::IsOverlapping() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoNode::IsVirtual() const; Bool_tTGeoAtt::IsVisBranch() const; Bool_tTGeoAtt::IsVisContainers() const; Bool_tTGeoNode::IsVisDaughters() const; Bool_tTGeoNode::IsVisible() const; Bool_tTGeoAtt::IsVisLeaves() const; Bool_tTGeoAtt::IsVisOnly() const; Bool_tTGeoAtt::IsVisRaytrace() const; Bool_tTGeoAtt::IsVisStreamed() const; Bool_tTGeoAtt::IsVisTouched() const; Bool_tTObject::IsZombie() const; virtual voidTGeoNode::LocalToMaster(const Double_t* local,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoNodeOffset.html:6403,Inherit,InheritsFrom,6403,root/html532/TGeoNodeOffset.html,https://root.cern,https://root.cern/root/html532/TGeoNodeOffset.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ar*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooPlot*RooStats::SamplingDistPlot::GetPlot(); TH1F*RooStats::SamplingDistPlot::GetTH1F(const RooStats::SamplingDistribution* samplDist = __null); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; RooStats::HypoTestPlotHypoTestPlot(); RooStats::HypoTestPlotHypoTestPlot(const RooStats::HypoTestPlot&); RooStats::HypoTestPlotHypoTestPlot(RooStats::HypoTestResult& result, Int_t bins = 100, Option_t* opt = ""NORMALIZE HIST""); RooStats::HypoTestPlotHypoTestPlot(RooStats::HypoTestResult& result, Int_t bins, Double_t min, Double_t max, Option_t* opt = ""NORMALIZE HIST""); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__HypoTestPlot.html:4174,Inherit,InheritsFrom,4174,root/html604/RooStats__HypoTestPlot.html,https://root.cern,https://root.cern/root/html604/RooStats__HypoTestPlot.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ar*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringTMVA::VariableTransformBase::GetShortName() const; virtual const char*TObject::GetTitle() const; virtual vector<TString>*TMVA::VariableTransformBase::GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event*const, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableGaussTransform.html:3259,Variab,VariableTransformBase,3259,root/html602/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableGaussTransform.html,4,['Variab'],['VariableTransformBase']
Modifiability,"ar*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetScanFileName() const; virtual TTreeFormula*GetSelect() const; virtual Long64_tGetSelectedRows() const; TSelector*GetSelector() const; TSelector*GetSelectorFromFile() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*GetV1() const; virtual Double_t*GetV2() const; virtual Double_t*GetV3() const; virtual Double_t*GetV4() const; virtual Double_t*GetVal(Int_t i) const; virtual TTreeFormula*GetVar(Int_t i) const; virtual TTreeFormula*GetVar1() const; virtual TTreeFormula*GetVar2() const; virtual TTreeFormula*GetVar3() const; virtual TTreeFormula*GetVar4() const; virtual Double_t*GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual Int_tMakeClass(const char* classname, Option_t* option); virtual Int_tMakeCode(const char* filename); virtual Int_tMakeProxy(const char* classname, const char* macrofilename = 0, const char* cutfilename = 0, const char* option = 0, Int_t maxUnrolling = 3); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTreePlayer.html:3930,Inherit,InheritsFrom,3930,root/html532/TTreePlayer.html,https://root.cern,https://root.cern/root/html532/TTreePlayer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetScanFileName() const; virtual TTreeFormula*GetSelect() const; virtual Long64_tGetSelectedRows() const; TSelector*GetSelector() const; TSelector*GetSelectorFromFile() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_t*GetV1() const; virtual Double_t*GetV2() const; virtual Double_t*GetV3() const; virtual Double_t*GetV4() const; virtual Double_t*GetVal(Int_t i) const; virtual TTreeFormula*GetVar(Int_t i) const; virtual TTreeFormula*GetVar1() const; virtual TTreeFormula*GetVar2() const; virtual TTreeFormula*GetVar3() const; virtual TTreeFormula*GetVar4() const; virtual Double_t*GetW() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual Int_tMakeClass(const char* classname, Option_t* option); virtual Int_tMakeCode(const char* filename); virtual Int_tMakeProxy(const char* classname, const char* macrofilename = 0, const char* cutfilename = 0, const char* option = 0, Int_t maxUnrolling = 3); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreePlayer.html:3939,Inherit,InheritsFrom,3939,root/html602/TTreePlayer.html,https://root.cern,https://root.cern/root/html602/TTreePlayer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ar*TObject::GetTitle() const; virtual vector<TString>*TMVA::VariableTransformBase::GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event *const ev, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html:3438,Variab,VariableTransformBase,3438,root/html532/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ar.h; kRed@ kRedDefinition Rtypes.h:66; TAxis.h; TCanvas.h; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdf::generateRooFit::OwningPtr< RooDataSet > generate(const RooArgSet &whatVars, Int_t nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={})See RooAbsPdf::generate(const RooArgSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,...Definition RooAbsPdf.h:57; RooExponentialExponential PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::ProtoDataRooCmdArg ProtoData(const RooDataSet &protoData, bool randomizeOrder=false, bool resample=false)Definition RooGlobalFunc.cxx:812; RooFit::MarkerColorRooCmdArg MarkerColor(Color_t color)Definition RooGlobalFunc.cxx:352; RooFit::Line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf314__paramfitrange_8C.html:3694,variab,variable,3694,doc/master/rf314__paramfitrange_8C.html,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8C.html,1,['variab'],['variable']
Modifiability,"ar=0; ivar<GetNvar(); ivar++) {; 568 cutMin.push_back( fCutMin[ivar][ibin] );; 569 cutMax.push_back( fCutMax[ivar][ibin] );; 570 }; 571 ; 572 return trueEffS;; 573}; 574 ; 575////////////////////////////////////////////////////////////////////////////////; 576/// training method: here the cuts are optimised for the training sample; 577 ; 578void TMVA::MethodCuts::Train( void ); 579{; 580 if (fEffMethod == kUsePDFs) CreateVariablePDFs(); // create PDFs for variables; 581 ; 582 // create binary trees (global member variables) for signal and background; 583 if (fBinaryTreeS != 0) { delete fBinaryTreeS; fBinaryTreeS = 0; }; 584 if (fBinaryTreeB != 0) { delete fBinaryTreeB; fBinaryTreeB = 0; }; 585 ; 586 // the variables may be transformed by a transformation method: to coherently; 587 // treat signal and background one must decide which transformation type shall; 588 // be used: our default is signal-type; 589 ; 590 fBinaryTreeS = new BinarySearchTree();; 591 fBinaryTreeS->Fill( GetEventCollection(Types::kTraining), fSignalClass );; 592 fBinaryTreeB = new BinarySearchTree();; 593 fBinaryTreeB->Fill( GetEventCollection(Types::kTraining), fBackgroundClass );; 594 ; 595 for (UInt_t ivar =0; ivar < Data()->GetNVariables(); ivar++) {; 596 (*fMeanS)[ivar] = fBinaryTreeS->Mean(Types::kSignal, ivar);; 597 (*fRmsS)[ivar] = fBinaryTreeS->RMS (Types::kSignal, ivar);; 598 (*fMeanB)[ivar] = fBinaryTreeB->Mean(Types::kBackground, ivar);; 599 (*fRmsB)[ivar] = fBinaryTreeB->RMS (Types::kBackground, ivar);; 600 ; 601 // update interval ?; 602 Double_t xmin = TMath::Min(fBinaryTreeS->Min(Types::kSignal, ivar),; 603 fBinaryTreeB->Min(Types::kBackground, ivar));; 604 Double_t xmax = TMath::Max(fBinaryTreeS->Max(Types::kSignal, ivar),; 605 fBinaryTreeB->Max(Types::kBackground, ivar));; 606 ; 607 // redefine ranges to be slightly smaller and larger than xmin and xmax, respectively; 608 Double_t eps = 0.01*(xmax - xmin);; 609 xmin -= eps;; 610 xmax += eps;; 611 ; 612 if (TMath::Abs(fCutRange[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8cxx_source.html:21772,variab,variables,21772,doc/master/MethodCuts_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8cxx_source.html,3,['variab'],['variables']
Modifiability,"arAll( void ); delete and clear all class members. void Train( void ); FDA training. void PrintResults(const TString& , vector<Double_t>& , const Double_t ) const; display fit parameters; check maximum length of variable name. Double_t EstimatorFunction(vector<Double_t>& ); compute estimator for given parameter set (to be minimised); const Double_t sumOfWeights[] = { fSumOfWeightsSig, fSumOfWeightsBkg, fSumOfWeights };. Double_t InterpretFormula(const TMVA::Event* , vector<double,allocator<double> >::iterator begin, vector<double,allocator<double> >::iterator end); formula interpretation. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns MVA value for given event. const std::vector<Float_t>& GetRegressionValues(). const std::vector<Float_t>& GetMulticlassValues(). void CalculateMulticlassValues(const TMVA::Event*& evt, vector<Double_t>& parameters, vector<Float_t>& values); calculate the values for multiclass. void ReadWeightsFromStream(istream& i); read back the training results from a file (stream). void AddWeightsXMLTo(void* parent) const; create XML description for LD classification and regression; (for arbitrary number of output classes/targets). void ReadWeightsFromXML(void* wghtnode); read coefficients from xml weight file. void MakeClassSpecific(ostream& , const TString& ) const; write FDA-specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". const Ranking* CreateRanking(); ranking of input variables. { return 0; }. void CheckSetup(); no check of options at this place. {}. » Author: Andreas Hoecker, Peter Speckmayer » Copyright (c) 2005-2010: *; » Last changed: root/tmva $Id: MethodFDA.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodFDA.html:20536,variab,variables,20536,root/html532/TMVA__MethodFDA.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodFDA.html,2,['variab'],['variables']
Modifiability,"arAndIntfPutput variables/targets/spectators; TMVA::TMVAVersion_tfTMVAVersion; TMVA::Event*fTransformedEventholds the current transformed event. private:. Bool_tfCreatedhas been created; Bool_tfEnabledhas been enabled; UInt_tfNSpectatorsnumber of spectators to be transformed; UInt_tfNTargetsnumber of targets to be transformed; UInt_tfNVariablesnumber of variables to be transformed; UInt_tfNVarsnumber of variables; Bool_tfNormalisenormalise input variables; Bool_tfSortGetif true, sort the variables into the order as defined by the user at the var definition; vector<TMVA::VariableInfo>fSpectatorsevent spectators [saved to weight file --> TODO ]; vector<TMVA::VariableInfo>fTargetsevent targets [saved to weight file --> TODO ]; TStringfTransformNamename of transformation; Bool_tfUseSignalTransformtrue if transformation bases on signal data; TMVA::Types::EVariableTransformfVariableTransformDecorrelation, PCA, etc.; Bool_tfVariableTypesAreCountedtrue if variable types have been counted already; vector<TMVA::VariableInfo>fVariablesevent variables [saved to weight file]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); standard constructor. ~VariableTransformBase(). void SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); select the variables/targets/spectators which serve as input to the transformation. Bool_t GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; select the values from the event. void SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; select the values from the event. void CountVariableTypes(UInt_t& nvars, UInt_t& ntgts, UInt_t& nspcts) const; count variables, targets and spectators. void CalcNorm(const vector<const TMVA::Even",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableTransformBase.html:9404,variab,variable,9404,root/html602/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableTransformBase.html,10,"['Variab', 'variab']","['VariableInfo', 'variable', 'variables']"
Modifiability,"arAndIntfPutput variables/targets/spectators; TMVA::TMVAVersion_tfTMVAVersion; TMVA::Event*fTransformedEventholds the current transformed event. private:. Bool_tfCreatedhas been created; Bool_tfEnabledhas been enabled; UInt_tfNSpectatorsnumber of spectators to be transformed; UInt_tfNTargetsnumber of targets to be transformed; UInt_tfNVariablesnumber of variables to be transformed; UInt_tfNVarsnumber of variables; Bool_tfNormalisenormalise input variables; Bool_tfSortGetif true, sort the variables into the order as defined by the user at the var definition; vector<TMVA::VariableInfo>fSpectatorsevent spectators [saved to weight file --> TODO ]; vector<TMVA::VariableInfo>fTargetsevent targets [saved to weight file --> TODO ]; TStringfTransformNamename of transformation; Bool_tfUseSignalTransformtrue if transformation bases on signal data; TMVA::Types::EVariableTransformfVariableTransformDecorrelation, PCA, etc.; Bool_tfVariableTypesAreCountedtrue if variable types have been counted already; vector<TMVA::VariableInfo>fVariablesevent variables [saved to weight file]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~VariableTransformBase(). void SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); select the variables/targets/spectators which serve as input to the transformation. Bool_t GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; select the values from the event. void SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; select the values from the event. void CountVariableTypes(UInt_t& nvars, UInt_t& ntgts, UInt_t& nspcts) const; count variables, targets and spectators. void CalcNorm(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); TODO --> adapt to variable,target,spectator selection; method to calculate minimum, maximum, mean, and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__VariableTransformBase.html:8723,variab,variable,8723,root/html530/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html530/TMVA__VariableTransformBase.html,7,"['Variab', 'variab']","['VariableInfo', 'variable', 'variables']"
Modifiability,"arAndIntfPutput variables/targets/spectators; TMVA::TMVAVersion_tfTMVAVersion; TMVA::Event*fTransformedEventholds the current transformed event. private:. Bool_tfCreatedhas been created; Bool_tfEnabledhas been enabled; UInt_tfNSpectatorsnumber of spectators to be transformed; UInt_tfNTargetsnumber of targets to be transformed; UInt_tfNVariablesnumber of variables to be transformed; UInt_tfNVarsnumber of variables; Bool_tfNormalisenormalise input variables; Bool_tfSortGetif true, sort the variables into the order as defined by the user at the var definition; vector<TMVA::VariableInfo>fSpectatorsevent spectators [saved to weight file --> TODO ]; vector<TMVA::VariableInfo>fTargetsevent targets [saved to weight file --> TODO ]; TStringfTransformNamename of transformation; Bool_tfUseSignalTransformtrue if transformation bases on signal data; TMVA::Types::EVariableTransformfVariableTransformDecorrelation, PCA, etc.; Bool_tfVariableTypesAreCountedtrue if variable types have been counted already; vector<TMVA::VariableInfo>fVariablesevent variables [saved to weight file]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~VariableTransformBase(). void SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); select the variables/targets/spectators which serve as input to the transformation. Bool_t GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; select the values from the event. void SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; select the values from the event. void CountVariableTypes(UInt_t& nvars, UInt_t& ntgts, UInt_t& nspcts) const; count variables, targets and spectators. void CalcNorm(const vector<const TMVA::Event*,allocator<const TMVA::Event*> >& ); TODO --> adapt to variable,target,spectator selection; method to calculate minimum, maximu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableTransformBase.html:8754,variab,variable,8754,root/html534/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableTransformBase.html,5,"['Variab', 'variab']","['VariableInfo', 'variable', 'variables']"
Modifiability,"arButton::(anonymous)kButton; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TControlBarButton::(anonymous)kDrawnButton; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TControlBarButton::(anonymous)kSeparator; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringfActionaction to be executed; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; Int_tfTypebutton type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TControlBarButton(); Default controlbar button ctor. TControlBarButton(const char* label, const char* action = """", const char* hint = """", const char* type = ""button""); Create controlbar button. void Action(); Execute controlbar button command. void SetAction(const char* action); Set action to be executed by this button. void SetType(const char* type); Set button type. Type can be either ""button"", ""drawnbutton"" or; ""separator"". String is case insensitive. Default is ""button"". void SetType(Int_t type); Set button type. Type can be either kButton, kDrawnButton or kSeparator.; Default is kButton. TControlBarButton(). virtual ~TControlBarButton(); { }. void Create(); { }. const char * GetAction() const; { return fAction.Data(); }. Int_t GetType() const; { return fType; }. » Author: Nenad Buncic 20/02/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gpad:$Id$ » Last generated: 2015-06-02 15:40; This page h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TControlBarButton.html:6607,Inherit,Inheritance,6607,root/html604/TControlBarButton.html,https://root.cern,https://root.cern/root/html604/TControlBarButton.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arButton::(anonymous)kButton; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TControlBarButton::(anonymous)kDrawnButton; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TControlBarButton::(anonymous)kSeparator; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringfActionaction to be executed; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; Int_tfTypebutton type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TControlBarButton(); Default controlbar button ctor. TControlBarButton(const char* label, const char* action = """", const char* hint = """", const char* type = ""button""); Create controlbar button. void Action(); Execute controlbar button command. void SetAction(const char* action); Set action to be executed by this button. void SetType(const char* type); Set button type. Type can be either ""button"", ""drawnbutton"" or; ""separator"". String is case insensitive. Default is ""button"". void SetType(Int_t type); Set button type. Type can be either kButton, kDrawnButton or kSeparator.; Default is kButton. TControlBarButton(). virtual ~TControlBarButton(); { }. void Create(); { }. const char * GetAction() const; { return fAction.Data(); }. Int_t GetType() const; { return fType; }. » Author: Nenad Buncic 20/02/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gpad:$Id$ » Last generated: 2015-06-30 14:41; This page h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TControlBarButton.html:6607,Inherit,Inheritance,6607,root/html602/TControlBarButton.html,https://root.cern,https://root.cern/root/html602/TControlBarButton.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arEvent(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Int_tfDebugDebug level; TPythia8*fPythia8Pointer to pythia8. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPythia8Decayer(); constructor. void Init(); Initialize the decayer. void Decay(Int_t pdg, TLorentzVector* p); Decay a single particle. Int_t ImportParticles(TClonesArray* particles); import the decay products into particles array. void SetForceDecay(Int_t type); Set forced decay mode. void ForceDecay(); ForceDecay not yet implemented. Float_t GetPartialBranchingRatio(Int_t ipart). Float_t GetLifetime(Int_t kf); return lifetime in seconds of teh particle with PDG number pdg. void ReadDecayTable(); to read a decay table (not yet implemented). void AppendParticle(Int_t pdg, TLorentzVector* p); Append a particle to the stack. void ClearEvent(); Clear the event stack. TPythia8Decayer(). virtual ~TPythia8Decayer(); {;}. void SetDebugLevel(Int_t debug); {fDebug = debug;}. » Author: Andreas Morsch 04/07/2008 » Copyright (c) 1998-2008, ALICE Experiment at CERN, All rights reserved. *; » Last changed: root/pythia8:$Name$:$Id$ » Last generated: ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPythia8Decayer.html:6101,Inherit,Inheritance,6101,root/html602/TPythia8Decayer.html,https://root.cern,https://root.cern/root/html602/TPythia8Decayer.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arTransform=Norm"" );; ; // Boosted Decision Trees; if (Use[""BDT""]); factory->BookMethod( dataloader, TMVA::Types::kBDT, ""BDT"",; ""!H:!V:NTrees=100:MinNodeSize=1.0%:BoostType=AdaBoostR2:SeparationType=RegressionVariance:nCuts=20:PruneMethod=CostComplexity:PruneStrength=30"" );; ; if (Use[""BDTG""]); factory->BookMethod( dataloader, TMVA::Types::kBDT, ""BDTG"",; ""!H:!V:NTrees=2000::BoostType=Grad:Shrinkage=0.1:UseBaggedBoost:BaggedSampleFraction=0.5:nCuts=20:MaxDepth=3:MaxDepth=4"" );; // --------------------------------------------------------------------------------------------------; ; // Now you can tell the factory to train, test, and evaluate the MVAs; ; // Train MVAs using the set of training events; factory->TrainAllMethods();; ; // Evaluate all MVAs using the set of test events; factory->TestAllMethods();; ; // Evaluate and compare performance of all configured MVAs; factory->EvaluateAllMethods();; ; // --------------------------------------------------------------; ; // Save the output; outputFile->Close();; ; std::cout << ""==> Wrote root file: "" << outputFile->GetName() << std::endl;; std::cout << ""==> TMVARegression is done!"" << std::endl;; ; delete factory;; delete dataloader;; ; // Launch the GUI for the root macros; if (!gROOT->IsBatch()) TMVA::TMVARegGui( outfileName );; }; ; int main( int argc, char** argv ); {; // Select methods (don't look at this code - not of interest); TString methodList;; for (int i=1; i<argc; i++) {; TString regMethod(argv[i]);; if(regMethod==""-b"" || regMethod==""--batch"") continue;; if (!methodList.IsNull()) methodList += TString("","");; methodList += regMethod;; }; TMVARegression(methodList);; return 0;; }; DataLoader.h; mainint main()Definition Prototype.cxx:12; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; Double_tdouble Double_tDefinition RtypesCore.h:59; TChain.h; TFile.h; inputOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:146012,config,configured,146012,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configured']
Modifiability,"ar];; (*covMatB)(jvar,ivar) = (*covMatB)(ivar,jvar);; }; }; cout << ""signal covariance matrix: "" << endl;; covMatS->Print();; cout << ""background covariance matrix: "" << endl;; covMatB->Print();; ; // produce the square-root matrix; TMatrixD* sqrtMatS = produceSqrtMat( *covMatS );; TMatrixD* sqrtMatB = produceSqrtMat( *covMatB );; ; // loop over species; for (Int_t itype=0; itype<2; itype++) {; ; Float_t* x;; TMatrixD* m;; if (itype == 0) { x = xS; m = sqrtMatS; cout << ""- produce signal"" << endl; }; else { x = xB; m = sqrtMatB; cout << ""- produce background"" << endl; }; ; // event loop; TTree* tree = (itype==0) ? treeS : treeB;; for (Int_t i=0; i<N; i++) {; ; if (i%1000 == 0) cout << ""... event: "" << i << "" ("" << N << "")"" << endl;; getGaussRnd( *v, *m, R );; ; for (Int_t ivar=0; ivar<nvar; ivar++) xvar[ivar] = (*v)[ivar] + x[ivar];; ; tree->Fill();; }; }; ; // write trees; treeS->Write();; treeB->Write();; ; treeS->Show(0);; treeB->Show(1);; ; dataFile->Close();; cout << ""created data file: "" << dataFile->GetName() << endl;; }; ; // create the category data; // type = 1 (offset) or 2 (variable = -99); void create_lin_Nvar_categories(Int_t N = 10000, Int_t type = 2); {; const Int_t nvar = 4;; Float_t xvar[nvar];; Float_t eta;; ; // output file; TFile* dataFile = TFile::Open( ""data.root"", ""RECREATE"" );; ; // create signal and background trees; TTree* treeS = new TTree( ""TreeS"", ""TreeS"", 1 );; TTree* treeB = new TTree( ""TreeB"", ""TreeB"", 1 );; for (Int_t ivar=0; ivar<nvar; ivar++) {; treeS->Branch( TString(Form( ""var%i"", ivar+1 )).Data(), &xvar[ivar], TString(Form( ""var%i/F"", ivar+1 )).Data() );; treeB->Branch( TString(Form( ""var%i"", ivar+1 )).Data(), &xvar[ivar], TString(Form( ""var%i/F"", ivar+1 )).Data() );; }; ; // add category variable; treeS->Branch( ""eta"", &eta, ""eta/F"" );; treeB->Branch( ""eta"", &eta, ""eta/F"" );; ; TRandom R( 100 );; Float_t xS[nvar] = { 0.2, 0.3, 0.5, 0.9 };; Float_t xB[nvar] = { -0.2, -0.3, -0.5, -0.6 };; Float_t dx[nvar] = { 1.0, 1.0, 1.0, 1.0 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/createData_8C.html:13377,variab,variable,13377,doc/master/createData_8C.html,https://root.cern,https://root.cern/doc/master/createData_8C.html,1,['variab'],['variable']
Modifiability,"ar_t > &fReset, const TMatrixT< Scalar_t > &fUpdate, const TMatrixT< Scalar_t > &fCandidate, const TMatrixT< Scalar_t > &weights_reset, const TMatrixT< Scalar_t > &weights_update, const TMatrixT< Scalar_t > &weights_candidate, const TMatrixT< Scalar_t > &weights_reset_state, const TMatrixT< Scalar_t > &weights_update_state, const TMatrixT< Scalar_t > &weights_candidate_state, const TMatrixT< Scalar_t > &input, TMatrixT< Scalar_t > &input_gradient);  Backward pass for GRU Network. ;  ; static void ScaleAdd (TMatrixT< Scalar_t > &A, const TMatrixT< Scalar_t > &B, Scalar_t beta=1.0);  Adds a the elements in matrix B scaled by c to the elements in the matrix A. ;  ; static void Copy (TMatrixT< Scalar_t > &A, const TMatrixT< Scalar_t > &B);  ; template<typename AMatrix_t > ; static void CopyDiffArch (TMatrixT< Scalar_t > &A, const AMatrix_t &B);  ; static void ScaleAdd (std::vector< TMatrixT< Scalar_t > > &A, const std::vector< TMatrixT< Scalar_t > > &B, Scalar_t beta=1.0);  Above functions extended to vectors. ;  ; static void Copy (std::vector< TMatrixT< Scalar_t > > &A, const std::vector< TMatrixT< Scalar_t > > &B);  ; template<typename AMatrix_t > ; static void CopyDiffArch (std::vector< TMatrixT< Scalar_t > > &A, const std::vector< AMatrix_t > &B);  ; Activation Functions; For each activation function, the low-level interface contains two routines.; One that applies the activation function to a matrix and one that evaluate the derivatives of the activation function at the elements of a given matrix and writes the results into the result matrix. . static void Identity (TMatrixT< AReal > &B);  ; static void IdentityDerivative (TMatrixT< AReal > &B, const TMatrixT< AReal > &A);  ; static void Relu (TMatrixT< AReal > &B);  ; static void ReluDerivative (TMatrixT< AReal > &B, const TMatrixT< AReal > &A);  ; static void Sigmoid (TMatrixT< AReal > &B);  ; static void SigmoidDerivative (TMatrixT< AReal > &B, const TMatrixT< AReal > &A);  ; static void Tanh (TMatrixT< AReal > ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TReference.html:8738,extend,extended,8738,doc/master/classTMVA_1_1DNN_1_1TReference.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TReference.html,1,['extend'],['extended']
Modifiability,"ar_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsSelfCachedReal(); Destructor. void fillCacheObject(RooAbsCachedReal::FuncCacheElem& cache) const; Fill cache with sampling of function as defined by the evaluate() implementation. RooArgSet* actualObservables(const RooArgSet& nset) const; Defines observables to be cached, given a set of user defined observables; Returns the subset of nset that are observables this p.d.f. RooArgSet* actualParameters(const RooArgSet& nset) const; Defines parameters on which cache contents depends. Returns; subset of variables of self that is not contained in the; supplied nset. const char* inputBaseName() const; Use own name as base name for caches. » Last changed: Tue Mar 10 17:14:13 2015 » Last generated: 2015-03-10 17:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsSelfCachedReal.html:37833,variab,variables,37833,root/html534/RooAbsSelfCachedReal.html,https://root.cern,https://root.cern/root/html534/RooAbsSelfCachedReal.html,4,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variables']"
Modifiability,"aracters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixSystem.html:31640,inherit,inherited,31640,doc/master/classTDavixSystem.html,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html,4,['inherit'],['inherited']
Modifiability,"aram (Int_t mapsize) override;  Set the initial size of the hashtable used to store object and class references during writing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TagStreamerInfo (TVirtualStreamerInfo *info) override;  Mark the classindex of the current file as using this TStreamerInfo. ;  ; Int_t WriteClones (TClonesArray *a, Int_t nobjects) override;  Interface to TStreamerInfo::WriteBufferClones. ;  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ; virtual void WriteObject (const TObject *obj, Bool_t cacheReuse)=0;  ; void WriteObject (const TObject *obj, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *ptrClass, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ; UShort_t WriteProcessID (TProcessID *pid) override;  Check if the ProcessID pid is already in the file. ;  ;  Public Member Functions inherited from TBuffer;  TBuffer (EMode mode);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ; virtual ~TBuffer ();  Delete an I/O buffer object. ;  ; void AutoExpand (Int_t size_needed);  Automatically calculate a new size and expand the buffer to fit at least size_needed. ;  ; char * Buffer () const;  ; Int_t BufferSize () const;  ; Bool_t ByteSwapBuffer (Long64_t n, EDataType type);  Byte-swap N primitive-elements in the buffer. ;  ; virtual void ClassBegin (const TClass *, Version_t=-1)=0;  ; virtual void ClassEnd (const TClass *)=0;  ; virtual void ClassMember (const char *, const char *=nullptr, Int_t=-1, Int_t=-1)=0;  ; virtual void DecrementLevel (TVirtualStreamerInfo *)=0;  ; void DetachBuffer ();  ; void Expand (Int_t newsize, Bool_t copy=kTRUE);  Expand (or shrink) the I/O buffer to newsize bytes. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferText.html:10210,inherit,inherited,10210,doc/master/classTBufferText.html,https://root.cern,https://root.cern/doc/master/classTBufferText.html,1,['inherit'],['inherited']
Modifiability,"aram (Int_t mapsize) override;  Set the initial size of the hashtable used to store object and class references during writing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TagStreamerInfo (TVirtualStreamerInfo *info) override;  Mark the classindex of the current file as using this TStreamerInfo. ;  ; Int_t WriteClones (TClonesArray *a, Int_t nobjects) override;  Interface to TStreamerInfo::WriteBufferClones. ;  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ; virtual void WriteObject (const TObject *obj, Bool_t cacheReuse)=0;  ; void WriteObject (const TObject *obj, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *ptrClass, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ; UShort_t WriteProcessID (TProcessID *pid) override;  Check if the ProcessID pid is already in the file. ;  ;  Public Member Functions inherited from TBuffer;  TBuffer (EMode mode);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ; virtual ~TBuffer ();  Delete an I/O buffer object. ;  ; void AutoExpand (Int_t size_needed);  Automatically calculate a new size and expand the buffer to fit at least size_needed. ;  ; char * Buffer () const;  ; Int_t BufferSize () const;  ; Bool_t ByteSwapBuffer (Long64_t n, EDataType type);  Byte-swap N primitive-elements in the buffer. ;  ; void DetachBuffer ();  ; void Expand (Int_t newsize, Bool_t copy=kTRUE);  Expand (or shrink) the I/O buffer to newsize bytes. ;  ; Int_t GetBufferVersion () const;  ; char * GetCurrent () const;  ; TObject * GetParent () const;  Return pointer to parent of this buffer. ;  ; ReAllocCharFun_t GetReAllocFunc () const;  Return the reallocation method currently used. ;  ; Bool_t IsRea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferJSON.html:28469,inherit,inherited,28469,doc/master/classTBufferJSON.html,https://root.cern,https://root.cern/doc/master/classTBufferJSON.html,4,['inherit'],['inherited']
Modifiability,"arameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgressDialog (Bool_t on=kTRUE);  Enable/Disable the graphic progress dialog. ;  ; void SetQueryMode (EQueryMode mode);  Change query running mode to the one specified by 'mode'. ;  ; void SetRealTimeLog (Bool_t on=kTRUE);  Switch ON/OFF the real-time logging facility. ;  ; virtual void ShowCache (Bool_t all=kFALSE);  List contents of file cache. ;  ; virtual void ShowData ();  List contents of the data directory in the sandbox. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; virtual void ShowDataSetCache (const char *dataset=0);  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; virtual void ShowDataSets (const char *uri="""", const char *optStr="""");  Shows datasets in locations that match the uri. ;  ; void ShowEnabledPackages (Bool_t all=kFALSE);  List which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:19380,sandbox,sandbox,19380,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,3,['sandbox'],['sandbox']
Modifiability,"arameter errors) when there are parameter limits.; 102Users should however realize that the transformation is only a linear; 103approximation, and that it cannot give a meaningful result if one or more; 104parameters is very close to a limit, where; 105\f$\partial P_{\mathrm{ext}} / \partial P_{\mathrm{int}} \approx 0\f$.; 106Therefore, it is recommended that:; 107 ; 108 1. Limits on variable parameters should be used only when needed in order; 109to prevent the parameter from taking on unphysical values.; 110 ; 111 2. When a satisfactory minimum has been found using limits, the limits; 112should then be removed if possible, in order to perform or re-perform the; 113error analysis without limits.; 114 ; 115 ; 116### How to get the right answer from MINUIT.; 117 ; 118MINUIT offers the user a choice of several minimization algorithms. The; 119MIGRAD algorithm is in general the best minimizer for; 120nearly all functions. It is a variable-metric method with inexact line; 121search, a stable metric updating scheme, and checks for; 122positive-definiteness. Its main weakness is that it depends heavily on; 123knowledge of the first derivatives, and fails miserably if they are very; 124inaccurate.; 125 ; 126If parameter limits are needed, in spite of the side effects, then the; 127user should be aware of the following techniques to alleviate problems; 128caused by limits:; 129 ; 130#### Getting the right minimum with limits.; 131 ; 132If MIGRAD converges normally to a point where no parameter is near one of; 133its limits, then the existence of limits has probably not prevented MINUIT; 134from finding the right minimum. On the other hand, if one or more; 135parameters is near its limit at the minimum, this may be because the true; 136minimum is indeed at a limit, or it may be because the minimizer has; 137become ``blocked'' at a limit. This may normally happen only if the; 138parameter is so close to a limit (internal value at an odd multiple of; 139\f$\pm \frac{\pi}{2}\f$",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:5818,variab,variable-metric,5818,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variable-metric']
Modifiability,"arameter request; 5681 ktofix = 0;; 5682 if (fNvarl[k-1] < 0) goto L50;; 5683// previously defined parameter is being redefined; 5684// find if parameter was fixed; 5685 for (ix = 1; ix <= fNpfix; ++ix) {; 5686 if (fIpfix[ix-1] == k) ktofix = k;; 5687 }; 5688 if (ktofix > 0) {; 5689 mnwarn(""W"", ""PARAM DEF"", ""REDEFINING A FIXED PARAMETER."");; 5690 if (kint >= fMaxint) {; 5691 Printf("" CANNOT RELEASE. MAX NPAR EXCEEDED."");; 5692 goto L800;; 5693 }; 5694 mnfree(-k);; 5695 }; 5696// if redefining previously variable parameter; 5697 if (fNiofex[k-1] > 0) kint = fNpar - 1;; 5698L50:; 5699 ; 5700// print heading; 5701 if (fLphead && fISW[4] >= 0) {; 5702 Printf("" PARAMETER DEFINITIONS:"");; 5703 Printf("" NO. NAME VALUE STEP SIZE LIMITS"");; 5704 fLphead = kFALSE;; 5705 }; 5706 if (wk > 0) goto L122;; 5707// constant parameter; 5708 if (fISW[4] >= 0) {; 5709 Printf("" %5d %-10s %13.5e constant"",k,(const char*)cnamk,uk);; 5710 }; 5711 nvl = 0;; 5712 goto L200;; 5713L122:; 5714 if (a == 0 && b == 0) {; 5715// variable parameter without limits; 5716 nvl = 1;; 5717 if (fISW[4] >= 0) {; 5718 Printf("" %5d %-10s %13.5e%13.5e no limits"",k,(const char*)cnamk,uk,wk);; 5719 }; 5720 } else {; 5721// variable parameter with limits; 5722 nvl = 4;; 5723 fLnolim = kFALSE;; 5724 if (fISW[4] >= 0) {; 5725 Printf("" %5d %-10s %13.5e%13.5e %13.5e%13.5e"",k,(const char*)cnamk,uk,wk,a,b);; 5726 }; 5727 }; 5728// request for another variable parameter; 5729 ++kint;; 5730 if (kint > fMaxint) {; 5731 Printf("" MINUIT USER ERROR. TOO MANY VARIABLE PARAMETERS."");; 5732 goto L800;; 5733 }; 5734 if (nvl == 1) goto L200;; 5735 if (a == b) {; 5736 Printf("" USER ERROR IN MINUIT PARAMETER"");; 5737 Printf("" DEFINITION"");; 5738 Printf("" UPPER AND LOWER LIMITS EQUAL."");; 5739 goto L800;; 5740 }; 5741 if (b < a) {; 5742 sav = b;; 5743 b = a;; 5744 a = sav;; 5745 mnwarn(""W"", ""PARAM DEF"", ""PARAMETER LIMITS WERE REVERSED."");; 5746 if (fLwarn) fLphead = kTRUE;; 5747 }; 5748 if (b - a > 1e7) {; 5749 mnwarn(""W"", ""PARAM DE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:186409,variab,variable,186409,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variable']
Modifiability,"arameter under num.; *-* If has arguments it can be :; *-* - function shortcut, eg. sin; *-* * will be replaced with fullname of function, eg. sin -> TMath::Sin; *-* - function from cling environment, eg. TMath::BreitWigner(x,y,z); *-* * first check if function exists, and has same number of arguments, then accept it and set as found.; *-* If all functors after iteration are matched with corresponding action,; *-* it inputs C++ code of formula into cling, and sets flag that formula is ready to evaluate.; -. void SetPredefinedParamNames(). const TObject* GetLinearPart(Int_t i) const; Return linear part. void AddVariable(const TString& name, Double_t value = 0); -; *-* Adds variable to known variables, and reprocess formula.; -. void AddVariables(const TString* vars, const Int_t size); -; *-* Adds multiple variables.; *-* First argument is an array of pairs<TString,Double>, where; *-* first argument is name of variable,; *-* second argument represents value.; *-* size - number of variables passed in first argument; -. void SetName(const char* name); Set the name of the formula. We need to allow the list of function to; properly handle the hashes. void SetVariables(const pair<TString,Double_t>* vars, const Int_t size); -; *-* Sets multiple variables.; *-* First argument is an array of pairs<TString,Double>, where; *-* first argument is name of variable,; *-* second argument represents value.; *-* size - number of variables passed in first argument; -. Double_t GetVariable(const char* name) const; -; *-* Returns variable value.; -. Int_t GetVarNumber(const char* name) const; -; *-* Returns variable number (positon in array) given its name; -. TString GetVarName(Int_t ivar) const; -; *-* Returns variable name given its position in the array; -. void SetVariable(const TString& name, Double_t value); -; *-* Sets variable value.; -. void DoAddParameter(const TString& name, Double_t value, bool processFormula); -; *-* Adds parameter to known parameters.; *-* User should use S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFormula.html:15312,variab,variables,15312,root/html604/TFormula.html,https://root.cern,https://root.cern/root/html604/TFormula.html,2,['variab'],['variables']
Modifiability,"arameter with NewPhysics attribute set to true; RooRealVar kSM(""kSM"", ""sm modifier"", 1.0);; RooRealVar cHq3(""cHq3"", ""EFT modifier"", 0.0, 1.0);; cHq3.setAttribute(""NewPhysics"", true);; ; // I n p u t s n e e d e d f o r c o n f i g; // ---------------------------------------------; std::string infilename = std::string(gROOT->GetTutorialDir()) + ""/roofit/input_histos_rf_lagrangianmorph.root"";; std::vector<std::string> samplelist = {""SM_NPsq0"", ""cHq3_NPsq1"", ""cHq3_NPsq2""};; ; // S e t u p C o n f i g; // ---------------------------------------------; RooLagrangianMorphFunc::Config config;; config.fileName = infilename;; config.observableName = observablename;; config.folderNames = samplelist;; config.couplings.add(cHq3);; config.couplings.add(kSM);; ; // C r e a t e m o r p h i n g f u n c t i o n; // ---------------------------------------------; RooLagrangianMorphFunc morphfunc(""morphfunc"", ""morphed dist. of pTV"", config);; ; // G e t m o r p h e d d i s t r i b u t i o n f o r; // d i f f e r e n t c H q 3; // ---------------------------------------------; morphfunc.setParameter(""cHq3"", 0.01);; auto morph_hist_0p01 = morphfunc.createTH1(""morph_cHq3=0.01"");; morphfunc.setParameter(""cHq3"", 0.25);; auto morph_hist_0p25 = morphfunc.createTH1(""morph_cHq3=0.25"");; morphfunc.setParameter(""cHq3"", 0.5);; auto morph_hist_0p5 = morphfunc.createTH1(""morph_cHq3=0.5"");; RooDataHist morph_datahist_0p01(""morph_dh_cHq3=0.01"", """", {obsvar}, morph_hist_0p01);; RooDataHist morph_datahist_0p25(""morph_dh_cHq3=0.25"", """", {obsvar}, morph_hist_0p25);; RooDataHist morph_datahist_0p5(""morph_dh_cHq3=0.5"", """", {obsvar}, morph_hist_0p5);; ; // E x t r a c t i n p u t t e m p l a t e s; // f o r p l o t t i n g; // ---------------------------------------------; TFile *file = new TFile(infilename.c_str(), ""READ"");; TFolder *folder = 0;; file->GetObject(samplelist[0].c_str(), folder);; TH1 *input_hist0 = dynamic_cast<TH1 *>(folder->FindObject(observablename.c_str()));; input_hist0->SetDirectory(NUL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf711__lagrangianmorph_8C.html:2145,config,config,2145,doc/master/rf711__lagrangianmorph_8C.html,https://root.cern,https://root.cern/doc/master/rf711__lagrangianmorph_8C.html,1,['config'],['config']
Modifiability,"arameter<long long>&); TParameter<long long>(const char* name, const long long& val); TParameter<long long>(const char* name, const long long& val, char mergemode); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TParameter::EStatusBits { kMultiply; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfName; long longfVal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t TParameter<AParamType> Merge(TCollection* in); Merge objects in the list.; Returns the number of objects that were in the list. const char * GetName() const; { return fName; }. const AParamType & GetVal() const; { return fVal; }. void SetVal(const long long& val); { fVal = val; }. void SetMergeMode(char mergemode = '+'). ULong_t Hash() const; { return fName.Hash(); }. Bool_t IsSortable() const; { return kTRUE; }. Int_t Compare(const TObject* obj) const; Compare two TParameter objects. Returns 0 when equal, -1 when this is; smaller and +1 when bigger (like strcmp). void ls(Option_t* ) const; Print this parameter content. void Print(Option_t* ) const; Print this parameter content. cout << IsA(). » Author: Maarten Ballintijn 21/06/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TParameter.h 40272 2011-07-18 11:12:14Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParameter_Long64_t_.html:5521,Inherit,Inheritance,5521,root/html532/TParameter_Long64_t_.html,https://root.cern,https://root.cern/root/html532/TParameter_Long64_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arameters (Double_t a0Init, Bool_t fixA0, Double_t a1Init, Bool_t fixA1, Double_t a2Init, Bool_t fixA2);  This function sets the following fitting parameters of background: ;  ; void SetFitParameters (Int_t xmin, Int_t xmax, Int_t numberIterations, Double_t alpha, Int_t statisticType, Int_t alphaOptim, Int_t power, Int_t fitTaylor);  This function sets the following fitting parameters: ;  ; void SetPeakParameters (Double_t sigma, Bool_t fixSigma, const Double_t *positionInit, const Bool_t *fixPosition, const Double_t *ampInit, const Bool_t *fixAmp);  This function sets the following fitting parameters of peaks: ;  ; void SetTailParameters (Double_t tInit, Bool_t fixT, Double_t bInit, Bool_t fixB, Double_t sInit, Bool_t fixS);  This function sets the following fitting parameters of tails of peaks. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumFit.html:4795,inherit,inherited,4795,doc/master/classTSpectrumFit.html,https://root.cern,https://root.cern/doc/master/classTSpectrumFit.html,1,['inherit'],['inherited']
Modifiability,"arameters of a TH1D ;  CTH2DModelA struct which stores the parameters of a TH2D ;  CTH3DModelA struct which stores the parameters of a TH3D ;  CTInterfaceThe public interface to the TDataFrame federation of classes ;  CTProfile1DModelA struct which stores the parameters of a TProfile ;  CTProfile2DModelA struct which stores the parameters of a TProfile2D ;  CTResultProxySmart pointer for the return type of actions ;  CTRootDS;  CTSnapshotOptionsA collection of options to steer the creation of the dataset on file ;  CTTrivialDS;  CComboBoxItemStruct ROOT::Experimental::ComboBoxItemDescriptor for the openui5 ComboBox, used in FitPanel ;  ►CTAxisBaseHistogram axis base class ;  Cconst_iteratorRandom const_iterator through bins ;  ►CTAxisConfigObjects used to configure the different axis types ;  CGrow_tTag type signalling that an axis should be able to grow; used for calling the appropriate constructor ;  CTAxisEquidistantAxis with equidistant bin borders ;  CTAxisGrowAn axis that can extend its range, keeping the number of its bins unchanged ;  CTAxisIrregularAn axis with non-equidistant bins (also known as ""variable binning"") ;  CTAxisLabelsA TAxisGrow that has a label assigned to each bin and a bin width of 1 ;  CTAxisViewCommon view on a TAxis, no matter what its kind ;  CTBufferMergerTBufferMerger is a class to facilitate writing data in parallel from multiple threads, while writing to a single output file ;  CTBufferMergerFile;  CTCanvasA window's topmost TPad ;  ►CTColorA color: Red|Green|Blue|Alpha, or a position in a TPalette ;  CAlpha;  CAutoTagUsed to signal that this color shall be automatically chosen by the drawing routines, by picking a color from the TPad's (or rather its TFrame's) current TPalette ;  CTAlphaThe alpha value of a color: 0 is completely transparent, 1 is completely opaque ;  CTDataFrameROOT's TDataFrame offers a high level interface for analyses of data stored in TTrees ;  ►CTDirectoryKey/value store of objects ;  CToContentType;  CTDirect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/annotated.html:16524,extend,extend,16524,doc/v612/annotated.html,https://root.cern,https://root.cern/doc/v612/annotated.html,1,['extend'],['extend']
Modifiability,"arameters value; Order in the vector is by default the aphabetic order given to the parameters; apart if the users has defined explicitly the parameter names. void SetParameter(Int_t param, Double_t value); Set a parameter given a parameter index; The parameter index is by default the aphabetic order given to the parameters; apart if the users has defined explicitly the parameter names. void SetParNames(const char* name0 = ""p0"", const char* name1 = ""p1"", const char* name2 = ""p2"", const char* name3 = ""p3"", const char* name4 = ""p4"", const char* name5 = ""p5"", const char* name6 = ""p6"", const char* name7 = ""p7"", const char* name8 = ""p8"", const char* name9 = ""p9"", const char* name10 = ""p10""). void SetParName(Int_t ipar, const char* name). void ReplaceParamName(TString& formula, const TString& oldname, const TString& name); replace in Formula expression the parameter name. Double_t EvalPar(const Double_t* x, const Double_t* params = 0) const. Double_t Eval(Double_t x, Double_t y, Double_t z, Double_t t) const; -; *-* Sets first 4 variables (e.g. x, y, z, t) and evaluate formula.; -. Double_t Eval(Double_t x, Double_t y, Double_t z) const; -; *-* Sets first 3 variables (e.g. x, y, z) and evaluate formula.; -. Double_t Eval(Double_t x, Double_t y) const; -; *-* Sets first 2 variables (e.g. x and y) and evaluate formula.; -. Double_t Eval(Double_t x) const; -; *-* Sets first variable (e.g. x) and evaluate formula.; -; double xxx[1] = {x};. Double_t DoEval(const Double_t* x, const Double_t* p = nullptr) const; -; *-* Evaluate formula.; *-* If formula is not ready to execute(missing parameters/variables),; *-* print these which are not known.; *-* If parameter has default value, and has not been setted, appropriate warning is shown.; -. TString GetExpFormula(Option_t* option = """") const. void Print(Option_t* option = """") const. void Streamer(TBuffer& ). Int_t GetNdim() const; {return fNdim;}. Int_t GetNpar() const; {return fNpar;}. Int_t GetNumber() const; {return fNumber;}. Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFormula.html:18554,variab,variables,18554,root/html604/TFormula.html,https://root.cern,https://root.cern/root/html604/TFormula.html,2,['variab'],['variables']
Modifiability,"arameters where they are not needed. As an example, suppose that the user has defined the following parameters:. Parameter 0, constant.; Parameter 1, freely variable.; Parameter 2, variable with limits.; Parameter 3, constant.; Parameter 4, freely variable. Then the internal parameter list would be as follows:. Internal parameter 0 = external parameter 1.; Internal parameter 1 = external parameter 2, transformed appropriately.; Internal parameter 2 = external parameter 4. In the above example, M considers that the number of external parameters is 5, and the number of internal parameters is 3. This is the number which determines, for example, the size of the error matrix of the parameters, since only variable parameters have errors.; An important feature of M is that parameters are allowed to change types during the M minimization and analysis of a \(\mbox{FCN}\) function. Several applications in M have methods available to make variable parameters fixed and vice-versa; to impose, change, or remove limits from variable parameters; and even to define completely new parameters at any time during a run. In addition, some M applications (notably the \(\mbox{MINOS}\) error analysis) cause one or more variable parameters to be temporarily fixed during the calculation. Therefore, the correspondence between external and internal parameter lists is in general a dynamic one, and the number of internal parameters is not necessarily constant.; For more details about parameter interaction see [api:parameters].; 2.3.1 The transformation for parameters with limits; [intro:limits]; For variable parameters with double sided limits \(a\) (lower) and \(b\) (upper), M uses the following transformation:; \[\begin{aligned}; P_{\mathrm{int}} &=& \arcsin; \left( 2\: \frac{ P_{\mathrm{ext}}-a}{ b-a} - 1 \right) \\; P_{\mathrm{ext}} &=& a + \frac{ b - a}{ 2}; \left( \sin P_{\mathrm{int}} + 1 \right) \end{aligned}\]; so that the internal value \(P_{\mathrm{int}}\) can take on any value, while ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:12962,variab,variable,12962,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,8,['variab'],['variable']
Modifiability,"arameters. ;  ; virtual Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; virtual Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Variant of getAnalyticalIntegral that is also passed the normalization set that should be applied to the integrand of which the integral is requested. ;  ; bool getForceNumInt () const;  ; RooNumIntConfig * getIntegratorConfig ();  Return the numeric integration configuration used for this object. ;  ; const RooNumIntConfig * getIntegratorConfig () const;  Return the numeric integration configuration used for this object. ;  ; virtual Int_t getMaxVal (const RooArgSet &vars) const;  Advertise capability to determine maximum value of function for given set of observables. ;  ; const char * getPlotLabel () const;  Get the label associated with the variable. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual double getValV (const RooArgSet *normalisationSet=nullptr) const;  Return value of object. ;  ; virtual void gradient (double *) const;  ; virtual bool hasGradient () const;  ; TClass * IsA () const override;  ; virtual bool isBinnedDistribution (const RooArgSet &) const;  Tests if the distribution is binned. Unless overridden by derived classes, this always returns false. ;  ; bool isIdentical (const RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:18368,variab,variable,18368,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,7,['variab'],['variable']
Modifiability,"arameters. ;  ; virtual Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; virtual Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Variant of getAnalyticalIntegral that is also passed the normalization set that should be applied to the integrand of which the integral is requested. ;  ; bool getForceNumInt () const;  ; RooNumIntConfig * getIntegratorConfig ();  Return the numeric integration configuration used for this object. ;  ; const RooNumIntConfig * getIntegratorConfig () const;  Return the numeric integration configuration used for this object. ;  ; virtual Int_t getMaxVal (const RooArgSet &vars) const;  Advertise capability to determine maximum value of function for given set of observables. ;  ; const char * getPlotLabel () const;  Get the label associated with the variable. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual double getValV (const RooArgSet *normalisationSet=nullptr) const;  Return value of object. ;  ; virtual void gradient (double *) const;  ; virtual bool hasGradient () const;  ; bool isIdentical (const RooAbsArg &other, bool assumeSameType=false) const override;  ; virtual bool isOffsetting () const;  ; bool isSelectedComp () const;  If true, the current pdf is a selected component (for use in plotting) ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinWidthFunction.html:13580,variab,variable,13580,doc/master/classRooBinWidthFunction.html,https://root.cern,https://root.cern/doc/master/classRooBinWidthFunction.html,1,['variab'],['variable']
Modifiability,"arameters. ;  ; virtual Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; virtual Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Variant of getAnalyticalIntegral that is also passed the normalization set that should be applied to the integrand of which the integral is requested. ;  ; bool getForceNumInt () const;  ; RooNumIntConfig * getIntegratorConfig ();  Return the numeric integration configuration used for this object. ;  ; const RooNumIntConfig * getIntegratorConfig () const;  Return the numeric integration configuration used for this object. ;  ; virtual Int_t getMaxVal (const RooArgSet &vars) const;  Advertise capability to determine maximum value of function for given set of observables. ;  ; const char * getPlotLabel () const;  Get the label associated with the variable. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual double getValV (const RooArgSet *normalisationSet=nullptr) const;  Return value of object. ;  ; virtual void gradient (double *) const;  ; virtual bool hasGradient () const;  ; virtual bool isBinnedDistribution (const RooArgSet &) const;  Tests if the distribution is binned. Unless overridden by derived classes, this always returns false. ;  ; bool isIdentical (const RooAbsArg &other, bool assumeSameType=fa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1Binding.html:13168,variab,variable,13168,doc/master/classRooCFunction1Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1Binding.html,31,['variab'],['variable']
Modifiability,"arameters. ;  ; virtual Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; virtual Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Variant of getAnalyticalIntegral that is also passed the normalization set that should be applied to the integrand of which the integral is requested. ;  ; bool getForceNumInt () const;  ; RooNumIntConfig * getIntegratorConfig ();  Return the numeric integration configuration used for this object. ;  ; const RooNumIntConfig * getIntegratorConfig () const;  Return the numeric integration configuration used for this object. ;  ; virtual Int_t getMaxVal (const RooArgSet &vars) const;  Advertise capability to determine maximum value of function for given set of observables. ;  ; const char * getPlotLabel () const;  Get the label associated with the variable. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual void gradient (double *) const;  ; virtual bool hasGradient () const;  ; TClass * IsA () const override;  ; bool isIdentical (const RooAbsArg &other, bool assumeSameType=false) const override;  ; virtual bool isOffsetting () const;  ; bool isSelectedComp () const;  If true, the current pdf is a selected component (for use in plotting) ;  ; void logEvalError (const char *message, const char *serverValueStrin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPdfWrapper.html:24192,variab,variable,24192,doc/master/classPdfWrapper.html,https://root.cern,https://root.cern/doc/master/classPdfWrapper.html,1,['variab'],['variable']
Modifiability,"arameters. ;  ; virtual Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; virtual Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Variant of getAnalyticalIntegral that is also passed the normalization set that should be applied to the integrand of which the integral is requested. ;  ; bool getForceNumInt () const;  ; RooNumIntConfig * getIntegratorConfig ();  Return the numeric integration configuration used for this object. ;  ; const RooNumIntConfig * getIntegratorConfig () const;  Return the numeric integration configuration used for this object. ;  ; virtual Int_t getMaxVal (const RooArgSet &vars) const;  Advertise capability to determine maximum value of function for given set of observables. ;  ; const char * getPlotLabel () const;  Get the label associated with the variable. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual void gradient (double *) const;  ; virtual bool hasGradient () const;  ; TClass * IsA () const override;  ; virtual bool isBinnedDistribution (const RooArgSet &) const;  Tests if the distribution is binned. Unless overridden by derived classes, this always returns false. ;  ; bool isIdentical (const RooAbsArg &other, bool assumeSameType=false) const override;  ; virtual bool isOffsetting () const;  ; bool i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo2DKeysPdf.html:25562,variab,variable,25562,doc/master/classRoo2DKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRoo2DKeysPdf.html,4,['variab'],['variable']
Modifiability,"arameters. ;  ; virtual Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; virtual Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Variant of getAnalyticalIntegral that is also passed the normalization set that should be applied to the integrand of which the integral is requested. ;  ; bool getForceNumInt () const;  ; RooNumIntConfig * getIntegratorConfig ();  Return the numeric integration configuration used for this object. ;  ; const RooNumIntConfig * getIntegratorConfig () const;  Return the numeric integration configuration used for this object. ;  ; virtual Int_t getMaxVal (const RooArgSet &vars) const;  Advertise capability to determine maximum value of function for given set of observables. ;  ; const char * getPlotLabel () const;  Get the label associated with the variable. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual void gradient (double *) const;  ; virtual bool hasGradient () const;  ; bool isIdentical (const RooAbsArg &other, bool assumeSameType=false) const override;  ; virtual bool isOffsetting () const;  ; bool isSelectedComp () const;  If true, the current pdf is a selected component (for use in plotting) ;  ; void logEvalError (const char *message, const char *serverValueString=nullptr) const;  Log evaluation e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorphFunc.html:15296,variab,variable,15296,doc/master/classRooMomentMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorphFunc.html,1,['variab'],['variable']
Modifiability,"arameters. ;  ; virtual Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; virtual Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Variant of getAnalyticalIntegral that is also passed the normalization set that should be applied to the integrand of which the integral is requested. ;  ; bool getForceNumInt () const;  ; RooNumIntConfig * getIntegratorConfig ();  Return the numeric integration configuration used for this object. ;  ; const RooNumIntConfig * getIntegratorConfig () const;  Return the numeric integration configuration used for this object. ;  ; virtual Int_t getMaxVal (const RooArgSet &vars) const;  Advertise capability to determine maximum value of function for given set of observables. ;  ; const char * getPlotLabel () const;  Get the label associated with the variable. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual void gradient (double *) const;  ; virtual bool hasGradient () const;  ; virtual bool isBinnedDistribution (const RooArgSet &) const;  Tests if the distribution is binned. Unless overridden by derived classes, this always returns false. ;  ; bool isIdentical (const RooAbsArg &other, bool assumeSameType=false) const override;  ; virtual bool isOffsetting () const;  ; bool isSelectedComp () const;  If true, t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBukinPdf.html:24179,variab,variable,24179,doc/master/classRooBukinPdf.html,https://root.cern,https://root.cern/doc/master/classRooBukinPdf.html,26,['variab'],['variable']
Modifiability,"arameters. [in]rowCoordinates of the bin. ; [in]wgtIncrement by this weight. ; [in]sumw2Optionally, track the sum of squared weights. If a value > 0 or a weight != 1. is passed for the first time, a vector for the squared weights will be allocated. . Definition at line 1704 of file RooDataHist.cxx. ◆ add() [4/4]. void RooDataHist::add ; (; const RooArgSet & ; row, . double ; wgt = 1.0 . ). inlineoverridevirtual . Add wgt to the bin content enclosed by the coordinates passed in row. ; Implements RooAbsData.; Definition at line 72 of file RooDataHist.h. ◆ adjustBinning(). void RooDataHist::adjustBinning ; (; const RooArgList & ; vars, . const TH1 & ; href, . Int_t * ; offset = nullptr . ). protected . Adjust binning specification on first and optionally second and third observable to binning in given reference TH1. ; Used by constructors that import data from an external TH1. Both the variables in vars and in this RooDataHist are adjusted. Parameters. varsList with variables that are supposed to have their binning adjusted. ; hrefReference histogram that dictates the binning ; offsetIf not nullptr, a possible bin count offset for the axes x,y,z is saved here as Int_t[3] . Definition at line 737 of file RooDataHist.cxx. ◆ arraySize(). int RooDataHist::arraySize ; (; ); const. inline . Definition at line 215 of file RooDataHist.h. ◆ binVolume() [1/3]. double RooDataHist::binVolume ; (; ); const. inline . Return volume of current bin. ; Deprecated:Use binVolume(std::size_t) const. ; Definition at line 194 of file RooDataHist.h. ◆ binVolume() [2/3]. double RooDataHist::binVolume ; (; const RooArgSet & ; bin); const. Return the volume of the bin enclosing coordinates 'coord'. ; Definition at line 2202 of file RooDataHist.cxx. ◆ binVolume() [3/3]. double RooDataHist::binVolume ; (; std::size_t ; i); const. inline . Return bin volume of i-th bin. ; See alsogetIndex() ; Definition at line 118 of file RooDataHist.h. ◆ binVolumes(). std::span< const double > RooDataHist::binVol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:53094,variab,variables,53094,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,1,['variab'],['variables']
Modifiability,"arameters: . working_matrix-pointer to matrix of transformed data; working_vector-pointer to vector where the data are processed; numx,numy-lengths of processed data; direction-forward or inverse; type-type of transform (see manual) . Definition at line 685 of file TSpectrum2Transform.cxx. ◆ IsA(). TClass * TSpectrum2Transform::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 73 of file TSpectrum2Transform.h. ◆ SetDirection(). void TSpectrum2Transform::SetDirection ; (; Int_t ; direction). This function sets the direction of the transform: . direction (forward or inverse) . Definition at line 2762 of file TSpectrum2Transform.cxx. ◆ SetEnhanceCoeff(). void TSpectrum2Transform::SetEnhanceCoeff ; (; Double_t ; enhanceCoeff). This function sets the enhancement coefficient: . enhanceCoeff - after the transform the enhanced region (xmin, xmax, ymin, ymax) is multiplied by this coefficient. Applies only for enhancement operation. . Definition at line 2784 of file TSpectrum2Transform.cxx. ◆ SetFilterCoeff(). void TSpectrum2Transform::SetFilterCoeff ; (; Double_t ; filterCoeff). This function sets the filter coefficient: . filterCoeff - after the transform the filtered region (xmin, xmax, ymin, ymax) is replaced by this coefficient. Applies only for filtereng operation. . Definition at line 2775 of file TSpectrum2Transform.cxx. ◆ SetRegion(). void TSpectrum2Transform::SetRegion ; (; Int_t ; xmin, . Int_t ; xmax, . Int_t ; ymin, . Int_t ; ymax . ). This function sets the filtering or enhancement region: . xmin, xmax, ymin, ymax . Definition at line 2742 of file TSpectrum2Transform.cxx. ◆ SetTransformType(). void TSpectrum2Transform::SetTransformType ; (; Int_t ; transType, . Int_t ; degree . ). This function sets the following parameters for transform: . transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:28435,enhance,enhancement,28435,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['enhance'],['enhancement']
Modifiability,"arameters:. - txvec - event vector of variables, transformed into foam; coordinates [0,1]. The size of txvec can be smaller than the; dimension of the foam. Return value:. - vector of cells, that fit txvec. std::vector<TMVA::PDEFoamCell*> FindCells(const std::map<Int_t, Float_t> &txvec); Find all cells, that contain the coordinates specified in txvec.; The key in 'txvec' is the dimension, and the corresponding value; is the coordinate. Note, that not all coordinates have to be; specified in txvec. Parameters:. - txvec - map of coordinates (transformed into foam coordinates; [0,1]). Return value:. - vector of cells, that fit txvec. TH1D* Draw1Dim(TMVA::ECellValue cell_value, Int_t nbin, TMVA::PDEFoamKernelBase* kernel = NULL); Draws 1-dimensional foam (= histogram). Parameters:. - cell_value - the cell value to draw. - nbin - number of bins of result histogram. - kernel - a PDEFoam kernel. TH2D* Project2(Int_t idim1, Int_t idim2, TMVA::ECellValue cell_value = kValue, TMVA::PDEFoamKernelBase* kernel = NULL, UInt_t nbin = 50); Project foam variable idim1 and variable idim2 to histogram. Parameters:. - idim1, idim2 - dimensions to project to. - cell_value - the cell value to draw. - kernel - a PDEFoam kernel (optional). If NULL is given, the; kernel is ignored and the pure cell values are; plotted. - nbin - number of bins in x and y direction of result histogram; (optional, default is 50). Returns:; a 2-dimensional histogram. Float_t GetCellValue(const PDEFoamCell* cell, ECellValue cv); Returns the cell value of 'cell' corresponding to the given; option 'cv'. This function should be overridden by the subclass; in order to specify which cell elements to return for a given; cell value 'cv'. By default kValue returns cell element 0, and; kValueError returns cell element 1. Double_t GetCellElement(const TMVA::PDEFoamCell* cell, UInt_t i) const; Returns cell element i of cell 'cell'. If the cell has no; elements or the index 'i' is out of range, than 0 is returned. void SetCe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__PDEFoam.html:19704,variab,variable,19704,root/html534/TMVA__PDEFoam.html,https://root.cern,https://root.cern/root/html534/TMVA__PDEFoam.html,4,['variab'],['variable']
Modifiability,"arametersDefinition Minimizer.h:291; ROOT::Math::Minimizer::PrintResultsvirtual void PrintResults()return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const ...Definition Minimizer.h:282; ROOT::Math::Minimizer::NDimvirtual unsigned int NDim() const =0this is <= Function().NDim() which is the total number of variables (free+ constrained ones); ROOT::Math::Minimizer::NFreevirtual unsigned int NFree() constnumber of free variables (real dimension of the problem) this is <= Function().NDim() which is the to...Definition Minimizer.h:240; ROOT::Math::Minimizer::SetVariableLowerLimitvirtual bool SetVariableLowerLimit(unsigned int ivar, double lower)set the lower-limit of an already existing variableDefinition Minimizer.cxx:70; ROOT::Math::Minimizer::IsFixedVariablevirtual bool IsFixedVariable(unsigned int ivar) constquery if an existing variable is fixed (i.e.Definition Minimizer.cxx:102; ROOT::Math::Minimizer::ReleaseVariablevirtual bool ReleaseVariable(unsigned int ivar)release an existing variableDefinition Minimizer.cxx:94; ROOT::Math::Minimizer::Hessevirtual bool Hesse()perform a full calculation of the Hessian matrix for error calculationDefinition Minimizer.cxx:185; ROOT::Math::Minimizer::Contourvirtual bool Contour(unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj)find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The c...Definition Minimizer.cxx:211; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; HFit::FitTFitResultPtr Fit(FitObject *h1, TF1 *f1, Foption_t &option, const ROOT::Math::MinimizerOptions &moption, const char *goption, ROOT::Fit::DataRange &range)Definition HFitImpl.cxx:133; MathNamespace for new Math classes and functions.; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:32108,variab,variableDefinition,32108,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['variab'],['variableDefinition']
Modifiability,"arameters](\ref F4); 2575. [A general C++ function object (functor) with parameters](\ref F5); 2586. [A member function with parameters of a general C++ class](\ref F6); 259 ; 260 ; 261 ; 262\anchor F1; 263### 1 - Expression using variable x and no parameters; 264 ; 265#### Case 1: inline expression using standard C++ functions/operators; 266 ; 267Begin_Macro(source); 268{; 269 auto fa1 = new TF1(""fa1"",""sin(x)/x"",0,10);; 270 fa1->Draw();; 271}; 272End_Macro; 273 ; 274#### Case 2: inline expression using a ROOT function (e.g. from TMath) without parameters; 275 ; 276 ; 277Begin_Macro(source); 278{; 279 auto fa2 = new TF1(""fa2"",""TMath::DiLog(x)"",0,10);; 280 fa2->Draw();; 281}; 282End_Macro; 283 ; 284#### Case 3: inline expression using a user defined CLING function by name; 285 ; 286~~~~{.cpp}; 287Double_t myFunc(double x) { return x+sin(x); }; 288....; 289auto fa3 = new TF1(""fa3"",""myFunc(x)"",-3,5);; 290fa3->Draw();; 291~~~~; 292 ; 293\anchor F2; 294### 2 - Expression using variable x with parameters; 295 ; 296#### Case 1: inline expression using standard C++ functions/operators; 297 ; 298* Example a:; 299 ; 300 ; 301~~~~{.cpp}; 302auto fa = new TF1(""fa"",""[0]*x*sin([1]*x)"",-3,3);; 303~~~~; 304 ; 305This creates a function of variable x with 2 parameters. The parameters must be initialized via:; 306 ; 307~~~~{.cpp}; 308 fa->SetParameter(0,value_first_parameter);; 309 fa->SetParameter(1,value_second_parameter);; 310~~~~; 311 ; 312 ; 313Parameters may be given a name:; 314 ; 315~~~~{.cpp}; 316 fa->SetParName(0,""Constant"");; 317~~~~; 318 ; 319* Example b:; 320 ; 321~~~~{.cpp}; 322 auto fb = new TF1(""fb"",""gaus(0)*expo(3)"",0,10);; 323~~~~; 324 ; 325 ; 326``gaus(0)`` is a substitute for ``[0]*exp(-0.5*((x-[1])/[2])**2)`` and ``(0)`` means start numbering parameters at ``0``. ``expo(3)`` is a substitute for ``exp([3]+[4]*x)``.; 327 ; 328#### Case 2: inline expression using TMath functions with parameters; 329 ; 330Begin_Macro(source); 331{; 332 auto fb2 = new TF1(""fa3"",""TMath:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:8962,variab,variable,8962,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"arams ;; 710 ; 711 // Loop over all integrated observables; 712 for (const auto aarg : allObs) {; 713 // Check if observable is real-valued lvalue; 714 if (auto arglv = dynamic_cast<RooAbsRealLValue*>(aarg)) {; 715 ; 716 // Check if range is parameterized; 717 RooAbsBinning& binning = arglv->getBinning(rangeName,false,true) ;; 718 if (binning.isParameterized()) {; 719 RooArgSet loBoundObs;; 720 RooArgSet hiBoundObs;; 721 binning.lowBoundFunc()->getObservables(&allObs, loBoundObs) ;; 722 binning.highBoundFunc()->getObservables(&allObs, hiBoundObs) ;; 723 ; 724 // Check if range parameterization depends on other integrated observables; 725 if (loBoundObs.overlaps(allObs) || hiBoundObs.overlaps(allObs)) {; 726 obsWithParamRange.add(*aarg) ;; 727 obsWithFixedRange.remove(*aarg) ;; 728 obsServingAsRangeParams.add(loBoundObs,false) ;; 729 obsServingAsRangeParams.add(hiBoundObs,false) ;; 730 }; 731 }; 732 }; 733 }; 734 ; 735 // Make list of fixed-range observables that are _not_ involved in the parameterization of ranges of other observables; 736 RooArgSet obsWithFixedRangeNP(obsWithFixedRange) ;; 737 obsWithFixedRangeNP.remove(obsServingAsRangeParams) ;; 738 ; 739 // Make list of param-range observables that are _not_ involved in the parameterization of ranges of other observables; 740 RooArgSet obsWithParamRangeNP(obsWithParamRange) ;; 741 obsWithParamRangeNP.remove(obsServingAsRangeParams) ;; 742 ; 743 // Construct inner-most integration: over observables (with fixed or param range) not used in any other param range definitions; 744 innerObs.removeAll() ;; 745 innerObs.add(obsWithFixedRangeNP) ;; 746 innerObs.add(obsWithParamRangeNP) ;; 747 ; 748}; 749 ; 750 ; 751////////////////////////////////////////////////////////////////////////////////; 752/// Construct string with unique suffix name to give to integral object that encodes; 753/// integrated observables, normalization observables and the integration range name; 754 ; 755TString RooAbsReal::integralNameSuffix(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:28864,parameteriz,parameterization,28864,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['parameteriz'],['parameterization']
Modifiability,"arams) override;  Attach given set of arguments to internal clones of pdf and resolution model. ;  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  Generate a single event. ;  ; void initGenerator (const RooArgSet &theEvent) override;  One-time initialization of generator context, attaches the context to the supplied event container. ;  ; TClass * IsA () const override;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose=false, TString indent="""") const override;  Print the details of this generator context. ;  ; void setProtoDataOrder (Int_t *lut) override;  Set the traversal order for events in the prototype dataset The argument is a array of integers with a size identical to the number of events in the prototype dataset. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsGenContext;  RooAbsGenContext (const RooAbsPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define default contents when printing. ;  ; StyleOption defaultPrintStyle (Option_t *opt) const override;  Define default print style. ;  ; virtual RooDataSet * generate (double nEvents=0, bool skipInit=false, bool extendedMode=false);  Generate the specified number of events with nEvents>0 and and return a dataset containing the generated events. ;  ; bool isValid () const;  ; bool isVerbose () const;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print itself. ;  ; void printArgs (std::ostream &os) const override;  Print arguments of context, i.e. the observables being generated in this context. ;  ; void printClassName (std::ostream &os) const override;  Print class name of context. ;  ; void printName (st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConvGenContext.html:2480,inherit,inherited,2480,doc/master/classRooConvGenContext.html,https://root.cern,https://root.cern/doc/master/classRooConvGenContext.html,1,['inherit'],['inherited']
Modifiability,"arams, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGenerate(); TLorentzVector*GetDecay(Int_t n); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetWtMax() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGenPhaseSpace.html:2937,Inherit,InheritsFrom,2937,root/html532/TGenPhaseSpace.html,https://root.cern,https://root.cern/root/html532/TGenPhaseSpace.html,2,['Inherit'],['InheritsFrom']
Modifiability,"arams, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGenerate(); TLorentzVector*GetDecay(Int_t n); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Int_tGetNt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetWtMax() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGenPhaseSpace.html:2876,Inherit,InheritsFrom,2876,root/html602/TGenPhaseSpace.html,https://root.cern,https://root.cern/root/html602/TGenPhaseSpace.html,2,['Inherit'],['InheritsFrom']
Modifiability,"arams, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetConfigDescription() const; const char*GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Configurable.html:2538,Inherit,InheritsFrom,2538,root/html532/TMVA__Configurable.html,https://root.cern,https://root.cern/root/html532/TMVA__Configurable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"arams, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetConfigDescription() const; const char*GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Configurable.html:2597,Inherit,InheritsFrom,2597,root/html602/TMVA__Configurable.html,https://root.cern,https://root.cern/root/html602/TMVA__Configurable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"arams, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetQAngle() const; voidGetRXYZ(Double_t* carray) const; voidGetRXYZ(Float_t* carray) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TQuaternionInvert() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TQuaternionLeftProduct(const TVector3& vector) const; TQuaternionLeftProduct(const TQuaternion& quaternion) const; TQuaternionLeftQuotient(const TVector3& vector) const; TQuaternionLeftQuotient(const TQuaternion& quaternion) const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; TQuaternion&MultiplyLeft(const TVector3& vector); TQuaternion&MultiplyLeft(const TQuaternion& quaternion); Double_tNorm() const; Double_tNorm2() const; TQuaternion&Normalize(); virtual Bool_tTObject::Notify(); voidTObject::Obso",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQuaternion.html:6890,Inherit,InheritsFrom,6890,root/html532/TQuaternion.html,https://root.cern,https://root.cern/root/html532/TQuaternion.html,4,['Inherit'],['InheritsFrom']
Modifiability,"aramsEffective parameters of this p.d.f.; RooRealProxy_pdf1First input p.d.f; RooRealProxy_pdf2Second input p.d.f; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; Double_t_shift1; Double_t_shift2; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxy_xConvolution observable; RooRealProxy_xprimeInput function representing value of convolution observable; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFFTConvPdf(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooFFTConvPdf.html:45336,config,configuration,45336,root/html526/RooFFTConvPdf.html,https://root.cern,https://root.cern/root/html526/RooFFTConvPdf.html,4,['config'],['configuration']
Modifiability,"aration ; Definition at line 147 of file RooSimultaneous.h. ◆ evaluate(). double RooSimultaneous::evaluate ; (; ); const. overridevirtual . Return the current value: the value of the PDF associated with the current index category state. ; Implements RooAbsReal.; Definition at line 474 of file RooSimultaneous.cxx. ◆ expectedEvents(). double RooSimultaneous::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return the number of expected events: If the index is in nset, then return the sum of the expected events of all components, otherwise return the number of expected events of the PDF associated with the current index category state. ; Reimplemented from RooAbsPdf.; Definition at line 506 of file RooSimultaneous.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooSimultaneous::extendMode ; (; ); const. overridevirtual . Examine the pdf components and check if one of them can be extended or must be extended. ; It is enough to have one component that can be extended or must be extended to return the flag in the total simultaneous pdf. ; Reimplemented from RooAbsPdf.; Definition at line 434 of file RooSimultaneous.cxx. ◆ fillDataHist(). RooDataHist * RooSimultaneous::fillDataHist ; (; RooDataHist * ; hist, . const RooArgSet * ; nset, . double ; scaleFactor, . bool ; correctForBinVolume = false, . bool ; showProgress = false . ); const. virtual . Definition at line 1025 of file RooSimultaneous.cxx. ◆ flattenedCatList(). RooArgSet const & RooSimultaneous::flattenedCatList ; (; ); const. protected . Internal utility function to get a list of all category components for this RooSimultaneous. ; The output contains only the index category if it is a RooCategory, or the list of all category components if it is a RooSuperCategory. ; Definition at line 1161 of file RooSimultaneous.cxx. ◆ forceAnalyticalInt(). bool RooSimultaneous::forceAnalyticalInt ; (; const RooAbsArg & ; ); const. inlineoverridevirtual . Reimplemented from RooAbsReal.; Definition at line 75 o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:84699,extend,extended,84699,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,2,['extend'],['extended']
Modifiability,"arbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSortedList.html:16011,inherit,inherited,16011,doc/master/classTSortedList.html,https://root.cern,https://root.cern/doc/master/classTSortedList.html,3,['inherit'],['inherited']
Modifiability,"arch procedure (on average). ;  ; BinarySearchTreeNode * Search (Event *, Node *) const;  Private, recursive, function for searching. ;  ; Double_t SearchVolume (Node *, Volume *, Int_t, std::vector< const TMVA::BinarySearchTreeNode * > *events);  recursively walk through the daughter nodes and add up all weights of events that lie within the given volume ;  . Private Attributes; Bool_t fCanNormalize;  the tree can be normalised ;  ; UInt_t fCurrentDepth;  internal variable, counting the depth of the tree during insertion ;  ; std::vector< Float_t > fMax [2];  RMS for signal and background for each variable. ;  ; std::vector< Float_t > fMeans [2];  mean for signal and background for each variable ;  ; std::vector< Float_t > fMin [2];  RMS for signal and background for each variable. ;  ; Double_t fNEventsW [2];  Number of events per class, taking into account event weights. ;  ; std::vector< std::pair< Double_t, const TMVA::Event * > > fNormalizeTreeTable;  ; UInt_t fPeriod;  periode (number of event variables) ;  ; std::vector< Float_t > fRMS [2];  RMS for signal and background for each variable. ;  ; Bool_t fStatisticsIsValid;  flag if last stat calculation is still valid, set to false if new node is insert ;  ; std::vector< Double_t > fSum [2];  Sum for signal and background for each variable. ;  ; Double_t fSumOfWeights;  Total number of events (weighted) counted during filling should be the same as fNEventsW[0]+fNEventsW[1]. ;  ; std::vector< Double_t > fSumSq [2];  Squared Sum for signal and background for each variable. ;  . Additional Inherited Members;  Protected Member Functions inherited from TMVA::BinaryTree; void DeleteNode (Node *);  protected, recursive, function used by the class destructor and when Pruning ;  ; MsgLogger & Log () const;  ;  Protected Attributes inherited from TMVA::BinaryTree; UInt_t fDepth;  maximal depth in tree reached ;  ; UInt_t fNNodes;  total number of nodes in the tree (counted) ;  ; Node * fRoot;  the root node of the tree ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html:6463,variab,variables,6463,doc/master/classTMVA_1_1BinarySearchTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html,2,['variab'],"['variable', 'variables']"
Modifiability,"arch. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » IO; » IO; » TGenCollectionProxy::Value. class TGenCollectionProxy::Value. TGenCollectionProxy. Proxy around an arbitrary container, which implements basic; functionality and iteration. In particular this is used to implement splitting and abstract; element access of any container. Access to compiled code is necessary; to implement the abstract iteration sequence and functionality like; size(), clear(), resize(). resize() may be a void operation. Function Members (Methods); public:. ~Value(); voidDeleteItem(void* ptr); Bool_tIsValid(); TGenCollectionProxy::Value&operator=(const TGenCollectionProxy::Value&); TGenCollectionProxy::ValueValue(const TGenCollectionProxy::Value& inside); TGenCollectionProxy::ValueValue(const string& info, Bool_t silent). Data Members; public:. UInt_tfCasetype of data of Value_type; void*fCtorMethod cache for containee constructor; void*fDeleteMethod cache for containee delete; void*fDtorMethod cache for containee destructor; EDataTypefKindkind of ROOT-fundamental type; UInt_tfPropertiesAdditional properties of the value type (kNeedDelete); size_tfSizefSize of the contained object; TClassReffTypeTClass reference of Value_type in collection. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Value(const TGenCollectionProxy::Value& inside); Copy constructor. Value(const string& info, Bool_t silent); Initializing constructor. void DeleteItem(void* ptr); Delete individual item from STL container. Bool_t IsValid(). » Author: Markus Frank 28/10/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TGenCollectionProxy.h 41102 2011-10-03 21:42:02Z pcanal $ » Last generated: 2011-11-03 20:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGenCollectionProxy__Value.html:1419,Inherit,Inheritance,1419,root/html532/TGenCollectionProxy__Value.html,https://root.cern,https://root.cern/root/html532/TGenCollectionProxy__Value.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arch. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const. class ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const double&operator[](int j) const; ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2_____SMatrixRow_const.html:1678,Inherit,Inheritance,1678,root/html534/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arch. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const. class ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const double&operator[](int j) const; ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3_____SMatrixRow_const.html:1678,Inherit,Inheritance,1678,root/html534/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arch. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const. class ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const double&operator[](int j) const; ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4_____SMatrixRow_const.html:1678,Inherit,Inheritance,1678,root/html534/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arch. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const. class ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const double&operator[](int j) const; ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5_____SMatrixRow_const.html:1678,Inherit,Inheritance,1678,root/html534/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arch. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const. class ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const double&operator[](int j) const; ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6_____SMatrixRow_const.html:1678,Inherit,Inheritance,1678,root/html534/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arch. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const. class ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const double&operator[](int j) const; ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7_____SMatrixRow_const.html:1678,Inherit,Inheritance,1678,root/html534/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arch. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TApplicationImp. class TApplicationImp. TApplicationImp. ABC describing GUI independent application implementation protocol. Function Members (Methods); public:. TApplicationImp(); TApplicationImp(const TApplicationImp&); TApplicationImp(const char* appClassName, int* argc, char** argv); virtual~TApplicationImp(); virtual const char*ApplicationName() const; static TClass*Class(); virtual Int_tExecCommand(TGWin32Command* code, Bool_t synch); virtual voidHide(); virtual voidIconify(); virtual voidInit(); virtual TClass*IsA() const; virtual Bool_tIsCmdThread(); virtual voidLower(); virtual voidOpen(); TApplicationImp&operator=(const TApplicationImp&); virtual voidRaise(); virtual voidShow(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. TStringfApplicationNameapplication name. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline TApplicationImp(const char* appClassName, int* argc, char** argv); { }. Int_t ExecCommand(TGWin32Command* code, Bool_t synch); { return 0; }. TApplicationImp(); { }. TApplicationImp(const char* appClassName, int* argc, char** argv). virtual ~TApplicationImp(); { }. const char * ApplicationName() const; { return fApplicationName.Data(); }. void Show(); { }. void Hide(); { }. void Iconify(); { }. Bool_t IsCmdThread(); { return kTRUE; }. void Init(); { }. void Open(); { }. void Raise(); { }. void Lower(); { }. » Author: Fons Rademakers 22/12/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-03-10 17:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TApplicationImp.html:1165,Inherit,Inheritance,1165,root/html534/TApplicationImp.html,https://root.cern,https://root.cern/root/html534/TApplicationImp.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arch. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOSTATS; » RooStats::NeymanConstruction. class RooStats::NeymanConstruction: public RooStats::IntervalCalculator, public TNamed. NeymanConstruction is a concrete implementation of the NeymanConstruction interface that, as the name suggests,; performs a NeymanConstruction. ; It produces a RooStats::PointSetInterval, which is a concrete implementation of the ConfInterval interface. . The Neyman Construction is not a uniquely defined statistical technique, it requires that one specify an ordering rule ; or ordering principle, which is usually incoded by choosing a specific test statistic and limits of integration ; (corresponding to upper/lower/central limits). As a result, this class must be configured with the corresponding; information before it can produce an interval. Common configurations, such as the Feldman-Cousins approach, can be ; enforced by other light weight classes. The Neyman Construction considers every point in the parameter space independently, no assumptions are ; made that the interval is connected or of a particular shape. As a result, the PointSetInterval class is used to ; represent the result. The user indicate which points in the parameter space to perform the constrution by providing; a PointSetInterval instance with the desired points. This class is fairly light weight, because the choice of parameter points to be considered is factorized and so is the ; creation of the sampling distribution of the test statistic (which is done by a concrete class implementing the DistributionCreator interface). As a result, this class basically just drives the construction by:. using a DistributionCreator to create the SamplingDistribution of a user-defined test statistic for each parameter point of interest,; defining the acceptance region in the data by finding the thresholds on the test stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__NeymanConstruction.html:1046,config,configurations,1046,root/html526/RooStats__NeymanConstruction.html,https://root.cern,https://root.cern/root/html526/RooStats__NeymanConstruction.html,1,['config'],['configurations']
Modifiability,"archTreeNode *);  ; void Insert (const Event *, Node *);  private internal function to insert a event (node) at the proper position ;  ; Bool_t InVolume (const std::vector< Float_t > &, Volume *) const;  test if the data points are in the given volume ;  ; void NormalizeTree (std::vector< std::pair< Double_t, const TMVA::Event * > >::iterator, std::vector< std::pair< Double_t, const TMVA::Event * > >::iterator, UInt_t);  normalises the binary-search tree to reduce the branch length and hence speed up the search procedure (on average). ;  ; BinarySearchTreeNode * Search (Event *, Node *) const;  Private, recursive, function for searching. ;  ; Double_t SearchVolume (Node *, Volume *, Int_t, std::vector< const TMVA::BinarySearchTreeNode * > *events);  recursively walk through the daughter nodes and add up all weights of events that lie within the given volume ;  . Private Attributes; Bool_t fCanNormalize;  the tree can be normalised ;  ; UInt_t fCurrentDepth;  internal variable, counting the depth of the tree during insertion ;  ; std::vector< Float_t > fMax [2];  RMS for signal and background for each variable. ;  ; std::vector< Float_t > fMeans [2];  mean for signal and background for each variable ;  ; std::vector< Float_t > fMin [2];  RMS for signal and background for each variable. ;  ; Double_t fNEventsW [2];  Number of events per class, taking into account event weights. ;  ; std::vector< std::pair< Double_t, const TMVA::Event * > > fNormalizeTreeTable;  ; UInt_t fPeriod;  periode (number of event variables) ;  ; std::vector< Float_t > fRMS [2];  RMS for signal and background for each variable. ;  ; Bool_t fStatisticsIsValid;  flag if last stat calculation is still valid, set to false if new node is insert ;  ; std::vector< Double_t > fSum [2];  Sum for signal and background for each variable. ;  ; Double_t fSumOfWeights;  Total number of events (weighted) counted during filling should be the same as fNEventsW[0]+fNEventsW[1]. ;  ; std::vector< Double_t > fSumSq",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html:5917,variab,variable,5917,doc/master/classTMVA_1_1BinarySearchTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html,2,['variab'],['variable']
Modifiability,"arching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; TMVA::HuberLossFunction Class ReferenceTMVA. ; Huber Loss Function. ; Definition at line 144 of file LossFunction.h. Public Member Functions;  HuberLossFunction ();  huber constructor ;  ;  HuberLossFunction (Double_t quantile);  ;  ~HuberLossFunction ();  huber destructor ;  ; Double_t CalculateLoss (LossFunctionEventInfo &e);  huber, determine the loss for a single event ;  ; Double_t CalculateMeanLoss (std::vector< LossFunctionEventInfo > &evs);  huber, determine the mean loss for a collection of events ;  ; Double_t CalculateNetLoss (std::vector< LossFunctionEventInfo > &evs);  huber, determine the net loss for a collection of events ;  ; Double_t CalculateQuantile (std::vector< LossFunctionEventInfo > &evs, Double_t whichQuantile, Double_t sumOfWeights, bool abs);  huber, determine the quantile for a given input ;  ; Double_t CalculateSumOfWeights (const std::vector< LossFunctionEventInfo > &evs);  huber, calculate the sum of weights for the events in the vector ;  ; Int_t Id ();  ; void Init (std::vector< LossFunctionEventInfo > &evs);  figure out the residual that determines the separation between the ""core"" and the ""tails"" of the residuals distribution ;  ; TString Name ();  ; void SetSumOfWeights (std::vector< LossFunctionEventInfo > &evs);  huber, set the sum of weights given a collection of events ;  ; void SetTransitionPoint (std::vector< LossFunctionEventInfo > &evs);  huber, determine the transition point using the values for fQuantile and fSumOfWeights which presumably have already been set ;  ;  Public Member Functions inherited from TMVA::LossFunction;  LossFunction ();  ; virtual ~LossFunction ();  . Protected Attributes; Double_t fQuantile;  ; Double_t fSumOfWeights;  ; Double_t fTransitionPoint;  . #include <TMVA/LossFunction.h>. Inheritance diagram for TMVA::HuberLossFunction:. This browser is not able to show SVG: try Firefox, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1HuberLossFunction.html:1787,inherit,inherited,1787,doc/master/classTMVA_1_1HuberLossFunction.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1HuberLossFunction.html,1,['inherit'],['inherited']
Modifiability,"arching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TGListDetailsLayout Class ReferenceGUI » Low level GUI widgets. ; This is a layout manager for the TGListView widget. ; Definition at line 355 of file TGLayout.h. Public Member Functions;  TGListDetailsLayout (TGCompositeFrame *main, Int_t sep=0, UInt_t w=0);  ; TGDimension GetDefaultSize () const override;  Return default dimension of the list details layout. ;  ; TClass * IsA () const override;  ; void Layout () override;  Make a list details layout of all frames in the list. ;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save list details layout manager as a C++ statement(s) on out stream. ;  ; void SetDefaultWidth (UInt_t w) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTileLayout;  TGTileLayout (TGCompositeFrame *main, Int_t sep=0);  Create a tile layout manager. ;  ; TGDimension GetDefaultSize () const override;  Return default dimension of the tile layout. ;  ; TClass * IsA () const override;  ; Bool_t IsModified () const override;  ; void Layout () override;  Make a tile layout of all frames in the list. ;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save tile layout manager as a C++ statement(s) on output stream. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLayoutManager;  TGLayoutManager ();  ; virtual void SetDefaultHeight (UInt_t);  ; virtual void SetModified (Bool_t flag=kTRUE);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListDetailsLayout.html:1094,inherit,inherited,1094,doc/master/classTGListDetailsLayout.html,https://root.cern,https://root.cern/doc/master/classTGListDetailsLayout.html,1,['inherit'],['inherited']
Modifiability,"archy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveElement::TEveListTreeInfo. class TEveElement::TEveListTreeInfo. Structure holding information about TGListTree and TGListTreeItem; that represents given TEveElement. This needed because each element; can appear in several list-trees as well as several times in the; same list-tree. Function Members (Methods); public:. virtual~TEveListTreeInfo(); static TClass*Class(); virtual TClass*IsA() const; booloperator<(const TEveElement::TEveListTreeInfo& x) const; TEveElement::TEveListTreeInfo&operator=(const TEveElement::TEveListTreeInfo& l); booloperator==(const TEveElement::TEveListTreeInfo& x) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TEveElement::TEveListTreeInfoTEveListTreeInfo(); TEveElement::TEveListTreeInfoTEveListTreeInfo(const TEveElement::TEveListTreeInfo& l); TEveElement::TEveListTreeInfoTEveListTreeInfo(TGListTree* lt, TGListTreeItem* lti). Data Members; public:. TGListTreeItem*fItem; TGListTree*fTree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElement& operator=(const TEveElement::TEveListTreeInfo& l). TEveListTreeInfo(); {}. TEveListTreeInfo(TGListTree* lt, TGListTreeItem* lti); {}. TEveListTreeInfo(const TEveElement::TEveListTreeInfo& l); {}. virtual ~TEveListTreeInfo(); {}. bool operator==(const TEveElement::TEveListTreeInfo& x) const; { return fTree == x.fTree && fItem == x.fItem; }. bool operator<(const TEveElement::TEveListTreeInfo& x) const; { return fTree == x.fTree ? fItem < x.fItem : fTree < x.fTree; }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveElement__TEveListTreeInfo.html:1304,Inherit,Inheritance,1304,root/html534/TEveElement__TEveListTreeInfo.html,https://root.cern,https://root.cern/root/html534/TEveElement__TEveListTreeInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ard (double x, double h);  Computes the numerical derivative at a point x using an adaptive backward difference algorithm with a step size h. ;  ; double EvalCentral (double x, double h);  Computes the numerical derivative at a point x using an adaptive central difference algorithm with a step size h. ;  ; double EvalForward (double x, double h);  Computes the numerical derivative at a point x using an adaptive forward difference algorithm with a step size h. ;  ; void SetFunction (const IGenFunction &f);  Set the function for calculating the derivatives. ;  ; void SetFunction (GSLFuncPointer f, void *p=nullptr);  Set the function f for evaluating the derivative using a GSL function pointer type. ;  . — Static methods —; int fStatus;  ; double fResult;  ; double fError;  ; GSLFunctionWrapper fFunction;  ; int Status () const;  return the error status of the last integral calculation ;  ; double Result () const;  return the result of the last derivative calculation ;  ; double Error () const;  return the estimate of the absolute error of the last derivative calculation ;  ; static double EvalCentral (const IGenFunction &f, double x, double h);  Computes the numerical derivative of a function f at a point x using an adaptive central difference algorithm with a step size h. ;  ; static double EvalForward (const IGenFunction &f, double x, double h);  Computes the numerical derivative of a function f at a point x using an adaptive forward difference algorithm with a step size h. ;  ; static double EvalBackward (const IGenFunction &f, double x, double h);  Computes the numerical derivative of a function f at a point x using an adaptive backward difference algorithm with a step size h. ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLDerivator.h>; Constructor & Destructor Documentation. ◆ GSLDerivator(). ROOT::Math::GSLDerivator::GSLDerivator ; (; ). inline . Default Constructor of a GSLDerivator class based on G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLDerivator.html:2035,adapt,adaptive,2035,doc/master/classROOT_1_1Math_1_1GSLDerivator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLDerivator.html,1,['adapt'],['adaptive']
Modifiability,"ard TMath or MathMore function the class cannot be persisted in a RooWorkspace without registering the function pointer first using RooCFunction1Binding<T1,T2>::register(). ; Definition at line 31 of file RooFunctorBinding.h. Public Member Functions;  RooFunctorBinding ()=default;  ;  RooFunctorBinding (const char *name, const char *title, const ROOT::Math::IBaseFunctionMultiDim &ftor, const RooArgList &vars);  Create a RooFit function that makes ftor usable in RooFit. ;  ;  RooFunctorBinding (const RooFunctorBinding &other, const char *name=nullptr);  ;  ~RooFunctorBinding () override;  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void printArgs (std::ostream &os) const override;  Print object arguments, ie its proxies. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFunctorBinding.html:1635,inherit,inherited,1635,doc/master/classRooFunctorBinding.html,https://root.cern,https://root.cern/doc/master/classRooFunctorBinding.html,1,['inherit'],['inherited']
Modifiability,"ard=kFALSE, const char *usr=0);  Send a cleanup request for the sessions associated with the current user. ;  ; virtual Int_t Rm (const char *, const char *=0, const char *=0);  Run 'rm' on 'what'. Locally it is just a call to TSystem::Unlink . ;  ; virtual Int_t SendMsgToUsers (const char *, const char *=0);  Send a message to connected users. ;  ; virtual void SetAlias (const char *alias="""");  ; virtual void SetInvalid ();  ; virtual void SetMssUrl (const char *mss);  ; virtual Int_t SetROOTVersion (const char *);  ; virtual void ShowROOTVersions ();  ; virtual void ShowWorkers ();  Show available workers. ;  ; virtual void ShutdownSession (Int_t id);  ; virtual void ShutdownSession (TProof *p);  ; virtual Int_t Stat (const char *, FileStat_t &, const char *=0);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Tail (const char *, const char *=0, const char *=0);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMgr.html:4954,inherit,inherited,4954,doc/master/classTProofMgr.html,https://root.cern,https://root.cern/doc/master/classTProofMgr.html,1,['inherit'],['inherited']
Modifiability,"ards to the PDF's implementation. ;  ; std::list< double > * binBoundaries (RooAbsRealLValue &obs, double xlo, double xhi) const override;  Return a list of all bin boundaries, so the PDF is plotted correctly. ;  ; TObject * clone (const char *newname) const override;  ; std::unique_ptr< RooAbsReal > createExpectedEventsFunc (const RooArgSet *nset) const override;  Forwards to the PDF's implementation. ;  ; RooFit::OwningPtr< RooAbsReal > createIntegral (const RooArgSet &iset, const RooArgSet *nset=nullptr, const RooNumIntConfig *cfg=nullptr, const char *rangeName=nullptr) const override;  Forwards to the PDF's implementation. ;  ; void doEval (RooFit::EvalContext &) const override;  Integrate the PDF over all its bins, and return a batch with those values. ;  ; double epsilon () const;  ; double expectedEvents (const RooArgSet *nset) const override;  Return expected number of events to be used in calculation of extended likelihood. ;  ; ExtendMode extendMode () const override;  Returns ability of PDF to provide extended likelihood terms. ;  ; bool forceAnalyticalInt (const RooAbsArg &dep) const override;  ; void generateEvent (Int_t code) override;  Forwards to the PDF's implementation. ;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &numVars, const char *rangeName=nullptr) const override;  Forwards to the PDF's implementation. ;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Forwards to the PDF's implementation. ;  ; Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) const override;  Forwards to the PDF's implementation. ;  ; Int_t getMaxVal (const RooArgSet &vars) const override;  Advertise capability to determine maximum value of function for given set of observables. ;  ; void initGenerator (Int_t code) override;  Forwards to the PDF's implementation. ;  ; std::unique_ptr< ROOT::Math::IntegratorOneD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinSamplingPdf.html:6085,extend,extendMode,6085,doc/master/classRooBinSamplingPdf.html,https://root.cern,https://root.cern/doc/master/classRooBinSamplingPdf.html,2,['extend'],"['extendMode', 'extended']"
Modifiability,"are both matched; 3259 if (isMatched && int(matched.size())!=nameList.GetSize()) {; 3260 isMatched = false ;; 3261 }; 3262 ; 3263 if(isMatched) matchedArgs.add(matched);; 3264 return isMatched;; 3265}; 3266 ; 3267 ; 3268 ; 3269////////////////////////////////////////////////////////////////////////////////; 3270/// Returns the default numeric integration configuration for all RooAbsReals; 3271 ; 3272RooNumIntConfig* RooAbsReal::defaultIntegratorConfig(); 3273{; 3274 return &RooNumIntConfig::defaultConfig() ;; 3275}; 3276 ; 3277 ; 3278////////////////////////////////////////////////////////////////////////////////; 3279/// Returns the specialized integrator configuration for _this_ RooAbsReal.; 3280/// If this object has no specialized configuration, a null pointer is returned.; 3281 ; 3282RooNumIntConfig* RooAbsReal::specialIntegratorConfig() const; 3283{; 3284 return _specIntegratorConfig.get();; 3285}; 3286 ; 3287 ; 3288////////////////////////////////////////////////////////////////////////////////; 3289/// Returns the specialized integrator configuration for _this_ RooAbsReal.; 3290/// If this object has no specialized configuration, a null pointer is returned,; 3291/// unless createOnTheFly is true in which case a clone of the default integrator; 3292/// configuration is created, installed as specialized configuration, and returned; 3293 ; 3294RooNumIntConfig* RooAbsReal::specialIntegratorConfig(bool createOnTheFly); 3295{; 3296 if (!_specIntegratorConfig && createOnTheFly) {; 3297 _specIntegratorConfig = std::make_unique<RooNumIntConfig>(*defaultIntegratorConfig()) ;; 3298 }; 3299 return _specIntegratorConfig.get();; 3300}; 3301 ; 3302 ; 3303 ; 3304////////////////////////////////////////////////////////////////////////////////; 3305/// Return the numeric integration configuration used for this object. If; 3306/// a specialized configuration was associated with this object, that configuration; 3307/// is returned, otherwise the default configuration for all Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:141908,config,configuration,141908,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['config'],['configuration']
Modifiability,"are input tree (this must be replaced by your data source); 141 // in this example, there is a toy tree with signal and one with background events; 142 // we'll later on use only the ""signal"" events for the test in this example.; 143 //; 144 TFile *input(0);; 145 TString fname = ""./tmva_reg_example.root"";; 146 if (!gSystem->AccessPathName( fname )) {; 147 input = TFile::Open( fname ); // check if file in local directory exists; 148 }; 149 else {; 150 TFile::SetCacheFileDir(""."");; 151 input = TFile::Open(""http://root.cern/files/tmva_reg_example.root"", ""CACHEREAD""); // if not: download from ROOT server; 152 }; 153 if (!input) {; 154 std::cout << ""ERROR: could not open data file"" << std::endl;; 155 exit(1);; 156 }; 157 std::cout << ""--- TMVARegressionApp : Using input file: "" << input->GetName() << std::endl;; 158 ; 159 // --- Event loop; 160 ; 161 // Prepare the tree; 162 // - here the variable names have to corresponds to your tree; 163 // - you can use the same variables as above which is slightly faster,; 164 // but of course you can use different ones and copy the values inside the event loop; 165 //; 166 TTree* theTree = (TTree*)input->Get(""TreeR"");; 167 std::cout << ""--- Select signal sample"" << std::endl;; 168 theTree->SetBranchAddress( ""var1"", &var1 );; 169 theTree->SetBranchAddress( ""var2"", &var2 );; 170 ; 171 std::cout << ""--- Processing: "" << theTree->GetEntries() << "" events"" << std::endl;; 172 TStopwatch sw;; 173 sw.Start();; 174 for (Long64_t ievt=0; ievt<theTree->GetEntries();ievt++) {; 175 ; 176 if (ievt%1000 == 0) {; 177 std::cout << ""--- ... Processing event: "" << ievt << std::endl;; 178 }; 179 ; 180 theTree->GetEntry(ievt);; 181 ; 182 // Retrieve the MVA target values (regression outputs) and fill into histograms; 183 // NOTE: EvaluateRegression(..) returns a vector for multi-target regression; 184 ; 185 for (Int_t ih=0; ih<nhists; ih++) {; 186 TString title = hists[ih]->GetTitle();; 187 Float_t val = (reader->EvaluateRegression( title ))[0];; 188 hi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegressionApplication_8C_source.html:5408,variab,variable,5408,doc/master/TMVARegressionApplication_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVARegressionApplication_8C_source.html,2,['variab'],"['variable', 'variables']"
Modifiability,"are of the form:"");; 3654 Printf("" <number> ''name'' <value> <step> [lolim] [uplim] "");; 3655 Printf("" for example:"");; 3656 Printf("" 3 ''K width'' 1.2 0.1"");; 3657 Printf("" the last definition is followed by a blank line or a zero."");; 3658 goto L99;; 3659 }; 3660//______________________________________________________________________________; 3661//; 3662// Command RELEASE; 3663//; 3664 if( !strncmp(comd.Data(),""REL"",3) ) {; 3665 Printf("" ***>RELease <parno> [parno] ... [parno]"");; 3666 Printf("" If <parno> is the number of a previously variable parameter"");; 3667 Printf("" which has been fixed by a command: FIX <parno>, then that"");; 3668 Printf("" parameter will return to variable status. Otherwise a warning"");; 3669 Printf("" message is printed and the command is ignored."");; 3670 Printf("" Note that this command operates only on parameters which were"");; 3671 Printf("" at one time variable and have been FIXed. It cannot make"");; 3672 Printf("" constant parameters variable; that must be done by redefining"");; 3673 Printf("" the parameter with a PARameters command."");; 3674 goto L99;; 3675 }; 3676//______________________________________________________________________________; 3677//; 3678// Command RESTORE; 3679//; 3680 if( !strncmp(comd.Data(),""RES"",3) ) {; 3681 Printf("" ***>REStore [code]"");; 3682 Printf("" If no [code] is specified, this command restores all previously"");; 3683 Printf("" FIXed parameters to variable status. If [code]=1, then only"");; 3684 Printf("" the last parameter FIXed is restored to variable status."");; 3685 Printf("" If code is neither zero nor one, the command is ignored."");; 3686 goto L99;; 3687 }; 3688//______________________________________________________________________________; 3689//; 3690// Command RETURN; 3691//; 3692 if( !strncmp(comd.Data(),""RET"",3) ) {; 3693 Printf("" ***>RETURN"");; 3694 Printf("" Signals the end of a data block, and instructs Minuit to return"");; 3695 Printf("" to the program which called it. The RETurn command first"");",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:119707,variab,variable,119707,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variable']
Modifiability,"are owned by the line-set; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveStraightLineSet::fRnrLines; Bool_tTEveStraightLineSet::fRnrMarkers; Bool_tTEveElement::fRnrSelfRender this element.; Float_tfScaleCenter[3]; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveScalableStraightLineSet(const char* n = ""ScalableStraightLineSet"", const char* t = """"); Constructor. void SetScaleCenter(Float_t x, Float_t y, Float_t z); Set scale center. Double_t GetScale() const; Return current scale. void SetScale(Double_t scale); Loop over line parameters and scale coordinates. TEveScalableStraightLineSet(const TEveScalableStraightLineSet& ). TEveScalableStraightLineSet& operator=(const TEveScalableStraightLineSet& ). virtual ~TEveScalableStraightLineSet(); {}. » Last changed: root/eve:$Id: TEveScalableStraightLineSet.h 27157 2009-01-15 14:05:12Z brun $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveScalableStraightLineSet.html:26849,Inherit,Inheritance,26849,root/html532/TEveScalableStraightLineSet.html,https://root.cern,https://root.cern/root/html532/TEveScalableStraightLineSet.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<Double32_t,3,3,ROOT::Math::MatRepStd<Double32_t,3,3> >::rep_type. Function Members (Methods); public:. ~MatRepStd<Double32_t,3,3>(); Double32_tapply(unsigned int i) const; Double32_t*Array(); const Double32_t*Array() const; ROOT::Math::MatRepStd<Double32_t,3,3>MatRepStd<Double32_t,3,3>(); ROOT::Math::MatRepStd<Double32_t,3,3>MatRepStd<Double32_t,3,3>(const ROOT::Math::MatRepStd<Double32_t,3,3>&); const Double32_t&operator()(unsigned int i, unsigned int j) const; Double32_t&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<Double32_t,3,3>&operator=(const ROOT::Math::MatRepStd<Double32_t,3,3>&); Double32_t&operator[](unsigned int i); const Double32_t&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. Double32_tfArray[9]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<Double32_t,3,3>& ). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepStd_Double32_t_3_3_.html:1789,Inherit,Inheritance,1789,root/html532/ROOT__Math__MatRepStd_Double32_t_3_3_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepStd_Double32_t_3_3_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"are the same size.; In the case of TObjArray, the stored objects are written sequentially. However, in a TClonesArray, by default, each object is split one level deep into its base class(es) and data members, and each of these members is written sequentially for all objects in the array before the next member is written. This has two advantages:; Greater compression can be achieved when similar data is consecutive.; The object's data members can easily be split into different TTree branches (TTrees are discussed below). TTree; A TTree is a highly specialized container class for efficient storage and retrieval of user data. The use of TTrees is discussed in detail in the Trees chapter of the Root Manual; Here we discuss in particular how a TTree is stored in a ROOTIO file.; A TTree object is split into one or more branches (class TBranch), each of which may have its own (sub)branches, recursively to any depth. Each TBranch contains an array of zero or more leaves (class TLeaf), each corresponding to a basic variable type or a class object that has not been split. The TLeaf object does not actually contain variable values, only information about the variables. The actual data on each branch is physically stored in basket objects (class TBasket). The user can set the basket size on a per TBranch basis. The default basket size is 32000 bytes. This should be viewed as an approximate number.; There is one TTree data record per file for each tree in the file, corresponding to a TTree class object. The TTree class object recursively contains TBranch objects, each of which contains an array of TBasket objects to hold its data.; However, the TTree data record does not necessarily contain the entire TTree object. For each branch, exactly one TBasket object is contained in the TTree data record. If the data on a given branch fits in one basket, then all the data for that branch will be in the TTree record itself. Otherwise, there will be a separate TBasket data record for each ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootio.html:14325,variab,variable,14325,doc/master/rootio.html,https://root.cern,https://root.cern/doc/master/rootio.html,1,['variab'],['variable']
Modifiability,"are updated ; Definition at line 369 of file RuleEnsemble.h. ◆ fEventLinearVal. std::vector<Double_t> TMVA::RuleEnsemble::fEventLinearVal. private . linear respons ; Definition at line 371 of file RuleEnsemble.h. ◆ fEventRuleVal. std::vector<Char_t> TMVA::RuleEnsemble::fEventRuleVal. private . the rule respons of current event <--— stores boolean ; Definition at line 370 of file RuleEnsemble.h. ◆ fImportanceCut. Double_t TMVA::RuleEnsemble::fImportanceCut. private . minimum importance accepted ; Definition at line 338 of file RuleEnsemble.h. ◆ fImportanceRef. Double_t TMVA::RuleEnsemble::fImportanceRef. private . reference importance (max) ; Definition at line 351 of file RuleEnsemble.h. ◆ fLearningModel. ELearningModel TMVA::RuleEnsemble::fLearningModel. private . can be full (rules+linear), rules, linear ; Definition at line 337 of file RuleEnsemble.h. ◆ fLinCoefficients. std::vector< Double_t > TMVA::RuleEnsemble::fLinCoefficients. private . linear coefficients, one per variable ; Definition at line 345 of file RuleEnsemble.h. ◆ fLinDM. std::vector< Double_t > TMVA::RuleEnsemble::fLinDM. private . delta- ; Definition at line 344 of file RuleEnsemble.h. ◆ fLinDP. std::vector< Double_t > TMVA::RuleEnsemble::fLinDP. private . delta+ in eq 24, ref 2 ; Definition at line 343 of file RuleEnsemble.h. ◆ fLinImportance. std::vector< Double_t > TMVA::RuleEnsemble::fLinImportance. private . linear term importance ; Definition at line 349 of file RuleEnsemble.h. ◆ fLinNorm. std::vector< Double_t > TMVA::RuleEnsemble::fLinNorm. private . norm of ditto, see after eq 26 in ref 2 ; Definition at line 346 of file RuleEnsemble.h. ◆ fLinPDFB. std::vector< TH1F* > TMVA::RuleEnsemble::fLinPDFB. private . pdfs for each variable, background ; Definition at line 347 of file RuleEnsemble.h. ◆ fLinPDFS. std::vector< TH1F* > TMVA::RuleEnsemble::fLinPDFS. private . pdfs for each variable, signal ; Definition at line 348 of file RuleEnsemble.h. ◆ fLinQuantile. Double_t TMVA::RuleEnsemble::fLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleEnsemble.html:34212,variab,variable,34212,doc/master/classTMVA_1_1RuleEnsemble.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleEnsemble.html,1,['variab'],['variable']
Modifiability,"are, 2 likelihood); ROOT::Fit::Fitter::IModelFunction*fFunccopy of the fitted function containing on output the fit result (managed by FitResult); auto_ptr<ROOT::Math::Minimizer>fMinimizer! pointer to used minimizer; auto_ptr<ROOT::Math::IMultiGenFunction>fObjFunction! pointer to used objective function; auto_ptr<ROOT::Fit::FitResult>fResult! pointer to the object containing the result of the fit; boolfUseGradientflag to indicate if using gradient or not. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; bool FitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). bool SetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fitter(). Default constructor. ~Fitter(). Destructor. Fitter(const ROOT::Fit::Fitter& ). Copy constructor (disabled, class is not copyable). bool Fit(const ROOT::Fit::UnBinData& data, bool extended = false). fit a data set using any generic model function; If data set is binned a least square fit is performed; If data set is unbinned a maximum likelihood fit (not extended) is done; Pre-requisite on the function:; it must implement the 1D or multidimensional parametric function interface. SetFunction(func). return Fit(const ROOT::Fit::BinData& data). return DoLeastSquareFit(const ROOT::Fit::BinData& data). bool LeastSquareFit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit. return DoLikelihoodFit(data, extended). return DoLikelihoodFit(data). SetFunction(func). bool FitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fit using the a generic FCN function as a C++ callable object implementing; double () (const double *); Note that the function dimension (i.e. the number of parameter) is needed in this case; For the options see documentation for fol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__Fitter.html:5223,extend,extended,5223,root/html602/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__Fitter.html,2,['extend'],['extended']
Modifiability,"areContent ; (; TClass * ; cl, . TVirtualStreamerInfo * ; info, . Bool_t ; warn, . Bool_t ; complete, . TFile * ; file . ). pure virtual . Implemented in TStreamerInfo. ◆ Compile(). virtual void TVirtualStreamerInfo::Compile ; (; ). pure virtual . Implemented in TStreamerInfo. ◆ DeclFileName(). static const char * TVirtualStreamerInfo::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 216 of file TVirtualStreamerInfo.h. ◆ DeleteArray(). virtual void TVirtualStreamerInfo::DeleteArray ; (; void * ; p, . Bool_t ; dtorOnly = kFALSE . ). pure virtual . Implemented in TStreamerInfo. ◆ Destructor(). virtual void TVirtualStreamerInfo::Destructor ; (; void * ; p, . Bool_t ; dtorOnly = kFALSE . ). pure virtual . Implemented in TStreamerInfo. ◆ Factory(). TVirtualStreamerInfo * TVirtualStreamerInfo::Factory ; (; ). static . Static function returning a pointer to a new TVirtualStreamerInfo object. ; If the Info factory does not exist, it is created via the plugin manager. In reality the factory is an empty TStreamerInfo object. ; Definition at line 177 of file TVirtualStreamerInfo.cxx. ◆ ForceWriteInfo(). virtual void TVirtualStreamerInfo::ForceWriteInfo ; (; TFile * ; file, . Bool_t ; force = kFALSE . ). pure virtual . Implemented in TStreamerInfo. ◆ GenEmulatedClassStreamer(). virtual TClassStreamer * TVirtualStreamerInfo::GenEmulatedClassStreamer ; (; const char * ; class_name, . Bool_t ; silent . ). pure virtual . Implemented in TStreamerInfo. ◆ GenEmulatedProxy(). virtual TVirtualCollectionProxy * TVirtualStreamerInfo::GenEmulatedProxy ; (; const char * ; class_name, . Bool_t ; silent . ). pure virtual . Implemented in TStreamerInfo. ◆ GenerateHeaderFile(). virtual Int_t TVirtualStreamerInfo::GenerateHeaderFile ; (; const char * ; dirname, . const TList * ; subClasses = nullptr, . const TList * ; extrainfos = nullptr . ). pure virtual . Implemented in TStreamerInfo. ◆ GenerateInfoForPair() [1/2]. virtual TVirt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualStreamerInfo.html:24130,plugin,plugin,24130,doc/master/classTVirtualStreamerInfo.html,https://root.cern,https://root.cern/doc/master/classTVirtualStreamerInfo.html,1,['plugin'],['plugin']
Modifiability,"areFit (const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential);  least square fit ;  ; bool DoLinearFit ();  linear least square fit ;  ; bool DoMinimization (const ROOT::Math::IMultiGenFunction *chifunc=nullptr);  ; template<class ObjFunc_t > ; bool DoMinimization (std::unique_ptr< ObjFunc_t > f, const ROOT::Math::IMultiGenFunction *chifunc=nullptr);  do minimization ;  ; bool DoSetFCN (bool useExtFCN, const ROOT::Math::IMultiGenFunction &fcn, const double *params, unsigned int dataSize, int fitType);  Set Objective function. ;  ; bool DoUnbinnedLikelihoodFit (bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential);  un-binned likelihood fit ;  ; void DoUpdateFitConfig ();  ; bool DoUpdateMinimizerOptions (bool canDifferentMinim=true);  ; template<class ObjFunc_t > ; bool DoWeightMinimization (std::unique_ptr< ObjFunc_t > f, const ROOT::Math::IMultiGenFunction *chifunc=nullptr);  ; void ExamineFCN ();  look at the user provided FCN and get data and model function is they derive from ROOT::Fit FCN classes ;  ; template<class ObjFuncType > ; bool GetDataFromFCN ();  internal functions to get data set and model function from FCN useful for fits done with customized FCN classes ;  ; int GetNCallsFromFCN ();  ; const ROOT::Math::IBaseFunctionMultiDimTempl< double > * ObjFunction () const;  Return pointer to the used objective function for fitting. ;  ; template<class Data > ; void SetData (const Data &data);  Set the input data for the fit (Copying the given data object) ;  ; template<class Data > ; void SetData (const std::shared_ptr< Data > &data);  Set the input data for the fit using a shared ptr (No Copying) ;  . Private Attributes; bool fBinFit = false;  flag to indicate if fit is binned in case of false the fit is unbinned or undefined) flag it is used to compute chi2 for binned likelihood fit ;  ; FitConfig fConfig;  fitter configuration (options and parameter settings) ;  ; std::shared_p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html:11880,extend,extended,11880,doc/master/classROOT_1_1Fit_1_1Fitter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html,1,['extend'],['extended']
Modifiability,"areMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo2DKeysPdf.html:13299,config,configuration,13299,doc/master/classRoo2DKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRoo2DKeysPdf.html,3,['config'],['configuration']
Modifiability,"areMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:16936,config,configuration,16936,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,46,['config'],['configuration']
Modifiability,"areOptions(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTMVA::FitterBase::fClassNameremove TMVA:: from TObject name; TMVA::IFitterTarget&TMVA::FitterBase::fFitterTargetpointer to target of fitting procedure; TMVA::MsgLogger*TMVA::FitterBase::fLoggermessage logger; Int_tTMVA::FitterBase::fNparsnumber of parameters; const vector<TMVA::Interval*>TMVA::FitterBase::fRangesallowed intervals. private:. Double_tfAdaptiveSpeedhow fast temperature change in adaptive (in adaptive two variables describe; Double_tfEpsrelative required FCN accuracy at minimum; Double_tfInitialTemperatureinitial temperature (depends on FCN); TStringfKernelTemperatureSstring just to set fKernelTemperature; Int_tfMaxCallsmax number of FCN calls; Double_tfMinTemperatureminimum temperature before SA quit; Double_tfTemperatureAdaptiveStepused to calculate InitialTemperature if fUseDefaultTemperature; Double_tfTemperatureScalehow fast temperature change; Bool_tfUseDefaultScaleif TRUE, SA calculates its own TemperatureScale; Bool_tfUseDefaultTemperatureif TRUE, SA calculates its own InitialTemperature (MinTemperautre). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SimulatedAnnealingFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); constructor. void DeclareOptions(); declare SA options. void SetParameters(Int_t fMaxCalls, Double_t fInitialTemperature, Double_t fMinTemperature, Double_t fEps, TString fKernelTemperatureS, Double_t fTemperatureScale, Double_t fTemperatureAdaptiveStep, Bool_t fUseDefaultScale, Bool_t fUseDefaultTemperature); set SA configuration parameters. Double_t Run(vector<Double_t>& pars); Execute fitting. virtual ~Simulated",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__SimulatedAnnealingFitter.html:7397,adapt,adaptive,7397,root/html528/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html528/TMVA__SimulatedAnnealingFitter.html,18,"['adapt', 'variab']","['adaptive', 'variables']"
Modifiability,"ared when connection is closed. ; Reimplemented from ROOT::Experimental::Internal::RVirtualCanvasPainter.; Definition at line 757 of file RCanvasPainter.cxx. Member Data Documentation. ◆ fCanvas. RCanvas& ROOT::Experimental::RCanvasPainter::fCanvas. private . ! Canvas we are painting, *this will be owned by canvas ; Definition at line 109 of file RCanvasPainter.cxx. ◆ fCmds. std::list<std::shared_ptr<WebCommand> > ROOT::Experimental::RCanvasPainter::fCmds. private . ! list of submitted commands ; Definition at line 114 of file RCanvasPainter.cxx. ◆ fCmdsCnt. uint64_t ROOT::Experimental::RCanvasPainter::fCmdsCnt {0}. private . ! commands counter ; Definition at line 115 of file RCanvasPainter.cxx. ◆ fHelpHandles. std::vector<std::unique_ptr<ROOT::RWebDisplayHandle> > ROOT::Experimental::RCanvasPainter::fHelpHandles. private . ! array of handles for help widgets ; Definition at line 122 of file RCanvasPainter.cxx. ◆ fJsonComp. int ROOT::Experimental::RCanvasPainter::fJsonComp {23}. private . ! json compression for data send to client ; Definition at line 120 of file RCanvasPainter.cxx. ◆ fSnapshotDelivered. uint64_t ROOT::Experimental::RCanvasPainter::fSnapshotDelivered {0}. private . ! minimal version delivered to all connections ; Definition at line 117 of file RCanvasPainter.cxx. ◆ fUpdatesLst. std::list<WebUpdate> ROOT::Experimental::RCanvasPainter::fUpdatesLst. private . ! list of callbacks for canvas update ; Definition at line 118 of file RCanvasPainter.cxx. ◆ fWebConn. std::list<WebConn> ROOT::Experimental::RCanvasPainter::fWebConn. private . !< configured display ; ! connections list ; Definition at line 113 of file RCanvasPainter.cxx. ◆ fWindow. std::shared_ptr<ROOT::RWebWindow> ROOT::Experimental::RCanvasPainter::fWindow. private . Definition at line 111 of file RCanvasPainter.cxx. gui/canvaspainter/src/RCanvasPainter.cxx. ROOTExperimentalRCanvasPainter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:03 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvasPainter.html:13096,config,configured,13096,doc/master/classROOT_1_1Experimental_1_1RCanvasPainter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvasPainter.html,1,['config'],['configured']
Modifiability,"aredInput: regularisation parameter; TMatrixDSparse*fVyyInput: covariance matrix for y; TMatrixD*fX0Input: x0; TArrayIfXToHistInput: matrix indices -> histogram bins; TMatrixD*fYInput: y. private:. TMatrixDSparse*fAxResult: Ax; Double_tfChi2AResult: chi**2 contribution from (y-Ax)V(y-Ax); TMatrixDSparse*fDXDAM[2]Result: part of derivative dx_k/dA_ij; TMatrixDSparse*fDXDAZ[2]Result: part of derivative dx_k/dA_ij; TMatrixDSparse*fDXDYResult: derivative dx/dy; TMatrixDSparse*fDXDtauSquaredResult: derivative dx/dtau; TMatrixDSparse*fEResult: matrix E; TMatrixDSparse*fEinvResult: matrix E^(-1); Double_tfLXsquaredResult: chi**2 contribution from (x-s*x0)Lsquared(x-s*x0); Int_tfNdfResult: number of degrees of freedom; Double_tfRhoAvgResult: average global correlation; Double_tfRhoMaxResult: maximum global correlation; TMatrixDSparse*fVxxResult: covariance matrix on x; TMatrixDSparse*fVxxInvResult: inverse of covariance matrix on x; TMatrixD*fXResult: x. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const char * GetTUnfoldVersion(void). void InitTUnfold(void); reset all data members. void DeleteMatrix(TMatrixD** m). void DeleteMatrix(TMatrixDSparse** m). void ClearResults(void); delete old results (if any); this function is virtual, so derived classes may flag their results; ad non-valid as well. TUnfold(const TUnfold& ); set all matrix pointers to zero. Double_t DoUnfold(Double_t tau); main unfolding algorithm. Declared virtual, because other algorithms; could be implemented. Purpose: unfold y -> x; Data members required:; fA: matrix to relate x and y; fY: measured data points; fX0: bias on x; fBiasScale: scale factor for fX0; fVyy: covariance matrix for y; fLsquared: regularisation conditions; fTauSquared: regularisation strength; fConstraint: whether the constraint is applied; Data members modified:; fEinv: inverse of the covariance matrix of x; fE: covariance matrix of x; fX: unfolded data points; fDXDY: derivative of x wrt y ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TUnfold.html:20810,Inherit,Inheritance,20810,root/html532/TUnfold.html,https://root.cern,https://root.cern/root/html532/TUnfold.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"aredLib but is used to create an executable. ; This creation is used as a means to output a list of unresolved symbols, when loading a shared library has failed. The required variable is $ExeName rather than $SharedLib, e.g.: gSystem->SetMakeExe(; ""g++ -Wall -fPIC $IncludePath $SourceFiles; -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; TSystem::SetMakeExevirtual void SetMakeExe(const char *directives)Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executabl...Definition TSystem.cxx:4093. Definition at line 4093 of file TSystem.cxx. ◆ SetMakeSharedLib(). void TSystem::SetMakeSharedLib ; (; const char * ; directives). virtual . Directives should contain the description on how to compile and link a shared lib. ; This description can be any valid shell command, including the use of ';' to separate several instructions. However, shell specific construct should be avoided. In particular this description can contain environment variables, like $ROOTSYS (or ROOTSYS% on windows). Five special variables will be expanded before execution:; Variable name Expands to; ------------- ----------; $SourceFiles Name of source files to be compiled; $SharedLib Name of the shared library being created; $LibName Name of shared library without extension; $BuildDir Directory where the files will be created; $IncludePath value of fIncludePath; $LinkedLibs value of fLinkedLibs; $DepLibs libraries on which this library depends on; $ObjectFiles Name of source files to be compiler with; their extension changed to .o or .obj; $Opt location of the optimization/debug options; set fFlagsDebug and fFlagsOpt; onOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void onDefinition TGWin32VirtualXProxy.cxx:106; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:88622,variab,variables,88622,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['variab'],['variables']
Modifiability,"ared_ptr< RDFDetail::RLoopManager > lm);  ; RDFDescription Describe ();  Return information about the dataframe. ;  ; ColumnNames_t GetColumnNames ();  Returns the names of the available columns. ;  ; std::string GetColumnType (std::string_view column);  Return the type of a given column as a string. ;  ; ColumnNames_t GetDefinedColumnNames ();  Returns the names of the defined columns. ;  ; unsigned int GetNFiles ();  ; unsigned int GetNRuns () const;  Gets the number of event loops run. ;  ; unsigned int GetNSlots () const;  Gets the number of data processing slots. ;  ; RVariationsDescription GetVariations () const;  Return a descriptor for the systematic variations registered in this branch of the computation graph. ;  ; bool HasColumn (std::string_view columnName);  Checks if a column is present in the dataset. ;  . Protected Member Functions;  RInterface (const std::shared_ptr< Proxied > &proxied, RLoopManager &lm, const RDFInternal::RColumnRegister &colRegister);  ; const std::shared_ptr< Proxied > & GetProxiedPtr () const;  ;  Protected Member Functions inherited from ROOT::RDF::RInterfaceBase; void AddDefaultColumns ();  ; template<typename... ColumnTypes> ; void CheckAndFillDSColumns (ColumnNames_t validCols, TTraits::TypeList< ColumnTypes... > typeList);  ; void CheckIMTDisabled (std::string_view callerName);  ; template<typename ActionTag , typename... ColTypes, typename ActionResultType , typename RDFNode , typename HelperArgType = ActionResultType, std::enable_if_t< RDFInternal::RNeedJitting< ColTypes... >::value, int > = 0> ; RResultPtr< ActionResultType > CreateAction (const ColumnNames_t &columns, const std::shared_ptr< ActionResultType > &r, const std::shared_ptr< HelperArgType > &helperArg, const std::shared_ptr< RDFNode > &proxiedPtr, const int nColumns=-1, const bool vector2RVec=true);  Create RAction object, return RResultPtr for the action Overload for the case in which one or more column types were not specified (RTTI + jitting). ;  ; templat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:22640,inherit,inherited,22640,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['inherit'],['inherited']
Modifiability,"ared_ptr<FitResult> & result). Constructor from a result. ~Fitter(). Destructor. Fitter(const Fitter &). Copy constructor (disabled, class is not copyable). bool Fit(const ROOT::Fit::UnBinData& data, bool extended = false). fit a data set using any generic model function; If data set is binned a least square fit is performed; If data set is unbinned a maximum likelihood fit (not extended) is done; Pre-requisite on the function:; it must implement the 1D or multidimensional parametric function interface. SetFunction(func). return Fit(data). bool Fit(const BinData & data). Fit a binned data set using a least square fit (default method). SetData(const ROOT::Fit::FitData& data). return DoLeastSquareFit(). bool LeastSquareFit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit. return DoUnbinnedLikelihoodFit(bool extended = false). bool LikelihoodFit(const BinData & data, bool extended = true). Binned Likelihood fit. Default is extended. return DoBinnedLikelihoodFit(bool extended = true). bool LikelihoodFit(const std::shared_ptr<BinData> & data, bool extended = true). bool LikelihoodFit(const UnBinData & data, bool extended = false). Unbinned Likelihood fit. Default is not extended. bool LikelihoodFit(const std::shared_ptr<UnBinData> & data, bool extended = false). SetFunction(func). bool LinearFit(const BinData & data). do a linear fit on a set of bin-data. return DoLinearFit(). bool LinearFit(const std::shared_ptr<BinData> & data). bool FitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fit using the a generic FCN function as a C++ callable object implementing; double () (const double *); Note that the function dimension (i.e. the number of parameter) is needed in this case; For the options see documentation for following methods FitFCN(IMultiGenFunction & fcn,..). bool SetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__Fitter.html:6735,extend,extended,6735,root/html604/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__Fitter.html,2,['extend'],['extended']
Modifiability,"ared_ptr<ROOT::Fit::BinData>& data); boolFit(const ROOT::Fit::UnBinData& data, bool extended = false); boolFitFCN(); boolFitFCN(const ROOT::Math::FitMethodFunction& fcn, const double* params = 0); boolFitFCN(const ROOT::Math::FitMethodGradFunction& fcn, const double* params = 0); boolFitFCN(const ROOT::Math::IMultiGenFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolFitFCN(const ROOT::Math::IMultiGradFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolFitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); ROOT::Fit::FitterFitter(); ROOT::Fit::FitterFitter(const shared_ptr<ROOT::Fit::FitResult>& result); ROOT::Math::IMultiGenFunction*GetFCN() const; ROOT::Math::Minimizer*GetMinimizer() const; boolIsBinFit() const; boolLeastSquareFit(const ROOT::Fit::BinData& data); boolLikelihoodFit(const ROOT::Fit::BinData& data, bool extended = true); boolLikelihoodFit(const shared_ptr<ROOT::Fit::BinData>& data, bool extended = true); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, bool extended = false); boolLikelihoodFit(const shared_ptr<ROOT::Fit::UnBinData>& data, bool extended = false); boolLinearFit(const ROOT::Fit::BinData& data); boolLinearFit(const shared_ptr<ROOT::Fit::BinData>& data); const ROOT::Fit::FitResult&Result() const; boolSetFCN(const ROOT::Math::FitMethodFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::FitMethodGradFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::IMultiGenFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(const ROOT::Math::IMultiGradFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); voidSetFunction(const ROOT::F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__Fitter.html:2306,extend,extended,2306,root/html604/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__Fitter.html,2,['extend'],['extended']
Modifiability,"arencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; Float_t PolygonSurfaceXY (const Polygon_t &poly) const;  Calculate XY surface of a polygon. ;  ; void SetDepthLocal (Float_t d) override;  Set depth (z-coordinate) of the projected points. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  . Protected Attributes; Int_t fNPnts;  ; TEveVector * fPnts;  ; vpPolygon_t fPols;  ; vpPolygon_t fPolsBP;  ; vpPolygon_t fPolsBS;  ;  Protected Attributes inherited from TEveShape; Bool_t fDrawFrame;  ; Color_t fFillColor;  ; Bool_t fHighlightFrame;  ; Color_t fLineColor;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePolygonSetProjected.html:34767,inherit,inherited,34767,doc/master/classTEvePolygonSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEvePolygonSetProjected.html,1,['inherit'],['inherited']
Modifiability,"arent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGShapedFrame(const char* fname = 0, const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = 0); Shaped window default constructor. ~TGShapedFrame(); Destructor. void SavePrimitive(ostream& out, Option_t* option = """"); Save a shaped frame as a C++ statement(s) on output stream out. TGShapedFrame(const TGShapedFrame& ). TGShapedFrame& operator=(const TGShapedFrame& ). void DoRedraw(); {}. const TGPicture GetPicture() const; { return *fBgnd; }. TImage GetImage() const; { return *fImage; }. » Author: Bertrand Bellenot 23/01/2008 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:56; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGShapedFrame.html:19540,Inherit,Inheritance,19540,root/html604/TGShapedFrame.html,https://root.cern,https://root.cern/root/html604/TGShapedFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGShapedFrame(const char* fname = 0, const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = 0); Shaped window default constructor. ~TGShapedFrame(); Destructor. void SavePrimitive(ostream& out, Option_t* option = """"); Save a shaped frame as a C++ statement(s) on output stream out. TGShapedFrame(const TGShapedFrame& ). TGShapedFrame& operator=(const TGShapedFrame& ). void DoRedraw(); {}. const TGPicture GetPicture() const; { return *fBgnd; }. TImage GetImage() const; { return *fImage; }. » Author: Bertrand Bellenot 23/01/2008 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:57; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGShapedFrame.html:19540,Inherit,Inheritance,19540,root/html602/TGShapedFrame.html,https://root.cern,https://root.cern/root/html602/TGShapedFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  . Private Member Functions;  TEveCaloViz (const TEveCaloViz &)=delete;  ; TEveCaloViz & operator= (const TEveCaloViz &)=delete;  . Friends; class TEveCaloVizEditor;  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloViz.html:35492,inherit,inherited,35492,doc/master/classTEveCaloViz.html,https://root.cern,https://root.cern/doc/master/classTEveCaloViz.html,2,['inherit'],['inherited']
Modifiability,"arexp); voidSyncFormulas(). Data Members; private:. TEntryList*fEntriesCurrently active entries; Long64_tfEntryPresent entry number in fTree.; Long64_tfFirstEntryFirst entry.; Bool_tfForceDimForce dimension.; TList*fFormulasArray of TTreeFormulas to display values; TList*fInputUsed for fSelector.; TTreeFormulaManager*fManagerCoordinator for the formulas.; UInt_tfNColumnsAmount of columns in the data; Long64_tfNEntriesNumber of entries in the tree.; UInt_tfNRowsAmount of rows in the data; TTreeFormula*fSelectSelection condition; TSelectorDraw*fSelectorSelector; TTree*fTreeData in a TTree. Class Charts. Inheritance Chart:. TVirtualTableInterface. ←; TTreeTableInterface. Function documentation; TTreeTableInterface(TTree* tree = 0, const char* varexp = 0, const char* selection = 0, Option_t* option = 0, Long64_t nentries = 0, Long64_t firstentry = 0); TTreeTableInterface constructor. ~TTreeTableInterface(); TTreeTableInterface destructor. void SetVariablesExpression(const char* varexp); Compile the variables expression from the given varexp. void SetSelection(const char* selection); Set the selection expression. void SyncFormulas(); Sync the formulas using the TTreeFormulaManager. void InitEntries(); Initialise the TEntryList with the entries that match the; selection criterium. Double_t GetValue(UInt_t row, UInt_t column); Return the value of row,column. If the position does not exist; or does not contain a number, 0 is returned. const char * GetValueAsString(UInt_t row, UInt_t column); Return the content of row,column as string to use in a; TGTableCell label. const char * GetRowHeader(UInt_t row); Return a string to use as a label for rowheader at column. const char * GetColumnHeader(UInt_t column); Return a string to use as a label for columnheader at column. UInt_t GetNColumns(); Return the amount of column available. UInt_t GetNRows(); Return the amount of rows in the Tree. void AddColumn(const char* expression, UInt_t position); Add column according ot expression a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeTableInterface.html:3354,variab,variables,3354,root/html602/TTreeTableInterface.html,https://root.cern,https://root.cern/root/html602/TTreeTableInterface.html,4,['variab'],['variables']
Modifiability,"arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {}, . const RooCmdArg & ; arg9 = {} . ). Import multiple RooAbsArg objects into workspace. ; For details on arguments see documentation of import() method for single RooAbsArg NoteFrom python, use Import(), since import is a reserved keyword. ; Definition at line 330 of file RooWorkspace.cxx. ◆ import() [4/6]. bool RooWorkspace::import ; (; RooAbsData const & ; inData, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {}, . const RooCmdArg & ; arg9 = {} . ). Import a dataset (RooDataSet or RooDataHist) into the workspace. ; The workspace will contain a copy of the data. The dataset and its variables can be renamed upon insertion with the options below. Accepted arguments . Rename(const char* suffix) Rename dataset upon insertion . RenameVariable(const char* inputName, const char* outputName) Change names of observables in dataset upon insertion . Silence Be quiet, except in case of errors NoteFrom python, use Import(), since import is a reserved keyword. . Definition at line 726 of file RooWorkspace.cxx. ◆ import() [5/6]. bool RooWorkspace::import ; (; TObject const & ; object, . bool ; replaceExisting = false . ). Import a clone of a generic TObject into workspace generic object container. ; Imported object can be retrieved by name through the obj() method. The object is cloned upon importation and the input argument does not need to live beyond the import call; Returns true if an error has occurred. ; Definition at line 1912 of file RooWorkspace.cxx. ◆ import() [6/6]. bool RooWorkspace::import ; (; TObject const & ; object, . const char * ; aliasName, . bool ; replaceExisting = false . ). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:41989,variab,variables,41989,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,1,['variab'],['variables']
Modifiability,"arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooPlot*plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*plotOn(RooPlot* frame, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual RooPlot*plotOn(RooPlot* frame, Option_t* drawOptions, Double_t scaleFactor = 1., RooAbsReal::ScaleType stype = Relative, const RooAbsData* projData = 0, const RooArgSet* projSet = 0, Double_t precision = 0.001, Bool_t shiftToZero = kFALSE, const RooArgSet* projDataSet = 0, Double_t rangeLo = 0, Double_t rangeHi = 0, RooCurve::WingMode wmode = RooCurve::Extended) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1., RooAbsReal::ScaleType stype = Relative, const RooAbsData* projData = 0) const; virtual voidTObject::Pop(); virtual voidRooAbsReal::preferredObservableScanOrder(const RooArgSet& obs, RooArgSet& orderedObs) const; RooAbsPdf::GenSpec*RooAbsPdf::prepareMultiGen(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsArg::Print(Option_t* options = 0) const; virtual voidRooAbsArg::printAddress(ostream& os) const; virtual voidRooAbsArg::printArgs(ostream& os) const; virtual voidRooAbsArg::printClassName(ostream& os) const; voidRooAbsArg::printCompactT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSimultaneous.html:25380,Extend,Extended,25380,root/html602/RooSimultaneous.html,https://root.cern,https://root.cern/root/html602/RooSimultaneous.html,2,['Extend'],['Extended']
Modifiability,"arg_types, typename ArgTypesNoDecay = typename TTraits::CallableTraits<AccFun>::arg_types_nodecay, typename U = TTraits::TakeFirstParameter_t<ArgTypes>, typename T = TTraits::TakeFirstParameter_t<TTraits::RemoveFirstParameter_t<ArgTypes>>> . RResultPtr< U > ROOT::RDF::RInterface< Proxied, DataSource >::Aggregate ; (; AccFun ; aggregator, . MergeFun ; merger, . std::string_view ; columnName, . const U & ; aggIdentity . ). inline . Execute a user-defined accumulation operation on the processed column values in each processing slot. ; Template Parameters. FThe type of the aggregator callable. Automatically deduced. ; UThe type of the aggregator variable. Must be default-constructible, copy-constructible and copy-assignable. Automatically deduced. ; TThe type of the column to apply the reduction to. Automatically deduced. . Parameters. [in]aggregatorA callable with signature U(U,T) or void(U&,T), where T is the type of the column, U is the type of the aggregator variable ; [in]mergerA callable with signature U(U,U) or void(std::vector<U>&) used to merge the results of the accumulations of each thread ; [in]columnNameThe column to be aggregated. If omitted, the first default column is used instead. ; [in]aggIdentityThe aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted) . Returnsthe result of the aggregation wrapped in a RResultPtr.; An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is initialized to aggIdentity or default-constructed if aggIdentity is omitted. This action calls the aggregator callable for each processed entry, passing in the aggregator variable and the value of the column columnName. If the signature is U(U,T) the aggregator variable is then copy-assigned the result of the execution of the callable. Otherwise the signature of aggregator must be void(U&,T).; The merger callable is used to merge the partial accumulation results of e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:31686,variab,variable,31686,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['variab'],['variable']
Modifiability,"arget&fFitterTargetthe fitter target; Double_tfLastResultremembers the last obtained result (for internal use); TMVA::MsgLogger*fLoggermessage logger; Bool_tfMakeCopiesif true, the population will make copies of the first individuals; Bool_tfMirrornew values for mutation are mirror-mapped if outside of constraints; TMVA::GeneticPopulationfPopulationcontains and controls the ""individual""; Int_tfPopulationSizethe size of the population; const vector<TMVA::Interval*>&fRangesparameter ranges; Double_tfSpreadregulates the spread of the value change at mutation (sigma); deque<Int_t>fSuccessListto adjust the stepSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GeneticAlgorithm(TMVA::IFitterTarget& target, Int_t populationSize, const vector<TMVA::Interval*>& ranges, UInt_t seed = 0); Constructor; Parameters:; int populationSize : defines the number of ""Individuals"" which are created and tested; within one Generation (Iteration of the Evolution); std::vector<TMVA::Interval*> ranges : Interval holds the information of an interval, where the GetMin; gets the low and GetMax gets the high constraint of the variable; the size of ""ranges"" is the number of coefficients which are optimised; Purpose:; Creates a random population with individuals of the size ranges.size(). ~GeneticAlgorithm(); destructor; deletes fLogger. void Init(); calls evolution, but if it is not the first time.; If it's the first time, the random population created by the; constructor is still not evaluated, .. therefore we wait for the; second time init is called. Double_t NewFitness(Double_t oldValue, Double_t newValue); if the ""fitnessFunction"" is called multiple times for one set of; factors (because i.e. each event of a TTree has to be assessed with; each set of Factors proposed by the Genetic Algorithm) the value; of the current calculation has to be added(? or else) to the value; obtained up to now.; example: some chi-square is calculated for every event,; a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__GeneticAlgorithm.html:2815,variab,variable,2815,root/html602/TMVA__GeneticAlgorithm.html,https://root.cern,https://root.cern/root/html602/TMVA__GeneticAlgorithm.html,4,['variab'],['variable']
Modifiability,"arget(Bool_t onoff); virtual voidSetOpen(Bool_t o); virtual voidSetPictures(const TGPicture*, const TGPicture*); virtual voidSetText(const char*); virtual voidSetTipText(const char*); virtual voidSetUserData(void*, Bool_t = kFALSE); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidToggle(); virtual voidUpdateState(). private:. TGListTreeItem&operator=(const TGListTreeItem&). Data Members; protected:. TGClient*fClientpointer to TGClient; Int_tfDNDStateEDNDFlags; TGListTreeItem*fFirstchildpointer to first child item; UInt_tfHeightitem height; TGListTreeItem*fLastchildpointer to last child item; TGListTreeItem*fNextsiblingpointer to next sibling; Bool_tfOpentrue if item is open; TGListTreeItem*fParentpointer to parent; TGListTreeItem*fPrevsiblingpointer to previous sibling; Int_tfXtextx position of item text; Int_tfYy position of item; Int_tfYtexty position of item text. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UInt_t GetPicWidth() const; Return width of item's icon. TGListTreeItem& operator=(const TGListTreeItem& ). virtual ~TGListTreeItem(); {}. TGListTreeItem * GetParent() const; { return fParent; }. TGListTreeItem * GetFirstChild() const; { return fFirstchild; }. TGListTreeItem * GetLastChild() const; { return fLastchild; }. TGListTreeItem * GetPrevSibling() const; { return fPrevsibling; }. TGListTreeItem * GetNextSibling() const; { return fNextsibling; }. Bool_t IsOpen() const; { return fOpen; }. void SetOpen(Bool_t o); { fOpen = o; }. Bool_t IsActive() const. Pixel_t GetActiveColor() const. void SetActive(Bool_t ); {}. void Rename(const char* new_name); { SetText(new_name); }. const char * GetText() const. Int_t GetTextLength() const. const char * GetTipText() const. Int_t GetTipTextLength() const. void SetText(const char* ); {}. void SetTipText(const char* ); {}. void SetUserData(void* , Bool_t = kFALSE); {}. void * GetUserData() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGListTreeItem.html:3425,Inherit,Inheritance,3425,root/html532/TGListTreeItem.html,https://root.cern,https://root.cern/root/html532/TGListTreeItem.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"argetDir = NULL); TMVA::MethodCutsMethodCuts(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""MC:150:10000:"", TDirectory* theTargetFile = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidPrintCuts(Double_t effS) const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidTMVA::MethodBase::ProcessSetup(); virtual voidTMVA::IFitterTarget::ProgressNotifier(TString, TString); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTarget",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodCuts.html:11544,Config,Configurable,11544,root/html534/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodCuts.html,1,['Config'],['Configurable']
Modifiability,"argin (Double_t m=0.1);  Sets the extra space (in %) around interpolated area for the 2D histogram. ;  ; void SetMarginBinsContent (Double_t z=0.);  Sets the histogram bin height for points lying outside the TGraphDelaunay convex hull ie: the bins in the margin. ;  ; void SetMaximum (Double_t maximum=-1111);  Set maximum. ;  ; void SetMaxIter (Int_t n=100000);  ; void SetMinimum (Double_t minimum=-1111);  Set minimum. ;  ; void SetName (const char *name) override;  Changes the name of this 2D graph. ;  ; void SetNameTitle (const char *name, const char *title) override;  Change the name and title of this 2D graph. ;  ; void SetNpx (Int_t npx=40);  Sets the number of bins along X used to draw the function. ;  ; void SetNpy (Int_t npx=40);  Sets the number of bins along Y used to draw the function. ;  ; void SetTitle (const char *title="""") override;  Sets the 2D graph title. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DAsymmErrors.html:12586,inherit,inherited,12586,doc/master/classTGraph2DAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DAsymmErrors.html,2,['inherit'],['inherited']
Modifiability,"argin; Int_tTGFrame::fYframe y position; UInt_tfYMarginy margin; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGView(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, Int_t id = -1, UInt_t xMargin = 0, UInt_t yMargin = 0, UInt_t options = kSunkenFrame | kDoubleBorder, UInt_t sboptions = 0, Pixel_t back = GetWhitePixel()); Create an editor view, containing an TGEditorFrame and (optionally); a horizontal and vertical scrollbar. ~TGView(); Delete view. void Clear(Option_t* = """"); Clear view. void SetVisibleStart(Int_t newTop, Int_t direction); Scroll view in specified direction to make newTop the visible location. void DrawRegion(Int_t x, Int_t y, UInt_t width, UInt_t height); Draw region. void UpdateRegion(Int_t x, Int_t y, UInt_t w, UInt_t h); update a part of view. void UpdateBackgroundStart(); set some gc values. Bool_t HandleButton(Event_t* event); handle button. void DoRedraw(); redraw. Bool_t HandleExpose(Event_t* event); Handle expose events. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process scrollbar messages. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGView.html:22036,Inherit,Inheritance,22036,root/html602/TGView.html,https://root.cern,https://root.cern/root/html602/TGView.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::unique_ptr< RooNumConvolution > _conv;  ! Actual convolution calculation ;  ; bool _init = false;  ! do not persist ;  ; RooRealProxy _origModel;  Original resolution model. ;  ; RooRealProxy _origPdf;  Original input PDF. ;  ; RooRealProxy _origVar;  Original convolution variable. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvPdf.html:70350,variab,variable,70350,doc/master/classRooNumConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooNumConvPdf.html,1,['variab'],['variable']
Modifiability,"argument returning a single number result:; ties = ""ordered"" (iTies = 0): input x are ""ordered""; ties = ""mean"" (iTies = 1): function ""mean""; ties = ""min"" (iTies = 2): function ""min""; ties = ""max"" (iTies = 3): function ""max"". Details:; At least two complete (x, y) pairs are required.; If there are duplicated (tied) x values and ties is a function it is; applied to the y values for each distinct x value. Useful functions in; this context include mean, min, and max.; If ties=""ordered"" the x values are assumed to be already ordered. The; first y value will be used for interpolation to the left and the last; one for interpolation to the right. Value:; approx returns a graph with components x and y, containing n coordinates; which interpolate the given data points according to the method (and rule); desired. Double_t Approx1(Double_t v, Double_t f, Double_t* x, Double_t* y, Int_t n, Int_t iKind, Double_t Ylow, Double_t Yhigh); Approximate one data point*-*-*-*-*-; *-* ==========================. Approximate y(v), given (x,y)[i], i = 0,..,n-1; Based on R function approx1: Translated to C++ by Christian Stratowa; (R source file: approx.c by R Development Core Team (C) 1999-2001). Int_t Rcmp(Double_t x, Double_t y); static function; if (ISNAN(x)) return 1;; if (ISNAN(y)) return -1;. void Psort(Double_t* x, Int_t n, Int_t k); static function; based on R function rPsort: adapted to C++ by Christian Stratowa; (R source file: R_sort.c by R Development Core Team (C) 1999-2001). void Rank(Int_t n, Double_t* a, Int_t* index, Int_t* rank, Bool_t down = kTRUE); static function. TGraphSmooth(const TGraphSmooth& ). TGraphSmooth& operator=(const TGraphSmooth& ). » Author: Christian Stratowa 30/09/2001 » Copyright (c) 2001- , Dr. Christian Stratowa, Vienna, Austria. *; » Last changed: root/hist:$Id$ » Last generated: 2015-03-14 16:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraphSmooth.html:17223,adapt,adapted,17223,root/html534/TGraphSmooth.html,https://root.cern,https://root.cern/root/html534/TGraphSmooth.html,2,['adapt'],['adapted']
Modifiability,"argument returning a single number result:; ties = ""ordered"" (iTies = 0): input x are ""ordered""; ties = ""mean"" (iTies = 1): function ""mean""; ties = ""min"" (iTies = 2): function ""min""; ties = ""max"" (iTies = 3): function ""max"". Details:; At least two complete (x, y) pairs are required.; If there are duplicated (tied) x values and ties is a function it is; applied to the y values for each distinct x value. Useful functions in; this context include mean, min, and max.; If ties=""ordered"" the x values are assumed to be already ordered. The; first y value will be used for interpolation to the left and the last; one for interpolation to the right. Value:; approx returns a graph with components x and y, containing n coordinates; which interpolate the given data points according to the method (and rule); desired. Double_t Approx1(Double_t v, Double_t f, Double_t* x, Double_t* y, Int_t n, Int_t iKind, Double_t Ylow, Double_t Yhigh); Approximate one data point*-*-*-*-*-; *-* ==========================. Approximate y(v), given (x,y)[i], i = 0,..,n-1; Based on R function approx1: Translated to C++ by Christian Stratowa; (R source file: approx.c by R Development Core Team (C) 1999-2001). Int_t Rcmp(Double_t x, Double_t y); static function; if (ISNAN(x)) return 1;; if (ISNAN(y)) return -1;. void Psort(Double_t* x, Int_t n, Int_t k); static function; based on R function rPsort: adapted to C++ by Christian Stratowa; (R source file: R_sort.c by R Development Core Team (C) 1999-2001). void Rank(Int_t n, Double_t* a, Int_t* index, Int_t* rank, Bool_t down = kTRUE); static function. TGraphSmooth(const TGraphSmooth& ). TGraphSmooth& operator=(const TGraphSmooth& ). » Author: Christian Stratowa 30/09/2001 » Copyright (c) 2001- , Dr. Christian Stratowa, Vienna, Austria. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-02 16:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGraphSmooth.html:17714,adapt,adapted,17714,root/html604/TGraphSmooth.html,https://root.cern,https://root.cern/root/html604/TGraphSmooth.html,2,['adapt'],['adapted']
Modifiability,"argument returning a single number result:; ties = ""ordered"" (iTies = 0): input x are ""ordered""; ties = ""mean"" (iTies = 1): function ""mean""; ties = ""min"" (iTies = 2): function ""min""; ties = ""max"" (iTies = 3): function ""max"". Details:; At least two complete (x, y) pairs are required.; If there are duplicated (tied) x values and ties is a function it is; applied to the y values for each distinct x value. Useful functions in; this context include mean, min, and max.; If ties=""ordered"" the x values are assumed to be already ordered. The; first y value will be used for interpolation to the left and the last; one for interpolation to the right. Value:; approx returns a graph with components x and y, containing n coordinates; which interpolate the given data points according to the method (and rule); desired. Double_t Approx1(Double_t v, Double_t f, Double_t* x, Double_t* y, Int_t n, Int_t iKind, Double_t Ylow, Double_t Yhigh); Approximate one data point*-*-*-*-*-; *-* ==========================. Approximate y(v), given (x,y)[i], i = 0,..,n-1; Based on R function approx1: Translated to C++ by Christian Stratowa; (R source file: approx.c by R Development Core Team (C) 1999-2001). Int_t Rcmp(Double_t x, Double_t y); static function; if (ISNAN(x)) return 1;; if (ISNAN(y)) return -1;. void Psort(Double_t* x, Int_t n, Int_t k); static function; based on R function rPsort: adapted to C++ by Christian Stratowa; (R source file: R_sort.c by R Development Core Team (C) 1999-2001). void Rank(Int_t n, Double_t* a, Int_t* index, Int_t* rank, Bool_t down = kTRUE); static function. TGraphSmooth(const TGraphSmooth& ). TGraphSmooth& operator=(const TGraphSmooth& ). » Author: Christian Stratowa 30/09/2001 » Copyright (c) 2001- , Dr. Christian Stratowa, Vienna, Austria. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraphSmooth.html:17714,adapt,adapted,17714,root/html602/TGraphSmooth.html,https://root.cern,https://root.cern/root/html602/TGraphSmooth.html,2,['adapt'],['adapted']
Modifiability,"argument; use format:; //; // mylinux~> root -l TMVAClassification.C\‍(\""myMethod1,myMethod2,myMethod3\""\‍); ; //---------------------------------------------------------------; // This loads the library; TMVA::Tools::Instance();; ; // Default MVA methods to be trained + tested; std::map<std::string,int> Use;; ; // Cut optimisation; Use[""Cuts""] = 1;; Use[""CutsD""] = 1;; Use[""CutsPCA""] = 0;; Use[""CutsGA""] = 0;; Use[""CutsSA""] = 0;; //; // 1-dimensional likelihood (""naive Bayes estimator""); Use[""Likelihood""] = 1;; Use[""LikelihoodD""] = 0; // the ""D"" extension indicates decorrelated input variables (see option strings); Use[""LikelihoodPCA""] = 1; // the ""PCA"" extension indicates PCA-transformed input variables (see option strings); Use[""LikelihoodKDE""] = 0;; Use[""LikelihoodMIX""] = 0;; //; // Mutidimensional likelihood and Nearest-Neighbour methods; Use[""PDERS""] = 1;; Use[""PDERSD""] = 0;; Use[""PDERSPCA""] = 0;; Use[""PDEFoam""] = 1;; Use[""PDEFoamBoost""] = 0; // uses generalised MVA method boosting; Use[""KNN""] = 1; // k-nearest neighbour method; //; // Linear Discriminant Analysis; Use[""LD""] = 1; // Linear Discriminant identical to Fisher; Use[""Fisher""] = 0;; Use[""FisherG""] = 0;; Use[""BoostedFisher""] = 0; // uses generalised MVA method boosting; Use[""HMatrix""] = 0;; //; // Function Discriminant analysis; Use[""FDA_GA""] = 1; // minimisation of user-defined function using Genetics Algorithm; Use[""FDA_SA""] = 0;; Use[""FDA_MC""] = 0;; Use[""FDA_MT""] = 0;; Use[""FDA_GAMT""] = 0;; Use[""FDA_MCMT""] = 0;; //; // Neural Networks (all are feed-forward Multilayer Perceptrons); Use[""MLP""] = 0; // Recommended ANN; Use[""MLPBFGS""] = 0; // Recommended ANN with optional training method; Use[""MLPBNN""] = 1; // Recommended ANN with BFGS training method and bayesian regulator; Use[""CFMlpANN""] = 0; // Depreciated ANN from ALEPH; Use[""TMlpANN""] = 0; // ROOT's own ANN; #ifdef R__HAS_TMVAGPU; Use[""DNN_GPU""] = 1; // CUDA-accelerated DNN training.; #else; Use[""DNN_GPU""] = 0;; #endif; ; #ifdef R__HAS_TMVACPU; Use[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:81849,variab,variables,81849,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,2,['variab'],['variables']
Modifiability,"argus"",""argus background"",X,k,xm) ;; RooRealVar gfrac(""gfrac"",""fraction of gaussian"",0.,1.) ;; RooAddPdf pdf(""pdf"",""gauss+argus"",RooArgList(gauss,argus),gfrac) ;; RooSimPdfBuilder builder(pdf) ;; RooArgSet* config = builder.createProtoBuildConfig() ;; (*config)[""physModels""] = ""pdf"" ; // Name of the PDF we are going to work with; (*config)[""splitCats""] = ""C"" ; // Category used to differentiate sub-datasets; (*config)[""pdf""] = ""C : k,s"" ; // Prescription to taylor PDF parameters k and s ; // for each data subset designated by C states; RooSimultaneous* simPdf = builder.buildPdf(*config,&D) ;; . The above snippet of code demonstrates the concept of RooSimPdfBuilder:; the user defines a single 'prototype' PDF that defines the structure of all; PDF components of the RooSimultaneous PDF to be built. RooSimPdfBuilder ; then takes this prototype and replicates it as a component ; PDF for each state of the C index category.; . In the above example RooSimPdfBuilder; will first replicate k and s into ; k_C1,k_C2 and s_C1,s_C2, as prescribed in the; configuration. Then it will recursively replicate all PDF nodes that depend on; the 'split' parameter nodes: gauss into gauss_C1,C2, argus ; into argus_C1,C2 and finally pdf into pdf_C1,pdf_C2. ; When PDFs for all states of C have been replicated; they are assembled into a RooSimultaneous PDF, which is returned by the buildPdf(); method.; . Although in this very simple example the use of RooSimPdfBuilder doesn't; reduce the amount of code much, it is already easier to read and maintain; because there is no duplicate code. As the complexity of the RooSimultaneous; to be built increases, the advantages of RooSimPdfBuilder will become more and; more apparent.; ; Builder configuration rules for a single prototype PDF. Each builder configuration needs at minumum two lines, physModels and splitCats, which identify; the ingredients of the build. In this section we only explain the building rules for; builds from a single prototype PDF. In ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimPdfBuilder.html:3523,config,configuration,3523,root/html526/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html526/RooSimPdfBuilder.html,11,['config'],['configuration']
Modifiability,"ariable 'm_jj'; : Input : variable 'm_jjj' <---> Output : variable 'm_jjj'; : Input : variable 'm_lv' <---> Output : variable 'm_lv'; : Input : variable 'm_jlv' <---> Output : variable 'm_jlv'; : Input : variable 'm_bb' <---> Output : variable 'm_bb'; : Input : variable 'm_wbb' <---> Output : variable 'm_wbb'; : Input : variable 'm_wwbb' <---> Output : variable 'm_wwbb'; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : m_jj: 1.0318 0.65629 [ 0.15106 16.132 ]; : m_jjj: 1.0217 0.37420 [ 0.34247 8.9401 ]; : m_lv: 1.0507 0.16678 [ 0.26679 3.6823 ]; : m_jlv: 1.0161 0.40288 [ 0.38441 6.5831 ]; : m_bb: 0.97707 0.53961 [ 0.080986 8.2551 ]; : m_wbb: 1.0358 0.36856 [ 0.38503 6.4013 ]; : m_wwbb: 0.96265 0.31608 [ 0.43228 4.5350 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; IdTransformation : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Separation; : -------------------------------; : 1 : m_bb : 9.511e-02; : 2 : m_wbb : 4.268e-02; : 3 : m_wwbb : 4.178e-02; : 4 : m_jjj : 2.825e-02; : 5 : m_jlv : 1.999e-02; : 6 : m_jj : 3.834e-03; : 7 : m_lv : 3.699e-03; : -------------------------------; Factory : Train method: Likelihood for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ Likelihood ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelated input variables; : (PCA transformation via the option ""VarTransform=Decorrelate""; : may be tried). Irreducible non-linear correlations may be reduced",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:15862,variab,variable,15862,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,2,['variab'],['variable']
Modifiability,"ariable (override if minimizer supports them ) otherwise as default set an unlimited variable ;  ; virtual bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower);  set a new lower limit variable (override if minimizer supports them ) ;  ; void SetMaxFunctionCalls (unsigned int maxfcn);  set maximum of function calls ;  ; void SetMaxIterations (unsigned int maxiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable (override if minimizer supports them ) ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariable (unsigned int ivar, const std::string &name, double val, double step)=0;  set a new free variable ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsig",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:11370,variab,variable,11370,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,1,['variab'],['variable']
Modifiability,"ariable (override if minimizer supports them ) otherwise as default set an unlimited variable ;  ; virtual bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower);  set a new lower limit variable (override if minimizer supports them ) ;  ; void SetMaxFunctionCalls (unsigned int maxfcn);  set maximum of function calls ;  ; void SetMaxIterations (unsigned int maxiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable (override if minimizer supports them ) ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearMinimizer.html:8607,variab,variable,8607,doc/master/classTLinearMinimizer.html,https://root.cern,https://root.cern/doc/master/classTLinearMinimizer.html,1,['variab'],['variable']
Modifiability,"ariable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* hMat) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const; return status of covariance matrix; using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate}; Minimizer who implements covariance matrix calculation will re-implement the method. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int ivar) const. return global correlation coefficient for variable i; This is a number between zero and one which gives; the correlation between the i-th parameter and that linear combination of all; other parameters which is most strongly correlated with i.; Minimizer must overload method if implemented. bool GetMinosError(unsigned int ivar, double& errLow, double& errUp, int option = 0). minos error for variable i, return false if Minos failed or not supported; and the lower and upper errors are returned in errLow and errUp; An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run; (This feature is not yet implemented). bool Hesse(). perform a full calculation of the Hessian matrix for error calculation. bool Scan(unsigned int ivar, unsigned int& nstep, double* x, double* y, double xmin = 0, double xmax = 0). scan function minimum for variable i. Variable and function must be set b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Minimizer.html:9927,variab,variable,9927,root/html534/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Minimizer.html,6,['variab'],['variable']
Modifiability,"ariable parameters of \(\mbox{FCN}\) would be the coefficients of the polynomials. Using objects for minimization from M , the user would request M to minimize the \(\mbox{FCN}\) with respect to the parameters, that is, find those values of the coefficients which give the lowest value of chisquare.; The user must therefore supply, in addition to the function to be analyzed, via a set or sequence of M applications the instructions which analysis is wanted. The instructions are coded in in the calling program (main.cpp), which allows looping, conditional execution, and all the other possibilities of , but not interactivity, since it must be compiled before execution.; 2.2 Design aspects of M in; What M is:. platform independent; written in an object-oriented way using standard; independent of any external package. The maintainability should be guaranteed with the choice of a modern computer language. Choosing object-oriented technology M should profit from an increased flexibility and functionality and make it also extendable (recursivness, new algorithms, new functionality).; What M does not:. histogramming; data handling; graphics. M is kept as a low-level package with optimal performance.; The main usages of M are. from a user’s program (such as int main()…); from a graphical data analysis tool such as HippoDraw@bib-HippoDraw. The most important goals of M in are. its numerical accuracy (equivalent to its Fortran version); its computational performance (equivalent to its Fortran version). For the design of the application programming interface (API) of M a two-way strategy was imposed:. a minimal required interface with minimum interaction with M objects and with appropriate usage of the standard library (STL): the user’s implementation of the FCNBase class, initial parameter values and uncertainties are provided by the to M user via std::vectors.; a rich interface which provides the user with more functionality such as interaction with parameters. The core of the m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:9356,extend,extendable,9356,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,2,['extend'],['extendable']
Modifiability,"ariable, UInt_t *variableMap, UInt_t &nVars);  ; virtual DecisionTreeNode * GetRoot () const;  ; Double_t GetSumWeights (const EventConstList *validationSample) const;  calculate the normalization factor for a pruning validation sample ;  ; Int_t GetTreeID ();  ; std::vector< Double_t > GetVariableImportance ();  Return the relative variable importance, normalized to all variables together having the importance 1. ;  ; Double_t GetVariableImportance (UInt_t ivar);  returns the relative importance of variable ivar ;  ; virtual TClass * IsA () const;  ; void PruneNode (TMVA::DecisionTreeNode *node);  prune away the subtree below the node ;  ; void PruneNodeInPlace (TMVA::DecisionTreeNode *node);  prune a node temporarily (without actually deleting its descendants which allows testing the pruned tree quality for many different pruning stages without ""touching"" the tree. ;  ; Double_t PruneTree (const EventConstList *validationSample=nullptr);  prune (get rid of internal nodes) the Decision tree to avoid overtraining several different pruning methods can be applied as selected by the variable ""fPruneMethod"". ;  ; void SetAnalysisType (Types::EAnalysisType t);  ; void SetMinLinCorrForFisher (Double_t min);  ; void SetNodePurityLimit (Double_t p);  ; void SetNVars (Int_t n);  ; void SetParentTreeInNodes (Node *n=nullptr);  descend a tree to find all its leaf nodes, fill max depth reached in the tree at the same time. ;  ; void SetPruneMethod (EPruneMethod m=kCostComplexityPruning);  ; void SetPruneStrength (Double_t p);  ; void SetTreeID (Int_t treeID);  ; void SetUseExclusiveVars (Bool_t t=kTRUE);  ; void SetUseFisherCuts (Bool_t t=kTRUE);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t TestPrunedTreeQuality (const DecisionTreeNode *dt=nullptr, Int_t mode=0) const;  return the misclassification rate of a pruned tree a ""pruned tree"" may have set the variable ""IsTerminal"" to ""arbitrary"" at any node, hence t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:6606,variab,variable,6606,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variable']
Modifiability,"ariableInfo::SetUnit ; (; const TString & ; s). inlineprivate . Definition at line 93 of file VariableInfo.h. ◆ SetVariance(). void TMVA::VariableInfo::SetVariance ; (; Double_t ; v). inline . Definition at line 76 of file VariableInfo.h. ◆ SetVarType(). void TMVA::VariableInfo::SetVarType ; (; char ; c). inlineprivate . Definition at line 95 of file VariableInfo.h. ◆ Streamer(). virtual void TMVA::VariableInfo::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TMVA::VariableInfo::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 114 of file VariableInfo.h. ◆ WriteToStream(). void TMVA::VariableInfo::WriteToStream ; (; std::ostream & ; o); const. write VariableInfo to stream ; Definition at line 148 of file VariableInfo.cxx. Member Data Documentation. ◆ fExpression. TString TMVA::VariableInfo::fExpression. private . original variable expression (can be a formula) ; Definition at line 97 of file VariableInfo.h. ◆ fExternalData. void* TMVA::VariableInfo::fExternalData. private . ! if the variable content is linked to an external pointer ; Definition at line 109 of file VariableInfo.h. ◆ fExternalDataType. TString TMVA::VariableInfo::fExternalDataType. private . type of external variable (int, long, double, float) - to be done JS ; Definition at line 110 of file VariableInfo.h. ◆ fInternalName. TString TMVA::VariableInfo::fInternalName. private . internal variable name (needs to be regular expression) ; Definition at line 98 of file VariableInfo.h. ◆ fLabel. TString TMVA::VariableInfo::fLabel. private . variable label, set by ""mylabel := var1 + var2"", this is a shortcut ; Definition at line 99 of file VariableInfo.h. ◆ fNormalized. Bool_t TMVA::VariableInfo::fNormalized. private . variable gets normalized ; Definition at line 108 of file VariableInfo.h. ◆ fUnit. TString TMVA::VariableInfo::fUnit. private . unit for axis labels in plots; set by t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html:19844,variab,variable,19844,doc/master/classTMVA_1_1VariableInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html,1,['variab'],['variable']
Modifiability,"ariableNormalizeTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPrintTransformation(ostream& o); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html:5452,Variab,VariableTransformBase,5452,root/html602/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ariableRearrangeTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPrintTransformation(ostream& o); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html:5377,Variab,VariableTransformBase,5377,root/html602/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableIdentityTransform( DataSetInfo& dsi ); constructor. void Initialize(); nothing to initialize. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); the identity does not need to be prepared, only calculate the normalization. void AttachXMLTo(void* parent); identity transformation to write to XML; Log() << kFATAL << ""Please implement writing of transformation as XML"" << Endl;. void ReadFromXML(void* trfnode); reding the identity transformation from XML. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const; identity transform returns same event. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creates C++ code fragment of the indentity transform for inclusion in standalone C++ class. VariableIdentityTransform( DataSetInfo& dsi ). virtual ~VariableIdentityTransform( void ); {}. void WriteTransformationToStream(ostream& ) const; {}. void ReadTransformationFromStream(istream& , const TString& ); { SetCreated(); }. const Event* InverseTransform(const TMVA::Event *const ev, Int_t cls) const; { return Transform( ev, cls ); }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: VariableIdentityTransform.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html:10031,Variab,VariableIdentityTransform,10031,root/html532/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html,3,['Variab'],['VariableIdentityTransform']
Modifiability,"ariables. ; Definition at line 26 of file TProofOutputList.h. Public Member Functions;  TProofOutputList (const char *dontshow=""PROOF_*"");  Constructor. ;  ;  ~TProofOutputList () override;  Destructor. ;  ; void AttachList (TList *alist);  Attach to list 'alist'. ;  ;  ClassDefOverride (TProofOutputList, 1);  ; TList * GetDontShowList ();  ; void ls (Option_t *option="""") const override;  List the content of the list. ;  ; void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const override;  Print the collection header and its elements that match the wildcard. ;  ; void Print (Option_t *option, Int_t recurse) const override;  Print the collection header and its elements. ;  ; void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const override;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Print the content of the list. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the list and also store option. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofOutputList.html:1343,inherit,inherited,1343,doc/master/classTProofOutputList.html,https://root.cern,https://root.cern/doc/master/classTProofOutputList.html,1,['inherit'],['inherited']
Modifiability,"ariables. Different steps followed by TSPlot. A maximum Likelihood fit is performed to obtain the yields of the various species. ; The fit relies on discriminating variables  uncorrelated with a control variable :; the later is therefore totally absent from the fit. . The weights are calculated using Eq. (2) where the covariance matrix is taken from Minuit. Histograms of  are filled by weighting the events with . . Error bars per bin are given by Eq. (6). . The ; reproduce the true distributions of the species in the control variable , within the above defined statistical uncertainties. Illustrations. To illustrate the technique, one considers an example derived from the analysis where . have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields and . The fit relies on two discriminating variables collectively denoted  which are chosen within three possible variables denoted , and .; The variable which is not incorporated in  is used as the control variable . The six distributions of the three variables are assumed to be the ones depicted in Fig. 1. Figure 1:; Distributions of the three discriminating variables available to perform the Likelihood fit: ; , , .; Among the three variables, two are used to perform the fit while one is; kept out of the fit to serve the purpose of a control variable. The; three distributions on the top (resp. bottom) of the figure correspond; to the signal (resp. background). The unit of the vertical axis is; chosen such that it indicates the number of entries per bin, if one; slices the histograms in 25 bins. A data sample being built through a Monte Carlo simulation based on the distributions shown in Fig. 1, one obtains the three distributions of Fig. 2. Whereas the distribution of  clearly indicates the presence of the signal, the distribution of and are less obviou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSPlot.html:5287,variab,variables,5287,root/html528/TSPlot.html,https://root.cern,https://root.cern/root/html528/TSPlot.html,12,['variab'],['variables']
Modifiability,"ariables; Bool_tfNormalisenormalise input variables; Bool_tfSortGetif true, sort the variables into the order as defined by the user at the var definition; vector<TMVA::VariableInfo>fSpectatorsevent spectators [saved to weight file --> TODO ]; vector<TMVA::VariableInfo>fTargetsevent targets [saved to weight file --> TODO ]; TStringfTransformNamename of transformation; Bool_tfUseSignalTransformtrue if transformation bases on signal data; TMVA::Types::EVariableTransformfVariableTransformDecorrelation, PCA, etc.; Bool_tfVariableTypesAreCountedtrue if variable types have been counted already; vector<TMVA::VariableInfo>fVariablesevent variables [saved to weight file]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); standard constructor. ~VariableTransformBase(). void SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); select the variables/targets/spectators which serve as input to the transformation. Bool_t GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; select the values from the event. void SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; select the values from the event. void CountVariableTypes(UInt_t& nvars, UInt_t& ntgts, UInt_t& nspcts) const; count variables, targets and spectators. void CalcNorm(const vector<const TMVA::Event*>& ); TODO --> adapt to variable,target,spectator selection; method to calculate minimum, maximum, mean, and RMS for all; variables used in the MVA. std::vector<TString>* GetTransformationStrings(Int_t cls) const; TODO --> adapt to variable,target,spectator selection; default transformation output; --> only indicate that transformation occurred. void UpdateNorm(Int_t ivar, Double_t x); TODO --> adapt to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableTransformBase.html:9862,variab,variables,9862,root/html602/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableTransformBase.html,4,['variab'],['variables']
Modifiability,"aries. Function documentation; ~VariableTransformBase(). void SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); select the variables/targets/spectators which serve as input to the transformation. Bool_t GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; select the values from the event. void SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; select the values from the event. void CountVariableTypes(UInt_t& nvars, UInt_t& ntgts, UInt_t& nspcts) const; count variables, targets and spectators. void CalcNorm(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); TODO --> adapt to variable,target,spectator selection; method to calculate minimum, maximum, mean, and RMS for all; variables used in the MVA. std::vector<TString>* GetTransformationStrings(Int_t cls) const; TODO --> adapt to variable,target,spectator selection; default transformation output; --> only indicate that transformation occurred. void UpdateNorm(Int_t ivar, Double_t x); TODO --> adapt to variable,target,spectator selection; update min and max of a given variable (target) and a given transformation method. void AttachXMLTo(void* parent); create XML description the transformation (write out info of selected variables). void ReadFromXML(void* trfnode); Read the input variables from the XML node. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); getinput and setoutput equivalent. void Initialize(). Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ). const Event* Transform(const TMVA::Event *const , Int_t cls) const. const Event* InverseTransform(const TMVA::Event *const , Int_t cls) const. void SetEnabled(Bool_t e); accessors. { fEnabled = e; }. void SetNormalise(Bool_t n); { fNormalise = n; }. Bool_t IsEnabled() const; { return fEnable",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__VariableTransformBase.html:9877,adapt,adapt,9877,root/html530/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html530/TMVA__VariableTransformBase.html,6,"['adapt', 'variab']","['adapt', 'variable']"
Modifiability,"arker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNnumber of points; TStringTPolyMarker3D::fNamename of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionoptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the source tree variables; TStringfTitleTitle/tooltip of the TEvePointSet.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEvePointSet(Int_t n_points = 0, TEvePointSelectorConsumer::ETreeVarType_e tv_type = kTVT_XYZ); Constructor. TEvePointSet(const char* name, Int_t n_points = 0, TEvePointSelectorConsumer::ETreeVarType_e tv_type = kTVT_XYZ); Constructor. TEvePointSet(const TEvePointSet& e); Copy constructor. ~TEvePointSet(); Destructor. void ClonePoints(const TEvePointSet& e); Clone points and all point-related information from",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEvePointSet.html:26246,variab,variables,26246,root/html528/TEvePointSet.html,https://root.cern,https://root.cern/root/html528/TEvePointSet.html,4,['variab'],['variables']
Modifiability,"arker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Attributes; TString fLabel;  Text associated with the entry, will become latex. ;  ; TObject * fObject;  pointer to object being represented by this entry ;  ; TString fOption;  Options associated with this entry. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions; TLegendEntry & operator= (const TLegendEntry &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLegendEntry.html:17800,inherit,inherited,17800,doc/master/classTLegendEntry.html,https://root.cern,https://root.cern/doc/master/classTLegendEntry.html,1,['inherit'],['inherited']
Modifiability,"arkerColor(Color_t color) Select the ROOT marker color, default is black . RooFit::MarkerSize(Size_t size) Select the ROOT marker size . RooFit::FillStyle(Style_t style) Select fill style, default is filled. . RooFit::FillColor(Color_t color) Select fill color by ROOT color code . RooFit::XErrorSize(double frac) Select size of X error bar as fraction of the bin width, default is 1. Misc. other options . RooFit::Name(const char* name) Give curve specified name in frame. Useful if curve is to be referenced later . RooFit::Invisible() Add curve to frame, but do not display. Useful in combination AddTo() . RooFit::AddTo(const char* name, double wgtSel, double wgtOther) Add constructed histogram to already existing histogram with given name and relative weight factors. Reimplemented from RooAbsData.; Definition at line 175 of file RooAbsData.cxx. ◆ plotOn() [3/4]. RooPlot * RooAbsData::plotOn ; (; RooPlot * ; frame, . PlotOpt ; o . ); const. virtual . Create and fill a histogram of the frame's variable and append it to the frame. ; The frame variable must be one of the data sets dimensions.; The plot range and the number of plot bins is determined by the parameters of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()).; The optional cut string expression can be used to select the events to be plotted. The cut specification may refer to any variable contained in the data set.; The drawOptions are passed to the TH1::Draw() method. See alsoRooAbsData::plotOn(RooPlot*,const RooLinkedList&) const ; Reimplemented from RooAbsData.; Definition at line 326 of file RooAbsData.cxx. ◆ plotOn() [4/4]. RooPlot * RooDataHist::plotOn ; (; RooPlot * ; frame, . PlotOpt ; o . ); const. overridevirtual . Back end function to plotting functionality. ; Plot RooDataHist on given frame in mode specified by plot options 'o'. The main purpose of this function is to match the specified binning on 'o' to the internal binning of the plot observable in this RooData",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:71805,variab,variable,71805,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,1,['variab'],['variable']
Modifiability,"arkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; gROOT#define gROOTDefinition TROOT.h:406; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TAttFill::GetFillColorvirtual Color_t GetFillColor() constReturn the fill area color.Definition TAttFill.h:30; TCanvasThe Canvas class.Definition TCanvas.h:23; TColorThe color creation and management class.Definition TColor.h:21; TColor::GetColorPalettestatic Int_t GetColorPalette(Int_t i)Static function returning the color number i in current palette.Definition TColor.cxx:1504; TColor::GetColorstatic Int_t GetColor(const char *hexcolor)Static method returning color number for color specified by hex color string of form: ""#rrggbb"",...Definition TColor.cxx:1920; TColor::GetNumberOfColorsstatic Int_t GetNumberOfColors()Static function returning number of colors in the color palette.Definition TColor.cxx:1524; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::GetUniqueIDvirtual UInt_t GetUniqueID() constReturn the unique object id.Definition TObject.cxx:462; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TPolyLineDefined by an array on N points in a 2-D space.Definition TPolyLine.h:23; TPolyLine::Classstatic TClass * Class(); TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)See TColor::SetPalette.Definition TStyle.cxx:1888; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; AuthorRene Brun ; Definition in file triangles.C. tutorialsgraphicstriangles.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/triangles_8C.html:3180,inherit,inherits,3180,doc/master/triangles_8C.html,https://root.cern,https://root.cern/doc/master/triangles_8C.html,1,['inherit'],['inherits']
Modifiability,"arkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGraph2D; void Build (Int_t n);  Creates the 2D graph basic data structure. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGraph2DAsymmErrors.h>. Inheritance diagram for TGraph2DAsymmErrors:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGraph2DAsymmErrors() [1/4]. TGraph2DAsymmErrors::TGraph2DAsymmErrors ; (; ). TGraph2DAsymmErrors default constructor. ; Definition at line 87 of file TGraph2DAsymmErrors.cxx. ◆ TGraph2DAsymmErrors() [2/4]. TGraph2DAsymmErrors::TGraph2DAsymmErrors ; (; Int_t ; n). TGraph2DAsymmErrors normal constructor the arrays are preset to zero. ; Definition at line 94 of file TGraph2DAsymmErrors.cxx. ◆ TGraph2DAsymmErrors() [3/4]. TGraph2DAsymmErrors::TGraph2DAsymmErrors ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Double_t * ; z, . Double_t * ; exl = nullptr, . Double_t * ; exh = nullptr, . Double_t * ; eyl = nullptr, . Double_t * ; eyh = nullptr, . Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DAsymmErrors.html:29211,inherit,inherited,29211,doc/master/classTGraph2DAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DAsymmErrors.html,1,['inherit'],['inherited']
Modifiability,"arkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGraph2D; void Build (Int_t n);  Creates the 2D graph basic data structure. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGraph2DErrors.h>. Inheritance diagram for TGraph2DErrors:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGraph2DErrors() [1/4]. TGraph2DErrors::TGraph2DErrors ; (; ). TGraph2DErrors default constructor. ; Definition at line 80 of file TGraph2DErrors.cxx. ◆ TGraph2DErrors() [2/4]. TGraph2DErrors::TGraph2DErrors ; (; Int_t ; n). TGraph2DErrors normal constructor the arrays are preset to zero. ; Definition at line 87 of file TGraph2DErrors.cxx. ◆ TGraph2DErrors() [3/4]. TGraph2DErrors::TGraph2DErrors ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Double_t * ; z, . Double_t * ; ex = nullptr, . Double_t * ; ey = nullptr, . Double_t * ; ez = nullptr, . Option_t * ; option = """" . ). TGraph2DErrors constructor with doubles vectors as input. ; Definition at line 11",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DErrors.html:27828,inherit,inherited,27828,doc/master/classTGraph2DErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DErrors.html,1,['inherit'],['inherited']
Modifiability,"arm2) override;  Handle dialog events. ;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fBold;  bold flag ;  ; TGColorSelect * fColorSelect;  color selection dialog ;  ; TGListBox * fFontNames;  list of font names ;  ; FontProp_t * fFontProp;  font info structure ;  ; TGListBox * fFontSizes;  list of font sizes ;  ; TGListBox * fFontStyles;  list of font styles ;  ; Bool_t fHitOK;  flag = kTRUE if user press the Ok button ;  ; Int_t fInitAlign;  initial value of text align ;  ; Pixel_t fInitColor;  initial value of text color ;  ; TGFont * fInitFont;  initial font ;  ; Bool_t fItalic;  italic flag ;  ; TGFont * fLabelFont;  TGFont used for sample text. ;  ; TString fLName;  logical font na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFontDialog.html:30015,inherit,inherited,30015,doc/master/classTGFontDialog.html,https://root.cern,https://root.cern/doc/master/classTGFontDialog.html,3,['inherit'],['inherited']
Modifiability,"arning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void configure (const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Construct the SplitRule object from a list of named arguments past to RooSimWSTool::build This method parses any SplitParam and SplitParamComstrained argument in the list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::list< std::string > _miStateNameList;  ; std::map< std::string, std::pair< std::list< std::string >, std::string > > _paramSplitMap;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class BuildConfig;  ; class MultiBuildConfig;  ; class RooSimWSTool;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html:10247,inherit,inherited,10247,doc/master/classRooSimWSTool_1_1SplitRule.html,https://root.cern,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html,1,['inherit'],['inherited']
Modifiability,"arning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TListTHtml::TFileSysDir::fDirs; TListTHtml::TFileSysDir::fFiles; Int_tTHtml::TFileSysEntry::fLevellevel of directory; TStringTHtml::TFileSysEntry::fNamename of the element; THtml::TFileSysDir*THtml::TFileSysEntry::fParentparent directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void GetFullName(TString& fullname, Bool_t asIncluded) const. TFileSysRoot(const char* name, THtml::TFileSysDB* parent); {}. TString fInputPath; // directories to look for classes; prepended to Decl/ ImplFileName(). » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-06-30 15:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THtml__TFileSysRoot.html:23767,Inherit,Inheritance,23767,root/html602/THtml__TFileSysRoot.html,https://root.cern,https://root.cern/root/html602/THtml__TFileSysRoot.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TListTHtml::TFileSysDir::fDirs; TListTHtml::TFileSysDir::fFiles; Int_tTHtml::TFileSysEntry::fLevellevel of directory; TStringTHtml::TFileSysEntry::fNamename of the element; THtml::TFileSysDir*THtml::TFileSysEntry::fParentparent directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void GetFullName(TString& fullname, Bool_t asIncluded) const. TFileSysRoot(const char* name, THtml::TFileSysDB* parent); {}. TString fInputPath; // directories to look for classes; prepended to Decl/ ImplFileName(). » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-09-08 17:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THtml__TFileSysRoot.html:23767,Inherit,Inheritance,23767,root/html604/THtml__TFileSysRoot.html,https://root.cern,https://root.cern/root/html604/THtml__TFileSysRoot.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arningRate);  Updates the biases, given the gradients and the learning rate. ;  ; void UpdateBiasGradients (const std::vector< Matrix_t > &biasGradients, const Scalar_t learningRate);  Updates the bias gradients, given some other weight gradients and learning rate. ;  ; void UpdateWeightGradients (const std::vector< Matrix_t > &weightGradients, const Scalar_t learningRate);  Updates the weight gradients, given some other weight gradients and learning rate. ;  ; void UpdateWeights (const std::vector< Matrix_t > &weightGradients, const Scalar_t learningRate);  Updates the weights, given the gradients and the learning rate,. ;  ; void WriteMatrixToXML (void *node, const char *name, const Matrix_t &matrix);  ; void WriteTensorToXML (void *node, const char *name, const std::vector< Matrix_t > &tensor);  helper functions for XML ;  . Private Attributes; bool fFlattening;  Whether the layer is doing flattening. ;  . Additional Inherited Members;  Protected Attributes inherited from TMVA::DNN::VGeneralLayer< Architecture_t >; Tensor_t fActivationGradients;  Gradients w.r.t. the activations of this layer. ;  ; size_t fBatchSize;  Batch size used for training and evaluation. ;  ; std::vector< Matrix_t > fBiases;  The biases associated to the layer. ;  ; std::vector< Matrix_t > fBiasGradients;  Gradients w.r.t. the bias values of the layer. ;  ; size_t fDepth;  The depth of the layer. ;  ; size_t fHeight;  The height of the layer. ;  ; EInitialization fInit;  The initialization method. ;  ; size_t fInputDepth;  The depth of the previous layer or input. ;  ; size_t fInputHeight;  The height of the previous layer or input. ;  ; size_t fInputWidth;  The width of the previous layer or input. ;  ; bool fIsTraining;  Flag indicating the mode. ;  ; Tensor_t fOutput;  Activations of this layer. ;  ; std::vector< Matrix_t > fWeightGradients;  Gradients w.r.t. the weights of the layer. ;  ; std::vector< Matrix_t > fWeights;  The weights associated to the layer. ;  ; size_t fWidth;  The ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TReshapeLayer.html:7028,inherit,inherited,7028,doc/master/classTMVA_1_1DNN_1_1TReshapeLayer.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TReshapeLayer.html,1,['inherit'],['inherited']
Modifiability,"around interpolated area for fHistogram; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTGraph2D::fMaxIterMaximum number of iterations to find Delaunay triangles; Double_tTGraph2D::fMaximumMaximum value for plotting along z; Double_tTGraph2D::fMinimumMinimum value for plotting along z; TStringTNamed::fNameobject identifier; Int_tTGraph2D::fNpointsNumber of points in the data set; Int_tTGraph2D::fNpxNumber of bins along X in fHistogram; Int_tTGraph2D::fNpyNumber of bins along Y in fHistogram; TVirtualHistPainter*TGraph2D::fPainter!Pointer to histogram painter; Int_tTGraph2D::fSize!Real size of fX, fY and fZ; TStringTNamed::fTitleobject title; Double_t*TGraph2D::fX[fNpoints]; Double_t*TGraph2D::fY[fNpoints] Data set to be plotted; Double_t*TGraph2D::fZ[fNpoints]; Double_tTGraph2D::fZoutfHistogram bin height for points lying outside the interpolated area. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraph2DErrors(); TGraph2DErrors default constructor. TGraph2DErrors(Int_t n); TGraph2DErrors normal constructor; the arrays are preset to zero. TGraph2DErrors(Int_t n, Double_t* x, Double_t* y, Double_t* z, Double_t* ex = 0, Double_t* ey = 0, Double_t* ez = 0, Option_t* option = """"); TGraph2DErrors constructor with doubles vectors as input. ~TGraph2DErrors(); TGraph2DErrors destructor. TGraph2DErrors(const TGraph2DErrors& ); Copy constructor.; Copy everything except list of functions. TGraph2DErrors & operator=(const TGraph2DErrors& ); Assignment operator; Copy everything except list of functions. Double_t GetErrorX(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetErrorY(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetErrorZ(Int_t bin) const; This function is called by Graph2DFitChisquare.; It ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraph2DErrors.html:12619,Inherit,Inheritance,12619,root/html534/TGraph2DErrors.html,https://root.cern,https://root.cern/root/html534/TGraph2DErrors.html,6,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"arrangeTransformVariableRearrangeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableRearrangeTransformVariableRearrangeTransform(const TMVA::VariableRearrangeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const. protected:. voidTMVA::VariableTransformBase::CalcNorm(const vector<const TMVA::Event*,allocator<const TMVA::Event*> >&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Int_tTMVA::VariableTransformBase::GetNClasses() const; UInt_tTMVA::VariableTransformBase::GetNSpectators() const; UInt_tTMVA::VariableTransformBase::GetNTargets() const; UInt_tTMVA::VariableTransformBase::GetNVariables() const; voidTObject::MakeZombie(); voidTMVA::VariableTransformBase::SetCreated(Bool_t c = kTRUE); voidTMVA::VariableTransformBase::SetName(const TString& c); voidTMVA::VariableTransformBase::SetNVariables(UInt_t i); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableRearrangeTransform.html:7323,Variab,VariableTransformBase,7323,root/html534/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableRearrangeTransform.html,15,['Variab'],"['VariableInfo', 'VariableTransformBase', 'Variables']"
Modifiability,"array must be dimensioned to the size of existing parameters) ;  ; virtual const double * StepSizes () const;  accessor methods ;  ; int VariableIndex (const std::string &name) const override;  get index of variable given a variable given a name return -1 if variable is not found ;  ; std::string VariableName (unsigned int ivar) const override;  get name of variables (override if minimizer support storing of variable names) ;  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html:5738,variab,variable,5738,doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html,1,['variab'],['variable']
Modifiability,"array must be dimensioned to the size of existing parameters) ;  ; virtual const double * StepSizes () const;  accessor methods ;  ; int VariableIndex (const std::string &name) const override;  get index of variable given a variable given a name return -1 if variable is not found ;  ; std::string VariableName (unsigned int ivar) const override;  get name of variables (override if minimizer support storing of variable names) ;  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; virtual double CovMatrix (unsigned int ivar, unsigned int jvar) const;  return covariance matrices element for variables ivar,jvar if the variable is fixed the return value is zero The ordering of the variables is the same as in the parameter and errors vectors ;  ; virtual int CovMatrixStatus () const;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; virtual double Edm () const;  return expected distance reached from the minimum (re-implement if minimizer provides it ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html:4988,variab,variable,4988,doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,2,['variab'],['variable']
Modifiability,"array must be dimensioned to the size of existing parameters) ;  ; virtual const double * StepSizes () const;  accessor methods ;  ; int VariableIndex (const std::string &name) const override;  get index of variable given a variable given a name return -1 if variable is not found ;  ; std::string VariableName (unsigned int ivar) const override;  get name of variables (override if minimizer support storing of variable names) ;  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; virtual int CovMatrixStatus () const;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html:6091,variab,variable,6091,doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,1,['variab'],['variable']
Modifiability,"array must be dimensioned to the size of existing parameters) ;  ; virtual const double * StepSizes () const;  accessor methods ;  ; int VariableIndex (const std::string &name) const override;  get index of variable given a variable given a name return -1 if variable is not found ;  ; std::string VariableName (unsigned int ivar) const override;  get name of variables (override if minimizer support storing of variable names) ;  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; virtual int CovMatrixStatus () const;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; virtual double Edm () const;  return expected distance reached from the minimum (re-implement if minimizer provides it ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the varia",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html:5931,variab,variable,5931,doc/master/classROOT_1_1Math_1_1RMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html,1,['variab'],['variable']
Modifiability,"arraysDefinition DataSetFactory.h:229; TMVA::DataSetFactory::BuildEventVectorvoid BuildEventVector(DataSetInfo &dsi, DataInputHandler &dataInput, EventVectorOfClassesOfTreeType &eventsmap, EvtStatsPerClass &eventCounts)build empty event vectors distributes events between kTraining/kTesting/kMaxTreeTypeDefinition DataSetFactory.cxx:728; TMVA::DataSetFactory::CreateDataSetDataSet * CreateDataSet(DataSetInfo &, DataInputHandler &)steering the creation of a new datasetDefinition DataSetFactory.cxx:123; TMVA::DataSetFactory::MixEventsDataSet * MixEvents(DataSetInfo &dsi, EventVectorOfClassesOfTreeType &eventsmap, EvtStatsPerClass &eventCounts, const TString &splitMode, const TString &mixMode, const TString &normMode, UInt_t splitSeed)Select and distribute unassigned events to kTraining and kTesting.Definition DataSetFactory.cxx:1063; TMVA::DataSetFactory::NumberPerClassstd::vector< int > NumberPerClassDefinition DataSetFactory.h:154; TMVA::DataSetFactory::fInputFormulasstd::vector< TTreeFormula * > fInputFormulasinput variablesDefinition DataSetFactory.h:228; TMVA::DataSetFactory::EventVectorOfClassesstd::vector< EventVector > EventVectorOfClassesDefinition DataSetFactory.h:119; TMVA::DataSetFactory::InitOptionsvoid InitOptions(DataSetInfo &dsi, EvtStatsPerClass &eventsmap, TString &normMode, UInt_t &splitSeed, TString &splitMode, TString &mixMode)the dataset splittingDefinition DataSetFactory.cxx:638; TMVA::DataSetFactory::fVerboseBool_t fVerboseVerbosity.Definition DataSetFactory.h:214; TMVA::DataSetFactory::CalcMinMaxvoid CalcMinMax(DataSet *, DataSetInfo &dsi)compute covariance matrixDefinition DataSetFactory.cxx:479; TMVA::DataSetFactory::ValuePerClassstd::vector< Double_t > ValuePerClassDefinition DataSetFactory.h:123; TMVA::DataSetFactory::BuildDynamicDataSetDataSet * BuildDynamicDataSet(DataSetInfo &)Definition DataSetFactory.cxx:149; TMVA::DataSetFactory::EvtStatsPerClassstd::vector< EventStats > EvtStatsPerClassDefinition DataSetFactory.h:155; TMVA::DataSetFact",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8h_source.html:12678,variab,variablesDefinition,12678,doc/master/DataSetFactory_8h_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8h_source.html,1,['variab'],['variablesDefinition']
Modifiability,"arrays[***] or to f*** Copy points. ; Reimplemented from TGraph.; Definition at line 777 of file TGraphMultiErrors.cxx. ◆ CtorAllocate(). Bool_t TGraphMultiErrors::CtorAllocate ; (; ). protected . Should be called from ctors after fNpoints has been set Note: This function should be called only from the constructor since it does not delete previously existing arrays. ; Definition at line 718 of file TGraphMultiErrors.cxx. ◆ DeclFileName(). static const char * TGraphMultiErrors::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 213 of file TGraphMultiErrors.h. ◆ DeleteYError(). void TGraphMultiErrors::DeleteYError ; (; Int_t ; e). virtual . Deletes the y error with the index e. ; Note that you must keep at least 1 error ; Definition at line 1422 of file TGraphMultiErrors.cxx. ◆ Divide(). void TGraphMultiErrors::Divide ; (; const TH1 * ; pass, . const TH1 * ; total, . Option_t * ; opt = ""cp"" . ). This function was adapted from the TGraphAsymmErrors class. ; See TGraphAsymmErrors::Divide for the documentation; Only the first error dimension is affected. ; Definition at line 1001 of file TGraphMultiErrors.cxx. ◆ DoMerge(). Bool_t TGraphMultiErrors::DoMerge ; (; const TGraph * ; tg). overrideprotectedvirtual . Protected function to perform the merge operation of a graph with multiple asymmetric errors. ; Reimplemented from TGraph.; Definition at line 838 of file TGraphMultiErrors.cxx. ◆ FillZero(). void TGraphMultiErrors::FillZero ; (; Int_t ; begin, . Int_t ; end, . Bool_t ; from_ctor = kTRUE . ). overrideprotectedvirtual . Set zero values for point arrays in the range [begin, end]. ; Reimplemented from TGraph.; Definition at line 802 of file TGraphMultiErrors.cxx. ◆ GetAttFill(). TAttFill * TGraphMultiErrors::GetAttFill ; (; Int_t ; e). virtual . Get AttFill pointer for specified error dimension. ; Definition at line 1621 of file TGraphMultiErrors.cxx. ◆ GetAttLine(). TAttLine * TGraphMultiErrors::GetAttLin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:60659,adapt,adapted,60659,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['adapt'],['adapted']
Modifiability,"ars that we can generate events for, and return a code that specifies the generator algorithm we will use. ; A code of zero indicates that we cannot generate any of the directVars (in this case, nothing should be added to generatedVars). Any non-zero codes will be passed to our generateEvent() implementation, but otherwise its value is arbitrary. The default implementation of this method returns zero. Subclasses will usually implement this method using the matchArgs() methods to advertise the algorithms they provide. ; Reimplemented in RooBCPEffDecay, RooBCPGenDecay, RooBDecay, RooBMixDecay, RooDecay, RooGamma, RooGaussian, RooGaussModel, RooGExpModel, RooJohnson, RooLandau, RooLognormal, RooNonCPEigenDecay, RooPoisson, RooUniform, RooAddModel, RooBinSamplingPdf, RooMultiVarGaussian, RooProdPdf, and RooTruthModel.; Definition at line 1522 of file RooAbsPdf.cxx. ◆ getGeneratorConfig(). const RooNumGenConfig * RooAbsPdf::getGeneratorConfig ; (; ); const. Return the numeric MC generator configuration used for this object. ; If a specialized configuration was associated with this object, that configuration is returned, otherwise the default configuration for all RooAbsReals is returned ; Definition at line 2651 of file RooAbsPdf.cxx. ◆ getLogProbabilities(). void RooAbsPdf::getLogProbabilities ; (; std::span< const double > ; pdfValues, . double * ; output . ); const. Definition at line 671 of file RooAbsPdf.cxx. ◆ getLogVal(). double RooAbsPdf::getLogVal ; (; const RooArgSet * ; set = nullptr); const. virtual . Return the log of the current value with given normalization An error message is printed if the argument of the log is negative. ; Reimplemented in RooLegacyExpPoly, and RooHistConstraint.; Definition at line 620 of file RooAbsPdf.cxx. ◆ getNorm() [1/2]. double RooAbsPdf::getNorm ; (; const RooArgSet & ; nset); const. inline . Get normalisation term needed to normalise the raw values returned by getVal(). ; Note that getVal(normalisationVariables) will automatic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:127602,config,configuration,127602,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['config'],['configuration']
Modifiability,"ars, bool verbose) const; 1118{; 1119 return new RooBinnedGenContext(*this,vars,nullptr,nullptr,verbose) ;; 1120}; 1121 ; 1122 ; 1123////////////////////////////////////////////////////////////////////////////////; 1124/// Interface function to create a generator context from a p.d.f. This default; 1125/// implementation returns a 'standard' context that works for any p.d.f; 1126 ; 1127RooAbsGenContext* RooAbsPdf::genContext(const RooArgSet &vars, const RooDataSet *prototype,; 1128 const RooArgSet* auxProto, bool verbose) const; 1129{; 1130 return new RooGenContext(*this,vars,prototype,auxProto,verbose) ;; 1131}; 1132 ; 1133 ; 1134////////////////////////////////////////////////////////////////////////////////; 1135 ; 1136RooAbsGenContext* RooAbsPdf::autoGenContext(const RooArgSet &vars, const RooDataSet* prototype, const RooArgSet* auxProto,; 1137 bool verbose, bool autoBinned, const char* binnedTag) const; 1138{; 1139 if (prototype || (auxProto && !auxProto->empty())) {; 1140 return genContext(vars,prototype,auxProto,verbose);; 1141 }; 1142 ; 1143 RooAbsGenContext *context(nullptr) ;; 1144 if ( (autoBinned && isBinnedDistribution(vars)) || ( binnedTag && strlen(binnedTag) && (getAttribute(binnedTag)||string(binnedTag)==""*""))) {; 1145 context = binnedGenContext(vars,verbose) ;; 1146 } else {; 1147 context= genContext(vars,nullptr,nullptr,verbose);; 1148 }; 1149 return context ;; 1150}; 1151 ; 1152 ; 1153 ; 1154////////////////////////////////////////////////////////////////////////////////; 1155/// Generate a new dataset containing the specified variables with events sampled from our distribution.; 1156/// Generate the specified number of events or expectedEvents() if not specified.; 1157/// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; 1158/// constant and not be used for event generation.; 1159/// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg() to change behaviour of generate().; 1160/// \re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:56359,variab,variables,56359,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variables']
Modifiability,"ars.selectCommon(*o.projSet)};; 1923 sliceSetTmp.remove(*tmp,true,true) ;; 1924 }; 1925 ; 1926 if (!sliceSetTmp.empty()) {; 1927 coutI(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") plot on ""; 1928 << frame->getPlotVar()->GetName() << "" represents a slice in "" << sliceSetTmp << std::endl ;; 1929 }; 1930 sliceSet.add(sliceSetTmp) ;; 1931 }; 1932 } else {; 1933 makeProjectionSet(frame->getPlotVar(),frame->getNormVars(),projectedVars,true) ;; 1934 }; 1935 ; 1936 cxcoutD(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") projectedVars = "" << projectedVars << "" sliceSet = "" << sliceSet << std::endl ;; 1937 ; 1938 ; 1939 RooArgSet* projDataNeededVars = nullptr ;; 1940 // Take out data-projected dependents from projectedVars; 1941 if (o.projData) {; 1942 projDataNeededVars = projectedVars.selectCommon(projDataVars);; 1943 projectedVars.remove(projDataVars,true,true) ;; 1944 }; 1945 ; 1946 // Get the plot variable and remember its original value; 1947 auto* plotVar = static_cast<RooRealVar*>(frame->getPlotVar());; 1948 double oldPlotVarVal = plotVar->getVal();; 1949 ; 1950 // Inform user about projections; 1951 if (!projectedVars.empty()) {; 1952 coutI(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") plot on "" << plotVar->GetName(); 1953 << "" integrates over variables "" << projectedVars; 1954 << (o.projectionRangeName?Form("" in range %s"",o.projectionRangeName):"""") << std::endl;; 1955 }; 1956 if (projDataNeededVars && !projDataNeededVars->empty()) {; 1957 coutI(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") plot on "" << plotVar->GetName(); 1958 << "" averages using data variables "" << *projDataNeededVars << std::endl ;; 1959 }; 1960 ; 1961 // Create projection integral; 1962 RooArgSet* projectionCompList = nullptr ;; 1963 ; 1964 RooArgSet deps;; 1965 getObservables(frame->getNormVars(), deps) ;; 1966 deps.remove(projectedVars,true,true) ;; 1967 if (projDataNeededVars) {; 1968 deps.remove(*projDataNeededVars,true,true) ;; 1969 }; 1970 deps.remove(*plotVar,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:85907,variab,variable,85907,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variable']
Modifiability,"arse*TUnfoldSys::fEmatUncorrXResult: syst.error from fDA2 on fX; TArrayITUnfold::fHistToXInput: histogram bins -> matrix indices; TMatrixDSparse*TUnfold::fLInput: regularisation conditions; TUnfoldBinning*fOwnedInputBinsinput binning scheme if owner; TUnfoldBinning*fOwnedOutputBinsoutput binning scheme if owner; TUnfold::ERegModeTUnfold::fRegModeInput: type of regularisation; TUnfoldBinning*fRegularisationConditionsbinning scheme for the regularisation conditions; TArrayDTUnfold::fSumOverYInput: sum of all columns; TMap*TUnfoldSys::fSysInInput: correlated errors; Double_tTUnfold::fTauSquaredInput: regularisation parameter; TMatrixDSparse*TUnfold::fVyyInput: covariance matrix for y; TMatrixDSparse*TUnfoldSys::fVyyDataInput: error on fY prior to bgr subtraction; TMatrixD*TUnfold::fX0Input: x0; TArrayITUnfold::fXToHistInput: matrix indices -> histogram bins; TMatrixD*TUnfold::fYInput: y; TMatrixD*TUnfoldSys::fYDataInput: fY prior to bgr subtraction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TUnfoldDensity(const TUnfoldDensity& ); empty constructor, for derived classes. ~TUnfoldDensity(void); clean up. TString GetOutputBinName(Int_t iBinX) const. TUnfoldDensity(const TUnfoldDensity& ). Double_t GetDensityFactor(TUnfoldDensity::EDensityMode densityMode, Int_t iBin) const. TUnfoldDensity(const TH2* hist_A, TUnfold::EHistMap histmap, TUnfold::ERegMode regmode = kRegModeCurvature, TUnfold::EConstraint constraint = kEConstraintArea, TUnfoldDensity::EDensityMode densityMode = kDensityModeBinWidthAndUser, const TUnfoldBinning* outputBins = 0, const TUnfoldBinning* inputBins = 0, const char* regularisationDistribution = 0, const char* regularisationAxisSteering = ""*[UOB]""). void RegularizeDistribution(TUnfold::ERegMode regmode, TUnfoldDensity::EDensityMode densityMode, const char* distribution, const char* axisSteering). Int_t ScanTau(Int_t nPoint, Double_t tauMin, Double_t tauMax, TSpline** scanResult, Int_t mode = kEScanTauRhoAv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfoldDensity.html:22489,Inherit,Inheritance,22489,root/html534/TUnfoldDensity.html,https://root.cern,https://root.cern/root/html534/TUnfoldDensity.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"art minimization for global minimum? ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProfileLL.html:56911,inherit,inherited,56911,doc/master/classRooProfileLL.html,https://root.cern,https://root.cern/doc/master/classRooProfileLL.html,1,['inherit'],['inherited']
Modifiability,"art); Open file event. void FileReadEvent(TFile* file, Int_t len, Double_t start); Read file event. void FileUnzipEvent(TFile* file, Long64_t pos, Double_t start, Int_t complen, Int_t objlen); Record TTree file unzip event.; start is the TimeStamp before unzip; pos is where in the file the compressed buffer came from; complen is the length of the compressed buffer; objlen is the length of the de-compressed buffer. void RateEvent(Double_t proctime, Double_t deltatime, Long64_t eventsprocessed, Long64_t bytesRead); Rate event. void SetBytesRead(Long64_t num); Set number of bytes read. Long64_t GetBytesRead() const; Get number of bytes read. void WriteQueryLog(); Connect to SQL server and register query log used for quotas.; The <proofquerylog> table has the format:; CREATE TABLE <proofquerylog> (; id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,; user VARCHAR(32) NOT NULL,; proofgroup VARCHAR(32),; begin DATETIME,; end DATETIME,; walltime INT,; cputime FLOAT,; bytesread BIGINT,; events BIGINT,; workers INT; querytag VARCHAR(64) NOT NULL,; vmemmxw BIGINT, (*); rmemmxw BIGINT, (*); vmemmxm BIGINT, (*); rmemmxm BIGINT, (*); dataset VARCHAR(512), (*, **); numfiles INT (*); status INT (*); ); (*) Only for fMonitorInfo > 0; (**) Size controlled by variable Proof.Monitor.DataSetLen .; The name of the table is set while initializing the monitor writer object.; The same info is send to Monalisa (or other monitoring systems) in the; form of a list of name,value pairs. void Setup(TList* input); Setup the PROOF input list with requested statistics and tracing options. void Start(TList* input, TList* output); Initialize PROOF statistics run. void Stop(); Terminate the PROOF statistics run. void SetMemValues(); Record memory usage. virtual ~TPerfStats(); {}. void SetNumEvents(Long64_t num); { fNumEvents = num; }. Long64_t GetNumEvents() const; { return fNumEvents; }. » Author: Kristjan Gulbrandsen 11/05/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPerfStats.html:9980,variab,variable,9980,root/html530/TPerfStats.html,https://root.cern,https://root.cern/root/html530/TPerfStats.html,1,['variab'],['variable']
Modifiability,"art); virtual voidFileReadEvent(TFile* file, Int_t len, Double_t start); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetBytesRead() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static voidGetMemValues(Long_t& vmax, Long_t& rmax); virtual const char*TObject::GetName() const; virtual Long64_tGetNumEvents() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualPerfStats&TVirt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPerfStats.html:2959,Inherit,InheritsFrom,2959,root/html534/TPerfStats.html,https://root.cern,https://root.cern/root/html534/TPerfStats.html,1,['Inherit'],['InheritsFrom']
Modifiability,"art); virtual voidFileReadEvent(TFile* file, Int_t len, Double_t start); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetBytesRead() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static voidGetMemValues(Long_t& vmax, Long_t& rmax); virtual const char*TObject::GetName() const; virtual Long64_tGetNumEvents() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPerfStats&operator=(const TPerfStats&); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPerfStats.html:2959,Inherit,InheritsFrom,2959,root/html602/TPerfStats.html,https://root.cern,https://root.cern/root/html602/TPerfStats.html,2,['Inherit'],['InheritsFrom']
Modifiability,"art; TMacro*TQueryResult::fLogFilefile with log messages from the query; TStringTNamed::fNameobject identifier; Int_tTQueryResult::fNumWrksNumber of workers at start; TStringTQueryResult::fOptionsprocessing options + aclic mode (<opt>#<aclic_mode>); TList*TQueryResult::fOutputListoutput list; TStringTQueryResult::fParListcolon-separated list of PAR loaded at fStart; Float_tTQueryResult::fProcTimeProcessing time (seconds) (millisec precision); TStringTQueryResult::fResultFileURL of the file where results have been archived; TMacro*TQueryResult::fSelecHdrselector header file; TMacro*TQueryResult::fSelecImpselector implementation file; Int_tTQueryResult::fSeqNumquery unique sequential number; TDatimeTQueryResult::fStarttime when processing started; TQueryResult::EQueryStatusTQueryResult::fStatusquery status; TStringTNamed::fTitleobject title; Float_tTQueryResult::fUsedCPUreal CPU time used (seconds). private:. Int_tfStartLoglog file offset at start. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofQueryResult(Int_t seqnum, const char* opt, TList* inlist, Long64_t entries, Long64_t first, TDSet* dset, const char* selec, TObject* elist = 0); Main constructor. void SetRunning(Int_t startlog, const char* par, Int_t nwrks); Call when running starts. TProofQueryResult(Int_t seqnum, const char* opt, TList* inlist, Long64_t entries, Long64_t first, TDSet* dset, const char* selec, TObject* elist = 0); { TQueryResult::RecordEnd(status, outlist); }. void SetFinalized(); { TQueryResult::SetFinalized(); }. void SetResultFile(const char* rf); { fResultFile = rf; }. TProofQueryResult(); { }. virtual ~TProofQueryResult(); { }. » Author: G Ganis Aug 2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id: TProofQueryResult.h 34755 2010-08-10 10:47:41Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofQueryResult.html:9186,Inherit,Inheritance,9186,root/html532/TProofQueryResult.html,https://root.cern,https://root.cern/root/html532/TProofQueryResult.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"art;  ; Double_t fLatency;  ; Long64_t fLen;  ; TString fNodeName;  ; Double_t fProcTime;  ; TString fSlave;  ; TString fSlaveName;  ; TTimeStamp fTimeStamp;  ; TVirtualPerfStats::EEventType fType;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPerfStats.h>. Inheritance diagram for TPerfEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPerfEvent(). TPerfEvent::TPerfEvent ; (; TTimeStamp * ; offset = 0). Constructor. ; Definition at line 53 of file TPerfStats.cxx. ◆ ~TPerfEvent(). TPerfEvent::~TPerfEvent ; (; ). inlineoverride . Definition at line 60 of file TPerfStats.h. Member Function Documentation. ◆ Class(). static TClass * TPerfEvent::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPerfEvent::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPerfEvent::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 66 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPerfEvent.html:9895,inherit,inherited,9895,doc/master/classTPerfEvent.html,https://root.cern,https://root.cern/doc/master/classTPerfEvent.html,2,['inherit'],['inherited']
Modifiability,"arting at the right place; 2193 mninex(fX);; 2194 nparx = fNpar;; 2195 Eval(nparx, fGin, fs1, fU, 4); ++fNfcn;; 2196 if (fs1 != fAmin) {; 2197 df = fAmin - fs1;; 2198 mnwarn(""D"", ""MNDERI"", TString::Format(""function value differs from AMIN by %12.3g"",df));; 2199 fAmin = fs1;; 2200 }; 2201 Printf("" FIRST DERIVATIVE DEBUG PRINTOUT. MNDERI"");; 2202 Printf("" PAR DERIV STEP MINSTEP OPTSTEP D1-D2 2ND DRV"");; 2203 }; 2204 dfmin = fEpsma2*8*(TMath::Abs(fAmin) + fUp);; 2205 if (fIstrat <= 0) {; 2206 ncyc = 2;; 2207 tlrstp = .5;; 2208 tlrgrd = .1;; 2209 } else if (fIstrat == 1) {; 2210 ncyc = 3;; 2211 tlrstp = .3;; 2212 tlrgrd = .05;; 2213 } else {; 2214 ncyc = 5;; 2215 tlrstp = .1;; 2216 tlrgrd = .02;; 2217 }; 2218// loop over variable parameters; 2219 for (i = 1; i <= fNpar; ++i) {; 2220 epspri = fEpsma2 + TMath::Abs(fGrd[i-1]*fEpsma2);; 2221// two-point derivatives always assumed necessary; 2222// maximum number of cycles over step size depends on strategy; 2223 xtf = fX[i-1];; 2224 stepb4 = 0;; 2225// loop as little as possible here!/; 2226 for (icyc = 1; icyc <= ncyc; ++icyc) {; 2227// theoretically best step; 2228 optstp = TMath::Sqrt(dfmin / (TMath::Abs(fG2[i-1]) + epspri));; 2229// step cannot decrease by more than a factor of ten; 2230 step = TMath::Max(optstp,TMath::Abs(fGstep[i-1]*.1));; 2231// but if parameter has limits, max step size = 0.5; 2232 if (fGstep[i-1] < 0 && step > .5) step = .5;; 2233// and not more than ten times the previous step; 2234 stpmax = TMath::Abs(fGstep[i-1])*10;; 2235 if (step > stpmax) step = stpmax;; 2236// minimum step size allowed by machine precision; 2237 stpmin = TMath::Abs(fEpsma2*fX[i-1])*8;; 2238 if (step < stpmin) step = stpmin;; 2239// end of iterations if step change less than factor 2; 2240 if (TMath::Abs((step - stepb4) / step) < tlrstp) goto L50;; 2241// take step positive; 2242 stepb4 = step;; 2243 if (fGstep[i-1] > 0) fGstep[i-1] = TMath::Abs(step);; 2244 else fGstep[i-1] = -TMath::Abs(step);; 2245 stepb4 = step;; 2246 fX[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:73775,variab,variable,73775,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variable']
Modifiability,"arts. ROOT; » TMVA; » TMVA::MethodFisher. class TMVA::MethodFisher: public TMVA::MethodBase. Fisher and Mahalanobis Discriminants (Linear Discriminant Analysis); ; In the method of Fisher discriminants event selection is performed; in a transformed variable space with zero linear correlations, by; distinguishing the mean values of the signal and background; distributions. The linear discriminant analysis determines an axis in the (correlated); hyperspace of the input variables; such that, when projecting the output classes (signal and background); upon this axis, they are pushed as far as possible away from each other,; while events of a same class are confined in a close vicinity.; The linearity property of this method is reflected in the metric with; which ""far apart"" and ""close vicinity"" are determined: the covariance; matrix of the discriminant variable space.; . The classification of the events in signal and background classes; relies on the following characteristics (only): overall sample means,; xi, for each input variable, i,; class-specific sample means, xS(B),i,; and total covariance matrix Tij. The covariance matrix; can be decomposed into the sum of a within- (Wij); and a between-class (Bij) class matrix. They describe; the dispersion of events relative to the means of their own class (within-class; matrix), and relative to the overall sample means (between-class matrix).; The Fisher coefficients, Fi, are then given by . where in TMVA is set NS=NB, so that the factor; in front of the sum simplifies to ½.; The Fisher discriminant then reads. The offset F0 centers the sample mean of xFi; at zero. Instead of using the within-class matrix, the Mahalanobis variant; determines the Fisher coefficients as follows:. with resulting xMa that are very similar to the; xFi. ; TMVA provides two outputs for the ranking of the input variables:. Fisher test: the Fisher analysis aims at simultaneously maximising; the between-class separation, while minimising the within-cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodFisher.html:1260,variab,variable,1260,root/html528/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodFisher.html,8,['variab'],['variable']
Modifiability,"ary to have the first vector sorted.; I.e. the correlation between the elements is kept. void UsefulSortDescending(vector<std::vector<Double_t> >& , vector<TString>* vs = 0); sort 2D vector (AND in parallel a TString vector) in such a way; that the ""first vector is sorted"" and the other vectors are reshuffled; in the same way as necessary to have the first vector sorted.; I.e. the correlation between the elements is kept. Double_t GetMutualInformation(const TH2F& ); Mutual Information method for non-linear correlations estimates in 2D histogram; Author: Moritz Backes, Geneva (2009). Double_t GetCorrelationRatio(const TH2F& ); Compute Correlation Ratio of 2D histogram to estimate functional dependency between two variables; Author: Moritz Backes, Geneva (2009). Double_t GetYMean_binX(const TH2& , Int_t bin_x); Compute the mean in Y for a given bin X of a 2D histogram. TH2F* TransposeHist(const TH2F& ); Transpose quadratic histogram. Bool_t CheckForSilentOption(const TString& ) const; check for ""silence"" option in configuration option string. Bool_t CheckForVerboseOption(const TString& ) const; check if verbosity ""V"" set in option. void UsefulSortDescending(vector<Double_t>& ); sort vector. void UsefulSortAscending(vector<Double_t>& ); sort vector. Int_t GetIndexMaxElement(vector<Double_t>& ); find index of maximum entry in vector. Int_t GetIndexMinElement(vector<Double_t>& ); find index of minimum entry in vector. Bool_t ContainsRegularExpression(const TString& s); check if regular expression; helper function to search for ""$!%^&()'<>?= "" in a string. TString ReplaceRegularExpressions(const TString& s, const TString& replace = ""+""); replace regular expressions; helper function to remove all occurences ""$!%^&()'<>?= "" from a string; and replace all ::,$,*,/,+,- with _M_,_S_,_T_,_D_,_P_,_M_ respectively. const TString& Color(const TString& ); human readable color strings. void FormattedOutput(const vector<Double_t>& , const vector<TString>& , const TString titleVars, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Tools.html:8268,config,configuration,8268,root/html528/TMVA__Tools.html,https://root.cern,https://root.cern/root/html528/TMVA__Tools.html,6,['config'],['configuration']
Modifiability,"ary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfMethodArgs(); virtual const char*GetMangledName() const; virtual const char*TNamed::GetName() const; Int_tGetNargs() const; Int_tGetNargsOpt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetPrototype() const; const char*GetReturnTypeName() const; stringGetReturnTypeNormalizedName() const; const char*GetSignature(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; void*InterfaceMethod() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFunction.html:3146,Inherit,InheritsFrom,3146,root/html534/TFunction.html,https://root.cern,https://root.cern/root/html534/TFunction.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfMethodArgs(); virtual const char*GetMangledName() const; virtual const char*TNamed::GetName() const; Int_tGetNargs() const; Int_tGetNargsOpt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetPrototype() const; const char*GetReturnTypeName() const; stringGetReturnTypeNormalizedName() const; const char*GetSignature(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; void*InterfaceMethod() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid(); Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFunct",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFunction.html:3146,Inherit,InheritsFrom,3146,root/html602/TFunction.html,https://root.cern,https://root.cern/root/html602/TFunction.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void Activate ();  Static method setting TGX11TTF as the acting gVirtualX. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGX11; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualX; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualX *& Instance ();  Returns gVirtualX global. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Tur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGX11TTF.html:43920,inherit,inherited,43920,doc/master/classTGX11TTF.html,https://root.cern,https://root.cern/doc/master/classTGX11TTF.html,2,['inherit'],['inherited']
Modifiability,"ary2p, Int_t npar2p, Double_t *coef2p, Double_t &sdev2p);  To fit a parabola to npar2p points. ;  ; virtual void mnpint (Double_t &pexti, Int_t i, Double_t &pinti);  Calculates the internal parameter value PINTI. ;  ; virtual void mnplot (Double_t *xpt, Double_t *ypt, char *chpt, Int_t nxypt, Int_t npagwd, Int_t npagln);  Plots points in array xypt onto one page with labelled axes. ;  ; virtual void mnpout (Int_t iuext, TString &chnam, Double_t &val, Double_t &err, Double_t &xlolim, Double_t &xuplim, Int_t &iuint) const;  Provides the user with information concerning the current status. ;  ; virtual void mnprin (Int_t inkode, Double_t fval);  Prints the values of the parameters at the time of the call. ;  ; virtual void mnpsdf ();  Calculates the eigenvalues of v to see if positive-def. ;  ; virtual void mnrazz (Double_t ynew, Double_t *pnew, Double_t *y, Int_t &jh, Int_t &jl);  Called only by MNSIMP (and MNIMPR) to add a new point. ;  ; virtual void mnrn15 (Double_t &val, Int_t &inseed);  This is a super-portable random number generator. ;  ; virtual void mnrset (Int_t iopt);  Resets function value and errors to UNDEFINED. ;  ; virtual void mnsave ();  Writes current parameter values and step sizes onto file ISYSSA. ;  ; virtual void mnscan ();  Scans the values of FCN as a function of one parameter. ;  ; virtual void mnseek ();  Performs a rough (but global) minimization by monte carlo search. ;  ; virtual void mnset ();  Interprets the commands that start with SET and SHOW. ;  ; virtual void mnsimp ();  Minimization using the simplex method of Nelder and Mead. ;  ; virtual void mnstat (Double_t &fmin, Double_t &fedm, Double_t &errdef, Int_t &npari, Int_t &nparx, Int_t &istat);  Returns concerning the current status of the minimization. ;  ; virtual void mntiny (Double_t epsp1, Double_t &epsbak);  To find the machine precision. ;  ; Bool_t mnunpt (TString &cfname);  Returns .TRUE. ;  ; virtual void mnvert (Double_t *a, Int_t l, Int_t m, Int_t n, Int_t &ifail);  In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:21666,portab,portable,21666,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,2,['portab'],['portable']
Modifiability,"ary::ESTLTypeTDictionary::kMultiset; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TDictionary::ESTLTypeTDictionary::kNone; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TDictionary::ESTLTypeTDictionary::kSet; static TObject::(anonymous)TObject::kSingleKey; static TDictionary::ESTLTypeTDictionary::kUnorderedMap; static TDictionary::ESTLTypeTDictionary::kUnorderedMultimap; static TDictionary::ESTLTypeTDictionary::kUnorderedMultiset; static TDictionary::ESTLTypeTDictionary::kUnorderedSet; static TDictionary::ESTLTypeTDictionary::kVector; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. DataMemberInfo_t*fInfo!pointer to CINT data member info. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGlobal(DataMemberInfo_t* info = 0); Default TGlobal ctor. TGlobal(const TGlobal& ); Copy constructor. TGlobal & operator=(const TGlobal& ); Assignment operator. ~TGlobal(); TGlobal dtor deletes adopted CINT DataMemberInfo object. void * GetAddress() const; Return address of global. Int_t GetArrayDim() const; Return number of array dimensions. TDictionary::DeclId_t GetDeclId() const. Int_t GetMaxIndex(Int_t dim) const; Return maximum index for array dimension ""dim"". const char * GetTypeName() const; Get type of global variable, e,g.: ""class TDirectory*"" -> ""TDirectory"".; Result needs to be used or copied immediately. const char * GetFullTypeName() const; Get full type description of global variable, e,g.: ""class TDirectory*"". Bool_t IsValid(); Return true if this global object is pointing to a currently; loaded global. If a global is unloaded after the TGlobal; is created, the TGlobal will be set to be invalid. Long_t Property() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGlobal.html:7570,Inherit,Inheritance,7570,root/html604/TGlobal.html,https://root.cern,https://root.cern/root/html604/TGlobal.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ary::ESTLTypeTDictionary::kUnorderedMap; static TDictionary::ESTLTypeTDictionary::kUnorderedMultimap; static TDictionary::ESTLTypeTDictionary::kUnorderedMultiset; static TDictionary::ESTLTypeTDictionary::kUnorderedSet; static TDictionary::ESTLTypeTDictionary::kVector; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TypedefInfo_t*fInfo!pointer to CINT typedef info; Long_tfPropertyThe property information for the (potential) underlying class; Int_tfSizesize of type; TStringfTrueNameQualified name of the (potential) underlying class, e.g. ""MyClass*const*""; EDataTypefTypetype id; Int_tfTypeNameIdxStart of class name part of the (potential) underlying class in fTrueName; Int_tfTypeNameLenStrlen of class name part of the (potential) underlying class in fTrueName; static TDataType*fgBuiltins[23]Array of builtins. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataType(TypedefInfo_t* info = 0); Default TDataType ctor. TDataTypes are constructed in TROOT via; a call to TCling::UpdateListOfTypes(). TDataType(const char* typenam); Constructor for basic data types, like ""char"", ""unsigned char"", etc. TDataType(const TDataType& ); copy constructor. TDataType& operator=(const TDataType& ); assignement operator. ~TDataType(); TDataType dtor deletes adopted CINT TypedefInfo object. const char * GetTypeName(EDataType type); Return the name of the type. TString GetTypeName(); Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"".; Result needs to be used or copied immediately. const char * GetFullTypeName() const; Get full type description of typedef, e,g.: ""class TDirectory*"". EDataType GetType(const type_info& typeinfo); Set type id depending on name. const char * AsString(void* buf) const; Return string containing value in buffer formatted according to; the basic data type. The resul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TDataType.html:8139,Inherit,Inheritance,8139,root/html604/TDataType.html,https://root.cern,https://root.cern/root/html604/TDataType.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ary::GetAttributeMap() const; TDataMember*GetDataMember() const; const char*GetDefault() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; TFunction*GetMethod() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TList*GetOptions() const; virtual const char*TNamed::GetTitle() const; const char*GetTypeName() const; stringGetTypeNormalizedName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMethodArg.html:3074,Inherit,InheritsFrom,3074,root/html534/TMethodArg.html,https://root.cern,https://root.cern/root/html534/TMethodArg.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ary::GetAttributeMap() const; TDataMember*GetDataMember() const; const char*GetDefault() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; TFunction*GetMethod() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TList*GetOptions() const; virtual const char*TNamed::GetTitle() const; const char*GetTypeName() const; stringGetTypeNormalizedName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMethodArg.html:3013,Inherit,InheritsFrom,3013,root/html602/TMethodArg.html,https://root.cern,https://root.cern/root/html602/TMethodArg.html,2,['Inherit'],['InheritsFrom']
Modifiability,"arySearchTreeNode * > *events);  recursively walk through the daughter nodes and add up all weights of events that lie within the given volume ;  . Private Attributes; Bool_t fCanNormalize;  the tree can be normalised ;  ; UInt_t fCurrentDepth;  internal variable, counting the depth of the tree during insertion ;  ; std::vector< Float_t > fMax [2];  RMS for signal and background for each variable. ;  ; std::vector< Float_t > fMeans [2];  mean for signal and background for each variable ;  ; std::vector< Float_t > fMin [2];  RMS for signal and background for each variable. ;  ; Double_t fNEventsW [2];  Number of events per class, taking into account event weights. ;  ; std::vector< std::pair< Double_t, const TMVA::Event * > > fNormalizeTreeTable;  ; UInt_t fPeriod;  periode (number of event variables) ;  ; std::vector< Float_t > fRMS [2];  RMS for signal and background for each variable. ;  ; Bool_t fStatisticsIsValid;  flag if last stat calculation is still valid, set to false if new node is insert ;  ; std::vector< Double_t > fSum [2];  Sum for signal and background for each variable. ;  ; Double_t fSumOfWeights;  Total number of events (weighted) counted during filling should be the same as fNEventsW[0]+fNEventsW[1]. ;  ; std::vector< Double_t > fSumSq [2];  Squared Sum for signal and background for each variable. ;  . Additional Inherited Members;  Protected Member Functions inherited from TMVA::BinaryTree; void DeleteNode (Node *);  protected, recursive, function used by the class destructor and when Pruning ;  ; MsgLogger & Log () const;  ;  Protected Attributes inherited from TMVA::BinaryTree; UInt_t fDepth;  maximal depth in tree reached ;  ; UInt_t fNNodes;  total number of nodes in the tree (counted) ;  ; Node * fRoot;  the root node of the tree the tree only has it's root node, the ""daughters"" are taken care of by the ""node"" properties of the ""root"" ;  . #include <TMVA/BinarySearchTree.h>. Inheritance diagram for TMVA::BinarySearchTree:. This browser is not",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html:6755,variab,variable,6755,doc/master/classTMVA_1_1BinarySearchTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html,1,['variab'],['variable']
Modifiability,"as = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static Int_t _evalErrorCount = 0;  ; static std::map< const RooAbsArg *, std::pair< std::string, std::list< EvalError > > > _evalErrorList;  ; static ErrorLoggingMode _evalErrorMode = RooAbsReal::PrintErrors;  ; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAddPdf.h>. Inheritance diagram for RooAddPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:78310,inherit,inherited,78310,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,1,['inherit'],['inherited']
Modifiability,"as \(\Gamma\) or \(2\gamma\)). ; Definition at line 22 of file RooVoigtian.h. Public Member Functions;  RooVoigtian ();  ;  RooVoigtian (const char *name, const char *title, RooAbsReal &_x, RooAbsReal &_mean, RooAbsReal &_width, RooAbsReal &_sigma, bool doFast=false);  Construct a RooVoigtian PDF, which represents the convolution of a Breit-Wigner with a Gaussian. ;  ;  RooVoigtian (const RooVoigtian &other, const char *name=nullptr);  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void selectDefaultAlgorithm ();  Disable the fast evaluation of the complex error function using look-up tables (default is the ""slow"" CERNlib algorithm). ;  ; void selectFastAlgorithm ();  Enable the fast evaluation of the complex error function using look-up tables (default is the ""slow"" CERNlib algorithm). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extend",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVoigtian.html:1984,inherit,inherited,1984,doc/master/classRooVoigtian.html,https://root.cern,https://root.cern/doc/master/classRooVoigtian.html,1,['inherit'],['inherited']
Modifiability,"as been changed; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*TGTextLBEntry::fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGGC*TGTextLBEntry::fgDefaultGC; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLineLBEntry(const TGWindow* p = 0, Int_t id = -1, const char* str = 0, UInt_t w = 0, Style_t s = 0, UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); Create the line style listbox entry. ~TGLineLBEntry(); Delete line style listbox entry. void Update(TGLBEntry* e); Update line style listbox entry. void SetLineStyle(Style_t style); Set the line style corresponding to the TPad line styles. void SetLineWidth(Int_t width); Set or change line witdh in an entry. void DrawCopy(Handle_t id, Int_t x, Int_t y); Draw copy on window/pixmap. void DoRedraw(); Redraw line style listbox entry. TGTextLBEntry & operator=(const TGLineLBEntry& ). TGDimension GetDefaultSize() const; { return TGDimension(fTWidth, fTHeight+1); }. TGLineLBEntry(const TGLineLBEntry& ). Int_t GetLineWidth() const; { return fLineWidth; }. Style_t GetLineStyle() const; { return fLineStyle; }. TGGC * GetLineGC() const; { return fLineGC; }. » Author: Fons Rademak",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLineLBEntry.html:18702,Inherit,Inheritance,18702,root/html532/TGLineLBEntry.html,https://root.cern,https://root.cern/root/html532/TGLineLBEntry.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"as intermediate step to converge into local minimas ;  ; IFitterTarget * fConvergerFitter;  intermediate fitter ;  ; TString fFitMethod;  estimator optimisation method ;  ; FitterBase * fFitter;  the fitter used in the training ;  ; TFormula * fFormula;  the discrimination function ;  ; TString fFormulaStringP;  string with function ;  ; TString fFormulaStringT;  string with function ;  ; UInt_t fNPars;  number of parameters ;  ; Int_t fOutputDimensions;  number of output values ;  ; std::vector< Interval * > fParRange;  ranges of parameters ;  ; TString fParRangeStringP;  string with ranges of parameters ;  ; TString fParRangeStringT;  string with ranges of parameters ;  ; Double_t fSumOfWeights;  sum of weights ;  ; Double_t fSumOfWeightsBkg;  sum of weights (background) ;  ; Double_t fSumOfWeightsSig;  sum of weights (signal) ;  . Additional Inherited Members;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TMVA::MethodBase; Types::EAnalysisType fAnalysisType;  ; UInt_t fBackgroundClass;  ; bool fExitFromTraining = false;  ; std::vector< TString > * fInputVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFDA.html:28566,inherit,inherited,28566,doc/master/classTMVA_1_1MethodFDA.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFDA.html,2,['inherit'],['inherited']
Modifiability,"as is divided in nx by ny equal divisions (pads).; xmargin is the space along x between pads in percent of canvas.; ymargin is the space along y between pads in percent of canvas.; (see Note3 below for the special case xmargin <=0 and ymargin <=0); color is the color of the new pads. If 0, color is the canvas color.; Pads are automatically named canvasname_n where n is the division number; starting from top left pad.; Example if canvasname=c1 , nx=2, ny=3. . . .; . . .; . . .; . c1_1 . c1_2 .; . . .; . . .; . . . . . .; . . .; . . .; . c1_3 . c1_4 .; . . .; . . .; . . . . . .; . . .; . . .; . c1_5 . c1_6 .; . . .; . . . Once a pad is divided into subpads, one can set the current pad; to a subpad with a given division number as illustrated above; with TPad::cd(subpad_number).; For example, to set the current pad to c1_4, one can do:; c1->cd(4). Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad; to c1 itself.; Note2: after a statement like c1.cd(6), the global variable gPad; points to the current pad. One can use gPad to set attributes; of the current pad.; Note3: in case xmargin <=0 and ymargin <= 0, there is no space; between pads. The current pad margins are recomputed to; optimize the layout. void DivideSquare(Int_t n, Float_t xmargin = 0.01, Float_t ymargin = 0.01, Int_t color = 0); ""n"" is the total number of sub-pads. The number of sub-pads along the X; and Y axis are computed according to the square root of n. void Draw(Option_t* option = """"); Draw Pad in Current pad (re-parent pad if necessary). void DrawClassObject(const TObject* obj, Option_t* option = """"); Draw class inheritance tree of the class to which obj belongs.; If a class B inherits from a class A, description of B is drawn; on the right side of description of A.; Member functions overridden by B are shown in class A with a blue line; crossing-out the corresponding member function.; The following picture is the class inheritance tree of class TPaveLabel:. /*; ; */. void DrawCrosshair(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPad.html:38409,variab,variable,38409,root/html534/TPad.html,https://root.cern,https://root.cern/root/html534/TPad.html,6,['variab'],['variable']
Modifiability,"as is divided in nx by ny equal divisions (pads).; xmargin is the space along x between pads in percent of canvas.; ymargin is the space along y between pads in percent of canvas.; (see Note3 below for the special case xmargin <=0 and ymargin <=0); color is the color of the new pads. If 0, color is the canvas color.; Pads are automatically named canvasname_n where n is the division number; starting from top left pad.; Example if canvasname=c1 , nx=2, ny=3. . . .; . . .; . . .; . c1_1 . c1_2 .; . . .; . . .; . . . . . .; . . .; . . .; . c1_3 . c1_4 .; . . .; . . .; . . . . . .; . . .; . . .; . c1_5 . c1_6 .; . . .; . . . Once a pad is divided into subpads, one can set the current pad; to a subpad with a given division number as illustrated above; with TPad::cd(subpad_number).; For example, to set the current pad to c1_4, one can do:; c1->cd(4). Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad; to c1 itself.; Note2: after a statement like c1.cd(6), the global variable gPad; points to the current pad. One can use gPad to set attributes; of the current pad.; Note3: in case xmargin <=0 and ymargin <= 0, there is no space; between pads. The current pad margins are recomputed to; optimize the layout. void Draw(Option_t* option = """"); Draw Pad in Current pad (re-parent pad if necessary). void DrawClassObject(const TObject* obj, Option_t* option = """"); Draw class inheritance tree of the class to which obj belongs.; If a class B inherits from a class A, description of B is drawn; on the right side of description of A.; Member functions overridden by B are shown in class A with a blue line; crossing-out the corresponding member function.; The following picture is the class inheritance tree of class TPaveLabel:. /*; ; */. void DrawCrosshair(); Function called to draw a crosshair in the canvas. Example:; Root > TFile f(""hsimple.root"");; Root > hpxpy.Draw();; Root > c1.SetCrosshair();; When moving the mouse in the canvas, a crosshair is drawn. if the canvas fCross",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPad.html:37001,variab,variable,37001,root/html528/TPad.html,https://root.cern,https://root.cern/root/html528/TPad.html,4,['variab'],['variable']
Modifiability,"as of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; RooRealProxy fCoef;  ; bool fExpectedEventsMode = false;  ; RooRealProxy fExpPdf;  ; RooRealProxy fFunc;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPdfWrapper.html:55504,inherit,inherited,55504,doc/master/classPdfWrapper.html,https://root.cern,https://root.cern/doc/master/classPdfWrapper.html,4,['inherit'],['inherited']
Modifiability,"as opened yet create a default canvas; 1367 if (!gPad) {; 1368 gROOT->MakeDefCanvas();; 1369 }; 1370 ; 1371 // pad cannot be in itself and it can only be in one other pad at a time; 1372 if (!fPrimitives) fPrimitives = new TList;; 1373 if (gPad != this) {; 1374 if (fMother && !ROOT::Detail::HasBeenDeleted(fMother)); 1375 fMother->Remove(this, kFALSE);; 1376 TPad *oldMother = fMother;; 1377 fCanvas = gPad->GetCanvas();; 1378 //; 1379 fMother = (TPad*)gPad;; 1380 if (oldMother != fMother || fPixmapID == -1) ResizePad();; 1381 }; 1382 ; 1383 if (fCanvas && fCanvas->IsWeb()) {; 1384 Modified();; 1385 fCanvas->UpdateAsync();; 1386 } else {; 1387 Paint();; 1388 }; 1389 ; 1390 if (gPad->IsRetained() && gPad != this && fMother); 1391 fMother->Add(this, option);; 1392}; 1393 ; 1394////////////////////////////////////////////////////////////////////////////////; 1395/// Draw class inheritance tree of the class to which obj belongs.; 1396///; 1397/// If a class B inherits from a class A, description of B is drawn; 1398/// on the right side of description of A.; 1399///; 1400/// Member functions overridden by B are shown in class A with a blue line; 1401/// crossing-out the corresponding member function.; 1402 ; 1403void TPad::DrawClassObject(const TObject *classobj, Option_t *option); 1404{; 1405 if (!classobj) return;; 1406 char dname[256];; 1407 const Int_t kMAXLEVELS = 10;; 1408 TClass *clevel[kMAXLEVELS], *cl, *cll;; 1409 TBaseClass *base, *cinherit;; 1410 TText *ptext = nullptr;; 1411 TString opt=option;; 1412 Double_t x,y,dy,y1,v1,v2,dv;; 1413 Int_t nd,nf,nc,nkd,nkf,i,j;; 1414 TPaveText *pt;; 1415 Int_t maxlev = 4;; 1416 if (opt.Contains(""2"")) maxlev = 2;; 1417 if (opt.Contains(""3"")) maxlev = 3;; 1418 if (opt.Contains(""5"")) maxlev = 5;; 1419 if (opt.Contains(""6"")) maxlev = 6;; 1420 if (opt.Contains(""7"")) maxlev = 7;; 1421 ; 1422 // Clear and Set Pad range; 1423 Double_t xpad = 20.5;; 1424 Double_t ypad = 27.5;; 1425 Clear();; 1426 Range(0,0,xpad,ypad);; 1427 ; 1428 // Fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:43803,inherit,inherits,43803,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,as supplied in the constructor. ;  ; RooObjCacheManager _intCacheMgr;  ! Manager of cache with integrals ;  ; RooArgSet _ownedComps;  ! Owned components ;  ; RooListProxy _pdfList;  List of component PDFs. ;  ; RooObjCacheManager _projCacheMgr;  ! Manager of cache with coefficient projections and transformations ;  ; RooSetProxy _refCoefNorm;  ! Reference observable set for coefficient interpretation ;  ; TNamed * _refCoefRangeName = nullptr;  ! Reference range name for coefficient interpretation ;  ; RooArgList * _snormList {nullptr};  ! List of supplemental normalization factors ;  ;  Protected Attributes inherited from RooResolutionModel; RooFormulaVar * _basis = nullptr;  Basis function convolved with this resolution model. ;  ; Int_t _basisCode;  Identifier code for selected basis function. ;  ; bool _ownBasis;  Flag indicating ownership of _basis. ;  ; RooTemplateProxy< RooAbsRealLValue > x;  Dependent/convolution variable. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:72797,inherit,inherited,72797,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['inherit'],['inherited']
Modifiability,"as::fPadDblClickedSignal. protected . ! signal emitted when simple mouse click performed on the pad ; Definition at line 114 of file TWebCanvas.h. ◆ fPadsStatus. std::map<TPad*, PadStatus> TWebCanvas::fPadsStatus. protected . ! map of pads in canvas and their status flags ; Definition at line 86 of file TWebCanvas.h. ◆ fPaletteDelivery. Int_t TWebCanvas::fPaletteDelivery {1}. protected . ! colors palette delivery 0:never, 1:once, 2:always, 3:per subpad ; Definition at line 96 of file TWebCanvas.h. ◆ fPrimitivesMerge. Int_t TWebCanvas::fPrimitivesMerge {100}. protected . ! number of PS primitives, which will be merged together ; Definition at line 97 of file TWebCanvas.h. ◆ fProcessingData. Bool_t TWebCanvas::fProcessingData {kFALSE}. protected . ! flag used to prevent blocking methods when process data is invoked ; Definition at line 101 of file TWebCanvas.h. ◆ fReadOnly. Bool_t TWebCanvas::fReadOnly {kFALSE}. protected . !< configured display ; ! in read-only mode canvas cannot be changed from client side ; Definition at line 90 of file TWebCanvas.h. ◆ fStyleDelivery. Int_t TWebCanvas::fStyleDelivery {0}. protected . ! gStyle delivery to clients: 0:never, 1:once, 2:always ; Definition at line 95 of file TWebCanvas.h. ◆ fStyleHash. UInt_t TWebCanvas::fStyleHash {0}. protected . ! last hash of gStyle ; Definition at line 104 of file TWebCanvas.h. ◆ fStyleVersion. Long64_t TWebCanvas::fStyleVersion {0}. protected . ! current gStyle object version, checked every time when new snapshot created ; Definition at line 103 of file TWebCanvas.h. ◆ fTF1UseSave. Int_t TWebCanvas::fTF1UseSave {1}. protected . ! use save buffer for TF1/TF2, 0:off, 1:prefer, 2:force ; Definition at line 107 of file TWebCanvas.h. ◆ fTimer. TWebCanvasTimer* TWebCanvas::fTimer {nullptr}. protected . ! timer to submit control messages ; Definition at line 84 of file TWebCanvas.h. ◆ fUpdatedSignal. UpdatedSignal_t TWebCanvas::fUpdatedSignal. protected . ! signal emitted when canvas updated or state is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebCanvas.html:43464,config,configured,43464,doc/master/classTWebCanvas.html,https://root.cern,https://root.cern/doc/master/classTWebCanvas.html,1,['config'],['configured']
Modifiability,"as; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TEventList*fElistevent list; TList*fEventListsa list of EventLists; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDrawEventList(); Destructor. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the eventlist with given values. void SlaveTerminate(void); See TProofDraw::SlaveTerminate(). void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawEventList(); {}. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-04 16:54; This page has been automatically generated. For comments or suggestions regarding the documen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawEventList.html:7695,variab,variable,7695,root/html534/TProofDrawEventList.html,https://root.cern,https://root.cern/root/html534/TProofDrawEventList.html,2,['variab'],['variable']
Modifiability,"as; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<TGeoPatternFinder::ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternReflected; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternSpacedOut. private:. Double_tfTxztangent of alpha xz; Double_tfTyztangent of alpha yz. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternParaZ(); Default constructor. TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. TGeoPatternParaZ(const TGeoPatternParaZ& pf); copy constructor. TGeoPatternParaZ& operator=(const TGeoPatternParaZ& ); assignment operator. ~TGeoPatternParaZ(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); get the node division containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternParaZ.html:9021,Inherit,Inheritance,9021,root/html602/TGeoPatternParaZ.html,https://root.cern,https://root.cern/root/html602/TGeoPatternParaZ.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"as; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<TGeoPatternFinder::ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternReflected; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternSpacedOut. private:. Double_tfTxztangent of alpha xz; Double_tfTyztangent of alpha yz. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternTrapZ(); Default constructor. TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. TGeoPatternTrapZ(const TGeoPatternTrapZ& pf); copy constructor. TGeoPatternTrapZ& operator=(const TGeoPatternTrapZ& ); assignment operator. ~TGeoPatternTrapZ(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); get the node division containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternTrapZ.html:9069,Inherit,Inheritance,9069,root/html602/TGeoPatternTrapZ.html,https://root.cern,https://root.cern/root/html602/TGeoPatternTrapZ.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"as; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*fPoints; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the scatter plot with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawListOfPolyMarkers3D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-03 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofDrawListOfPolyMarkers3D.html:8649,Inherit,Inheritance,8649,root/html604/TProofDrawListOfPolyMarkers3D.html,https://root.cern,https://root.cern/root/html604/TProofDrawListOfPolyMarkers3D.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"as; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*fPoints; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the scatter plot with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawListOfPolyMarkers3D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawListOfPolyMarkers3D.html:8649,Inherit,Inheritance,8649,root/html602/TProofDrawListOfPolyMarkers3D.html,https://root.cern,https://root.cern/root/html602/TProofDrawListOfPolyMarkers3D.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"asConverged (double testError);  has this training converged already? ;  ; double learningRate () const;  get the learning rate ;  ; size_t maxConvergenceCount () const;  returns the max convergence count so far ;  ; size_t minError () const;  returns the smallest error so far ;  ; MinimizerType minimizerType () const;  which minimizer shall be used (e.g. SGD) ;  ; double momentum () const;  get the momentum (e.g. for SGD) ;  ; void pads (int numPads);  preparation for monitoring ;  ; void plot (std::string histoName, std::string options, int pad, EColor color);  for monitoring ;  ; EnumRegularization regularization () const;  some regularization of the DNN is turned on? ;  ; int repetitions () const;  how many steps have to be gone until the batch is changed ;  ; template<typename Iterator > ; void setDropOut (Iterator begin, Iterator end, size_t _dropRepetitions);  set the drop-out configuration (layer-wise) ;  ; void setMonitoring (std::shared_ptr< Monitoring > ptrMonitoring);  prepared for monitoring ;  ; virtual void setProgressLimits (double minProgress=0, double maxProgress=100);  ; virtual void startTestCycle ();  callback for monitoring and loggging ;  ; virtual void startTrainCycle ();  ; virtual void startTraining ();  ; virtual void testIteration ();  callback for monitoring and loggging ;  ; size_t testRepetitions () const;  how often is the test data tested ;  ; virtual void testSample (double, double, double, double);  virtual function to be used for monitoring (callback) ;  ; bool useMultithreading () const;  is multithreading turned on? ;  . Public Attributes; size_t count_dE;  ; size_t count_E;  ; size_t count_mb_dE;  ; size_t count_mb_E;  ; double fLearningRate;  ; MinimizerType fMinimizerType;  ; double fMomentum;  ; int fRepetitions;  ; size_t m_batchSize;  mini-batch size ;  ; size_t m_convergenceCount;  ; size_t m_convergenceSteps;  number of steps without improvement to consider the DNN to have converged ;  ; std::vector< double > m_dropOut;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Settings.html:3084,config,configuration,3084,doc/master/classTMVA_1_1DNN_1_1Settings.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Settings.html,1,['config'],['configuration']
Modifiability,"asUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TMVA::MethodBase::EWeightFileTypekROOT; static TObject::(anonymous)TObject::kSingleKey; static TMVA::MethodBase::EWeightFileTypekTEXT; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::Types::EAnalysisTypefAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tfBackgroundClassindex of the Background-class; vector<TString>*fInputVarsvector of input variables used in MVA; vector<Float_t>*fMulticlassReturnValholds the return-values for the multiclass classification; Int_tfNbinsnumber of bins in input variable histograms; Int_tfNbinsHnumber of bins in evaluation histograms; Int_tfNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*fRegressionReturnValholds the return-values for the regression; UInt_tfSignalClassindex of the Signal-class. private:. TDirectory*fBaseDirbase directory for the instance, needed to know where to jump back from localDir; Bool_tfConstructedFromWeightFileis it obtained from weight file?; TMVA::MethodBase::ECutOrientationfCutOrientation+1 if Sig>Bkg, -1 otherwise; TMVA::DataSetInfo&fDataSetInfo! the data set information (sometimes needed); TMVA::PDF*fDefaultPDFdefault PDF definitions; Bool_tfDisableWriting! set to true in order to suppress writing to XML; TH1*fEffSefficiency histogram for rootfinder; vector<const vector<TMVA::Event*>*>fEventCollectionsif the method needs the complete event-collection, the transformed event coll. ist stored here.; TStringfFi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBase.html:17177,variab,variables,17177,root/html602/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBase.html,8,['variab'],"['variable', 'variables']"
Modifiability,"ase &&other);  ; Bool_t PrintBin (Long64_t idx, Int_t *coord, Option_t *options) const;  Print one bin. ;  ; TObject * ProjectionAny (Int_t ndim, const Int_t *dim, Bool_t wantNDim, Option_t *option="""") const;  Project all bins into a ndim-dimensional THn / THnSparse (whatever *this is) or if (ndim < 4 and !wantNDim) a TH1/2/3 histogram, keeping only axes in dim (specifying ndim dimensions). ;  ; THnBase * RebinBase (const Int_t *group) const;  Combine the content of ""group"" neighboring bins for each dimension into a new bin and return the resulting THnBase. ;  ; THnBase * RebinBase (Int_t group) const;  Combine the content of ""group"" neighboring bins into a new bin and return the resulting THnBase. ;  ; virtual void Reserve (Long64_t);  ; void ResetBase (Option_t *option="""");  Clear the histogram. ;  ; virtual void SetFilledBins (Long64_t);  ; void UpdateXStat (const Double_t *x, Double_t w=1.);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< Int_t > fCoordBuf;  ; TNDArrayT< Double_t > fSumw2;  ;  Protected Attributes inherited from THnBase; TObjArray fAxes;  Axes of the histogram. ;  ; TObjArray fBrowsables;  ! Browser-helpers for each axis ;  ; Double_t fEntries;  Number of entries, spread over chunks. ;  ; std::vector< Double_t > fIntegral;  ! vector with bin weight sums ;  ; enum THnBase:: { ... }  fIntegralStatus;  ! status of integral ;  ; Int_t fNdimensions;  Number of dimensions. ;  ; Double_t fTsumw;  Total sum of weights. ;  ; Double_t fTsumw2;  Total sum of weights squared; -1 if no errors are calculated. ;  ; TArrayD fTsumwx;  Total sum of weight*X for each dimension. ;  ; TArrayD fTsumwx2;  Total sum of weight*X*X for each dimension. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHn.html:22506,inherit,inherited,22506,doc/master/classTHn.html,https://root.cern,https://root.cern/doc/master/classTHn.html,1,['inherit'],['inherited']
Modifiability,"ase &&other);  ; Bool_t PrintBin (Long64_t idx, Int_t *coord, Option_t *options) const;  Print one bin. ;  ; TObject * ProjectionAny (Int_t ndim, const Int_t *dim, Bool_t wantNDim, Option_t *option="""") const;  Project all bins into a ndim-dimensional THn / THnSparse (whatever *this is) or if (ndim < 4 and !wantNDim) a TH1/2/3 histogram, keeping only axes in dim (specifying ndim dimensions). ;  ; THnBase * RebinBase (const Int_t *group) const;  Combine the content of ""group"" neighboring bins for each dimension into a new bin and return the resulting THnBase. ;  ; THnBase * RebinBase (Int_t group) const;  Combine the content of ""group"" neighboring bins into a new bin and return the resulting THnBase. ;  ; virtual void Reserve (Long64_t);  ; void ResetBase (Option_t *option="""");  Clear the histogram. ;  ; virtual void SetFilledBins (Long64_t);  ; void UpdateXStat (const Double_t *x, Double_t w=1.);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static THnBase * CreateHnAny (const char *name, const char *title, const TH1 *h1, Bool_t sparse, Int_t chunkSize=1024 *16);  Create a THn / THnSparse object from a histogram deriving from TH1. ;  ; static THnBase * CreateHnAny (const char *name, const char *title, const THnBase *hn, Bool_t sparse, Int_t chunkSize=1024 *16);  Create a THnSparse (if ""sparse"") or THn from ""hn"", possibly converting THn <-> THnSparse. ;  . Protected Attributes; TObjArray fAxes;  Axes of the histogram. ;  ; TObjArray fBrowsables;  ! Browser-helpers for each axis ;  ; Double_t fEntries;  Number of entries, spread over chunks. ;  ; std::vector< Double_t > fIntegral;  ! vector with bin weight sums ;  ; enum THnBase:: { ... }  fIntegralStatus;  ! status of integral ;  ; Int_t fNdimensions;  Number of dimensions. ;  ; Double_t fTsumw;  Total sum of weights. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnBase.html:18525,inherit,inherited,18525,doc/master/classTHnBase.html,https://root.cern,https://root.cern/doc/master/classTHnBase.html,1,['inherit'],['inherited']
Modifiability,"ase &&other);  ; Bool_t PrintBin (Long64_t idx, Int_t *coord, Option_t *options) const;  Print one bin. ;  ; TObject * ProjectionAny (Int_t ndim, const Int_t *dim, Bool_t wantNDim, Option_t *option="""") const;  Project all bins into a ndim-dimensional THn / THnSparse (whatever *this is) or if (ndim < 4 and !wantNDim) a TH1/2/3 histogram, keeping only axes in dim (specifying ndim dimensions). ;  ; THnBase * RebinBase (const Int_t *group) const;  Combine the content of ""group"" neighboring bins for each dimension into a new bin and return the resulting THnBase. ;  ; THnBase * RebinBase (Int_t group) const;  Combine the content of ""group"" neighboring bins into a new bin and return the resulting THnBase. ;  ; virtual void Reserve (Long64_t);  ; void ResetBase (Option_t *option="""");  Clear the histogram. ;  ; virtual void SetFilledBins (Long64_t);  ; void UpdateXStat (const Double_t *x, Double_t w=1.);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from THnBase; static THnBase * CreateHnAny (const char *name, const char *title, const TH1 *h1, Bool_t sparse, Int_t chunkSize=1024 *16);  Create a THn / THnSparse object from a histogram deriving from TH1. ;  ; static THnBase * CreateHnAny (const char *name, const char *title, const THnBase *hn, Bool_t sparse, Int_t chunkSize=1024 *16);  Create a THnSparse (if ""sparse"") or THn from ""hn"", possibly converting THn <-> THnSparse. ;  . #include <THn.h>. Inheritance diagram for THnT< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ THnT() [1/3]. template<typename T > . THnT< T >::THnT ; (; ). inline . Definition at line 221 of file THn.h. ◆ THnT() [2/3]. template<typename T > . THnT< T >::THnT ; (; const char * ; name, . const char ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnT.html:23825,inherit,inherited,23825,doc/master/classTHnT.html,https://root.cern,https://root.cern/doc/master/classTHnT.html,1,['inherit'],['inherited']
Modifiability,"ase *sepType, UInt_t cls);  Parameters: ;  ; virtual ~PDEFoamDecisionTree ();  Destructor deletes fSepType. ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::PDEFoamDiscriminant;  PDEFoamDiscriminant ();  Default constructor for streamer, user should not use it. ;  ;  PDEFoamDiscriminant (const TString &, UInt_t);  ; virtual ~PDEFoamDiscriminant ();  ; virtual void FillFoamCells (const Event *ev, Float_t wt);  This function fills an event into the discriminant PDEFoam. ;  ; virtual void Finalize ();  Calc discriminator and its error for every cell and save it to the cell. ;  ; virtual TH2D * Project2 (Int_t, Int_t, ECellValue, PDEFoamKernelBase *, UInt_t);  Project foam variable idim1 and variable idim2 to histogram. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::PDEFoam;  PDEFoam ();  Default constructor for streamer, user should not use it. ;  ;  PDEFoam (const TString &);  User constructor, to be employed by the user. ;  ; virtual ~PDEFoam ();  Default destructor. ;  ; void AddVariableName (const char *s);  ; void AddVariableName (TObjString *s);  ; void CheckAll (Int_t);  User utility, miscellaneous and debug. ;  ; void Create ();  Basic initialization of FOAM invoked by the user. ;  ; void DeleteBinarySearchTree ();  Delete the foam's density estimator, which contains the binary search tree. ;  ; TH1D * Draw1Dim (ECellValue cell_value, Int_t nbin, PDEFoamKernelBase *kernel=nullptr);  Draws 1-dimensional foam (= histogram) ;  ; void FillBinarySearchTree (const Event *ev);  Insert event to internal foam's density estimator PDEFoamDensityBase. ;  ; virtual Float_t GetCellValue (const PDEFoamCell *cell, ECellValue cv);  Returns the cell value of 'cell' corresponding to the given option 'cv'. ;  ; virtual std::vector< Float_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamDecisionTree.html:2130,inherit,inherited,2130,doc/master/classTMVA_1_1PDEFoamDecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamDecisionTree.html,1,['inherit'],['inherited']
Modifiability,"ase ROOT classes. ; Monitors objects for deletion and reflects the deletion by reverting the internal pointer to zero. ; When this pointer is zero we know the object has been deleted. This avoids the unsafe TestBit(kNotDeleted) hack. The spied object must have the kMustCleanup bit set otherwise you will get an error. ; Definition at line 30 of file TObjectSpy.h. Public Member Functions;  TObjectSpy (TObject *obj=nullptr, Bool_t fixMustCleanupBit=kTRUE);  Register the object that must be spied. ;  ; virtual ~TObjectSpy ();  Cleanup. ;  ; TObject * GetObject () const;  ; TClass * IsA () const override;  ; void RecursiveRemove (TObject *obj) override;  Sets the object pointer to zero if the object is deleted in the RecursiveRemove() operation. ;  ; void SetObject (TObject *obj, Bool_t fixMustCleanupBit=kTRUE);  Set obj as the spy target. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjectSpy.html:1341,inherit,inherited,1341,doc/master/classTObjectSpy.html,https://root.cern,https://root.cern/doc/master/classTObjectSpy.html,1,['inherit'],['inherited']
Modifiability,"ase class). ;  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContainer.html:10019,inherit,inherited,10019,doc/master/classTRootContainer.html,https://root.cern,https://root.cern/doc/master/classTRootContainer.html,1,['inherit'],['inherited']
Modifiability,"ase of a Boolean the multiplier is either 0 (for false) or 1 (for true). The first command draws fPx for the range between with conditions on fBx and fBy, the second command draws fPx for the same conditions, but adds a weight using the result of the second expression. tree->Draw(""fVertex"",""fVertex>10""). When using arrays in the selection and the expression, the selection is applied to each element of the array.; if (fVertex[0]>10) fVertex[0]; if (fVertex[1]>10) fVertex[1]; if (fVertex[2]>10) fVertex[2]. tree->Draw(""fPx[600]""); tree->Draw(""fPx[600]"",""fNtrack > 600""). When using a specific element for a variable length array the entries with fewer elements are ignored. Thus these two commands are equivalent. tree->Draw(""Nation""). Nation is a char* branch. When drawing a char* it will plot an alphanumeric histogram, of the different value of the string Nation. The axis will have the Nation values. See “Histograms”. tree->Draw(""MyChar +0""). If you want to plot a char* variable as a byte rather than a string, you can use the syntax above. tree->Draw(""fTracks.fTriggerBits""). fTriggerBits is a data member of TTrack of type TBits. Objects of class TBits can be drawn directly. This command will create a 1D histogram from 0 to nbits which is filled for each non-null bit-number. tree->Draw(""fMatrix-Alt$(fClosestDistance,0)""). Alt$(primary,alternate) returns the value of “primary” if it is available for the current iteration; otherwise return the value of “alternate”. Assuming that fClosestDistance is a smaller array than fMatrix. This example will draw fMatrix[i]+fClosestDistance[i] for i less than the size of fClosestDistance, and will draw fMatrix[i]+0 for the other value of i. tree->Draw(""fClosestDistance:Iteration$""). This example draws a 2D plot with, for all entries, fClosestDistance[i]:i for each value of i between 0 and the size of fClosestDistance. Iterations$ is one of four special variables giving some indications of the state of the loops implied by the formula:; E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:605876,variab,variable,605876,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"ase of failure.; Note: This is the overloading made in TXNetFile, If ReadBuffers; is supported by xrootd it will try to gt the whole list from one single; call avoiding the latency of multiple calls. Bool_t WriteBuffer(const char* buffer, Int_t BufferLength); Override TNetFile::WriteBuffer to deal with the xrootd server.; Returns kTRUE in case of errors. void Init(Bool_t create); Initialize the file. Makes sure that the file is really open before; calling TFile::Init. It may block. Bool_t IsOpen() const; Return kTRUE if the file is open, kFALSE otherwise. TFile::EAsyncOpenStatus GetAsyncOpenStatus(); Return status of asynchronous request. Int_t ReOpen(Option_t* mode); Re-open the file (see TNetFile::ReOpen() or TFile::ReOpen(); for more details). void Close(Option_t* opt = """"); Close the file (see TNetFile::Close() or TFile::Close(); for more details). void Flush(); Flushes un-written data. Int_t SysStat(Int_t fd, Long_t* id, Long64_t* size, Long_t* flags, Long_t* modtime); Override TNetFile::SysStat (see parent's method for more details). Int_t SysClose(Int_t fd); Override TNetFile::SysClose (see parent's method for more details). Int_t SysOpen(const char* pathname, Int_t flags, UInt_t mode); Override TNetFile::SysOpen (see parent's method for more details). void SetEnv(); Set the relevant environment variables. void SynchronizeCacheSize(); Synchronize the cache size; Alternative purging policy. void ResetCache(); Reset the cache. Int_t GetBytesToPrefetch() const; Max number of bytes to prefetch. void Print(Option_t* option = """") const; Print the local statistics. TXNetFile(const TXNetFile& ); attempts to Init() for this object only; Methods. TXNetFile& operator=(const TXNetFile& ). TXNetFile(); {}. » Last changed: root/netx:$Id: TXNetFile.h 34444 2010-07-16 02:17:39Z pcanal $ » Last generated: 2010-11-29 16:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TXNetFile.html:28663,variab,variables,28663,root/html528/TXNetFile.html,https://root.cern,https://root.cern/root/html528/TXNetFile.html,1,['variab'],['variables']
Modifiability,"ase of failure.; Note: This is the overloading made in TXNetFile, If ReadBuffers; is supported by xrootd it will try to gt the whole list from one single; call avoiding the latency of multiple calls. Bool_t WriteBuffer(const char* buffer, Int_t BufferLength); Override TNetFile::WriteBuffer to deal with the xrootd server.; Returns kTRUE in case of errors. void Init(Bool_t create); Initialize the file. Makes sure that the file is really open before; calling TFile::Init. It may block. Bool_t IsOpen() const; Return kTRUE if the file is open, kFALSE otherwise. TFile::EAsyncOpenStatus GetAsyncOpenStatus(); Return status of asynchronous request. Int_t ReOpen(Option_t* mode); Re-open the file (see TNetFile::ReOpen() or TFile::ReOpen(); for more details). void Close(Option_t* opt = """"); Close the file (see TNetFile::Close() or TFile::Close(); for more details). void Flush(); Flushes un-written data. Int_t SysStat(Int_t fd, Long_t* id, Long64_t* size, Long_t* flags, Long_t* modtime); Override TNetFile::SysStat (see parent's method for more details). Int_t SysClose(Int_t fd); Override TNetFile::SysClose (see parent's method for more details). Int_t SysOpen(const char* pathname, Int_t flags, UInt_t mode); Override TNetFile::SysOpen (see parent's method for more details). void SetEnv(); Set the relevant environment variables. void SynchronizeCacheSize(); Synchronize the cache size; Alternative purging policy. void ResetCache(); Reset the cache. Int_t GetBytesToPrefetch() const; Max number of bytes to prefetch. void Print(Option_t* option = """") const; Print the local statistics. TXNetFile(const TXNetFile& ); attempts to Init() for this object only; Methods. TXNetFile& operator=(const TXNetFile& ). TXNetFile(); {}. » Last changed: root/netx:$Id: TXNetFile.h 34444 2010-07-16 02:17:39Z pcanal $ » Last generated: 2011-07-04 15:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TXNetFile.html:28917,variab,variables,28917,root/html530/TXNetFile.html,https://root.cern,https://root.cern/root/html530/TXNetFile.html,1,['variab'],['variables']
Modifiability,"ase when using the branches created via a TStreamerInfo (i.e. More...;  ; class  TLeafF;  A TLeaf for a 32 bit floating point data type. More...;  ; class  TLeafF16;  A TLeaf for a 24 bit truncated floating point data type. More...;  ; class  TLeafG;  A TLeaf for a 64 bit Integer data type. More...;  ; class  TLeafI;  A TLeaf for an Integer data type. More...;  ; class  TLeafL;  A TLeaf for a 64 bit Integer data type. More...;  ; class  TLeafO;  A TLeaf for a bool data type. More...;  ; class  TLeafObject;  A TLeaf for a general object derived from TObject. More...;  ; class  TLeafS;  A TLeaf for a 16 bit Integer data type. More...;  ; class  TMethodBrowsable;  This helper object allows the browsing of methods of objects stored in branches. More...;  ; class  TNonSplitBrowsable;  Allows a TBrowser to browse non-split branches as if they were split. More...;  ; class  TNtuple;  A simple TTree restricted to a list of float variables only. More...;  ; class  TNtupleD;  A simple TTree restricted to a list of double variables only. More...;  ; class  TQueryResult;  A container class for query results. More...;  ; class  TreeUtils;  Different standalone functions to work with trees and tuples, not reqiuired to be a member of any class. More...;  ; class  TSelector;  A TSelector object is used by the TTree::Draw, TTree::Scan, TTree::Process to navigate in a TTree and make selections. More...;  ; class  TSelectorList;  A TList derived class that makes sure that objects added to it are not linked to the currently open file (like histograms, eventlists and trees). More...;  ; class  TSelectorScalar;  Named scalar type, based on Long64_t, streamable, storable and mergeable. More...;  ; class  TTree;  A TTree represents a columnar dataset. More...;  ; class  TTreeCache;  A cache to speed-up the reading of ROOT datasets. More...;  ; class  TTreeCacheUnzip;  A TTreeCache which exploits parallelized decompression of its own content. More...;  ; class  TTreeCloner;  Class implement",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tree.html:5023,variab,variables,5023,doc/master/group__tree.html,https://root.cern,https://root.cern/doc/master/group__tree.html,1,['variab'],['variables']
Modifiability,"ase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; ROOT::Minuit2::ModularFunctionMinimizerROOT::Minuit2::ModularFunctionMinimizer::ModularFunctionMinimizer(); ROOT::Minuit2::ModularFunctionMinimizerROOT::Minuit2::ModularFunctionMinimizer::ModularFunctionMinimizer(const ROOT::Minuit2::ModularFunctionMinimizer&); ROOT::Minuit2::ScanMinimizer&operator=(const ROOT::Minuit2::ScanMinimizer&); ROOT::Minuit2::ScanMinimizerScanMinimizer(); ROOT::Minuit2::ScanMinimizerScanMinimizer(const ROOT::Minuit2::ScanMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const. Data Members; private:. ROOT::Minuit2::ScanBuilderfBuilder; ROOT::Minuit2::SimplexSeedGeneratorfSeedGenerator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ScanMinimizer(); {}. ~ScanMinimizer(); {}. » Last changed: root/minuit2:$Id$ » Last generated: 2015-06-30 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__ScanMinimizer.html:4553,Inherit,Inheritance,4553,root/html602/ROOT__Minuit2__ScanMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__ScanMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; ROOT::Minuit2::ModularFunctionMinimizerROOT::Minuit2::ModularFunctionMinimizer::ModularFunctionMinimizer(); ROOT::Minuit2::ModularFunctionMinimizerROOT::Minuit2::ModularFunctionMinimizer::ModularFunctionMinimizer(const ROOT::Minuit2::ModularFunctionMinimizer&); ROOT::Minuit2::ScanMinimizer&operator=(const ROOT::Minuit2::ScanMinimizer&); ROOT::Minuit2::ScanMinimizerScanMinimizer(); ROOT::Minuit2::ScanMinimizerScanMinimizer(const ROOT::Minuit2::ScanMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const. Data Members; private:. ROOT::Minuit2::ScanBuilderfBuilder; ROOT::Minuit2::SimplexSeedGeneratorfSeedGenerator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ScanMinimizer(); {}. ~ScanMinimizer(); {}. » Last changed: root/minuit2:$Id$ » Last generated: 2015-09-08 17:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Minuit2__ScanMinimizer.html:4553,Inherit,Inheritance,4553,root/html604/ROOT__Minuit2__ScanMinimizer.html,https://root.cern,https://root.cern/root/html604/ROOT__Minuit2__ScanMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ase*fMinuitFCN; ROOT::Minuit2::MnUserParameterStatefState; boolfUseFumili; vector<double>fValues. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Minuit2Minimizer(ROOT::Minuit2::EMinimizerType type = ROOT::Minuit2::kMigrad). Default constructor. Minuit2Minimizer(const char * type). Constructor with a char (used by PM). virtual ~Minuit2Minimizer(). Destructor (no operations). Minuit2Minimizer(const Minuit2Minimizer &); usually copying is non trivial, so we make this unaccessible. Copy constructor. void Clear(); clear resources (parameters) for consecutives minimizations. void SetFunction(const ROOT::Math::IMultiGenFunction & func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction & func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set variable. bool SetVariableValues(const double* val). std::string VariableName(unsigned int ivar) const; get name of variables (override if minimizer support storing of variable names). int VariableIndex(const string& name) const; get index of variable given a variable given a name; return -1 if variable is not found. bool Minimize(). method to perform the minimization.; Return ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html:5969,variab,variable,5969,root/html526/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html,1,['variab'],['variable']
Modifiability,"ase.load()->FirstLink();; 2760 ; 2761 // otherwise look at inheritance tree; 2762 while (lnk) {; 2763 inh = (TBaseClass *)lnk->GetObject();; 2764 //use option load=kFALSE to avoid a warning like:; 2765 //""Warning in <TClass::TClass>: no dictionary for class TRefCnt is available""; 2766 //We can not afford to not have the class if it exist, so we; 2767 //use kTRUE.; 2768 c = inh->GetClassPointer(kTRUE); // kFALSE);; 2769 if (c) {; 2770 if (cl == c) {; 2771 if ((inh->Property() & kIsVirtualBase) != 0); 2772 return -2;; 2773 return inh->GetDelta();; 2774 }; 2775 off = c->GetBaseClassOffsetRecurse(cl);; 2776 if (off == -2) return -2;; 2777 if (off != -1) {; 2778 return off + inh->GetDelta();; 2779 }; 2780 }; 2781 lnk = lnk->Next();; 2782 }; 2783 return -1;; 2784}; 2785 ; 2786////////////////////////////////////////////////////////////////////////////////; 2787/// - Return data member offset to the base class ""cl"".; 2788/// - Returns -1 in case ""cl"" is not a base class.; 2789/// Takes care of multiple inheritance.; 2790 ; 2791Int_t TClass::GetBaseClassOffset(const TClass *toBase, void *address, bool isDerivedObject); 2792{; 2793 // Warning(""GetBaseClassOffset"",""Requires the use of fClassInfo for %s to %s"",GetName(),toBase->GetName());; 2794 ; 2795 if (this == toBase) return 0;; 2796 ; 2797 if ((!address /* || !has_virtual_base */) &&; 2798 (!HasInterpreterInfoInMemory() || !toBase->HasInterpreterInfoInMemory())) {; 2799 // At least of the ClassInfo have not been loaded in memory yet and; 2800 // since there is no virtual base class (or we don't have enough so it; 2801 // would not make a difference) we can use the 'static' information; 2802 Int_t offset = GetBaseClassOffsetRecurse (toBase);; 2803 if (offset != -2) {; 2804 return offset;; 2805 }; 2806 return offset;; 2807 }; 2808 ; 2809 ClassInfo_t* derived = GetClassInfo();; 2810 ClassInfo_t* base = toBase->GetClassInfo();; 2811 if(derived && base) {; 2812 // TClingClassInfo::GetBaseOffset takes the lock.; 2813 return gCli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:104357,inherit,inheritance,104357,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"ase.load()->FirstLink();; 2827 ; 2828 // otherwise look at inheritance tree; 2829 while (lnk) {; 2830 inh = (TBaseClass *)lnk->GetObject();; 2831 //use option load=kFALSE to avoid a warning like:; 2832 //""Warning in <TClass::TClass>: no dictionary for class TRefCnt is available""; 2833 //We can not afford to not have the class if it exist, so we; 2834 //use kTRUE.; 2835 c = inh->GetClassPointer(kTRUE); // kFALSE);; 2836 if (c) {; 2837 if (cl == c) {; 2838 if ((inh->Property() & kIsVirtualBase) != 0); 2839 return -2;; 2840 return inh->GetDelta();; 2841 }; 2842 off = c->GetBaseClassOffsetRecurse(cl);; 2843 if (off == -2) return -2;; 2844 if (off != -1) {; 2845 return off + inh->GetDelta();; 2846 }; 2847 }; 2848 lnk = lnk->Next();; 2849 }; 2850 return -1;; 2851}; 2852 ; 2853////////////////////////////////////////////////////////////////////////////////; 2854/// - Return data member offset to the base class ""cl"".; 2855/// - Returns -1 in case ""cl"" is not a base class.; 2856/// Takes care of multiple inheritance.; 2857 ; 2858Int_t TClass::GetBaseClassOffset(const TClass *toBase, void *address, bool isDerivedObject); 2859{; 2860 // Warning(""GetBaseClassOffset"",""Requires the use of fClassInfo for %s to %s"",GetName(),toBase->GetName());; 2861 ; 2862 if (this == toBase) return 0;; 2863 ; 2864 if ((!address /* || !has_virtual_base */) &&; 2865 (!HasInterpreterInfoInMemory() || !toBase->HasInterpreterInfoInMemory())) {; 2866 // At least of the ClassInfo have not been loaded in memory yet and; 2867 // since there is no virtual base class (or we don't have enough so it; 2868 // would not make a difference) we can use the 'static' information; 2869 Int_t offset = GetBaseClassOffsetRecurse (toBase);; 2870 if (offset != -2) {; 2871 return offset;; 2872 }; 2873 return offset;; 2874 }; 2875 ; 2876 ClassInfo_t* derived = GetClassInfo();; 2877 ClassInfo_t* base = toBase->GetClassInfo();; 2878 if(derived && base) {; 2879 // TClingClassInfo::GetBaseOffset takes the lock.; 2880 return gCli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:107108,inherit,inheritance,107108,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"ase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; TMVA::IMethod*GetCurrentMethod(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; TMVA::IMethod*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCompositeBase.html:2932,Config,Configurable,2932,root/html532/TMVA__MethodCompositeBase.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCompositeBase.html,1,['Config'],['Configurable']
Modifiability,"ase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; TMVA::IMethod*TMVA::MethodCompositeBase::GetCurrentMethod(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCategory.html:2945,Config,Configurable,2945,root/html532/TMVA__MethodCategory.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCategory.html,1,['Config'],['Configurable']
Modifiability,"ase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); TMVA::MethodFisher::EFisherMethodGetFisherMethod(); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodFisher.html:4839,Config,Configurable,4839,root/html532/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodFisher.html,4,['Config'],['Configurable']
Modifiability,"ase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); const vector<TMVA::DecisionTree*>&GetForest() const; Double_tGetGDErrScale() const; Int_tGetGDNPathSteps() const; Double_tGetGDPathEveFrac() const; Double_tGetGDPathStep() const; Double_tGetGDValidEveFrac() const; virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodRuleFit.html:2562,Config,Configurable,2562,root/html532/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodRuleFit.html,4,['Config'],['Configurable']
Modifiability,"ase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; TMVA::MethodPDEFoam::EKernelGetKernel(); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodPDEFoam.html:3290,Config,Configurable,3290,root/html532/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodPDEFoam.html,4,['Config'],['Configurable']
Modifiability,"ase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; virtual Double_tTMVA::MethodBase::GetKSTrainingV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodANNBase.html:2781,Config,Configurable,2781,root/html534/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodANNBase.html,33,['Config'],['Configurable']
Modifiability,"ase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; virtual Double_tTMVA::MethodBase::GetMaximumSign",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodANNBase.html:2781,Config,Configurable,2781,root/html532/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodANNBase.html,9,['Config'],['Configurable']
Modifiability,"ase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual voidGetHelpMessage() const; virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; virtual Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodDT.html:5591,Config,Configurable,5591,root/html532/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodDT.html,4,['Config'],['Configurable']
Modifiability,"ase; using Primitives_t = std::vector< std::shared_ptr< RDrawable > >;  ;  Public Types inherited from ROOT::Experimental::RDrawable; using Version_t = uint64_t;  ;  Protected Member Functions inherited from ROOT::Experimental::RPadBase;  RPadBase (const char *csstype);  Allow derived classes to default construct a RPadBase. ;  ; void CollectShared (Internal::RIOSharedVector_t &) override;  Collect all shared items to resolve shared_ptr after IO. ;  ; void DisplayPrimitives (RPadBaseDisplayItem &paditem, RDisplayContext &ctxt);  Create display items for all primitives in the pad Each display item gets its special id, which used later for client-server communication Second parameter is version id which already delivered to the client. ;  ; void SetDrawableVersion (Version_t vers) override;  Assign drawable version - for pad itself and all primitives. ;  ;  Protected Member Functions inherited from ROOT::Experimental::RDrawable;  RDrawable (const RDrawable &)=delete;  ; virtual std::unique_ptr< RDisplayItem > Display (const RDisplayContext &);  Creates display item for drawable By default item contains drawable data itself. ;  ; virtual void Execute (const std::string &);  ; RAttrMap & GetAttrMap ();  ; const RAttrMap & GetAttrMap () const;  ; Version_t GetVersion () const;  ; virtual bool IsFrameRequired () const;  ; bool MatchSelector (const std::string &selector) const;  Preliminary method which checks if drawable matches with given selector Following selector are allowed: ""type"" or ""#id"" or "".class_name"" Here type is drawable kind like 'rect' or 'pad' id is drawable identifier, specified with RDrawable::SetId() method class_name is drawable class name, specified with RDrawable::SetCssClass() method. ;  ; virtual void OnDisplayItemDestroyed (RDisplayItem *) const;  ; RDrawable & operator= (const RDrawable &)=delete;  ; virtual void PopulateMenu (RMenuItems &);  ; void SetCssType (const char *csstype);  . #include <ROOT/RCanvas.hxx>. Inheritance diagram for ROOT::Ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html:8268,inherit,inherited,8268,doc/master/classROOT_1_1Experimental_1_1RCanvas.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html,1,['inherit'],['inherited']
Modifiability,"aseBrowsable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::THnBaseBrowsable Class Reference. ; TBrowser helper for THnBase. ; Definition at line 300 of file THnBase.h. Public Member Functions;  THnBaseBrowsable (THnBase *hist, Int_t axis);  Construct a THnBaseBrowsable. ;  ;  ~THnBaseBrowsable () override;  Destruct a THnBaseBrowsable. ;  ; void Browse (TBrowser *b) override;  Browse an axis of a THnBase, i.e. draw its projection. ;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1THnBaseBrowsable.html:1008,inherit,inherited,1008,doc/master/classROOT_1_1Internal_1_1THnBaseBrowsable.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1THnBaseBrowsable.html,1,['inherit'],['inherited']
Modifiability,"aseFunc typedefROOT::Fit::Fitter; BaseGradFunc typedefROOT::Fit::Fitter; CalculateHessErrors()ROOT::Fit::Fitter; CalculateMinosErrors()ROOT::Fit::Fitter; Config() constROOT::Fit::Fitterinline; Config()ROOT::Fit::Fitterinline; DoBinnedLikelihoodFit(bool extended=true, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterprotected; DoInitMinimizer()ROOT::Fit::Fitterprotected; DoLeastSquareFit(const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterprotected; DoLinearFit()ROOT::Fit::Fitterprotected; DoMinimization(std::unique_ptr< ObjFunc_t > f, const ROOT::Math::IMultiGenFunction *chifunc=nullptr)ROOT::Fit::Fitterprotected; DoMinimization(const ROOT::Math::IMultiGenFunction *chifunc=nullptr)ROOT::Fit::Fitterprotected; DoSetFCN(bool useExtFCN, const ROOT::Math::IMultiGenFunction &fcn, const double *params, unsigned int dataSize, int fitType)ROOT::Fit::Fitterprotected; DoUnbinnedLikelihoodFit(bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterprotected; DoUpdateFitConfig()ROOT::Fit::Fitterprotected; DoUpdateMinimizerOptions(bool canDifferentMinim=true)ROOT::Fit::Fitterprotected; DoWeightMinimization(std::unique_ptr< ObjFunc_t > f, const ROOT::Math::IMultiGenFunction *chifunc=nullptr)ROOT::Fit::Fitterprotected; EvalFCN()ROOT::Fit::Fitter; ExamineFCN()ROOT::Fit::Fitterprotected; fBinFitROOT::Fit::Fitterprivate; fConfigROOT::Fit::Fitterprivate; fDataROOT::Fit::Fitterprivate; fDataSizeROOT::Fit::Fitterprivate; fExtObjFunctionROOT::Fit::Fitterprivate; fFitTypeROOT::Fit::Fitterprivate; fFuncROOT::Fit::Fitterprivate; fFunc_vROOT::Fit::Fitterprivate; Fit(const Data &data, const Function &func, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; Fit(const BinData &data, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter-members.html:1332,extend,extended,1332,doc/master/classROOT_1_1Fit_1_1Fitter-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter-members.html,1,['extend'],['extended']
Modifiability,"aset in the list; prevails. void append(RooDataSet& data); Add all data points of given data set to this data set.; Observable in 'data' that are not in this dataset; with not be transferred. RooAbsArg* addColumn(RooAbsArg& var, Bool_t adjustRange = kTRUE); Add a column with the values of the given (function) argument; to this dataset. The function value is calculated for each; event using the observable values of each event in case the; function depends on variables with names that are identical; to the observable names in the dataset. RooArgSet* addColumns(const RooArgList& varList); Add a column with the values of the given list of (function); argument to this dataset. Each function value is calculated for; each event using the observable values of the event in case the; function depends on variables with names that are identical to; the observable names in the dataset. TH2F* createHistogram(const RooAbsRealLValue& var1, const RooAbsRealLValue& var2, const char* cuts = """", const char* name = ""hist"") const; Create a TH2F histogram of the distribution of the specified variable; using this dataset. Apply any cuts to select which events are used.; The variable being plotted can either be contained directly in this; dataset, or else be a function of the variables in this dataset.; The histogram will be created using RooAbsReal::createHistogram() with; the name provided (with our dataset name prepended). TH2F* createHistogram(const RooAbsRealLValue& var1, const RooAbsRealLValue& var2, Int_t nx, Int_t ny, const char* cuts = """", const char* name = ""hist"") const; Create a TH2F histogram of the distribution of the specified variable; using this dataset. Apply any cuts to select which events are used.; The variable being plotted can either be contained directly in this; dataset, or else be a function of the variables in this dataset.; The histogram will be created using RooAbsReal::createHistogram() with; the name provided (with our dataset name prepended). RooPlot* plotOnX",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDataSet.html:27672,variab,variable,27672,root/html526/RooDataSet.html,https://root.cern,https://root.cern/root/html526/RooDataSet.html,11,['variab'],['variable']
Modifiability,"aset. void printValue(ostream& os) const; Print value of p.d.f, also print normalization integral that was last used, if any. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print multi line detailed information of this RooAbsPdf. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Interface function to create a generator context from a p.d.f. This default; implementation returns a 'standard' context that works for any p.d.f. RooDataSet * generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1,				const RooCmdArg& arg2, const RooCmdArg& arg3,const RooCmdArg& arg4, const RooCmdArg& arg5); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ProtoData(const RooDataSet& data, -- Use specified dataset as prototype dataset. If randOrder is set to true; Bool_t randOrder) the order of the events in the dataset will be read in a random order; if the requested number of events to be generated does not match the; number of events in the prototype dataset. If ProtoData() is used, the specified existing dataset as a prototype: the new dataset will contain; the same number of events as the prototype (unless otherwise specified), and any prototype variables not",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:55815,variab,variables,55815,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['variab'],['variables']
Modifiability,"ashContext &ctx) const override;  This function defines the analytical integral translation for the class. ;  ; TObject * clone (const char *newname) const override;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; TClass * IsA () const override;  ; void selectNormalizationRange (const char *rangeName=nullptr, bool force=false) override;  Interface function to force use of a given normalization range to interpret function value. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; std::uni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChebychev.html:2152,inherit,inherited,2152,doc/master/classRooChebychev.html,https://root.cern,https://root.cern/doc/master/classRooChebychev.html,1,['inherit'],['inherited']
Modifiability,"ashContext & ; ctx); const. overridevirtual . This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ; The function adds the code represented by each class as an std::string (that is later concatenated with code strings from translate calls) to form the C++ code that AD tools can understand. Any class that wants to support AD, has to implement this function.; Parameters. [in]ctxAn object to manage auxiliary information for code-squashing. Also takes the code string that this class outputs into the squashed code through the 'addToCodeBody' function. . Reimplemented from RooAbsArg.; Definition at line 548 of file RooAddPdf.cxx. ◆ updateCoefficients(). void RooAddPdf::updateCoefficients ; (; AddCacheElem & ; cache, . const RooArgSet * ; nset, . bool ; syncCoefValues = true . ); const. protected . Update the coefficient values in the given cache element: calculate new remainder fraction, normalize fractions obtained from extended ML terms to unity, and multiply the various range and dimensional corrections needed in the current use context. ; param[in] cache The cache element for the given normalization set that stores the supplementary normalization values and projection-related objects. param[in] nset The set of variables to normalize over. param[in] syncCoefValues If the initial values of the coefficients still need to be copied from the _coefList elements to the _coefCache. True by default. ; Definition at line 442 of file RooAddPdf.cxx. Friends And Related Symbol Documentation. ◆ RooAddGenContext. friend class RooAddGenContext. friend . Definition at line 115 of file RooAddPdf.h. ◆ RooAddModel. friend class RooAddModel. friend . Definition at line 116 of file RooAddPdf.h. Member Data Documentation. ◆ _allExtendable. bool RooAddPdf::_allExtendable = false. protected . Flag indicating if all PDF components are extendable. ; Definition at line 136 of file RooAddPdf.h. ◆ _codeReg. RooAICRegistry Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:95559,extend,extended,95559,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,2,['extend'],['extended']
Modifiability,"asic treatment. We will not go into that and let the reader refer to the sources of classes like TLine or TBox. Go and look at their ExecuteEvent method! We can nevertheless give some reference to the various actions that may be performed. For example, one often wants to change the shape of the cursor when passing on top of an object. This is done with the SetCursor method:; gPad->SetCursor(cursor); The argument cursor is the type of cursor. It may be:; kBottomLeft, kBottomRight, kTopLeft,; kTopRight, kBottomSide, kLeftSide,; kTopSide, kRightSide, kMove,; kCross, kArrowHor, kArrowVer,; kHand, kRotate, kPointer,; kArrowRight, kCaret, kWatch; They are defined in TVirtualX.h and again we hope the names are self-explanatory. If not, try them by designing a small class. It may derive from something already known like TLine.; Note that the ExecuteEvent() functions may in turn; invoke such functions for other objects, in case an object is drawn using other objects. You can also exploit at best the virtues of inheritance. See for example how the class TArrow (derived from TLine) use or redefine the picking functions in its base class.; The last comment is that mouse position is always given in pixel units in all these standard functions. px=0 and py=0 corresponds to the top-left corner of the canvas. Here, we have followed the standard convention in windowing systems. Note that user coordinates in a canvas (pad) have the origin at the bottom-left corner of the canvas (pad). This is all explained in the paragraph “The Coordinate Systems of a Pad”.; 9.3 Graphical Containers: Canvas and Pad. We have talked a lot about canvases, which may be seen as windows. More generally, a graphical entity that contains graphical objects is called a Pad. A Canvas is a special kind of Pad. From now on, when we say something about pads, this also applies to canvases. A pad (class TPad) is a graphical container in the sense it contains other graphical objects like histograms and arrows. It may c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:301797,inherit,inheritance,301797,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inheritance']
Modifiability,"asicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fAlpha1;  ; Float_t fAlpha2;  ; Float_t fBl1;  ; Float_t fBl2;  ; Float_t fH1;  ; Float_t fH2;  ; Float_t fTl1;  ; Float_t fTl2;  ;  Protected Attributes inherited from TBRIK; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTRAP.h>. Inheritance diagram for TTRAP:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRAP.html:18292,inherit,inherited,18292,doc/master/classTTRAP.html,https://root.cern,https://root.cern/doc/master/classTTRAP.html,1,['inherit'],['inherited']
Modifiability,"asicType<WithFactorMarker<From>,To> {; 2118 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2119 {; 2120 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2121 TConfWithFactor *conf = (TConfWithFactor *)config;; 2122 From temp;; 2123 const Int_t offset = config->fOffset;; 2124 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2125 buf.ReadWithFactor(&temp, conf->fFactor, conf->fXmin);; 2126 To *x = (To*)( ((char*) (*(void**)iter) ) + offset );; 2127 *x = (To)temp;; 2128 }; 2129 return 0;; 2130 }; 2131 };; 2132 ; 2133 template <typename From, typename To>; 2134 struct ConvertBasicType<NoFactorMarker<From>,To> {; 2135 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2136 {; 2137 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2138 TConfNoFactor *conf = (TConfNoFactor *)config;; 2139 From temp;; 2140 const Int_t offset = config->fOffset;; 2141 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2142 buf.ReadWithNbits(&temp, conf->fNbits);; 2143 To *x = (To*)( ((char*) (*(void**)iter) ) + offset );; 2144 *x = (To)temp;; 2145 }; 2146 return 0;; 2147 }; 2148 };; 2149 ; 2150 template <typename T>; 2151 static INLINE_TEMPLATE_ARGS Int_t WriteBasicType(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2152 {; 2153 const Int_t offset = config->fOffset;; 2154 ; 2155 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2156 T *x = (T*)( ((char*) (*(void**)iter) ) + offset );; 2157 buf << *x;; 2158 }; 2159 return 0;; 2160 }; 2161 ; 2162 template <Int_t (*action)(TBuffer&,void *,const TConfiguration*)>; 2163 static INLINE_TEMPLATE_ARGS Int_t ReadAction(TBuffer &buf, void *start, const void *end, const TConfiguration *config); 2164 {; 2165 for(void *iter = start; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2166 action(buf, *(void**)iter, config);; 2167 }; 2168 retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:87646,config,config,87646,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"ask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGButtonGroup; void DoRedraw () override;  Redraw the group frame. ;  ; void Init ();  Default init. ;  ;  Protected Member Functions inherited from TGGroupFrame; void DoRedraw () override;  Redraw the group frame. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHButtonGroup.html:31247,inherit,inherited,31247,doc/master/classTGHButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGHButtonGroup.html,2,['inherit'],['inherited']
Modifiability,"ask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoVolume; TObject * fField;  pointer to TGeoManager owning this volume ;  ; TGeoPatternFinder * fFinder;  dummy medium ;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to volumes. ;  ; TGeoManager * fGeoManager;  ; TGeoMedium * fMedium;  ; TObjArray * fNodes;  ; Int_t fNtotal;  ; Int_t fNumber;  option - if any ;  ; TString fOption;  just a hook for now ;  ; Int_t fRefCount;  ; TGeoShape * fShape;  ; Char_t fTransparency;  ; TGeoExtension * fUserExtension;  ; TGeoVoxelFinder * fVoxels;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolumeMulti.html:36725,inherit,inherited,36725,doc/master/classTGeoVolumeMulti.html,https://root.cern,https://root.cern/doc/master/classTGeoVolumeMulti.html,2,['inherit'],['inherited']
Modifiability,"ask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt = (1ULL << ( 20 )); };  ; enum  EGeoVisibilityAtt { ;   kVisOverride = (1ULL << ( 0 )); , kVisNone = (1ULL << ( 1 )); , kVisThis = (1ULL << ( 2 )); , kVisDaughters = (1ULL << ( 3 )); , ;   kVisOneLevel = (1ULL << ( 4 )); , kVisStreamed = (1ULL << ( 5 )); , kVisTouched = (1ULL << ( 6 )); , kVisOnScreen = (1ULL << ( 7 )); , ;   kVisContainers = (1ULL << ( 12 )); , kVisOnly = (1ULL << ( 13 )); , kVisBranch = (1ULL << ( 14 )); , kVisRaytrace = (1ULL << ( 15 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TGeoVolume; static TGeoMedium * fgDummyMedium = nullptr;  . #include <TGeoVolume.h>. Inheritance diagram for TGeoVolumeAssembly:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoVolumeAssembly() [1/3]. TGeoVolumeAssembly::TGeoVolumeAssembly ; (; const TGeoVolumeAssembly & ; ). privatedelete . Mutex for concurrent operations. . ◆ TGeoVolumeAssembly() [2/3]. TGeoVolumeAssembly::TGeoVolumeAssembly ; (; ). Default constructor. ; Definition at line 2944 of file TGeoVolume.cxx. ◆ TGeoVolumeAssembly() [3/3]. TGeoVolumeAssembly::TGeoVolumeAssembly ; (; const char * ; name). Constructor. ; Just the name has to be provided. Assemblies does not have their own shape or medium. ; Definition at line ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolumeAssembly.html:30185,inherit,inherited,30185,doc/master/classTGeoVolumeAssembly.html,https://root.cern,https://root.cern/doc/master/classTGeoVolumeAssembly.html,2,['inherit'],['inherited']
Modifiability,"ask[465]; Int_tfMesh(=1 if mesh to draw, o otherwise); Int_tfNStackNumber of histograms in the stack to be painted; Int_tfNT; Int_tfNcolorNumber of colours per Iso surface; Int_tfNlevelNumber of color levels; Int_tfNlines; Int_tfNqs; Int_tfNxrast; Int_tfNyrast; Double_tfP8[8][3]; Double_tfPlines[1200]; Double_tfQA; Double_tfQD; Double_tfQS; Int_t*fRasterpointer to raster buffer; Double_tfRmax[3]Upper limits of lego; Double_tfRmin[3]Lower limits of lego; TPainter3dAlgorithms::SurfaceFunc_tfSurfaceFunctionpointer to surface function; Int_tfSystemCoordinate system; Double_tfT[200]; Double_tfU[2000]; Double_tfVls[12]; Double_tfX0; Double_tfXrast; Double_tfYdl; Double_tfYls[4]; Double_tfYrast; static TF3*fgCurrentF3Pointer to the 3D function to be paint.; static Int_tfgF3ClippingClipping box is off (0) or on (1); static Double_tfgF3XClipClipping plne along X; static Double_tfgF3YClipClipping plne along Y; static Double_tfgF3ZClipClipping plne along Y. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPainter3dAlgorithms(); Lego default constructor. TPainter3dAlgorithms(Double_t* rmin, Double_t* rmax, Int_t system = 1); Normal default constructor. rmin[3], rmax[3] are the limits of the lego object depending on; the selected coordinate system. ~TPainter3dAlgorithms(); Lego default destructor. void BackBox(Double_t ang); Draw back surfaces of surrounding box. Input ANG - angle between X and Y axis. DRFACE(ICODES,XYZ,NP,IFACE,T) - routine for face drawing; ICODES(*) - set of codes for this face; NP - number of nodes in face; IFACE(NP) - face; T(NP) - additional function. void ClearRaster(); Clear screen. void ColorFunction(Int_t nl, Double_t* fl, Int_t* icl, Int_t& irep); Set correspondance between function and color levels. Input: NL - number of levels; FL(NL) - function levels; ICL(NL+1) - colors for levels. Output: IREP - reply: 0 O.K.; -1 error in parameters:; illegal number of levels; function levels must be in increasing order; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPainter3dAlgorithms.html:15035,Inherit,Inheritance,15035,root/html602/TPainter3dAlgorithms.html,https://root.cern,https://root.cern/root/html602/TPainter3dAlgorithms.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"askets in memory ;  ; Long64_t fNextBasketEntry;  ! Next entry that will requires us to go to the next basket ;  ; Int_t fNleaves;  ! Number of leaves ;  ; Int_t fOffset;  Offset of this branch. ;  ; TBranch * fParent;  ! Pointer to parent branch. ;  ; Int_t fReadBasket;  ! Current basket number when reading ;  ; Long64_t fReadEntry;  ! Current entry number when reading ;  ; ReadLeaves_t fReadLeaves;  ! Pointer to the ReadLeaves implementation to use. ;  ; bool fSkipZip;  ! After being read, the buffer will not be unzipped. ;  ; Int_t fSplitLevel;  Branch split level. ;  ; Long64_t fTotBytes;  Total number of bytes in all leaves before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TTree * fTree;  ! Pointer to Tree header ;  ; Int_t fWriteBasket;  Last basket number written. ;  ; Long64_t fZipBytes;  Total number of bytes in all leaves after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBranch; using BulkObj = ROOT::Experimental::Internal::TBulkBranchRead;  ; using CacheInfo_t = ROOT::Internal::TBranchCacheInfo;  ; enum  EStatusBits { ;   kDoNotPro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHbookBranch.html:23894,inherit,inherited,23894,doc/master/classTHbookBranch.html,https://root.cern,https://root.cern/doc/master/classTHbookBranch.html,2,['inherit'],['inherited']
Modifiability,"askets in memory ;  ; Long64_t fNextBasketEntry;  ! Next entry that will requires us to go to the next basket ;  ; Int_t fNleaves;  ! Number of leaves ;  ; Int_t fOffset;  Offset of this branch. ;  ; TBranch * fParent;  ! Pointer to parent branch. ;  ; Int_t fReadBasket;  ! Current basket number when reading ;  ; Long64_t fReadEntry;  ! Current entry number when reading ;  ; ReadLeaves_t fReadLeaves;  ! Pointer to the ReadLeaves implementation to use. ;  ; bool fSkipZip;  ! After being read, the buffer will not be unzipped. ;  ; Int_t fSplitLevel;  Branch split level. ;  ; Long64_t fTotBytes;  Total number of bytes in all leaves before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TTree * fTree;  ! Pointer to Tree header ;  ; Int_t fWriteBasket;  Last basket number written. ;  ; Long64_t fZipBytes;  Total number of bytes in all leaves after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Friends; class TTreeCloner;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBranch; using BulkObj = ROOT::Experimental::Internal::TBulkBranchRead;  ; using CacheInfo_t = ROOT::Internal::TBranchCacheInfo;  ; en",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchClones.html:25853,inherit,inherited,25853,doc/master/classTBranchClones.html,https://root.cern,https://root.cern/doc/master/classTBranchClones.html,2,['inherit'],['inherited']
Modifiability,"askets in memory ;  ; Long64_t fNextBasketEntry;  ! Next entry that will requires us to go to the next basket ;  ; Int_t fNleaves;  ! Number of leaves ;  ; Int_t fOffset;  Offset of this branch. ;  ; TBranch * fParent;  ! Pointer to parent branch. ;  ; Int_t fReadBasket;  ! Current basket number when reading ;  ; Long64_t fReadEntry;  ! Current entry number when reading ;  ; ReadLeaves_t fReadLeaves;  ! Pointer to the ReadLeaves implementation to use. ;  ; bool fSkipZip;  ! After being read, the buffer will not be unzipped. ;  ; Int_t fSplitLevel;  Branch split level. ;  ; Long64_t fTotBytes;  Total number of bytes in all leaves before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TTree * fTree;  ! Pointer to Tree header ;  ; Int_t fWriteBasket;  Last basket number written. ;  ; Long64_t fZipBytes;  Total number of bytes in all leaves after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions; Int_t FillImpl (ROOT::Internal::TBranchIMTHelper *) override;  Fill the branch basket with the referenced objects parent numbers. ;  . Private Attributes; Long64_t fRequestedEntry;  ! Cursor indicating which entry is being requested. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchRef.html:26286,inherit,inherited,26286,doc/master/classTBranchRef.html,https://root.cern,https://root.cern/doc/master/classTBranchRef.html,2,['inherit'],['inherited']
Modifiability,"askets in memory ;  ; Long64_t fNextBasketEntry;  ! Next entry that will requires us to go to the next basket ;  ; Int_t fNleaves;  ! Number of leaves ;  ; Int_t fOffset;  Offset of this branch. ;  ; TBranch * fParent;  ! Pointer to parent branch. ;  ; Int_t fReadBasket;  ! Current basket number when reading ;  ; Long64_t fReadEntry;  ! Current entry number when reading ;  ; ReadLeaves_t fReadLeaves;  ! Pointer to the ReadLeaves implementation to use. ;  ; bool fSkipZip;  ! After being read, the buffer will not be unzipped. ;  ; Int_t fSplitLevel;  Branch split level. ;  ; Long64_t fTotBytes;  Total number of bytes in all leaves before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TTree * fTree;  ! Pointer to Tree header ;  ; Int_t fWriteBasket;  Last basket number written. ;  ; Long64_t fZipBytes;  Total number of bytes in all leaves after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions; Int_t FillImpl (ROOT::Internal::TBranchIMTHelper *) override;  Loop on all leaves of this branch to fill Basket buffer. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Protected Attributes inherited from TB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchObject.html:26764,inherit,inherited,26764,doc/master/classTBranchObject.html,https://root.cern,https://root.cern/doc/master/classTBranchObject.html,2,['inherit'],['inherited']
Modifiability,"askets in memory ;  ; Long64_t fNextBasketEntry;  ! Next entry that will requires us to go to the next basket ;  ; Int_t fNleaves;  ! Number of leaves ;  ; Int_t fOffset;  Offset of this branch. ;  ; TBranch * fParent;  ! Pointer to parent branch. ;  ; Int_t fReadBasket;  ! Current basket number when reading ;  ; Long64_t fReadEntry;  ! Current entry number when reading ;  ; ReadLeaves_t fReadLeaves;  ! Pointer to the ReadLeaves implementation to use. ;  ; bool fSkipZip;  ! After being read, the buffer will not be unzipped. ;  ; Int_t fSplitLevel;  Branch split level. ;  ; Long64_t fTotBytes;  Total number of bytes in all leaves before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TTree * fTree;  ! Pointer to Tree header ;  ; Int_t fWriteBasket;  Last basket number written. ;  ; Long64_t fZipBytes;  Total number of bytes in all leaves after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TBranchElement (const TBranchElement &)=delete;  ; Int_t FillImpl (ROOT::Internal::TBranchIMTHelper *) override;  Loop on all leaves of this branch to fill the basket buffer. ;  ; TBranchElement & operator= (const TBranchElement &)=delete;  . Static Private Member Functions; static void SwitchContainer (TObjArray *);  Modify the container type of the branches. ;  . Friends; class TLeafElement;  ; class TTreeCloner;  . Additional Inherited Members;  Static Protected Attributes inherited from TBranch; static Int_t fgCount = 0;  ! branch counter ;  . #include <TBranchElement.h>. Inheritance diagram for TBranchElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EBranchElementType. enum TBranchElement::EBranchElementType. EnumeratorkLeafNode ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchElement.html:38651,inherit,inherited,38651,doc/master/classTBranchElement.html,https://root.cern,https://root.cern/doc/master/classTBranchElement.html,2,['inherit'],['inherited']
Modifiability,"askets in memory ;  ; Long64_t fNextBasketEntry;  ! Next entry that will requires us to go to the next basket ;  ; Int_t fNleaves;  ! Number of leaves ;  ; Int_t fOffset;  Offset of this branch. ;  ; TBranch * fParent;  ! Pointer to parent branch. ;  ; Int_t fReadBasket;  ! Current basket number when reading ;  ; Long64_t fReadEntry;  ! Current entry number when reading ;  ; ReadLeaves_t fReadLeaves;  ! Pointer to the ReadLeaves implementation to use. ;  ; bool fSkipZip;  ! After being read, the buffer will not be unzipped. ;  ; Int_t fSplitLevel;  Branch split level. ;  ; Long64_t fTotBytes;  Total number of bytes in all leaves before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TTree * fTree;  ! Pointer to Tree header ;  ; Int_t fWriteBasket;  Last basket number written. ;  ; Long64_t fZipBytes;  Total number of bytes in all leaves after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Static Protected Attributes; static Int_t fgCount = 0;  ! branch counter ;  . Private Types; using TIOFeatures = ROOT::TIOFeatures;  . Private Member Functions;  TBranch (const TBranch &)=delete;  ; Int_t FillEntryBuffer (TBasket *basket, TBuffer *buf, Int_t &lnew);  Copy the data from fEntryBuffer into the current basket. ;  ; Int_t GetBasketAndFirst (TBasket *&basket, Long64_t &first, TBuffer *user_buffer);  A helper function to locate the correct basket - and its first entry. ;  ; TBasket * GetBasketImpl (Int_t basket, TBuffer *user_buffer);  Return pointer to basket basketnumber in this Branch. ;  ; Int_t GetBulkEntries (Long64_t, TBuffer &);  Read a basket of events into the given buffer with byte swapping. ;  ; Int_t GetEntriesSerialized (Long64_t N, TBuffer &user_buf);  ; Int_t GetEntriesSerialized (Long64_t, TBuffer &, TBuffer *);  Read a basket",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch.html:25364,inherit,inherited,25364,doc/master/classTBranch.html,https://root.cern,https://root.cern/doc/master/classTBranch.html,2,['inherit'],['inherited']
Modifiability,"askets in memory ;  ; Long64_t fNextBasketEntry;  ! Next entry that will requires us to go to the next basket ;  ; Int_t fNleaves;  ! Number of leaves ;  ; Int_t fOffset;  Offset of this branch. ;  ; TBranch * fParent;  ! Pointer to parent branch. ;  ; Int_t fReadBasket;  ! Current basket number when reading ;  ; Long64_t fReadEntry;  ! Current entry number when reading ;  ; ReadLeaves_t fReadLeaves;  ! Pointer to the ReadLeaves implementation to use. ;  ; bool fSkipZip;  ! After being read, the buffer will not be unzipped. ;  ; Int_t fSplitLevel;  Branch split level. ;  ; Long64_t fTotBytes;  Total number of bytes in all leaves before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TTree * fTree;  ! Pointer to Tree header ;  ; Int_t fWriteBasket;  Last basket number written. ;  ; Long64_t fZipBytes;  Total number of bytes in all leaves after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Static Protected Attributes inherited from TBranch; static Int_t fgCount = 0;  ! branch counter ;  . #include <TBranchSTL.h>. Inheritance diagram for TBranchSTL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BranchMap_t. typedef std::map<TClass*, ElementBranchHelper_t> TBranchSTL::BranchMap_t. private . Definition at line 63 of file TBranchSTL.h. Constructor & Destructor Documentation. ◆ TBranchSTL() [1/3]. TBranchSTL::TBranchSTL ; (; ). Default constructor. ; Definition at line 28 of file TBranchSTL.cxx. ◆ TBranchSTL() [2/3]. TBranchSTL::TBranchSTL ; (; TTree * ; tree, . const char * ; name, . TVirtualCollectionProxy * ; collProxy, . Int_t ; buffsize, . Int_t ; splitlevel . ). Normal constructor, called from TTree. ; Definition at line 48 of file TBranchSTL.cxx. ◆ TBran",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchSTL.html:27564,inherit,inherited,27564,doc/master/classTBranchSTL.html,https://root.cern,https://root.cern/doc/master/classTBranchSTL.html,2,['inherit'],['inherited']
Modifiability,"ass ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fComment;  Comment field. ;  ; Long64_t fCsize;  Compressed size. ;  ; Bool_t fDirectory;  Flag indicating this is a directory. ;  ; Long64_t fDsize;  Decompressed size. ;  ; Long64_t fFilePosition;  Byte position in archive where member data starts. ;  ; TDatime fModTime;  Modification time. ;  ; TString fName;  Name of member. ;  ; Long64_t fPosition;  Byte position in archive. ;  . Friends; class TArchiveFile;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TArchiveFile.h>. Inheritance diagram for TArchiveMember:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArchiveMember.html:9845,inherit,inherited,9845,doc/master/classTArchiveMember.html,https://root.cern,https://root.cern/doc/master/classTArchiveMember.html,1,['inherit'],['inherited']
Modifiability,"ass ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fFlag;  rubber flag ;  ; Double_t fH;  height of widget ;  ; Double_t fW;  width of widget ;  ; Double_t fX;  x - position of widget ;  ; Double_t fY;  y - position of widget ;  ;  Protected Attributes inherited from TGLayoutHints; ULong_t fLayoutHints;  ; Int_t fPadbottom;  ; Int_t fPadleft;  ; Int_t fPadright;  ; Int_t fPadtop;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGLayoutHints; void UpdateFrameElements (TGLayoutHints *l);  Update layout hints of frame elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGXYLayout.h>. Inheritance diagram for TGXYLayoutHints:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ERubberFlag. enum TGXYLayoutHints::ERubberFlag. EnumeratorkLRubberX ; kLRubberY ; kLRubberW ; kLRubberH . Definition at line 30 of file TGXYLayout.h. Constructor & Destructor Documentation. ◆ TGXYLayoutHints(). TGXYLayoutHints::TGXYLayoutHints ; (; Double_t ; x, . Double_t ; y, . Double_t ; w, . Double_t ; h, . UInt_t ; rubberFlag = kLRubberX | kLRubberY . ). Constructor. ; The x, y, w and h define the position of the widget in its frame and the size",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGXYLayoutHints.html:14184,inherit,inherited,14184,doc/master/classTGXYLayoutHints.html,https://root.cern,https://root.cern/doc/master/classTGXYLayoutHints.html,2,['inherit'],['inherited']
Modifiability,"ass ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Attributes; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TVirtualX.h>. Inheritance diagram for TVirtualX:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualX.html:47541,inherit,inherited,47541,doc/master/classTVirtualX.html,https://root.cern,https://root.cern/doc/master/classTVirtualX.html,1,['inherit'],['inherited']
Modifiability,"ass ();  test multiclass classification ;  ; virtual void TestRegression (Double_t &bias, Double_t &biasT, Double_t &dev, Double_t &devT, Double_t &rms, Double_t &rmsT, Double_t &mInf, Double_t &mInfT, Double_t &corr, Types::ETreeType type);  calculate <sum-of-deviation-squared> of regression output versus ""true"" value from test sample ;  ; bool TrainingEnded ();  ; void TrainMethod ();  ; virtual void WriteEvaluationHistosToFile (Types::ETreeType treetype);  writes all MVA evaluation histograms to file ;  ; void WriteStateToFile () const;  write options and weights to file note that each one text file for the main configuration information and one ROOT file for ROOT objects are created ;  ;  Public Member Functions inherited from TMVA::IMethod;  IMethod ();  ; virtual ~IMethod ();  ; virtual Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets)=0;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Configurable;  Configurable (const TString &theOption="""");  constructor ;  ; virtual ~Configurable ();  default destructor ;  ; void AddOptionsXMLTo (void *parent) const;  write options to XML file ;  ; template<class T > ; void AddPreDefVal (const T &);  ; template<class T > ; void AddPreDefVal (const TString &optname, const T &);  ; void CheckForUnusedOptions () const;  checks for unused options in option string ;  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc="""");  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T *&ref, Int_t size, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T *&ref, Int_t size, const TString &name, const TString &desc="""");  ; const char * GetConfigDescription () const;  ; const char * GetConfigName () const;  ; const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html:13339,inherit,inherited,13339,doc/master/classTMVA_1_1MethodANNBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html,1,['inherit'],['inherited']
Modifiability,"ass * TRandom::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRandom::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRandom::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 59 of file TRandom.h. ◆ DeclFileName(). static const char * TRandom::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 59 of file TRandom.h. ◆ Exp(). Double_t TRandom::Exp ; (; Double_t ; tau). virtual . Returns an exponential deviate. ; exp( -t/tau ) . Definition at line 252 of file TRandom.cxx. ◆ Gaus(). Double_t TRandom::Gaus ; (; Double_t ; mean = 0, . Double_t ; sigma = 1 . ). virtual . Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigma. ; Uses the Acceptance-complement ratio from W. Hoermann and G. Derflinger This is one of the fastest existing method for generating normal random variables. It is a factor 2/3 faster than the polar (Box-Muller) method used in the previous version of TRandom::Gaus. The speed is comparable to the Ziggurat method (from Marsaglia) implemented for example in GSL and available in the MathMore library.; REFERENCE: - W. Hoermann and G. Derflinger (1990): The ACR Method for generating normal random variables, OR Spektrum 12 (1990), 181-185.; Implementation taken from UNURAN (c) 2000 W. Hoermann & J. Leydold, Institut f. Statistik, WU Wien ; Definition at line 275 of file TRandom.cxx. ◆ GetSeed(). UInt_t TRandom::GetSeed ; (; ); const. virtual . Get the random generator seed. ; WarningMight not be the initial seed!; Note that this function returns the given seed only when using as random generator engine TRandom itself, which is an LCG generator and it has as seed (state) only one 32 bit word. In case of the other generators GetSeed will return one of the state elements and not the given seed. See the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom.html:27225,variab,variables,27225,doc/master/classTRandom.html,https://root.cern,https://root.cern/doc/master/classTRandom.html,1,['variab'],['variables']
Modifiability,"ass *cl);  Provide list of editors for base-classes. ;  ; virtual void AddExtraTab (TGedSubFrame *sf);  Adds tab container to list of extra tabs. ;  ;  ClassDefOverride (TGedFrame, 0);  ; virtual TGVerticalFrame * CreateEditorTabSubFrame (const char *name);  Create a vertical frame to be used by 'owner' in extra tab 'name'. ;  ; Option_t * GetDrawOption () const override;  Get draw options of the selected object. ;  ; TList * GetExtraTabs ();  ; TGedEditor * GetGedEditor ();  ; TClass * GetModelClass ();  ; Int_t GetPriority ();  ; virtual void Refresh (TObject *model);  Refresh the GUI info about the object attributes. ;  ; void SetDrawOption (Option_t *option="""") override;  Set drawing option for object. ;  ; virtual void SetGedEditor (TGedEditor *ed);  ; void SetModelClass (TClass *mcl);  ; virtual void Update ();  Update the current pad when an attribute is changed via GUI. ;  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () const override;  std::cout << fWi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveParamListEditor.html:2915,inherit,inherited,2915,doc/master/classTEveParamListEditor.html,https://root.cern,https://root.cern/doc/master/classTEveParamListEditor.html,7,['inherit'],['inherited']
Modifiability,"ass *cl, bool decl, TString &out_filename, TString &out_fsys, TFileSysEntry **fse=0) const;  Common implementation for GetDeclFileName(), GetImplFileName() ;  ; TString MatchFileSysName (TString &filename, TFileSysEntry **fse=0) const;  Find filename in the list of system files; return the system file name and change filename to the file name as included. ;  ; void NormalizePath (TString &path) const;  Remove ""/./"" and collapse ""/subdir/../"" to ""/"". ;  ; void SplitClassIntoDirFile (const TString &clname, TString &dir, TString &filename) const;  Given a class name with a scope, split the class name into directory part and file name: A::B::C becomes module B, filename C. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <THtml.h>. Inheritance diagram for THtml::TFileDefinition:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Class(). static TClass * THtml::TFileDefinition::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * THtml::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileDefinition.html:11104,inherit,inherited,11104,doc/master/classTHtml_1_1TFileDefinition.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileDefinition.html,1,['inherit'],['inherited']
Modifiability,"ass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Private Member Functions; Double_t Quadrax (Float_t dm, Float_t dm1, Float_t dm2, Float_t dm3, Float_t cos1, Float_t cos2, Float_t cos3) const;  quadratic interpolation Revised and checked by Francois Nov, 16th, 2000 Note the beautiful non-spontaneous symmetry breaking ... It was checked that the old routine gave exactly the same answers. ;  . Private Attributes; std::vector< Double_t > fX;  ; std::vector< Double_t > fY;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSpline;  TSpline (const TSpline &);  Copy constructor. ;  ; TSpline & operator= (const TSpline &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TSpline2.html:16654,inherit,inherited,16654,doc/master/classTMVA_1_1TSpline2.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TSpline2.html,1,['inherit'],['inherited']
Modifiability,"ass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Private Attributes; RooListProxy _actualVars;  ; std::vector< RooFit::SuperFloat > _coefficients;  ; RooArgSet * _nset;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinearCombination.html:47989,inherit,inherited,47989,doc/master/classRooLinearCombination.html,https://root.cern,https://root.cern/doc/master/classRooLinearCombination.html,3,['inherit'],['inherited']
Modifiability,"ass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions;  TH1 ();  Histogram default constructor. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Constructor for variable bin size histograms using an input array of type double. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Constructor for variable bin size histograms using an input array of type float. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Constructor for fix bin size histograms. ;  ; virtual Int_t AutoP2FindLimits (Double_t min, Double_t max);  Buffer-based estimate of the histogram range using the power of 2 algorithm. ;  ; Int_t AxisChoice (Option_t *axis) const;  Choose an axis according to ""axis"". ;  ; virtual Int_t BufferFill (Double_t x, Double_t w);  accumulate arguments in buffer. ;  ; virtual void DoFillN (Int_t ntimes, const Double_t *x, const Double_t *w, Int_t stride=1);  Internal method to fill histogram content from a vector called directly by TH1::BufferEmpty. ;  ; virtual Double_t DoIntegral (Int_t ix1, Int_t ix2, Int_t iy1, Int_t iy2, Int_t iz1, Int_t iz2, Double_t &err, Option_t *opt, Bool_t doerr=kFALSE) const;  Internal function compute integral and optionally the error between the limits specified by the bin number values wor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:63359,variab,variable,63359,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['variab'],['variable']
Modifiability,ass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGButtonGroup; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGGroupFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHButtonGroup.html:26201,inherit,inherited,26201,doc/master/classTGHButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGHButtonGroup.html,4,['inherit'],['inherited']
Modifiability,"ass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void GetHelpMessage () const;  ;  Protected Member Functions inherited from TMVA::PyMethodBase; void PyRunString (TString code, TString errorMessage=""Failed to run python code"", int start=256);  Execute Python code from string. ;  ;  Protected Member Functions inherited from TMVA::MethodBase; virtual std::vector< Double_t > GetDataMvaValues (DataSet *data=nullptr, Long64_t firstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the given Data type ;  ; const TString & GetInternalVarName (Int_t ivar) const;  ; const TString & GetOriginalVarName (Int_t ivar) const;  ; const TString & GetWeightFileDir () const;  ; Bool_t HasTrainingTree () const;  ; Bool_t Help () const;  ; Bool_t IgnoreEventsWithNegWeightsInTraining () const;  ; Bool_t IsConstructedFromWeightFile () const;  ; Bool_t IsNormalised () const;  ; virtual void MakeClassSpecific (std::ostream &, const TString &="""") const;  ; virtual void MakeClassSpecificHeader (std::ostream &, const TString &="""") const;  ; void NoErrorCalc (Double_t *const err, Double_t *const errUpper);  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPyAdaBoost.html:25002,inherit,inherited,25002,doc/master/classTMVA_1_1MethodPyAdaBoost.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPyAdaBoost.html,1,['inherit'],['inherited']
Modifiability,"ass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TX11GLManager (const TX11GLManager &);  ; Bool_t CreateGLPixmap (TGLContext_t &);  Create GL pixmap. ;  ; TX11GLManager & operator= (const TX11GLManager &);  . Private Attributes; TX11GLImpl * fPimpl;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TX11GL.h>. Inheritance diagram for TX11GLManager",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTX11GLManager.html:12883,inherit,inherited,12883,doc/master/classTX11GLManager.html,https://root.cern,https://root.cern/doc/master/classTX11GLManager.html,1,['inherit'],['inherited']
Modifiability,"ass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; double fConfidenceLevel;  confidence level ;  ; double fLowerLimit;  lower interval limit ;  ; RooArgSet fParameters;  set containing the parameter of interest ;  ; double fUpperLimit;  upper interval limit ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/SimpleInterval.h>. Inheritance diagram ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SimpleInterval.html:12045,inherit,inherited,12045,doc/master/classRooStats_1_1SimpleInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SimpleInterval.html,1,['inherit'],['inherited']
Modifiability,"ass Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooIntegrator1D, is parameters and capabilities with RooNumIntFactory. RooIntegrator1D(); Default constructor. RooIntegrator1D(const RooAbsFunc& function, SummationRule rule,				 Int_t maxSteps, Double_t eps); Construct integrator on given function binding, using specified summation; rule, maximum number of steps and conversion tolerance. The integration; limits are taken from the function binding. RooIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, RooIntegrator1D::SummationRule rule = Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Construct integrator on given function binding for given range,; using specified summation rule, maximum number of steps and; conversion tolerance. The integration limits are taken from the; function binding. RooIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); Construct integrator on given function binding, using specified; configuration object. The integration limits are taken from the; function binding. RooIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax,				const RooNumIntConfig& config); Construct integrator on given function binding, using specified; configuration object and integration range. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Clone integrator with new function binding and configuration. Needed by RooNumIntFactory. Bool_t initialize(); Initialize the integrator. ~RooIntegrator1D(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Bool_t checkLimits() const; Check that our integration range is finite and otherwise return kFALSE.; Update the limits from the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooIntegrator1D.html:8742,config,config,8742,root/html526/RooIntegrator1D.html,https://root.cern,https://root.cern/root/html526/RooIntegrator1D.html,2,['config'],"['config', 'configuration']"
Modifiability,"ass Func>; 674struct ObjFuncTrait {; 675 static unsigned int NCalls(const Func & ) { return 0; }; 676 static int Type(const Func & ) { return -1; }; 677 static bool IsGrad() { return false; }; 678};; 679template<>; 680struct ObjFuncTrait<ROOT::Math::FitMethodFunction> {; 681 static unsigned int NCalls(const ROOT::Math::FitMethodFunction & f ) { return f.NCalls(); }; 682 static int Type(const ROOT::Math::FitMethodFunction & f) { return f.Type(); }; 683 static bool IsGrad() { return false; }; 684};; 685template<>; 686struct ObjFuncTrait<ROOT::Math::FitMethodGradFunction> {; 687 static unsigned int NCalls(const ROOT::Math::FitMethodGradFunction & f ) { return f.NCalls(); }; 688 static int Type(const ROOT::Math::FitMethodGradFunction & f) { return f.Type(); }; 689 static bool IsGrad() { return true; }; 690};; 691 ; 692bool Fitter::DoInitMinimizer() {; 693 //initialize minimizer by creating it; 694 // and set there the objective function; 695 // obj function must have been set before; 696 auto objFunction = ObjFunction();; 697 if (!objFunction) {; 698 MATH_ERROR_MSG(""Fitter::DoInitMinimizer"",""Objective function has not been set"");; 699 return false;; 700 }; 701 ; 702 // check configuration and objective function; 703 if ( fConfig.ParamsSettings().size() != objFunction->NDim() ) {; 704 MATH_ERROR_MSG(""Fitter::DoInitMinimizer"",""wrong function dimension or wrong size for FitConfig"");; 705 return false;; 706 }; 707 ; 708 // create first Minimizer; 709 // using an auto_Ptr will delete the previous existing one; 710 fMinimizer = std::shared_ptr<ROOT::Math::Minimizer> ( fConfig.CreateMinimizer() );; 711 if (fMinimizer == nullptr) {; 712 MATH_ERROR_MSG(""Fitter::DoInitMinimizer"",""Minimizer cannot be created"");; 713 return false;; 714 }; 715 ; 716 // in case of gradient function one needs to downcast the pointer; 717 if (fUseGradient) {; 718 const ROOT::Math::IMultiGradFunction * gradfcn = dynamic_cast<const ROOT::Math::IMultiGradFunction *> (objFunction );; 719 if (!gradfcn) {; 72",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8cxx_source.html:27076,config,configuration,27076,doc/master/Fitter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8cxx_source.html,1,['config'],['configuration']
Modifiability,"ass Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const. class ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const float&operator[](int j) const; ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_float_2_2_-p1MatRepSym_float_2_____SMatrixRow_const.html:1661,Inherit,Inheritance,1661,root/html534/ROOT__Math__SMatrix_float_2_2_-p1MatRepSym_float_2_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_float_2_2_-p1MatRepSym_float_2_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const. class ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const float&operator[](int j) const; ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_float_3_3_-p1MatRepSym_float_3_____SMatrixRow_const.html:1661,Inherit,Inheritance,1661,root/html534/ROOT__Math__SMatrix_float_3_3_-p1MatRepSym_float_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_float_3_3_-p1MatRepSym_float_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const. class ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const float&operator[](int j) const; ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_float_4_4_-p1MatRepSym_float_4_____SMatrixRow_const.html:1661,Inherit,Inheritance,1661,root/html534/ROOT__Math__SMatrix_float_4_4_-p1MatRepSym_float_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_float_4_4_-p1MatRepSym_float_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const. class ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const float&operator[](int j) const; ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_float_5_5_-p1MatRepSym_float_5_____SMatrixRow_const.html:1661,Inherit,Inheritance,1661,root/html534/ROOT__Math__SMatrix_float_5_5_-p1MatRepSym_float_5_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_float_5_5_-p1MatRepSym_float_5_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const. class ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const float&operator[](int j) const; ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_float_6_6_-p1MatRepSym_float_6_____SMatrixRow_const.html:1661,Inherit,Inheritance,1661,root/html534/ROOT__Math__SMatrix_float_6_6_-p1MatRepSym_float_6_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_float_6_6_-p1MatRepSym_float_6_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » SMATRIX; » ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const. class ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const. SMatrix: a generic fixed size D1 x D2 Matrix class.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); const float&operator[](int j) const; ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__SMatrix_float_7_7_-p1MatRepSym_float_7_____SMatrixRow_const.html:1661,Inherit,Inheritance,1661,root/html534/ROOT__Math__SMatrix_float_7_7_-p1MatRepSym_float_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__SMatrix_float_7_7_-p1MatRepSym_float_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TMVA; » TMVA::Tools. class TMVA::Tools. Function Members (Methods); public:. ~Tools(); voidAddAttr(void* node, const char* attrname, const char* value); void*AddChild(void* parent, const char* childname, const char* content = 0, bool isRootNode = false); Bool_tAddComment(void* node, const char* comment); Bool_tAddRawLine(void* node, const char* raw); vector<TMatrixDSym*>*CalcCovarianceMatrices(const vector<TMVA::Event*,allocator<TMVA::Event*> >& events, Int_t maxCls, TMVA::VariableTransformBase* transformBase = 0); vector<TMatrixDSym*>*CalcCovarianceMatrices(const vector<const TMVA::Event*,allocator<const TMVA::Event*> >& events, Int_t maxCls, TMVA::VariableTransformBase* transformBase = 0); Bool_tCheckForSilentOption(const TString&) const; Bool_tCheckForVerboseOption(const TString&) const; Bool_tCheckSplines(const TH1*, const TSpline*); const TString&Color(const TString&); voidComputeStat(const vector<TMVA::Event*>&, vector<Float_t>*, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Int_t signalClass, Bool_t norm = kFALSE); Double_tComputeVariance(Double_t sumx2, Double_t sumx, Int_t nx); Bool_tContainsRegularExpression(const TString& s); static voidDestroyInstance(); voidFormattedOutput(const TMatrixD&, const vector<TString>&, TMVA::MsgLogger& logger); voidFormattedOutput(const TMatrixD&, const vector<TString>& vert, const vector<TString>& horiz, TMVA::MsgLogger& logger); voidFormattedOutput(const vector<Double_t>&, const vector<TString>&, const TString titleVars, const TString titleValues, TMVA::MsgLogger& logger, TString format = ""%+1.3f""); void*GetChild(void* parent, const char* childname = 0); const char*GetContent(void* node); const TMatrixD*GetCorrelationMatrix(const TMatrixD* covMat); Double_tGetCorrelationRatio(const TH2F&); TH1*GetCumulativeDist(TH1* h); Int_tGetIndexMax",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Tools.html:708,Variab,VariableTransformBase,708,root/html534/TMVA__Tools.html,https://root.cern,https://root.cern/root/html534/TMVA__Tools.html,2,['Variab'],['VariableTransformBase']
Modifiability,"ass Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TMVA; » TMVA; » TMVA::BDTEventWrapper. class TMVA::BDTEventWrapper. Function Members (Methods); public:. ~BDTEventWrapper(); TMVA::BDTEventWrapperBDTEventWrapper(const TMVA::Event*); TMVA::BDTEventWrapperBDTEventWrapper(const TMVA::BDTEventWrapper&); Double_tGetCumulativeWeight(Bool_t type) const; Double_tGetVal() const; const TMVA::Event*operator*() const; Bool_toperator<(const TMVA::BDTEventWrapper& other) const; TMVA::BDTEventWrapper&operator=(const TMVA::BDTEventWrapper&); voidSetCumulativeWeight(Bool_t type, Double_t weight); static voidSetVarIndex(Int_t iVar). private:. static Int_t&GetVarIndex(). Data Members; private:. Double_tfBkgWeightcumulative background weight for splitting; const TMVA::Event*fEventpointer to the event; Double_tfSigWeightsame for the signal weights. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BDTEventWrapper(const Event* e); constuctor. ~BDTEventWrapper(); destructor. void SetCumulativeWeight(Bool_t type, Double_t weight); Set the accumulated weight, for sorted signal/background events. * @param fType - true for signal, false for background; * @param weight - the total weight. Double_t GetCumulativeWeight(Bool_t type) const; Get the accumulated weight. Bool_t operator<(const TMVA::BDTEventWrapper& other) const. BDTEventWrapper( const Event* ). void SetVarIndex(Int_t iVar); Set the index of the variable to compare on. * @param iVar - index of the variable in fEvent to use. { if (iVar >= 0) GetVarIndex() = iVar; }. Double_t GetVal() const; Return the value of variable fVarIndex for this event. * @return value of variable fVarIndex for this event. { return fEvent->GetValue(GetVarIndex()); }. const Event* operator*() const; { return fEvent; }. Int_t& GetVarIndex(); This is a workaround for OSx where static thread_local data mem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__BDTEventWrapper.html:1044,Inherit,Inheritance,1044,root/html604/TMVA__BDTEventWrapper.html,https://root.cern,https://root.cern/root/html604/TMVA__BDTEventWrapper.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass constructor is called using; New(). If not, return a pointer to the correct memory location.; This explicitly to deal with TObject classes that allocate memory; which will be reset (but not deallocated) in their Clear(); functions. void Clear(Option_t* option = """"); Clear the clones array. Only use this routine when your objects don't; allocate memory since it will not call the object dtors.; However, if the class in the TClonesArray implements the function; Clear(Option_t *option) and if option = ""C"" the function Clear(); is called for all objects in the array. In the function Clear(), one; can delete objects or dynamic arrays allocated in the class.; This procedure is much faster than calling TClonesArray::Delete().; When the option starts with ""C+"", eg ""C+xyz"" the objects in the array; are in turn cleared with the option ""xyz"". void Delete(Option_t* option = """"); Clear the clones array. Use this routine when your objects allocate; memory (e.g. objects inheriting from TNamed or containing TStrings; allocate memory). If not you better use Clear() since if is faster. void Expand(Int_t newSize); Expand or shrink the array to newSize elements. void ExpandCreate(Int_t n); Expand or shrink the array to n elements and create the clone; objects by calling their default ctor. If n is less than the current size; the array is shrunk and the allocated space is freed.; This routine is typically used to create a clonesarray into which; one can directly copy object data without going via the; ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly). void ExpandCreateFast(Int_t n); Expand or shrink the array to n elements and create the clone; objects by calling their default ctor. If n is less than the current size; the array is shrinked but the allocated space is _not_ freed.; This routine is typically used to create a clonesarray into which; one can directly copy object data without going via the; ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly).; This",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TClonesArray.html:19966,inherit,inheriting,19966,root/html532/TClonesArray.html,https://root.cern,https://root.cern/root/html532/TClonesArray.html,8,['inherit'],['inheriting']
Modifiability,"ass for implementing GSL multi-root finders not using derivatives. ; Definition at line 155 of file GSLMultiRootSolver.h. Public Member Functions;  GSLMultiRootSolver (const gsl_multiroot_fsolver_type *type, int n);  Constructor from type and simension of system (number of functions) ;  ;  GSLMultiRootSolver (const GSLMultiRootSolver &)=delete;  ;  GSLMultiRootSolver (GSLMultiRootSolver &&)=delete;  ;  ~GSLMultiRootSolver () override;  Destructor (no operations) ;  ; void CreateSolver (const gsl_multiroot_fsolver_type *type, unsigned int n);  ; gsl_vector * GetDx () const override;  return function steps ;  ; gsl_vector * GetF () const override;  return function values ;  ; gsl_vector * GetRoot () const override;  solution values at the current iteration ;  ; int Iterate () override;  perform an iteration ;  ; const std::string & Name () const override;  return name ;  ; GSLMultiRootSolver & operator= (const GSLMultiRootSolver &rhs)=delete;  ; GSLMultiRootSolver & operator= (GSLMultiRootSolver &&rhs)=delete;  ; int SetSolver (const std::vector< ROOT::Math::IMultiGenFunction * > &funcVec, const double *x) override;  set the solver parameters ;  ;  Public Member Functions inherited from ROOT::Math::GSLMultiRootBaseSolver; virtual ~GSLMultiRootBaseSolver ();  virtual Destructor ;  ; const double * Dx () const;  return function steps ;  ; const double * FVal () const;  return function values ;  ; bool InitSolver (const std::vector< ROOT::Math::IMultiGenFunction * > &funcVec, const double *x);  init the solver with function list and initial values ;  ; int TestDelta (double absTol, double relTol) const;  test using abs and relative tolerance |dx| < absTol + relTol*|x| for every component ;  ; int TestResidual (double absTol) const;  test using abs tolerance Sum |f|_i < absTol ;  ; const double * X () const;  solution values at the current iteration ;  . Private Attributes; GSLMultiRootFunctionWrapper fFunctions;  ; std::string fName;  ; gsl_multiroot_fsolver * fSolver;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootSolver.html:1589,inherit,inherited,1589,doc/master/classROOT_1_1Math_1_1GSLMultiRootSolver.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootSolver.html,1,['inherit'],['inherited']
Modifiability,"ass()) {; 364 bool hasCustomStreamer = false;; 365 bool canSelfReference = CanSelfReference(fBranchClass);; 366 if (fBranchClass.GetClass()->IsTObject()) {; 367 if (canSelfReference) SetBit(kBranchObject);; 368 hasCustomStreamer = (!fBranchClass.GetClass()->GetCollectionProxy() && fBranchClass.GetClass()->HasCustomStreamerMember());; 369 } else {; 370 if (canSelfReference) SetBit(kBranchAny);; 371 hasCustomStreamer = !fBranchClass.GetClass()->GetCollectionProxy() && (fBranchClass.GetClass()->GetStreamer() != nullptr || fBranchClass.GetClass()->HasCustomStreamerMember());; 372 }; 373 if (hasCustomStreamer) {; 374 fType = -1;; 375 }; 376 }; 377 } else {; 378 // -- We are a sub-branch of a split object.; 379 TStreamerElement* element = sinfo->GetElement(id);; 380 if ((fStreamerType == TVirtualStreamerInfo::kObject) || (fStreamerType == TVirtualStreamerInfo::kBase) || (fStreamerType == TVirtualStreamerInfo::kTNamed) || (fStreamerType == TVirtualStreamerInfo::kTObject) || (fStreamerType == TVirtualStreamerInfo::kObjectp) || (fStreamerType == TVirtualStreamerInfo::kObjectP)) {; 381 // -- If we are an object data member which inherits from TObject,; 382 // flag it so that later during i/o we will register the object; 383 // with the buffer so that pointers are handled correctly.; 384 if (CanSelfReference(fBranchClass)) {; 385 if (fBranchClass.GetClass()->IsTObject()) {; 386 SetBit(kBranchObject);; 387 } else {; 388 SetBit(kBranchAny);; 389 }; 390 }; 391 }; 392 if (element->IsA() == TStreamerBasicPointer::Class()) {; 393 // -- Fixup title with counter if we are a varying length array data member.; 394 TStreamerBasicPointer *bp = (TStreamerBasicPointer *)element;; 395 TString countname;; 396 countname = bname;; 397 Ssiz_t dot = countname.Last('.');; 398 if (dot>=0) {; 399 countname.Remove(dot+1);; 400 } else {; 401 countname = """";; 402 }; 403 countname += bp->GetCountName();; 404 brOfCounter = (TBranchElement *)fTree->GetBranch(countname);; 405 countname.Form(""%s[%s]"",name.Da",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:12706,inherit,inherits,12706,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"ass*IsA() const; Bool_tIsLite() const; RooStats::ProofConfig&operator=(const RooStats::ProofConfig&); RooStats::ProofConfigProofConfig(const RooStats::ProofConfig&); RooStats::ProofConfigProofConfig(RooWorkspace& w, Int_t nExperiments = 0, const char* host = """", Bool_t showGui = kFALSE); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. TStringfHostProof hostname. Use empty string (ie """") for proof-lite. Can also handle options like ""workers=2"" to run on two nodes.; Bool_tfLiteWhether we have a Proof Lite session; Int_tfNExperimentsnumber of experiments. This is sometimes called ""events"" in proof; ""experiments"" in RooStudyManager.; Bool_tfShowGuiWhether to show the Proof Progress window.; RooWorkspace&fWorkspaceworkspace that is to be used with the RooStudyManager. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProofConfig(RooWorkspace& w, Int_t nExperiments = 0, const char* host = """", Bool_t showGui = kFALSE); configure proof with number of experiments and host session; in case of Prooflite, it is better to define the number of workers as ""worker=n"" in the host string. virtual ~ProofConfig(). CloseProof(). RooWorkspace& GetWorkspace(void); returns fWorkspace. { return fWorkspace; }. const char* GetHost(void); returns fHost. { return fHost; }. Int_t GetNExperiments(void); return fNExperiments. { return fNExperiments; }. Bool_t GetShowGui(void); return fShowGui. { return fShowGui; }. Bool_t IsLite() const; return true if it is a Lite session (ProofLite). { return fLite; }. » Author: Kyle Cranmer and Sven Kreiss July 2010 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-30 14:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__ProofConfig.html:2129,config,configure,2129,root/html602/RooStats__ProofConfig.html,https://root.cern,https://root.cern/root/html602/RooStats__ProofConfig.html,2,['config'],['configure']
Modifiability,"ass*IsA() const; Bool_tIsLite() const; RooStats::ProofConfig&operator=(const RooStats::ProofConfig&); RooStats::ProofConfigProofConfig(const RooStats::ProofConfig&); RooStats::ProofConfigProofConfig(RooWorkspace& w, Int_t nExperiments = 0, const char* host = """", Bool_t showGui = kFALSE); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. TStringfHostProof hostname. Use empty string (ie """") for proof-lite. Can also handle options like ""workers=2"" to run on two nodes.; Bool_tfLiteWhether we have a Proof Lite session; Int_tfNExperimentsnumber of experiments. This is sometimes called ""events"" in proof; ""experiments"" in RooStudyManager.; Bool_tfShowGuiWhether to show the Proof Progress window.; RooWorkspace&fWorkspaceworkspace that is to be used with the RooStudyManager. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProofConfig(RooWorkspace& w, Int_t nExperiments = 0, const char* host = """", Bool_t showGui = kFALSE); configure proof with number of experiments and host session; in case of Prooflite, it is better to define the number of workers as ""worker=n"" in the host string. virtual ~ProofConfig(). CloseProof(). RooWorkspace& GetWorkspace(void); returns fWorkspace. { return fWorkspace; }. const char* GetHost(void); returns fHost. { return fHost; }. Int_t GetNExperiments(void); return fNExperiments. { return fNExperiments; }. Bool_t GetShowGui(void); return fShowGui. { return fShowGui; }. Bool_t IsLite() const; return true if it is a Lite session (ProofLite). { return fLite; }. » Author: Kyle Cranmer and Sven Kreiss July 2010 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-09-08 17:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__ProofConfig.html:2129,config,configure,2129,root/html604/RooStats__ProofConfig.html,https://root.cern,https://root.cern/root/html604/RooStats__ProofConfig.html,2,['config'],['configure']
Modifiability,"ass*IsA() const; const double&operator()(Int_t i) const; double&operator()(Int_t i); voidoperator*=(double val); voidoperator*=(const TMatrixTDiag_const<double>& d); voidoperator+=(double val); voidoperator+=(const TMatrixTDiag_const<double>& d); voidoperator=(double val); voidoperator=(const TMatrixTDiag_const<double>& d); TMatrixTDiag<double>&operator=(const TMatrixTDiag<double>& d); voidoperator=(const TVectorT<double>& vec); const double&operator[](Int_t i) const; double&operator[](Int_t i); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. Int_tTMatrixTDiag_const<double>::fIncif ptr=@a[i,i], then ptr+inc = @a[i+1,i+1]; TMatrixTBase<double>*TMatrixTDiag_const<double>::fMatrixthe matrix I am the diagonal of; Int_tTMatrixTDiag_const<double>::fNdiagnumber of diag elems, min(nrows,ncols); const double*TMatrixTDiag_const<double>::fPtrpointer to the a[0,0]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. Element & operator()(Int_t i). const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Element & operator[](Int_t i); { return (*( TMatrixTRow<Element> *)this)(i); }. void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). » Last changed: root/matrix:$Id: TMatrixTUtils.h 36047 2010-10-04 06:43:15Z brun $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTDiag_double_.html:2326,Inherit,Inheritance,2326,root/html532/TMatrixTDiag_double_.html,https://root.cern,https://root.cern/root/html532/TMatrixTDiag_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass*IsA() const; const float&operator()(Int_t i) const; float&operator()(Int_t i); voidoperator*=(float val); voidoperator*=(const TMatrixTDiag_const<float>& d); voidoperator+=(float val); voidoperator+=(const TMatrixTDiag_const<float>& d); voidoperator=(float val); voidoperator=(const TMatrixTDiag_const<float>& d); TMatrixTDiag<float>&operator=(const TMatrixTDiag<float>& d); voidoperator=(const TVectorT<float>& vec); const float&operator[](Int_t i) const; float&operator[](Int_t i); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Int_tTMatrixTDiag_const<float>::fIncif ptr=@a[i,i], then ptr+inc = @a[i+1,i+1]; TMatrixTBase<float>*TMatrixTDiag_const<float>::fMatrixthe matrix I am the diagonal of; Int_tTMatrixTDiag_const<float>::fNdiagnumber of diag elems, min(nrows,ncols); const float*TMatrixTDiag_const<float>::fPtrpointer to the a[0,0]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. Element & operator()(Int_t i). const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Element & operator[](Int_t i); { return (*( TMatrixTRow<Element> *)this)(i); }. void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTDiag_float_.html:2308,Inherit,Inheritance,2308,root/html534/TMatrixTDiag_float_.html,https://root.cern,https://root.cern/root/html534/TMatrixTDiag_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass*IsA() const; doubleMag() const; doubleMag2() const; TEveVector2T<double>&Mult(const TEveVector2T<double>& a, double af); voidNegateXY(); voidNormalize(double length = 1); const double*operator const double*() const; double*operator double*(); TEveVector2T<double>&operator*=(double s); TEveVector2T<double>&operator+=(const TEveVector2T<double>& v); TEveVector2T<double>&operator-=(const TEveVector2T<double>& v); TEveVector2T<double>&operator=(const TEveVector2T<double>&); double&operator[](Int_t idx); doubleoperator[](Int_t idx) const; doublePhi() const; voidSet(const Float_t* v); voidSet(const Double_t* v); voidSet(double x, double y); voidShowMembers(TMemberInspector& insp); doubleSquareDistance(const TEveVector2T<double>& b) const; voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); TEveVector2T<double>&Sub(const TEveVector2T<double>& p, const TEveVector2T<double>& q). Data Members; public:. doublefX; doublefYComponents of the point. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; template<typename TT> void TEveVector2T<TT> Normalize(double length = 1); Normalize the vector to length if current length is non-zero. template<typename TT> void TEveVector2T<TT> Dump() const; Dump to stdout as ""(x, y)\n"". TT TEveVector2T<TT> Phi() const. TT TEveVector2T<TT> Distance(const TEveVector2T<double>& b) const. TT TEveVector2T<TT> SquareDistance(const TEveVector2T<double>& b) const. TT TEveVector2T<TT> Dot(const TEveVector2T<double>& a) const. TT TEveVector2T<TT> Cross(const TEveVector2T<double>& a) const. TEveVector2T<TT>& TEveVector2T<TT> Sub(const TEveVector2T<double>& p, const TEveVector2T<double>& q). TEveVector2T<TT>& TEveVector2T<TT> Mult(const TEveVector2T<double>& a, double af). const TT* Arr() const; { return &fX; }. TT* Arr(); { return &fX; }. TEveVectorT& operator*=(double s); { fX *= s; fY *= s; fZ *= s; return *this; }. TEveVectorT& operator+=(const TEveVector2T<double>& v); { fX += v.fX; fY += v.fY; fZ += v.fZ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveVector2T_double_.html:1878,Inherit,Inheritance,1878,root/html532/TEveVector2T_double_.html,https://root.cern,https://root.cern/root/html532/TEveVector2T_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Double_tfLimPHighest track p in the container.; Double_tfLimPtHighest track pT in the container.; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Double_tfMaxPMaximum track pfor display selection.; Double_tfMaxPtMaximum track pTfor display selection.; Double_tfMinPMinimum track pfor display selection.; Double_tfMinPtMinimum track pTfor display selection.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; TEveTrackPropagator*fPropagatorBasic track rendering parameters, not enforced to elements.; Bool_tfRecurseRecurse when propagating marker/line/etc attributes to tracks.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrLineRender track as line.;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTrackList.html:21722,variab,variable,21722,root/html602/TEveTrackList.html,https://root.cern,https://root.cern/root/html602/TEveTrackList.html,4,['variab'],['variable']
Modifiability,"ass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; TEveCompositeFrame*TEveWindow::fEveFrame; TGLViewer*fGLViewer; TGFrame*fGLViewerFrame; TGFrame*TEveWindowFrame::fGUIFrame; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTEveWindow::fShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Pixel_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveViewer.html:20969,variab,variable,20969,root/html528/TEveViewer.html,https://root.cern,https://root.cern/root/html528/TEveViewer.html,6,['variab'],['variable']
Modifiability,"ass, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; BoolConfigVec_t fBoolParameters;  ; Color_t fColor;  ; FloatConfigVec_t fFloatParameters;  ; IntConfigVec_t fIntParameters;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attribute",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveParamList.html:32232,inherit,inherited,32232,doc/master/classTEveParamList.html,https://root.cern,https://root.cern/doc/master/classTEveParamList.html,1,['inherit'],['inherited']
Modifiability,"ass, value for each data member and so on. Such structure in some sense similar to XML node and subnodes structure Once it created, it converted to SQL statements, which are submitted to database server. ; Definition at line 88 of file TSQLStructure.h. Public Types; enum  ESQLColumns { ;   kColUnknown = 0; , kColSimple = 1; , kColSimpleArray = 2; , kColParent = 3; , ;   kColObject = 4; , kColObjectArray = 5; , kColNormObject = 6; , kColNormObjectArray = 7; , ;   kColObjectPtr = 8; , kColTString = 9; , kColRawData = 10. };  ; enum  ESQLIdType { kIdTable = 0; , kIdRawTable = 1; , kIdColumn = 2; };  ; enum  ESQLTypes { ;   kSqlObject = 10001; , kSqlPointer = 10002; , kSqlVersion = 10003; , kSqlStreamerInfo = 10004; , ;   kSqlClassStreamer = 10005; , kSqlElement = 10006; , kSqlValue = 10007; , kSqlArray = 10008; , ;   kSqlObjectData = 10009; , kSqlCustomClass = 10010; , kSqlCustomElement = 10011. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSQLStructure ();  ;  ~TSQLStructure () override;  destructor ;  ; void Add (TSQLStructure *child);  Add child structure. ;  ; void AddObjectData (TSQLObjectData *objdata);  add element with pointer to object data ;  ; void AddValue (const char *value, const char *tname=nullptr);  Add child structure as value. ;  ; void AddVersion (const TClass *cl, Int_t version=-100);  add child as version ;  ; void ChangeValueOnly (con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLStructure.html:1467,inherit,inherited,1467,doc/master/classTSQLStructure.html,https://root.cern,https://root.cern/doc/master/classTSQLStructure.html,1,['inherit'],['inherited']
Modifiability,"ass. ;  ; TClass * fNewBaseClass;  pointer to base class ;  ; ClassStreamerFunc_t fStreamerFunc;  pointer to new base class if renamed ;  ; TVirtualStreamerInfo * fStreamerInfo;  Pointer to a wrapper around a custom convertion streamer member function. ;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerBase (const TStreamerBase &)=delete;  ; TStreamerBase & operator= (const TStreamerBase &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerBase.html:16087,inherit,inherited,16087,doc/master/classTStreamerBase.html,https://root.cern,https://root.cern/doc/master/classTStreamerBase.html,1,['inherit'],['inherited']
Modifiability,"ass. Swiches perspective or orthographic camera.; TEveLine An arbitrary polyline with fixed line and marker attributes.; TEveLineEditor Editor for TEveLine class.; TEveLineGL GL-renderer for TEveLine class.; TEveLineProjected Projected replica of a TEveLine.; TEveListTreeItem Special llist-tree-item for Eve.; TEveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD).; TEveMCTrack Monte Carlo track (also used in VSD).; TEveMacro TMacro wrapper (attempting to fix issues with different macro loading and execution schemes).; TEveMagField Abstract interface to magnetic field; TEveMagFieldConst Interface to constant magnetic field.; TEveMagFieldDuo Interface to magnetic field with two different values depending of radius.; TEveManager Eve application manager.; TEveManager::TExceptionHandler Exception handler for Eve exceptions.; TEvePad Internal TEveUtil pad class (sub-class of TPad) overriding handling of updates and 3D-viewers.; TEvePadHolder Exception-safe wrapper for temporary setting of gPad variable.; TEveParamList Eve element to store generic configuration information.; TEveParamList::BoolConfig_t ; TEveParamList::FloatConfig_t ; TEveParamList::IntConfig_t ; TEveParamListEditor GUI editor for TEveParamList.; TEvePathMark Special-point on track: position/momentum reference, daughter creation or decay (also used in VSD).; TEvePointSelector TSelector for direct extraction of point-like data from a Tree.; TEvePointSelectorConsumer Virtual base for classes that can be filled from TTree data via the TEvePointSelector class.; TEvePointSet Set of 3D points with same marker attributes; optionally each point can be assigned an external TRef or a number of integer indices.; TEvePointSetArray Array of TEvePointSet's filled via a common point-source; range of displayed TEvePointSet's can be controlled, based on a separating quantity provided on fill-time by a user.; TEvePointSetArrayEditor Editor for TEvePointSetArray class.; TEvePointSetProjected Projec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:59289,variab,variable,59289,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,1,['variab'],['variable']
Modifiability,"ass.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id: SMatrix.h 30749 2009-10-15 16:33:04Z brun $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html532/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id: SMatrix.h 30749 2009-10-15 16:33:04Z brun $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html532/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id: SMatrix.h 30749 2009-10-15 16:33:04Z brun $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html532/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id: SMatrix.h 30749 2009-10-15 16:33:04Z brun $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html532/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id: SMatrix.h 30749 2009-10-15 16:33:04Z brun $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html532/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id: SMatrix.h 30749 2009-10-15 16:33:04Z brun $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html532/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id: SMatrix.h 30749 2009-10-15 16:33:04Z brun $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html532/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id: SMatrix.h 30749 2009-10-15 16:33:04Z brun $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html532/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass.; The class is template on the scalar type, on the matrix sizes:; D1 = number of rows and D2 = number of columns; amd on the representation storage type.; By default the representation is MatRepStd<T,D1,D2> (standard D1xD2 of type T),; but it can be of type MatRepSym<T,D> for symmetric matrices DxD, where the storage is only; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&); double&operator[](int j); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow& ). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrixRow(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id: SMatrix.h 30749 2009-10-15 16:33:04Z brun $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html:1793,Inherit,Inheritance,1793,root/html532/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ass.cxx:1065; TClass::fDeclFileLineShort_t fDeclFileLineDefinition TClass.h:215; TClass::GetNmethodsInt_t GetNmethods()Return the number of methods of this class Note that in case the list of methods is not yet created,...Definition TClass.cxx:4573; TClass::fIsOffsetStreamerSetstd::atomic< Bool_t > fIsOffsetStreamerSetIndicates whether the ClassInfo is supposed to be available.Definition TClass.h:261; TClass::IgnoreTObjectStreamervoid IgnoreTObjectStreamer(Bool_t ignore=kTRUE)When the class kIgnoreTObjectStreamer bit is set, the automatically generated Streamer will not call ...Definition TClass.cxx:4841; TClass::GetStreamerTClassStreamer * GetStreamer() constReturn the Streamer Class allowing streaming (if any).Definition TClass.cxx:2914; TClass::GetIdMapstatic IdMap_t * GetIdMap()Definition TClass.cxx:469; TClass::SetDeletevoid SetDelete(ROOT::DelFunc_t deleteFunc)Install a new wrapper around 'delete'.Definition TClass.cxx:7001; TClass::AutoBrowsestatic Int_t AutoBrowse(TObject *obj, TBrowser *browser)Browse external object inherited from TObject.Definition TClass.cxx:1966; TClass::GetNewROOT::NewFunc_t GetNew() constReturn the wrapper around new ThisClass().Definition TClass.cxx:7447; TClass::GetBaseClassTClass * GetBaseClass(const char *classname)Return pointer to the base class ""classname"".Definition TClass.cxx:2655; TClass::GetDataMemberOffsetLongptr_t GetDataMemberOffset(const char *membername) constreturn offset for member name.Definition TClass.cxx:3477; TClass::GetNdataInt_t GetNdata()Return the number of data members of this class Note that in case the list of data members is not yet...Definition TClass.cxx:4554; TClass::SetDestructorvoid SetDestructor(ROOT::DesFunc_t destructorFunc)Install a new wrapper around the destructor.Definition TClass.cxx:7017; TClass::PostLoadCheckvirtual void PostLoadCheck()Do the initialization that can only be done after the CINT dictionary has been fully populated and ca...Definition TClass.cxx:5959; TClass::LoadClassInfovoi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:320328,inherit,inherited,320328,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['inherit'],['inherited']
Modifiability,"ass.cxx:1132; TClass::fDeclFileLineShort_t fDeclFileLineDefinition TClass.h:215; TClass::GetNmethodsInt_t GetNmethods()Return the number of methods of this class Note that in case the list of methods is not yet created,...Definition TClass.cxx:4640; TClass::fIsOffsetStreamerSetstd::atomic< Bool_t > fIsOffsetStreamerSetIndicates whether the ClassInfo is supposed to be available.Definition TClass.h:261; TClass::IgnoreTObjectStreamervoid IgnoreTObjectStreamer(Bool_t ignore=kTRUE)When the class kIgnoreTObjectStreamer bit is set, the automatically generated Streamer will not call ...Definition TClass.cxx:4908; TClass::GetStreamerTClassStreamer * GetStreamer() constReturn the Streamer Class allowing streaming (if any).Definition TClass.cxx:2981; TClass::GetIdMapstatic IdMap_t * GetIdMap()Definition TClass.cxx:469; TClass::SetDeletevoid SetDelete(ROOT::DelFunc_t deleteFunc)Install a new wrapper around 'delete'.Definition TClass.cxx:7068; TClass::AutoBrowsestatic Int_t AutoBrowse(TObject *obj, TBrowser *browser)Browse external object inherited from TObject.Definition TClass.cxx:2033; TClass::GetNewROOT::NewFunc_t GetNew() constReturn the wrapper around new ThisClass().Definition TClass.cxx:7514; TClass::GetBaseClassTClass * GetBaseClass(const char *classname)Return pointer to the base class ""classname"".Definition TClass.cxx:2722; TClass::GetDataMemberOffsetLongptr_t GetDataMemberOffset(const char *membername) constreturn offset for member name.Definition TClass.cxx:3544; TClass::GetNdataInt_t GetNdata()Return the number of data members of this class Note that in case the list of data members is not yet...Definition TClass.cxx:4621; TClass::SetDestructorvoid SetDestructor(ROOT::DesFunc_t destructorFunc)Install a new wrapper around the destructor.Definition TClass.cxx:7084; TClass::PostLoadCheckvirtual void PostLoadCheck()Do the initialization that can only be done after the CINT dictionary has been fully populated and ca...Definition TClass.cxx:6026; TClass::LoadClassInfovoi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:322966,inherit,inherited,322966,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['inherit'],['inherited']
Modifiability,"ass::GetMethodWithPrototype to also search the base classes. Int_t GetNdata(); Return the number of data members of this class; Note that in case the list of data members is not yet created, it will be done; by GetListOfDataMembers(). Int_t GetNmethods(); Return the number of methods of this class; Note that in case the list of methods is not yet created, it will be done; by GetListOfMethods().; This will also load/populate the list of methods, to get 'just' the; number of currently loaded methods use:; cl->GetListOfMethods(false)->GetSize();. TVirtualStreamerInfo* GetStreamerInfo(Int_t version = 0) const; returns a pointer to the TVirtualStreamerInfo object for version; If the object does not exist, it is created. Note: There are two special version numbers:. 0: Use the class version from the currently loaded class library.; -1: Assume no class library loaded (emulated class). Warning: If we create a new streamer info, whether or not the build; optimizes is controlled externally to us by a global variable!; Don't call us unless you have set that variable properly; with TStreamer::Optimize()!. TVirtualStreamerInfo* GetStreamerInfoAbstractEmulated(Int_t version = 0) const; For the case where the requestor class is emulated and this class is abstract,; returns a pointer to the TVirtualStreamerInfo object for version with an emulated; representation whether or not the class is loaded. If the object does not exist, it is created. Note: There are two special version numbers:. 0: Use the class version from the currently loaded class library.; -1: Assume no class library loaded (emulated class). Warning: If we create a new streamer info, whether or not the build; optimizes is controlled externally to us by a global variable!; Don't call us unless you have set that variable properly; with TStreamer::Optimize()!. TVirtualStreamerInfo* FindStreamerInfoAbstractEmulated(UInt_t checksum) const; For the case where the requestor class is emulated and this class is abstract,; retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClass.html:45500,variab,variable,45500,root/html602/TClass.html,https://root.cern,https://root.cern/root/html602/TClass.html,8,['variab'],['variable']
Modifiability,"assClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; vector<TEveVector2T<float> >fDebugPoints; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; vector<TEveVector2T<float> >fPoints; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStrin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveBoxProjected.html:20980,variab,variable,20980,root/html528/TEveBoxProjected.html,https://root.cern,https://root.cern/root/html528/TEveBoxProjected.html,6,['variab'],['variable']
Modifiability,"assD<""); Draw inheritance tree for ClassD; Show classes referenced by ClassD; Show all classes referencing ClassD. Draw(""Cla*""); Draw inheritance tree for all classes with name starting with ""Cla""; Show classes referenced by these classes. Draw(""ClassA:ClassB<""); Draw inheritance tree for ClassA; Show all classes referenced by ClassA; Draw inheritance tree for ClassB; Show classes referenced by ClassB; Show all classes referencing ClassB. Example: Draw(""TTree<""); Draw inheritance tree for the Root class TTree; Show all classes referenced by TTree; Show all classes using TTree. By default, only direct inheritance is drawn. Use TClassTree::ShowLinks(option) to show additional references; option = ""H"" to show links to embedded classes; option = ""M"" to show multiple inheritance; option = ""R"" to show pointers to other classes from data members; option = ""C"" to show classes used by the code(implementation) of a class. The following picture is produced directly by: TClassTree ct(""ct"",""*TH1""); TClassTreeDraw inheritance tree and their relations for a list of classes.Definition TClassTree.h:22; It shows all the classes derived from the base class TH1. The TClassTree class uses the services of the class TPaveClass to show the class names. By clicking with the right mouse button in one TPaveClass object, one can invoke the following functions of TClassTree:; ShowLinks(option) with by default option = ""HMR""; Draw(classes). By default the class drawn is the one being pointed; ShowClassesUsedBy(classes) (by default the pointed class); ShowClassesUsing(classes) (by default the pointed class). The following picture has been generated with the following statements TClassTree tc1(""tc1"",""TH1"");; tc1.ShowLinks(""HMR"");. Note that in case of embedded classes or pointers to classes, the corresponding dashed lines or arrows respectively start in the TPaveClass object at an X position reflecting the position in the list of data members. References by data members to other classes are show w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassTree.html:2245,inherit,inheritance,2245,doc/master/classTClassTree.html,https://root.cern,https://root.cern/doc/master/classTClassTree.html,1,['inherit'],['inheritance']
Modifiability,"assDef_StreamerNVirtual_b);  ; virtual Bool_t TranslateCoordinates (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeViewer.html:20022,inherit,inheritance,20022,doc/master/classTTreeViewer.html,https://root.cern,https://root.cern/doc/master/classTTreeViewer.html,1,['inherit'],['inheritance']
Modifiability,"assObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerElement (const TStreamerElement &)=delete;  ; TStreamerElement & operator= (const TStreamerElement &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TStreamerElement::EStatusBits. EnumeratorkHasRange ; kCache ; kRepeat ; kRead ; kWrite ; kDoNotDelete ; kWholeObject ; kWarned . Definition at line 75 of file TStreamerElement.h. ◆ EStatusBitsDupExceptions. enum class TStreamerElement::EStatusBitsDupExceptions. strong . EnumeratorkDoNotDelete ; kHasRange . Definition at line 86 of file TStreamerElement.h. ◆ ESTLtype. enum TStreamerElement::ESTLtype. Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) . EnumeratorkSTL ; kSTLstring ; kSTLvector ; kSTLlist ; kSTLforwardlist ; kSTLdeque ; kSTLmap ; kSTLmultimap ; kSTLset ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerElement.html:15775,inherit,inherited,15775,doc/master/classTStreamerElement.html,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html,2,['inherit'],['inherited']
Modifiability,"assPDG Class ReferenceMonte Carlo » EG. ; Utility class used internally by TDatabasePDG. ; Definition at line 19 of file TParticleClassPDG.h. Public Member Functions;  TParticleClassPDG (const char *name=0);  default constructor ;  ;  ~TParticleClassPDG () override;  destructor, class doesn't own its particles... ;  ; void AddParticle (TObject *p);  ; void Browse (TBrowser *b) override;  browse this particle class ;  ; TObjArray * GetListOfParticles ();  ; Int_t GetNParticles ();  ; TParticlePDG * GetParticle (Int_t i);  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void Print (Option_t *opt="""") const override;  Print the entire information of this kind of particle. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParticleClassPDG.html:1275,inherit,inherited,1275,doc/master/classTParticleClassPDG.html,https://root.cern,https://root.cern/doc/master/classTParticleClassPDG.html,1,['inherit'],['inherited']
Modifiability,"assRef. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » META; » TClassRef. class TClassRef. TClassRef. Reference to a TClass object and intrusive list of other; to thise same TClass object references. Function Members (Methods); public:. TClassRef(); TClassRef(TClass* cl); TClassRef(const char* classname); TClassRef(const TClassRef&); ~TClassRef(); TClass*GetClass() const; const char*GetClassName(); TClass*operator TClass*() const; TClass*operator->() const; TClassRef&operator=(const TClassRef& rhs); TClassRef&operator=(TClass* rhs); voidReset(); voidSetName(const char* new_name). private:. voidAssign(const TClassRef&); voidAssign(TClass*); TClass*InternalGetClass() const. Data Members; private:. stringfClassNameName of referenced class; TClass**fClassPtr! Ptr to the permanent TClass ptr/reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Assign(const TClassRef& ). void Assign(TClass* ). TClass * InternalGetClass() const. TClassRef(); {}. TClassRef(TClass* cl). TClassRef(const char* classname). TClassRef(const TClassRef& ). TClassRef & operator=(const TClassRef& rhs); Inline implementation of operator= to speed the no-op case. TClassRef & operator=(TClass* rhs); Inline implementation of operator= to speed the no-op case. ~TClassRef(); { }. void SetName(const char* new_name). const char * GetClassName(); { return fClassName.c_str(); }. TClass * GetClass() const; { return (fClassPtr && *fClassPtr) ? *fClassPtr : InternalGetClass(); }. void Reset(); { fClassPtr = 0; }. TClass* operator->() const; { return (fClassPtr && *fClassPtr) ? *fClassPtr : InternalGetClass(); }. operator TClass*() const; { return (fClassPtr && *fClassPtr )? *fClassPtr : InternalGetClass(); }. » Author: Philippe Canal 15/03/2005 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TClassRef.html:980,Inherit,Inheritance,980,root/html534/TClassRef.html,https://root.cern,https://root.cern/root/html534/TClassRef.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"assRef fClass;  ! pointer to class ;  ; void ** fObjAddress;  ! Address of Pointer to object ;  ; bool fVirtual;  Support for polymorphism, when set classname is written with object. ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TLeaf; using Counts_t = std::vector< Int_t >;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TLeaf;  TLeaf (const TLeaf &);  Copy constructor. ;  ; Int_t * GenerateOffsetArrayBase (Int_t base, Int_t events) const;  If the class supports it, generate an offset array base. ;  ; TLeaf & operator= (const TLeaf &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TLeafObject.h>. Inheritance diagram for TLeafObject:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TLeafObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafObject.html:16118,inherit,inherited,16118,doc/master/classTLeafObject.html,https://root.cern,https://root.cern/doc/master/classTLeafObject.html,1,['inherit'],['inherited']
Modifiability,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; TString fName;  ; TProof * fProof;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatsFeedback.html:12275,inherit,inherited,12275,doc/master/classTStatsFeedback.html,https://root.cern,https://root.cern/doc/master/classTStatsFeedback.html,1,['inherit'],['inherited']
Modifiability,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sende",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html:15364,inherit,inherited,15364,doc/v632/classROOT_1_1RBrowserTimer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html,62,['inherit'],['inherited']
Modifiability,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void GetEditors (TClass *cl);  Get editor for a class. ;  . Private Attributes; TGedEditor * fGedEditor;  ; TGeoTransientPanel * fMaterialPanel;  ; TGeoTransientPanel * fMatrixPanel;  ; TGeoTransientPanel * fMediumPanel;  ; TVirtualPad * fPad;  ; TGeoTransientPanel * fShapePanel;  ; TGTab * fTab;  ; TGeoVolume * fVolume;  ; TGCompositeFrame * fVolumeTab;  . Static Private Attributes; static TMap fgEditorToMgrMap;  . Friends; class TGeoManagerEditor;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoTabManager.h>. Inheritance diagram for TGeoTabManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTabManager.html:11086,inherit,inherited,11086,doc/master/classTGeoTabManager.html,https://root.cern,https://root.cern/doc/master/classTGeoTabManager.html,1,['inherit'],['inherited']
Modifiability,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwnerValue = (1ULL << ( 15 )); };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print the collection entry. ;  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMap (const TMap &map)=delete;  ; TMap & operator= (const TMap &map)=delete;  . Private Attributes; THashTable * fTable;  . Friends; class TMapIter;  . Additional Inherited Members;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TMap.h>. Inheritance diagram for TMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TMapIter TMap::Iterator_t. Definition at line 56 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMap.html:15687,inherit,inherited,15687,doc/master/classTMap.html,https://root.cern,https://root.cern/doc/master/classTMap.html,1,['inherit'],['inherited']
Modifiability,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool areIdentical (const RooDataHist &dh1, const RooDataHist &dh2);  ; double evaluate () const override;  Return the current value: The value of the bin enclosing the current coordinates of the observables, normalized by the histograms contents. ;  ; bool importWorkspaceHook (RooWorkspace &ws) override;  Check if our datahist is already in the workspace. ;  ; double totalVolume () const;  ; double totVolume () const;  Return the total volume spanned by the observables of the RooHistPdf. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _normSet member points to (or both are nullptr). ;  ; double normalizeWithNaNPacking (double rawVal, double normVal) const;  ; RooPlot * plotOn (RooPlot *frame, PlotOpt o) const override;  Plot oneself on 'frame'. ;  ; Int_t * randomizeProtoOrder (Int_t nProto, Int_t nGen, bool resample=false) const;  Return lookup table with randomized order for nProto prototype events. ;  ; bool redirectServersHook (const RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistPdf.html:60621,inherit,inherited,60621,doc/master/classRooHistPdf.html,https://root.cern,https://root.cern/doc/master/classRooHistPdf.html,1,['inherit'],['inherited']
Modifiability,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMedium (const TGeoMedium &);  copy constructor ;  ; TGeoMedium & operator= (const TGeoMedium &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fId;  ; TGeoMaterial * fMaterial;  ; Double_t fParams [20];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoMedium.h>. Inheritance diagram for TGeoMedium:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoMedium. enum TGeoMedium::EGeoMedium. EnumeratorkMedSavePrimitive . Definition at line 25 of file TGeoMedium.h. Constructor & Destructor Documentation. ◆ TGeoMedium() [1/4]. TGeoMedium::TGeoMedium ; (; const TGeoMedium & ; gm). protected . copy constructor ; Definition at line 99 of file TGeoMedium.cxx. ◆ TGeoMed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoMedium.html:12301,inherit,inherited,12301,doc/master/classTGeoMedium.html,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html,1,['inherit'],['inherited']
Modifiability,"ass_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Redraw horizontal slider widget. ;  ;  Protected Member Functions inherited from TGSlider; virtual void CreateDisabledPicture ();  Creates disabled picture. ;  ; TString GetTypeString () const;  used in SavePrimitive ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Int_t fXp;  horizontal slider x position in pixel coordinates ;  ;  Protected Attributes inherited from TGSlider; const TGPicture * fDisabledPic;  picture to draw disabled slider ;  ; Bool_t fDragging;  true if in dragging mode ;  ; Int_t fPos;  logical position between fVmin and fVmax ;  ; Int_t fRelPos;  slider position in pixel coordinates ;  ; Int_t fScale;  tick mark scale ;  ; const TGPicture * fSliderPi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHSlider.html:24552,inherit,inherited,24552,doc/master/classTGHSlider.html,https://root.cern,https://root.cern/doc/master/classTGHSlider.html,3,['inherit'],['inherited']
Modifiability,"ass_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TBits * fActive;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TProcessID; std::atomic_int fCount;  ; std::atomic_flag fLock;  Array pointing to the referenced objects. ;  ; ROOT::Internal::TAtomicPointer< TObjArray * > fObjects;  Reference count to this object (from TFile) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TProcessUUID (const TProcessID &)=delete;  ; TProcessUUID & operator= (const TProcessUUID &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TProcessID; static std::atomic_uint fgNumber;  ; static TExMap * fgObjPIDs = nullptr;  ; static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProcessUUID.html:15084,inherit,inherited,15084,doc/master/classTProcessUUID.html,https://root.cern,https://root.cern/doc/master/classTProcessUUID.html,1,['inherit'],['inherited']
Modifiability,"ass_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Int_t fLastPoint {-1};  The index of the last filled point. ;  ; Int_t fN {0};  Number of points. ;  ; TString fOption;  options ;  ; Float_t * fP {nullptr};  [3*fN] Array of 3-D coordinates (x,y,z) ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoEr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPolyLine3D.html:15880,inherit,inherited,15880,doc/master/classTPolyLine3D.html,https://root.cern,https://root.cern/doc/master/classTPolyLine3D.html,1,['inherit'],['inherited']
Modifiability,"ass_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGraphPainter * GetPainter ();  Static function returning a pointer to the current graph painter. ;  ; static void SetPainter (TVirtualGraphPainter *painter);  Static function to set an alternative histogram painter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Static Private Attributes; static TVirtualGraphPainter * fgPainter = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TVirtualGraphPainter.h>. Inheritance diagram for TVirtualGraphPainter:. This browser is not able to show SVG: try Firefox, Chrome,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGraphPainter.html:10182,inherit,inherited,10182,doc/master/classTVirtualGraphPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualGraphPainter.html,1,['inherit'],['inherited']
Modifiability,"ass_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::VariableTransformBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::VariableTransformBase; void CalcNorm (const std::vector< const Event * > &);  TODO --> adapt to variable,target,spectator selection method to calculate minimum, maximum, mean, and RMS for all variables used in the MVA. ;  ; Int_t GetNClasses () const;  ; UInt_t GetNSpectators () const;  ; UInt_t GetNTargets () const;  ; UInt_t GetNVariables () const;  ; void SetCreated (Bool_t c=kTRUE);  ; void SetName (const TString &c);  ; void SetNVariables (UInt_t i);  ; std::vector< TMVA::VariableInfo > & Spectators ();  ; std::vector< TMVA::VariableInfo > & Targets ();  ; std::vector< TMVA::VariableInfo > & Variables ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TMVA::VariableTransformBase; Event * fBackTransformedEvent;  holds the current back-transformed event ;  ; DataSetInfo & fDsi;  ; DataSetInfo * fDsiOutput; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html:12973,inherit,inherited,12973,doc/master/classTMVA_1_1VariableRearrangeTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html,5,"['adapt', 'inherit', 'variab']","['adapt', 'inherited', 'variable', 'variables']"
Modifiability,"ass_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TList fClasses;  ; Bool_t fSelected;  ; THashList fSub;  ; TModuleDocInfo * fSuper;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDocInfo.h>. Inheritance diagram for TModuleDocI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTModuleDocInfo.html:10484,inherit,inherited,10484,doc/master/classTModuleDocInfo.html,https://root.cern,https://root.cern/doc/master/classTModuleDocInfo.html,1,['inherit'],['inherited']
Modifiability,"ass_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  ETraverse { kUp; , kDown; , kBoth; };  ;  Protected Types inherited from TDocOutput; enum  EGraphvizTool { kDot; , kNeato; , kFdp; , kCirco; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void ClassHtmlTree (std::ostream &out, TClass *classPtr, ETraverse dir=kBoth, int depth=1);  This function builds the class tree for one class in HTML (inherited and succeeding classes, called recursively) ;  ; void ClassTree (TVirtualPad *canvas, Bool_t force=kFALSE);  It makes a graphical class tree. ;  ; Bool_t CreateDotClassChartIncl (const char *filename);  Build the include dependency graph for one class in GraphViz/Dot format. ;  ; Bool_t CreateDotClassChartInh (const char *filename);  Build the class tree for one class in GraphViz/Dot format. ;  ; Bool_t CreateDotClassChartInhMem (const char *filename);  Build the class tree of inherited members for one class in GraphViz/Dot format. ;  ; Bool_t CreateDotClassChartLib (const char *filename);  Build the library dependency graph for one class in GraphViz/Dot format. ;  ; Bool_t CreateHierarchyDot ();  Create a hierarchical class list The algorithm descends from the base classes and branches into all derived classes. ;  ; void CreateSourceOutputStream (std::ostream &out, const char *extension, TString &filename);  Open a Class.cxx.html file, where Class is defined b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocOutput.html:14372,inherit,inherited,14372,doc/master/classTClassDocOutput.html,https://root.cern,https://root.cern/doc/master/classTClassDocOutput.html,1,['inherit'],['inherited']
Modifiability,"asses and related header files; 282 const TROOT::FwdDeclArgsToKeepCollection_t fFwdNargsToKeepColl; // Collection of; 283 // pairs of template fwd decls and number of; 284 bool fHasCxxModule; // Whether this module has a C++ module alongside it.; 285 };; 286 ; 287 std::vector<ModuleHeaderInfo_t>& GetModuleHeaderInfoBuffer() {; 288 static std::vector<ModuleHeaderInfo_t> moduleHeaderInfoBuffer;; 289 return moduleHeaderInfoBuffer;; 290 }; 291}; 292 ; 293Int_t TROOT::fgDirLevel = 0;; 294Bool_t TROOT::fgRootInit = kFALSE;; 295 ; 296static void at_exit_of_TROOT() {; 297 if (ROOT::Internal::gROOTLocal); 298 ROOT::Internal::gROOTLocal->~TROOT();; 299}; 300 ; 301// This local static object initializes the ROOT system; 302namespace ROOT {; 303namespace Internal {; 304 class TROOTAllocator {; 305 // Simple wrapper to separate, time-wise, the call to the; 306 // TROOT destructor and the actual free-ing of the memory.; 307 //; 308 // Since the interpreter implementation (currently TCling) is; 309 // loaded via dlopen by libCore, the destruction of its global; 310 // variable (i.e. in particular clang's) is scheduled before; 311 // those in libCore so we need to schedule the call to the TROOT; 312 // destructor before that *but* we want to make sure the memory; 313 // stay around until libCore itself is unloaded so that code; 314 // using gROOT can 'properly' check for validity.; 315 //; 316 // The order of loading for is:; 317 // libCore.so; 318 // libRint.so; 319 // ... anything other library hard linked to the executable ...; 320 // ... for example libEvent; 321 // libCling.so; 322 // ... other libraries like libTree for example ....; 323 // and the destruction order is (of course) the reverse.; 324 // By default the unloading of the dictionary, does use; 325 // the service of the interpreter ... which of course; 326 // fails if libCling is already unloaded by that information; 327 // has not been registered per se.; 328 //; 329 // To solve this problem, we now schedule the de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:10343,variab,variable,10343,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['variab'],['variable']
Modifiability,"asses are defined here:. Different matrix views without copying data elements :; TMatrixTRow_const TMatrixTRow; TMatrixTColumn_const TMatrixTColumn; TMatrixTDiag_const TMatrixTDiag; TMatrixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. This class is also known as (typedefs to this class)TMatrixFFlat_const, TMatrixTFlat_const<Float_t>. Function Members (Methods); public:. TMatrixTFlat_const<float>(); TMatrixTFlat_const<float>(const TMatrixT<float>& matrix); TMatrixTFlat_const<float>(const TMatrixTSym<float>& matrix); TMatrixTFlat_const<float>(const TMatrixTFlat_const<float>& trc); virtual~TMatrixTFlat_const<float>(); static TClass*Class(); const TMatrixTBase<float>*GetMatrix() const; const float*GetPtr() const; virtual TClass*IsA() const; const float&operator()(Int_t i) const; TMatrixTFlat_const<float>&operator=(const TMatrixTFlat_const<float>& trc); const float&operator[](Int_t i) const; virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. TMatrixTBase<float>*fMatrixthe matrix I am the diagonal of; Int_tfNelems; const float*fPtrpointer to the a[0,0]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTFlat_const<float>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. » Last changed: root/matrix:$Id: TMatrixTUtils.h 36047 2010-10-04 06:43:15Z brun $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTFlat_const_float_.html:1705,Inherit,Inheritance,1705,root/html532/TMatrixTFlat_const_float_.html,https://root.cern,https://root.cern/root/html532/TMatrixTFlat_const_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"asses are defined here:. Different matrix views without copying data elements :; TMatrixTRow_const TMatrixTRow; TMatrixTColumn_const TMatrixTColumn; TMatrixTDiag_const TMatrixTDiag; TMatrixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. This class is also known as (typedefs to this class)TMatrixTSub_const<Float_t>, TMatrixFSub_const. Function Members (Methods); public:. TMatrixTSub_const<float>(); TMatrixTSub_const<float>(const TMatrixTSub_const<float>&); TMatrixTSub_const<float>(const TMatrixT<float>& matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); TMatrixTSub_const<float>(const TMatrixTSym<float>& matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); virtual~TMatrixTSub_const<float>(); static TClass*Class(); Int_tGetColOff() const; const TMatrixTBase<float>*GetMatrix() const; Int_tGetNcols() const; Int_tGetNrows() const; Int_tGetRowOff() const; virtual TClass*IsA() const; const float&operator()(Int_t rown, Int_t coln) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Int_tfColOff; TMatrixTBase<float>*fMatrixthe matrix I am a submatrix of; Int_tfNcolsSub; Int_tfNrowsSub; Int_tfRowOff. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. const Element & operator()(Int_t i). Int_t GetRowOff() const; { return fRowOff; }. Int_t GetColOff() const; { return fColOff; }. Int_t GetNrows() const; { return fNrowsSub; }. Int_t GetNcols() const; { return fNcolsSub; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTSub_const_float_.html:1802,Inherit,Inheritance,1802,root/html534/TMatrixTSub_const_float_.html,https://root.cern,https://root.cern/root/html534/TMatrixTSub_const_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"asses directly from RDataFrame. Using two small helpers, we tell RDataFrame where the data has to go.; ; import ROOT; import math; ; ; # Set up; # ------------------------; ; # We create an RDataFrame with two columns filled with 2 million random numbers.; df = ROOT.RDataFrame(2000000).Define(""x"", ""gRandom->Uniform(-5., 5.)"").Define(""y"", ""gRandom->Gaus(1., 3.)""); ; ; # We create RooFit variables that will represent the dataset.; x = ROOT.RooRealVar(""x"", ""x"", -5.0, 5.0); y = ROOT.RooRealVar(""y"", ""y"", -50.0, 50.0); x.setBins(10); y.setBins(20); ; ; # Booking the creation of RooDataSet / RooDataHist in RDataFrame; # ----------------------------------------------------------------; ; # Method 1:; # ---------; # We directly book the RooDataSetHelper action.; # We need to pass; # - the RDataFrame column types as template parameters; # - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); # - the column names that RDataFrame should fill into the dataset; ; # NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; #; # The returned object is not yet a RooDataSet, but an RResultPtr that will be; # lazy-evaluated once you call GetValue() on it. We will only evaluate the; # RResultPtr once all other RDataFrame related actions are declared. This way; # we trigger the event loop computation only once, which will improve the; # runtime significantly.; #; # To learn more about lazy actions, see:; # https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions; roo_data_set_result = df.Book(; ROOT.std.move(ROOT.RooDataSetHelper(""dataset"", ""Title of dataset"", ROOT.RooArgSet(x, y))), (""x"", ""y""); ); ; # Method 2:; # ---------; # We first declare the RooDataHistHelper; rdhMaker = ROOT.RooDataHistHelper(""dataset"", ""Title of dataset"", ROOT.RooArgSet(x, y)); ; # Then, we move it into an RDataFrame action:; roo_data_hist_result = df.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")); ; ; # Run it and inspect t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html:1418,variab,variables,1418,doc/master/rf408__RDataFrameToRooFit_8py.html,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html,1,['variab'],['variables']
Modifiability,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against goo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlave.html:6790,inherit,inherits,6790,doc/master/classTSlave.html,https://root.cern,https://root.cern/doc/master/classTSlave.html,3,['inherit'],['inherits']
Modifiability,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLAttr.html:4443,inherit,inherits,4443,doc/master/classTXMLAttr.html,https://root.cern,https://root.cern/doc/master/classTXMLAttr.html,38,['inherit'],['inherits']
Modifiability,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t No",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlaveInfo.html:5499,inherit,inherits,5499,doc/master/classTSlaveInfo.html,https://root.cern,https://root.cern/doc/master/classTSlaveInfo.html,1,['inherit'],['inherits']
Modifiability,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a deriv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html:5035,inherit,inherits,5035,doc/master/classTPacketizerAdaptive_1_1TFileNode.html,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileNode.html,2,['inherit'],['inherits']
Modifiability,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:4148,inherit,inherits,4148,doc/master/classTPacketizerFile_1_1TIterObj.html,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html,3,['inherit'],['inherits']
Modifiability,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQSlot.html:5755,inherit,inherits,5755,doc/master/classTQSlot.html,https://root.cern,https://root.cern/doc/master/classTQSlot.html,1,['inherit'],['inherits']
Modifiability,"assigned in getMaxVal. ;  ; std::list< double > * plotSamplingHint (RooAbsRealLValue &obs, double xlo, double xhi) const override;  Return sampling hint for making curves of (projections) of this function as the recursive division strategy of RooCurve cannot deal efficiently with the vertical lines that occur in a non-interpolated histogram. ;  ; bool selfNormalized () const override;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setCdfBoundaries (bool flag);  ; void setInterpolationOrder (Int_t order);  ; void setUnitNorm (bool flag);  ; void Streamer (TBuffer &) override;  Stream an object of class RooHistPdf. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; std::uni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistPdf.html:4203,inherit,inherited,4203,doc/master/classRooHistPdf.html,https://root.cern,https://root.cern/doc/master/classRooHistPdf.html,1,['inherit'],['inherited']
Modifiability,"assignment operator sets the value of any argument in our set; that also appears in the other set. RooAbsCollection & assignValueOnly(const RooAbsCollection& other); The assignment operator sets the value of any argument in our set; that also appears in the other set. RooAbsCollection & assignFast(const RooAbsCollection& other); Functional equivalent of operator=() but assumes this and other collection; have same layout. Also no attributes are copied. Bool_t addOwned(RooAbsArg& var, Bool_t silent); Add the specified argument to list. Returns kTRUE if successful, or; else kFALSE if a variable of the same name is already in the list.; This method can only be called on a list that is flagged as owning; all of its contents, or else on an empty list (which will force the; list into that mode). RooAbsArg * addClone(const RooAbsArg& var, Bool_t silent); Add a clone of the specified argument to list. Returns a pointer to; the clone if successful, or else zero if a variable of the same name; is already in the list or the list does *not* own its variables (in; this case, try add() instead.) Calling addClone() on an empty list; forces it to take ownership of all its subsequent variables. Bool_t add(const RooAbsArg& var, Bool_t silent); Add the specified argument to list. Returns kTRUE if successful, or; else kFALSE if a variable of the same name is already in the list; or the list owns its variables (in this case, try addClone() or addOwned() instead). Bool_t add(const RooAbsCollection& list, Bool_t silent); Add a collection of arguments to this collection by calling add(); for each element in the source collection. Bool_t addOwned(const RooAbsCollection& list, Bool_t silent); Add a collection of arguments to this collection by calling addOwned(); for each element in the source collection. void addClone(const RooAbsCollection& list, Bool_t silent); Add a collection of arguments to this collection by calling addOwned(); for each element in the source collection. Bool_t replace(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsCollection.html:11931,variab,variable,11931,root/html526/RooAbsCollection.html,https://root.cern,https://root.cern/root/html526/RooAbsCollection.html,2,['variab'],"['variable', 'variables']"
Modifiability,"assname"" is not a base class. Takes care of multiple inheritance. ; Definition at line 2655 of file TClass.cxx. ◆ GetBaseClass() [2/2]. TClass * TClass::GetBaseClass ; (; const TClass * ; cl). Return pointer to the base class ""cl"". ; Returns 0 in case ""cl"" is not a base class. Takes care of multiple inheritance. ; Definition at line 2674 of file TClass.cxx. ◆ GetBaseClassOffset(). Int_t TClass::GetBaseClassOffset ; (; const TClass * ; toBase, . void * ; address = nullptr, . bool ; isDerivedObject = true . ). Return data member offset to the base class ""cl"".; Returns -1 in case ""cl"" is not a base class. Takes care of multiple inheritance. . Definition at line 2791 of file TClass.cxx. ◆ GetBaseClassOffsetRecurse(). Int_t TClass::GetBaseClassOffsetRecurse ; (; const TClass * ; cl). private . Return data member offset to the base class ""cl"". . Returns -1 in case ""cl"" is not a base class.; Returns -2 if cl is a base class, but we can't find the offset because it's virtual. Takes care of multiple inheritance. . Definition at line 2705 of file TClass.cxx. ◆ GetBaseDataMember(). TClass * TClass::GetBaseDataMember ; (; const char * ; datamember). Return pointer to (base) class that contains datamember. ; Definition at line 2827 of file TClass.cxx. ◆ GetCheckSum() [1/3]. UInt_t TClass::GetCheckSum ; (; Bool_t & ; isvalid); const. Return GetCheckSum(kCurrentCheckSum,isvalid);. ; Definition at line 6514 of file TClass.cxx. ◆ GetCheckSum() [2/3]. UInt_t TClass::GetCheckSum ; (; ECheckSum ; code, . Bool_t & ; isvalid . ); const. Compute and/or return the class check sum. ; isvalid is set to false, if the function is unable to calculate the checksum.; The class ckecksum is used by the automatic schema evolution algorithm to uniquely identify a class version. The check sum is built from the names/types of base classes and data members. Original algorithm from Victor Perevovchikov (perev.nosp@m.@bnl.nosp@m..gov).; The valid range of code is determined by ECheckSum. kNoEnum: data mem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:70888,inherit,inheritance,70888,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['inherit'],['inheritance']
Modifiability,"assname"" is not a base class. Takes care of multiple inheritance. ; Definition at line 2722 of file TClass.cxx. ◆ GetBaseClass() [2/2]. TClass * TClass::GetBaseClass ; (; const TClass * ; cl). Return pointer to the base class ""cl"". ; Returns 0 in case ""cl"" is not a base class. Takes care of multiple inheritance. ; Definition at line 2741 of file TClass.cxx. ◆ GetBaseClassOffset(). Int_t TClass::GetBaseClassOffset ; (; const TClass * ; toBase, . void * ; address = nullptr, . bool ; isDerivedObject = true . ). Return data member offset to the base class ""cl"".; Returns -1 in case ""cl"" is not a base class. Takes care of multiple inheritance. . Definition at line 2858 of file TClass.cxx. ◆ GetBaseClassOffsetRecurse(). Int_t TClass::GetBaseClassOffsetRecurse ; (; const TClass * ; cl). private . Return data member offset to the base class ""cl"". . Returns -1 in case ""cl"" is not a base class.; Returns -2 if cl is a base class, but we can't find the offset because it's virtual. Takes care of multiple inheritance. . Definition at line 2772 of file TClass.cxx. ◆ GetBaseDataMember(). TClass * TClass::GetBaseDataMember ; (; const char * ; datamember). Return pointer to (base) class that contains datamember. ; Definition at line 2894 of file TClass.cxx. ◆ GetCheckSum() [1/3]. UInt_t TClass::GetCheckSum ; (; Bool_t & ; isvalid); const. Return GetCheckSum(kCurrentCheckSum,isvalid);. ; Definition at line 6581 of file TClass.cxx. ◆ GetCheckSum() [2/3]. UInt_t TClass::GetCheckSum ; (; ECheckSum ; code, . Bool_t & ; isvalid . ); const. Compute and/or return the class check sum. ; isvalid is set to false, if the function is unable to calculate the checksum.; The class ckecksum is used by the automatic schema evolution algorithm to uniquely identify a class version. The check sum is built from the names/types of base classes and data members. Original algorithm from Victor Perevovchikov (perev.nosp@m.@bnl.nosp@m..gov).; The valid range of code is determined by ECheckSum. kNoEnum: data mem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:70889,inherit,inheritance,70889,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['inherit'],['inheritance']
Modifiability,"assname> {; public:; Int_t <classname>::fgNVariables; // Number of variables; Int_t <classname>::fgNCoefficients; // Number of terms; Double_t <classname>::fgDMean; // Mean from training sample; Double_t <classname>::fgXMean[]; // Mean from training sample; Double_t <classname>::fgXMin[]; // Min from training sample; Double_t <classname>::fgXMax[]; // Max from training sample; Double_t <classname>::fgCoefficient[]; // Coefficients; Int_t <classname>::fgPower[]; // Function powers. Double_t Eval(Double_t *x);; };. Whether the method <classname>::Eval should be static or not, is; up to the user. void MakeNormalized(); PRIVATE METHOD:; Normalize data to the interval [-1;1]. This is needed for the; classes method to work. void MakeParameterization(); PRIVATE METHOD:; Find the parameterization over the training sample. A full account; of the algorithm is given in the; class description. void MakeRealCode(const char* filename, const char* classname, Option_t* option = """"); PRIVATE METHOD:; This is the method that actually generates the code for the; evaluation the parameterization on some point.; It's called by TMultiDimFit::MakeCode and TMultiDimFit::MakeMethod. The options are: NONE so far. void Print(Option_t* option = ""ps"") const; Print statistics etc.; Options are; P Parameters; S Statistics; C Coefficients; R Result of parameterisation; F Result of fit; K Correlation Matrix; M Pretty print formula. Bool_t Select(const Int_t* iv); Selection method. User can override this method for specialized; selection of acceptable functions in fit. Default is to select; all. This message is sent during the build-up of the function; candidates table once for each set of powers in; variables. Notice, that the argument array contains the powers; PLUS ONE. For example, to De select the function; f = x1^2 * x2^4 * x3^5,; this method should return kFALSE if given the argument; { 3, 4, 6 }. void SetMaxAngle(Double_t angle = 0); Set the max angle (in degrees) between the initial data vec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:32170,parameteriz,parameterization,32170,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,10,['parameteriz'],['parameterization']
Modifiability,"associated with this render-element. ;  ; TGeoShape * GetShape () const;  ; TClass * IsA () const override;  ; virtual TBuffer3D * MakeBuffer3D ();  Create a TBuffer3D suitable for presentation of the shape. ;  ; void Paint (Option_t *option="""") override;  Paint object. ;  ; TClass * ProjectedClass (const TEveProjection *p) const override;  Return class for projected objects: ;  ; void Save (const char *file, const char *name=""Extract"");  Save the shape tree as TEveGeoShapeExtract. ;  ; void SaveExtract (const char *file, const char *name);  Save the shape tree as TEveGeoShapeExtract. ;  ; void SetNSegments (Int_t s);  Set number of segments. ;  ; void SetShape (TGeoShape *s);  Set TGeoShape shown by this object. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void WriteExtract (const char *name);  Write the shape tree as TEveGeoShapeExtract to current directory. ;  ;  Public Member Functions inherited from TEveShape;  TEveShape (const char *n=""TEveShape"", const char *t="""");  Constructor. ;  ;  ~TEveShape () override;  Destructor. ;  ; void CopyVizParams (const TEveElement *el) override;  Copy visualization parameters from element el. ;  ; virtual Bool_t GetDrawFrame () const;  ; virtual Color_t GetFillColor () const;  ; virtual Bool_t GetHighlightFrame () const;  ; virtual Color_t GetLineColor () const;  ; virtual Float_t GetLineWidth () const;  ; virtual Bool_t GetMiniFrame () const;  ; TClass * IsA () const override;  ; void Paint (Option_t *option="""") override;  Paint this object. Only direct rendering is supported. ;  ; virtual void SetDrawFrame (Bool_t f);  ; virtual void SetFillColor (Color_t c);  ; virtual void SetHighlightFrame (Bool_t f);  ; virtual void SetLineColor (Color_t c);  ; virtual void SetLineWidth (Float_t lw);  ; void SetMainColor (Color_t color) override;  Set main color. ;  ; virtual void SetMiniFrame (Bool_t r);  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoShape.html:2366,inherit,inherited,2366,doc/master/classTEveGeoShape.html,https://root.cern,https://root.cern/doc/master/classTEveGeoShape.html,1,['inherit'],['inherited']
Modifiability,"assumes this and other collection; have same layout. Also no attributes are copied. Bool_t addOwned(RooAbsArg& var, Bool_t silent); Add the specified argument to list. Returns kTRUE if successful, or; else kFALSE if a variable of the same name is already in the list.; This method can only be called on a list that is flagged as owning; all of its contents, or else on an empty list (which will force the; list into that mode). RooAbsArg * addClone(const RooAbsArg& var, Bool_t silent); Add a clone of the specified argument to list. Returns a pointer to; the clone if successful, or else zero if a variable of the same name; is already in the list or the list does *not* own its variables (in; this case, try add() instead.) Calling addClone() on an empty list; forces it to take ownership of all its subsequent variables. Bool_t add(const RooAbsArg& var, Bool_t silent); Add the specified argument to list. Returns kTRUE if successful, or; else kFALSE if a variable of the same name is already in the list; or the list owns its variables (in this case, try addClone() or addOwned() instead). Bool_t add(const RooAbsCollection& list, Bool_t silent); Add a collection of arguments to this collection by calling add(); for each element in the source collection. Bool_t addOwned(const RooAbsCollection& list, Bool_t silent); Add a collection of arguments to this collection by calling addOwned(); for each element in the source collection. void addClone(const RooAbsCollection& list, Bool_t silent); Add a collection of arguments to this collection by calling addOwned(); for each element in the source collection. Bool_t replace(const RooAbsCollection& other); Replace any args in our set with args of the same name from the other set; and return kTRUE for success. Fails if this list is a copy of another. Bool_t replace(const RooAbsArg& var1, const RooAbsArg& var2); Replace var1 with var2 and return kTRUE for success. Fails if; this list is a copy of another, if var1 is not already in this set,; o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsCollection.html:12291,variab,variable,12291,root/html526/RooAbsCollection.html,https://root.cern,https://root.cern/root/html526/RooAbsCollection.html,2,['variab'],"['variable', 'variables']"
Modifiability,"ast entry before exception. ;  ; static void SetLastMsg (const char *lastmsg);  Set the message to be sent back in case of exceptions. ;  ; static TProofServ * This ();  Static function returning pointer to global object gProofServ. ;  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServ.html:21063,inherit,inherited,21063,doc/master/classTProofServ.html,https://root.cern,https://root.cern/doc/master/classTProofServ.html,2,['inherit'],['inherited']
Modifiability,"ast point for which safety was computed; Double_tfLastSafety! last computed safety radius; Int_tfLevel! current geometry level;; Int_tfNextDaughterIndex! next daughter index after FindNextBoundary; TGeoNode*fNextNode! next node that will be crossed; Int_tfNmany! number of overlapping nodes on current branch; Double_tfNormal[3]! cosine of incident angle on current checked surface; Int_t*fOverlapClusters! internal array for overlaps; Int_tfOverlapMark! current recursive position in fOverlapClusters; Int_tfOverlapSize! current size of fOverlapClusters; TStringfPath! path to current node; Double_tfPoint[3]! current point; Double_tfSafety! safety radius from current point; Bool_tfSearchOverlaps! flag set when an overlapping cluster is searched; Bool_tfStartSafe! flag a safe start for point classification; Double_tfStep! step to be done from current point and direction; Int_tfThreadId! thread id for this navigator; TGeoNode*fTopNode! top physical node. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoNavigator(); dummy constructor. TGeoNavigator(TGeoManager* geom); Default constructor. TGeoNavigator(const TGeoNavigator& ); Copy constructor. TGeoNavigator& operator=(const TGeoNavigator& ); assignment operator. ~TGeoNavigator(); Destructor. void BuildCache(Bool_t dummy = kFALSE, Bool_t nodeid = kFALSE); Builds the cache for physical nodes and global matrices. Bool_t cd(const char* path = """"); Browse the tree of nodes starting from top node according to pathname.; Changes the path accordingly. Bool_t CheckPath(const char* path) const; Check if a geometry path is valid without changing the state of the navigator. void CdNode(Int_t nodeid); Change current path to point to the node having this id.; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons). void CdDown(Int_t index); Make a daughter of current node current. Can be called only with a valid; daughter index (no check). Updates cache accordingly. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoNavigator.html:12190,Inherit,Inheritance,12190,root/html532/TGeoNavigator.html,https://root.cern,https://root.cern/root/html532/TGeoNavigator.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ast point for which safety was computed; Double_tfLastSafety! last computed safety radius; Int_tfLevel! current geometry level;; Int_tfNextDaughterIndex! next daughter index after FindNextBoundary; TGeoNode*fNextNode! next node that will be crossed; Int_tfNmany! number of overlapping nodes on current branch; Double_tfNormal[3]! cosine of incident angle on current checked surface; Int_t*fOverlapClusters! internal array for overlaps; Int_tfOverlapMark! current recursive position in fOverlapClusters; Int_tfOverlapSize! current size of fOverlapClusters; TStringfPath! path to current node; Double_tfPoint[3]! current point; Double_tfSafety! safety radius from current point; Bool_tfSearchOverlaps! flag set when an overlapping cluster is searched; Bool_tfStartSafe! flag a safe start for point classification; Double_tfStep! step to be done from current point and direction; Int_tfThreadId! thread id for this navigator; TGeoNode*fTopNode! top physical node. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoNavigator(); dummy constructor. TGeoNavigator(TGeoManager* geom); Default constructor. TGeoNavigator(const TGeoNavigator& ); Copy constructor. TGeoNavigator& operator=(const TGeoNavigator& ); assignment operator. ~TGeoNavigator(); Destructor. void BuildCache(Bool_t dummy = kFALSE, Bool_t nodeid = kFALSE); Builds the cache for physical nodes and global matrices. Bool_t cd(const char* path = """"); Browse the tree of nodes starting from top node according to pathname.; Changes the path accordingly. The path is changed to point to the top node; in case of failure. Bool_t CheckPath(const char* path) const; Check if a geometry path is valid without changing the state of the navigator. void CdNode(Int_t nodeid); Change current path to point to the node having this id.; Node id has to be in range : 0 to fNNodes-1 (no check for performance reasons). void CdDown(Int_t index); Make a daughter of current node current. Can be called only with a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoNavigator.html:12310,Inherit,Inheritance,12310,root/html534/TGeoNavigator.html,https://root.cern,https://root.cern/root/html534/TGeoNavigator.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ast<TDirectoryFile*>(tobj);; 982 dir->SetName(GetName());; 983 dir->SetTitle(GetTitle());; 984 dir->SetMother(fMotherDir);; 985 fMotherDir->Append(dir);; 986 }; 987 ; 988 // Append the object to the directory if requested:; 989 {; 990 ROOT::DirAutoAdd_t addfunc = cl->GetDirectoryAutoAdd();; 991 if (addfunc) {; 992 addfunc(pobj, fMotherDir);; 993 }; 994 }; 995 ; 996 return tobj;; 997}; 998 ; 999////////////////////////////////////////////////////////////////////////////////; 1000/// To read an object (non deriving from TObject) from the file.; 1001///; 1002/// If expectedClass is not null, we checked that that actual class of the; 1003/// object stored is suitable to be stored in a pointer pointing to an object; 1004/// of class 'expectedClass'. We also adjust the value of the returned address; 1005/// so that it is suitable to be cast (C-Style); 1006/// a pointer pointing to an object of class 'expectedClass'.; 1007///; 1008/// So for example if the class Bottom inherits from Top and the object; 1009/// stored is of type Bottom you can safely do:; 1010/// ~~~{.cpp}; 1011/// auto TopClass = TClass::GetClass(""Top"");; 1012/// auto ptr = (Top*) key->ReadObjectAny( TopClass );; 1013/// if (ptr==0) printError(""the object stored in the key is not of the expected type\n"");; 1014/// ~~~; 1015/// The object associated to this key is read from the file into memory.; 1016/// Once the key structure is read (via Streamer) the class identifier; 1017/// of the object is known.; 1018/// Using the class identifier we find the TClass object for this class.; 1019/// A TClass object contains a full description (i.e. dictionary) of the; 1020/// associated class. In particular the TClass object can create a new; 1021/// object of the class type it describes. This new object now calls its; 1022/// Streamer function to rebuilt itself.; 1023 ; 1024void *TKey::ReadObjectAny(const TClass* expectedClass); 1025{; 1026 TBufferFile bufferRef(TBuffer::kRead, fObjlen+fKeylen);; 1027 if (!bufferRef.B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:35784,inherit,inherits,35784,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"astCGI engine, 10 worker threads used to process requests received via FastCGI channel. This significantly increase a performance, especially when several clients are connected.; Better security for THttpServer with webgui; If THttpServer created for use with webgui widgets (RBrowser, RCanvas, REve), it only will provide access to the widgets via websocket connection - any other kind of requests like root.json or exe.json will be refused completely. Combined with connection tokens and https protocol, this makes usage of webgui components in public networks more secure.; Enabled WLCG Bearer Tokens support in RDavix; Bearer tokens are part of WLCG capability-based infrastructure with capability-based scheme which uses an infrastructure that describes what the bearer is allowed to do as opposed to who that bearer is. Token discovery procedure are developed according to the WLCG Bearer Token Discovery specification document. Short overview:. If the BEARER_TOKEN environment variable is set, then the value is taken to be the token contents.; If the BEARER_TOKEN_FILE environment variable is set, then its value is interpreted as a filename. The contents of the specified file are taken to be the token contents.; If the XDG_RUNTIME_DIR environment variable is set, then take the token from the contents of $XDG_RUNTIME_DIR/bt_u$ID(this additional location is intended to provide improved security for shared login environments as $XDG_RUNTIME_DIR is defined to be user-specific as opposed to a system-wide directory.).; Otherwise, take the token from /tmp/bt_u$ID. Xrootd client support; ROOT can now be built with Xrootd 5 client libraries.; GUI Libraries; RBrowser improvements. central factory methods to handle browsing, editing and drawing of different classes; simple possibility to extend RBrowser on user-defined classes; support of web-based geometry viewer; better support of TTree drawing; server-side handling of code editor and image viewer widgets; rbrowser content is fully re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:27433,variab,variable,27433,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['variab'],['variable']
Modifiability,"astPoint() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Int_tTPolyLine::GetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPolyLine::GetOption() const; Double_tGetPhimax() const; Double_tGetPhimin() const; Double_tGetRadius() const; Double_tTCurlyLine::GetStartX() const; Double_tTCurlyLine::GetStartY() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTCurlyLine::GetWaveLength() const; Double_t*TPolyLine::GetX() const; Double_t*TPolyLine::GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPolyLine::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyLine::Merge(TCollection* list); virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCurlyArc.html:3921,Inherit,InheritsFrom,3921,root/html532/TCurlyArc.html,https://root.cern,https://root.cern/root/html532/TCurlyArc.html,2,['Inherit'],['InheritsFrom']
Modifiability,"astPoint() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Int_tTPolyLine::GetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPolyLine::GetOption() const; Double_tGetPhimax() const; Double_tGetPhimin() const; Double_tGetRadius() const; Double_tTCurlyLine::GetStartX() const; Double_tTCurlyLine::GetStartY() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTCurlyLine::GetWaveLength() const; Double_t*TPolyLine::GetX() const; Double_t*TPolyLine::GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPolyLine::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyLine::Merge(TCollection* list); virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCurlyArc.html:3816,Inherit,InheritsFrom,3816,root/html602/TCurlyArc.html,https://root.cern,https://root.cern/root/html602/TCurlyArc.html,2,['Inherit'],['InheritsFrom']
Modifiability,"aster. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TGGotoDialog Class Reference. . Definition at line 109 of file TGTextEditDialogs.h. Public Member Functions;  TGGotoDialog (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, Long_t *ret_code=nullptr, UInt_t options=kVerticalFrame);  Create a dialog to GoTo a specific line number. ;  ;  ~TGGotoDialog () override;  Clean up goto dialog. ;  ; void CloseWindow () override;  Close the dialog. ;  ; TClass * IsA () const override;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process goto dialog widget messages. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTransientFrame;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t croot=kTRUE, EPlacement pos=kCenter);  Position transient frame centered relative to the parent frame. ;  ; const TGWindow * GetMain () const;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a transient frame widget as a C++ statement(s) on output stream out. ;  ; void SaveSource (const char *filename=""Rootdlog.C"", Option_t *option="""") override;  Save the GUI transient frame widget in a C++ macro file. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGotoDialog.html:1003,inherit,inherited,1003,doc/master/classTGGotoDialog.html,https://root.cern,https://root.cern/doc/master/classTGGotoDialog.html,1,['inherit'],['inherited']
Modifiability,"aster/roofit/roofitcore/src/RooNumGenFactory.h>. Inheritance diagram for RooNumGenFactory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RooNumGenFactory(). RooNumGenFactory::~RooNumGenFactory ; (; ). override . Destructor. ; Definition at line 79 of file RooNumGenFactory.cxx. ◆ RooNumGenFactory() [1/2]. RooNumGenFactory::RooNumGenFactory ; (; ). protected . Constructor. ; Register all known integrators by calling their static registration functions ; Definition at line 51 of file RooNumGenFactory.cxx. ◆ RooNumGenFactory() [2/2]. RooNumGenFactory::RooNumGenFactory ; (; const RooNumGenFactory & ; other). protected . Copy constructor. ; Definition at line 92 of file RooNumGenFactory.cxx. Member Function Documentation. ◆ createSampler(). RooAbsNumGenerator * RooNumGenFactory::createSampler ; (; RooAbsReal & ; func, . const RooArgSet & ; genVars, . const RooArgSet & ; condVars, . const RooNumGenConfig & ; config, . bool ; verbose = false, . RooAbsReal * ; maxFuncVal = nullptr . ). Construct a numeric integrator instance that operates on function 'func' and is configured with 'config'. ; If ndimPreset is greater than zero that number is taken as the dimensionality of the integration, otherwise it is queried from 'func'. This function iterators over list of available prototype integrators and returns an clone attached to the given function of the first class that matches the specifications of the requested integration considering the number of dimensions, the nature of the limits (open ended vs closed) and the user preference stated in 'config' ; Definition at line 156 of file RooNumGenFactory.cxx. ◆ getProtoSampler(). const RooAbsNumGenerator * RooNumGenFactory::getProtoSampler ; (; const char * ; name). Return prototype integrator with given (class) name. ; Definition at line 136 of file RooNumGenFactory.cxx. ◆ instance(). RooNumGenFactory & RooNumGenFactory::instance ; (; ). s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumGenFactory.html:12279,config,config,12279,doc/master/classRooNumGenFactory.html,https://root.cern,https://root.cern/doc/master/classRooNumGenFactory.html,1,['config'],['config']
Modifiability,"asymmetric, and may perform better in the presence of strong correlations. Bool_t plotSanityChecks(RooPlot* frame) const; Utility function for plotOn(), perform general sanity check on frame to ensure safe plotting operations. void makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; Utility function for plotOn() that constructs the set of; observables to project when plotting ourselves as function of; 'plotVar'. 'allVars' is the list of variables that must be; projected, but may contain variables that we do not depend on. If; 'silent' is cleared, warnings about inconsistent input parameters; will be printed. Bool_t isSelectedComp() const; If true, the current pdf is a selected component (for use in plotting). void globalSelectComp(Bool_t flag); Global switch controlling the activation of the selectComp() functionality. RooAbsFunc * bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; Create an interface adaptor f(vars) that binds us to the specified variables; (in arbitrary order). For example, calling bindVars({x1,x3}) on an object; F(x1,x2,x3,x4) returns an object f(x1,x3) that is evaluated using the; current values of x2 and x4. The caller takes ownership of the returned adaptor. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE); Copy the cached value of another RooAbsArg to our cache.; Warning: This function copies the cached values of source,; it is the callers responsibility to make sure the cache is clean. void attachToTree(TTree& t, Int_t bufSize = 32000); Attach object to a branch of given TTree. By default it will; register the internal value cache RooAbsReal::_value as branch; buffer for a Double_t tree branch with the same name as this; object. If no Double_t branch is found with the name of this; object, this method looks for a Float_t Int_t, UChar_t and UInt_t; branch in that order. If any of these are found the buffer for; that ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:55239,adapt,adaptor,55239,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,6,"['adapt', 'variab']","['adaptor', 'variables']"
Modifiability,"asymmetric, and may perform better in the presence of strong correlations. Bool_t plotSanityChecks(RooPlot* frame) const; Utility function for plotOn(), perform general sanity check on frame to ensure safe plotting operations. void makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; Utility function for plotOn() that constructs the set of; observables to project when plotting ourselves as function of; 'plotVar'. 'allVars' is the list of variables that must be; projected, but may contain variables that we do not depend on. If; 'silent' is cleared, warnings about inconsistent input parameters; will be printed. Bool_t isSelectedComp() const; If true, the current pdf is a selected component (for use in plotting). void globalSelectComp(Bool_t flag); Global switch controlling the activation of the selectComp() functionality. RooAbsFunc * bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; Create an interface adaptor f(vars) that binds us to the specified variables; (in arbitrary order). For example, calling bindVars({x1,x3}) on an object; F(x1,x2,x3,x4) returns an object f(x1,x3) that is evaluated using the; current values of x2 and x4. The caller takes ownership of the returned adaptor. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); Copy the cached value of another RooAbsArg to our cache.; Warning: This function copies the cached values of source,; it is the callers responsibility to make sure the cache is clean. void attachToVStore(RooVectorDataStore& vstore). void attachToTree(TTree& t, Int_t bufSize = 32000); Attach object to a branch of given TTree. By default it will; register the internal value cache RooAbsReal::_value as branch; buffer for a Double_t tree branch with the same name as this; object. If no Double_t branch is found with the name of this; object, this method looks for a Float_t Int_t, UChar_t and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsReal.html:56754,adapt,adaptor,56754,root/html532/RooAbsReal.html,https://root.cern,https://root.cern/root/html532/RooAbsReal.html,14,"['adapt', 'variab']","['adaptor', 'variables']"
Modifiability,"at (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TSlave ();  Default constructor used by derived classes. ;  ; virtual void FlushSocket ();  ; void Init (TSocket *s, Int_t stype);  Init a PROOF slave object using the connection opened via s. ;  ; virtual void Interrupt (Int_t type);  Send interrupt OOB byte to master or slave servers. ;  ; virtual Int_t Ping ();  Ping the remote master or slave servers. ;  ; virtual TObjString * SendCoordinator (Int_t kind, const char *msg=0, Int_t int2=0);  Send message to intermediate coordinator. ;  ; virtual Int_t SendGroupPriority (const char *, Int_t);  ; virtual void SetAlias (const char *alias);  Set an alias for this session. ;  ; void SetSocket (TSocket *s);  ; virtual void SetStatus (Int_t st);  ; virtual void StopProcess (Bool_t abort, Int_t timeout);  Sent stop/abort request to PROOF server. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fArchComp;  ; Long64_t fBytesRead;  ; Float_t fCpuTime;  ; TString fGroup;  ; TString fImage;  ; TFileHandler * fInput;  ; TString fMsd;  ; TString fName;  ; TString fOrdinal;  ; Int_t fParallel;  ; Int_t fPerfIdx;  ; Int_t fPort;  ; TProof * fProof;  ; TString fProofWorkDir;  ; Int_t fProtocol;  ; Float_t fRealTime;  ; TString fROOTVers;  ; TString fSessionTag;  ; ESlaveType fSlaveType;  ; TSocket * fSocket;  ; Int_t fStatus;  ; TString fUser;  ; TString fWorkDir;  . Private Member Functions;  TSlave (const char *host, const char *ord, Int_t perf, const char *image, TProof *proof, Int_t stype, const char *workdir, const char *msd, Int_t=1);  Create a PROOF slave object. Called via the TProof ctor. ;  ;  TSlave (const TSlave &s);  ; void Init (const char *host, Int_t port, Int_t stype);  Init a PROOF slave object. ;  ; Int_t OldAuthSet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlave.html:12199,inherit,inherited,12199,doc/master/classTSlave.html,https://root.cern,https://root.cern/doc/master/classTSlave.html,1,['inherit'],['inherited']
Modifiability,"at (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwnerValue = (1ULL << ( 15 )); };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print the collection entry. ;  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMap (const TMap &map)=delete;  ; TMap & operator= (const TMap &map)=delete;  . Private Attributes; THashTable * fTable;  . Friends; class TMapIter;  . Additional Inherited Members;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TMap.h>. Inheritance diagram for TMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TMapIter TMap::Iterator_t. Definition at line 56 of file TMap.h. Member Enumeration Documentation. ◆ EStatusBits. enum TMap::EStatusBits. protected . EnumeratorkIsOwnerValue . Definition at line 51 of file TMap.h. Constructor & Destructor Documentation. ◆ TMap() [1/2]. TMap::TMap ; (; const TMap & ; map). privatedelete . ◆ TMap() [2/2]. TMap::TMap ; (; Int_t ; capacity = TCollection:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMap.html:16070,inherit,inherited,16070,doc/master/classTMap.html,https://root.cern,https://root.cern/doc/master/classTMap.html,1,['inherit'],['inherited']
Modifiability,"at by default all variables are not fixed. bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings& pars) const; get variable settings in a variable object (like ROOT::Fit::ParamsSettings). bool SetVariableInitialRange(unsigned int , double , double ); set the initial range of an existing variable. bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. const double * X() const; return pointer to X values at the minimum. double Edm() const; return expected distance reached from the minimum (re-implement if minimizer provides it. { return -1; }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return NULL; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NIterations() const; number of iterations to reach the minimum. { return NCalls(); }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total; (re-implement if minimizer supports bounded parameters). { return NDim(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. { return NULL; }. double CovMatrix(unsigned int ivar, unsigned int jvar) const; return covariance matrices element for variables ivar,jvar; if the variable is fixed the return value is zero; The ordering of the variables is the same as in the parameter and errors vectors. bool GetCovMatrix(double* covMat) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Min",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Minimizer.html:8436,variab,variables,8436,root/html602/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Minimizer.html,4,['variab'],['variables']
Modifiability,"at can be found in the ROOT include; path or the current directory.; If 'name' contains any ACLiC style information (e.g. trailing +[+][g|O]),; it will be striped off 'name'.; If fullpath is != 0, the full path to the file is returned in *fullpath,; which must be deleted by the caller. const char * DirName(const char* pathname); Return the directory name in pathname. DirName of /user/root is /user.; In case no dirname is specified ""."" is returned. const char * UnixPathName(const char* unixpathname); Convert from a Unix pathname to a local pathname. E.g. from /user/root to \user\root. char * ConcatFileName(const char* dir, const char* name); Concatenate a directory and a file name. User must delete returned string. const char * PrependPathName(const char* dir, TString& name); Concatenate a directory and a file name. const char * ExpandFileName(const char* fname); Expand a pathname getting rid of special shell characters like ~.$, etc.; For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; environment variables in a pathname. If compatibility is not an issue; you can use on Unix directly $XXX. This is a protected function called; from the OS specific system classes, like TUnixSystem and TWinNTSystem.; Returns the expanded filename or 0 in case of error. Bool_t ExpandPathName(TString& path); Expand a pathname getting rid of special shell characaters like ~.$, etc.; For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; environment variables in a pathname. If compatibility is not an issue; you can use on Unix directly $XXX. char * ExpandPathName(const char* path); Expand a pathname getting rid of special shell characaters like ~.$, etc.; For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; environment variables in a pathname. If compatibility is not an issue; you can use on Unix directly $XXX. The user must delete returned string. Bool_t AccessPathName(const char* path, EAccessMode mode = kFileExists); Returns FALSE if one can a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSystem.html:25048,variab,variables,25048,root/html528/TSystem.html,https://root.cern,https://root.cern/root/html528/TSystem.html,10,['variab'],['variables']
Modifiability,"at cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooCachedReal.h>. Inheritance diagram for RooCachedReal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooCachedReal() [1/4]. RooCachedReal::RooCachedReal ; (; ). inline . Definition at line 22 of file RooCachedReal.h. ◆ RooCachedReal() [2/4]. RooCachedReal::RooCachedReal ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; _func, . const RooArgSet & ; cacheObs . ). Constructor taking name, title and function to be cached and fixed choice of variable to cache. ; To control granularity of the binning of the cache histogram set the desired properties in the binning named ""cache"" in the observables of the function. If the fixed set of cache observables does not match the observables defined in the use context of the p.d.f the cache is still filled completely. Ee.g. when it is specified to cache x and p and only x is a observable in the given use context the cache histogram will store sampled values for all values of observable x and parameter p. In such a mode of operation the cache will also not be recalculated if the observable p changes ; Definition at line 68 of file RooCachedReal.cxx. ◆ RooCachedReal() [3/4]. RooCachedReal::RooCachedReal ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; _func . ). Constructor taking name, title and function to be cached. ; To control granularity of the binning of the cache histogram set the desired properties in the binning named ""cache"" in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:63636,variab,variable,63636,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,1,['variab'],['variable']
Modifiability,"at doesn t take the name and title;  . Protected Member Functions; Items::iterator findItem (std::string const &name);  ; Items::const_iterator findItem (std::string const &name) const;  ; TString histName () const;  Construct automatic name of internal TH1. ;  ; void initialize ();  Perform initialization that is common to all constructors. ;  ; void updateFitRangeNorm (const RooPlotable *rp, bool refreshNorm=false);  Update our plot normalization over our plot variable's fit range, which will be determined by the first suitable object added to our plot. ;  ; void updateFitRangeNorm (const TH1 *hist);  Update our plot normalization over our plot variable's fit range, which will be determined by the first suitable object added to our plot. ;  ; void updateYAxis (double ymin, double ymax, const char *label="""");  Update our y-axis limits to accommodate an object whose spread in y is (ymin,ymax). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; double _defYmax = 1.0;  Default maximum for Yaxis (as calculated from contents) ;  ; double _defYmin = 1e-5;  Default minimum for Yaxis (as calculated from contents) ;  ; TDirectory * _dir = nullptr;  ! non-persistent ;  ; TH1 * _hist = nullptr;  Histogram that we uses as basis for drawing the content. ;  ; Items _items;  A list of the items we contain. ;  ; double _normBinWidth = 0;  Histogram bin width (for normalization) ;  ; double _normNumEvts = 0;  Number of events in histogram (for normalization) ;  ; const RooPlotable * _normObj = nullptr;  ! Pointer to normalization object ; ;  ; RooArgSet * _normVars = nullptr;  Variables that PDF plots should be normalized over. ;  ; double _padFactor;  Scale our y-axis to _padFactor of our maximum contents. ;  ; RooAbsRealLValue * _plotVar = nullptr;  The variable we are plotting. ;  ; RooArgSet * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:25296,inherit,inherited,25296,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['inherit'],['inherited']
Modifiability,"at flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TEnvRec (const char *n, const char *v, const char *t, EEnvLevel l);  Ctor of a single resource. ;  ; void ChangeValue (const char *v, const char *t, EEnvLevel l, Bool_t append=kFALSE, Bool_t ignoredup=kFALSE);  Change the value of a resource. ;  ; Int_t Compare (const TObject *obj) const override;  Comparison function for resources. ;  ; TString ExpandValue (const char *v);  Replace all strings by the value defined in the shell (obtained via TSystem::Getenv()). ;  . Private Attributes; EEnvLevel fLevel;  ; Bool_t fModified;  ; TString fName;  ; TString fType;  ; TString fValue;  . Friends; class TEnv;  ; class TEnvParser;  ; class TReadEnvParser;  ; class TWriteEnvParser;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEnv.h>. Inheritance diagram for TEnvRec:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnvRec.html:9637,inherit,inherited,9637,doc/master/classTEnvRec.html,https://root.cern,https://root.cern/doc/master/classTEnvRec.html,1,['inherit'],['inherited']
Modifiability,"at flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/base/src/TListOfTypes.h>. Inheritance diagram for TListOfTypes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TListOfTypes(). TListOfTypes::TListOfTypes ; (; ). Definition at line 36 of file TListOfTypes.cxx. Member Function Documentation. ◆ FindObject() [1/3]. TObject * THashTable::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashTable.; Definition at line 67 of file THashTable.cxx. ◆ FindObject() [2/3]. TObject * TListOfTypes::FindObject ; (; con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfTypes.html:15198,inherit,inherited,15198,doc/master/classTListOfTypes.html,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html,1,['inherit'],['inherited']
Modifiability,at line 1168 of file MethodPDERS.cxx. Member Data Documentation. ◆ fAverageRMS. std::vector<Float_t> TMVA::MethodPDERS::fAverageRMS. private . average RMS of signal and background ; Definition at line 181 of file MethodPDERS.h. ◆ fBinaryTree. BinarySearchTree* TMVA::MethodPDERS::fBinaryTree. private . binary tree ; Definition at line 177 of file MethodPDERS.h. ◆ fDelta. std::vector<Float_t>* TMVA::MethodPDERS::fDelta. private . size of volume ; Definition at line 179 of file MethodPDERS.h. ◆ fDeltaFrac. Float_t TMVA::MethodPDERS::fDeltaFrac. private . fraction of RMS ; Definition at line 185 of file MethodPDERS.h. ◆ fFcnCall. Int_t TMVA::MethodPDERS::fFcnCall. protected . Definition at line 113 of file MethodPDERS.h. ◆ fGaussSigma. Double_t TMVA::MethodPDERS::fGaussSigma. private . size of Gauss in adaptive volume ; Definition at line 186 of file MethodPDERS.h. ◆ fGaussSigmaNorm. Double_t TMVA::MethodPDERS::fGaussSigmaNorm. private . size of Gauss in adaptive volume (normalised to dimensions) ; Definition at line 187 of file MethodPDERS.h. ◆ fHelpVolume. Volume* TMVA::MethodPDERS::fHelpVolume. protected . Definition at line 112 of file MethodPDERS.h. ◆ fInitializedVolumeEle. Bool_t TMVA::MethodPDERS::fInitializedVolumeEle. private . is volume element initialized ? ; Definition at line 197 of file MethodPDERS.h. ◆ fInitialScale. Float_t TMVA::MethodPDERS::fInitialScale. private . initial scale for adaptive volume ; Definition at line 195 of file MethodPDERS.h. ◆ fKernelEstimator. enum TMVA::MethodPDERS::EKernelEstimator TMVA::MethodPDERS::fKernelEstimator. private . ◆ fKernelString. TString TMVA::MethodPDERS::fKernelString. private . Definition at line 149 of file MethodPDERS.h. ◆ fkNNMax. Int_t TMVA::MethodPDERS::fkNNMax. private . max number of events in kNN tree ; Definition at line 200 of file MethodPDERS.h. ◆ fkNNMin. Int_t TMVA::MethodPDERS::fkNNMin. private . min number of events in kNN tree ; Definition at line 199 of file MethodPDERS.h. ◆ fMax_distance. Doub,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPDERS.html:45314,adapt,adaptive,45314,doc/master/classTMVA_1_1MethodPDERS.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPDERS.html,1,['adapt'],['adaptive']
Modifiability,"at line 1332 of file RooPlot.cxx. ◆ SetXTitle(). void RooPlot::SetXTitle ; (; const char * ; title). See alsoTH1::SetXTitle() ; Definition at line 1334 of file RooPlot.cxx. ◆ SetYTitle(). void RooPlot::SetYTitle ; (; const char * ; title). See alsoTH1::SetYTitle() ; Definition at line 1336 of file RooPlot.cxx. ◆ SetZTitle(). void RooPlot::SetZTitle ; (; const char * ; title). See alsoTH1::SetZTitle() ; Definition at line 1338 of file RooPlot.cxx. ◆ Streamer(). void RooPlot::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Definition at line 1357 of file RooPlot.cxx. ◆ StreamerNVirtual(). void RooPlot::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 256 of file RooPlot.h. ◆ updateFitRangeNorm() [1/2]. void RooPlot::updateFitRangeNorm ; (; const RooPlotable * ; rp, . bool ; refreshNorm = false . ). protected . Update our plot normalization over our plot variable's fit range, which will be determined by the first suitable object added to our plot. ; Definition at line 562 of file RooPlot.cxx. ◆ updateFitRangeNorm() [2/2]. void RooPlot::updateFitRangeNorm ; (; const TH1 * ; hist). protected . Update our plot normalization over our plot variable's fit range, which will be determined by the first suitable object added to our plot. ; Definition at line 550 of file RooPlot.cxx. ◆ updateNormVars(). void RooPlot::updateNormVars ; (; const RooArgSet & ; vars). Install the given set of observables are reference normalization variables for this frame. ; These observables are e.g. later used to automatically project out observables when plotting functions on this frame. This function is only effective when called the first time on a frame ; Definition at line 351 of file RooPlot.cxx. ◆ updateYAxis(). void RooPlot::updateYAxis ; (; double ; ymin, . double ; ymax, . const char * ; label = """" . ). protected . Update our y-axis limits to accommodate an object whose spread in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:54666,variab,variable,54666,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['variab'],['variable']
Modifiability,"at line 1692 of file TProfile.cxx. ◆ SetBinEntries(). void TProfile::SetBinEntries ; (; Int_t ; bin, . Double_t ; w . ). virtual . Set the number of entries in bin. ; Definition at line 1700 of file TProfile.cxx. ◆ SetBins() [1/7]. void TProfile::SetBins ; (; const Int_t * ; nbins, . const Double_t * ; range . ). inlineprotected . Definition at line 54 of file TProfile.h. ◆ SetBins() [2/7]. void TProfile::SetBins ; (; Int_t ; nbins, . Double_t ; xmin, . Double_t ; xmax . ). overridevirtual . Redefine x axis parameters. ; Reimplemented from TH1.; Definition at line 1708 of file TProfile.cxx. ◆ SetBins() [3/7]. void TProfile::SetBins ; (; Int_t ; nx, . const Double_t * ; xbins . ). overridevirtual . Redefine x axis parameters. ; Reimplemented from TH1.; Definition at line 1718 of file TProfile.cxx. ◆ SetBins() [4/7]. void TProfile::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins . ). inlineoverrideprivatevirtual . Redefine x and y axis parameters with variable bin sizes. ; The X and Y axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1 ; Reimplemented from TH1.; Definition at line 70 of file TProfile.h. ◆ SetBins() [5/7]. void TProfile::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins, . Int_t ; nz, . const Double_t * ; zBins . ). inlineoverrideprivatevirtual . Redefine x, y and z axis parameters with variable bin sizes. ; The X, Y and Z axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1, zBins is supposed to be of length nz+1 ; Reimpleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:85338,variab,variable,85338,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['variab'],['variable']
Modifiability,"at line 1852 of file RooProdPdf.cxx. ◆ fixRefRange(). void RooProdPdf::fixRefRange ; (; const char * ; rangeName). Definition at line 2096 of file RooProdPdf.cxx. ◆ forceAnalyticalInt(). bool RooProdPdf::forceAnalyticalInt ; (; const RooAbsArg & ; dep); const. overridevirtual . Force RooRealIntegral to offer all observables for internal integration. ; Reimplemented from RooAbsReal.; Definition at line 1580 of file RooProdPdf.cxx. ◆ genContext(). RooAbsGenContext * RooProdPdf::genContext ; (; const RooArgSet & ; vars, . const RooDataSet * ; prototype = nullptr, . const RooArgSet * ; auxProto = nullptr, . bool ; verbose = false . ); const. overrideprivatevirtual . Return generator context optimized for generating events from product p.d.f.s. ; Reimplemented from RooAbsPdf.; Definition at line 1695 of file RooProdPdf.cxx. ◆ generateEvent(). void RooProdPdf::generateEvent ; (; Int_t ; code). overridevirtual . Generate a single event with configuration specified by 'code' Defer internal generation to components as encoded in the _genCode registry for given generator code. ; Reimplemented from RooAbsPdf.; Definition at line 1767 of file RooProdPdf.cxx. ◆ getAnalyticalIntegralWN(). Int_t RooProdPdf::getAnalyticalIntegralWN ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const RooArgSet * ; normSet, . const char * ; rangeName = nullptr . ); const. overridevirtual . Determine which part (if any) of given integral can be performed analytically. ; If any analytical integration is possible, return integration scenario code.; RooProdPdf implements two strategies in implementing analytical integrals; First, PDF components whose entire set of dependents are requested to be integrated can be dropped from the product, as they will integrate out to 1 by construction; Second, RooProdPdf queries each remaining component PDF for its analytical integration capability of the requested set ('allVars'). It finds the largest common set of variables that can be integrated by all remain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProdPdf.html:91221,config,configuration,91221,doc/master/classRooProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooProdPdf.html,1,['config'],['configuration']
Modifiability,"at line 2383 of file RooLagrangianMorphFunc.cxx. ◆ setParameter() [3/3]. void RooLagrangianMorphFunc::setParameter ; (; const char * ; name, . double ; value, . double ; min, . double ; max, . double ; error . ). set one parameter to a specific value and range ; Definition at line 2396 of file RooLagrangianMorphFunc.cxx. ◆ setParameterConstant(). void RooLagrangianMorphFunc::setParameterConstant ; (; const char * ; paramname, . bool ; constant . ); const. call setConstant with the boolean argument provided on the parameter with the given name ; Definition at line 2451 of file RooLagrangianMorphFunc.cxx. ◆ setParameters() [1/4]. void RooLagrangianMorphFunc::setParameters ; (; const char * ; foldername). set the morphing parameters to those supplied in the sample with the given name ; Definition at line 2483 of file RooLagrangianMorphFunc.cxx. ◆ setParameters() [2/4]. void RooLagrangianMorphFunc::setParameters ; (; const ParamSet & ; params). retrieve a set of couplings (-?-) ; Definition at line 2747 of file RooLagrangianMorphFunc.cxx. ◆ setParameters() [3/4]. void RooLagrangianMorphFunc::setParameters ; (; const RooArgList * ; list). set the morphing parameters to those supplied in the list with the given name ; Definition at line 2506 of file RooLagrangianMorphFunc.cxx. ◆ setParameters() [4/4]. void RooLagrangianMorphFunc::setParameters ; (; TH1 * ; paramhist). set the morphing parameters to those supplied in the given param hist ; Definition at line 2474 of file RooLagrangianMorphFunc.cxx. ◆ setScale(). void RooLagrangianMorphFunc::setScale ; (; double ; val). set energy scale of the EFT expansion ; Definition at line 1969 of file RooLagrangianMorphFunc.cxx. ◆ setup(). void RooLagrangianMorphFunc::setup ; (; bool ; ownParams = true). private . setup this instance with the given set of operators and vertices if own=true, the class will own the operators template <class Base> ; Definition at line 1839 of file RooLagrangianMorphFunc.cxx. ◆ setupObservable(). RooRealV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:92363,coupling,couplings,92363,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,1,['coupling'],['couplings']
Modifiability,"at line 24 of file h1analysis.h. Public Member Functions;  h1analysis (TTree *tree=nullptr);  ;  ~h1analysis () override;  ; void Begin (TTree *tree) override;  ; TList * GetOutputList () const override;  ; void Init (TTree *tree) override;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; Bool_t Process (Long64_t entry) override;  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; void Reset ();  ; void SetInputList (TList *input) override;  ; void SetObject (TObject *obj) override;  ; void SetOption (const char *option) override;  ; void SlaveBegin (TTree *tree) override;  ; void SlaveTerminate () override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetStatus (Long64_t status);  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classh1analysis.html:1334,inherit,inherited,1334,doc/master/classh1analysis.html,https://root.cern,https://root.cern/doc/master/classh1analysis.html,1,['inherit'],['inherited']
Modifiability,"at line 35 of file RooParametricStepFunction.h. ◆ DeclFileName(). static const char * RooParametricStepFunction::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 55 of file RooParametricStepFunction.h. ◆ evaluate(). double RooParametricStepFunction::evaluate ; (; ); const. overrideprotectedvirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 189 of file RooParametricStepFunction.cxx. ◆ getAnalyticalIntegral(). Int_t RooParametricStepFunction::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. overridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented from RooAbsReal.; Definition at line 127 of file RooParametricStepFunction.cxx. ◆ getLimits(). double * RooParametricStepFunction::getLimits ; (; ). inline . Definition at line 40 of file RooParametricStepFunction.h. ◆ getnBins(). Int_t RooParametricStepFunction::getnBins ; (; ); const. inline . Definition at line 39 of file RooParametricStepFunction.h. ◆ IsA(). TClass * RooParametricStepFunction::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 55 of file RooParametricStepFunction.h. ◆ lastBinValue(). double RooParametricStepFunction::lastBinValue ; (; ); const. protected . Definition at line 174 of file RooParametricStepFunction.cxx. ◆ plotSamplingHint(). std::list< double > * RooParametricStepFunction::plotSamplingHint ; (; RooAbsRealLValu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooParametricStepFunction.html:80461,config,configuration,80461,doc/master/classRooParametricStepFunction.html,https://root.cern,https://root.cern/doc/master/classRooParametricStepFunction.html,1,['config'],['configuration']
Modifiability,"at line 456 of file Integrator.h. ◆ Result(). double ROOT::Math::IntegratorOneDim::Result ; (; ); const. inline . return the Result of the last Integral calculation ; Definition at line 411 of file Integrator.h. ◆ SetAbsTolerance(). void ROOT::Math::IntegratorOneDim::SetAbsTolerance ; (; double ; absTolerance). inline . set the desired absolute Error ; Definition at line 441 of file Integrator.h. ◆ SetFunction() [1/3]. void ROOT::Math::IntegratorOneDim::SetFunction ; (; const IGenFunction & ; f, . bool ; copy = false . ). inline . set one dimensional function for 1D integration ; Definition at line 202 of file Integrator.h. ◆ SetFunction() [2/3]. void ROOT::Math::IntegratorOneDim::SetFunction ; (; const IMultiGenFunction & ; f, . unsigned int ; icoord, . const double * ; x . ). Set integration function from a multi-dim function type. ; Can be used in case of having 1D function implementing the generic interface Parameters. fintegration function ; icoordindex of coordinate on which the integration is performed ; xarray of the passed variables values. In case of dim=1 a 0 can be passed . Definition at line 100 of file Integrator.cxx. ◆ SetFunction() [3/3]. template<class Function > . void ROOT::Math::IntegratorOneDim::SetFunction ; (; Function & ; f). inline . method to set the a generic integration function ; Parameters. fintegration function. The function type must implement the assignment operator, double operator() ( double x ) . Definition at line 492 of file Integrator.h. ◆ SetOptions(). void ROOT::Math::IntegratorOneDim::SetOptions ; (; const ROOT::Math::IntegratorOneDimOptions & ; opt). inline . set the options ; Definition at line 451 of file Integrator.h. ◆ SetRelTolerance(). void ROOT::Math::IntegratorOneDim::SetRelTolerance ; (; double ; relTolerance). inline . set the desired relative Error ; Definition at line 435 of file Integrator.h. ◆ Status(). int ROOT::Math::IntegratorOneDim::Status ; (; ); const. inline . return the Error Status of the last Integral",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html:20712,variab,variables,20712,doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html,1,['variab'],['variables']
Modifiability,"at line 49 of file RWebBrowserImp.cxx. ◆ ~RWebBrowserImp(). RWebBrowserImp::~RWebBrowserImp ; (; ). virtual . Constructor with width and height parameters. ; Definition at line 64 of file RWebBrowserImp.cxx. Member Function Documentation. ◆ BrowseObj(). void RWebBrowserImp::BrowseObj ; (; TObject * ; obj). finalvirtual . Browse specified object. ; Reimplemented from TBrowserImp.; Definition at line 110 of file RWebBrowserImp.cxx. ◆ Iconify(). void RWebBrowserImp::Iconify ; (; ). finalvirtual . Iconify browser. ; Reimplemented from TBrowserImp.; Definition at line 87 of file RWebBrowserImp.cxx. ◆ IsWeb(). Bool_t ROOT::RWebBrowserImp::IsWeb ; (; ); const. inlinefinalvirtual . Reimplemented from TBrowserImp.; Definition at line 39 of file RWebBrowserImp.hxx. ◆ NewBrowser() [1/2]. TBrowserImp * RWebBrowserImp::NewBrowser ; (; TBrowser * ; b, . const char * ; title, . Int_t ; x, . Int_t ; y, . UInt_t ; width, . UInt_t ; height, . Option_t * ; opt = """" . ). static . Factory method to create RWebBrowserImp via plugin. ; Definition at line 129 of file RWebBrowserImp.cxx. ◆ NewBrowser() [2/2]. TBrowserImp * RWebBrowserImp::NewBrowser ; (; TBrowser * ; b = nullptr, . const char * ; title = ""ROOT Browser"", . UInt_t ; width = 800, . UInt_t ; height = 500, . Option_t * ; opt = """" . ). static . Factory method to create RWebBrowserImp via plugin. ; Definition at line 121 of file RWebBrowserImp.cxx. ◆ Refresh(). void RWebBrowserImp::Refresh ; (; Bool_t ; = kFALSE). finalvirtual . Refresh browser. ; Reimplemented from TBrowserImp.; Definition at line 94 of file RWebBrowserImp.cxx. ◆ Show(). void RWebBrowserImp::Show ; (; ). finalvirtual . Show browser. ; Reimplemented from TBrowserImp.; Definition at line 101 of file RWebBrowserImp.cxx. ◆ ShowWarning(). void RWebBrowserImp::ShowWarning ; (; ). private . Show warning that RBrowser will be shown. ; Definition at line 71 of file RWebBrowserImp.cxx. Member Data Documentation. ◆ fHeight. Int_t ROOT::RWebBrowserImp::fHeight {0}. private .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebBrowserImp.html:5781,plugin,plugin,5781,doc/master/classROOT_1_1RWebBrowserImp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebBrowserImp.html,1,['plugin'],['plugin']
Modifiability,"at line 5639 of file TClass.cxx. ◆ DeleteArray() [2/2]. void TClass::DeleteArray ; (; void * ; ary, . Bool_t ; dtorOnly = kFALSE . ). Explicitly call operator delete[] for an array. ; Definition at line 5529 of file TClass.cxx. ◆ Destructor() [1/2]. void TClass::Destructor ; (; TClass::ObjectPtr ; obj, . Bool_t ; dtorOnly = kFALSE . ). Explicitly call destructor for object. ; Definition at line 5513 of file TClass.cxx. ◆ Destructor() [2/2]. void TClass::Destructor ; (; void * ; obj, . Bool_t ; dtorOnly = kFALSE . ). Explicitly call destructor for object. ; Definition at line 5400 of file TClass.cxx. ◆ DetermineCurrentStreamerInfo(). TVirtualStreamerInfo * TClass::DetermineCurrentStreamerInfo ; (; ). private . Determine and set pointer to current TVirtualStreamerInfo. ; Definition at line 5684 of file TClass.cxx. ◆ Draw(). void TClass::Draw ; (; Option_t * ; option = """"). overridevirtual . Draw detailed class inheritance structure. ; If a class B inherits from a class A, the description of B is drawn on the right side of the description of A. Member functions overridden by B are shown in class A with a blue line erasing the corresponding member function ; Reimplemented from TObject.; Definition at line 2487 of file TClass.cxx. ◆ Dump() [1/2]. void TClass::Dump ; (; ); const. inlineoverridevirtual . Dump contents of object on stdout. ; Using the information in the object dictionary (class TClass) each data member is interpreted. If a data member is a pointer, the pointer value is printed; The following output is the Dump of a TArrow object: fAngle 0 Arrow opening angle (degrees); fArrowSize 0.2 Arrow Size; fOption.*fData; fX1 0.1 X of 1st point; fY1 0.15 Y of 1st point; fX2 0.67 X of 2nd point; fY2 0.83 Y of 2nd point; fUniqueID 0 object unique identifier; fBits 50331648 bit field status word; fLineColor 1 line color; fLineStyle 1 line style; fLineWidth 1 line width; fFillColor 19 fill area color; fFillStyle 1001 fill area style; X#define X(type, name); angleOption_t O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:62969,inherit,inherits,62969,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['inherit'],['inherits']
Modifiability,"at line 5706 of file TClass.cxx. ◆ DeleteArray() [2/2]. void TClass::DeleteArray ; (; void * ; ary, . Bool_t ; dtorOnly = kFALSE . ). Explicitly call operator delete[] for an array. ; Definition at line 5596 of file TClass.cxx. ◆ Destructor() [1/2]. void TClass::Destructor ; (; TClass::ObjectPtr ; obj, . Bool_t ; dtorOnly = kFALSE . ). Explicitly call destructor for object. ; Definition at line 5580 of file TClass.cxx. ◆ Destructor() [2/2]. void TClass::Destructor ; (; void * ; obj, . Bool_t ; dtorOnly = kFALSE . ). Explicitly call destructor for object. ; Definition at line 5467 of file TClass.cxx. ◆ DetermineCurrentStreamerInfo(). TVirtualStreamerInfo * TClass::DetermineCurrentStreamerInfo ; (; ). private . Determine and set pointer to current TVirtualStreamerInfo. ; Definition at line 5751 of file TClass.cxx. ◆ Draw(). void TClass::Draw ; (; Option_t * ; option = """"). overridevirtual . Draw detailed class inheritance structure. ; If a class B inherits from a class A, the description of B is drawn on the right side of the description of A. Member functions overridden by B are shown in class A with a blue line erasing the corresponding member function ; Reimplemented from TObject.; Definition at line 2554 of file TClass.cxx. ◆ Dump() [1/2]. void TClass::Dump ; (; ); const. inlineoverridevirtual . Dump contents of object on stdout. ; Using the information in the object dictionary (class TClass) each data member is interpreted. If a data member is a pointer, the pointer value is printed; The following output is the Dump of a TArrow object: fAngle 0 Arrow opening angle (degrees); fArrowSize 0.2 Arrow Size; fOption.*fData; fX1 0.1 X of 1st point; fY1 0.15 Y of 1st point; fX2 0.67 X of 2nd point; fY2 0.83 Y of 2nd point; fUniqueID 0 object unique identifier; fBits 50331648 bit field status word; fLineColor 1 line color; fLineStyle 1 line style; fLineWidth 1 line width; fFillColor 19 fill area color; fFillStyle 1001 fill area style; X#define X(type, name); angleOption_t O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:62970,inherit,inherits,62970,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['inherit'],['inherits']
Modifiability,"at line 86 of file TSelectorDraw.cxx. Member Function Documentation. ◆ Begin(). void TSelectorDraw::Begin ; (; TTree * ; tree). overridevirtual . Called every time a loop on the tree(s) starts. ; Reimplemented from TSelector.; Definition at line 105 of file TSelectorDraw.cxx. ◆ Class(). static TClass * TSelectorDraw::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSelectorDraw::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TSelectorDraw::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 121 of file TSelectorDraw.h. ◆ ClearFormula(). void TSelectorDraw::ClearFormula ; (; ). protectedvirtual . Delete internal buffers. ; Definition at line 941 of file TSelectorDraw.cxx. ◆ CompileVariables(). bool TSelectorDraw::CompileVariables ; (; const char * ; varexp = """", . const char * ; selection = """" . ). protectedvirtual . Compile input variables and selection expression. ; varexp is an expression of the general form e1:e2:e3 where e1,etc is a formula referencing a combination of the columns; Example: varexp = x simplest case: draw a 1-Dim distribution of column named x; = sqrt(x) : draw distribution of sqrt(x); = x*y/z; = y:sqrt(x) 2-Dim distribution of y versus sqrt(x); selection is an expression with a combination of the columns; Example: selection = ""x<y && sqrt(z)>3.2""; in a selection all the C++ operators are authorized; Return false if any of the variable is not compilable. ; Definition at line 976 of file TSelectorDraw.cxx. ◆ DeclFileName(). static const char * TSelectorDraw::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 121 of file TSelectorDraw.h. ◆ GetAction(). virtual Int_t TSelectorDraw::GetAction ; (; ); const. inlinevirtual . Definition at line 80 of file TSelectorDraw.h. ◆ GetCleanElist(). virtual bool TSelectorDraw::GetCleanElist ; (; ); const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorDraw.html:18516,variab,variables,18516,doc/master/classTSelectorDraw.html,https://root.cern,https://root.cern/doc/master/classTSelectorDraw.html,1,['variab'],['variables']
Modifiability,"at line 91 of file KDEKernel.h. ◆ DeclFileName(). static const char * TMVA::KDEKernel::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 91 of file KDEKernel.h. ◆ GetBinKernelIntegral(). Float_t TMVA::KDEKernel::GetBinKernelIntegral ; (; Float_t ; lowr, . Float_t ; highr, . Float_t ; mean, . Int_t ; binnum . ). calculates the integral of the Kernel ; Definition at line 217 of file KDEKernel.cxx. ◆ GetName(). const char * TMVA::KDEKernel::GetName ; (; ); const. inline . Definition at line 71 of file KDEKernel.h. ◆ IsA(). virtual TClass * TMVA::KDEKernel::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 91 of file KDEKernel.h. ◆ Log(). MsgLogger & TMVA::KDEKernel::Log ; (; ); const. inlineprivate . Definition at line 89 of file KDEKernel.h. ◆ SetKernelType(). void TMVA::KDEKernel::SetKernelType ; (; EKernelType ; ktype = kGauss). fIter == 1 —> nonadaptive KDE fIter == 2 —> adaptive KDE ; Definition at line 112 of file KDEKernel.cxx. ◆ Streamer(). virtual void TMVA::KDEKernel::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TMVA::KDEKernel::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 91 of file KDEKernel.h. Member Data Documentation. ◆ fFineFactor. Float_t TMVA::KDEKernel::fFineFactor. private . fine tuning factor for Adaptive KDE: factor to multiply the ""width"" of the Kernel function ; Definition at line 79 of file KDEKernel.h. ◆ fFirstIterHist. TH1F* TMVA::KDEKernel::fFirstIterHist. private . histogram to be filled in the hidden iteration ; Definition at line 83 of file KDEKernel.h. ◆ fHiddenIteration. Bool_t TMVA::KDEKernel::fHiddenIteration. private . Defines if whats currently running is the. ; Definition at line 85 of file KDEKernel.h. ◆ fHist. TH1F* TMVA::KDEKernel::fHist. private . copy of input histogram ; Definition at line 82 of file KDEKernel.h. ◆ fIter. EKernelIter TMVA::KDEKernel::f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1KDEKernel.html:4708,adapt,adaptive,4708,doc/master/classTMVA_1_1KDEKernel.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1KDEKernel.html,1,['adapt'],['adaptive']
Modifiability,"at represent a real value and implements functionality common to al...Definition RooAbsReal.h:59; RooAbsReal::createIntegralRooFit::OwningPtr< RooAbsReal > createIntegral(const RooArgSet &iset, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) constCreate an object that represents the integral of the function over one or more observables listed in ...Definition RooAbsReal.cxx:514; RooAbsReal::getValdouble getVal(const RooArgSet *normalisationSet=nullptr) constEvaluate object.Definition RooAbsReal.h:103; RooAbsReal::setIntegratorConfigvoid setIntegratorConfig()Remove the specialized numeric integration configuration associated with this object.Definition RooAbsReal.cxx:3346; RooAbsReal::forceNumIntvirtual void forceNumInt(bool flag=true)Definition RooAbsReal.h:169; RooAbsReal::getIntegratorConfigconst RooNumIntConfig * getIntegratorConfig() constReturn the numeric integration configuration used for this object.Definition RooAbsReal.cxx:3309; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooExponentialExponential PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooMsgService::instancestatic RooMsgService & instance()Return reference to singleton instance.Definition RooMsgService.cxx:345; RooMsgService::getStreamStreamConfig & getStream(Int_t id)Definition RooMsgService.h:161; RooNumIntConfigHolds the configuration parameters of the various numeric integrators used by RooRealIntegral.Definition RooNumIntConfig.h:25; RooPowerSumRooPowerSum implements a power law PDF of the form.Definition RooPowerSum.h:20; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooRealVar::setBinsvoid setBins(I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf614__binned__fit__problems_8C.html:10575,config,configuration,10575,doc/master/rf614__binned__fit__problems_8C.html,https://root.cern,https://root.cern/doc/master/rf614__binned__fit__problems_8C.html,1,['config'],['configuration']
Modifiability,"at should be checked for read events; TFdSet*fReadready!Files with reads waiting; Int_tfSigcntNumber of pending signals; TSeqCollection*fSignalHandlerList of signal handlers; TFdSet*fSignals!Signals that were trapped; TStringfSoExtExtension of shared library (.so, .sl, .a, .dll, etc.); TSeqCollection*fStdExceptionHandlerList of std::exception handlers; TSeqCollection*fTimersList of timers; TStringTNamed::fTitleobject title; TStringfWdpathWorking directory; TFdSet*fWritemask!Files that should be checked for write events; TFdSet*fWriteready!Files with writes waiting. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSystem(const char* name = ""Generic"", const char* title = ""Generic System""); Create a new OS interface. ~TSystem(); Delete the OS interface. Bool_t Init(); Initialize the OS interface. void SetProgname(const char* name); Set the application name (from command line, argv[0]) and copy it in; gProgName. void SetDisplay(); Set DISPLAY environment variable based on utmp entry. Only for UNIX. void SetErrorStr(const char* errstr); Set the system error string. This string will be used by GetError().; To be used in case one does not want or can use the system error; string (e.g. because error is generated by a third party POSIX like; library that does not use standard errno). const char * GetError(); Return system error string. Int_t GetErrno(); Static function returning system error number. void ResetErrno(); Static function resetting system error number. void RemoveOnExit(TObject* obj); Objects that should be deleted on exit of the OS interface. const char * HostName(); Return the system's host name. void NotifyApplicationCreated(); Hook to tell TSystem that the TApplication object has been created. void Beep(Int_t freq = -1, Int_t duration = -1, Bool_t setDefault = kFALSE); Beep for duration milliseconds with a tone of freqency freq.; Defaults to printing the '\a' character to stdout.; If freq or duration is <0 respectivel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSystem.html:17756,variab,variable,17756,root/html528/TSystem.html,https://root.cern,https://root.cern/root/html528/TSystem.html,8,['variab'],['variable']
Modifiability,"at sigma, double threshold,; bool backgroundRemove,int deconIterations,; bool markov,; int averWindow); ��;  ; This; function searches for peaks in source spectrum. It is based on deconvolution; method. First the background is removed (if desired), then Markov smoothed; spectrum is calculated (if desired), then the response function is generated; according to given sigma and deconvolution is carried out. The order of peaks; is arranged according to their heights in the spectrum after background; elimination. The highest peak is the first in the list. On success it returns; number of found peaks.;  ; Parameters:; ������� source-pointer to the matrix of source; spectrum����������������� ; ������� dest-resulting spectrum after deconvolution; ������� ssizex, ssizey-lengths of the source and; destination spectra��������������� ; ������� sigma-sigma of searched peaks; threshold- threshold; value in % for selected peaks, peaks with amplitude less than; threshold*highest_peak/100 are ignored; backgroundRemove- background_remove-logical variable, true if the removal of; background before deconvolution is desired� ; deconIterations-number of iterations in; deconvolution operation; markov-logical variable, if it is true,; first the source spectrum is replaced by new spectrum calculated using Markov; chains method ; averWindow-width of; averaging smoothing window ;  ; References:; [1]; M.A. Mariscotti: A method for identification of peaks in the presence of; background and its application to spectrum analysis. NIM 50 (1967), 309-320.; [2]; �M. Morh�č, J. Kliman, V.; Matou�ek, M. Veselsk�, I. Turzo.:Identification; of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000); 108-125.; [3]; Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376; (1996), 451. . Examples of peak searching; method;  ; SearchHighRes function provides users with the possibility; to vary the input parameters and with the access to the output deconvolved data; in the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrum2.html:37625,variab,variable,37625,root/html528/TSpectrum2.html,https://root.cern,https://root.cern/root/html528/TSpectrum2.html,12,['variab'],['variable']
Modifiability,"at the beginning. ;  ; Int_t UnzipCache (Int_t index);  This inflates a basket in the cache. ;  ; void UpdateBranches (TTree *tree) override;  update pointer to current Tree and recompute pointers to the branches in the cache ;  ;  Public Member Functions inherited from TTreeCache;  TTreeCache ();  Default Constructor. ;  ;  TTreeCache (TTree *tree, Int_t buffersize=0);  Constructor. ;  ;  ~TTreeCache () override;  Destructor. (in general called by the TFile destructor) ;  ; virtual void Disable ();  ; virtual Int_t DropBranch (const char *branch, bool subbranches=false);  Remove a branch to the list of branches to be stored in the cache this is to be used by user (thats why we pass the name of the branch). ;  ; virtual Int_t DropBranch (TBranch *b, bool subbranches=false);  Remove a branch to the list of branches to be stored in the cache this function is called by TBranch::GetBasket. ;  ; virtual void Enable ();  ; const TObjArray * GetCachedBranches () const;  ; EPrefillType GetConfiguredPrefillType () const;  Return the desired prefill type from the environment or resource variable. ;  ; Double_t GetEfficiency () const;  Give the total efficiency of the primary cache... defined as the ratio of blocks found in the cache vs. ;  ; Double_t GetEfficiencyRel () const;  This will indicate a sort of relative efficiency... a ratio of the reads found in the cache to the number of reads so far. ;  ; virtual Int_t GetEntryMax () const;  ; virtual Int_t GetEntryMin () const;  ; virtual EPrefillType GetLearnPrefill () const;  ; Double_t GetMissEfficiency () const;  The total efficiency of the 'miss cache' - defined as the ratio of blocks found in the cache versus the number of blocks prefetched. ;  ; Double_t GetMissEfficiencyRel () const;  Relative efficiency of the 'miss cache' - ratio of the reads found in cache to the number of reads so far. ;  ; bool GetOptimizeMisses () const;  ; TTree * GetTree () const;  ; bool IsAutoCreated () const;  ; virtual bool IsEnabled () cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTreeCacheUnzip.html:5170,variab,variable,5170,doc/v632/classTTreeCacheUnzip.html,https://root.cern,https://root.cern/doc/v632/classTTreeCacheUnzip.html,2,['variab'],['variable']
Modifiability,"at the construction and destruction of; each object.; . Function Members (Methods); public:. RooTrace(); RooTrace(const RooTrace&); virtual~RooTrace(); static voidactive(Bool_t flag); static voidcallgrind_dump(); static voidcallgrind_zero(); static TClass*Class(); static voidcreate(const TObject* obj); static voiddestroy(const TObject* obj); static voiddump(); static voiddump(ostream& os, Bool_t sinceMarked = kFALSE); virtual TClass*IsA() const; static voidmark(); RooTrace&operator=(const RooTrace&); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); static voidverbose(Bool_t flag). protected:. voidaddPad(const TObject* ref, Bool_t doPad); static voidcreate2(const TObject* obj); static voiddestroy2(const TObject* obj); Bool_tremovePad(const TObject* ref). Data Members; protected:. static Bool_t_active; static RooLinkedList_list; static RooLinkedList_markList; static Bool_t_verbose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void create(const TObject* obj); Register creation of object 'obj'. void destroy(const TObject* obj); Register deletion of object 'obj'. void active(Bool_t flag); If flag is true, memory tracing is activated. void verbose(Bool_t flag); If flag is true, a message will be printed at each; object creation or deletion. void create2(const TObject* obj); Back end function of create(), register creation of object 'obj'. void destroy2(const TObject* obj); Back end function of destroy(), register deletion of object 'obj'. void mark(); Put marker in object list, that allows to dump contents of list; relative to this marker. void dump(); Dump contents of object registry to stdout. void dump(ostream& os, Bool_t sinceMarked = kFALSE); Dump contents of object register to stream 'os'. If sinceMarked is; true, only object created after the last call to mark() are shown. void callgrind_zero(); Utility function to trigger zeroing of callgrind counters. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooTrace.html:1473,Inherit,Inheritance,1473,root/html532/RooTrace.html,https://root.cern,https://root.cern/root/html532/RooTrace.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"at the discrimination obtained by the above likelihood ratio is optimal, ie, no other method can beat it. However, in most practical applications of MVAs correlations are present. ; Linear correlations, measured from the training sample, can be taken into account in a straightforward manner through the square-root of the covariance matrix. The square-root of a matrix \( C \) is the matrix \( C′ \) that multiplied with itself yields \( C \): \( C \)= \( C′C′ \). We compute the square-root matrix (SQM) by means of diagonalising ( \( D \)) the covariance matrix:. \[; D = S^TCS \Rightarrow C' = S \sqrt{DS^T}; \]. and the linear transformation of the linearly correlated into the uncorrelated variables space is then given by multiplying the measured variable tuple by the inverse of the SQM. Note that these transformations are performed for both signal and background separately, since the correlation pattern is not the same in the two samples.; The above diagonalisation is complete for linearly correlated, Gaussian distributed variables only. In real-world examples this is not often the case, so that only little additional information may be recovered by the diagonalisation procedure. In these cases, non-linear methods must be applied. ; Definition at line 61 of file MethodLikelihood.h. Public Member Functions;  MethodLikelihood (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption="""");  standard constructor ;  ;  MethodLikelihood (DataSetInfo &theData, const TString &theWeightFile);  construct likelihood references from file ;  ; virtual ~MethodLikelihood ();  destructor ;  ; void AddWeightsXMLTo (void *parent) const;  write weights to XML ;  ; const Ranking * CreateRanking ();  computes ranking of input variables ;  ; Double_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  returns the likelihood estimator for signal fill a new Likelihood branch into the testTree ;  ; virtual Bool_t HasAnalysisType (Types::EA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html:2773,variab,variables,2773,doc/master/classTMVA_1_1MethodLikelihood.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html,1,['variab'],['variables']
Modifiability,at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 717 of file Minuit2Minimizer.cxx. ◆ ExamineMinimum(). bool ROOT::Minuit2::Minuit2Minimizer::ExamineMinimum ; (; const ROOT::Minuit2::FunctionMinimum & ; min). protected . examine the minimum result ; Definition at line 594 of file Minuit2Minimizer.cxx. ◆ FixVariable(). bool ROOT::Minuit2::Minuit2Minimizer::FixVariable ; (; unsigned int ; ivar). overridevirtual . fix an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 338 of file Minuit2Minimizer.cxx. ◆ GetCovMatrix(). bool ROOT::Minuit2::Minuit2Minimizer::GetCovMatrix ; (; double * ; cov); const. overridevirtual . Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ; The array will be filled as cov[i *ndim + j] The ordering of the variables is the same as in errors and parameter value. This is different from the direct interface of Minuit2 or TMinuit where the values were obtained only to variable parameters ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 755 of file Minuit2Minimizer.cxx. ◆ GetFCN(). virtual const ROOT::Minuit2::FCNBase * ROOT::Minuit2::Minuit2Minimizer::GetFCN ; (; ); const. inlineprotectedvirtual . Definition at line 287 of file Minuit2Minimizer.h. ◆ GetHessianMatrix(). bool ROOT::Minuit2::Minuit2Minimizer::GetHessianMatrix ; (; double * ; h); const. overridevirtual . Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ; The array will be filled as h[i *ndim + j] ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 784 of file Minuit2Minimizer.cxx. ◆ GetMinimizer(). virtual const ROOT::Minuit2::ModularFunctionMinimizer * ROOT::Minuit2::Minuit2Minimizer::GetMinimizer ; (; ); const. inlineprotectedvirtual . Definition at line 281,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:16554,variab,variable,16554,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,1,['variab'],['variable']
Modifiability,"at use direct OpenGL rendering; via <Class>GL class. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TAttBBox(); Float_t*AssertBBox(); static TClass*Class(); virtual voidComputeBBox(); Float_t*GetBBox(); Bool_tGetBBoxOK() const; virtual TClass*IsA() const; TAttBBox&operator=(const TAttBBox& tab); voidResetBBox(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidAssertBBoxExtents(Float_t epsilon = 0.005); voidBBoxCheckPoint(const Float_t* p); voidBBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidBBoxClear(); voidBBoxInit(Float_t infinity = 1e6); voidBBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0). Data Members; protected:. Float_t*fBBox! Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void BBoxInit(Float_t infinity = 1e6); Allocate and prepare for incremental filling. void BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); Create cube of volume (2*epsiolon)^3 at (x,y,z).; epsilon iz zero by default. void BBoxClear(); Remove BBox information. void AssertBBoxExtents(Float_t epsilon = 0.005); Assert extents of all sides of the bounding-box are at least epsilon. void BBoxCheckPoint(Float_t x, Float_t y, Float_t z). void BBoxCheckPoint(const Float_t* p). virtual ~TAttBBox(); { BBoxClear(); }. TAttBBox& operator=(const TAttBBox& tab). Bool_t GetBBoxOK() const; { return fBBox != 0; }. Float_t* GetBBox(); { return fBBox; }. Float_t* AssertBBox(); { if(fBBox == 0) ComputeBBox(); return fBBox; }. void ResetBBox(); { if(fBBox != 0) BBoxClear(); }. void ComputeBBox(). » Author: Matevz Tadel 7/4/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAttBBox.html:1335,Inherit,Inheritance,1335,root/html534/TAttBBox.html,https://root.cern,https://root.cern/root/html534/TAttBBox.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"at& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6); ROOT::Math::SVector<float,2>SVector<float,2>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7); ROOT::Math::SVector<float,2>SVector<float,2>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8); ROOT::Math::SVector<float,2>SVector<float,2>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9); ROOT::Math::SVector<float,2>SVector<float,2>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9, const float& a10); ROOT::Math::SVector<float,2>&Unit(). Data Members; public:. enum { kSize; };. private:. floatfArray[2]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SVector_float_2_.html:4050,Inherit,Inheritance,4050,root/html532/ROOT__Math__SVector_float_2_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SVector_float_2_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"at& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6); ROOT::Math::SVector<float,3>SVector<float,3>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7); ROOT::Math::SVector<float,3>SVector<float,3>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8); ROOT::Math::SVector<float,3>SVector<float,3>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9); ROOT::Math::SVector<float,3>SVector<float,3>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9, const float& a10); ROOT::Math::SVector<float,3>&Unit(). Data Members; public:. enum { kSize; };. private:. floatfArray[3]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SVector_float_3_.html:4140,Inherit,Inheritance,4140,root/html532/ROOT__Math__SVector_float_3_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SVector_float_3_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"at& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6); ROOT::Math::SVector<float,4>SVector<float,4>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7); ROOT::Math::SVector<float,4>SVector<float,4>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8); ROOT::Math::SVector<float,4>SVector<float,4>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9); ROOT::Math::SVector<float,4>SVector<float,4>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9, const float& a10); ROOT::Math::SVector<float,4>&Unit(). Data Members; public:. enum { kSize; };. private:. floatfArray[4]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SVector_float_4_.html:4050,Inherit,Inheritance,4050,root/html532/ROOT__Math__SVector_float_4_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SVector_float_4_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"at& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6); ROOT::Math::SVector<float,5>SVector<float,5>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7); ROOT::Math::SVector<float,5>SVector<float,5>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8); ROOT::Math::SVector<float,5>SVector<float,5>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9); ROOT::Math::SVector<float,5>SVector<float,5>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9, const float& a10); ROOT::Math::SVector<float,5>&Unit(). Data Members; public:. enum { kSize; };. private:. floatfArray[5]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SVector_float_5_.html:4050,Inherit,Inheritance,4050,root/html532/ROOT__Math__SVector_float_5_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SVector_float_5_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"at& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6); ROOT::Math::SVector<float,6>SVector<float,6>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7); ROOT::Math::SVector<float,6>SVector<float,6>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8); ROOT::Math::SVector<float,6>SVector<float,6>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9); ROOT::Math::SVector<float,6>SVector<float,6>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9, const float& a10); ROOT::Math::SVector<float,6>&Unit(). Data Members; public:. enum { kSize; };. private:. floatfArray[6]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SVector_float_6_.html:4140,Inherit,Inheritance,4140,root/html532/ROOT__Math__SVector_float_6_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SVector_float_6_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"at& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6); ROOT::Math::SVector<float,7>SVector<float,7>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7); ROOT::Math::SVector<float,7>SVector<float,7>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8); ROOT::Math::SVector<float,7>SVector<float,7>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9); ROOT::Math::SVector<float,7>SVector<float,7>(const float& a1, const float& a2, const float& a3, const float& a4, const float& a5, const float& a6, const float& a7, const float& a8, const float& a9, const float& a10); ROOT::Math::SVector<float,7>&Unit(). Data Members; public:. enum { kSize; };. private:. floatfArray[7]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVector<T,D>& operator=(const T& a1); assignment from a scalar (only for size 1 vector). SVector<T,D>& operator=(const VecExpr<A,T,D>& rhs); assignment from Vector Expression. unsigned int Dim(); return dimension $D$. { return D; }. T apply(unsigned int i) const; access the parse tree. Index starts from zero. const T* Array() const; return read-only pointer to internal array. T* Array(); return non-const pointer to internal array. iterator begin(); @name --- STL-like interface --- ; STL iterator interface. . iterator end(); STL iterator interface. . const_iterator begin() const; STL const_iterator interface. . const_iterator end() const; STL const_iterator interface. . bool operator==(const T& rhs); @name --- Operators --- ; element wise comparison. bool operator!=(const T& rhs); element wise comparison. bool operator==(const SVector<T,D>& rhs); element wise comparison. bool operator!=(const SVector<T,D>& rhs); element wise comparison.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__SVector_float_7_.html:4140,Inherit,Inheritance,4140,root/html532/ROOT__Math__SVector_float_7_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__SVector_float_7_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"at(Float_t ystat); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TAttPad(); TAttPad(const TAttPad&). Data Members; protected:. Float_tfAfileAlignment for the file name; Float_tfAstatAlignment for the statistics; Float_tfBottomMarginBottomMargin; Int_tfFrameBorderModepad frame border mode; Width_tfFrameBorderSizepad frame border size; Color_tfFrameFillColorpad frame fill color; Style_tfFrameFillStylepad frame fill style; Color_tfFrameLineColorpad frame line color; Style_tfFrameLineStylepad frame line style; Width_tfFrameLineWidthpad frame line width; Float_tfLeftMarginLeftMargin; Float_tfRightMarginRightMargin; Float_tfTopMarginTopMargin; Float_tfXfileX position where to draw the file name; Float_tfXstatX position where to draw the statistics; Float_tfYfileY position where to draw the file name; Float_tfYstatY position where to draw the statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttPad(); constructor. ~TAttPad(); destructor. void Copy(TAttPad& attpad) const; copy function. void Print(Option_t* option = """") const; print function. void ResetAttPad(Option_t* option = """"); reset pad attributes. void SetBottomMargin(Float_t bottommargin); -*-*-*-*-*Set Pad bottom margin in fraction of the pad height; *-* ===================================================. void SetLeftMargin(Float_t leftmargin); -*-*-*-*Set Pad left margin in fraction of the pad width; *-* ================================================. void SetRightMargin(Float_t rightmargin); -*-*-*-*Set Pad right margin in fraction of the pad width; *-* =================================================. void SetTopMargin(Float_t topmargin); -*-*-*-*Set Pad top margin in fraction of the pad height; *-* ================================================. void SetMargin(Float_t left, Float_t right, Float_t bottom, Float_t top); *-*-*-*-*-*-*-*-*Set all margins. vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TAttPad.html:2850,Inherit,Inheritance,2850,root/html602/TAttPad.html,https://root.cern,https://root.cern/root/html602/TAttPad.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"at); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. float*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNDArrayT_float_.html:6508,Inherit,Inheritance,6508,root/html534/TNDArrayT_float_.html,https://root.cern,https://root.cern/root/html534/TNDArrayT_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"at); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. short*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNDArrayT_short_.html:6508,Inherit,Inheritance,6508,root/html534/TNDArrayT_short_.html,https://root.cern,https://root.cern/root/html534/TNDArrayT_short_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"at); voidTMVA::Configurable::SetOptions(const TString& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); const TString&TMVA::Configurable::GetReferenceFile() const; TMVA::MsgLogger&TMVA::FitterBase::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareOptions(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTMVA::FitterBase::fClassNameremove TMVA:: from TObject name; TMVA::IFitterTarget&TMVA::FitterBase::fFitterTargetpointer to target of fitting procedure; TMVA::MsgLogger*TMVA::FitterBase::fLoggermessage logger; TMVA::MinuitWrapper*fMinWrapholds a wrapper around TMinuit; Int_tTMVA::FitterBase::fNparsnumber of parameters; const vector<TMVA::Interval*>TMVA::FitterBase::fRangesallowed intervals. private:. Bool_tfBatchbatch mode; Int_tfErrorL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MinuitFitter.html:6109,Config,Configurable,6109,root/html532/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__MinuitFitter.html,5,['Config'],['Configurable']
Modifiability,"at,...) -- Parameter formatting options, details given below; Label(const chat* label) -- Add header label to parameter box; Layout(Double_t xmin, -- Specify relative position of left,right side of box and top of box. Position of; Double_t xmax, Double_t ymax) bottom of box is calculated automatically from number lines in box; Cut(const char* expression) -- Apply given cut expression to data when calculating statistics; CutRange(const char* rangeName) -- Only consider events within given range when calculating statistics. Multiple; CutRange() argument may be specified to combine ranges. The Format(const char* what,...) has the following structure. const char* what -- Controls what is shown. ""N"" adds name, ""E"" adds error,; ""A"" shows asymmetric error, ""U"" shows unit, ""H"" hides the value; FixedPrecision(int n) -- Controls precision, set fixed number of digits; AutoPrecision(int n) -- Controls precision. Number of shown digits is calculated from error; + n specified additional digits (1 is sensible default); VerbatimName(Bool_t flag) -- Put variable name in a \verb+ + clause. RooPlot* statOn(RooPlot* frame, const char* what, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.14999999999999999, Double_t xmax = 0.65000000000000002, Double_t ymax = 0.84999999999999998, const char* cutSpec = 0, const char* cutRange = 0, const RooCmdArg* formatCmd = 0); Implementation back-end of statOn() mehtod with named arguments. TH1 * fillHistogram(TH1* hist, const RooArgList& plotVars, const char* cuts = """", const char* cutRange = 0) const; Loop over columns of our tree data and fill the input histogram. Returns a pointer to the; input histogram, or zero in case of an error. The input histogram can be any TH1 subclass, and; therefore of arbitrary dimension. Variables are matched with the (x,y,...) dimensions of the input; histogram according to the order in which they appear in the input plotVars list. TList* split(const RooAbsCategory& splitCat, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsData.html:30250,variab,variable,30250,root/html602/RooAbsData.html,https://root.cern,https://root.cern/root/html602/RooAbsData.html,4,['variab'],['variable']
Modifiability,"at,...) -- Parameter formatting options, details given below; Label(const chat* label) -- Add header label to parameter box; Layout(Double_t xmin, -- Specify relative position of left,right side of box and top of box. Position of; Double_t xmax, Double_t ymax) bottom of box is calculated automatically from number lines in box; Cut(const char* expression) -- Apply given cut expression to data when calculating statistics; CutRange(const char* rangeName) -- Only consider events within given range when calculating statistics. Multiple; CutRange() argument may be specified to combine ranges. The Format(const char* what,...) has the following structure. const char* what -- Controls what is shown. ""N"" adds name, ""E"" adds error,; ""A"" shows asymmetric error, ""U"" shows unit, ""H"" hides the value; FixedPrecision(int n) -- Controls precision, set fixed number of digits; AutoPrecision(int n) -- Controls precision. Number of shown digits is calculated from error; + n specified additional digits (1 is sensible default); VerbatimName(Bool_t flag) -- Put variable name in a \verb+ + clause. RooPlot* statOn(RooPlot* frame, const char* what, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.15, Double_t xmax = 0.65, Double_t ymax = 0.85, const char* cutSpec = 0, const char* cutRange = 0, const RooCmdArg* formatCmd = 0); Implementation back-end of statOn() mehtod with named arguments. TH1 * fillHistogram(TH1* hist, const RooArgList& plotVars, const char* cuts = """", const char* cutRange = 0) const; Loop over columns of our tree data and fill the input histogram. Returns a pointer to the; input histogram, or zero in case of an error. The input histogram can be any TH1 subclass, and; therefore of arbitrary dimension. Variables are matched with the (x,y,...) dimensions of the input; histogram according to the order in which they appear in the input plotVars list. TList* split(const RooAbsCategory& splitCat, Bool_t createEmptyDataSets = kFALSE) const; S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsData.html:27314,variab,variable,27314,root/html526/RooAbsData.html,https://root.cern,https://root.cern/root/html526/RooAbsData.html,6,['variab'],['variable']
Modifiability,"at,; in the event an application does not supply such function or; table, the facility still operates, and performs whatever part of; its purpose remains meaningful. (For example, a function in a library to compute square roots has; a purpose that is entirely well-defined independent of the; application. Therefore, Subsection 2d requires that any; application-supplied function or table used by this function must; be optional: if the application does not supply it, the square; root function must still compute square roots.). These requirements apply to the modified work as a whole. If; identifiable sections of that work are not derived from the Library,; and can be reasonably considered independent and separate works in; themselves, then this License, and its terms, do not apply to those; sections when you distribute them as separate works. But when you; distribute the same sections as part of a whole which is a work based; on the Library, the distribution of the whole must be on the terms of; this License, whose permissions for other licensees extend to the; entire whole, and thus to each and every part regardless of who wrote; it. Thus, it is not the intent of this section to claim rights or contest; your rights to work written entirely by you; rather, the intent is to; exercise the right to control the distribution of derivative or; collective works based on the Library. In addition, mere aggregation of another work not based on the Library; with the Library (or with a work based on the Library) on a volume of; a storage or distribution medium does not bring the other work under; the scope of this License. 3. You may opt to apply the terms of the ordinary GNU General Public; License instead of this License to a given copy of the Library. To do; this, you must alter all the notices that refer to this License, so; that they refer to the ordinary GNU General Public License, version 2,; instead of to this License. (If a newer version than version 2 of the; ordinary GN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/license.html:12634,extend,extend,12634,d/license.html,https://root.cern,https://root.cern/d/license.html,1,['extend'],['extend']
Modifiability,"at> > >fIsos; pair<double,double>fMinMax; TGLLevelPalettefPalette; TGLTH3SlicefXOYSlice; TGLTH3SlicefXOZSlice; TGLTH3SlicefYOZSlice. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLIsoPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Constructor. char * GetPlotInfo(Int_t px, Int_t py); Return info for plot part under cursor. Bool_t InitGeometry(); Initializes meshes for 3d iso contours. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement.; User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement. void AddOption(const TString& option); No additional options for TGLIsoPainter. void ProcessEvent(Int_t event, Int_t px, Int_t py); Change color sheme. void InitGL() const; Initialize OpenGL state variables. void DeInitGL() const; Initialize OpenGL state variables. void DrawPlot() const; Draw mesh. void DrawSectionXOZ() const; Draw XOZ parallel section. void DrawSectionYOZ() const; Draw YOZ parallel section. void DrawSectionXOY() const; Draw XOY parallel section. Bool_t HasSections() const; Any section exists. void SetSurfaceColor(Int_t ind) const; Set color for surface. void SetMesh(TGLIsoPainter::Mesh_t& mesh, Double_t isoValue); Grid geometry. void DrawMesh(const TGLIsoPainter::Mesh_t& mesh, Int_t level) const; Draw TF3 surface. void FindMinMax(); Find max/min bin contents for TH3. TGLIsoPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord). » Author: Timur Pocheptsov 31/08/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2010-09-23 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLIsoPainter.html:4570,variab,variables,4570,root/html528/TGLIsoPainter.html,https://root.cern,https://root.cern/root/html528/TGLIsoPainter.html,1,['variab'],['variables']
Modifiability,"at> > >fIsos; pair<double,double>fMinMax; TGLLevelPalettefPalette; TGLTH3SlicefXOYSlice; TGLTH3SlicefXOZSlice; TGLTH3SlicefYOZSlice. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLIsoPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Constructor. char * GetPlotInfo(Int_t px, Int_t py); Return info for plot part under cursor. Bool_t InitGeometry(); Initializes meshes for 3d iso contours. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement.; User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement. void AddOption(const TString& option); No additional options for TGLIsoPainter. void ProcessEvent(Int_t event, Int_t px, Int_t py); Change color sheme. void InitGL() const; Initialize OpenGL state variables. void DeInitGL() const; Initialize OpenGL state variables. void DrawPlot() const; Draw mesh. void DrawSectionXOZ() const; Draw XOZ parallel section. void DrawSectionYOZ() const; Draw YOZ parallel section. void DrawSectionXOY() const; Draw XOY parallel section. Bool_t HasSections() const; Any section exists. void SetSurfaceColor(Int_t ind) const; Set color for surface. void SetMesh(TGLIsoPainter::Mesh_t& mesh, Double_t isoValue); Grid geometry. void DrawMesh(const TGLIsoPainter::Mesh_t& mesh, Int_t level) const; Draw TF3 surface. void FindMinMax(); Find max/min bin contents for TH3. TGLIsoPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord). » Author: Timur Pocheptsov 31/08/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2011-07-04 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGLIsoPainter.html:4685,variab,variables,4685,root/html530/TGLIsoPainter.html,https://root.cern,https://root.cern/root/html530/TGLIsoPainter.html,1,['variab'],['variables']
Modifiability,"at> > >fIsos; pair<double,double>fMinMax; TGLLevelPalettefPalette; TGLTH3SlicefXOYSlice; TGLTH3SlicefXOZSlice; TGLTH3SlicefYOZSlice. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLIsoPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Constructor. char * GetPlotInfo(Int_t px, Int_t py); Return info for plot part under cursor. Bool_t InitGeometry(); Initializes meshes for 3d iso contours. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement.; User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement. void AddOption(const TString& option); No additional options for TGLIsoPainter. void ProcessEvent(Int_t event, Int_t px, Int_t py); Change color sheme. void InitGL() const; Initialize OpenGL state variables. void DeInitGL() const; Initialize OpenGL state variables. void DrawPlot() const; Draw mesh. void DrawSectionXOZ() const; Draw XOZ parallel section. void DrawSectionYOZ() const; Draw YOZ parallel section. void DrawSectionXOY() const; Draw XOY parallel section. Bool_t HasSections() const; Any section exists. void SetSurfaceColor(Int_t ind) const; Set color for surface. void SetMesh(TGLIsoPainter::Mesh_t& mesh, Double_t isoValue); Grid geometry. void DrawMesh(const TGLIsoPainter::Mesh_t& mesh, Int_t level) const; Draw TF3 surface. void FindMinMax(); Find max/min bin contents for TH3. TGLIsoPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord). » Author: Timur Pocheptsov 31/08/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2011-11-03 20:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLIsoPainter.html:4866,variab,variables,4866,root/html532/TGLIsoPainter.html,https://root.cern,https://root.cern/root/html532/TGLIsoPainter.html,2,['variab'],['variables']
Modifiability,"at> > >fIsos; pair<double,double>fMinMax; TGLLevelPalettefPalette; TGLTH3SlicefXOYSlice; TGLTH3SlicefXOZSlice; TGLTH3SlicefYOZSlice. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLIsoPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Constructor. char * GetPlotInfo(Int_t px, Int_t py); Return info for plot part under cursor. Bool_t InitGeometry(); Initializes meshes for 3d iso contours. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement.; User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement. void AddOption(const TString& option); No additional options for TGLIsoPainter. void ProcessEvent(Int_t event, Int_t px, Int_t py); Change color sheme. void InitGL() const; Initialize OpenGL state variables. void DeInitGL() const; Initialize OpenGL state variables. void DrawPlot() const; Draw mesh. void DrawSectionXOZ() const; Draw XOZ parallel section. void DrawSectionYOZ() const; Draw YOZ parallel section. void DrawSectionXOY() const; Draw XOY parallel section. Bool_t HasSections() const; Any section exists. void SetSurfaceColor(Int_t ind) const; Set color for surface. void SetMesh(TGLIsoPainter::Mesh_t& mesh, Double_t isoValue); Grid geometry. void DrawMesh(const TGLIsoPainter::Mesh_t& mesh, Int_t level) const; Draw TF3 surface. void FindMinMax(); Find max/min bin contents for TH3. TGLIsoPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord). » Author: Timur Pocheptsov 31/08/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-13 19:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLIsoPainter.html:4885,variab,variables,4885,root/html534/TGLIsoPainter.html,https://root.cern,https://root.cern/root/html534/TGLIsoPainter.html,2,['variab'],['variables']
Modifiability,"at>&operator=(float); ROOT::TImpProxy<float>TImpProxy<float>(float). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(float ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id: TBranchProxy.h 41244 2011-10-06 19:42:35Z pcanal $ » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TImpProxy_float_.html:3940,Inherit,Inheritance,3940,root/html532/ROOT__TImpProxy_float_.html,https://root.cern,https://root.cern/root/html532/ROOT__TImpProxy_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"atStateUndefined; kMatStateSolid; kMatStateLiquid; kMatStateGas; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfAA of material; TObject*fCerenkovpointer to class with Cerenkov properties; Double_tfDensitydensity of material; TGeoElement*fElementpointer to element composing the material; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Int_tfIndexmaterial index; Double_tfIntLeninteraction length; TStringTNamed::fNameobject identifier; Double_tfPressurepressure; Double_tfRadLenradiation length; TObject*fShadershader with optical properties; TGeoMaterial::EGeoMaterialStatefStatematerial state; Double_tfTemperaturetemperature; TStringTNamed::fTitleobject title; Double_tfZZ of material. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMaterial(); Default constructor. TGeoMaterial(const char* name); constructor. TGeoMaterial(const char* name, Double_t a, Double_t z, Double_t rho, Double_t radlen = 0, Double_t intlen = 0); constructor. TGeoMaterial(const char* name, Double_t a, Double_t z, Double_t rho, TGeoMaterial::EGeoMaterialState state, Double_t temperature = STP_temperature, Double_t pressure = STP_pressure); Constructor with state, temperature and pressure. TGeoMaterial(const char* name, TGeoElement* elem, Double_t rho); constructor. TGeoMaterial(const TGeoMaterial& ); copy constructor. TGeoMaterial& operator=(const TGeoMaterial& ); assignment operator. ~TGeoMaterial(); Destructor. char * GetPointerName() const; Provide a pointer name containing uid. void SetRadLen(Double_t radlen, Double_t intlen = 0.); Set radiation/absorbtion lengths. If the values are negative, their absolute value; is taken, otherwise radlen is recomputed using G3 formula. Double_t Cou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMaterial.html:8365,Inherit,Inheritance,8365,root/html532/TGeoMaterial.html,https://root.cern,https://root.cern/root/html532/TGeoMaterial.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"atVars, const RooCmdArg& arg1,const RooCmdArg& arg2,; 1599 const RooCmdArg& arg3,const RooCmdArg& arg4, const RooCmdArg& arg5,const RooCmdArg& arg6) const; 1600{; 1601 ; 1602 // Select the pdf-specific commands; 1603 RooCmdConfig pc(""RooAbsPdf::generate("" + std::string(GetName()) + "")"");; 1604 pc.defineString(""dsetName"",""Name"",0,"""") ;; 1605 pc.defineInt(""verbose"",""Verbose"",0,0) ;; 1606 pc.defineInt(""extended"",""Extended"",0,0) ;; 1607 pc.defineInt(""nEvents"",""NumEvents"",0,0) ;; 1608 pc.defineDouble(""nEventsD"",""NumEventsD"",0,-1.) ;; 1609 pc.defineInt(""expectedData"",""ExpectedData"",0,0) ;; 1610 ; 1611 // Process and check varargs; 1612 pc.process(arg1,arg2,arg3,arg4,arg5,arg6) ;; 1613 if (!pc.ok(true)) {; 1614 return nullptr;; 1615 }; 1616 ; 1617 // Decode command line arguments; 1618 double nEvents = pc.getDouble(""nEventsD"") ;; 1619 if (nEvents<0) {; 1620 nEvents = pc.getInt(""nEvents"") ;; 1621 }; 1622 //bool verbose = pc.getInt(""verbose"") ;; 1623 bool extended = pc.getInt(""extended"") ;; 1624 bool expectedData = pc.getInt(""expectedData"") ;; 1625 const char* dsetName = pc.getString(""dsetName"") ;; 1626 ; 1627 if (extended) {; 1628 //nEvents = (nEvents==0?Int_t(expectedEvents(&whatVars)+0.5):nEvents) ;; 1629 nEvents = (nEvents==0 ? expectedEvents(&whatVars) :nEvents) ;; 1630 cxcoutI(Generation) << "" Extended mode active, number of events generated ("" << nEvents << "") is Poisson fluctuation on ""; 1631 << GetName() << ""::expectedEvents() = "" << nEvents << endl ;; 1632 // If Poisson fluctuation results in zero events, stop here; 1633 if (nEvents==0) {; 1634 return nullptr ;; 1635 }; 1636 } else if (nEvents==0) {; 1637 cxcoutI(Generation) << ""No number of events specified , number of events generated is ""; 1638 << GetName() << ""::expectedEvents() = "" << expectedEvents(&whatVars)<< endl ;; 1639 }; 1640 ; 1641 // Forward to appropriate implementation; 1642 auto data = generateBinned(whatVars,nEvents,expectedData,extended);; 1643 ; 1644 // Rename dataset to given name if supplied; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:79391,extend,extended,79391,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"at_t width=0.5);  Set the width of bars as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBinError (Int_t bin, Double_t error);  Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empty bin the bin error is set by default to the square root of their content. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Int_t binz, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinErrorOption (EBinErrorOpt type);  ; virtual void SetBins (Int_t nx, const Double_t *xBins);  Redefine x axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins);  Redefine x and y axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins);  Redefine x, y and z axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax);  Redefine x axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax);  Redefine x and y axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax);  Redefine x, y and z axis parameters. ;  ; virtual void SetBinsLength (Int_t=-1);  ; virtual void SetBuffer (Int_t buffersize, Option_t *option="""");  Set the maximum number of entries to be kept in the buffer. ;  ; virtual UInt_t SetCanExtend (UInt_t extendBitMask);  Make the histogram axes extendable / not extendable according to the bit mask returns the previous bit mask specifying which axes are extendable. ;  ; virtual void SetCellContent (Int_t binx, Int_t biny, Double_t content);  ; virtual void SetCellErr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:27020,variab,variable,27020,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,2,['variab'],['variable']
Modifiability,"at_t width=0.5);  Set the width of bars as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBinError (Int_t bin, Double_t error);  Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empty bin the bin error is set by default to the square root of their content. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Int_t binz, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinErrorOption (EBinErrorOpt type);  ; virtual void SetBins (Int_t nx, const Double_t *xBins);  Redefine x axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins);  Redefine x and y axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins);  Redefine x, y and z axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax);  Redefine x axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax);  Redefine x and y axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax);  Redefine x, y and z axis parameters. ;  ; virtual void SetBuffer (Int_t buffersize, Option_t *option="""");  Set the maximum number of entries to be kept in the buffer. ;  ; virtual UInt_t SetCanExtend (UInt_t extendBitMask);  Make the histogram axes extendable / not extendable according to the bit mask returns the previous bit mask specifying which axes are extendable. ;  ; virtual void SetCellContent (Int_t binx, Int_t biny, Double_t content);  ; virtual void SetCellError (Int_t binx, Int_t biny, Double_t conte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:28936,variab,variable,28936,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,13,['variab'],['variable']
Modifiability,"at_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; TEveVectorfPEndMomentum at the last point of extrapolation; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; vector<TEvePathMarkT<float> >fPathMarksTEveVector of known points along the track; Int_tfPdgPDG code; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; TEveTrackPropagator*fPropagatorPointer to shared render-style; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveLine::fRnrLine; Bool_tTEveLine::fRnrPoints; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTEveLine::fSmooth; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the source tree variables; Int_tfStatusStatus-word, user-defined.; TStringTEvePointSet::fTitleTitle/tooltip of the TEvePointSet.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveVectorfVStarting vertex; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Bool_tTEveLine::fgDefaultSmooth. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrack(); Default constructor. TEveTrack(TParticle* t, Int_t label, TEveTrackPropagator* prop = 0); Constructor from TParticle. TEveTrack(TEveMCTrack* t, TEveTrackPropagator* prop = 0); Constructor from TEveUtil Monte Carlo track. TEveTrack(TEveRecTrack* t, TEveTrackPropagator* pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTrack.html:28996,variab,variables,28996,root/html528/TEveTrack.html,https://root.cern,https://root.cern/root/html528/TEveTrack.html,1,['variab'],['variables']
Modifiability,"at_t>& values, const vector<Float_t>& targetValues, UInt_t theClass = 0, Double_t weight = 1., Double_t boostweight = 1.); constructor. Event(const vector<Float_t>& values, const vector<Float_t>& targetValues, const vector<Float_t>& spectatorValues, UInt_t theClass = 0, Double_t weight = 1., Double_t boostweight = 1.); constructor. Event(const vector<Float_t>& , UInt_t theClass, Double_t weight = 1., Double_t boostweight = 1.); constructor. Event(const vector<Float_t*>*& , UInt_t nvar); constructor for single events. Event(const TMVA::Event& ); copy constructor. ~Event(); Event destructor. void SetVariableArrangement(vector<UInt_t>*const m) const; set the variable arrangement. void CopyVarValues(const TMVA::Event& other); copies only the variable values. Float_t GetValue(UInt_t ivar) const; return value of i'th variable. Float_t GetSpectator(UInt_t ivar) const; return spectator content. const std::vector<Float_t>& GetValues() const; return value vector. UInt_t GetNVariables() const; accessor to the number of variables. UInt_t GetNTargets() const; accessor to the number of targets. UInt_t GetNSpectators() const; accessor to the number of spectators. void SetVal(UInt_t ivar, Float_t val); set variable ivar to val. void Print(ostream& o) const; print method. void SetTarget(UInt_t itgt, Float_t value); set the target value (dimension itgt) to value. void SetSpectator(UInt_t ivar, Float_t value); set spectator value (dimension ivar) to value. Double_t GetWeight() const; return the event weight - depending on whether the flag; *IgnoreNegWeightsInTraining* is or not. If it is set AND it is; used for training, then negetive event weights are set to zero !; NOTE! For events used in Testing, the ORIGINAL possibly negative; event weight is used no matter what. void SetIsTraining(Bool_t ); when this static function is called, it sets the flag whether; events with negative event weight should be ignored in the; training, or not. void SetIgnoreNegWeightsInTraining(Bool_t ); when t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Event.html:4284,variab,variables,4284,root/html602/TMVA__Event.html,https://root.cern,https://root.cern/root/html602/TMVA__Event.html,4,['variab'],['variables']
Modifiability,"at_t GetBl2 () const;  ; virtual Float_t GetH1 () const;  ; virtual Float_t GetH2 () const;  ; virtual Float_t GetTl1 () const;  ; virtual Float_t GetTl2 () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBRIK;  TBRIK ();  BRIK shape default constructor. ;  ;  TBRIK (const char *name, const char *title, const char *material, Float_t dx, Float_t dy, Float_t dz);  BRIK shape normal constructor. ;  ;  ~TBRIK () override;  BRIK shape default destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a BRIK. ;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3D. ;  ; Float_t GetDx () const;  ; Float_t GetDy () const;  ; Float_t GetDz () const;  ; void Sizeof3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TShape;  TShape ();  Shape default constructor. ;  ;  TShape (const char *name, const char *title, const char *material);  Shape normal constructor. ;  ;  TShape (const TShape &);  copy constructor ;  ;  ~TShape () override;  Shape default destructor. ;  ; TMaterial * GetMaterial () const;  ; virtual Int_t GetNumber () const;  ; Int_t GetVisibility () const;  ; TShape & operator= (const TShape &);  assignment operator ;  ; void Paint (Option_t *option="""") override;  This method is used only when a shape is painted outside a TNode. ;  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; virtual void SetVisibility (Int_t vis);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TransformPoints (Double_t *points, UInt_t NbPnts) const;  Transform points (LocalToMaster) ;  ;  Public Member Functions inherited from TNamed; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRAP.html:3153,inherit,inherited,3153,doc/master/classTTRAP.html,https://root.cern,https://root.cern/doc/master/classTTRAP.html,1,['inherit'],['inherited']
Modifiability,"at_t GetMin () const;  ; GContext_t GetNormGC () const;  ; Float_t GetPosition () const;  ; Bool_t GetShowPos () const;  ; const char * GetValueFormat () const;  ; void Increment (Float_t inc);  Increment progress position. ;  ; virtual void Reset ();  Reset progress bar (i.e. set pos to 0). ;  ; void SetBarColor (const char *color=""blue"");  Set progress bar color. ;  ; virtual void SetBarColor (Pixel_t color);  Set progress bar color. ;  ; void SetBarType (EBarType type);  Set bar type. ;  ; void SetFillType (EFillType type);  Set fill type. ;  ; void SetForegroundColor (Pixel_t pixel) override;  Change text color drawing. ;  ; void SetMax (Float_t max);  ; void SetMin (Float_t min);  ; void SetPosition (Float_t pos);  Set progress position between [min,max]. ;  ; void SetRange (Float_t min, Float_t max);  Set min and max of progress bar. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t UsePercent () const;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVProgressBar.html:3122,inherit,inherited,3122,doc/master/classTGVProgressBar.html,https://root.cern,https://root.cern/doc/master/classTGVProgressBar.html,1,['inherit'],['inherited']
Modifiability,"ata Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TArrayProxy<ROOT::TArrayType<double,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TArrayProxy_-p0TArrayType_double_0___.html:4844,Inherit,Inheritance,4844,root/html602/ROOT__TArrayProxy_-p0TArrayType_double_0___.html,https://root.cern,https://root.cern/root/html602/ROOT__TArrayProxy_-p0TArrayType_double_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TArrayProxy<ROOT::TArrayType<double,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TArrayProxy_-p0TArrayType_double_0___.html:4844,Inherit,Inheritance,4844,root/html604/ROOT__TArrayProxy_-p0TArrayType_double_0___.html,https://root.cern,https://root.cern/root/html604/ROOT__TArrayProxy_-p0TArrayType_double_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_int_0___.html:4826,Inherit,Inheritance,4826,root/html602/ROOT__TClaArrayProxy_-p0TArrayType_int_0___.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_int_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_int_0___.html:4826,Inherit,Inheritance,4826,root/html604/ROOT__TClaArrayProxy_-p0TArrayType_int_0___.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_int_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata Members; public:. enum TLine::[unnamed] { kLineNDC; kVertical; kHorizontal; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Float_tfAngleArrow opening angle (degrees); Float_tfArrowSizeArrow Size; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TStringfOptionArrow shapes; Double_tTLine::fX1X of 1st point; Double_tTLine::fX2X of 2nd point; Double_tTLine::fY1Y of 1st point; Double_tTLine::fY2Y of 2nd point; static Float_tfgDefaultAngledefault Arrow opening angle (degrees); static Float_tfgDefaultArrowSizedefault Arrow Size; static TStringfgDefaultOptiondefault Arrow shapes. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TArrow(); Arrow default constructor. TArrow(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Float_t arrowsize = 0.05, Option_t* option = "">""); Arrow normal constructor. Define an arrow between points x1,y1 and x2,y2; the arrowsize is in percentage of the pad height; Opening angle between the two sides of the arrow is fAngle (60 degrees). option = "">"" -------->; option = ""|->"" |------->; option = ""<"" <--------; option = ""<-|"" <-------|; option = ""->-"" ---->----; option = ""-<-"" ----<----; option = ""-|>-"" ---|>----; option = ""<>"" <------->; option = ""<|>"" <|-----|> arrow defined by a triangle. Note:; - If FillColor == 0 draw open triangle else draw full triangle with fillcolor; default is filled with LineColor; - ""Begin"" and ""end"" bars can be combined with any other options. ~TArrow(); Arrow default destructor. TArrow(const TArrow& arrow); Copy constructor. void Copy(TObject& arrow) const; Copy this arrow to arrow. void Draw(Option_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TArrow.html:9459,Inherit,Inheritance,9459,root/html532/TArrow.html,https://root.cern,https://root.cern/root/html532/TArrow.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Int_tfCumulUsedSizes[6]Accumulated size of lower dimensions as seen for this entry; TArrayI*fCumulUsedVarDimsfCumulUsedSizes(1) for multi variable dimensions case; TObjArrayfFormulas; Bool_tfMultiVarDimTrue if one of the variable has 2 variable size dimensions.; Int_tfMultiplicityIndicator of the variability of the formula; Int_tfNdata! Last value calculated by GetNdata; Bool_tfNeedSyncIndicate whether a new formula has been added since the last synchronization; Int_tfUsedSizes[6]Actual size of the dimensions as seen for this entry.; TArrayI*fVarDims[6]List of variable sizes dimensions.; Int_tfVirtUsedSizes[6]Virtual size of lower dimensions as seen for this formula. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreeFormulaManager(); -*Tree FormulaManger default constructor; *-* ======================================. void Remove(TTreeFormula* ); Remove a formula from this manager. void Add(TTreeFormula* ); Add a new formula to the list of formulas managed; The manager of the formula will be changed and the old one will be deleted; if it is empty. void AddVarDims(Int_t virt_dim); Add a variable dimension. void CancelDimension(Int_t virt_dim); Cancel a dimension. This is usually called when an out-of-bounds index; is used. void EnableMultiVarDims(); Set the manager as handling a formula with multiple variable dimensions. Int_t GetNdata(Bool_t forceLoadDim = kFALSE); -*-*Return number of available instances in the formulas; *-* ====================================================. Bool_t Sync(); Synchronize all the formulae. void UpdateFormulaLeaves(); this function could be called TTreePlayer::UpdateFormulaLeaves, itself; called by TChain::Loa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTreeFormulaManager.html:6394,Inherit,Inheritance,6394,root/html532/TTreeFormulaManager.html,https://root.cern,https://root.cern/root/html532/TTreeFormulaManager.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. static RooNumGenFactory*_instance; map<std::string,RooAbsNumGenerator*>_map. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumGenFactory(); Constructor. Register all known integrators by calling; their static registration functions. ~RooNumGenFactory(); Destructor. RooNumGenFactory(const RooNumGenFactory& other); Copy constructor. RooNumGenFactory& instance(); Static method returning reference to singleton instance of factory. void cleanup(); Cleanup routine called by atexit() handler installed by RooSentinel. Bool_t storeProtoSampler(RooAbsNumGenerator* proto, const RooArgSet& defConfig); Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; default configuration options and an optional list of names of other numeric integrators; on which this integrator depends. Returns true if integrator was previously registered. const RooAbsNumGenerator* getProtoSampler(const char* name); Return prototype integrator with given (class) name. RooAbsNumGenerator* createSampler(RooAbsReal& func, const RooArgSet& genVars, const RooArgSet& condVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, RooAbsReal* maxFuncVal = 0); Construct a numeric integrator instance that operates on function 'func' and is configured; with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; of the integration, otherwise it is queried from 'func'. This function iterators over list; of available prototype integrators and returns an clone attached to the given function of; the first class that matches the specifications of the requested integration considering; the number of dimensions, the na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumGenFactory.html:6680,config,configuration,6680,root/html526/RooNumGenFactory.html,https://root.cern,https://root.cern/root/html526/RooNumGenFactory.html,7,['config'],['configuration']
Modifiability,"ata Members; public:. enum { kTTMaxFonts; kMaxGlyphs; };. protected:. static Int_tfgAscentstring ascent, used to compute Y alignment; static FT_BBoxfgCBoxstring control box; static void*fgCharMap[32]font character map; static Int_tfgCurFontIdxcurrent font index; static void*fgFace[32]font face; static Int_tfgFontCountnumber of fonts loaded; static char*fgFontName[32]font name; static TTGlyphfgGlyphs[1024]glyphs; static Bool_tfgHintinguse hinting (true by default); static Bool_tfgInittrue if the Init has been called; static Bool_tfgKerninguse kerning (true by default); static void*fgLibraryFreeType font library; static Int_tfgNumGlyphsnumber of glyphs in the string; static FT_Matrix*fgRotMatrixrotation matrix; static Bool_tfgSmoothinguse anti-aliasing (true when >8 planes, false otherwise); static Int_tfgSymbItaFontIdxSymbol italic font index; static Int_tfgTBlankWtrailing blanks width; static Int_tfgWidthstring width, used to compute X alignment. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TTF(); Cleanup TTF environment. void Init(); Initialise the TrueType fonts interface. void Cleanup(); Cleanup. Is called by the gCleanupTTF destructor. Short_t CharToUnicode(UInt_t code); Map char to unicode. Returns 0 in case no mapping exists. void GetTextExtent(UInt_t& w, UInt_t& h, char* text); Get width (w) and height (h) when text is horizontal. void GetTextAdvance(UInt_t& a, char* text); Get advance (a) when text is horizontal. void GetTextExtent(UInt_t& w, UInt_t& h, wchar_t* text); Get width (w) and height (h) when text is horizontal. void LayoutGlyphs(); Compute the glyps positions, fgAscent and fgWidth (needed for alignment).; Perform the Glyphs transformation.; Compute the string control box.; If required take the ""kerning"" into account.; SetRotation and PrepareString should have been called before. void PrepareString(const char* string); Put the characters in ""string"" in the ""glyphs"" array. void PrepareString(const wchar_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTF.html:2594,Inherit,Inheritance,2594,root/html534/TTF.html,https://root.cern,https://root.cern/root/html534/TTF.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata Members; public:. enum { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tfDimensionDimension of the current expression; TStringfInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*fManager; Int_tfMultiplicityIndicator of the variability of the size of entries; Bool_tfObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*fSelectPointer to selection formula; TStringfSelection; TStatus*fStatus; Long64_tTSelector::fStatusselector status; TTree*fTree; TTreeDrawArgsParserfTreeDrawArgsParser; TTreeFormula*fVar[4]Pointer to variable formula; Double_tfWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDraw(); Destructor. void Init(TTree* ); Init the tree. Bool_t Notify(); Called when a new tree is loaded. void Begin(TTree* ); Executed by the client before processing. void SlaveBegin(TTree* ); Executed by each slave before processing. void FillWeight(); Get weight from input list, if any. Bool_t ProcessSingle(Long64_t , Int_t ); Processes a single variable from an entry. Bool_t Process(Long64_t ); Executed for each entry. void SlaveTerminate(void); Executed by each slave after the processing has finished,; before returning the results to the client. void Terminate(void); Executed by the client after getting the processing retults. void ClearFormula(); Delete internal buffers. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDraw.html:7344,variab,variable,7344,root/html530/TProofDraw.html,https://root.cern,https://root.cern/root/html530/TProofDraw.html,3,['variab'],['variable']
Modifiability,"ata Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; UInt_tTRandom::fSeedRandom number generator seed; UInt_tfSeed1Random number generator seed 1; UInt_tfSeed2Random number generator seed 2; TStringTNamed::fTitleobject title. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TRandom. ←; TRandom2. Function documentation; TRandom2(UInt_t seed = 1); default constructor*-*-*-*-; *-* ===================. ~TRandom2(); default destructor*-*-*-*-; *-* ==================. Double_t Rndm(Int_t i = 0); TausWorth generator from L'Ecuyer, uses as seed 3x32bits integers; Use a mask of 0xffffffffUL to make in work on 64 bit machines; Periodicity of about 10**26; Generate number in interval (0,1) : 0 and 1 are not included in the interval. void RndmArray(Int_t n, Float_t* array); Return an array of n random numbers uniformly distributed in ]0,1]. void RndmArray(Int_t n, Double_t* array); Return an array of n random numbers uniformly distributed in ]0,1]. void SetSeed(UInt_t seed = 0); Set the generator seed.; If the seed given is zero, generate automatically seed values which; are different every time by using TRandom3 and TUUID; If a seed is given generate the other two needed for the generator state using; a linear congruential generator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRandom2.html:7728,Inherit,Inheritance,7728,root/html602/TRandom2.html,https://root.cern,https://root.cern/root/html602/TRandom2.html,2,['Inherit'],['Inheritance']
Modifiability,"ata cell ids cache state; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveCaloData*fDataevent data reference; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tfEndCapPosBbackward end cap z coordinate in cm (should be < 0); Float_tfEndCapPosFforward end cap z coordinate in cm; Double_tfEtaMax; Double_tfEtaMin; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tfMaxTowerHbounding box z dimesion; Float_tfMaxValAbs; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveRGBAPalette*fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Double_tfPhi; Double_tfPhiOffsetphi range +/- offset; Bool_tTEveElement::fPickable; Float_tfPlotEtplot E or Et.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tfScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assign",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveCaloViz.html:21297,variab,variable,21297,root/html534/TEveCaloViz.html,https://root.cern,https://root.cern/root/html534/TEveCaloViz.html,2,['variab'],['variable']
Modifiability,"ata member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,2,2>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,2,2>MatRepStd<double,2,2>(); ROOT::Math::MatRepStd<double,2,2>MatRepStd<double,2,2>(const ROOT::Math::MatRepStd<double,2,2>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,2,2>&operator=(const ROOT::Math::MatRepStd<double,2,2>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[4]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,2,2>& ). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_2_2_.html:1705,Inherit,Inheritance,1705,root/html532/ROOT__Math__MatRepStd_double_2_2_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_2_2_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::rep_type. Function Members (Methods); public:. ~MatRepStd<double,3,3>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,3,3>MatRepStd<double,3,3>(); ROOT::Math::MatRepStd<double,3,3>MatRepStd<double,3,3>(const ROOT::Math::MatRepStd<double,3,3>&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,3,3>&operator=(const ROOT::Math::MatRepStd<double,3,3>&); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[9]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<double,3,3>& ). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_3_3_.html:1705,Inherit,Inheritance,1705,root/html532/ROOT__Math__MatRepStd_double_3_3_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepStd_double_3_3_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata members; class charts. ROOT; » TMVA; » TMVA::TActivationTanh. class TMVA::TActivationTanh: public TMVA::TActivation. Tanh activation function for ANN. This really simple implementation; uses TFormulas and should probably be replaced with something more; efficient later. Function Members (Methods); public:. virtual~TActivationTanh(); static TClass*Class(); virtual Double_tEval(Double_t arg); virtual Double_tEvalDerivative(Double_t arg); virtual TStringGetExpression(); virtual Double_tGetMax(); virtual Double_tGetMin(); virtual TClass*IsA() const; virtual voidMakeFunction(ostream& fout, const TString& fncName); TMVA::TActivationTanh&operator=(const TMVA::TActivationTanh&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMVA::TActivationTanhTActivationTanh(); TMVA::TActivationTanhTActivationTanh(const TMVA::TActivationTanh&). Data Members; private:. TFormula*fEqnequation of tanh sigmoid; TFormula*fEqnDerivativeequation of tanh sigmoid derivative. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TActivationTanh(); constructor for tanh sigmoid (normalized in [-1,1]). ~TActivationTanh(); destructor. Double_t Eval(Double_t arg); evaluate the tanh. Double_t EvalDerivative(Double_t arg); evaluate the derivative. TString GetExpression(); get expressions for the tanh and its derivative. void MakeFunction(ostream& fout, const TString& fncName); writes the sigmoid activation function source code. TActivationTanh(). Double_t GetMin(); minimum of the range of the activation function. { return -1; }. Double_t GetMax(); maximum of the range of the activation function. { return 1; }. » Author: Matt Jachowski » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__TActivationTanh.html:1270,Inherit,Inheritance,1270,root/html534/TMVA__TActivationTanh.html,https://root.cern,https://root.cern/root/html534/TMVA__TActivationTanh.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata points to be copied. For subsets without; selection on the data points, or involving cuts operating; exclusively and directly on the data set dimensions, the; equivalent constructor with a string based cut expression is; recommended. For most uses the RooAbsData::reduce() wrapper function, which; uses this constructor, is the most convenient way to create a; subset of an existing data. RooDataSet(const char* name, const char* title, TTree* t, const RooArgSet& vars, const RooFormulaVar& cutVar, const char* wgtVarName = 0); Constructor of a data set from (part of) an ROOT TTRee. The dimensions; of the data set are defined by the 'vars' RooArgSet. For each dimension; specified, the TTree must have a branch with the same name. For category; branches, this branch should contain the numeric index value. Real dimensions; can be constructed from either 'Double_t' or 'Float_t' tree branches. In the; latter case, an automatic conversion is applied. The 'cutVar' formula variable; is used to select the subset of data points to be copied.; For subsets without selection on the data points, or involving cuts; operating exclusively and directly on the data set dimensions, the equivalent; constructor with a string based cut expression is recommended. RooDataSet(const char* name, const char* title, TTree* ntuple, const RooArgSet& vars, const char* cuts = 0, const char* wgtVarName = 0); Constructor of a data set from (part of) an ROOT TTRee. The dimensions; of the data set are defined by the 'vars' RooArgSet. For each dimension; specified, the TTree must have a branch with the same name. For category; branches, this branch should contain the numeric index value. Real dimensions; can be constructed from either 'Double_t' or 'Float_t' tree branches. In the; latter case, an automatic conversion is applied. The 'cuts' string is an optional; RooFormula expression and can be used to select the subset of the data points; in 'dset' to be copied. The cut expression can refer to any variable",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooDataSet.html:22183,variab,variable,22183,root/html528/RooDataSet.html,https://root.cern,https://root.cern/root/html528/RooDataSet.html,10,['variab'],['variable']
Modifiability,ata set of clues; Double_tfCluesFracwhat fraction of the PDF integral comes from clues; Option_t*fCluesOptionsoption string for clues RooNDKeysPdf; RooAbsPdf*fCluesPdfproposal dens. func. with clues for certain points; TMatrixDSym*fCovMatrixcovariance matrix for multi var gaussian pdf; Bool_tfOwnsCluesPdfwhether we created (and own) the clues pdf; Bool_tfOwnsPdfwhether we created (and own) the main pdf; Bool_tfOwnsPdfPropwhether we own the PdfProposal; equivalent to:; Bool_tfOwnsVarswhether we own fVars; RooAbsPdf*fPdfthe main proposal density function; RooStats::PdfProposal*fPdfPropthe PdfProposal we are (probably) going to return; Double_tfSigmaRangeDivisorrange divisor to get sigma for each variable; Double_tfUniFracwhat fraction of the PDF integral is uniform; RooAbsPdf*fUniformPdfuniform proposal dens. func.; Bool_tfUseUpdateswhether to set updates for proposal params in PdfProposal; RooArgList*fVarsthe RooRealVars to generate proposals for. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProposalHelper(). ProposalFunction* GetProposalFunction(). void CreatePdf(); kbelasco: check here for memory leaks:; does RooMultiVarGaussian make copies of xVec and muVec?; or should we delete them?. void CreateCovMatrix(RooArgList& xVec). void CreateCluesPdf(). void CreateUniformPdf(). ProposalHelper(). void SetPdf(RooAbsPdf& pdf); Set the PDF to be the proposal density function. { fPdf = &pdf; }. void SetClues(RooDataSet& clues); Set the bank of clues to add to the current proposal density function. { fClues = &clues; }. void SetCacheSize(Int_t size). void SetUpdateProposalParameters(Bool_t updateParams); { fUseUpdates = updateParams; }. void SetVariables(RooArgList& vars); { fVars = &vars; }. void SetVariables(const RooArgList& vars); { fVars = new RooArgList(vars); fOwnsVars = kTRUE; }. void SetUniformFraction(Double_t uniFrac); set what fraction of the proposal density function should come from; a uniform proposal distribution. {,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__ProposalHelper.html:6968,Inherit,Inheritance,6968,root/html532/RooStats__ProposalHelper.html,https://root.cern,https://root.cern/root/html532/RooStats__ProposalHelper.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata source); // in this example, there is a toy tree with signal and one with background events; // we'll later on use only the ""signal"" events for the test in this example.; //; TString fname = gSystem->GetDirName(__FILE__) + ""/data/"";; // if directory data not found try using tutorials dir; if (gSystem->AccessPathName( fname + ""toy_sigbkg_categ_offset.root"" )) {; fname = gROOT->GetTutorialDir() + ""/tmva/data/"";; }; if (UseOffsetMethod) fname += ""toy_sigbkg_categ_offset.root"";; else fname += ""toy_sigbkg_categ_varoff.root"";; std::cout << ""--- TMVAClassificationApp : Accessing "" << fname << ""!"" << std::endl;; TFile *input = TFile::Open(fname);; if (!input) {; std::cout << ""ERROR: could not open data file: "" << fname << std::endl;; exit(1);; }; ; // Event loop; ; // Prepare the tree; // - here the variable names have to corresponds to your tree; // - you can use the same variables as above which is slightly faster,; // but of course you can use different ones and copy the values inside the event loop; //; TTree* theTree = (TTree*)input->Get(""TreeS"");; std::cout << ""--- Use signal sample for evaluation"" << std::endl;; theTree->SetBranchAddress( ""var1"", &var1 );; theTree->SetBranchAddress( ""var2"", &var2 );; theTree->SetBranchAddress( ""var3"", &var3 );; theTree->SetBranchAddress( ""var4"", &var4 );; ; theTree->SetBranchAddress( ""eta"", &eta ); // spectator; ; std::cout << ""--- Processing: "" << theTree->GetEntries() << "" events"" << std::endl;; TStopwatch sw;; sw.Start();; for (Long64_t ievt=0; ievt<theTree->GetEntries();ievt++) {; ; if (ievt%1000 == 0) std::cout << ""--- ... Processing event: "" << ievt << std::endl;; ; theTree->GetEntry(ievt);; ; // Return the MVA outputs and fill into histograms; ; for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) {; if (!it->second) continue;; TString methodName = it->first + "" method"";; hist[it->first]->Fill( reader->EvaluateMVA( methodName ) );; }; ; }; sw.Stop();; std::cout << ""--- End of event loop: ""; sw.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategoryApplication_8C.html:5135,variab,variable,5135,doc/master/TMVAClassificationCategoryApplication_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategoryApplication_8C.html,2,['variab'],"['variable', 'variables']"
Modifiability,"ata structures for size points. ;  ; void CopyAndRelease (Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) override;  Copy and release. ;  ; Bool_t CopyPoints (Double_t **arrays, Int_t ibegin, Int_t iend, Int_t obegin) override;  Copy errors from fE*** to arrays[***] or to f*** Copy points. ;  ; Bool_t CtorAllocate ();  Should be called from ctors after fNpoints has been set. ;  ; Bool_t DoMerge (const TGraph *g) override;  Protected function to perform the merge operation of a graph with asymmetric errors. ;  ; void FillZero (Int_t begin, Int_t end, Bool_t from_ctor=kTRUE) override;  Set zero values for point arrays in the range [begin, end] ;  ; void SwapPoints (Int_t pos1, Int_t pos2) override;  Swap points. ;  ; void UpdateArrays (const std::vector< Int_t > &sorting_indices, Int_t numSortedPoints, Int_t low) override;  Update the fX, fY, fEXlow, fEXhigh, fEYlow and fEYhigh arrays with the sorted values. ;  ;  Protected Member Functions inherited from TGraph; Double_t ** AllocateArrays (Int_t Narrays, Int_t arraySize);  Allocate arrays. ;  ; Bool_t CtorAllocate ();  In constructors set fNpoints than call this method. ;  ; Double_t ** ExpandAndCopy (Int_t size, Int_t iend);  if size > fMaxSize allocate new arrays of 2*size points and copy iend first points. ;  ; TString SaveArray (std::ostream &out, const char *suffix, Int_t frameNumber, Double_t *arr);  Save array as C++ code Returns name of created array. ;  ; void SaveHistogramAndFunctions (std::ostream &out, const char *varname, Int_t &frameNumber, Option_t *option);  Save histogram and list of functions of TGraph as C++ statement Used in all TGraph-derived classes. ;  ; Double_t ** ShrinkAndCopy (Int_t size, Int_t iend);  if size*2 <= fMaxSize allocate new arrays of size points, copy points [0,oend). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHist.html:38394,inherit,inherited,38394,doc/master/classRooHist.html,https://root.cern,https://root.cern/doc/master/classRooHist.html,2,['inherit'],['inherited']
Modifiability,"ata! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TGeoManager*fgGeoMangeur; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoManager* GetGeoMangeur(); Return static geo-manager that is used intenally to make shapes; lead a happy life.; Set gGeoManager to this object when creating TGeoShapes to be; passed into TEveGeoShapes. TGeoHMatrix* GetGeoHMatrixIdentity(); Return static identity matrix in homogeneous representation.; This is needed because TGeoCompositeShape::PaintComposite(); assumes TGeoShape::fgTransform is a TGeoHMatrix and we need to pass in; an identity matrix when painting a composite shape. TEveGeoShape(const char* name = ""TEveGeoShape"", const char* title = 0); Constructor. ~TEveGeoShape(); Destructor. TGeoShape* MakePolyShape(); Create derived TEveGeoShape form a TGeoCompositeShape. void SetNSegments(Int_t s); Set number of segments. void SetShape(TGeoShape* s); Set TGeoShape shown by this object. The shape is owned by TEveGeoShape but TGeoShape::fUniqueID is; used for reference counting so you can pass the same shape to; several TEveGeoSha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveGeoShape.html:23681,Inherit,Inheritance,23681,root/html602/TEveGeoShape.html,https://root.cern,https://root.cern/root/html602/TEveGeoShape.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata() const; RooAbsPdf*RooStats::CombinedCalculator::GetPdf() const. Data Members; protected:. RooArgSetRooStats::CombinedCalculator::fAlternateParamsRooArgSet specifying alternate parameters for hypothesis test // Is it used ????; RooArgSetRooStats::CombinedCalculator::fConditionalObsRooArgSet specifying the conditional observables; RooAbsData*RooStats::CombinedCalculator::fData; RooFitResult*fFitResultinternal result of gloabl fit; boolfGlobalFitDoneflag to control if a global fit has been done; RooArgSetRooStats::CombinedCalculator::fNuisParamsRooArgSet specifying nuisance parameters for interval; RooArgSetRooStats::CombinedCalculator::fNullParamsRooArgSet specifying null parameters for hypothesis test; RooArgSetRooStats::CombinedCalculator::fPOIRooArgSet specifying parameters of interest for interval; RooAbsPdf*RooStats::CombinedCalculator::fPdf; Double_tRooStats::CombinedCalculator::fSizesize of the test (eg. specified rate of Type I error). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProfileLikelihoodCalculator(); default constructor. ProfileLikelihoodCalculator(RooAbsData& data, RooAbsPdf& pdf, const RooArgSet& paramsOfInterest, Double_t size = 0.05, const RooArgSet* nullParams = 0); constructor from pdf and parameters; the pdf must contain eventually the nuisance parameters. ProfileLikelihoodCalculator(RooAbsData& data, RooStats::ModelConfig& model, Double_t size = 0.05); construct from a ModelConfig. Assume data model.GetPdf() will provide full description of model including; constraint term on the nuisances parameters. ~ProfileLikelihoodCalculator(); destructor; cannot delete prod pdf because it will delete all the composing pdf's; if (fOwnPdf) delete fPdf;; fPdf = 0;. void DoReset() const; reset and clear fit result; to be called when a new model or data are set in the calculator. RooAbsReal * DoGlobalFit() const; perform a global fit of the likelihood letting with all parameter of interest and; nuisance param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__ProfileLikelihoodCalculator.html:5681,Inherit,Inheritance,5681,root/html534/RooStats__ProfileLikelihoodCalculator.html,https://root.cern,https://root.cern/root/html534/RooStats__ProfileLikelihoodCalculator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata() const; RooAbsPdf*RooStats::CombinedCalculator::GetPdf() const. Data Members; protected:. RooArgSetRooStats::CombinedCalculator::fAlternateParamsRooArgSet specifying alternate parameters for hypothesis test // Is it used ????; RooArgSetRooStats::CombinedCalculator::fConditionalObsRooArgSet specifying the conditional observables; RooAbsData*RooStats::CombinedCalculator::fData; RooFitResult*fFitResultinternal result of gloabl fit; boolfGlobalFitDoneflag to control if a global fit has been done; RooArgSetRooStats::CombinedCalculator::fNuisParamsRooArgSet specifying nuisance parameters for interval; RooArgSetRooStats::CombinedCalculator::fNullParamsRooArgSet specifying null parameters for hypothesis test; RooArgSetRooStats::CombinedCalculator::fPOIRooArgSet specifying parameters of interest for interval; RooAbsPdf*RooStats::CombinedCalculator::fPdf; Double_tRooStats::CombinedCalculator::fSizesize of the test (eg. specified rate of Type I error). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProfileLikelihoodCalculator(); default constructor. ProfileLikelihoodCalculator(RooAbsData& data, RooAbsPdf& pdf, const RooArgSet& paramsOfInterest, Double_t size = 0.050000000000000003, const RooArgSet* nullParams = 0); constructor from pdf and parameters; the pdf must contain eventually the nuisance parameters. ProfileLikelihoodCalculator(RooAbsData& data, RooStats::ModelConfig& model, Double_t size = 0.050000000000000003); construct from a ModelConfig. Assume data model.GetPdf() will provide full description of model including; constraint term on the nuisances parameters. ~ProfileLikelihoodCalculator(); destructor; cannot delete prod pdf because it will delete all the composing pdf's; if (fOwnPdf) delete fPdf;; fPdf = 0;. void DoReset() const; reset and clear fit result; to be called when a new model or data are set in the calculator. RooAbsReal * DoGlobalFit() const; perform a global fit of the likelihood letting with all parameter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__ProfileLikelihoodCalculator.html:6762,Inherit,Inheritance,6762,root/html602/RooStats__ProfileLikelihoodCalculator.html,https://root.cern,https://root.cern/root/html602/RooStats__ProfileLikelihoodCalculator.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ata() const; virtual Float_tGetValToHeight() const; Bool_tGetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidInvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveCaloViz.html:10265,Inherit,InheritsFrom,10265,root/html532/TEveCaloViz.html,https://root.cern,https://root.cern/root/html532/TEveCaloViz.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ata() const; virtual Float_tGetValToHeight() const; Bool_tGetValueIsColor() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidInvalidateCellIdCache(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCaloViz.html:10504,Inherit,InheritsFrom,10504,root/html602/TEveCaloViz.html,https://root.cern,https://root.cern/root/html602/TEveCaloViz.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ata); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TStreamerInfoActions::TActionSequenceTActionSequence(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TStreamerInfoActions::ActionContainer_tfActions; TStreamerInfoActions::TLoopConfiguration*fLoopConfigIf this is a bundle of memberwise streaming action, this configures the looping; TVirtualStreamerInfo*fStreamerInfoStreamerInfo used to derive these actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddToOffset(Int_t delta). void Print(). TActionSequence(); {}. TActionSequence(TVirtualStreamerInfo* info, UInt_t maxdata); { fActions.reserve(maxdata); }. ~TActionSequence(). void AddAction( action_t action, TConfiguration *conf ). TActionSequence * CreateCopy(). TActionSequence * CreateReadMemberWiseActions(TVirtualStreamerInfo* info, TVirtualCollectionProxy& proxy). TActionSequence * CreateSubSequence(const vector<Int_t>& element_ids, size_t offset). » Author: Philippe Canal 05/2010 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TStreamerInfoActions.h 36169 2010-10-07 16:06:18Z pcanal $ » Last generated: 2010-10-07 22:28; This page has been automatically generated. For comments or suggestions regarding the documentatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStreamerInfoActions__TActionSequence.html:5856,config,configures,5856,root/html528/TStreamerInfoActions__TActionSequence.html,https://root.cern,https://root.cern/root/html528/TStreamerInfoActions__TActionSequence.html,1,['config'],['configures']
Modifiability,"ata); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TStreamerInfoActions::TActionSequenceTActionSequence(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TStreamerInfoActions::ActionContainer_tfActions; TStreamerInfoActions::TLoopConfiguration*fLoopConfigIf this is a bundle of memberwise streaming action, this configures the looping; TVirtualStreamerInfo*fStreamerInfoStreamerInfo used to derive these actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddToOffset(Int_t delta). void Print(). TActionSequence(); {}. TActionSequence(TVirtualStreamerInfo* info, UInt_t maxdata); { fActions.reserve(maxdata); }. ~TActionSequence(). void AddAction( action_t action, TConfiguration *conf ). TActionSequence * CreateCopy(). TActionSequence * CreateReadMemberWiseActions(TVirtualStreamerInfo* info, TVirtualCollectionProxy& proxy). TActionSequence * CreateSubSequence(const vector<Int_t>& element_ids, size_t offset). » Author: Philippe Canal 05/2010 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TStreamerInfoActions.h 36169 2010-10-07 16:06:18Z pcanal $ » Last generated: 2011-07-04 15:37; This page has been automatically generated. For comments or suggestions regarding the documentatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TStreamerInfoActions__TActionSequence.html:5927,config,configures,5927,root/html530/TStreamerInfoActions__TActionSequence.html,https://root.cern,https://root.cern/root/html530/TStreamerInfoActions__TActionSequence.html,1,['config'],['configures']
Modifiability,"ata); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TStreamerInfoActions::TActionSequenceTActionSequence(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TStreamerInfoActions::ActionContainer_tfActions; TStreamerInfoActions::TLoopConfiguration*fLoopConfigIf this is a bundle of memberwise streaming action, this configures the looping; TVirtualStreamerInfo*fStreamerInfoStreamerInfo used to derive these actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddToOffset(Int_t delta). void Print(). TActionSequence(); {}. TActionSequence(TVirtualStreamerInfo* info, UInt_t maxdata); { fActions.reserve(maxdata); }. ~TActionSequence(). void AddAction( action_t action, TConfiguration *conf ). TActionSequence * CreateCopy(). TActionSequence * CreateReadMemberWiseActions(TVirtualStreamerInfo* info, TVirtualCollectionProxy& proxy). TActionSequence * CreateWriteMemberWiseActions(TVirtualStreamerInfo* info, TVirtualCollectionProxy& proxy). TActionSequence * CreateSubSequence(const vector<Int_t>& element_ids, size_t offset). » Author: Philippe Canal 05/2010 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TStreamerInfoActions.h 40872 2011-09-13 21:33:33Z pcanal $ » Last generated: 2011-11-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerInfoActions__TActionSequence.html:6062,config,configures,6062,root/html532/TStreamerInfoActions__TActionSequence.html,https://root.cern,https://root.cern/root/html532/TStreamerInfoActions__TActionSequence.html,2,['config'],['configures']
Modifiability,"ata); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TStreamerInfoActions::TActionSequenceTActionSequence(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TStreamerInfoActions::ActionContainer_tfActions; TStreamerInfoActions::TLoopConfiguration*fLoopConfigIf this is a bundle of memberwise streaming action, this configures the looping; TVirtualStreamerInfo*fStreamerInfoStreamerInfo used to derive these actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void AddToOffset(Int_t delta). void Print(). TConfiguredAction & operator=(const TStreamerInfoActions::TActionSequence& ); WARNING: Technically this is a move assignment!. TActionSequence(); {}. TActionSequence(TVirtualStreamerInfo* info, UInt_t maxdata); { fActions.reserve(maxdata); }. ~TActionSequence(). void AddAction( action_t action, TConfiguration *conf ). TActionSequence * CreateCopy(). TActionSequence * CreateReadMemberWiseActions(TVirtualStreamerInfo* info, TVirtualCollectionProxy& proxy). TActionSequence * CreateWriteMemberWiseActions(TVirtualStreamerInfo* info, TVirtualCollectionProxy& proxy). TActionSequence * CreateSubSequence(const vector<Int_t>& element_ids, size_t offset). » Author: Philippe Canal 05/2010 » Copyright (C) 1995-2004, Rene Brun and Fons Ra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TStreamerInfoActions__TActionSequence.html:6081,config,configures,6081,root/html534/TStreamerInfoActions__TActionSequence.html,https://root.cern,https://root.cern/root/html534/TStreamerInfoActions__TActionSequence.html,2,['config'],['configures']
Modifiability,"ata*QObject::userData(uint id) const. protected:. virtual voidQObject::childEvent(QChildEvent*); virtual voidQObject::connectNotify(const char* signal); virtual voidQObject::customEvent(QEvent*); voidQObject::destroyed(QObject* = 0); virtual voidQObject::disconnectNotify(const char* signal); voidError(int error); intQObject::receivers(const char* signal) const; QObject*QObject::sender() const; intQObject::senderSignalIndex() const; virtual voidQObject::timerEvent(QTimerEvent*); TQtRootSlot(). private:. voidoperator=(const TQtRootSlot&); static voidqt_static_metacall(QObject*, QMetaObject::Call, int, void**); TQtRootSlot(const TQtRootSlot&). Data Members; public:. static const QMetaObjectstaticMetaObject; static const QMetaObjectQObject::staticMetaObject. protected:. QScopedPointer<QObjectData>QObject::d_ptr; static TQtRootSlot*fgTQtRootSlot; static const QMetaObjectQObject::staticQtMetaObject. private:. static const QMetaObjectExtraDatastaticMetaObjectExtraData. Class Charts. Inheritance Chart:. QObject. ←; TQtRootSlot. Function documentation; TQtRootSlot * CintSlot(); create and return the singleton. void EndOfLine(); slot to perform the standard ""EndOfLine"" ROOT action; it used to update the current gPad. void ProcessLine(const QString& ); execute the arbitrary ROOT /CINt command via; CINT C++ interpreter and emit the result. void ProcessLine(const char* ); execute the arbitrary ROOT /CINt command via; CINT C++ interpreter and emit the result. void Terminate(int status) const; the dedicated slot to terminate the ROOT application; with ""status"". void Terminate() const; the dedicated slot to terminate the ROOT application; and return the ""0"" status. void TerminateAndQuit() const; the dedicated slot to terminate the ROOT application; and quit the Qt Application if any. TQtRootSlot(const TQtRootSlot& ). void operator=(const TQtRootSlot& ). TQtRootSlot(); {}. virtual ~TQtRootSlot(); {}. void Error(int error). » Author: Valery Fine 18/01/2007 » Copyright (C) 2007 by Val",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQtRootSlot.html:3883,Inherit,Inheritance,3883,root/html602/TQtRootSlot.html,https://root.cern,https://root.cern/root/html602/TQtRootSlot.html,1,['Inherit'],['Inheritance']
Modifiability,"ata, bool extended = false, const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential) {; 196 return LikelihoodFit(data, extended, executionPolicy);; 197 }; 198 ; 199 /**; 200 Binned Likelihood fit copying the input data.; 201 Default is extended.; 202 */; 203 bool LikelihoodFit(const BinData &data, bool extended = true,; 204 const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential) {; 205 SetData(data);; 206 return DoBinnedLikelihoodFit(extended, executionPolicy);; 207 }; 208 /**; 209 Binned Likelihood fit using a `shared_ptr` for NOT copying the input data.; 210 Default is extended.; 211 */; 212 bool LikelihoodFit(const std::shared_ptr<BinData> &data, bool extended = true,; 213 const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential) {; 214 SetData(data);; 215 return DoBinnedLikelihoodFit(extended, executionPolicy);; 216 }; 217 /**; 218 Un-binned Likelihood fit copying the input data; 219 Default is NOT extended; 220 */; 221 bool LikelihoodFit(const UnBinData & data, bool extended = false, const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential) {; 222 SetData(data);; 223 return DoUnbinnedLikelihoodFit(extended, executionPolicy);; 224 }; 225 /**; 226 Un-binned Likelihood fit using a `shared_ptr` for NOT copying the input data.; 227 Default is NOT extended; 228 */; 229 bool LikelihoodFit(const std::shared_ptr<UnBinData> & data, bool extended = false, const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential) {; 230 SetData(data);; 231 return DoUnbinnedLikelihoodFit(extended, executionPolicy);; 232 }; 233 ; 234 /**; 235 Likelihood fit given a data set (Binned or Un-binned) using any generic model function.; 236 This interface copies the input data and the model function object; 237 */; 238 template < class Data , class Function>; 239 bool LikelihoodFit( const Data & data, const Function & func, bool extended) {; 240 SetFunction(func);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:7813,extend,extended,7813,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,5,['extend'],['extended']
Modifiability,"ata, const TString& theOption = ""MC:150:10000:"", TDirectory* theTargetFile = 0); standard constructor. MethodCuts(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = __null); construction from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); Cuts can only handle classification with 2 classes. void Init( void ); default initialisation called by all constructors. ~MethodCuts( void ); destructor. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; Method <string> Minimisation method; available values are: MC Monte Carlo <default>; GA Genetic Algorithm; SA Simulated annealing. EffMethod <string> Efficiency selection method; available values are: EffSel <default>; EffPDF. VarProp <string> Property of variable 1 for the MC method (taking precedence over the; globale setting. The same values as for the global option are available. Variables 1..10 can be; set this way. CutRangeMin/Max <float> user-defined ranges in which cuts are varied. void ProcessOptions(); process user options; sanity check, do not allow the input variables to be normalised, because this; only creates problems when interpreting the cuts. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); cut evaluation: returns 1.0 if event passed, 0.0 otherwise. void PrintCuts(Double_t effS) const; print cuts. Double_t GetCuts(Double_t effS, Double_t* cutMin, Double_t* cutMax) const; retrieve cut values for given signal efficiency; assume vector of correct size !!. Double_t GetCuts(Double_t effS, vector<Double_t>& cutMin, vector<Double_t>& cutMax) const; retrieve cut values for given signal efficiency. void Train( void ); training method: here the cuts are optimised for the training sample. void TestClassification(); nothing to test. Double_t EstimatorFunction(Int_t ievt1, Int_t ievt2); for full event scan. Double_t EstimatorFunction(vector<Double_t>",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCuts.html:23929,Variab,Variables,23929,root/html602/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCuts.html,2,['Variab'],['Variables']
Modifiability,"ata, using this parameterisation, do; Test wether the observation \(\mathbf{x}\) within the domain of the parameterization, using the result from the Principal Component Analysis.; Determine \(\mathbf{P}^\prime\) as before.; Determine \(\mathbf{x}^\prime\) as before.; Use the result of the fit to determine \(\mathbf{Q}^\prime\).; Transform back to \(\mathbf{P}\) from \(\mathbf{Q}^\prime\), using the result from the Principal Component Analysis. Testing the parameterization; The class also provides functionality for testing the, over the training sample, found parameterization (TMultiDimFit::Fit). This is done by passing the class a test sample of \( M_t\) tuples of the form \((\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\), where \(\mathbf{x}_{t,j}\) are the independent variables, \( D_{t,j}\) the known, dependent quantity, and \( E_{t,j}\) is the square error in \( D_{t,j}\) (TMultiDimFit::AddTestRow).; The parameterization is then evaluated at every \(\mathbf{x}_t\) in the test sample, and ; \[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \]. is evaluated. The relative error over the test sample ; \[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \]. should not be to low or high compared to \( R\) from the training sample. Also, multiple correlation coefficient from both samples should be fairly close, otherwise one of the samples is not representative of the problem. A large difference in the reduced \( \chi^2\) over the two samples indicate an over fit, and the maximum number of terms in the parameterisation should be reduced.; It's possible to use 4 to further improve the fit, using the test sample.; Christian Holm. Bibliography. Philip R. Bevington and D. Keith Robinson. Data Reduction and Error Analysis for the Physical Sciences. McGraw-Hill, 2 edition, 1992.; R. Brun et al. Long writeup DD/75-23, CERN, 1980.; Gene H. Golub and Charles F. van Loan. Matrix Computations. John Hopkins University Press, Baltimore, 3 edition, 1996",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:16280,parameteriz,parameterization,16280,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['parameteriz'],['parameterization']
Modifiability,"ata::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataHist(); Constructor. ~TEveCaloDataHist(); Destructor. void DataChanged(); Update limits and notify data users. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell IDs in given eta and phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. Int_t AddHistogram(TH2F* hist); Add new slice to calo tower. Updates cached variables fMaxValE; and fMaxValEt; Return last index in the vector of slice infos. TH2F* GetHist(Int_t slice) const; Get histogram in given slice. void GetEtaLimits(Double_t& min, Double_t& max) const; Get eta limits. void GetPhiLimits(Double_t& min, Double_t& max) const; Get phi limits. TEveCaloData& operator=(const TEveCaloDataHist& ). TEveCaloDataHist(const TEveCaloDataHist& ). THStack* GetStack(); { return fHStack; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEveCaloData.h 33955 2010-06-17 11:33:13Z matevz $ » Last generated: 2010-11-21 09:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCaloDataHist.html:21307,variab,variables,21307,root/html528/TEveCaloDataHist.html,https://root.cern,https://root.cern/root/html528/TEveCaloDataHist.html,1,['variab'],['variables']
Modifiability,"ata::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataHist(); Constructor. ~TEveCaloDataHist(); Destructor. void DataChanged(); Update limits and notify data users. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell IDs in given eta and phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. Int_t AddHistogram(TH2F* hist); Add new slice to calo tower. Updates cached variables fMaxValE; and fMaxValEt; Return last index in the vector of slice infos. TH2F* GetHist(Int_t slice) const; Get histogram in given slice. void GetEtaLimits(Double_t& min, Double_t& max) const; Get eta limits. void GetPhiLimits(Double_t& min, Double_t& max) const; Get phi limits. TEveCaloData& operator=(const TEveCaloDataHist& ). TEveCaloDataHist(const TEveCaloDataHist& ). THStack* GetStack(); { return fHStack; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEveCaloData.h 33955 2010-06-17 11:33:13Z matevz $ » Last generated: 2011-07-04 15:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveCaloDataHist.html:21376,variab,variables,21376,root/html530/TEveCaloDataHist.html,https://root.cern,https://root.cern/root/html530/TEveCaloDataHist.html,1,['variab'],['variables']
Modifiability,"ata::SliceInfo_t> >TEveCaloData::fSliceInfos; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; Bool_tTEveCaloData::fWrapTwoPi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataHist(); Constructor. ~TEveCaloDataHist(); Destructor. void DataChanged(); Update limits and notify data users. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell IDs in given eta and phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. Int_t AddHistogram(TH2F* hist); Add new slice to calo tower. Updates cached variables fMaxValE; and fMaxValEt; Return last index in the vector of slice infos. TH2F* GetHist(Int_t slice) const; Get histogram in given slice. void GetEtaLimits(Double_t& min, Double_t& max) const; Get eta limits. void GetPhiLimits(Double_t& min, Double_t& max) const; Get phi limits. TEveCaloData& operator=(const TEveCaloDataHist& ). TEveCaloDataHist(const TEveCaloDataHist& ). THStack* GetStack(); { return fHStack; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEveCaloData.h 33955 2010-06-17 11:33:13Z matevz $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveCaloDataHist.html:21376,variab,variables,21376,root/html532/TEveCaloDataHist.html,https://root.cern,https://root.cern/root/html532/TEveCaloDataHist.html,2,['variab'],['variables']
Modifiability,"ata;  ; std::vector< TString > fDepClasses;  ; TList * fEnums;  ; Long_t fOffsetStreamer;  ; std::vector< TProtoRealData > fPRealData;  ; Long_t fProperty;  ; Int_t fSizeof;  ; Int_t fStreamerType;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProtoClass.h>. Inheritance diagram for TProtoClass:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProtoClass() [1/4]. TProtoClass::TProtoClass ; (; const TProtoClass & ; ). privatedelete . ◆ TProtoClass() [2/4]. TProtoClass::TProtoClass ; (; ). inline . Definition at line 97 of file TProtoClass.h. ◆ TProtoClass() [3/4]. TProtoClass::TProtoClass ; (; TProtoClass * ; pc). ◆ TProtoClass() [4/4]. TProtoClass::TProtoClass ; (; TClass * ; cl). Initialize a TProtoClass from a TClass. ; Definition at line 54 of file TProtoClass.cxx. ◆ ~TProtoClass(). TProtoClass::~TProtoClass ; (; ). virtual . Destructor. ; Definition at line 159 of file TProtoCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProtoClass.html:11885,inherit,inherited,11885,doc/master/classTProtoClass.html,https://root.cern,https://root.cern/doc/master/classTProtoClass.html,2,['inherit'],['inherited']
Modifiability,"ataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ; virtual void DoMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level);  Monitor progress / convergence aat each interior-point iteration. ;  ; virtual Int_t DoStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Tests for termination. ;  ; virtual void DumbStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ;  ; virtual Double_t FinalStepLength (TQpVar *iterate, TQpVar *step);  Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ;  ; Double_t GetArTol ();  ; TQpLinSolverBase * GetLinearSystem ();  ; Double_t GetMuTol ();  ; TClass * IsA () const override;  ; TQpSolverBase & operator= (const TQpSolverBase &source);  Assignment operator. ;  ; void SetArTol (Double_t ar);  ; void SetMuTol (Double_t m);  ; virtual Int_t Solve (TQpDataBase *prob, TQpVar *iterate, TQpResidual *resids)=0;  ; virtual void Start (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Implements a default starting-point heuristic. ;  ; virtual void SteveStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Starting point algorithm according to Stephen Wright. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpSolverBase.html:2177,variab,variables,2177,doc/master/classTQpSolverBase.html,https://root.cern,https://root.cern/doc/master/classTQpSolverBase.html,1,['variab'],['variables']
Modifiability,"ataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ; virtual void DoMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level);  Monitor progress / convergence aat each interior-point iteration. ;  ; virtual Int_t DoStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Tests for termination. ;  ; virtual void DumbStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ;  ; virtual Double_t FinalStepLength (TQpVar *iterate, TQpVar *step);  Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ;  ; Double_t GetArTol ();  ; TQpLinSolverBase * GetLinearSystem ();  ; Double_t GetMuTol ();  ; TClass * IsA () const override;  ; TQpSolverBase & operator= (const TQpSolverBase &source);  Assignment operator. ;  ; void SetArTol (Double_t ar);  ; void SetMuTol (Double_t m);  ; virtual void Start (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Implements a default starting-point heuristic. ;  ; virtual void SteveStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Starting point algorithm according to Stephen Wright. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGondzioSolver.html:2924,variab,variables,2924,doc/master/classTGondzioSolver.html,https://root.cern,https://root.cern/doc/master/classTGondzioSolver.html,2,['variab'],['variables']
Modifiability,"ataHist * generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1,const RooCmdArg& arg2,				 const RooCmdArg& arg3,const RooCmdArg& arg4, const RooCmdArg& arg5,const RooCmdArg& arg6); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; NumEvent(int nevt) -- Generate specified number of events; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ExpectedData() -- Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()). RooDataHist * generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0. If expectedData is kTRUE (it is kFALSE by default), the returned histogram returns the 'expected'; data sample, i.e. no statistical fluctuations are present. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooPlot* plotOn(RooPlot* frame, RooLinkedList& cmdList); Plot (project) PDF on specified frame. If a PDF is plotted in an empty frame, it; will show a unit normalized curve in the frame variable, taken at the present value; of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:64994,extend,extended,64994,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['extend'],['extended']
Modifiability,"ataHist(std::string_view name, std::string_view title, const RooArgList& vars, RooCategory& indexCat, std::map<std::string,TH1*> histMap, Double_t initWgt); 421 ; 422\see RooDataHist(std::string_view name, std::string_view title, const RooArgList& vars, RooCategory& indexCat, std::map<std::string,RooDataHist*> dhistMap, Double_t wgt); 423 ; 424\anchor _roodatahist_from_numpy; 425### RooDataHist.from_numpy; 426Create a RooDataHist from numpy arrays.; 427 ; 428Note: The argument structure was inspired by numpy.histogramdd.; 429 ; 430Args:; 431 hist_weights (numpy.ndarray): The multidimensional histogram bin; 432 weights.; 433 bins (list): The bin specification, where each element is either:; 434 * a numpy array describing the monotonically; 435 increasing bin edges along each dimension.; 436 * a scalar value for the number of bins (in this; 437 case, the corresponding item in the `ranges`; 438 argument must be filled); 439 * `None` for a category dimension or if you want to; 440 use the default binning of the RooFit variable; 441 variables (RooArgSet, or list/tuple of RooAbsArgs):; 442 Specification of the variables in the RooDataHist, will be; 443 forwarded to the RooDataHist constructor. Both real values and; 444 categories are supported.; 445 ranges (list): An optional list specifying the variable range; 446 limits. Each element is either:; 447 * `None` if a full bin edges array is given to; 448 `bins` or for a category dimension; 449 * a tuple with two values corresponding to the; 450 minimum and maximum values; 451 weights_squared_sum (numpy.ndarray):; 452 The sum of squared weights of the original samples that were; 453 used to fill the histogram. If the input weights are from a; 454 weighted histogram, this parameter is no longer optional.; 455 name (str): Name of the RooDataSet, `None` is equivalent to an; 456 empty string.; 457 title (str): Title of the RooDataSet, `None` is equivalent to an; 458 empty string.; 459 ; 460Returns:; 461 RooDataHist; 462 ; 463\anc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/__roofit_8pyzdoc_source.html:22777,variab,variable,22777,doc/master/__roofit_8pyzdoc_source.html,https://root.cern,https://root.cern/doc/master/__roofit_8pyzdoc_source.html,3,['variab'],"['variable', 'variables']"
Modifiability,"ataLoader.h:202; TMVA::DataLoader::SetTreevoid SetTree(TTree *tree, const TString &className, Double_t weight)deprecatedDefinition DataLoader.cxx:447; TMVA::DataLoader::AddSignalTestEventvoid AddSignalTestEvent(const std::vector< Double_t > &event, Double_t weight=1.0)add signal testing eventDefinition DataLoader.cxx:236; TMVA::DataLoader::fATreeEventstd::vector< Float_t > fATreeEventevent variablesDefinition DataLoader.h:208; TMVA::DataLoader::DefaultDataSetInfoDataSetInfo & DefaultDataSetInfo()default creationDefinition DataLoader.cxx:533; TMVA::DataLoader::AddBackgroundTestEventvoid AddBackgroundTestEvent(const std::vector< Double_t > &event, Double_t weight=1.0)add signal training eventDefinition DataLoader.cxx:252; TMVA::DataLoader::fDataSetManagerDataSetManager * fDataSetManagerDefinition DataLoader.h:186; TMVA::DataLoader::MakeCopyDataLoader * MakeCopy(TString name)Copy method use in VI and CV.Definition DataLoader.cxx:691; TMVA::DataLoader::SetSignalWeightExpressionvoid SetSignalWeightExpression(const TString &variable)Definition DataLoader.cxx:549; TMVA::DataLoader::MakeKFoldDataSetvoid MakeKFoldDataSet(CvSplit &s)Function required to split the training and testing datasets into a number of folds.Definition DataLoader.cxx:662; TMVA::DataLoader::SetWeightExpressionvoid SetWeightExpression(const TString &variable, const TString &className="""")Definition DataLoader.cxx:563; TMVA::DataLoader::AddBackgroundTrainingEventvoid AddBackgroundTrainingEvent(const std::vector< Double_t > &event, Double_t weight=1.0)add signal training eventDefinition DataLoader.cxx:244; TMVA::DataLoader::RecombineKFoldDataSetvoid RecombineKFoldDataSet(CvSplit &s, Types::ETreeType tt=Types::kTraining)Recombines the dataset.Definition DataLoader.cxx:683; TMVA::DataLoader::VarTransformDataLoader * VarTransform(TString trafoDefinition)Transforms the variables and return a new DataLoader with the transformed variables.Definition DataLoader.cxx:146; TMVA::DataLoader::SetBackgroundWeightExpressi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:14782,variab,variable,14782,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,1,['variab'],['variable']
Modifiability,"ataPtrs () const;  direct access to coord data ptrs ;  ; unsigned int NDim () const;  return coordinate data dimension ;  ; unsigned int NPoints () const;  return number of fit points ;  ; FitData & operator= (const FitData &rhs);  ; DataOptions & Opt ();  ; const DataOptions & Opt () const;  access to options ;  ; const DataRange & Range () const;  access to range ;  ; unsigned int Size () const;  return number of fit points ;  . Private Attributes; bool fWeighted;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Fit::FitData; void InitCoordsVector ();  initializer routines to set the corresponding pointers right The vectors must NOT be resized after this initialization without setting the corresponding pointers in the same moment ( has to be an atomic operation in case of multithreading ). ;  ; template<class Iterator > ; void InitFromRange (Iterator dataItr);  ; void UnWrap ();  ;  Static Protected Member Functions inherited from ROOT::Fit::FitData; static constexpr unsigned VectorPadding (const unsigned);  If VecCore is not defined, there is no vectorization available and the SIMD vector size will always be one. ;  ;  Protected Attributes inherited from ROOT::Fit::FitData; unsigned int fDim;  ; unsigned int fMaxPoints;  ; unsigned int fNPoints;  ; bool fWrapped;  . #include <Fit/UnBinData.h>. Inheritance diagram for ROOT::Fit::UnBinData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ UnBinData() [1/12]. ROOT::Fit::UnBinData::UnBinData ; (; unsigned int ; maxpoints = 0, . unsigned int ; dim = 1, . bool ; isWeighted = false . ). inlineexplicit . constructor from dimension of point and max number of points (to pre-allocate vector) ; Definition at line 54 of file UnBinData.h. ◆ UnBinData() [2/12]. ROOT::Fit::UnBinData::UnBinData ; (; const DataRange & ; range, . unsigned int ; maxpoints = 0, . unsigned int ; dim = 1, . bool ; isWeighted = false",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData.html:9329,inherit,inherited,9329,doc/master/classROOT_1_1Fit_1_1UnBinData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData.html,1,['inherit'],['inherited']
Modifiability,"ataSet * generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; AutoBinned(Bool_t flag) -- Automatically deploy binned generation for binned distributions (e.g. RooHistPdf, sums and products of RooHistPdfs etc); NB: Datasets that are generated in binned mode are returned as weighted unbinned datasets. GenBinned(const char* tag) -- Use binned generation for all component pdfs that have 'setAttribute(tag)' set; AllBinned() -- As above, but for all components. Note that the notion of components is only meaningful for simultaneous pdf; as binned generation is always executed at the top-level node for a regular; pdf, so for those it only mattes that the top-level node is tagged. ProtoData(const RooDataSet& data, -- Use specified dataset as prototype dataset. If randOrder is set to true; Bool_t randOrder) the order of the events in the dataset will be read in a random order; if the requested number of events to be generated does not match the; number of events in the prototype dataset. If ProtoData() is used, the specified existing dataset as a prototype: the new dataset will ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsPdf.html:59272,extend,extended,59272,root/html532/RooAbsPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsPdf.html,7,['extend'],['extended']
Modifiability,"ataSet*RooAbsGenContext::_genData! Data being generated; Bool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooArgSet*_cloneSetInternal clone of p.d.f.; RooAbsReal*_effPointer to efficiency function; RooAbsGenContext*_generatorGenerator context for p.d.f; double_maxEffMaximum of efficiency in vars; RooArgSet*_varsVars to generate. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooEffGenContext(const RooAbsPdf& model, const RooAbsPdf& pdf, const RooAbsReal& eff, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0); Constructor of generator context for RooEffProd products. ~RooEffGenContext(); Destructor. void initGenerator(const RooArgSet& theEvent); One-time initialization of generator. void generateEvent(RooArgSet& theEvent, Int_t remaining); Generate one event. Generate an event from the p.d.f and; then perform an accept/reject sampling based on the efficiency; function. RooEffGenContext(const RooAbsPdf& model, const RooAbsPdf& pdf, const RooAbsReal& eff, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0). » Last changed: Tue Jun 2 15:30:29 2015 » Last generated: 2015-06-02 15:30; This page has been automatically generate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooEffGenContext.html:10155,Inherit,Inheritance,10155,root/html604/RooEffGenContext.html,https://root.cern,https://root.cern/root/html604/RooEffGenContext.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ataSet*RooAbsGenContext::_genData! Data being generated; Bool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooArgSet*_cloneSetInternal clone of p.d.f.; RooAbsReal*_effPointer to efficiency function; RooAbsGenContext*_generatorGenerator context for p.d.f; double_maxEffMaximum of efficiency in vars; RooArgSet*_varsVars to generate. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooEffGenContext(const RooAbsPdf& model, const RooAbsPdf& pdf, const RooAbsReal& eff, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0); Constructor of generator context for RooEffProd products. ~RooEffGenContext(); Destructor. void initGenerator(const RooArgSet& theEvent); One-time initialization of generator. void generateEvent(RooArgSet& theEvent, Int_t remaining); Generate one event. Generate an event from the p.d.f and; then perform an accept/reject sampling based on the efficiency; function. RooEffGenContext(const RooAbsPdf& model, const RooAbsPdf& pdf, const RooAbsReal& eff, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0). » Last changed: Tue Jun 30 14:32:39 2015 » Last generated: 2015-06-30 14:32; This page has been automatically generat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooEffGenContext.html:10155,Inherit,Inheritance,10155,root/html602/RooEffGenContext.html,https://root.cern,https://root.cern/root/html602/RooEffGenContext.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ataSet*RooAbsGenContext::_genData! Data being generated; Bool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooArgSet*_cloneSetInternal clone of p.d.f.; RooAbsReal*_effPointer to efficiency function; RooAbsGenContext*_generatorGenerator context for p.d.f; double_maxEffMaximum of efficiency in vars; RooArgSet*_varsVars to generate. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooEffGenContext(const RooAbsPdf& model, const RooAbsPdf& pdf, const RooAbsReal& eff, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0); Constructor of generator context for RooEffProd products. ~RooEffGenContext(); Destructor. void initGenerator(const RooArgSet& theEvent); One-time initialization of generator. void generateEvent(RooArgSet& theEvent, Int_t remaining); Generate one event. Generate an event from the p.d.f and; then perform an accept/reject sampling based on the efficiency; function. RooEffGenContext(const RooAbsPdf& model, const RooAbsPdf& pdf, const RooAbsReal& eff, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0). » Last changed: Tue Mar 10 17:16:23 2015 » Last generated: 2015-03-10 17:16; This page has been automatically generat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooEffGenContext.html:9141,Inherit,Inheritance,9141,root/html534/RooEffGenContext.html,https://root.cern,https://root.cern/root/html534/RooEffGenContext.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ataSet*TDataSet::First() const; virtual TSeqCollection*TDataSet::GetCollection() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TDataSet::GetList() const; virtual Int_tTDataSet::GetListSize() const; static TDataSet*TDataSet::GetMainSet(); TObject*TDataSet::GetMother() const; virtual const char*TNamed::GetName() const; TObjArray*TDataSet::GetObjArray() const; virtual TObject*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TDataSet*TDataSet::GetParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tHasData() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TDataSet*Instance() const; static TObjectSet*instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDataSet::IsFolder() const; virtual Bool_tTDataSet::IsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOwner() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidTDataSet::ls(Option_t* option = """") const; virtual voidTDataSet::ls(Int_t depth) const; voidTDataSet::Mark()MENU ; voidTDataSet::Mark(UInt_t flag, TDataSet::EBitOpt reset = kSet); voidTDataSet::MarkAll()MENU ; voidTObject::Ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TObjectSet.html:3867,Inherit,InheritsFrom,3867,root/html532/TObjectSet.html,https://root.cern,https://root.cern/root/html532/TObjectSet.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ataSet::GetList() const; virtual TList*GetListOfPositions(); TList*GetListOfShapes() const; virtual Int_tTDataSet::GetListSize() const; virtual voidGetLocalRange(Float_t* min, Float_t* max); static TDataSet*TDataSet::GetMainSet(); TObject*TDataSet::GetMother() const; virtual const char*TNamed::GetName() const; TObjArray*TDataSet::GetObjArray() const; virtual TObject*TObjectSet::GetObject() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual TDataSet*TDataSet::GetParent() const; TShape*GetShape() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual TVolume::ENodeSEENGetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tTObjectSet::HasData() const; virtual ULong_tHash() const; virtual voidImportShapeAttributes(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TObjectSet::Instance() const; static TObjectSet*TObjectSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual Bool_tIs3D() const; virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDataSet::IsFolder() const; virtual Bool_tIsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObjectSet::IsOwner() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidTDataSet::ls(Option_t* option = """") const; virtual voidTDataSet::ls(Int_t depth) const; static Int_tMapGEANT2StNodeVis(Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVolume.html:5272,Inherit,InheritsFrom,5272,root/html532/TVolume.html,https://root.cern,https://root.cern/root/html532/TVolume.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ataSetInfo &dsi, const TString &weightFile);  ; virtual ~PyMethodBase ();  ; virtual const Ranking * CreateRanking ()=0;  ; virtual void DeclareOptions ()=0;  ; PyObject * Eval (TString code);  Evaluate Python code. ;  ; virtual Double_t GetMvaValue (Double_t *errLower=nullptr, Double_t *errUpper=nullptr)=0;  ; Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets)=0;  ; virtual void Init ()=0;  ; virtual TClass * IsA () const;  ; virtual void ProcessOptions ()=0;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Train ()=0;  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; virtual void DeclareCompatibilityOptions ();  options that are used ONLY for the READER to ensure backward compatibility they are hence without any effect (the reader is only reading the training options that HAD been used at the training of the .xml weight file at hand ;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void ExitFromTraining ();  ; Types::EAnalysisType GetAnalysisType () const;  ; U",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PyMethodBase.html:1323,inherit,inherited,1323,doc/master/classTMVA_1_1PyMethodBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PyMethodBase.html,1,['inherit'],['inherited']
Modifiability,"ataSetIter::Flag(UInt_t flag = TDataSet::kMark, TDataSet::EBitOpt reset = TDataSet::kSet); virtual Int_tTDataSetIter::Flag(const Char_t* path, UInt_t flag = TDataSet::kMark, TDataSet::EBitOpt reset = TDataSet::kSet); virtual Int_tTDataSetIter::Flag(TDataSet* dataset, UInt_t flag = TDataSet::kMark, TDataSet::EBitOpt reset = TDataSet::kSet); virtual Int_tTDataSetIter::GetDepth() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TDataSetIter::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTDataSetIter::ls(Option_t* dirname = """") const; virtual TDataSet*TDataSetIter::Ls(const Char_t* dirname = """", Option_t* opt = """") const; virtual TDataSet*TDataSetIter::Ls(const Char_t* dirname, Int_t depth) const; virtual TDataSet*TDataSetIter::ls(TString dirname, Option_t* opt = """") const; virtual TDataSet*TDataSetIter::ls(const Char_t* dirname, Int_t depth) const; voidTObject::MayNotUse(const char* method) const; virtual TDataSet*TDataSetIter::Md(const Char_t* dirname); virtual TDataSet*TDataSetIter::Mkdir(const Char_t* dirname); virtual TDataSet*TDataSetIter::Next(TDat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVolumeViewIter.html:4492,Inherit,InheritsFrom,4492,root/html532/TVolumeViewIter.html,https://root.cern,https://root.cern/root/html532/TVolumeViewIter.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ataStore::RealVector& other, RooAbsReal* real = 0); voidreset(); voidresize(Int_t siz); voidsetAsymErrorBuffer(Double_t* newBufL, Double_t* newBufH); voidRooVectorDataStore::RealVector::setBufArg(RooAbsReal* arg); voidRooVectorDataStore::RealVector::setBuffer(RooAbsReal* real, Double_t* newBuf); voidRooVectorDataStore::RealVector::setDependents(const RooArgSet& deps); voidsetErrorBuffer(Double_t* newBuf); voidRooVectorDataStore::RealVector::setNativeBuffer(Double_t* newBuf = 0); virtual voidShowMembers(TMemberInspector& insp); Int_tRooVectorDataStore::RealVector::size() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); voidwrite(Int_t i). Data Members; protected:. vector<Double_t>RooVectorDataStore::RealVector::_vec. private:. Double_t*_bufE!; Double_t*_bufEH!; Double_t*_bufEL!; Double_t*_nativeBufE!; Double_t*_nativeBufEH!; Double_t*_nativeBufEL! ; vector<Double_t>*_vecE; vector<Double_t>*_vecEH; vector<Double_t>*_vecEL. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t fill(); Write current row. const RooArgSet* get(Int_t idx) const. const RooArgSet* getNative(Int_t idx) const. void reset(). RealVector& operator=(const RooVectorDataStore::RealFullVector& other). void write(Int_t i); cout << ""write("" << this << "") ["" << i << ""] nativeReal = "" << _nativeReal << "" = "" << _nativeReal->GetName() << "" real = "" << _real << "" buf = "" << _buf << "" value = "" << *_buf << "" native getVal() = "" << _nativeReal->getVal() << "" getVal() = "" << _real->getVal() << endl ;. void resize(Int_t siz). RealFullVector(UInt_t initialCapacity = 100). RealFullVector(RooAbsReal* arg, UInt_t initialCapacity = 100). virtual ~RealFullVector(). RealFullVector(const RealFullVector& other, RooAbsReal* real=0). RealFullVector(const RealVector& other, RooAbsReal* real=0). void setErrorBuffer(Double_t* newBuf); cout << ""setErrorBuffer("" << _nativeReal->GetName() << "") newBuf = "" << newBuf << endl ;. void setAsymErrorBuffer(Double_t* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooVectorDataStore__RealFullVector.html:2470,Inherit,Inheritance,2470,root/html532/RooVectorDataStore__RealFullVector.html,https://root.cern,https://root.cern/root/html532/RooVectorDataStore__RealFullVector.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ataWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedBinding Your description goes here...; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFIter ; RooFactoryWSTool RooFit class code and instance factory; RooFirstMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula ROOT::v5::TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expression; RooFracRemainder Utility function calculating remainder fraction, i.e. 1-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ClassIndex.html:33179,extend,extended,33179,root/html604/ClassIndex.html,https://root.cern,https://root.cern/root/html604/ClassIndex.html,2,['extend'],['extended']
Modifiability,"ataWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedBinding Your description goes here...; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFIter ; RooFactoryWSTool RooFit class code and instance factory; RooFirstMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expression; RooFracRemainder Utility function calculating remainder fraction, i.e. 1-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ClassIndex.html:32683,extend,extended,32683,root/html602/ClassIndex.html,https://root.cern,https://root.cern/root/html602/ClassIndex.html,2,['extend'],['extended']
Modifiability,"ata_handler;; 13921 *close_handler = tmp_rh->close_handler;; 13922 } else if (handler_type == REQUEST_HANDLER) {; 13923 if (tmp_rh->removing) {; 13924 /* Treat as none found */; 13925 step = 2;; 13926 break;; 13927 }; 13928 *handler = tmp_rh->handler;; 13929 /* Acquire handler and give it back */; 13930 tmp_rh->refcount++;; 13931 *handler_info = tmp_rh;; 13932 } else { /* AUTH_HANDLER */; 13933 *auth_handler = tmp_rh->auth_handler;; 13934 }; 13935 *cbdata = tmp_rh->cbdata;; 13936 mg_unlock_context(conn->phys_ctx);; 13937 return 1;; 13938 }; 13939 }; 13940 }; 13941 ; 13942 mg_unlock_context(conn->phys_ctx);; 13943 }; 13944 return 0; /* none found */; 13945}; 13946 ; 13947 ; 13948/* Check if the script file is in a path, allowed for script files.; 13949 * This can be used if uploading files is possible not only for the server; 13950 * admin, and the upload mechanism does not check the file extension.; 13951 */; 13952static int; 13953is_in_script_path(const struct mg_connection *conn, const char *path); 13954{; 13955 /* TODO (Feature): Add config value for allowed script path.; 13956 * Default: All allowed. */; 13957 (void)conn;; 13958 (void)path;; 13959 return 1;; 13960}; 13961 ; 13962 ; 13963#if defined(USE_WEBSOCKET) && defined(MG_EXPERIMENTAL_INTERFACES); 13964static int; 13965experimental_websocket_client_data_wrapper(struct mg_connection *conn,; 13966 int bits,; 13967 char *data,; 13968 size_t len,; 13969 void *cbdata); 13970{; 13971 struct mg_callbacks *pcallbacks = (struct mg_callbacks *)cbdata;; 13972 if (pcallbacks->websocket_data) {; 13973 return pcallbacks->websocket_data(conn, bits, data, len);; 13974 }; 13975 /* No handler set - assume ""OK"" */; 13976 return 1;; 13977}; 13978 ; 13979 ; 13980static void; 13981experimental_websocket_client_close_wrapper(const struct mg_connection *conn,; 13982 void *cbdata); 13983{; 13984 struct mg_callbacks *pcallbacks = (struct mg_callbacks *)cbdata;; 13985 if (pcallbacks->connection_close) {; 13986 pcallbacks->connection_c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:408338,config,config,408338,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"ata_handler;; 13922 *close_handler = tmp_rh->close_handler;; 13923 } else if (handler_type == REQUEST_HANDLER) {; 13924 if (tmp_rh->removing) {; 13925 /* Treat as none found */; 13926 step = 2;; 13927 break;; 13928 }; 13929 *handler = tmp_rh->handler;; 13930 /* Acquire handler and give it back */; 13931 tmp_rh->refcount++;; 13932 *handler_info = tmp_rh;; 13933 } else { /* AUTH_HANDLER */; 13934 *auth_handler = tmp_rh->auth_handler;; 13935 }; 13936 *cbdata = tmp_rh->cbdata;; 13937 mg_unlock_context(conn->phys_ctx);; 13938 return 1;; 13939 }; 13940 }; 13941 }; 13942 ; 13943 mg_unlock_context(conn->phys_ctx);; 13944 }; 13945 return 0; /* none found */; 13946}; 13947 ; 13948 ; 13949/* Check if the script file is in a path, allowed for script files.; 13950 * This can be used if uploading files is possible not only for the server; 13951 * admin, and the upload mechanism does not check the file extension.; 13952 */; 13953static int; 13954is_in_script_path(const struct mg_connection *conn, const char *path); 13955{; 13956 /* TODO (Feature): Add config value for allowed script path.; 13957 * Default: All allowed. */; 13958 (void)conn;; 13959 (void)path;; 13960 return 1;; 13961}; 13962 ; 13963 ; 13964#if defined(USE_WEBSOCKET) && defined(MG_EXPERIMENTAL_INTERFACES); 13965static int; 13966experimental_websocket_client_data_wrapper(struct mg_connection *conn,; 13967 int bits,; 13968 char *data,; 13969 size_t len,; 13970 void *cbdata); 13971{; 13972 struct mg_callbacks *pcallbacks = (struct mg_callbacks *)cbdata;; 13973 if (pcallbacks->websocket_data) {; 13974 return pcallbacks->websocket_data(conn, bits, data, len);; 13975 }; 13976 /* No handler set - assume ""OK"" */; 13977 return 1;; 13978}; 13979 ; 13980 ; 13981static void; 13982experimental_websocket_client_close_wrapper(const struct mg_connection *conn,; 13983 void *cbdata); 13984{; 13985 struct mg_callbacks *pcallbacks = (struct mg_callbacks *)cbdata;; 13986 if (pcallbacks->connection_close) {; 13987 pcallbacks->connection_c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:408371,config,config,408371,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"atal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TObjArray*GetBackground(); virtual TObjArray*GetCandidates(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TObjArray*GetErrorNames(); virtual TObjArray*GetErrorOnBackground(); virtual TObjArray*GetErrorOnSignal(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TObjArray*GetSignal(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLimitDataSource.html:2822,Inherit,InheritsFrom,2822,root/html532/TLimitDataSource.html,https://root.cern,https://root.cern/root/html532/TLimitDataSource.html,2,['Inherit'],['InheritsFrom']
Modifiability,"atal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TObjArray*GetBackground(); virtual TObjArray*GetCandidates(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TObjArray*GetErrorNames(); virtual TObjArray*GetErrorOnBackground(); virtual TObjArray*GetErrorOnSignal(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TObjArray*GetSignal(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLimitDataSource.html:2672,Inherit,InheritsFrom,2672,root/html602/TLimitDataSource.html,https://root.cern,https://root.cern/root/html602/TLimitDataSource.html,2,['Inherit'],['InheritsFrom']
Modifiability,"atal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*generate(Double_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidinitGenerator(const RooArgSet& theEvent); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tisValid() const; Bool_tisVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsGenContext.html:3249,Inherit,InheritsFrom,3249,root/html534/RooAbsGenContext.html,https://root.cern,https://root.cern/root/html534/RooAbsGenContext.html,1,['Inherit'],['InheritsFrom']
Modifiability,"atal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*generate(Double_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidinitGenerator(const RooArgSet& theEvent); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tisValid() const; Bool_tisVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooAbsGenContext.html:3249,Inherit,InheritsFrom,3249,root/html604/RooAbsGenContext.html,https://root.cern,https://root.cern/root/html604/RooAbsGenContext.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ataloader, TMVA::Types::kBDT, ""BDT"",; 305 ""!H:!V:NTrees=100:MinNodeSize=1.0%:BoostType=AdaBoostR2:SeparationType=RegressionVariance:nCuts=20:PruneMethod=CostComplexity:PruneStrength=30"" );; 306 ; 307 if (Use[""BDTG""]); 308 factory->BookMethod( dataloader, TMVA::Types::kBDT, ""BDTG"",; 309 ""!H:!V:NTrees=2000::BoostType=Grad:Shrinkage=0.1:UseBaggedBoost:BaggedSampleFraction=0.5:nCuts=20:MaxDepth=3:MaxDepth=4"" );; 310 // --------------------------------------------------------------------------------------------------; 311 ; 312 // Now you can tell the factory to train, test, and evaluate the MVAs; 313 ; 314 // Train MVAs using the set of training events; 315 factory->TrainAllMethods();; 316 ; 317 // Evaluate all MVAs using the set of test events; 318 factory->TestAllMethods();; 319 ; 320 // Evaluate and compare performance of all configured MVAs; 321 factory->EvaluateAllMethods();; 322 ; 323 // --------------------------------------------------------------; 324 ; 325 // Save the output; 326 outputFile->Close();; 327 ; 328 std::cout << ""==> Wrote root file: "" << outputFile->GetName() << std::endl;; 329 std::cout << ""==> TMVARegression is done!"" << std::endl;; 330 ; 331 delete factory;; 332 delete dataloader;; 333 ; 334 // Launch the GUI for the root macros; 335 if (!gROOT->IsBatch()) TMVA::TMVARegGui( outfileName );; 336}; 337 ; 338int main( int argc, char** argv ); 339{; 340 // Select methods (don't look at this code - not of interest); 341 TString methodList;; 342 for (int i=1; i<argc; i++) {; 343 TString regMethod(argv[i]);; 344 if(regMethod==""-b"" || regMethod==""--batch"") continue;; 345 if (!methodList.IsNull()) methodList += TString("","");; 346 methodList += regMethod;; 347 }; 348 TMVARegression(methodList);; 349 return 0;; 350}; DataLoader.h; mainint main()Definition Prototype.cxx:12; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; Double_tdouble Double_tDefinition RtypesCore.h:59; TChain.h; TFile.h; inputOption_t Option_t TPoint TPoint const char GetTextMagnitude",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C_source.html:13899,config,configured,13899,doc/master/TMVARegression_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C_source.html,1,['config'],['configured']
Modifiability,"ataset, . TString ; fin, . Int_t ; Nevt = -1, . Bool_t ; useTMVAStyle = kTRUE . ). ◆ rulevis(). void TMVA::rulevis ; (; TString ; fin = ""TMVA.root"", . TMVAGlob::TypeOfPlot ; type = TMVAGlob::kNorm, . bool ; useTMVAStyle = kTRUE . ). ◆ rulevisCorr() [1/2]. void TMVA::rulevisCorr ; (; TDirectory * ; rfdir, . TDirectory * ; vardir, . TDirectory * ; corrdir, . TMVAGlob::TypeOfPlot ; type . ). ◆ rulevisCorr() [2/2]. void TMVA::rulevisCorr ; (; TString ; fin = ""TMVA.root"", . TMVAGlob::TypeOfPlot ; type = TMVAGlob::kNorm, . bool ; useTMVAStyle = kTRUE . ). ◆ rulevisHists() [1/2]. void TMVA::rulevisHists ; (; TDirectory * ; rfdir, . TDirectory * ; vardir, . TDirectory * ; corrdir, . TMVAGlob::TypeOfPlot ; type . ). ◆ rulevisHists() [2/2]. void TMVA::rulevisHists ; (; TString ; fin = ""TMVA.root"", . TMVAGlob::TypeOfPlot ; type = TMVAGlob::kNorm, . bool ; useTMVAStyle = kTRUE . ). ◆ TMVAGui(). void TMVA::TMVAGui ; (; const char * ; fName = ""TMVA.root"", . TString ; dataset = """" . ). ◆ TMVAMultiClassGui(). void TMVA::TMVAMultiClassGui ; (; const char * ; fName = ""TMVAMulticlass.root"", . TString ; dataset = """" . ). ◆ TMVARegGui(). void TMVA::TMVARegGui ; (; const char * ; fName = ""TMVAReg.root"", . TString ; dataset = """" . ). ◆ training_history(). void TMVA::training_history ; (; TString ; dataset, . TString ; fin = ""TMVA.root"", . Bool_t ; useTMVAStyle = kTRUE . ). ◆ variables(). void TMVA::variables ; (; TString ; dataset, . TString ; fin = ""TMVA.root"", . TString ; dirName = ""InputVariables_Id"", . TString ; title = ""TMVA Input Variables"", . Bool_t ; isRegression = kFALSE, . Bool_t ; useTMVAStyle = kTRUE . ). ◆ variablesMultiClass(). void TMVA::variablesMultiClass ; (; TString ; dataset, . TString ; fin = ""TMVA.root"", . TString ; dirName = ""InputVariables_Id"", . TString ; title = ""TMVA Input Variables"", . Bool_t ; isRegression = kFALSE, . Bool_t ; useTMVAStyle = kTRUE . ). TMVA. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:14:06 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceTMVA.html:43172,variab,variables,43172,doc/v632/namespaceTMVA.html,https://root.cern,https://root.cern/doc/v632/namespaceTMVA.html,4,['variab'],"['variables', 'variablesMultiClass']"
Modifiability,"ataset] : Create Transformation ""P"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; Factory : [dataset] : Create Transformation ""G"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; Factory : [dataset] : Create Transformation ""D"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : myvar1: -0.062775 1.7187 [ -9.3380 7.6931 ]; : myvar2: 0.056495 1.0784 [ -3.2551 4.0291 ]; : var3: -0.020366 1.0633 [ -5.2777 4.6430 ]; : var4: 0.13214 1.2464 [ -5.6007 4.6744 ]; : -----------------------------------------------------------; : Preparing the Decorrelation transformation...; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : myvar1: -0.17586 1.0000 [ -5.6401 4.8529 ]; : myvar2: 0.026952 1.0000 [ -2.9292 3.7065 ]; : var3: -0.11549 1.0000 [ -4.1792 3.5180 ]; : var4: 0.34819 1.0000 [ -3.3363 3.3963 ]; : -----------------------------------------------------------; : Preparing the Principle Component (PCA) transformation...; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -------------------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:10811,variab,variable,10811,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,8,['variab'],['variable']
Modifiability,"atch window showing, used by RBrowser. ;  ; void SetShowCallback (WebWindowShowCallback_t func);  Assign show callback which can catch window showing, used by RBrowser. ;  ; void Terminate ();  Terminate http server and ROOT application. ;  . Static Public Member Functions; static void AddServerLocation (const std::string &server_prefix, const std::string &files_path);  Configure server location which can be used for loading of custom scripts or files When THttpServer instance of RWebWindowsManager will be created, THttpServer::AddLocation() method with correspondent arguments will be invoked. ;  ; static void AssignMainThrd ();  Re-assigns main thread id Normally main thread id recognized at the moment when library is loaded It supposed to be a thread where gApplication->Run() will be called If application runs in separate thread, one have to call this method to let RWebWindowsManager correctly recognize such situation. ;  ; static void ClearServerLocations ();  Clear all server locations Does not change configuration of already running HTTP server. ;  ; static std::map< std::string, std::string > GetServerLocations ();  Returns server locations as <std::string, std::string> Key is location name (with slash at the end) and value is file path. ;  ; static std::shared_ptr< RWebWindowsManager > & Instance ();  Returns default window manager Used to display all standard ROOT elements like TCanvas or TFitPanel. ;  ; static bool IsLoopbackMode ();  Returns true if loopback mode used by THttpServer for web widgets. ;  ; static bool IsMainThrd ();  Returns true when called from main process Main process recognized at the moment when library is loaded It supposed to be a thread where gApplication->Run() will be called If application runs in separate thread, one have to use AssignMainThrd() method to let RWebWindowsManager correctly recognize such situation. ;  ; static void SetLoopbackMode (bool on=true);  Set loopback mode for THttpServer used for web widgets By default is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebWindowsManager.html:2384,config,configuration,2384,doc/master/classROOT_1_1RWebWindowsManager.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebWindowsManager.html,1,['config'],['configuration']
Modifiability,"atches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TClassMenuItem Class Reference. ; Describes one element of the context menu associated to a class The menu item may describe. . a separator,; standard list of methods i.e. the methods defined in the described class by a MENU in the comment field of the header,; a method of an external class or a global function All the standard methods of the class are described by only one item. Since a complete context menu is described by a TList of TClassMenuItem elements, it is possible to customize the context menu of a class by removing the element ""standard methods"" and replacing it by whatever one wants. . Definition at line 31 of file TClassMenuItem.h. Public Types; enum  { kIsExternal; , kIsSelf; };  ; enum  EClassMenuItemType { kPopupUserFunction; , kPopupSeparator; , kPopupStandardList; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TClassMenuItem ();  Default TClassMenuItem ctor. ;  ;  TClassMenuItem (Int_t type, TClass *parent, const char *title="""", const char *functionname="""", TObject *obj=nullptr, const char *args="""", Int_t selfobjposition=-1, Bool_t self=kFALSE);  TClassMenuItem ctor. ;  ; virtual ~TClassMenuItem ();  TClassMenuItem dtor. ;  ; virtual const char * GetArgs () c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassMenuItem.html:1109,inherit,inherited,1109,doc/master/classTClassMenuItem.html,https://root.cern,https://root.cern/doc/master/classTClassMenuItem.html,1,['inherit'],['inherited']
Modifiability,"atches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TGeoMedium Class ReferenceThe Geometry Package » Materials. ; Media are used to store properties related to tracking and which are useful only when using geometry with a particle transport MC package (via VMC). ; One may define several tracking media for a given material. The media ID are user defined values that are not used by the geometry package. In case geometry is used via VMC (in GEANT) these numbers are overwritten, so one can only rely on these values after gMC->FinishGeometry() is called. The media parameters are inspired from GEANT3 and the values defined make sense in context of GEANT (3 but also 4) or FLUKA interfaces. ; Definition at line 23 of file TGeoMedium.h. Public Types; enum  EGeoMedium { kMedSavePrimitive = (1ULL << ( 18 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoMedium ();  Default constructor. ;  ;  TGeoMedium (const char *name, Int_t numed, const TGeoMaterial *mat, Double_t *params=nullptr);  constructor ;  ;  TGeoMedium (const char *name, Int_t numed, Int_t imat, Int_t isvol, Int_t ifield, Double_t fieldm, Double_t tmaxfd, Double_t stemax, Double_t deemax, Double_t epsil, Double_t stmin);  constructor ;  ;  ~TGeoMedium () override;  Dest",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoMedium.html:1070,inherit,inherited,1070,doc/master/classTGeoMedium.html,https://root.cern,https://root.cern/doc/master/classTGeoMedium.html,1,['inherit'],['inherited']
Modifiability,"atches. TF2.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 23/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TF2.h""; 14#include ""TMath.h""; 15#include ""TRandom.h""; 16#include ""TBuffer.h""; 17#include ""TH2.h""; 18#include ""TVirtualPad.h""; 19#include <iostream>; 20#include ""TColor.h""; 21#include ""TVirtualFitter.h""; 22#include ""Math/IntegratorOptions.h""; 23#include ""snprintf.h""; 24 ; 25ClassImp(TF2);; 26 ; 27/** \class TF2; 28 \ingroup Functions; 29 \brief A 2-Dim function with parameters.; 30 ; 31The following types of functions can be created:; 32 ; 331. [Expression using variables x and y](\ref TF2a); 342. [Expression using a user defined function](\ref TF2b); 353. [Lambda Expression with x and y variables and parameters](\ref TF2c); 36 ; 37\anchor TF2a; 38### Expression using variables x and y; 39 ; 40Begin_Macro (source); 41{; 42 auto f2 = new TF2(""f2"",""sin(x)*sin(y)/(x*y)"",0,5,0,5);; 43 f2->Draw();; 44}; 45End_Macro; 46 ; 47\anchor TF2b; 48### Expression using a user defined function; 49 ; 50~~~~{.cpp}; 51Double_t func(Double_t *val, Double_t *par); 52{; 53 Float_t x = val[0];; 54 Float_t y = val[1];; 55 Double_t f = x*x-y*y;; 56 return f;; 57}; 58 ; 59void fplot(); 60{; 61 auto f = new TF2(""f"",func,-1,1,-1,1);; 62 f->Draw(""surf1"");; 63}; 64~~~~; 65 ; 66\anchor TF2c; 67### Lambda Expression with x and y variables and parameters; 68 ; 69~~~~{.cpp}; 70root [0] TF2 f2(""f2"", [](double* x, double*p) { return x[0] + x[1] * p[0]; }, 0., 1., 0., 1., 1); 71(TF2 &) Name: f2 Title: f2; 72root [1] f2.SetParameter(0, 1.); 73root [2] f2.Eval(1., 2.); 74(double) 3.0000000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF2_8cxx_source.html:1108,variab,variables,1108,doc/master/TF2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF2_8cxx_source.html,1,['variab'],['variables']
Modifiability,"ate ""I"" of master split category; mc and prototype F is used for states ""II"" and ""III"" of; master split category mc. Furthermore parameters m,s of prototype G are split; in category c while parameter a of prototype F is split in; the product of categories c and d. The actual build is then; performed by passing the build configuration to RooSimWSTool, e.g. wst.build(""MASTER"",mbc) ;. By default, a specialization is built for each permutation of; states of the spitting categories that are used. It is possible; to restrict the building of specialized p.d.f to a subset of states; by adding a restriction on the number of states to build as follows. mbc.restrictBuild(""c"",""A,B"") ;. The restrictBuild method can be called multiple times, but at most; once for each used splitting category. For simple builds with a single; prototype, restriction can be specified with a Restrict() argument; on the build command line. Function Members (Methods); public:. virtual~ObjBuildConfig(); static TClass*Class(); virtual TClass*IsA() const; RooSimWSTool::ObjBuildConfigObjBuildConfig(); RooSimWSTool::ObjBuildConfigObjBuildConfig(const RooSimWSTool::ObjBuildConfig&); RooSimWSTool::ObjBuildConfig&operator=(const RooSimWSTool::ObjBuildConfig&); voidprint(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. RooCmdArg_conflProtocol; RooCategory*_masterCat; map<RooAbsPdf*,ObjSplitRule>_pdfmap; map<RooAbsCategory*,std::list<const RooCatType*> >_restr; RooArgSet_usedSplitCats. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void print(); Print details of a validated build configuration. ObjBuildConfig(); {}. virtual ~ObjBuildConfig(); {}. » Last changed: Mon Jul 4 15:24:01 2011 » Last generated: 2011-07-04 15:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooSimWSTool__ObjBuildConfig.html:4398,config,configuration,4398,root/html530/RooSimWSTool__ObjBuildConfig.html,https://root.cern,https://root.cern/root/html530/RooSimWSTool__ObjBuildConfig.html,1,['config'],['configuration']
Modifiability,"ate ""I"" of master split category; mc and prototype F is used for states ""II"" and ""III"" of; master split category mc. Furthermore parameters m,s of prototype G are split; in category c while parameter a of prototype F is split in; the product of categories c and d. The actual build is then; performed by passing the build configuration to RooSimWSTool, e.g. wst.build(""MASTER"",mbc) ;. By default, a specialization is built for each permutation of; states of the spitting categories that are used. It is possible; to restrict the building of specialized p.d.f to a subset of states; by adding a restriction on the number of states to build as follows. mbc.restrictBuild(""c"",""A,B"") ;. The restrictBuild method can be called multiple times, but at most; once for each used splitting category. For simple builds with a single; prototype, restriction can be specified with a Restrict() argument; on the build command line. Function Members (Methods); public:. virtual~ObjBuildConfig(); static TClass*Class(); virtual TClass*IsA() const; RooSimWSTool::ObjBuildConfigObjBuildConfig(); RooSimWSTool::ObjBuildConfigObjBuildConfig(const RooSimWSTool::ObjBuildConfig&); RooSimWSTool::ObjBuildConfig&operator=(const RooSimWSTool::ObjBuildConfig&); voidprint(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. RooCmdArg_conflProtocol; RooCategory*_masterCat; map<RooAbsPdf*,ObjSplitRule>_pdfmap; map<RooAbsCategory*,std::list<const RooCatType*> >_restr; RooArgSet_usedSplitCats. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void print(); Print details of a validated build configuration. ObjBuildConfig(); {}. virtual ~ObjBuildConfig(); {}. » Last changed: Sat Oct 9 22:38:49 2010 » Last generated: 2010-10-09 22:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSimWSTool__ObjBuildConfig.html:4398,config,configuration,4398,root/html528/RooSimWSTool__ObjBuildConfig.html,https://root.cern,https://root.cern/root/html528/RooSimWSTool__ObjBuildConfig.html,1,['config'],['configuration']
Modifiability,"ate ""I"" of master split category; mc and prototype F is used for states ""II"" and ""III"" of; master split category mc. Furthermore parameters m,s of prototype G are split; in category c while parameter a of prototype F is split in; the product of categories c and d. The actual build is then; performed by passing the build configuration to RooSimWSTool, e.g. wst.build(""MASTER"",mbc) ;. By default, a specialization is built for each permutation of; states of the spitting categories that are used. It is possible; to restrict the building of specialized p.d.f to a subset of states; by adding a restriction on the number of states to build as follows. mbc.restrictBuild(""c"",""A,B"") ;. The restrictBuild method can be called multiple times, but at most; once for each used splitting category. For simple builds with a single; prototype, restriction can be specified with a Restrict() argument; on the build command line. Function Members (Methods); public:. virtual~ObjBuildConfig(); static TClass*Class(); virtual TClass*IsA() const; RooSimWSTool::ObjBuildConfigObjBuildConfig(); RooSimWSTool::ObjBuildConfigObjBuildConfig(const RooSimWSTool::ObjBuildConfig&); RooSimWSTool::ObjBuildConfig&operator=(const RooSimWSTool::ObjBuildConfig&); voidprint(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. RooCmdArg_conflProtocol; RooCategory*_masterCat; map<RooAbsPdf*,ObjSplitRule>_pdfmap; map<RooAbsCategory*,std::list<const RooCatType*> >_restr; RooArgSet_usedSplitCats. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void print(); Print details of a validated build configuration. ObjBuildConfig(); {}. virtual ~ObjBuildConfig(); {}. » Last changed: Thu Nov 3 20:09:17 2011 » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSimWSTool__ObjBuildConfig.html:4398,config,configuration,4398,root/html532/RooSimWSTool__ObjBuildConfig.html,https://root.cern,https://root.cern/root/html532/RooSimWSTool__ObjBuildConfig.html,4,"['Inherit', 'config']","['Inheritance', 'Inherited', 'configuration']"
Modifiability,"ate . disable interference between terms ; Definition at line 1899 of file RooLagrangianMorphFunc.cxx. ◆ evaluate(). double RooLagrangianMorphFunc::evaluate ; (; ); const. overridevirtual . call getVal on the internal function ; Implements RooAbsReal.; Definition at line 2903 of file RooLagrangianMorphFunc.cxx. ◆ expectedEvents() [1/3]. double RooLagrangianMorphFunc::expectedEvents ; (; ); const. return the number of expected events for the current parameter set ; Definition at line 2793 of file RooLagrangianMorphFunc.cxx. ◆ expectedEvents() [2/3]. double RooLagrangianMorphFunc::expectedEvents ; (; const RooArgSet & ; nset); const. return expected number of events for extended likelihood calculation, this is the sum of all coefficients ; Definition at line 2804 of file RooLagrangianMorphFunc.cxx. ◆ expectedEvents() [3/3]. double RooLagrangianMorphFunc::expectedEvents ; (; const RooArgSet * ; nset); const. return expected number of events for extended likelihood calculation, this is the sum of all coefficients ; Definition at line 2785 of file RooLagrangianMorphFunc.cxx. ◆ expectedUncertainty(). double RooLagrangianMorphFunc::expectedUncertainty ; (; ); const. return the expected uncertainty for the current parameter set ; Definition at line 2812 of file RooLagrangianMorphFunc.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooLagrangianMorphFunc::extendMode ; (; ); const. return extended mored capabilities ; Definition at line 2776 of file RooLagrangianMorphFunc.cxx. ◆ forceAnalyticalInt(). bool RooLagrangianMorphFunc::forceAnalyticalInt ; (; const RooAbsArg & ; arg); const. overridevirtual . Force analytical integration for the given observable. ; Reimplemented from RooAbsReal.; Definition at line 2938 of file RooLagrangianMorphFunc.cxx. ◆ getAnalyticalIntegralWN(). Int_t RooLagrangianMorphFunc::getAnalyticalIntegralWN ; (; RooArgSet & ; allVars, . RooArgSet & ; numVars, . const RooArgSet * ; normSet, . const char * ; rangeName = nullptr . ); const. overridevirtual . Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:79077,extend,extended,79077,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,1,['extend'],['extended']
Modifiability,"ate . internal variable name (needs to be regular expression) ; Definition at line 98 of file VariableInfo.h. ◆ fLabel. TString TMVA::VariableInfo::fLabel. private . variable label, set by ""mylabel := var1 + var2"", this is a shortcut ; Definition at line 99 of file VariableInfo.h. ◆ fNormalized. Bool_t TMVA::VariableInfo::fNormalized. private . variable gets normalized ; Definition at line 108 of file VariableInfo.h. ◆ fUnit. TString TMVA::VariableInfo::fUnit. private . unit for axis labels in plots; set by third string in AddVariable ; Definition at line 101 of file VariableInfo.h. ◆ fVarCounter. Int_t TMVA::VariableInfo::fVarCounter. private . dummy variable ; Definition at line 111 of file VariableInfo.h. ◆ fVarType. Char_t TMVA::VariableInfo::fVarType. private . the variable type to be used internally ('F'-default or 'I') ; Definition at line 102 of file VariableInfo.h. ◆ fXmaxNorm. Double_t TMVA::VariableInfo::fXmaxNorm. private . maximum value for correlated/decorrelated/PCA variable ; Definition at line 104 of file VariableInfo.h. ◆ fXmeanNorm. Double_t TMVA::VariableInfo::fXmeanNorm. private . mean value for correlated/decorrelated/PCA variable ; Definition at line 105 of file VariableInfo.h. ◆ fXminNorm. Double_t TMVA::VariableInfo::fXminNorm. private . minimum value for correlated/decorrelated/PCA variable ; Definition at line 103 of file VariableInfo.h. ◆ fXrmsNorm. Double_t TMVA::VariableInfo::fXrmsNorm. private . rms value for correlated/decorrelated/PCA variable ; Definition at line 106 of file VariableInfo.h. ◆ fXvarianceNorm. Double_t TMVA::VariableInfo::fXvarianceNorm. private . variance value for correlated/decorrelated/PCA variable ; Definition at line 107 of file VariableInfo.h. Libraries for TMVA::VariableInfo:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/VariableInfo.h; tmva/tmva/src/VariableInfo.cxx. TMVAVariableInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:45 (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html:21363,variab,variable,21363,doc/master/classTMVA_1_1VariableInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html,1,['variab'],['variable']
Modifiability,"ate . the matrix of covariance 'between class' reflects the dispersion of the events of a class relative to the global center of gravity of all the class hence the separation between classes ; Definition at line 417 of file MethodFisher.cxx. ◆ GetCov_Full(). void TMVA::MethodFisher::GetCov_Full ; (; void ; ). private . compute full covariance matrix from sum of within and between matrices ; Definition at line 440 of file MethodFisher.cxx. ◆ GetCov_WithinClass(). void TMVA::MethodFisher::GetCov_WithinClass ; (; void ; ). private . the matrix of covariance 'within class' reflects the dispersion of the events relative to the center of gravity of their own class ; Definition at line 351 of file MethodFisher.cxx. ◆ GetDiscrimPower(). void TMVA::MethodFisher::GetDiscrimPower ; (; void ; ). private . computation of discrimination power indicator for each variable small values of ""fWith"" indicates little compactness of sig & of backgd big values of ""fBetw"" indicates large separation between sig & backgd ; we want signal & backgd classes as compact and separated as possible the discriminating power is then defined as the ration ""fBetw/fWith"" ; Definition at line 528 of file MethodFisher.cxx. ◆ GetFisherCoeff(). void TMVA::MethodFisher::GetFisherCoeff ; (; void ; ). private . Fisher = Sum { [coeff]*[variables] }. ; let Xs be the array of the mean values of variables for signal evts let Xb be the array of the mean values of variables for backgd evts let InvWith be the inverse matrix of the 'within class' correlation matrix; then the array of Fisher coefficients is [coeff] =sqrt(fNsig*fNbgd)/fNevt*transpose{Xs-Xb}*InvWith ; Definition at line 457 of file MethodFisher.cxx. ◆ GetFisherMethod(). EFisherMethod TMVA::MethodFisher::GetFisherMethod ; (; void ; ). inline . Definition at line 87 of file MethodFisher.h. ◆ GetHelpMessage(). void TMVA::MethodFisher::GetHelpMessage ; (; ); const. protectedvirtual . get help message text ; typical length of text line: ""|----------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html:35770,variab,variable,35770,doc/master/classTMVA_1_1MethodFisher.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html,1,['variab'],['variable']
Modifiability,"ate Attributes; TClass * fClass;  ; TString fGetter;  ; TMethodCall * fGetterMethod;  ; EMenuItemKind fMenuItem;  ; TMethodCall * fSetterMethod;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZom",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMethod.html:15575,inherit,inherited,15575,doc/master/classTMethod.html,https://root.cern,https://root.cern/doc/master/classTMethod.html,1,['inherit'],['inherited']
Modifiability,"ate RooAbsL derived likelihood objects like a regular RooFit real value. Whereas the RooAbsL objects are meant to be used within the context of minimization, RooRealL can be used in any RooFit context, like plotting. The value can be accessed through getVal(), like with other RooFit real variables. ; Definition at line 28 of file RooRealL.h. Public Member Functions;  RooRealL (const char *name, const char *title, std::shared_ptr< RooAbsL > likelihood);  ;  RooRealL (const RooRealL &other, const char *name=nullptr);  ; TObject * clone (const char *newname) const override;  ; double defaultErrorLevel () const override;  ; double getCarry () const;  ; std::shared_ptr< RooAbsL > const & getRooAbsL ();  ; double globalNormalization () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html:1465,inherit,inherited,1465,doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html,https://root.cern,https://root.cern/doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html,1,['inherit'],['inherited']
Modifiability,"ate a plot of the data in cernstaff.root To create cernstaff.root, execute tutorial $ROOTSYS/tutorials/tree/cernbuild.C ;  tcl.C How to write a TClonesArray to a TTree ;  temperature.CThis tutorial illustrates how to use the highlight mode with trees ;  tree.C Display the Tree data structures ;  tree0.C Simple Event class example ;  tree1.C This example is a variant of hsimple.C but using a TTree instead of a TNtuple ;  tree2.C This example illustrates how to make a Tree from variables or arrays in a C struct - without a dictionary, by creating the branches for builtin types (int, float, double) and arrays explicitly ;  tree2a.C This example is the same as tree2.C, but uses a class instead of a C-struct ;  tree3.C Example of a Tree where branches are variable length arrays A second Tree is created and filled in parallel ;  tree4.C This example writes a tree with objects of the class Event ;  treefriend.C Illustrates how to use Tree friends: ;  treegetval.C Illustrates how to retrieve TTree variables in arrays ;  tv3.C;  tvdemo.C;  ► unfold;  testUnfold1.C Test program for the classes TUnfold and related ;  testUnfold2.C Test program as an example for a user specific regularisation scheme ;  testUnfold3.C Simple Test program for the class TUnfoldDensity ;  testUnfold4.C Test program for the class TUnfoldSys ;  testUnfold5a.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5b.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5c.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5d.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold6.C Test program for the class TUnfoldBinning ;  testUnfold7a.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold7b.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold7c.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  ► unuran;  unuranDemo.CExample macro to show",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/files.html:170110,variab,variables,170110,doc/v616/files.html,https://root.cern,https://root.cern/doc/v616/files.html,1,['variab'],['variables']
Modifiability,"ate all methods"" << gTools().Color(""reset"") << Endl;; 1379 ; 1380 // don't do anything if no method booked; 1381 if (fMethodsMap.empty()) {; 1382 Log() << kINFO << ""...nothing found to evaluate"" << Endl;; 1383 return;; 1384 }; 1385 std::map<TString, MVector *>::iterator itrMap;; 1386 ; 1387 for (itrMap = fMethodsMap.begin(); itrMap != fMethodsMap.end(); ++itrMap) {; 1388 MVector *methods = itrMap->second;; 1389 ; 1390 // -----------------------------------------------------------------------; 1391 // First part of evaluation process; 1392 // --> compute efficiencies, and other separation estimators; 1393 // -----------------------------------------------------------------------; 1394 ; 1395 // although equal, we now want to separate the output for the variables; 1396 // and the real methods; 1397 Int_t isel; // will be 0 for a Method; 1 for a Variable; 1398 Int_t nmeth_used[2] = {0, 0}; // 0 Method; 1 Variable; 1399 ; 1400 std::vector<std::vector<TString>> mname(2);; 1401 std::vector<std::vector<Double_t>> sig(2), sep(2), roc(2);; 1402 std::vector<std::vector<Double_t>> eff01(2), eff10(2), eff30(2), effArea(2);; 1403 std::vector<std::vector<Double_t>> eff01err(2), eff10err(2), eff30err(2);; 1404 std::vector<std::vector<Double_t>> trainEff01(2), trainEff10(2), trainEff30(2);; 1405 ; 1406 std::vector<std::vector<Float_t>> multiclass_testEff;; 1407 std::vector<std::vector<Float_t>> multiclass_trainEff;; 1408 std::vector<std::vector<Float_t>> multiclass_testPur;; 1409 std::vector<std::vector<Float_t>> multiclass_trainPur;; 1410 ; 1411 std::vector<std::vector<Float_t>> train_history;; 1412 ; 1413 // Multiclass confusion matrices.; 1414 std::vector<TMatrixD> multiclass_trainConfusionEffB01;; 1415 std::vector<TMatrixD> multiclass_trainConfusionEffB10;; 1416 std::vector<TMatrixD> multiclass_trainConfusionEffB30;; 1417 std::vector<TMatrixD> multiclass_testConfusionEffB01;; 1418 std::vector<TMatrixD> multiclass_testConfusionEffB10;; 1419 std::vector<TMatrixD> multiclass_testCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:56979,variab,variables,56979,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['variab'],['variables']
Modifiability,"ate an executable. This creation is used as a means to output; a list of unresolved symbols, when loading a shared library has failed.; The required variable is $ExeName rather than $SharedLib, e.g.:; gSystem->SetMakeExe(; ""g++ -Wall -fPIC $IncludePath $SourceFiles; -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");. void SetMakeSharedLib(const char* directives); Directives should contain the description on how to compile and link a; shared lib. This description can be any valid shell command, including; the use of ';' to separate several instructions. However, shell specific; construct should be avoided. In particular this description can contain; environment variables, like $ROOTSYS (or %ROOTSYS% on windows). Five special variables will be expanded before execution:; Variable name Expands to; ------------- ----------; $SourceFiles Name of source files to be compiled; $SharedLib Name of the shared library being created; $LibName Name of shared library without extension; $BuildDir Directory where the files will be created; $IncludePath value of fIncludePath; $LinkedLibs value of fLinkedLibs; $DepLibs libraries on which this library depends on; $ObjectFiles Name of source files to be compiler with; their extension changed to .o or .obj; $Opt location of the optimization/debug options; set fFlagsDebug and fFlagsOpt. e.g.:; gSystem->SetMakeSharedLib(; ""KCC -n32 --strict $IncludePath -K0 \$Opt $SourceFile; --no_exceptions --signed_chars --display_error_number; --diag_suppress 68 -o $SharedLib"");. gSystem->setMakeSharedLib(; ""Cxx $IncludePath -c $SourceFile;; ld -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved; \$Opt -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o; -o $SharedLib $ObjectFile -lcxxstd -lcxx -lexc -lots -lc"". gSystem->SetMakeSharedLib(; ""$HOME/mygcc/bin/g++ \$Opt -Wall -fPIC $IncludePath $SourceFile; -shared -o $SharedLib"");. gSystem->SetMakeSharedLib(; ""cl -DWIN32 -D_WIN32 -D_MT -D_DLL -MD /O2 /G5 /MD -DWIN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSystem.html:45763,variab,variables,45763,root/html528/TSystem.html,https://root.cern,https://root.cern/root/html528/TSystem.html,14,"['Variab', 'variab']","['Variable', 'variables']"
Modifiability,"ate connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Member Functions;  TSAXParser (const TSAXParser &)=delete;  ; TSAXParser & operator= (const TSAXParser &)=delete;  ; virtual Int_t Parse ();  This function parses the xml file, by initializing the parser and checks whether the parse context is created or not, it will check as well whether the document is well formated. ;  . Private Attributes; _xmlSAXHandler * fSAXHandler;  libxml2 SAX handler ;  . Friends; class TSAXParserCallback;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TXMLParser; virtual void InitializeContext ();  Initialize parser parameters, such as, disactivate non-standards libxml1 features, on/off validation, clear error and warning messages. ;  ; virtual void OnValidateError (const TString &message);  This function is called when an error from the parser has occur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSAXParser.html:15821,inherit,inherited,15821,doc/master/classTSAXParser.html,https://root.cern,https://root.cern/doc/master/classTSAXParser.html,1,['inherit'],['inherited']
Modifiability,"ate each component in the list correctly. ; Definition at line 657 of file RooProdPdf.cxx. ◆ groupProductTerms(). void RooProdPdf::groupProductTerms ; (; std::list< std::vector< RooArgSet * > > & ; groupedTerms, . RooArgSet & ; outerIntDeps, . const RooLinkedList & ; terms, . const RooLinkedList & ; norms, . const RooLinkedList & ; imps, . const RooLinkedList & ; ints, . const RooLinkedList & ; cross . ); const. private . Group product into terms that can be calculated independently. ; Definition at line 1301 of file RooProdPdf.cxx. ◆ initGenerator(). void RooProdPdf::initGenerator ; (; Int_t ; code). overridevirtual . Forward one-time initialization call to component generation initialization methods. ; Reimplemented from RooAbsPdf.; Definition at line 1746 of file RooProdPdf.cxx. ◆ initializeFromCmdArgList(). void RooProdPdf::initializeFromCmdArgList ; (; const RooArgSet & ; fullPdfSet, . const RooLinkedList & ; l . ). private . Initialize RooProdPdf configuration from given list of RooCmdArg configuration arguments and set of 'regular' p.d.f.s in product. ; Definition at line 290 of file RooProdPdf.cxx. ◆ IsA(). TClass * RooProdPdf::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 190 of file RooProdPdf.h. ◆ isBinnedDistribution(). bool RooProdPdf::isBinnedDistribution ; (; const RooArgSet & ; obs); const. overridevirtual . If all components that depend on obs are binned that so is the product. ; Reimplemented from RooAbsReal.; Definition at line 2122 of file RooProdPdf.cxx. ◆ isDirectGenSafe(). bool RooProdPdf::isDirectGenSafe ; (; const RooAbsArg & ; arg); const. overridevirtual . Forward determination of safety of internal generator code to component p.d.f that would generate the given observable. ; Reimplemented from RooAbsPdf.; Definition at line 1825 of file RooProdPdf.cxx. ◆ makeCondPdfRatioCorr(). std::unique_ptr< RooAbsReal > RooProdPdf::makeCondPdfRatioCorr ; (; RooAbsR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProdPdf.html:95942,config,configuration,95942,doc/master/classRooProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooProdPdf.html,2,['config'],['configuration']
Modifiability,"ate generator context for this convolution. ;  ; TString histNameSuffix () const override;  Suffix for cache histogram (added in addition to suffix for cache name) ;  ; const char * inputBaseName () const override;  Return base name component for cache components in this case 'PDF1_CONV_PDF2'. ;  ; RooAbsArg & pdfObservable (RooAbsArg &histObservable) const override;  Return p.d.f. ;  ; std::vector< double > scanPdf (RooRealVar &obs, RooAbsPdf &pdf, const RooDataHist &hist, const RooArgSet &slicePos, Int_t &N, Int_t &N2, Int_t &zeroBin, double shift) const;  Scan the values of 'pdf' in observable 'obs' using the bin values stored in 'hist' at slice position 'slicePos' N is filled with the number of bins defined in hist, N2 is filled with N plus the number of buffer bins The return value is an array of doubles of length N2 with the sampled values. ;  ;  Protected Member Functions inherited from RooAbsCachedPdf; virtual const char * binningName () const;  ; std::string cacheNameSuffix (const RooArgSet &nset) const;  Construct string with unique suffix for cache objects based on observable names that define cache configuration. ;  ; void disableCache (bool flag);  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; PdfCacheElem * getCache (const RooArgSet *nset, bool recalculate=true) const;  Retrieve cache object associated with given choice of observables. ;  ; virtual const char * payloadUniqueSuffix () const;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFFTConvPdf.html:70119,inherit,inherited,70119,doc/master/classRooFFTConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooFFTConvPdf.html,2,"['config', 'inherit']","['configuration', 'inherited']"
Modifiability,"ate propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooObjCacheManager_partIntMgrComponent normalization manager; TList_pdfProxyListList of PDF proxies (named after applicable category state); Int_tRooAbsReal::_plotBinsNumber of plot bins; const TNamed*_plotCoefNormRange; RooSetProxy_plotCoefNormSet; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooSimultaneous.html:40666,config,configuration,40666,root/html530/RooSimultaneous.html,https://root.cern,https://root.cern/root/html530/RooSimultaneous.html,2,['config'],['configuration']
Modifiability,"ate reference distributions (PDFs) from signal and background events: fill histograms and smooth them; if decorrelation is required, compute corresponding square-root matrices the reference histograms require the correct boundaries. ;  ; void WriteMonitoringHistosToFile () const;  write histograms and PDFs to file for monitoring purposes ;  ; virtual void WriteOptionsToStream (std::ostream &o, const TString &prefix) const;  write options to stream ;  ; void WriteWeightsToStream (TFile &rf) const;  write reference PDFs to ROOT file ;  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void ExitFromTraining ();  ; Types::EAnalysisType GetAnalysisType () const;  ; UInt_t GetCurrentIter ();  ; virtual Double_t GetEfficiency (const TString &, Types::ETreeType, Double_t &err);  fill background efficiency (resp. ;  ; const Event * GetEvent () const;  ; const Event * GetEvent (const TMVA::Event *ev) const;  ; const Event * GetEvent (Long64_t ievt) const;  ; const Event * GetEvent (Long64_t ievt, Types::ETreeType type) const;  ; const std::v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html:4840,inherit,inherited,4840,doc/master/classTMVA_1_1MethodLikelihood.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html,1,['inherit'],['inherited']
Modifiability,"ate vector and a parameter vector. ; Definition at line 107 of file IParamFunction.h. Public Types; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions; T operator() (const T *x) const;  ; T operator() (const T *x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual IBaseFunctionMultiDimTempl< T > * Clone () const =0;  Clone a function. ;  ; virtual bool HasGradient () const;  ; virtual unsigned int NDim () const =0;  Retrieve the dimension of the function. ;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual unsigned int NPar () const =0;  Return the number of Parameters. ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  ; virtual const double * Parameters () const =0;  Access the parameter values. ;  ; virtual void SetParameters (const double *p)=0;  Set the parameter values. ;  . Private Member Functions; virtual T DoEval (const T *x) const;  Implement the ROOT::Math::IBaseFunctionMultiDim interface DoEval(x) using the cached parameter values. ;  ; virtual T DoEvalPar (const T *x, const double *p) const =0;  Implementation of the evaluation function using the x values and the parameters. ;  . #include <Math/IParamFunction.h>. Inheritance diagram for ROOT::Math::IParametricFunctionMultiDimTempl< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricFunctionMultiDimTempl.html:1711,inherit,inherited,1711,doc/master/classROOT_1_1Math_1_1IParametricFunctionMultiDimTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricFunctionMultiDimTempl.html,1,['inherit'],['inherited']
Modifiability,"ate(const RooArgSet& whatVars, Double_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0.; Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooDataSet * generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; Internal method. RooDataSet * generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; Generate a new dataset with values of the whatVars variables; sampled from our distribution. Use the specified existing dataset; as a prototype: the new dataset will contain the same number of; events as the prototype (by default), and any prototype variables not in; whatVars will be copied into the new dataset for each generated; event and also used to set our PDF parameters. The user can specify a; number of events to generate that will override the default. The result is a; copy of the prototype dataset with only variables in whatVars; randomized. Variables in whatVars that are not in the prototype; will be added as new columns to the generated dataset. Returns; zero in case of an error. The caller takes ownership of the; returned dataset. Int_t* randomizeProtoOrder(Int_t nProto, Int_t nGen, Bool_t resample = kFALSE) const; Return lookup table with randomized access order for prototype events,; given nProto prototype data events and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsPdf.html:69027,variab,variables,69027,root/html534/RooAbsPdf.html,https://root.cern,https://root.cern/root/html534/RooAbsPdf.html,6,['variab'],['variables']
Modifiability,"ate, load all standard libraries and the mg table */; 19888 lua_State *state = mg_lua_context_script_prepare(; 19889 ctx->dd.config[LUA_BACKGROUND_SCRIPT], ctx, ebuf, sizeof(ebuf));; 19890 if (!state) {; 19891 mg_cry_ctx_internal(ctx,; 19892 ""lua_background_script load error: %s"",; 19893 ebuf);; 19894 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19895 mg_snprintf(NULL,; 19896 NULL, /* No truncation check for error buffers */; 19897 error->text,; 19898 error->text_buffer_size,; 19899 ""Error in script %s: %s"",; 19900 config_options[LUA_BACKGROUND_SCRIPT].name,; 19901 ebuf);; 19902 }; 19903 pthread_mutex_unlock(&ctx->lua_bg_mutex);; 19904 ; 19905 free_context(ctx);; 19906 pthread_setspecific(sTlsKey, NULL);; 19907 return NULL;; 19908 }; 19909 ; 19910 /* Add a table with parameters into mg.params */; 19911 sparams = ctx->dd.config[LUA_BACKGROUND_SCRIPT_PARAMS];; 19912 if (sparams && sparams[0]) {; 19913 lua_getglobal(state, ""mg"");; 19914 lua_pushstring(state, ""params"");; 19915 lua_newtable(state);; 19916 ; 19917 while ((sparams = next_option(sparams, &opt_vec, &eq_vec)); 19918 != NULL) {; 19919 reg_llstring(; 19920 state, opt_vec.ptr, opt_vec.len, eq_vec.ptr, eq_vec.len);; 19921 if (mg_strncasecmp(sparams, opt_vec.ptr, opt_vec.len) == 0); 19922 break;; 19923 }; 19924 lua_rawset(state, -3);; 19925 lua_pop(state, 1);; 19926 }; 19927 ; 19928 /* Call script */; 19929 state = mg_lua_context_script_run(state,; 19930 ctx->dd.config[LUA_BACKGROUND_SCRIPT],; 19931 ctx,; 19932 ebuf,; 19933 sizeof(ebuf));; 19934 if (!state) {; 19935 mg_cry_ctx_internal(ctx,; 19936 ""lua_background_script start error: %s"",; 19937 ebuf);; 19938 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19939 mg_snprintf(NULL,; 19940 NULL, /* No truncation check for error buffers */; 19941 error->text,; 19942 error->text_buffer_size,; 19943 ""Error in script %s: %s"",; 19944 config_options[DOCUMENT_ROOT].name,; 19945 ebuf);; 19946 }; 19947 pthread_mutex_unlock(&ctx->lua_bg_mutex);; 19948 ; 199",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:594972,config,config,594972,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"ate, load all standard libraries and the mg table */; 19889 lua_State *state = mg_lua_context_script_prepare(; 19890 ctx->dd.config[LUA_BACKGROUND_SCRIPT], ctx, ebuf, sizeof(ebuf));; 19891 if (!state) {; 19892 mg_cry_ctx_internal(ctx,; 19893 ""lua_background_script load error: %s"",; 19894 ebuf);; 19895 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19896 mg_snprintf(NULL,; 19897 NULL, /* No truncation check for error buffers */; 19898 error->text,; 19899 error->text_buffer_size,; 19900 ""Error in script %s: %s"",; 19901 config_options[LUA_BACKGROUND_SCRIPT].name,; 19902 ebuf);; 19903 }; 19904 pthread_mutex_unlock(&ctx->lua_bg_mutex);; 19905 ; 19906 free_context(ctx);; 19907 pthread_setspecific(sTlsKey, NULL);; 19908 return NULL;; 19909 }; 19910 ; 19911 /* Add a table with parameters into mg.params */; 19912 sparams = ctx->dd.config[LUA_BACKGROUND_SCRIPT_PARAMS];; 19913 if (sparams && sparams[0]) {; 19914 lua_getglobal(state, ""mg"");; 19915 lua_pushstring(state, ""params"");; 19916 lua_newtable(state);; 19917 ; 19918 while ((sparams = next_option(sparams, &opt_vec, &eq_vec)); 19919 != NULL) {; 19920 reg_llstring(; 19921 state, opt_vec.ptr, opt_vec.len, eq_vec.ptr, eq_vec.len);; 19922 if (mg_strncasecmp(sparams, opt_vec.ptr, opt_vec.len) == 0); 19923 break;; 19924 }; 19925 lua_rawset(state, -3);; 19926 lua_pop(state, 1);; 19927 }; 19928 ; 19929 /* Call script */; 19930 state = mg_lua_context_script_run(state,; 19931 ctx->dd.config[LUA_BACKGROUND_SCRIPT],; 19932 ctx,; 19933 ebuf,; 19934 sizeof(ebuf));; 19935 if (!state) {; 19936 mg_cry_ctx_internal(ctx,; 19937 ""lua_background_script start error: %s"",; 19938 ebuf);; 19939 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19940 mg_snprintf(NULL,; 19941 NULL, /* No truncation check for error buffers */; 19942 error->text,; 19943 error->text_buffer_size,; 19944 ""Error in script %s: %s"",; 19945 config_options[DOCUMENT_ROOT].name,; 19946 ebuf);; 19947 }; 19948 pthread_mutex_unlock(&ctx->lua_bg_mutex);; 19949 ; 199",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:595005,config,config,595005,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"ateAvgMaxMax running event processing rate; Double_tfEvtRateMaxMax event processing rate per packet; TH1F*fEvtRateRunEvent processing rate running avg vs query time; TFile*fFileThe open performance file; TSortedListfFilesInfoSorted list of files info; Float_tfInitTimeEnd of initialization time for this query; Double_tfLatencyMaxMax retrieval latency per packet; TH1F*fMBRateByte processing rate vs query time; Double_tfMBRateAvgAverage MB processing rate; Double_tfMBRateAvgMaxMax running MB processing rate; Double_tfMBRateMaxMax MB processing rate per packet; TH1F*fMBRateRunByte processing rate running avg vs query time; Float_tfMaxTimeMax time for this query (slowest worker); Float_tfMergeTimeBegin of merging time for this query; TH1F*fPacketsPacket distribution per worker; TTree*fTreeThe performance tree; TStringfTreeNameThe name of the performance tree; TSortedListfWrksInfoSorted list of workers info; static Bool_tfgDebugGlobal verbosity on/off. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofPerfAnalysis(const char* perffile, const char* title = """", const char* treename = ""PROOF_PerfStats""); Constructor: open the file and attach to the tree. TProofPerfAnalysis(TTree* tree, const char* title = """"); Constructor: open the file and attach to the tree. ~TProofPerfAnalysis(); Destructor: detach the tree and close the file. TString GetCanvasTitle(const char* t); If defined, add '- <this title>' to the canvas title 't'. void LoadTree(TDirectory* dir); Load tree fTreeName from directory 'dir'. If not found, look for the; first TTree in the directory (and sub-directories) with the name containing; fTreeName.; The tree pointer is saved in fTree. void FileDist(Bool_t writedet = kFALSE); Analyse the file distribution. If writedet, underling details are; written out to a text file. void GetWrkFileList(TList* wl, TList* sl); Fill file info. Int_t CompareOrd(const char* ord1, const char* ord2); Return -1 if ord1 comes before ord2, 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofPerfAnalysis.html:8658,Inherit,Inheritance,8658,root/html602/TProofPerfAnalysis.html,https://root.cern,https://root.cern/root/html602/TProofPerfAnalysis.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ExpectedData() -- Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()). RooDataHist * generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; NumEvent(int nevt) -- Generate specified numb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsPdf.html:64977,extend,extended,64977,root/html528/RooAbsPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsPdf.html,9,['extend'],['extended']
Modifiability,"ateCdf. ROOT::Math::VavilovAccuratePdf. ROOT::Math::VavilovAccurateQuantile. ROOT::Math::VavilovFast. ROOT::Math::VirtualIntegratorMultiDim←. ROOT::Math::AdaptiveIntegratorMultiDim. ROOT::Math::GSLMCIntegrator. ROOT::Math::VirtualIntegratorOneDim←. ROOT::Math::GSLIntegrator. ROOT::Math::GaussIntegrator; ←. ROOT::Math::GaussLegendreIntegrator. ROOT::Math::WrappedMultiTF1. ROOT::Math::WrappedTF1. ROOT::Minuit2::CombinedMinimizer. ROOT::Minuit2::FCNBase←. ROOT::Minuit2::FCNGradientBase; ←. TFcnAdapter. ROOT::Minuit2::FumiliFCNBase. ROOT::Minuit2::FCNGradientBase←. TFcnAdapter. ROOT::Minuit2::FumiliFCNBase. ROOT::Minuit2::FumiliMinimizer. ROOT::Minuit2::Minuit2Minimizer. ROOT::Minuit2::MnFumiliMinimize. ROOT::Minuit2::MnMigrad. ROOT::Minuit2::MnMinimize. ROOT::Minuit2::MnScan. ROOT::Minuit2::MnSimplex. ROOT::Minuit2::ModularFunctionMinimizer←. ROOT::Minuit2::CombinedMinimizer. ROOT::Minuit2::FumiliMinimizer. ROOT::Minuit2::ScanMinimizer. ROOT::Minuit2::SimplexMinimizer. ROOT::Minuit2::VariableMetricMinimizer. ROOT::Minuit2::ScanMinimizer. ROOT::Minuit2::SimplexMinimizer. ROOT::Minuit2::VariableMetricMinimizer. ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> >. ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> >. ROOT::TArrayProxy<ROOT::TArrayType<bool,0> >. ROOT::TArrayProxy<ROOT::TArrayType<char,0> >. ROOT::TArrayProxy<ROOT::TArrayType<double,0> >. ROOT::TArrayProxy<ROOT::TArrayType<float,0> >. ROOT::TArrayProxy<ROOT::TArrayType<int,0> >. ROOT::TArrayProxy<ROOT::TArrayType<long,0> >. ROOT::TArrayProxy<ROOT::TArrayType<short,0> >. ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> >. ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >. ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> >. ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> >. ROOT::TBranchProxyClassDescriptor. ROOT::TBranchProxyDescriptor. ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> >. ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >. ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> >. ROOT::TCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassHierarchy.html:4963,Variab,VariableMetricMinimizer,4963,root/html534/ClassHierarchy.html,https://root.cern,https://root.cern/root/html534/ClassHierarchy.html,1,['Variab'],['VariableMetricMinimizer']
Modifiability,"ateColumnsImpl (const RNTupleDescriptor &desc);  For reading, use the on-disk column list. ;  ; virtual const RColumnRepresentations & GetColumnRepresentations () const;  Implementations in derived classes should return a static RColumnRepresentations object. ;  ; virtual RExtraTypeInfoDescriptor GetExtraTypeInfo () const;  ; virtual bool HasExtraTypeInfo () const;  ; void Read (NTupleSize_t globalIndex, void *to);  Populate a single value with data from the field. ;  ; void Read (RClusterIndex clusterIndex, void *to);  Populate a single value with data from the field. ;  ; std::size_t ReadBulk (const RBulkSpec &bulkSpec);  Returns the number of newly available values, that is the number of bools in bulkSpec.fMaskAvail that flipped from false to true. ;  ; virtual std::size_t ReadBulkImpl (const RBulkSpec &bulkSpec);  General implementation of bulk read. ;  ; void RemoveReadCallback (size_t idx);  ;  Static Protected Member Functions inherited from ROOT::Experimental::RFieldBase; static std::size_t CallAppendOn (RFieldBase &other, const void *from);  Allow derived classes to call Append and Read on other (sub) fields. ;  ; static void CallConstructValueOn (const RFieldBase &other, void *where);  Allow derived classes to call ConstructValue(void *) and GetDeleter on other (sub) fields. ;  ; static void * CallCreateObjectRawPtrOn (RFieldBase &other);  ; static void CallReadOn (RFieldBase &other, NTupleSize_t globalIndex, void *to);  ; static void CallReadOn (RFieldBase &other, RClusterIndex clusterIndex, void *to);  ; static RResult< std::unique_ptr< RFieldBase > > Create (const std::string &fieldName, const std::string &canonicalType, const std::string &typeAlias, bool continueOnError=false);  Factory method to resurrect a field from the stored on-disk type information. ;  ; static std::unique_ptr< RDeleter > GetDeleterOf (const RFieldBase &other);  ; static Internal::RColumn * GetPrincipalColumnOf (const RFieldBase &other);  Fields may need direct access to the princ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html:10660,inherit,inherited,10660,doc/master/classROOT_1_1Experimental_1_1RField.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html,1,['inherit'],['inherited']
Modifiability,"ateInfo& other); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TGeoStateInfo(Int_t maxdaughters = 0); TGeoStateInfo(const TGeoStateInfo& other). Data Members; public:. Int_tfAsmCurrentIndex for current entered node (assemblies); Int_tfAsmNextIndex for next entered node (assemblies); Int_tfBoolSelectedSelected Boolean node; TGeoCombiTransfDivCombiCombi transformation used by current division; Int_tfDivCurrentIndex for the current division node; Int_tfDivNextIndex for the next division node; TGeoRotationfDivRotRotation used by current division node; TGeoTranslationfDivTransTranslation used by current division node; TGeoNode*fNodeNode to which applies; UChar_t*fVoxBits1Bits used for list intersection; Int_t*fVoxCheckListList of candidates; Int_tfVoxCurrentIndex of current voxel in sorted list; Int_tfVoxInc[3]Slice index increment; Double_tfVoxInvdir[3]1/current director cosines; Double_tfVoxLimits[3]Limits on X,Y,Z; Int_tfVoxNcandidatesNumber of candidates; Int_tfVoxSlices[3]Slice indices for current voxel; Int_tfXtruIzcurrent z plane [0,fNz-1]; TGeoPolygon*fXtruPolypolygon defining section shape; Int_tfXtruSegcurrent segment [0,fNvert-1]; Double_t*fXtruXc[fNvert] current X positions for polygon vertices; Double_t*fXtruYc[fNvert] current Y positions for polygon vertices. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoStateInfo(Int_t maxdaughters = 0); Constructor. ~TGeoStateInfo(); Destructor. TGeoStateInfo(const TGeoStateInfo& other); Copy constructor. TGeoStateInfo & operator=(const TGeoStateInfo& other); Assignment. » Author: Andrei Gheata 07/02/2012 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-02 16:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoStateInfo.html:1837,Inherit,Inheritance,1837,root/html604/TGeoStateInfo.html,https://root.cern,https://root.cern/root/html604/TGeoStateInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ateListOfBrowsables_t generator)Removes a generator from the list of generators to be called when browsing branches.Definition TBranchBrowsable.cxx:372; where GetBrowsables is a static member function of your class, that creates the browsable helper objects, and has the signature static Int_t GetBrowsables(TList& list, const TBranch* branch,; const TVirtualBranchBrowsable* parent=0);; TBranchA TTree is a list of TBranches.Definition TBranch.h:93; TListA doubly linked list.Definition TList.h:38; TVirtualBranchBrowsableTVirtualBranchBrowsable is a base class (not really abstract, but useless by itself) for helper objec...Definition TBranchBrowsable.h:29; int; It has to return the number of browsable helper objects for parent (or, if NULL, for branch) which are added to the list. ; Definition at line 29 of file TBranchBrowsable.h. Public Types; typedef Int_t(* MethodCreateListOfBrowsables_t) (TList &, const TBranch *branch, const TVirtualBranchBrowsable *parent);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  ~TVirtualBranchBrowsable () override;  Destructor. Delete our leaves. ;  ; void Browse (TBrowser *b) override;  Calls TTree::Draw on the method if return type is not a class; otherwise expands returned object's ""folder"". ;  ; const TBranch * GetBranch () const;  return the parent branch (might be many levels up) ;  ; TClass * GetClassType () const;  return ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualBranchBrowsable.html:3334,inherit,inherited,3334,doc/master/classTVirtualBranchBrowsable.html,https://root.cern,https://root.cern/doc/master/classTVirtualBranchBrowsable.html,1,['inherit'],['inherited']
Modifiability,"ateOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables and parameters. ;  ; RooFit::OwningPtr< RooAbsFunc > bindVars (const RooArgSet &vars, const RooArgSet *nset=nullptr, bool clipInvalid=false) const;  Create an interface adaptor f(vars) that binds us to the specified variables (in arbitrary order). ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataHist &data, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Perform a \( \chi^2 \) fit to given histogram. ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataHist &data, const RooLinkedList &cmdList);  Calls RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList) and returns fit result. ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataSet &xydata, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Perform a 2-D \( \chi^2 \) fit using a series of x ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistPdf.html:16652,adapt,adaptor,16652,doc/master/classRooHistPdf.html,https://root.cern,https://root.cern/doc/master/classRooHistPdf.html,2,"['adapt', 'variab']","['adaptor', 'variables']"
Modifiability,"ateOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables and parameters. ;  ; RooFit::OwningPtr< RooAbsFunc > bindVars (const RooArgSet &vars, const RooArgSet *nset=nullptr, bool clipInvalid=false) const;  Create an interface adaptor f(vars) that binds us to the specified variables (in arbitrary order). ;  ; virtual std::string buildCallToAnalyticIntegral (Int_t code, const char *rangeName, RooFit::Detail::CodeSquashContext &ctx) const;  This function defines the analytical integral translation for the class. ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataHist &data, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Perform a \( \chi^2 \) fit to given histogram. ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataHist &data, const RooLinkedList &cmdList);  Calls RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList) and returns fit result. ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataSet &xydata, const RooCmdArg &arg1={}, const RooCmdArg &arg2={},",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWrapperPdf.html:15659,adapt,adaptor,15659,doc/master/classRooWrapperPdf.html,https://root.cern,https://root.cern/doc/master/classRooWrapperPdf.html,4,"['adapt', 'variab']","['adaptor', 'variables']"
Modifiability,"ateSelectionDisplay() to update the display. ;  ; void UpdateSelectionDisplay ();  The fPSelStartBlock and fPSelEndBlock values have been changed. ;  ;  Protected Member Functions inherited from TGView; void DoRedraw () override;  redraw ;  ; virtual void UpdateRegion (Int_t x, Int_t y, UInt_t w, UInt_t h);  update a part of view ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; int fAddEndTags;  ; TGFont * fAFont [71];  ; GcCache_t fAGcCache [32];  ; int fAnchorFlags;  ; TGHtmlAnchor * fAnchorStart;  ; ColorStruct_t * fApColor [32];  ; ColorStruct_t * fBgColor;  ; TImage * fBgImage;  ; Long_t fColorUsed;  ; Cursor_t fCursor;  ; int fDirtyBottom;  ; int fDirtyLeft;  ; int fDirtyRight;  ; int fDirtyTop;  ; int fExiting;  ; int fExportSelection;  ; SHtmlExtensions_t * fExts;  ; ColorStr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtml.html:38501,inherit,inherited,38501,doc/master/classTGHtml.html,https://root.cern,https://root.cern/doc/master/classTGHtml.html,3,['inherit'],['inherited']
Modifiability,"ateView ();  Update the polylines or the arcs for the current entries. ;  . Private Attributes; bool fAngularLabels;  True if the labels are oriented according to their axis. ;  ; Int_t fArraySize;  Actual size of the arrays. ;  ; Double_t * fAve;  [fNcols] Average value of each variable. ;  ; TPolyLine * fAveragePoly;  Polygon representing the average variables value. ;  ; TArc ** fAverageSlices;  ! Average slices. ;  ; TCanvas * fCanvas;  ! Pointer to the mother pad. ;  ; Long64_t * fCurrentEntries;  ![fNx*fNy] current selected entries; ;  ; bool fDisplayAverage;  Display or not the average. ;  ; Long64_t fEntry;  Present entry number in fTree. ;  ; Long64_t fFirstEntry;  First entry. ;  ; bool fForceDim;  Force dimension. ;  ; TList * fFormulas;  List of all formulas to represent. ;  ; TList * fInput;  Used for fSelector. ;  ; TTreeFormulaManager * fManager;  Coordinator for the formulas. ;  ; Double_t * fMax;  [fNcols] Maximum value of the variables. ;  ; Double_t * fMin;  [fNcols] Minimum value of the variables. ;  ; UInt_t fNcols;  Number of variables. ;  ; Long64_t fNentries;  Number of entries. ;  ; UInt_t fNx;  Number of horizontal spider plots. ;  ; UInt_t fNy;  Number of vertical spider plots. ;  ; TGraphPolargram * fPolargram;  Polar graph. ;  ; TList * fPolyList;  Polygons representing the variables. ;  ; bool fSegmentDisplay;  True if displaying a segment plot. ;  ; TTreeFormula * fSelect;  Selection condition. ;  ; TSelectorDraw * fSelector;  ! Selector. ;  ; bool fShowRange;  Show range of variables or not. ;  ; TList * fSuperposed;  Superposed spider plots. ;  ; TTree * fTree;  Pointer to the TTree to represent. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:18413,variab,variables,18413,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['variab'],['variables']
Modifiability,"ated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; virtual double Edm () const;  return expected distance reached from the minimum (re-implement if minimizer provides it ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual const double * MinGradient () const;  return pointer to gradient values at the minimum ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Min",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html:6877,variab,variable,6877,doc/master/classROOT_1_1Math_1_1RMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html,2,['variab'],['variable']
Modifiability,"ated by this function.; In a ROOT session, you can do:; root > .L MyClass.C; root > MyClass* t = new MyClass;; root > t->GetEntry(12); // Fill data members of t with entry number 12.; root > t->Show(); // Show values of entry 12.; root > t->Show(16); // Read and show values of entry 16.; root > t->Loop(); // Loop on all entries. NOTE: Do not use the code generated for a single TTree which is part; of a TChain to process that entire TChain. The maximum dimensions; calculated for arrays on the basis of a single TTree from the TChain; might be (will be!) too small when processing all of the TTrees in; the TChain. You must use myChain.MakeClass() to generate the code,; not myTree.MakeClass(...). Int_t MakeCode(const char* filename = 0); Generate a skeleton function for this tree. The function code is written on filename.; If filename is 0, filename will be called nameoftree.C. The generated code includes the following:; - Identification of the original Tree and Input file name,; - Opening the Tree file,; - Declaration of Tree variables,; - Setting of branches addresses,; - A skeleton for the entry loop. To use this function:; - Open your Tree file (eg: TFile f(""myfile.root"");); - T->MakeCode(""MyAnalysis.C"");; where T is the name of the TTree in file myfile.root; and MyAnalysis.C the name of the file created by this function. NOTE: Since the implementation of this function, a new and better; function TTree::MakeClass() has been developed. Int_t MakeProxy(const char* classname, const char* macrofilename = 0, const char* cutfilename = 0, const char* option = 0, Int_t maxUnrolling = 3); Generate a skeleton analysis class for this Tree using TBranchProxy. TBranchProxy is the base of a class hierarchy implementing an; indirect access to the content of the branches of a TTree. ""proxyClassname"" is expected to be of the form:; [path/]fileprefix; The skeleton will then be generated in the file:; fileprefix.h; located in the current directory or in 'path/' if it is specified.; The ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:98128,variab,variables,98128,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,10,['variab'],['variables']
Modifiability,"ated cuts approach by transforming linearly the input variables into a diagonal space, using the square-root of the covariance matrix.; Other optimisation criteria, such as maximising the signal significance- squared, \( \frac{S^2}{(S+B)} \), with S and B being the signal and background yields, correspond to a particular point in the optimised background rejection versus signal efficiency curve. This working point requires the knowledge of the expected yields, which is not the case in general. Note also that for rare signals, Poissonian statistics should be used, which modifies the significance criterion.; The rectangular cut of a volume in the variable space is performed using a binary tree to sort the training events. This provides a significant reduction in computing time (up to several orders of magnitudes, depending on the complexity of the problem at hand).; Technically, optimisation is achieved in TMVA by two methods:. Monte Carlo generation using uniform priors for the lower cut value, and the cut width, thrown within the variable ranges.; A Genetic Algorithm (GA) searches for the optimal (""fittest"") cut sample. The GA is configurable by many external settings through the option string. For difficult cases (such as many variables), some tuning may be necessary to achieve satisfying results. Attempts to use Minuit fits (Simplex ot Migrad) instead have not shown superior results, and often failed due to convergence at local minima.; The tests we have performed so far showed that in generic applications, the GA is superior to MC sampling, and hence GA is the default method. It is worthwhile trying both anyway.; Decorrelated (or ""diagonalized"") Cuts**; See class description for Method Likelihood for a detailed explanation. ; Definition at line 61 of file MethodCuts.h. Public Member Functions;  MethodCuts (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption=""MC:150:10000:"");  standard constructor ;  ;  MethodCuts (Dat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html:1673,variab,variable,1673,doc/master/classTMVA_1_1MethodCuts.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html,1,['variab'],['variable']
Modifiability,"ated dataset. ;  ; Int_t ScanDataSet (const char *group, const char *user, const char *dsName, UInt_t option=kReopen|kDebug);  See documentation of ScanDataSet(TFileCollection *dataset, UInt_t option) ;  ; void UpdateUsedSpace () override;  updates the used space maps ;  ;  Protected Member Functions inherited from TDataSetManager; virtual TMap * GetGroupUsedMap ();  ; Int_t GetNDisapparedFiles () const;  ; Int_t GetNOpenedFiles () const;  ; Int_t GetNTouchedFiles () const;  ; void GetQuota (const char *group, const char *user, const char *dsName, TFileCollection *dataset);  Gets quota information from this dataset. ;  ; virtual TMap * GetUserUsedMap ();  ; void PrintDataSet (TFileCollection *fc, Int_t popt=0);  Formatted printout of the content of TFileCollection 'fc'. ;  ; void PrintUsedSpace ();  Prints the quota. ;  ; Bool_t ReadGroupConfig (const char *cf=0);  Read group config file 'cf'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; Int_t CheckLocalCache (const char *group, const char *user, const char *dsName=""ls"", UInt_t option=0);  Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ;  ; void InitLocalCache ();  Init the local cache if required. ;  . Private Attributes; Int_t fCacheUpdatePeriod;  ; TString fDataSetDir;  ; TString fDataSetLockFile;  ; Bool_t fIsRemote;  ; TString fListFile;  ; TString fLocalCacheDir;  ; Int_t fLockFileTimeLimit;  ; TString fMSSUrl;  ; Bool_t fOpenPerms;  ; TString fStageOpts;  ; Bool_t fUseCache;  . Additional Inherited Members;  Public Types inherited from TDataSetManager; enum  EDataSetStatusBits { ;   kCheckQuota = (1ULL << ( 15 )); , kAllowRegister = (1ULL << ( 16 )); , kAllowVerify = (1ULL << ( 17 ))",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDataSetManagerFile.html:17112,inherit,inherited,17112,doc/master/classTDataSetManagerFile.html,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html,1,['inherit'],['inherited']
Modifiability,"ated dependent values should be store in the proxy; objects. For this the assignment operator can be used (i.e. xProxy; = 3.0 ). Never call assign to any proxy not known to be a dependent; via the generation code. Doing so may be ill-defined, e.g. in case; the proxy holds a function, and will trigger an assert. Function Members (Methods); public:. virtual~GenSpec(); static TClass*Class(); RooAbsPdf::GenSpecGenSpec(); virtual TClass*IsA() const; RooAbsPdf::GenSpec&operator=(const RooAbsPdf::GenSpec&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. RooAbsPdf::GenSpecGenSpec(const RooAbsPdf::GenSpec& other); RooAbsPdf::GenSpecGenSpec(RooAbsGenContext* context, const RooArgSet& whatVars, RooDataSet* protoData, Int_t nGen, Bool_t extended, Bool_t randProto, Bool_t resampleProto, TString dsetName, Bool_t init = kFALSE). Data Members; private:. TString_dsetName; Bool_t_extended; RooAbsGenContext*_genContext; Bool_t_init; Int_t_nGen; RooDataSet*_protoData; Bool_t_randProto; Bool_t_resampleProto; RooArgSet_whatVars. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~GenSpec(). GenSpec(RooAbsGenContext* context, const RooArgSet& whatVars, RooDataSet* protoData, Int_t nGen, Bool_t extended, Bool_t randProto, Bool_t resampleProto, TString dsetName, Bool_t init = kFALSE). GenSpec(); { _genContext = 0 ; _protoData = 0 ; _init = kFALSE ; _extended=kFALSE, _nGen=0 ; _randProto = kFALSE ; _resampleProto=kFALSE ; }. GenSpec(RooAbsGenContext* context, const RooArgSet& whatVars, RooDataSet* protoData, Int_t nGen, Bool_t extended, Bool_t randProto, Bool_t resampleProto, TString dsetName, Bool_t init = kFALSE). » Last changed: Tue Jun 30 14:30:22 2015 » Last generated: 2015-06-30 14:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsPdf__GenSpec.html:5342,extend,extended,5342,root/html602/RooAbsPdf__GenSpec.html,https://root.cern,https://root.cern/root/html602/RooAbsPdf__GenSpec.html,6,"['Inherit', 'extend']","['Inheritance', 'Inherited', 'extended']"
Modifiability,ated derivation of TMPWorkerTree handlign selector tree processing ;  CTMrbSubevent_Caen;  CTMultiDimFitMultidimensional Fits in ROOT ;  CTMultiGraphA TMultiGraph is a collection of TGraph (or derived) objects ;  CTMultiLayerPerceptron;  CTMutex;  CTMutexImp;  CTMySQLResult;  CTMySQLRow;  CTMySQLServer;  ►CTMySQLStatement;  CTParamData;  CTNamedBase class for all named ROOT classes ;  CTNDArray;  CTNDArrayRef;  CTNDArrayT;  CTNetFile;  CTNetFileStager;  CTNetSystem;  CTNetXNGFile;  CTNetXNGFileStager;  CTNetXNGSystem;  CTNeuron;  CTNewChainDlg;  CTNewQueryDlg;  CTNodeTNode description ;  CTNodeDivDescription of parameters to divide a 3-D geometry object ;  CTNonCopyable;  CTNonSplitBrowsableAllows a TBrowser to browse non-split branches as if they were split ;  CTNotifyLinkLinks multiple listeners to be notified on TChain file changes ;  CTNotifyLinkBase;  CTNtupleA simple TTree restricted to a list of float variables only ;  CTNtupleDA simple TTree restricted to a list of double variables only ;  CTObjArrayAn array of TObjects ;  CTObjArrayIterIterator of object array ;  CTObjectMother of all ROOT objects ;  CTObjectRefSpy;  CTObjectSet;  CTObjectSpyMonitors objects for deletion and reflects the deletion by reverting the internal pointer to zero ;  CTObjectTableThis class registers all instances of TObject and its derived classes in a hash table ;  CTObjLinkWrapper around a TObject so it can be stored in a TList ;  CTObjOptLink;  CTObjStringCollectable string class ;  CTOCCToStepThis class contains implementation of writing OpenCascade's geometry shapes to the STEP file reproducing the original ROOT geometry tree ;  CTODBCResult;  CTODBCRow;  CTODBCServer;  ►CTODBCStatement;  CODBCBufferRec_t;  CToolBarData_t;  CTOptionListItem;  CTOracleResult;  CTOracleRow;  CTOracleServer;  ►CTOracleStatement;  CTBufferRec;  CTOrdCollectionOrdered collection ;  CTOrdCollectionIterIterator of ordered collection ;  CTOutputListSelectorDataMapSet the selector's data members to the ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/annotated.html:197121,variab,variables,197121,doc/v616/annotated.html,https://root.cern,https://root.cern/doc/v616/annotated.html,1,['variab'],['variables']
Modifiability,"ated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static void ErrorHandler (Int_t level, Bool_t abort, const char *location, const char *msg);  The error handler function. ;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationServer.html:19348,inherit,inherited,19348,doc/master/classTApplicationServer.html,https://root.cern,https://root.cern/doc/master/classTApplicationServer.html,1,['inherit'],['inherited']
Modifiability,"ated with a control variable :; the later is therefore totally absent from the fit. The weights are calculated using Eq. (2) where the covariance matrix is taken from Minuit. Histograms of  are filled by weighting the events with . Error bars per bin are given by Eq. (6). The ; reproduce the true distributions of the species in the control variable , within the above defined statistical uncertainties. Illustrations. To illustrate the technique, one considers an example derived from the analysis where . have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields and . The fit relies on two discriminating variables collectively denoted  which are chosen within three possible variables denoted , and .; The variable which is not incorporated in  is used as the control variable . The six distributions of the three variables are assumed to be the ones depicted in Fig. 1. Figure 1:; Distributions of the three discriminating variables available to perform the Likelihood fit:; , , .; Among the three variables, two are used to perform the fit while one is; kept out of the fit to serve the purpose of a control variable. The; three distributions on the top (resp. bottom) of the figure correspond; to the signal (resp. background). The unit of the vertical axis is; chosen such that it indicates the number of entries per bin, if one; slices the histograms in 25 bins. A data sample being built through a Monte Carlo simulation based on the distributions shown in Fig. 1, one obtains the three distributions of Fig. 2. Whereas the distribution of  clearly indicates the presence of the signal, the distribution of and are less obviously populated by signal. Figure 2:; Distributions of the three discriminating variables for signal plus; background. The three distributions are the ones obtained from a data; sample obtained",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSPlot.html:5513,variab,variables,5513,root/html602/TSPlot.html,https://root.cern,https://root.cern/root/html602/TSPlot.html,4,['variab'],['variables']
Modifiability,"ated). ;  ; TTreeFormula * GetVar1 () const;  See TSelectorDraw::GetVar. ;  ; TTreeFormula * GetVar2 () const;  See TSelectorDraw::GetVar. ;  ; TTreeFormula * GetVar3 () const;  See TSelectorDraw::GetVar. ;  ; TTreeFormula * GetVar4 () const;  See TSelectorDraw::GetVar. ;  ; virtual Double_t * GetW () const;  ; TClass * IsA () const override;  ; bool Notify () override;  This function is called at the first entry of a new tree in a chain. ;  ; bool Process (Long64_t) override;  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; void ProcessFill (Long64_t entry) override;  Called in the entry loop for all entries accepted by Select. ;  ; virtual void ProcessFillMultiple (Long64_t entry);  Called in the entry loop for all entries accepted by Select. ;  ; virtual void ProcessFillObject (Long64_t entry);  Called in the entry loop for all entries accepted by Select. ;  ; virtual void SetEstimate (Long64_t n);  Set number of entries to estimate variable limits. ;  ; virtual UInt_t SplitNames (const TString &varexp, std::vector< TString > &names);  Build Index array for names in varexp. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TakeAction ();  Execute action for object obj fNfill times. ;  ; virtual void TakeEstimate ();  Estimate limits for 1-D, 2-D or 3-D objects. ;  ; void Terminate () override;  Called at the end of a loop on a TTree. ;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html:3258,variab,variable,3258,doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html,3,['variab'],['variable']
Modifiability,"ated). ;  ; TTreeFormula * GetVar1 () const;  See TSelectorDraw::GetVar. ;  ; TTreeFormula * GetVar2 () const;  See TSelectorDraw::GetVar. ;  ; TTreeFormula * GetVar3 () const;  See TSelectorDraw::GetVar. ;  ; TTreeFormula * GetVar4 () const;  See TSelectorDraw::GetVar. ;  ; virtual Double_t * GetW () const;  ; TClass * IsA () const override;  ; bool Notify () override;  This function is called at the first entry of a new tree in a chain. ;  ; bool Process (Long64_t) override;  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; void ProcessFill (Long64_t entry) override;  Called in the entry loop for all entries accepted by Select. ;  ; virtual void ProcessFillMultiple (Long64_t entry);  Called in the entry loop for all entries accepted by Select. ;  ; virtual void ProcessFillObject (Long64_t entry);  Called in the entry loop for all entries accepted by Select. ;  ; virtual void SetEstimate (Long64_t n);  Set number of entries to estimate variable limits. ;  ; virtual UInt_t SplitNames (const TString &varexp, std::vector< TString > &names);  Build Index array for names in varexp. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void TakeEstimate ();  Estimate limits for 1-D, 2-D or 3-D objects. ;  ; void Terminate () override;  Called at the end of a loop on a TTree. ;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html:3937,variab,variable,3937,doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html,2,['variab'],['variable']
Modifiability,"atedAnnealing::SetDefaultScale ; (; ). private . setting of default scale ; Definition at line 230 of file SimulatedAnnealing.cxx. ◆ SetInitTemp(). void TMVA::SimulatedAnnealing::SetInitTemp ; (; Double_t ; it). inline . Definition at line 63 of file SimulatedAnnealing.h. ◆ SetIPythonInteractive(). void TMVA::SimulatedAnnealing::SetIPythonInteractive ; (; bool * ; ExitFromTraining, . UInt_t * ; fIPyCurrentIter_ . ). inline . Definition at line 74 of file SimulatedAnnealing.h. ◆ SetMaxCalls(). void TMVA::SimulatedAnnealing::SetMaxCalls ; (; Int_t ; mc). inline . Definition at line 62 of file SimulatedAnnealing.h. ◆ SetMinTemp(). void TMVA::SimulatedAnnealing::SetMinTemp ; (; Double_t ; min). inline . Definition at line 64 of file SimulatedAnnealing.h. ◆ SetOptions(). void TMVA::SimulatedAnnealing::SetOptions ; (; Int_t ; maxCalls, . Double_t ; initialTemperature, . Double_t ; minTemperature, . Double_t ; eps, . TString ; kernelTemperatureS, . Double_t ; temperatureScale, . Double_t ; adaptiveSpeed, . Double_t ; temperatureAdaptiveStep, . Bool_t ; useDefaultScale, . Bool_t ; useDefaultTemperature . ). option setter ; Definition at line 73 of file SimulatedAnnealing.cxx. ◆ SetTemperatureScale(). void TMVA::SimulatedAnnealing::SetTemperatureScale ; (; Double_t ; scale). inline . Definition at line 66 of file SimulatedAnnealing.h. ◆ ShouldGoIn(). Bool_t TMVA::SimulatedAnnealing::ShouldGoIn ; (; Double_t ; currentFit, . Double_t ; localFit, . Double_t ; currentTemperature . ). private . result checker ; Definition at line 219 of file SimulatedAnnealing.cxx. ◆ Streamer(). virtual void TMVA::SimulatedAnnealing::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TMVA::SimulatedAnnealing::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 127 of file SimulatedAnnealing.h. Member Data Documentation. ◆ fAdaptiveSpeed. Double_t TMVA::SimulatedAnnealing::fAdaptiveSpeed. private . how fast temperature change in adaptive (in a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealing.html:8608,adapt,adaptiveSpeed,8608,doc/master/classTMVA_1_1SimulatedAnnealing.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealing.html,1,['adapt'],['adaptiveSpeed']
Modifiability,"atedDefinition DataLoader.cxx:541; TMVA::DataLoader::fATreeTypeInt_t fATreeTypetype of event (=classIndex)Definition DataLoader.h:206; TMVA::DataLoader::fTestAssignTreestd::vector< TTree * > fTestAssignTreefor each class: tmp tree if user wants to assign the events directlyDefinition DataLoader.h:204; TMVA::DataLoader::fAnalysisTypeTypes::EAnalysisType fAnalysisTypethe training typeDefinition DataLoader.h:210; TMVA::DataLoader::SetCutvoid SetCut(const TString &cut, const TString &className="""")Definition DataLoader.cxx:575; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::DataLoader::PrepareFoldDataSetvoid PrepareFoldDataSet(CvSplit &s, UInt_t foldNumber, Types::ETreeType tt=Types::kTraining)Function for assigning the correct folds to the testing or training set.Definition DataLoader.cxx:670; TMVA::DataSetInfoClass that contains all the data information.Definition DataSetInfo.h:62; TMVA::DataSetManagerClass that contains all the data information.Definition DataSetManager.h:51; TMVA::Types::EAnalysisTypeEAnalysisTypeDefinition Types.h:126; TMVA::Types::ETreeTypeETreeTypeDefinition Types.h:142; TMVA::Types::kMaxTreeType@ kMaxTreeTypealso used as temporary storage for trees not yet assigned for testing;training...Definition Types.h:145; TMVA::Types::kTraining@ kTrainingDefinition Types.h:143; TStringBasic string class.Definition TString.h:139; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; bool; double; int; unsigned int; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; TMVA::DataLoaderCopyvoid DataLoaderCopy(TMVA::DataLoader *des, TMVA::DataLoader *src); ttauto * ttDefinition textangle.C:16; Types.h. tmvatmvaincTMVADataLoader.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:57 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:21084,variab,variable,21084,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,1,['variab'],['variable']
Modifiability,"ategory::GetMvaValues) ;  ; UInt_t fIPyCurrentIter = 0;  ; UInt_t fIPyMaxIter = 0;  ; std::vector< Float_t > * fMulticlassReturnVal;  ; Int_t fNbins;  ; Int_t fNbinsH;  ; Int_t fNbinsMVAoutput;  ; Ranking * fRanking;  ; std::vector< Float_t > * fRegressionReturnVal;  ; Results * fResults;  ; UInt_t fSignalClass;  ; DataSet * fTmpData = nullptr;  temporary event when testing on a different DataSet than the own one ;  ; const Event * fTmpEvent;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Bool_t IsModuleLoaded = ROOT::R::TRInterface::Instance().Require(""C50"");  . Private Attributes; DataSetManager * fDataSetManager;  . Friends; class Factory;  ; class Reader;  . Additional Inherited Members;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TMVA::RMethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Versi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodC50.html:26292,inherit,inherited,26292,doc/master/classTMVA_1_1MethodC50.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodC50.html,2,['inherit'],['inherited']
Modifiability,"ategoryLValue &asymCat, PlotOpt o) constDefinition RooAbsReal.cxx:2199; RooAbsReal::operator==bool operator==(double value) constEquality operator comparing to a double.Definition RooAbsReal.cxx:250; RooAbsReal::evalErrorLoggingModestatic ErrorLoggingMode evalErrorLoggingMode()Return current evaluation error logging mode.Definition RooAbsReal.cxx:4302; RooAbsReal::redirectServersHookbool redirectServersHook(const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursiveStep) overrideFunction that is called at the end of redirectServers().Definition RooAbsReal.cxx:4474; RooAbsReal::minTrialSamplesvirtual Int_t minTrialSamples(const RooArgSet &) constDefinition RooAbsReal.h:241; RooAbsReal::isValidRealvirtual bool isValidReal(double, bool printError=false) constInterface function to check if given value is a valid value for this object. Returns true unless over...Definition RooAbsReal.h:447; RooAbsReal::setIntegratorConfigvoid setIntegratorConfig()Remove the specialized numeric integration configuration associated with this object.Definition RooAbsReal.cxx:3346; RooAbsReal::syncCachevoid syncCache(const RooArgSet *set=nullptr) overrideDefinition RooAbsReal.h:456; RooAbsReal::printValuevoid printValue(std::ostream &os) const overridePrint object value.Definition RooAbsReal.cxx:445; RooAbsReal::forceAnalyticalIntvirtual bool forceAnalyticalInt(const RooAbsArg &) constDefinition RooAbsReal.h:164; RooAbsReal::isIdenticalbool isIdentical(const RooAbsArg &other, bool assumeSameType=false) const overrideDefinition RooAbsReal.cxx:270; RooAbsReal::setUnitvoid setUnit(const char *unit)Definition RooAbsReal.h:147; RooAbsReal::getForceNumIntbool getForceNumInt() constDefinition RooAbsReal.h:174; RooAbsReal::createProfilevirtual RooFit::OwningPtr< RooAbsReal > createProfile(const RooArgSet &paramsOfInterest)Create a RooProfileLL object that eliminates all nuisance parameters in the present function.Definition RooAbsReal.cxx:471; RooAbsReal::_hideOffset",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:41911,config,configuration,41911,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['config'],['configuration']
