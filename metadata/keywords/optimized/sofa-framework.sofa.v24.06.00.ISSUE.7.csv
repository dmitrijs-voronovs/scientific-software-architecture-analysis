quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Performance,"from [CompressedRowSparseMatrix](https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrix.h) so we need to bring their version of CompressedRowSparseMatrix . I renamed all the **bloc** words to **block** as well. The previous CRSMatrix could be used as a BaseMatrix (solvers), ConstraintMatrix (iterations) and as a pure CRS itself.; This new CRSMatrix is decomposed in several types:; - CRSGeneric (name to be changed maybe): the pure CRS structure; - CRSMechanical: inheriting/implementing BaseMatrix; - (in a next PR) CRSConstraintMatrix, with the same API as the old CRSMatrix used for ConstraintMatrices (for iterating). Different purposes need different traits (some case would prefer autocompression, etc), so a lot of compile-time options are present. They are called policy.; I needed to change some flags from the Insimo's version to have the same behavior for the tests. So in the future, it could be interesting to see if those changes should be integrated later for more performance (but the tests would need to be changed). For compatibility reasons, the old ""CRSMatrix"" type is an alias on CRSMechanical. In this PR, no change of performance is noted (neither regression or upgrade). Tested on caduceus, TorusFall, solvers scenes and BeamAdapter's 3instruments_collis.scn. Ref:; - https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrix.h. Courtesy of Insimo (@fjourdes ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515:1316,perform,performance,1316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515,1,['perform'],['performance']
Performance,"g-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData (2 ms); [ RUN ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_t",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3774,load,loaded,3774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,"games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtil",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2284,load,load,2284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['load'],['load']
Performance,ger] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscF,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7955,Load,Loaded,7955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,ger] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.C,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8980,Load,Loaded,8980,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,ger] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4695,Load,Loaded,4695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,ger] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Comp,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8911,Load,Loaded,8911,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,ger] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_sour,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3482,Load,Loaded,3482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,ger] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/s,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3771,Load,Loaded,3771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"ger] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedNam",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9807,Load,Loaded,9807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"getEdge() from EdgeSetTopologyContainer does bound-checking and the compiler cannot really optimize that.; EDIT: and moreover, getNbEdges() (edges, etc) used in the getEdge is extremely non-optimized... In a nutsheel, it is much faster to do; ```; const auto& edges = topo.getEdges();; for(const auto& e : edges) ; { ; blabla(e);; }; ```; than; ```; for(auto i = 0; i < topo.getNbEdges() ; i++) ; { ; blabla(topo.getEdge(i));; }; ```. Some idea to keep the getEdge() (and others) would be either to remove the bound-check (maybe enable only in debug like std::vector), or do an unsafe version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2516:91,optimiz,optimize,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2516,2,['optimiz'],"['optimize', 'optimized']"
Performance,gin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/b,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5628,Load,Loaded,5628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,gin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3961,Load,Loaded,3961,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"gin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; fo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11038,Load,Loaded,11038,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,gin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Com,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8634,Load,Loaded,8634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,ginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Co,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6214,Load,Loaded,6214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"ginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDeb",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8733,Load,Loaded,8733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,gin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:2461,Load,Loaded,2461,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,gine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_relea,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6345,Load,Loaded,6345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,gine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Edge2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2TetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: IdentityTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Mes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:25654,Load,Loaded,25654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,gins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [WARNING] [ObjectFactory] Class already registered: AddFrameButtonSetting; [WARNING] [ObjectFactory] Class already registered: AddRecordedCameraButtonSetting; [WARNING] [ObjectFactory] Class already registered: StartNavigationButtonSetting; [WARNING] [ObjectFactory] Class already registered: AttachBodyButtonSetting; [WARNING] [ObjectFactory] Class already registered: FixPickedParticleButtonSetting; [WARNING] [ObjectFactory] Class already registered: Gravity; [WARNING] [ObjectFactory] Class already registered: PauseAnimationOnEvent; [WARNING] [ObjectFactory] Class already registered: SofaDefaultPathSetting; [WARNING] [ObjectFactory] Class already registered: StatsSetting; [WARNING] [ObjectFactory] Class already registered: ViewerSetting; [WARNING] [ObjectFactory] Class already registered: APIVersion; [IN,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:13387,Load,Loaded,13387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"giving a texture in .png to an OglModel is working, while giving the same texture compressed in .jpg is not (the texture is loaded but it does not appear correctly on the mesh, like if the texture coordinates were incorrect)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/9:124,load,loaded,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/9,1,['load'],['loaded']
Performance,"good, I like the direction it takes . I think if we (you ?-) add additionnal sXyz component stream (like at least sdebug, or a new component API to match the existing msg_Xyz API), we could then have the printLog data deprecated and replaced by msgLevel and start the transition. . The removal of the per component ""message buffer"" has to be done in // in the gui and can be viewed as a separate problem. This would be the responsibility of the GUI to create those per component buffers . thomas . ----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""Mention""; > <mention@noreply.github.com>; > Envoyé: Mercredi 1 Février 2017 20:34:25; > Objet: Re: [sofa-framework/sofa] [SofaKernel] Add; > PerComponentLoggingMessageHandler to keep and history of messages. (#106). > @matthieu-nesme. > I looked back to the PR and I will remove the three Data field because:. > * controlling the queue size view a Data is not crucial. I will replace it; > with an attribute and get/set or an environment variable.; > * the msgLevel is un-used and was there to rise discussion on whether or not; > controlling the level of messages emitted by an object make sense (eg when; > debugging).; > * the logLevel'one is un-used yet but should one day override the behavior of; > the mis-used f_printLog. > Thanks again to pointing that. > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276931767:1011,queue,queue,1011,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276931767,1,['queue'],['queue']
Performance,"gs. **Full output**. ```txt. [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = D:/github-clones/sofa/build/bin;D:/github-clones/sofa/build/plugins;D:/github-clones/sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaG",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5391,Load,Loaded,5391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,gshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8207,Load,Loaded,8207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"gy"",; n=[6, 3, 3],; fileTopology=""mesh/bubille_out.obj"",; fileTopologies=[""mesh/bubille_out.obj"", ""mesh/bubille_in1.obj"", ""mesh/bubille_in2.obj""],; nbVirtualFinerLevels=3,; finestConnectivity=False,; stiffnessCoefs=[1, 0.0001, 50],; massCoefs=[1, 1, 1],; ); composite_node.addObject(""EulerImplicitSolver"", vdamping=0, rayleighMass=0, rayleighStiffness=0); composite_node.addObject(""SparseLDLSolver""); composite_node.addObject(""MechanicalObject""); composite_node.addObject(; ""HexahedronCompositeFEMForceFieldAndMass"",; drawType=""0"",; lumpedMass=False,; nbVirtualFinerLevels=2,; youngModulus=600,; poissonRatio=0.3,; method=""polar"",; density=0.1,; updateStiffnessMatrix=False,; printLog=False,; ); composite_node.addObject(""BoxROI"", box=""-5 -2.1 -10 10 -1.9 10""); composite_node.addObject(""FixedConstraint"", indices=""@BoxROI.indices""); composite_node.addObject(""LinearSolverConstraintCorrection""). collision_node = composite_node.addChild(""collision""). collision_node.addObject(""MeshOBJLoader"", name=""loader"", filename=""mesh/bubille_out.obj""); collision_node.addObject(""MeshTopology"", src=""@loader""); collision_node.addObject(""MechanicalObject"", src=""@loader""); collision_node.addObject(""HexahedronCompositeFEMMapping""); # collision_node.addObject(""TriangleCollisionModel"", group=0); collision_node.addObject(""SphereCollisionModel"", group=0, radius=0.3). visual_node = collision_node.addChild(""visual""); visual_node.addObject(""MeshOBJLoader"", name=""meshLoader_2"", filename=""mesh/bubille_out.obj"", handleSeams=True); visual_node.addObject(""OglModel"", name=""VisualBody"", src=""@meshLoader_2"", normals=""0"", color=[0.1, 0.8, 0.3, 0.6]); visual_node.addObject(""IdentityMapping"", input=""@.."", output=""@VisualBody""). soft_bead_node = composite_node.addChild(""soft bead""); soft_bead_node.addObject(""MeshOBJLoader"", name=""meshLoader_1"", filename=""mesh/bubille_in1.obj"", handleSeams=True); soft_bead_node.addObject(""OglModel"", name=""VisualBody1"", src=""@meshLoader_1"", normals=""0"", color=[1, 0, 0, 1]); soft_bead_no",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:5247,load,loader,5247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['load'],['loader']
Performance,gy.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechan,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3435,Load,Loaded,3435,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"h environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Pr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1270,load,load,1270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['load'],['load']
Performance,"h is not mandatory, but ease the use of the package, with commands like; - `nix build`, to compile the package in a sandbox; - `nix develop`, to provide a shell with an environment containing all required dependencies to build the project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:1159,cache,cache,1159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,1,['cache'],['cache']
Performance,"h::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::Simulation::initNode(sofa::simulation::Node*); sofa::simulation::Simulation::init(sofa::simulation::Node*); __libc_start_main; Segmentation fault (core dumped). **Expected behavior**; the scene has to run (When I replace dataset with dataset1 which I declared as:. diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; index 2f00fe62dc..782ce854ce 100644; --- a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; +++ b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; @@ -72,6 +72,7 @@ MeshLoader::MeshLoader() : BaseLoader(); , d_rotation(initData(&d_rotation, Vec3(), ""rotation"", ""Rotation of the DOFs"")); , d_scale(initData(&d_scale, Vec3(1.0, 1.0, 1.0), ""scale3d"", ""Scale of the DOFs in 3 dimensions"")); , d_transformation(initData(&d_transformation, type::Matrix4::s_identity, ""transformation"", ""4x4 Homogeneous matrix to transform the DOFs (when present replace any)"")); + , d_dataset1(initData(&d_dataset1, ""dataset1"", ""Data from dataset"")); , d_previousTransformation(type::Matrix4::s_identity ); {; addAlias(&d_tetrahedra, ""tetras"");; @@ -184,6 +185,8 @@ void MeshLoader::clearBuffers(); getWriteOnlyAccessor(d_pyramidsGroups).clear();; getWriteOnlyAccessor(d_polygonsGrou",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:2489,load,loader,2489,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['load'],['loader']
Performance,"hared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [ERROR] [HexahedronFEMForceField(FEM)] No topology component found at path: , nor in current context: Snake. Object must have a MeshTopology.; [ERROR] [BarycentricMapping(barycentricMap1)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap2)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap3)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap4)] No input topology found. Consider setting the 'input_topology' attribute. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/9058072/CMakeCache.txt). ----------------------------------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:11046,load,load,11046,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['load'],['load']
Performance,"he Sofa 'DataEngine' in a scripted way. In the second example provided it is shown how a versatile ROI functionality can be implemented with the help of the PSDE. Two examples with some documentation are provided in: ; applications/plugins/SofaPython/examples/PSDEExamples/. Example of use (01-basic/PSDEBasic.pyscn):; ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-; import Sofa; import os. path = os.path.dirname(os.path.abspath(__file__))+'/../../../../../../share/mesh/'; ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename=path+'liver.vtk'); rootNode.createObject('PythonScriptDataEngine', name='PSDE', filename=""DataEngine.py"", classname=""MyDataEngine"")	 . ```; Example for DataEngine class in Python (01-basic/DataEngine.py):. ```python; class MyDataEngine(Sofa.PythonScriptDataEngine): ; ; def parse(self): ; # this is the correct place to define inputs and outputs! (linking will not work in init() for instance); self.addNewInput('Positions',datatype='p',value='@loader.position') ; self.addNewOutput('NumPoints',datatype='d', value='0') . def init(self):; 	pass. def update(self): ; self.NumPoints = len(self.Positions); ```. What it does NOT provide: A new form of parsing from Python data to Sofa data. It uses the available mechanism that uses string conversion and parsing. Also, the type of the Data has to be declared/selected with a parameter in Python, because there is no logic to automatically derive the type desired by the user (could be future work). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/583:1922,load,loader,1922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/583,1,['load'],['loader']
Performance,"he user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4490:1647,perform,performances,1647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490,1,['perform'],['performances']
Performance,"hi @damienmarchal ,; I've added a small test (loading a binary vtk file with point and cell attributes). Is that enough ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/72#issuecomment-265748799:46,load,loading,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/72#issuecomment-265748799,1,['load'],['loading']
Performance,"hon310\\DLLs', 'C:\\Python310\\lib', 'C:\\Python310', 'C:\\Users\\Manas\\AppData\\Roaming\\Python\\Python310\\site-packages', 'C:\\Python310\\lib\\site-packages', 'C:\\Python310\\lib\\site-packages\\win32', 'C:\\Python310\\lib\\site-packages\\win32\\lib', 'C:\\Python310\\lib\\site-packages\\Pythonwin']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = D:/github-clones/sofa/build/bin;D:/github-clones/sofa/build/plugins;D:/github-clones/sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plug",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5258,Load,Loading,5258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loading']
Performance,hon@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; Numpy found: /usr/local/lib/python2.7/site-packages/numpy/__init__.pyc; ```. When I run it with runSofa (and thus SofaPython):; ```; sofamacbuilder:mac_clang-3.5_default_release sofa$ ./build/bin/runSofa -g batch test.py; [INFO] [runSofa] Loading automatically plugin list in /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:2389,Load,Loaded,2389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['Load'],['Loaded']
Performance,"hon_scene_tests/0; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaPython.so; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/Example.py; [ OK ] Batch/Python_scene_test.sofa_python_scene_tests/0 (2544 ms); [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/1; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:1167,Load,Loaded,1167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,1,['Load'],['Loaded']
Performance,"hread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is executed.; - DDGNode should never be copied to ensure thread safe. Add private copy constructor that gives compilation error to ensure that.; - Compilation fixes for compatibility with boost 1_55. Corrected also the copyright notice.; - Fix execution freeze bug due to simultaneous and reciprocal task stealing between 2 threads (WorkerThread).; - Fix data race at startup, WorkerThread:mTaskScheduler was set by the main thread while being read by ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:2942,load,loader,2942,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,2,['load'],['loader']
Performance,hs = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/runSofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/qt; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:1667,Load,Loaded,1667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:6407,Load,Loaded,6407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:6270,Load,Loaded,6270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11342,Load,Loaded,11342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,html) |; | [cppcoreguidelines-owning-memory](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extra/clang-tidy/checks/performance-faster-string-find.html) |; | [cppcoreguidelines-pro-bounds-array-to-pointer-decay](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](https://clang.llvm.org/extra/clang-tidy/checks/performance-for-range-copy.html) |; | [cppcoreguidelines-pro-bounds-constant-array-index](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tid,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:22338,perform,performance-inefficient-algorithm,22338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-inefficient-algorithm']
Performance,https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-u,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:23502,perform,performance-move-constructor-init,23502,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-move-constructor-init']
Performance,"https://github.com/sofa-framework/sofa/issues/1527. based on; - #2679 . Deprecates SofaOpenglVisual; Deprecates partially SofaGeneralEngine. This PR creates an independent plugin, with all the OpenGL-related components + API (previous Sofa.GL module in SofaKernel).; So it comes with the Sofa.GL library (API, utilities, etc) and 3 loadable module:; - ~~Model~~ **Rendering3D**: components drawing stuff in the 3D world; - ~~OnScreen~~ **Rendering2D**: utility components to draw stuff on screen, usual debugging or informations; - ~~Rendering~~ **Shader** : components involves with shadering; - **Engine**: engine doing stuff with OpenGL (only one for now). As it (should?) be considered as a plugin, it put it in applications/plugins but this is a matter of discussion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2709:332,load,loadable,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2709,1,['load'],['loadable']
Performance,"i use sofa 22.12 by vs2022; cmake 3.27.2; Selecting Windows SDK version 10.0.20348.0 to target Windows 10.0.19045.; just use option SOFACUDA_THRUST in plugin_sofacuda; and; i use rtx 4060, nvidia driver 546.12, cuda 11.8, cudnn 8.9.6. I successfully compiled plugin_sofacuda, ran liver-CUDA.scn using runsofa, and I noticed that only the GPU0(Intel(R) UHD Graphics) were used in the performance probe instead of the GPU1(GeForce RTX 4060 Laptop GPU) (just 0%!). how to use 4060 to Accelerating my sofa simulation？",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4423:383,perform,performance,383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4423,1,['perform'],['performance']
Performance,i/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3155,Load,Loaded,3155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"i/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: JointSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid2d,Vec2d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: RigidRigidMapping<Rigid3d,Rigid3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PolynomialRestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceFiel",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:9876,Load,Loaded,9876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,ibSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10449,Load,Loaded,10449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,ibSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingsha,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3768,Load,Loaded,3768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"ic symbol lookup. So in order to make a plugin auto-loadable, you need to recompile the plugin which design wise is not so great. ; - It also has the major downside of having to load the library to know if the plugin is auto-loadable, which in the end results in having to load all the available plugins. Loading a library in the process memory will have several side effects which are difficult to anticipate before hand. The major one is the evaluation of all the global variables, which will result in populating the `ObjectFactory` with all the components that this library contains. I would suggest something different for this kind of having a list of default plugins that are loaded directly with your application ( here `runSofa` ). - derive a sort of sofa plugin manifest file, which can be generated as a post-build step. This should be an easy to parse file which could contain the various informations exposed by the `getModuleName()`, `getModuleVersion()`... without having to load the library in the process memory. This manifest file must be stored in an easy to find location in your build tree, an be installed properly ( they need also to be bundled when you deploy your application ). That means they should be located with a similar relative path with respect to the application ( `runSofa` ) when in the build tree or in the install tree. There should be a proposal about that to define : ; - the manifest file type ( ie how are we going to parse it ? json xml text ? ); - the manifest file content itself. - any application could then define the list of predefined plugin it wants to load using a simple configuration file. A default configuration can be provided, but it could be easily overriden. With this mechanism, no recompilation is required when you want to change the list of default plugins, you just change the config file. NB : a bit unrelated but there is a small code ""snippet"" that can be used to recover all the components attached to a library in two lines ; ``",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188:1066,load,load,1066,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188,1,['load'],['load']
Performance,"ild/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9325,Load,Loaded,9325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,ild/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gf,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6792,Load,Loaded,6792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,ilds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Compone,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:2225,Load,Loaded,2225,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,ile skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit te,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3087,load,loaded,3087,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,iles.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3009,Load,Loaded,3009,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"import Sofa; import SofaRuntime; from Sofa import SofaDeformable; from numpy import array; from matplotlib.colors import Normalize; from matplotlib.pyplot import get_cmap. class AnimationStepController(Sofa.Core.Controller):; def __init__(self, node, *args, **kwargs):; Sofa.Core.Controller.__init__(self, *args, **kwargs); self.forceMagnitude = 0; self.createGraph(node); self.root = node. def createGraph(self, rootNode):; rootNode.addObject('DefaultAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('VisualStyle', name=""visualStyle"", displayFlags=""showBehaviorModels showForceFields""); ; self.static = rootNode.addChild('StaticBeam', activated=True); self.static.addObject('MeshGmshLoader', name='loader', filename='circle.msh'); self.static.addObject('MeshTopology', name='TriangleTopo', src='@loader'); self.static.addObject('EdgeSetGeometryAlgorithms', name='TriangleTopo', src='@loader'); self.MO_static = self.static.addObject('MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.static.addObject('StaticSolver', name='ODE', newton_iterations=""10"", printLog=True); self.static.addObject('SparseLDLSolver', name='LDL', template=""CompressedRowSparseMatrixMat3x3d""); # self.static.addObject('CGLinearSolver', name='linear solver', iterations=200, tolerance=1e-08, threshold=1e-08); self.static.addObject('TriangularFEMForceFieldOptim', youngModulus='200', poissonRatio='0.3'); self.static.addObject('BoxROI', name='ROI', box='-0.2 -0.2 -0.2 0.2 0.2 0.2'); self.static.addObject('FixedConstraint', indices='118 119'); self.static.addObject('BoxROI', name='ROI2', box='0.9 -0.2 -0.1 1.1 0.2 0.1'); self.CFF_static = self.static.addObject('ConstantForceField', indices=""@ROI2.indices"", force=""0 0 0"", showArrowSize=0.05). self.dynamic = rootNode.addChild('DynamicBeam', activated=True); self.dynamic.addObject('MeshGmshLoader', name='loader', filename='circle.msh'); self.dynamic.addObject('MeshTopology', name='TriangleTopo', src='@loader'); se",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4051:1161,load,loader,1161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4051,1,['load'],['loader']
Performance,"in loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**; Since me and @vmagno used this PR extensively during the past 2 months for our simulations, we added a couple of python bindings useful to us. I think this wraps up a lot of things, let me know what you guys think. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:5625,load,loadPlugin,5625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,6,['load'],"['load', 'loadPlugin', 'loaded', 'loading']"
Performance,"in not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Comp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2547,load,load,2547,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"in not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4792,load,load,4792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"in order to be informed when a scene is loaded. WARNING: each SceneLoader's loading function must call ""notifyLoadingScene"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/204:40,load,loaded,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/204,2,['load'],"['loaded', 'loading']"
Performance,in/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaco,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6502,Load,Loaded,6502,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,in: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:3186,Load,Loaded,3186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,inManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.E,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6479,Load,Loaded,6479,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"ine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9981,Load,Loaded,9981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"ing3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 147, in reset; self._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scene",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5349,load,load,5349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"ins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4843,load,loaded,4843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['loaded']
Performance,"ins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias];",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1660,Load,Loaded,1660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Load'],['Loaded']
Performance,"instance a quick test using compiler explorer: https://godbolt.org/z/6ObfHR.; 2. one usage requiring ExecParams to have a thread-local storage was to be able to do asynchronous loops (mainly simulation and rendering) with full access to the scene graph without copies, by using copy-on-write for large Data and having each thread be assigned a ""version"" (called ""aspect"" per the published work that was used). See the MultithreadGUI for an example of this mechanism.; 3. As far as I know, all asynchronous/external rendering engines integrations that are used with Sofa relied instead on a design where the Sofa scene graph is not exposed but only visual meshes (based on SofaPhysicsAPI), therefore this feature was never enabled/tested in real applications so it can make sense to remove it.; 4. It would be interesting to measure if there are any performance gained from just removing the TLS qualifier (as done in PR #1129). I expect it to not be measurable, but performances can be surprising, which is why any optimization efforts should measure before and after ;); 5. If the TLS part of ExecParams is removed, then you should also remove everything that depends on it: MultithreadGUI, ExecParams::threadID, aspectID, AspectPool, *AspectVisitor, DDGNode::currentAspect()/copyAspect()/..., and all the aspect-related features in Data and Link. Otherwise all these code will be silently broken by the change.; 6. Note that this also makes ExecParams itself a bit pointless. The initial rational was that this provides a thread-safe way to set parameters controlling all codes in such a way that even if it is not explicitly passed in to all API calls, it can be queried with ExecParams::defaultInstance(), with the guarantee that this will always provide exactly the correct values (as there is a single copy per thread). For instance, this could allow to change the ExecMode in order to trace/profile a specific part of the computation. Without TLS, all calls done in parallel in other threads wo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748:1282,perform,performances,1282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748,2,"['optimiz', 'perform']","['optimization', 'performances']"
Performance,"int.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""So",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3188,load,load,3188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"ion::graph::DAGNode>::New<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const; &>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&) SPtr.h:57 ; #9 0x10fa5fb10 in sofa::simulation::graph::DAGSimulation::createNewNode(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) DAGSimulati; on.cpp:78; #10 0x13a45aa79 in sofa::simulation::Node::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) Node.cpp:972 ; #11 0x14a8a7f43 in sofa::simulation::SceneLoaderPY::loadSceneWithArguments(char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allo; cator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, boost::intrusive_ptr<sofa::simulation::Node>*) S; ceneLoaderPY.cpp:128; #12 0x14a8a6287 in sofa::simulation::SceneLoaderPY::load(char const*) SceneLoaderPY.cpp:88; #13 0x13a76cdee in sofa::simulation::Simulation::load(char const*) Simulation.cpp:472; #14 0x10f83fc80 in main Main.cpp:388; #15 0x7fffa5650234 in start (libdyld.dylib:x86_64+0x5234). 0x00013d5e5ee3 is located 0 bytes to the right of global variable '<string literal>' defined in '/Users/krasin/src/github.com/sofa-framework/sofa/src/SofaKernel/framework/sofa/core/; objectmodel/Context.cpp:37:37' (0x13d5e5ee0) of size 3; '<string literal>' is ascii string 'dt'; SUMMARY: AddressSanitizer: global-buffer-overflow Base.cpp:128 in sofa::core::objectmodel::Base::initData0(sofa::core::objectmodel::BaseData*, sofa::core::objectmodel::BaseData::BaseInitData&, char const*, char const*, unsigned int); ```. The code to blame (as pointed in the first message) is Base.cpp:128:. ```; uint32_t prefix = *(uint32_t*)name;. if (prefix == draw_prefix || prefix == show_prefix); res.group = ""Visualization"";; ```. I propose to fix it in a simple, though, no",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566:2988,load,load,2988,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566,1,['load'],['load']
Performance,"is is not possible at the moment, please correct me if I am wrong and explain me your solution. My first work around was to load from the same file (I call it outputJson, see the function definition below). However, this becomes cumbersome, when the code is parallelized, since several threads would like to load from that same file. My approach for the parallelization is to write the filename (which is now adapted to every scene) first into the .scn using PHP and then to load it from the python scene. ; That means, in the .scn file we have:; `<?php echo '<PythonScriptController classname=""convergenceBeam_Template"" filename=""convergenceBeam_TemplatePython.py"" listening=""1"" name=""convergenceBeam_Template"" variables=""'.$argv[1].'"" />'; ?>`; which called from the convergence python script and deleted later; ```; os.system(""php convergenceBeam_TemplatePython.scn ""+sofaOutput+"".pyscndata > ""+curTime+"".scn""); ... call the scene; os.system(""rm ""+curTime+"".scn""); ```; In the .py file we load the data using; `self.defineDataFromJson(self.findData(""variables"").value[0][0])`; where; ```; def defineDataFromJson(self,jsonFilename=""outputJson"") :; f = open(jsonFilename,'r'); self.data = json.load(f); f.close(); def getValueOfData(self,keyOfData) :; if keyOfData in self.data.keys():; return self.data[keyOfData]; printStack(); sys.exit(""\nERROR\n the key ""+keyOfData+"" is not defined!\nERROR\n""); ```. Both of the solutions I consider as hacks, the first as it can not run in parallel and the second as the scene does not work without running php on the side, thus it does not work with one command line. Potential (final?) solutions would be:; - a command line argument or command line argument**s** for python scenes; - a command line argument that can be used in all scenes, such as -d for data, which could be followed by strings; - php scenes (file ending .pscn) that work and could prevent calling php on the side (i.e. my second solution works without a script on the side). I am grateful ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356:1268,load,load,1268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356,1,['load'],['load']
Performance,"is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in node 'joint'; [ERROR] [SofaPython] Object type UniformCompliance<Vec1d> creation failed; [FATAL] [SofaPython] SP_CALL_MODULEFUNC; Traceback (most recent call last):; File ""LambdaPropagation.py"", line 90, in createScene; joint = StructuralAPI.FixedRigidJoint( ""joint"", ground.node, rigid.node ); File ""/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python/Compliant/StructuralAPI.py"", line 634, in __init__; self.compliance = self.node.createObject('UniformCompliance', name='compliance', compliance=compliance); TypeError: bad argument type for built-in operation; Build timed out (after 30 minutes). Marking the build as aborted.; Build was aborted; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; Recording test results. ########## SIG 15 - SIGTERM: a termination request was sent to the program ##########; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaHelper.so.17.dev.0(sofa::helper::BackTrace::dump()+0x23) [0x7f6585f9be63]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaHelper.so.17.dev.0(sofa::helper::BackTrace::sig(int)+0x14a) [0x7f6585f9c15a]; -> /lib/x86_64-linux-gnu/libc.so.6(+0x36cb0) [0x7f6585049cb0]; -> /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0x5b6b1) [0x7f658594f6b1]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulationCore.so(sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*)+0xec) [0x7f65882c897c]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulati",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:2971,perform,perform,2971,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,2,['perform'],['perform']
Performance,"ised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; Check if compiler accepts -pthread; Check if compiler accepts -pthread - yes; Found Threads: TRUE ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.so (found version ""1.2.11"") ; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; A",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:1956,Perform,Performing,1956,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,2,['Perform'],['Performing']
Performance,ission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:1940,Load,Loaded,1940,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"issofa_multithreading is a few commits behind our public integrated branch. ; Almost all the commits are directly related to the `Multithreading` plugin, see https://github.com/InSimo/sofa/commits/issofa_integration_2017/applications/plugins/MultiThreading. There is also one particular fix related to the concurrent call to `DDGNode::update` method ; https://github.com/InSimo/sofa/commit/2e8d6f33b597ff6dbd568c67dfac7715850f8015",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-292126228:306,concurren,concurrent,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-292126228,1,['concurren'],['concurrent']
Performance,ist.Unterminated.html) | [objc-avoid-nserror-init](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-nserror-init.html) |; | [cppcoreguidelines-c-copy-assignment-signature](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-c-copy-assignment-signature.html) | [objc-avoid-spinlock](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-spinlock.html) |; | [cppcoreguidelines-interfaces-global-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-interfaces-global-init.html) | [objc-forbidden-subclassing](https://clang.llvm.org/extra/clang-tidy/checks/objc-forbidden-subclassing.html) |; | [cppcoreguidelines-no-malloc](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-no-malloc.html) | [objc-property-declaration](https://clang.llvm.org/extra/clang-tidy/checks/objc-property-declaration.html) |; | [cppcoreguidelines-owning-memory](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extra/clang-tidy/checks/performance-faster-string-find.html) |; | [cppcoreguidelines-pro-bounds-array-to-pointer-decay](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](https://clang.llvm.org/extra/clang-tidy/checks/performance-for-range-copy.html) |; | [cppcoreguidelines-pro-bounds-constant-array-index](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:21491,perform,performance-faster-string-find,21491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-faster-string-find']
Performance,"istered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringFor",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:32066,Load,Loaded,32066,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"iteration strategy altogether, for instance by using:; ; ``` c++; virtual void Base::getDataFields(VecData& out) const = 0;; ```; ; ...to leave allocation to the caller. Grepping `getDataFields` on the whole SOFA codebase yields around 10 hits (python bindings, generateDoc, GUI and modeler, solver merger) so it should be manageable.; 2. Provide a protected `BaseData` constructor that does not initialize links/owner datas. Obviously we do not want to silently break existing code, so this behavior should be opt-in, for instance using a tag class:; ; ``` c++; class BaseData {; public:; struct no_init {};; ; protected:; BaseData(no_init) : // ...; };; ```; ; This one should be easy.; 3. Add a public `Data` constructor that only initializes value, something like:; ; ``` c++; template<class T>; class Data {; public: ; Data(BaseData::no_init, const T& value = T() ) : // ...; };; ```; ; Again, easy.; 4. Provide component constructors that do not initialize their `Data` so that optimized components can be derived:; ; ``` c++; Base::Base(BaseData::no_init) : name(BaseData::no_init), //...; BaseObject::BaseObject(BaseData::no_init) : f_listening(BaseData::no_init), //... ; ; // ... BaseMapping, Mapping, etc.; ```; ; this one is tedious but not that hard. Now if all of this can be done, a derived component class will be able to manage its data on a per-class basis, and only initialize data lazily when they are actually needed (i.e. when `findData` or `getDataFields` are called). Adding/removing data would be no-ops or errors in these derived classes. ## Performance. Changing the iteration strategy incurs an extra copy of the existing `DataVec` when accessing data, but since we are likely to iterate the vector anyways there should be no visible change in; complexity. Careful allocation on the caller side should also be able to avoid most allocations during vector copy. Finally, data iteration does not seems to happen during computationally intensive sections. Should this remain a",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923:1761,optimiz,optimized,1761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923,1,['optimiz'],['optimized']
Performance,"ithms', name='TriangleTopo', src='@loader'); self.MO_static = self.static.addObject('MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.static.addObject('StaticSolver', name='ODE', newton_iterations=""10"", printLog=True); self.static.addObject('SparseLDLSolver', name='LDL', template=""CompressedRowSparseMatrixMat3x3d""); # self.static.addObject('CGLinearSolver', name='linear solver', iterations=200, tolerance=1e-08, threshold=1e-08); self.static.addObject('TriangularFEMForceFieldOptim', youngModulus='200', poissonRatio='0.3'); self.static.addObject('BoxROI', name='ROI', box='-0.2 -0.2 -0.2 0.2 0.2 0.2'); self.static.addObject('FixedConstraint', indices='118 119'); self.static.addObject('BoxROI', name='ROI2', box='0.9 -0.2 -0.1 1.1 0.2 0.1'); self.CFF_static = self.static.addObject('ConstantForceField', indices=""@ROI2.indices"", force=""0 0 0"", showArrowSize=0.05). self.dynamic = rootNode.addChild('DynamicBeam', activated=True); self.dynamic.addObject('MeshGmshLoader', name='loader', filename='circle.msh'); self.dynamic.addObject('MeshTopology', name='TriangleTopo', src='@loader'); self.MO_dynamic = self.dynamic.addObject('MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.dynamic.addObject('UniformMass', name='mass', totalMass = 0.000001); self.dynamic.addObject('EulerImplicitSolver', name='ODE'); self.dynamic.addObject('SparseLDLSolver', name='LDL', template=""CompressedRowSparseMatrixMat3x3d""); self.dynamic.addObject('TriangularFEMForceFieldOptim', youngModulus='200', poissonRatio='0.3' ); self.dynamic.addObject('BoxROI', name='ROI', box='-0.2 -0.2 -0.2 0.2 0.2 0.2'); self.dynamic.addObject('FixedConstraint', indices='@ROI.indices'); self.dynamic.addObject('BoxROI', name='ROI2', box='0.9 -0.2 -0.1 1.1 0.2 0.1'); self.CFF_dynamic = self.dynamic.addObject('ConstantForceField', indices=""@ROI2.indices"", force=""0 0 0"", showArrowSize=0.05). def onAnimateBeginEvent(self, event):; if (abs(self.forceMagnitude) < 3.5) :; self.forceMagnitude",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4051:2024,load,loader,2024,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4051,1,['load'],['loader']
Performance,"its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4947,load,loadPlugin,4947,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['loadPlugin']
Performance,ix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/l,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8847,Load,Loaded,8847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,ix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [P,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:5829,Load,Loaded,5829,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"k on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:2146,race condition,race conditions,2146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,1,['race condition'],['race conditions']
Performance,"k to the scene's node that will be processed by the loop"",; ""name"": ""targetNode""; }; ]; },; ""target"": """"; }; },; ""description"": ""foo\n""; }; ]; ```. and the templated object:. ```; [; {; ""className"": ""DummyComponent"",; ""creator"": {; ""Vec3f"": {; ""class"": {; ""categories"": [; ""_Miscellaneous""; ],; ""className"": ""DummyComponent"",; ""namespaceName"": ""sofa"",; ""parents"": [; ""BaseObject""; ],; ""shortName"": ""dummyComponent"",; ""templateName"": ""Vec3f"",; ""typeName"": ""DummyComponent\u003CStdVectorTypes\u003CVec\u003C3,float\u003E,Vec\u003C3,float\u003E,float\u003E\u003E""; },; ""object"": {; ""data"": [; {; ""defaultValue"": ""unnamed"",; ""group"": """",; ""help"": ""object name"",; ""name"": ""name"",; ""type"": ""string""; },; {; ""defaultValue"": ""0"",; ""group"": """",; ""help"": ""if true, emits extra messages at runtime."",; ""name"": ""printLog"",; ""type"": ""bool""; },; {; ""defaultValue"": """",; ""group"": """",; ""help"": ""list of the subsets the objet belongs to"",; ""name"": ""tags"",; ""type"": ""TagSet""; },; {; ""defaultValue"": """",; ""group"": """",; ""help"": ""this object bounding box"",; ""name"": ""bbox"",; ""type"": ""BoundingBox""; },; {; ""defaultValue"": ""Undefined"",; ""group"": """",; ""help"": ""The state of the component among (Dirty, Valid, Undefined, Loading, Invalid)."",; ""name"": ""componentState"",; ""type"": ""ComponentState""; },; {; ""defaultValue"": ""0"",; ""group"": """",; ""help"": ""if true, handle the events, otherwise ignore the events"",; ""name"": ""listening"",; ""type"": ""bool""; }; ],; ""link"": [; {; ""help"": ""Graph Node containing this object (or BaseContext::getDefault() if no graph is used)"",; ""name"": ""context""; },; {; ""help"": ""Sub-objects used internally by this object"",; ""name"": ""slaves""; },; {; ""help"": ""nullptr for regular objects, or master object for which this object is one sub-objects"",; ""name"": ""master""; }; ]; },; ""target"": """"; }; },; ""description"": ""foo\n""; }; ]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4775:2708,Load,Loading,2708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4775,1,['Load'],['Loading']
Performance,k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded pl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7284,Load,Loaded,7284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"k_policy)2>::_M_release (this=0x5555567f2300); at /usr/include/c++/13/bits/shared_ptr_base.h:346; #21 0x00005555555cb9f5 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x5555566c0330, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/shared_ptr_base.h:1071; #22 0x00007fffeaeb0346 in std::__shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x5555566c0328, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/shared_ptr_base.h:1524; #23 0x00007fffeaeb03ce in std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >::~shared_ptr (this=0x5555566c0328, __in_chrg=<optimized out>); at /usr/include/c++/13/bits/shared_ptr.h:175; #24 0x00007fffeaf9492a in std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > >::~pair (; this=0x5555566c0320, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_pair.h:187; #25 0x00007fffeaf63fa2 in std::__new_allocator<std::_Rb_tree_node<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > > >::destroy<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > > (; __p=0x5555566c0320, this=0x7fffffffabc8) at /usr/include/c++/13/bits/new_allocator.h:194; #26 std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > > > >::destroy<std::pair<sofa::core::beha",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:17363,optimiz,optimized,17363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,kspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaAllCommonComponents.dylib; Using python: /usr/local/opt/python@2/bin/python2.7; **** sys.path ****. /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python; /usr/local/lib/python2.7/site-packages; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python27.zip; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7; /usr/local/Cellar/python@2/2.7.15_1/Fra,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:3409,Load,Loaded,3409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['Load'],['Loaded']
Performance,"l-library/. Although it does not tell what version of CGAL to use, or boost as well. Finally, I have been successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module co",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1253,Load,Loaded,1253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Load'],['Loaded']
Performance,l.html) | [modernize-deprecated-headers](https://clang.llvm.org/extra/clang-tidy/checks/modernize-deprecated-headers.html) |; | [clang-analyzer-nullability.NullableReturnedFromNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullableReturnedFromNonnull.html) | [modernize-loop-convert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-loop-convert.html) |; | [clang-analyzer-optin.cplusplus.VirtualCall](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.cplusplus.VirtualCall.html) | [modernize-make-shared](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-ti,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:15349,perform,performance,15349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance']
Performance,lang.llvm.org/extra/clang-tidy/checks/objc-forbidden-subclassing.html) |; | [cppcoreguidelines-no-malloc](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-no-malloc.html) | [objc-property-declaration](https://clang.llvm.org/extra/clang-tidy/checks/objc-property-declaration.html) |; | [cppcoreguidelines-owning-memory](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extra/clang-tidy/checks/performance-faster-string-find.html) |; | [cppcoreguidelines-pro-bounds-array-to-pointer-decay](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](https://clang.llvm.org/extra/clang-tidy/checks/performance-for-range-copy.html) |; | [cppcoreguidelines-pro-bounds-constant-array-index](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](ht,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:22045,perform,performance-implicit-conversion-in-loop,22045,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-implicit-conversion-in-loop']
Performance,"ld/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9114,Load,Loaded,9114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"le_out.obj"", ""mesh/bubille_in1.obj"", ""mesh/bubille_in2.obj""],; nbVirtualFinerLevels=3,; finestConnectivity=False,; stiffnessCoefs=[1, 0.0001, 50],; massCoefs=[1, 1, 1],; ); composite_node.addObject(""EulerImplicitSolver"", vdamping=0, rayleighMass=0, rayleighStiffness=0); composite_node.addObject(""SparseLDLSolver""); composite_node.addObject(""MechanicalObject""); composite_node.addObject(; ""HexahedronCompositeFEMForceFieldAndMass"",; drawType=""0"",; lumpedMass=False,; nbVirtualFinerLevels=2,; youngModulus=600,; poissonRatio=0.3,; method=""polar"",; density=0.1,; updateStiffnessMatrix=False,; printLog=False,; ); composite_node.addObject(""BoxROI"", box=""-5 -2.1 -10 10 -1.9 10""); composite_node.addObject(""FixedConstraint"", indices=""@BoxROI.indices""); composite_node.addObject(""LinearSolverConstraintCorrection""). collision_node = composite_node.addChild(""collision""). collision_node.addObject(""MeshOBJLoader"", name=""loader"", filename=""mesh/bubille_out.obj""); collision_node.addObject(""MeshTopology"", src=""@loader""); collision_node.addObject(""MechanicalObject"", src=""@loader""); collision_node.addObject(""HexahedronCompositeFEMMapping""); # collision_node.addObject(""TriangleCollisionModel"", group=0); collision_node.addObject(""SphereCollisionModel"", group=0, radius=0.3). visual_node = collision_node.addChild(""visual""); visual_node.addObject(""MeshOBJLoader"", name=""meshLoader_2"", filename=""mesh/bubille_out.obj"", handleSeams=True); visual_node.addObject(""OglModel"", name=""VisualBody"", src=""@meshLoader_2"", normals=""0"", color=[0.1, 0.8, 0.3, 0.6]); visual_node.addObject(""IdentityMapping"", input=""@.."", output=""@VisualBody""). soft_bead_node = composite_node.addChild(""soft bead""); soft_bead_node.addObject(""MeshOBJLoader"", name=""meshLoader_1"", filename=""mesh/bubille_in1.obj"", handleSeams=True); soft_bead_node.addObject(""OglModel"", name=""VisualBody1"", src=""@meshLoader_1"", normals=""0"", color=[1, 0, 0, 1]); soft_bead_node.addObject(""HexahedronCompositeFEMMapping"", input=""@.."", output=""@VisualBody1""). st",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:5337,load,loader,5337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['load'],['loader']
Performance,"lename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/7425743/CMakeCache.txt)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:7278,load,load,7278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['load'],['load']
Performance,les\Components\linearsolver\preconditioner\FEMBAR_PCG_AsyncSparseLDLSolver.scn; examples\Components\loader\GIDMeshLoader.scn; examples\Components\solver\EulerExplicitSolver\EulerExplicitSolver.scn; examples\Components\solver\EulerExplicitSolver\EulerSymplecticSolver.scn; examples\Components\solver\NewmarkImplicitSolver.scn. [INFO] [PluginFinder] Found 9 files with deprecated:; examples\Components\interactionforcefield\BoxStiffSpringForceField.scn; examples\Components\linearsolver\FEMBAR_AsyncSparseLDLSolver.scn; examples\Components\misc\sleep\test_sleep.scn; examples\Components\misc\sleep\test_sleep2.scn; examples\Components\misc\sleep\test_sleep3.scn; examples\Components\visualmodel\OglLabel.scn; examples\Tutorials\Mappings\TutorialMappingOctopusArticulated.scn; examples\Tutorials\StepByStep\Visual\5_Visual.scn; examples\Tutorials\StepByStep\Visual\6_Visual.scn. [INFO] [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPointConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularBendingSprings_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularFEMForceField_Removing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:1212,Perform,Performance,1212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['Perform'],['Performance']
Performance,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificatio,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:2093,Load,Loaded,2093,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; So,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:2340,Load,Loaded,2340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:2463,Load,Loaded,2463,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,"liaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/runSofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [Plug",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2014,load,loader,2014,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['load'],['loader']
Performance,"lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [E",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2742,load,load,2742,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['load'],['load']
Performance,"libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:12374,load,load,12374,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Load', 'load']","['Loading', 'load']"
Performance,"ll/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFactory] Class already registered: DevTensionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Vec3d>; [WARNING] [ObjectFactory] Class already registered: EvalSurfaceDistance<Vec3d>; [WARNING] [ObjectFactory] Default template for class ExtraMonitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:31752,Load,Loaded,31752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"llision. The output is pairs of objects to be further investigated in the narrow phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2030:1079,perform,performances,1079,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030,1,['perform'],['performances']
Performance,"loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData (2 ms); [ RUN ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected; ----------------------------------------------------------------------; Ran 1 test in 0.001s. OK; [ OK ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected (1 ms); [ RUN ] SofaPython3/Sofa.all_tests/2_Sofa_Core_Base_test_addNewDataFromParent; =================",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:4077,load,loaded,4077,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,"loader/MeshLoader.cpp; +++ b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; @@ -72,6 +72,7 @@ MeshLoader::MeshLoader() : BaseLoader(); , d_rotation(initData(&d_rotation, Vec3(), ""rotation"", ""Rotation of the DOFs"")); , d_scale(initData(&d_scale, Vec3(1.0, 1.0, 1.0), ""scale3d"", ""Scale of the DOFs in 3 dimensions"")); , d_transformation(initData(&d_transformation, type::Matrix4::s_identity, ""transformation"", ""4x4 Homogeneous matrix to transform the DOFs (when present replace any)"")); + , d_dataset1(initData(&d_dataset1, ""dataset1"", ""Data from dataset"")); , d_previousTransformation(type::Matrix4::s_identity ); {; addAlias(&d_tetrahedra, ""tetras"");; @@ -184,6 +185,8 @@ void MeshLoader::clearBuffers(); getWriteOnlyAccessor(d_pyramidsGroups).clear();; getWriteOnlyAccessor(d_polygonsGroups).clear();; ; + getWriteOnlyAccessor(d_dataset1).clear();; +; doClearBuffers();; }; ; diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; index d972c27d75..5fc1d75345 100644; --- a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; +++ b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; @@ -183,6 +183,7 @@ public:; Data< Vec3 > d_scale; ///< Scale of the DOFs in 3 dimensions; Data< type::Matrix4 > d_transformation; ///< 4x4 Homogeneous matrix to transform the DOFs (when present replace any); ; + Data< type::vector< SReal > > d_dataset1; ///< mesh dataset; ; virtual void updateMesh();; virtual void updateElements();; diff --git a/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp b/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; index fcf73fb5f2..241067ea0b 100644; --- a/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; +++ b/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; @@ -504,6 +504,27 @@ bool MeshVTKLoader::setInputsMesh(); }; ; }; +; + // hack to fill dataset1; + static bool notread = true;; + if (n",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:3677,load,loader,3677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['load'],['loader']
Performance,"locator_traits<std::allocator<void> >::destroy<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > (__p=0x5555567f2310); at /usr/include/c++/13/bits/alloc_traits.h:674; #19 std::_Sp_counted_ptr_inplace<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x5555567f2300); at /usr/include/c++/13/bits/shared_ptr_base.h:613; #20 0x00005555555c9ad5 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x5555567f2300); at /usr/include/c++/13/bits/shared_ptr_base.h:346; #21 0x00005555555cb9f5 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x5555566c0330, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/shared_ptr_base.h:1071; #22 0x00007fffeaeb0346 in std::__shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x5555566c0328, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/shared_ptr_base.h:1524; #23 0x00007fffeaeb03ce in std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >::~shared_ptr (this=0x5555566c0328, __in_chrg=<optimized out>); at /usr/include/c++/13/bits/shared_ptr.h:175; #24 0x00007fffeaf9492a in std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > >::~pair (; this=0x5555566c0320, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_pair.h:187; #25 0x00007fffeaf63fa2 in std::__new_allocator<std::_Rb_tree_node<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > > >::destroy<st",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:16780,optimiz,optimized,16780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,lp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-s,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8295,Load,Loaded,8295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"lugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""Articulat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2722,load,load,2722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,lugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4880,Load,Loaded,4880,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,lugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEx,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7805,Load,Loaded,7805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"lugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8415,Load,Loaded,8415,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,luginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:2906,Load,Loaded,2906,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,lvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-params-in-decls](https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html) |; | [fuchsia-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-default-arguments.html) | [readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/readability-braces-around-statements.html) |; | [fuchsia-overloaded-operator](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-overloaded-operator.html) | [readability-container-size-empty](https://clang.llvm.org/extra/clang-tid,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:24327,perform,performance-unnecessary-copy-initialization,24327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-unnecessary-copy-initialization']
Performance,"me/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [Requ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:1963,load,load,1963,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['load'],['load']
Performance,"mmand in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and a",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:3533,load,load,3533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['load']
Performance,"modules/SofaGeneralLoader/src/SofaGeneralLoader/MeshGmshLoader.cpp line 219. Code:; // --- Loading Elements ---; file >> cmd;; if (cmd.length() < 4 || cmd.substr(0, 4) != ""$ELM"") // can be ""$ELM"" or ""$ELM\r""; {; if (cmd.length() < 9 || cmd.substr(0, 4) != ""$Elements"") // can be ""$ELM"" or ""$ELM\r"" // <-- should be 9",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2576:91,Load,Loading,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2576,1,['Load'],['Loading']
Performance,"mples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: JointSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid2d,Vec2d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: RigidRigidMapping<Rigid3d,Rigid3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class a",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:9229,Load,Loading,9229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loading']
Performance,mponent.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1459,Load,Loaded,1459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,mponent.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plu,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4369,Load,Loaded,4369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"mponent.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 147, in reset; self._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 216, in _init_sim; super()._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 230, in _init_sim; self.scene_creation_r",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5533,load,load,5533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,mponent.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/li,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3541,Load,Loaded,3541,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,mponent.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3887,Load,Loaded,3887,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help me！. Thanks so much！",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2838,load,loading,2838,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,2,['load'],"['load', 'loading']"
Performance,"n inside a python script, that's it. A python script could then look like : . ```#!/usr/bin/python2.7; from libSofaPython import Sofa; import argparse. # Parse the arguments; parser = argparse.ArgumentParser(); parser.add_argument(""-n"", ""--number_of_steps"", type=int, help=""Number of steps until the final forces are reach"", default=10); o = parser.parse_args(). sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim); root = Sofa.createNode(""root""). # ...; # some code that creates the scene tree; # ... root.init(). for i in range(number_of_steps):; root.simulationStep(dt); updateConvergencePlot(root). analysis = complexCalculsOnMatrices(root); saveResults(root, analysis); ```. You could even make your own runSofa.py that launches the runSofa GUI (a more complete python runSofa script can be found in an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""Sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:1808,load,loadScene,1808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['loadScene']
Performance,"n not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not crea",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4655,load,load,4655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,n successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the gl,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1356,Load,Loaded,1356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Load'],['Loaded']
Performance,"n the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4009,load,loaded,4009,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['loaded']
Performance,n/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPlugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8323,Load,Loaded,8323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"n2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; [ERROR] [PythonScript] ImportError:; Importing the multiarray numpy extension module failed. Most; likely you are trying to import a failed build of numpy.; If you're working with a numpy git repo, try `git clean -xdf` (removes all; files not under version control). Otherwise reinstall numpy. Original error was: cannot import name multiarray. File ""test.py"", line 20, in <module>; import numpy; File ""/usr/local/lib/python2.7/site-packages/numpy/__init__.py"", line 142, in <module>; from . import add_newdocs; File ""/usr/local/lib/python2.7/site-packages/numpy/add_newdocs.py"", line 13, in <module>; from numpy.lib import add_newdoc; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/__init__.py"", line 8, in <module>; from .type_check import *; File ""/usr/local/lib/python2.7/site-packages/numpy/lib/type_check.py"", line 11, in <module>; import numpy.core.numeric as _nx; File ""/usr/local/lib/python2.7/site-packages/numpy/core/__init__.py"", line 26, in <module>; raise ImportError(msg). [ERROR] [SofaPython] Script (file:test) import error; [ERROR] [SofaPython] scene script load error.; [INFO] [BatchGUI] Computing 1000 iterations. [INFO] [BatchGUI] Processing. [INFO] [BatchGUI] 1000 iterations done in 0.004765 s ( 209864 FPS). [INFO] [BatchGUI] 1000 iterations done in 0.004766 s ( 209820 FPS).; ```. When running it with default python in verbose mode, multiarray appears as follows:; ```; sofamacbuilder:mac_clang-3.5_default_release sofa$ cat test.out | grep multiarray; dlopen(""/usr/local/lib/python2.7/site-packages/numpy/core/multiarray.so"", 2);; import numpy.core.multiarray # dynamically loaded from /usr/local/lib/python2.7/site-packages/numpy/core/multiarray.so; # cleanup[2] numpy.core.multiarray; ```. But `/usr/local/lib/python2.7/site-packages` is in `sys.path` when running with SofaPython so **why does it fail**?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:6349,load,load,6349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,2,['load'],"['load', 'loaded']"
Performance,n6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [Plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:6122,Load,Loaded,6122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,n: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] L,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6975,Load,Loaded,6975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,n: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2804,Load,Loaded,2804,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"n: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning:",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9007,Load,Loaded,9007,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"nManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n p",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8853,Load,Loaded,8853,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,nManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.C,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:9117,Load,Loaded,9117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,nSetting; [WARNING] [ObjectFactory] Class already registered: AttachBodyButtonSetting; [WARNING] [ObjectFactory] Class already registered: FixPickedParticleButtonSetting; [WARNING] [ObjectFactory] Class already registered: Gravity; [WARNING] [ObjectFactory] Class already registered: PauseAnimationOnEvent; [WARNING] [ObjectFactory] Class already registered: SofaDefaultPathSetting; [WARNING] [ObjectFactory] Class already registered: StatsSetting; [WARNING] [ObjectFactory] Class already registered: ViewerSetting; [WARNING] [ObjectFactory] Class already registered: APIVersion; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [WARNING] [ObjectFactory] Class already registered: DirectSAP; [WARNING] [ObjectFactory] Class already registered: DirectSAPNarrowPhase; [WARNING] [ObjectFactory] Class already registered: IncrSAP; [WARNING] [ObjectFactory] Class already registered: RayTraceNarrowPhase; [WARNING] [ObjectFactory] Class already registered: TriangleOctreeModel; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [WARNING] [ObjectFactory] Class already registered: AffineMovementConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: AffineMovementConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ConicalForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Rigid2d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Vec6d>; [WARNING,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:14868,Load,Loaded,14868,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,naconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7795,Load,Loaded,7795,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"nager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:2975,load,loaded,2975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['loaded']
Performance,"nager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9851,Load,Loaded,9851,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"nager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is empty; By default SparseLDLSolver uses blocks with a single double (to handle all cases of simulations).; If you are using only 3D DOFs, you may consider using blocks of Matrix3 to speedup the calculations.; If it is the case, add template=""CompressedRowSparseMatrixMat3x3d"" to this object in your scene; Otherwise, if you want to disable this message, add template=""CompressedRowSparseMatrixd"" .; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneChec",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:34353,Load,Loaded,34353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"nager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9701,Load,Loaded,9701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"nalysis = complexCalculsOnMatrices(root); saveResults(root, analysis); ```. You could even make your own runSofa.py that launches the runSofa GUI (a more complete python runSofa script can be found in an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:2411,load,loading,2411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,['load'],"['loading', 'loads']"
Performance,named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INF,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3240,load,loaded,3240,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,nda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginMan,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7201,Load,Loaded,7201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,ndition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5827,Load,Loaded,5827,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,ndition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:25136,Load,Loaded,25136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"nerate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Load",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9848,Load,Loaded,9848,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"ng to stuff like:. ```; [WARNING] [ObjectFactory] Default template for class DynamicSparseGridGeometryAlgorithms already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:1177,load,load,1177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,1,['load'],['load']
Performance,"ng(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> >&, ; bool); sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedraProcess(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned; int> > const&, bool); sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedra(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> >; const&, bool); sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromTriangleModel(sofa::component::collision::geometry::TriangleCollisionModel<sofa::defaulttype::StdVe; ctorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > const&) const; sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromCollisionModel(sofa::core::CollisionModel*, unsigned int const&) const; sofa::gui::component::performer::RemovePrimitivePerformer<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::execute(); sofa::gui::component::performer::BaseMouseInteractor::updatePosition(double); sofa::simulation::BehaviorUpdatePositionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&,",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:6931,perform,performer,6931,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['perform'],['performer']
Performance,ng.llvm.org/extra/clang-tidy/checks/objc-avoid-nserror-init.html) |; | [cppcoreguidelines-c-copy-assignment-signature](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-c-copy-assignment-signature.html) | [objc-avoid-spinlock](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-spinlock.html) |; | [cppcoreguidelines-interfaces-global-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-interfaces-global-init.html) | [objc-forbidden-subclassing](https://clang.llvm.org/extra/clang-tidy/checks/objc-forbidden-subclassing.html) |; | [cppcoreguidelines-no-malloc](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-no-malloc.html) | [objc-property-declaration](https://clang.llvm.org/extra/clang-tidy/checks/objc-property-declaration.html) |; | [cppcoreguidelines-owning-memory](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extra/clang-tidy/checks/performance-faster-string-find.html) |; | [cppcoreguidelines-pro-bounds-array-to-pointer-decay](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](https://clang.llvm.org/extra/clang-tidy/checks/performance-for-range-copy.html) |; | [cppcoreguidelines-pro-bounds-constant-array-index](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pr,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:21570,perform,performance-faster-string-find,21570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-faster-string-find']
Performance,ngshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8434,Load,Loaded,8434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67n,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8147,Load,Loaded,8147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/stor,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7151,Load,Loaded,7151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"not mention the exact platform and compilers used. Thread Local Storage (TLS) is highly dependent on OS, ABI, compiler, flags. Here is for instance a quick test using compiler explorer: https://godbolt.org/z/6ObfHR.; 2. one usage requiring ExecParams to have a thread-local storage was to be able to do asynchronous loops (mainly simulation and rendering) with full access to the scene graph without copies, by using copy-on-write for large Data and having each thread be assigned a ""version"" (called ""aspect"" per the published work that was used). See the MultithreadGUI for an example of this mechanism.; 3. As far as I know, all asynchronous/external rendering engines integrations that are used with Sofa relied instead on a design where the Sofa scene graph is not exposed but only visual meshes (based on SofaPhysicsAPI), therefore this feature was never enabled/tested in real applications so it can make sense to remove it.; 4. It would be interesting to measure if there are any performance gained from just removing the TLS qualifier (as done in PR #1129). I expect it to not be measurable, but performances can be surprising, which is why any optimization efforts should measure before and after ;); 5. If the TLS part of ExecParams is removed, then you should also remove everything that depends on it: MultithreadGUI, ExecParams::threadID, aspectID, AspectPool, *AspectVisitor, DDGNode::currentAspect()/copyAspect()/..., and all the aspect-related features in Data and Link. Otherwise all these code will be silently broken by the change.; 6. Note that this also makes ExecParams itself a bit pointless. The initial rational was that this provides a thread-safe way to set parameters controlling all codes in such a way that even if it is not explicitly passed in to all API calls, it can be queried with ExecParams::defaultInstance(), with the guarantee that this will always provide exactly the correct values (as there is a single copy per thread). For instance, this could allow to ch",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748:1165,perform,performance,1165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748,1,['perform'],['performance']
Performance,"not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with conte",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:33571,Load,Loaded,33571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"ns are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [E",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1457,load,load,1457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['load'],['load']
Performance,nt.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GU,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:9789,Load,Loaded,9789,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,nt/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/ser,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5127,Load,Loaded,5127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,ntact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Compon,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:9391,Load,Loaded,9391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"nts 😉 . ## issofa_constraintsolving. ### New features; - Add correctionVelocityFactor and correctionPositionFactor Data in UncoupledConstraintCorrection to experiment with modulating the constraint response influence on visual tool positions.; - Add more detail in timing of GenericConstraintSolver. ### Improvements; - Constraint problem locking extended to be safer (but not yet completely safe) when using multiple forcefeedback devices.; - GenericConstraintCorrection: automatically search LinearSolver from context when solverName is not specified (same behavior as LinearSolverConstraintCorrection).; - Factorize the computation of the compliance matrix and virtualize the computation of dx.; - Improve UncoupledConstraintCorrection compliance computation. Use the same factors for the compliance matrix computation and the correction computation as the one used in LinearSolverConstraintCorrection. ### Cleans; - Clean and Optimize UncoupledConstraintCorrection, factorize code between rigids and vecs, optimize addComplianceInConstraintSpace significantly for large number of constraints.; - Move new constraint accumulation visitors from GenericConstraintSolver.h to MechanicalVisitor.h so that they can be used by other solvers.; - Code refactoring in GenericConstraintCorrection. ### Bugfixes; - Fix FreeMotionAnimationLoop allocates the freeposition / freevelocity as first thing in the time step.; - Fix Haptic mode with haptic influence from constraints applied on all frames. It was not working well on the simulation side.; - Add a correction velocity factor and correction position factor as data in UncoupledConstraintCorrection.; - Fix, the GenericConstraintSolver was not providing the correct number of interations for profiler stats.; - GenericConstraintCorrection's ODESolver is now searched locally.; - Fix the Local Jacobian Matrix. It was not resized when no more constraints were applied on a MechanicalState.; - UncoupledConstraintCorrection for rigid is now in a 7 value v",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/484:996,Optimiz,Optimize,996,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/484,2,"['Optimiz', 'optimiz']","['Optimize', 'optimize']"
Performance,nts.cpython-39-x86_64-linux-gnu.so; │   │   ├── constants; │   │   │   ├── __init__.py; │   │   │   ├── KeyCode.py; │   │   │   └── Key.py; │   │   ├── Core.cpython-39-x86_64-linux-gnu.so; │   │   ├── Gui.cpython-39-x86_64-linux-gnu.so; │   │   ├── Helper.cpython-39-x86_64-linux-gnu.so; │   │   ├── __init__.py; │   │   ├── livecoding.py; │   │   ├── prefab.py; │   │   ├── PyTypes; │   │   │   ├── __init__.py; │   │   │   ├── RGBAColor.py; │   │   │   └── Vec3.py; │   │   ├── Simulation.cpython-39-x86_64-linux-gnu.so; │   │   ├── SofaBaseTopology.cpython-39-x86_64-linux-gnu.so; │   │   ├── SofaDeformable.cpython-39-x86_64-linux-gnu.so; │   │   ├── test.py; │   │   └── Types.cpython-39-x86_64-linux-gnu.so; │   ├── SofaRuntime; │   │   ├── __init__.py; │   │   └── SofaRuntime.cpython-39-x86_64-linux-gnu.so; │   ├── SofaTypes; │   │   ├── __init__.py; │   │   └── SofaTypes.cpython-39-x86_64-linux-gnu.so; │   └── splib; │   ├── animation; │   │   ├── animate.py; │   │   ├── easing.py; │   │   └── __init__.py; │   ├── caching; │   │   ├── cacher.py; │   │   └── __init__.py; │   ├── __init__.py; │   └── meshing; │   ├── cgal_sofa.py; │   ├── data; │   │   └── meshes; │   │   ├── gallbladder.stl; │   │   ├── parametric_mesh_example.step; │   │   └── surface_mesh_example.stl; │   ├── gmsh_sofa.py; │   ├── __init__.py; │   └── pygalmesh_sofa.py; └── share; └── SofaPython3; ├── documentation; │   ├── Contributing.rst; │   ├── CustomModule.rst; │   ├── index.rst; │   ├── install.rst; │   ├── SofaModule.rst; │   └── SofaPlugin.rst; └── examples; ├── backend_pygame.py; ├── BaseCamera.py; ├── CMakeLists.txt; ├── ControllerScene.py; ├── easingSceneMatplotlib.py; ├── easingScene.py; ├── emptyController.py; ├── emptyDataEngine.py; ├── emptyForceField.py; ├── example-forcefield2.py; ├── example-forcefield.py; ├── example.pyscn; ├── example-scriptcontroller.py; ├── keyEvents.py; ├── pygame_test.py; ├── ReadTheDocs_Example.py; ├── realTimeClockScene.py; ├── SofaGui.py; └── test.scn. ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592:5586,cache,cacher,5586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592,1,['cache'],['cacher']
Performance,"nuing without source file ./nptl/./nptl/pthread_kill.c. ; 44	./nptl/pthread_kill.c: No such file or directory.; (gdb) where; #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; #1 __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78; #2 __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89; #3 0x00007ffff5242866 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #4 0x00007ffff52268b7 in __GI_abort () at ./stdlib/abort.c:79; #5 0x00007ffff5227750 in __libc_message (fmt=fmt@entry=0x7ffff53c3b34 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:150; #6 0x00007ffff52a3c67 in malloc_printerr (str=str@entry=0x7ffff53c6a20 ""double free or corruption (out)""); at ./malloc/malloc.c:5765; #7 0x00007ffff52a5c50 in _int_free_merge_chunk (av=0x7ffff53feca0 <main_arena>, p=0x5555567f2740, size=2619930050800); at ./malloc/malloc.c:4669; #8 0x00007ffff52a87f3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391; #9 0x00007ffff79b94db in std::__new_allocator<int>::deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/new_allocator.h:168; #10 0x00007ffff79ae098 in std::allocator_traits<std::allocator<int> >::deallocate (__n=57, __p=0x5555567f2750, ; __a=...) at /usr/include/c++/13/bits/alloc_traits.h:516; #11 std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/stl_vector.h:387; #12 0x00007ffff79a8bde in std::_Vector_base<int, std::allocator<int> >::~_Vector_base (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:366; #13 0x00007ffff79a4b8b in std::vector<int, std::allocator<int> >::~vector (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:735; #14 0x00007ffff5caf956 in sofa::type::vector<int, sofa::type::CPUMemoryManager<int> >::~vec",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:13572,optimiz,optimized,13572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,"nvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it should be avoid for now since I'm not sure what side effects this will bring. Right now doing it seems not so bad as, again, we only attach the environment to the already created python environment. ; - A ScriptController will need to be added in order to trigger script events so that the python scene's functions (initGraph, onBeginAnimationStep, etc) are called. The createScene function is called by the SceneLoaderPY so this one is fine. > (I would probably put your feature in a module separate from Sofa for this reason). I think this should be entirely a part of the SofaPython plugin in order to keep what is related to sofa in python there. > what happens when Sofa.cleanup() gets called but python objects still hold c++ objects that are to be destructed when python exits ?. This is a good question. PythonEnvironment::Release is called when python exits (called by the static raii destructor...). I'll have to check this. > But I am really all for it, so good luck with that :-). Th",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:2011,Load,Loading,2011,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['Load'],['Loading']
Performance,"o sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**; Since me and @vmagno used this PR extensively during the past 2 months for our simulations, we added a couple of python bindings useful to us. I think this wraps up a lot of things, let me know what you guys think. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; -",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:5421,load,loaded,5421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['loaded']
Performance,oaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/b,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2662,Load,Loaded,2662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,oaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/en,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4319,Load,Loaded,4319,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"oaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7879,Load,Loaded,7879,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"oaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7318,Load,Loaded,7318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"obianId, offset);; }; {; SCOPED_TIMER(""fullRows"");; J->fullRows();; }; ```. ### Reduced Diamond (1000 time steps). ModelOrderReduction relies heavily on mapped matrices (a huge matrix projected on a small matrix). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 22.5868 s ( 44.2737 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.06 1 14.53 33.47 16.75 2.42 16.75 90.54 ......projectMappedMatrices; 7 3.08 1 3.72 11.63 4.31 0.89 4.31 23.29 .......copyToBaseMatrix; 7 7.39 1 1.78 7.48 2.05 0.52 2.05 11.10 .......fullRows; ```. #### After; ```; [INFO] [BatchGUI] 1000 iterations done in 16.4596 s ( 60.7547 FPS).; ```; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.26 2.27 4.52 31.65 ......projectMappedMatrices; 7 8.28 12 0 0.54 0.03 0.04 0.34 2.35 .......copyToBaseMatrix; 7 8.37 12 0 0.23 0.02 0.02 0.21 1.48 .......fullRows; ```. #### After. ```; [INFO] [BatchGUI] 1000 iterations done in 16.4943 s ( 60.6268 FPS). ; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.11 2 0.04 12.74 1.94 1.95 3.89 28.81 ......projectMappedMatrices; 7 8.13 12 0 0.14 0.01 0.02 0.18 1.32 .......copyToBaseMatrix; 7 8.17 12 0 0.05 0 0 0 0.02 .......fullRows; ```. ### Conclusion. In both scenes, the timer `fullRows` is almost at zero because the functions `copyNonZeros` already produces a compressed matrix. In addition, the timer `copyToBaseMatrix` is faster. FYI @olivier-goury @VannesteFelix ; ______________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443:1732,bottleneck,bottleneck,1732,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443,1,['bottleneck'],['bottleneck']
Performance,"ocessNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisit",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:1320,race condition,race conditions,1320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,1,['race condition'],['race conditions']
Performance,"ocessNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added two groups of function in `BaseMechanicalVisitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just hav",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1963:1320,race condition,race conditions,1320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963,1,['race condition'],['race conditions']
Performance,"ofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3363,load,load,3363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"ofa::core::TMultiVecI... (sofa/modules/SofaMiscSolver/NewmarkImplicitSolver.cpp); 792 ms: sofa::component::engine::SphereROI<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul, double>, sofa::defaul... (sofa/modules/SofaGeneralEngine/SphereROI.cpp); 767 ms: sofa::component::topology::TetrahedronSetTopologyAlgorithms<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2... (sofa/SofaKernel/modules/SofaBaseTopology/TetrahedronSetTopologyAlgorithms.cpp). **** Function sets that took longest to compile / optimize:; 142436 ms: sofa::core::objectmodel::TClass<$>::TClass() (4916 times, avg 28 ms); 25932 ms: std::vector<$>::_M_default_append(unsigned long) (2150 times, avg 12 ms); 23597 ms: sofa::core::objectmodel::TData<$>::read(std::__cxx11::basic_string<$> const&) (1786 times, avg 13 ms); 21862 ms: sofa::helper::vector<$>::read(std::istream&) (1143 times, avg 19 ms); 19422 ms: sofa::core::objectmodel::DataContentValue<$>::beginEdit() (1890 times, avg 10 ms); 16790 ms: sofa::core::RegisterObject& sofa::core::RegisterObject::add<$>(bool) (783 times, avg 21 ms); 15884 ms: sofa::core::objectmodel::Data<$>::Data(std::__cxx11::basic_string<$> const&, bool, bool) (1447 times, avg 10 ms); 14483 ms: sofa::core::objectmodel::TData<$>::getValueString[abi:cxx11]() const (1685 times, avg 8 ms); 13493 ms: sofa::defaulttype::DataTypeInfo<$>::name[abi:cxx11]() (1860 times, avg 7 ms); 13114 ms: testing::internal::TypeParameterizedTest<$>::Register(char const*, testing::internal::CodeLocation const&, char const*... (391 times, avg 33 ms); 12604 ms: sofa::core::objectmodel::TClass<$>::get() (4904 times, avg 2 ms); 11749 ms: sofa::component::linearsolver::CompressedRowSparseMatrix<$>::compress() (74 times, avg 158 ms); 10599 ms: std::__cxx11::basic_string<$> sofa::helper::GetSofaTypeTemplateName<$>(std::__cxx11::basic_string<$>) (990 times, avg 10 ms); 9051 ms: sofa::core::objectmodel::Data<$>::~Data() (1648 times, avg 5 ms); 9001 ms: sofa::core::objectmodel::Data<$>::virtual",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:24213,optimiz,optimize,24213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['optimiz'],['optimize']
Performance,"ofaPython to spawn new particles on mouse clicks:. ```; import Sofa; import sys; import random. class Fontain(Sofa.PythonScriptController):. def createCube(self,parentNode,name,x,y,z,vx,vy,vz,color):; node = parentNode.createChild(name). node.createObject('EulerImplicit'); node.createObject('SparseLDLSolver', name=""precond""); object = node.createObject('MechanicalObject',name='MecaObject',template='Rigid'); node.createObject('UniformMass',totalMass=""1""); node.createObject('SphereModel',radius='0.5', group='1'). # VisualNode; VisuNode = node.createChild('Visu'); VisuNode.createObject('OglModel',name='Visual',fileMesh='mesh/PokeCube.obj',color=color); VisuNode.createObject('RigidMapping',input='@..',output='@Visual'). # apply wanted initial translation; #object.applyTranslation(x,y,z); object.findData('position').value=str(x)+' '+str(y)+' '+str(z)+' 0 0 0 1'; object.findData('velocity').value=str(vx)+' '+str(vy)+' '+str(vz)+' 0 0 0'; ; return node. ; # called once the script is loaded; def onLoaded(self,node):; print 'Fontain.onLoaded called from node '+node.name; self.rootNode = node; ; particleCount = 0; def spawnParticle(self):; # create the particle, with a random color; color='red'; colorRandom = random.randint(1,6); if colorRandom==1:; color = 'red'; if colorRandom==2:; color = 'green'; if colorRandom==3:; color = 'blue'; if colorRandom==4:; color = 'yellow'; if colorRandom==5:; color = 'cyan'; if colorRandom==6:; color = 'magenta'; node = self.createCube(self.rootNode,'particle'+str(self.particleCount),0,0,0,random.uniform(-10,10),random.uniform(10,30),random.uniform(-10,10),color); self.particleCount+=1; # add the controller script; node.createObject('PythonScriptController', filename='fontain.py', classname='Particle'); return node; ; # optionnally, script can create a graph...; def createGraph(self,node):; node.createObject('FreeMotionAnimationLoop'); node.createObject(""GenericConstraintSolver"", maxIterations=""1000"", tolerance=""0.003"", printLog=""false""); pri",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/725:1411,load,loaded,1411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/725,1,['load'],['loaded']
Performance,"ofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaPython.so; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/Example.py; [ OK ] Batch/Python_scene_test.sofa_python_scene_tests/0 (2544 ms); [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/1; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in node 'joint'; [ERROR] [SofaPython] Object type UniformCompliance<Vec1d> creation failed; [FATAL] [SofaPython] SP_CALL_MODULEFUNC; Traceback (most recent call last):; File ""LambdaPropagation.py"", line 90, in createScene; joint = StructuralAPI.FixedRigidJoint( ""joint"", ground.node, rigid.node ); File ""/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python/Compliant/StructuralAPI.py"", line 634, in __init__; self.compliance = self.node.createObject('UniformCompliance', name='compliance', compliance=compliance); TypeError: bad argument type for built-in operation; Build timed out (after 30 minutes). Marking the build as aborted.; Build was aborted; [File exi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:1867,Load,Loaded,1867,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,1,['Load'],['Loaded']
Performance,ofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7944,Load,Loaded,7944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"ois Faure; https://team.inria.fr/imagine/francois-faure/. > Le 6 avr. 2017 à 19:30, Maxime Tournier <notifications@github.com> a écrit :; > ; > ; > The biggest issue with sparse matrices is that there is no silver bullet representation that covers everyone's needs: some people like it compressed (row/column), others like to have small dense chunks instead of single floating points, and so on.; > ; > In particular, I see two major orthogonal uses of sparse matrices:; > ; > getting matrix data out of components; > working with sparse matrices (linear algebra, factorization, assembly); > It is not at all obvious that the two operations should use the same representation, and in fact I would argue against it. For instance in the Compliant plugin, we use Eigen sparse matrices for everything, and end up doing a lot of work in order to shift matrix blocks around which is tedious and costly.; > ; > I've been toying around with alternate designs, and the simplest I found so far is to use a plain old vector of triplets (row, column, value) for fetching matrix data. More precisely, mappings/forcefields directly push_back matrix data into a std::vector<Eigen::Triplet<SReal> > through a std::back_insert_iterator.; > ; > With this design the caller is then responsible for structuring the sparse data further (sorting/converting to CSR, shifting rows/columns, handing over to another library, etc) Of course this approach is tailored for our needs and might not fit others, and performance-wise it needs thorough benchmarking anyways, but I think that using separate data structures for getting the data and working with the data instead of a single structure is the way to go.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/sofa-framework/sofa/issues/26#issuecomment-292248716>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AHUGIb2x8bFdYI3KTJsLE_7Qy-d2FFJiks5rtSFPgaJpZM4KLEE1>.; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292785399:2383,perform,performance-wise,2383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292785399,1,['perform'],['performance-wise']
Performance,"ojects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/83347021-63272b80-a33f-11ea-9cda-e2c209b1be80.png). I am not able to understand what is the issue? Please suggest. Thanks; ______________________________________________________. Suggested labels: <!--",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:2066,Load,Loaded,2066,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Load'],['Loaded']
Performance,"ok here is the new call stack with your version @hugtalbot :; ```; SphereLoader::load; SphereLoader::load END; SphereLoader::updateFileNameAndTransformPosition; - m_filename changed: 1; - d_translation changed: 0; - d_rotation changed: 0; - d_scale changed: 0; SphereLoader::load; SphereLoader::load END; SphereLoader::applyTransform; SphereLoader::applyTransform END; SphereLoader::Callback exit with load(); ```. So as you can see the file is loaded once at parse time (because of the ```canLoad``` mechanism of the Loader) but the m_filename is still flaged as changed in the tracker so it will call the method load a second time when the Data position/radius are pulled from other components. . This was avoided in my previous version by adding ```m_internalEngine[""filename""].cleanDirty();``` at begining of the Load method. . However it is not looping anymore like in the initial version. Maybe we can say that this double call of load is special due to the Loader mechanism at parse stage (which should be replaced by a nice Data grah update...); For the log from epernod@sophia.inria.fr . Loader are loading file/mesh at parse stage to ensure they are ready and all their data are filled before any other component start linking and using the loader data. You can see it like a ""pre-init"" visitor... in comparison to the bwdInit.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-744821434:81,load,load,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-744821434,14,"['Load', 'load']","['Load', 'Loader', 'load', 'loaded', 'loader', 'loading']"
Performance,"ok looking at the CI, only tests from plugin are failing because the scene are still requesting to load plugin with old plugin name. I can fix that quickly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559:99,load,load,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559,1,['load'],['load']
Performance,oller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9572,Load,Loaded,9572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"olver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; T",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9494,Load,Loaded,9494,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,ome/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopol,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7641,Load,Loaded,7641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"ommand, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**; Since me and @vmagno used this PR extensively during the past 2 months for our simulations, we added a co",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:5119,load,loaded,5119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['loaded']
Performance,"omponent `MeshSTLLoader` with the desired position and orientation. However, there was no explanation what attributes can be used for position and orientation. There was even no explanation which order Euler rotation is using. Finally, I figured out them by trial and error, not by documentation. What I want to know is as follow:; 1. What components does SOFA have?; For example, in the code below, there are components: `DefaultAnimationLoop`, `MeshGmshLoader`, `EulerImplicitSolver`, `CGLinearSolver`, `PointSetTopologyContainer`, `MechanicalObject`, `UniformMass`, and `ConstantForceField`.; 2. Which attributes are usable in each component?; For example, in the code below, the component `MechanicalObject` has three attributes: `template`, `name`, and `showObject`.; 3. What data should each attribute have?; For example, in the code below, the attribute `totalForce` of the component `ConstantForceField` has six floats: `""1 0 0 0 0 0""`. ```; <?xml version=""1.0"" ?>. <!-- Loader and topology -->; <Node name=""root"" dt=""0.01"" gravity=""0 0 0"">. <RequiredPlugin name=""Sofa.Component.Mass""/>; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/>; <RequiredPlugin name=""Sofa.Component.StateContainer""/>; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/>; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/>; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/>; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/>; ; <DefaultAnimationLoop computeBoundingBox=""false""/>. <MeshGmshLoader name=""meshLoaderCoarse"" filename=""mesh/liver.msh"" />. <Node name=""Liver"">. <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>. <PointSetTopologyContainer name=""topo"" src=""@../meshLoaderCoarse"" />. <MechanicalObject template=""Rigid3d"" name=""MechanicalModel"" showObject=""1""/>. <UniformMass totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />. </Node>; </Node>. ```. Is there any documentation available for reference to find ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4647:1684,Load,Loader,1684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4647,1,['Load'],['Loader']
Performance,omponent.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4118,Load,Loaded,4118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"on(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:2770,Load,Loads,2770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['Load'],['Loads']
Performance,"on.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SceneCheck",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:6414,load,loaded,6414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['load'],['loaded']
Performance,"on.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:4903,load,loaded,4903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['load'],['loaded']
Performance,on.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1336,Load,Loaded,1336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,onda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_sourc,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3084,Load,Loaded,3084,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"onda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckCollisionResponse, SceneCheckDeprecatedComponents, SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneChe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:11117,Load,Loaded,11117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"onent.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Inter",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2410,load,load,2410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,onent.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Compone,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2373,Load,Loaded,2373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,onent.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mas,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2493,Load,Loaded,2493,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"onent.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4008,load,load,4008,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,order of call right now:; ```; SphereLoader::load(); addUpdateCallback; SphereLoader::load(); SphereLoader::load() Exit; SphereLoader::applyTransform(); SphereLoader::applyTransform() Exit; SphereLoader::load() Exit; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-715270644:45,load,load,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-715270644,4,['load'],['load']
Performance,"ore::TMultiVecId<(sofa::core::VecType)0, (sofa::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)0, (sofa::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)2, (sofa::core::VecAccess)1>, sofa::simulation::common::MechanicalOperations*); sofa::component::animationloop::FreeMotionAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::node::animate(sofa::simulation::Node*, double); sofa::gui::batch::BatchGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; ```. and with GDB:. ```; double free or corruption (out). Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; Download failed: Invalid argument. Continuing without source file ./nptl/./nptl/pthread_kill.c. ; 44	./nptl/pthread_kill.c: No such file or directory.; (gdb) where; #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; #1 __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78; #2 __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89; #3 0x00007ffff5242866 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #4 0x00007ffff52268b7 in __GI_abort () at ./stdlib/abort.c:79; #5 0x00007ffff5227750 in __libc_message (fmt=fmt@entry=0x7ffff53c3b34 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:150; #6 0x00007ffff52a3c67 in malloc_printerr (str=str@entry=0x7ffff53c6a20 ""double free or corruption (out)""); at ./malloc/malloc.c:5765; #7 0x00007ffff52a5c50 in _int_free_merge_chunk (av=0x7ffff53feca0 <main_arena>, p=0x5555567f2740, size=2619930050800); at ./malloc/malloc.c:4669; #8 0x00007ffff52a87f3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391; #9 0x00007ffff79b94db in std::__new_allocator<int>::deallocate (this=0x5555567f23c8, __p=0x5555567",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:12742,optimiz,optimized,12742,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,"other procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4990,load,loaded,4990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,['load'],"['loadPlugin', 'loaded']"
Performance,"ound. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData (2 ms); [ RUN ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected; -----------------------------------------------------",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3852,load,loaded,3852,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,"owsApps;D:\Program Files\Intel\WiFi\bin\;D:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Manas\AppData\Local\Programs\Microsoft VS Code\bin;D:\Users\Manas\AppData\Local\Programs\espanso;C:\Users\Manas\.dotnet\tools;C:\Users\Manas\AppData\Roaming\npm;D:\MinGW\bin;; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', 'C:\\Python310\\python310.zip', 'C:\\Python310\\DLLs', 'C:\\Python310\\lib', 'C:\\Python310', 'C:\\Users\\Manas\\AppData\\Roaming\\Python\\Python310\\site-packages', 'C:\\Python310\\lib\\site-packages', 'C:\\Python310\\lib\\site-packages\\win32', 'C:\\Python310\\lib\\site-packages\\win32\\lib', 'C:\\Python310\\lib\\site-packages\\Pythonwin']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = D:/github-clones/sofa/build/bin;D:/github-clones/sofa/build/plugins;D:/github-clones/sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDeb",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:4680,load,load,4680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['load'],['load']
Performance,"path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/python3/site-packages' to sys.path; [INFO] [PluginManager] Loaded plugin: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/libSofaPython3.so; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_opti",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:1751,Load,Loaded,1751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['Load'],['Loaded']
Performance,"piler. ; - The default behavior of the global `PluginRepository`, was changed by c5a19fe for absolutely no good reasons.; It breaks a very basic functionaliy ( you can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1548,load,loadPlugin,1548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['load'],['loadPlugin']
Performance,"plate for class DynamicSparseGridGeometryAlgorithms already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; _________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:1236,load,loaded,1236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,1,['load'],['loaded']
Performance,plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [Plugi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6855,Load,Loaded,6855,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7086,Load,Loaded,7086,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is empty; By default SparseLDLSolver uses blocks with a single double (to handle all cases of simulations).; If you are using only 3D DOFs, you may consider u",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:33883,Load,Loaded,33883,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with ch",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9225,Load,Loaded,9225,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/sto,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7850,Load,Loaded,7850,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithD",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7658,Load,Loaded,7658,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/Re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7539,Load,Loaded,7539,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelW",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6790,Load,Loaded,6790,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,plugin_list.conf is messed up by CMake cache,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/632:39,cache,cache,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/632,1,['cache'],['cache']
Performance,pment/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4951,Load,Loaded,4951,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"pology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Edge2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2TetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: IdentityTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Mesh2PointMechanicalMapping<Vec3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: Mesh2PointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Quad2TriangleTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedHexaTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraMechanicalMapping<Vec3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SubsetTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Tetra2TriangleTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Triangle2EdgeTopologicalMapping; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Ri",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:27479,Load,Loaded,27479,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"ponent.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in r",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5151,load,load,5151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,ponent.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6b,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10048,Load,Loaded,10048,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,ponent.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10185,Load,Loaded,10185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,ponent.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4241,Load,Loaded,4241,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"ponent::topology::container::dynamic::PointSetTopologyModifier::removePointsWarning(sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & indices, const bool removeDOF) Line 378	C++; 	Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::removeTrianglesProcess(const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & indices, const bool removeIsolatedEdges, const bool removeIsolatedPoints) Line 471	C++; 	Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::removeTriangles(const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & triangleIds, const bool removeIsolatedEdges, const bool removeIsolatedPoints) Line 332	C++; 	Sofa.GUI.Component.dll!sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromTriangleModel(sofa::component::collision::geometry::TriangleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3,double>,sofa::type::Vec<3,double>,double>> * model, const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & indices) Line 161	C++; 	Sofa.GUI.Component.dll!sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromCollisionModel(sofa::core::CollisionModel * model, const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & indices) Line 422	C++; 	Sofa.GUI.Component.dll!sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromCollisionModel(sofa::core::CollisionModel * model, const unsigned int & indices) Line 414	C++; 	Sofa.GUI.Component.dll!sofa::gui::component::performer::RemovePrimitivePerformer<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3,double>,sofa::type::Vec<3,double>,double>>::execute() Line 83	C++; 	Sofa.GUI.Component.dll!sofa::gui::component::performer::BaseMouseInteractor::updatePosition(double __formal) Line 86	C++. ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3370:1695,perform,performer,1695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3370,5,['perform'],['performer']
Performance,pository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Compone,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1663,Load,Loaded,1663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,ps://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:23787,perform,performance-noexcept-move-constructor,23787,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-noexcept-move-constructor']
Performance,"r behaves differently with iterative and direct linear solvers.; Here is an example scene : . ``` python; import Sofa; import SofaRuntime; from Sofa import SofaDeformable; from numpy import array; from matplotlib.colors import Normalize; from matplotlib.pyplot import get_cmap. class AnimationStepController(Sofa.Core.Controller):; def __init__(self, node, *args, **kwargs):; Sofa.Core.Controller.__init__(self, *args, **kwargs); self.forceMagnitude = 0; self.createGraph(node); self.root = node. def createGraph(self, rootNode):; rootNode.addObject('DefaultAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('VisualStyle', name=""visualStyle"", displayFlags=""showBehaviorModels showForceFields""); ; self.static = rootNode.addChild('StaticBeam', activated=True); self.static.addObject('MeshGmshLoader', name='loader', filename='circle.msh'); self.static.addObject('MeshTopology', name='TriangleTopo', src='@loader'); self.static.addObject('EdgeSetGeometryAlgorithms', name='TriangleTopo', src='@loader'); self.MO_static = self.static.addObject('MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.static.addObject('StaticSolver', name='ODE', newton_iterations=""10"", printLog=True); self.static.addObject('SparseLDLSolver', name='LDL', template=""CompressedRowSparseMatrixMat3x3d""); # self.static.addObject('CGLinearSolver', name='linear solver', iterations=200, tolerance=1e-08, threshold=1e-08); self.static.addObject('TriangularFEMForceFieldOptim', youngModulus='200', poissonRatio='0.3'); self.static.addObject('BoxROI', name='ROI', box='-0.2 -0.2 -0.2 0.2 0.2 0.2'); self.static.addObject('FixedConstraint', indices='118 119'); self.static.addObject('BoxROI', name='ROI2', box='0.9 -0.2 -0.1 1.1 0.2 0.1'); self.CFF_static = self.static.addObject('ConstantForceField', indices=""@ROI2.indices"", force=""0 0 0"", showArrowSize=0.05). self.dynamic = rootNode.addChild('DynamicBeam', activated=True); self.dynamic.addObject('MeshGmshLoader', name='loader",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4051:1055,load,loader,1055,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4051,1,['load'],['loader']
Performance,"r', name='ODE', newton_iterations=""10"", printLog=True); self.static.addObject('SparseLDLSolver', name='LDL', template=""CompressedRowSparseMatrixMat3x3d""); # self.static.addObject('CGLinearSolver', name='linear solver', iterations=200, tolerance=1e-08, threshold=1e-08); self.static.addObject('TriangularFEMForceFieldOptim', youngModulus='200', poissonRatio='0.3'); self.static.addObject('BoxROI', name='ROI', box='-0.2 -0.2 -0.2 0.2 0.2 0.2'); self.static.addObject('FixedConstraint', indices='118 119'); self.static.addObject('BoxROI', name='ROI2', box='0.9 -0.2 -0.1 1.1 0.2 0.1'); self.CFF_static = self.static.addObject('ConstantForceField', indices=""@ROI2.indices"", force=""0 0 0"", showArrowSize=0.05). self.dynamic = rootNode.addChild('DynamicBeam', activated=True); self.dynamic.addObject('MeshGmshLoader', name='loader', filename='circle.msh'); self.dynamic.addObject('MeshTopology', name='TriangleTopo', src='@loader'); self.MO_dynamic = self.dynamic.addObject('MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.dynamic.addObject('UniformMass', name='mass', totalMass = 0.000001); self.dynamic.addObject('EulerImplicitSolver', name='ODE'); self.dynamic.addObject('SparseLDLSolver', name='LDL', template=""CompressedRowSparseMatrixMat3x3d""); self.dynamic.addObject('TriangularFEMForceFieldOptim', youngModulus='200', poissonRatio='0.3' ); self.dynamic.addObject('BoxROI', name='ROI', box='-0.2 -0.2 -0.2 0.2 0.2 0.2'); self.dynamic.addObject('FixedConstraint', indices='@ROI.indices'); self.dynamic.addObject('BoxROI', name='ROI2', box='0.9 -0.2 -0.1 1.1 0.2 0.1'); self.CFF_dynamic = self.dynamic.addObject('ConstantForceField', indices=""@ROI2.indices"", force=""0 0 0"", showArrowSize=0.05). def onAnimateBeginEvent(self, event):; if (abs(self.forceMagnitude) < 3.5) :; self.forceMagnitude = self.forceMagnitude + 0.05; if (self.static.activated.value == True):; self.CFF_static.force.value = [self.forceMagnitude, 0, 0]; if (self.dynamic.activated.value == True):; self.CFF",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4051:2231,load,loader,2231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4051,1,['load'],['loader']
Performance,r.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elasti,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3321,Load,Loaded,3321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"r/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Pr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2555,load,load,2555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['load'],['load']
Performance,r] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/he,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6094,Load,Loaded,6094,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,r] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Use,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5978,Load,Loaded,5978,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,r] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:3047,Load,Loaded,3047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"r] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWith",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6563,Load,Loaded,6563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"r_base (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:366; #13 0x00007ffff79a4b8b in std::vector<int, std::allocator<int> >::~vector (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:735; #14 0x00007ffff5caf956 in sofa::type::vector<int, sofa::type::CPUMemoryManager<int> >::~vector (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /home/alex/Documents/sofa/Sofa/framework/Type/src/sofa/type/vector_T.h:55; #15 0x00007ffff3b58ba2 in sofa::linearalgebra::CompressedRowSparseMatrixGeneric<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixGeneric (this=0x5555567f2310, __in_chrg=<optimized out>); at /home/alex/Documents/sofa/Sofa/framework/LinearAlgebra/src/sofa/linearalgebra/CompressedRowSparseMatrixGeneric.h:246; #16 0x00007ffff3b58fff in sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixMechanical (this=0x5555567f2310, __in_chrg=<optimized out>); at /home/alex/Documents/sofa/Sofa/framework/LinearAlgebra/src/sofa/linearalgebra/CompressedRowSparseMatrixMechanical.h:51; #17 0x00007fffeafdc335 in std::_Destroy<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > (__pointer=0x5555567f2310) at /usr/include/c++/13/bits/stl_construct.h:151; --Type <RET> for more, q to quit, c to continue without paging--; #18 0x00007fffeafc247e in std::allocator_traits<std::allocator<void> >::destroy<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > (__p=0x5555567f2310); at /usr/include/c++/13/bits/alloc_traits.h:674; #19 std::_Sp_counted_ptr_inplace<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x5555567f2300); at /usr/include/c++/13/bits/shared_ptr_base.h:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:15227,optimiz,optimized,15227,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,"raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)：in function‘dhdUSBGetDeviceCountList(int*, int*, int*, int)’：; dhdComUSB-libusb.cpp:(.text+0x215)：undefined reference to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1854,load,loading,1854,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['load'],['loading']
Performance,"ransitional period this should be removed. . The current WIP is in the following branch:; https://github.com/sofa-framework/sofa/compare/master...SofaDefrost:splitSofaVolumetricDataSquashed. The result is to have:; ```; plugins/SofaDistanceGrid/; - components/collision/BarycentricPenalty, DistanceGridCollision, FFDDistanceGrid, RigidDistanceGird; - components/forcefield/DistanceGridForceFIeld. plugins/SofaImplicitField/ ; - components/geometry/ScalarField (base class); - components/geometry/DiscreteGridField (inherit from ScalarField); - components/geometry/SphericalField (inherit from ScalarField); - components/geometry/otherToComeFromDefrost; - components/mapping/ImplictSurfaceMapping; - deprecated/ImplicitSurfaceContainer (override) components/geometry/DiscreteGridField ; - deprecated/InterpolatedImplicitSurface (override) components/geometry/DiscreteGridField; - deprecated/SphereSurface (override) component/geometry/SphericalField; ```. ...of course we need to add test to all these classes & refactor the MHD loading parts....etc... . Please have a quick look at it and provide feedback on the general way to manage this kind of changes (eg do we really need to keep the SofaVolumetricData transitional plugin or do we allow a more breaking approach and directly remove the SofaVolumetricData with a ChangeLog entry ?). I would be very happy to have opinion & help to be sure to take the right direction resulting PR that match everyone's needs...@jeremieAllard, @fjourdes, @hugtalbot , @guparan , @thomas-lemaire , @matthieu-nesme, @maxime-tournier, @bruno-marques, @bcarrez, @EulalieCoevoet . DM. EDIT: If you are curious about the feature we are adding... it is about having a tetrahedralMesh with CGAL straight out of an implicit function provided in python (and cython if you care about performances)...more on that later. . EDIT2: I changed the url of the branch; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-fra",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/388:2172,load,loading,2172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/388,1,['load'],['loading']
Performance,"raph entries. This is why the initial design was that there is no ""path"" concept at this level.; > ; > My current approach to handle this kind of scenario was to implement an easing function like that:; > ; > ```c++; > std::string sofa::helper::objectmodel::getPathName(Base* o); > {; > BaseNode *node = dynamic_cast<BaseNode>(o);; > if(node); > return node->getPathName();; > BaseObject *object = dynamic_cast<BaseNode>(o);; > if(object); > return object->getPathName();; > ...; > }; > ```; > ; > To avoid having if/else and dynamic cast at every call and thus easing the readability on the caller's.; > But I agree with your that factoring them out in Base would make sense. Actually some refactoring of BaseNode/Node/DAGNode/BaseContext would also make sense given how hard these are interleaved and unclear to most of the developpers. Let's get rid of BaseContext! ;); More seriously, I was also using easing functions before, but I noticed that I was often just duplicating the code whenever I needed it, and felt like having it in Base made more sense, but I must say that I would have preferred a virtual pure method there.. your alternative (adding in SofaCore an easing function in the sofa::core::objectmodel or sofa::helper::objectmodel scope) makes sense to me, solves the problem of having an extra function to override when inheriting Base.; Do you know if there is an improvement in perfs when using toBaseNode() / toBaseObject() instead of a dynamic_cast here?. I would not bet too much on performance improvement without making small benchmark. But in a function that basically returns strings build by concatenating ... I would say this is probably very small. . In addition it has to be noted that using a getPathName() explingn function with if/else has a linear complexity in the amount of possible types (number of if/else) while a virtual getPathName in Base has a constant cost. But again...the calling costs is probably very small compared to what the function actually do :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1455#issuecomment-678138769:1654,perform,performance,1654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1455#issuecomment-678138769,1,['perform'],['performance']
Performance,"re::VecAccess)1>, sofa::simulation::common::MechanicalOperations*); sofa::component::animationloop::FreeMotionAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::node::animate(sofa::simulation::Node*, double); sofa::gui::batch::BatchGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; ```. and with GDB:. ```; double free or corruption (out). Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; Download failed: Invalid argument. Continuing without source file ./nptl/./nptl/pthread_kill.c. ; 44	./nptl/pthread_kill.c: No such file or directory.; (gdb) where; #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; #1 __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78; #2 __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89; #3 0x00007ffff5242866 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #4 0x00007ffff52268b7 in __GI_abort () at ./stdlib/abort.c:79; #5 0x00007ffff5227750 in __libc_message (fmt=fmt@entry=0x7ffff53c3b34 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:150; #6 0x00007ffff52a3c67 in malloc_printerr (str=str@entry=0x7ffff53c6a20 ""double free or corruption (out)""); at ./malloc/malloc.c:5765; #7 0x00007ffff52a5c50 in _int_free_merge_chunk (av=0x7ffff53feca0 <main_arena>, p=0x5555567f2740, size=2619930050800); at ./malloc/malloc.c:4669; #8 0x00007ffff52a87f3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391; #9 0x00007ffff79b94db in std::__new_allocator<int>::deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/new_allocator.h:168; #10 0x00007ffff79ae098 in std::allocator_traits<std::allocator<int> >::deallocate (__n=57, __p=0x5555567f2750, ; __a=...) at /usr/includ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:12913,optimiz,optimized,12913,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,"reation of `PythonScriptController` instances from XML scenes . ## Current workaround; There is a workaround class `SofaPython.script.Controller` that somewhat fixes some of the issues by implementing `__new__` in a derived Python class, intercepting and returning the control instance and optional initialization arguments, but overall it feels more like a hack. ## This PR. This PR simply provides a clean binding for instance creation. You need to provide a node as a first argument, but otherwise Controllers now act as any other python object. The old behavior still works, should you need it. ```python; ; import Sofa ; class Script(Sofa.PythonScriptController):. def __init__(self, node, *args, **kwargs):; self.bacon = kwargs.pop('egg', 'spam'). def onBeginAnimationStep(self, dt):; print(self.bacon). ; def createScene(node):; script = Script(node, egg = 'spam'); . ```. Creating instances directly no longer calls `onLoaded` nor `createGraph`:. - nothing is actually loaded; - code in `createGraph` really belongs to `__init__` anyways. This behavior can be changed of course, maybe a warning can/should be emitted if the instance creation detects a derived implementation. Comments welcome :). The PR also removes heavy copypasta in some files, removes unneeded `extern ""C""` linkage and a few other cosmetic changes. # Changelog. - `PythonScriptController` and derived classes are now instantiable directly in python. The constructor requires a `Node` as first parameter.; - `onLoaded` and `createGraph` entry points are no longer called when classes are instantiated directly from python. Corresponding code belongs to the derived class constructor.; - creating instances ""the old way"" through `node.createGraph` has unchanged behavior; - the workaround module `SofaPython.script` now features a deprecation message, together with a derived class easing transition (calls `createGraph` on construction, warns if `onLoaded` is defined); - updated `ControllerVariable.py` example ; - some m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283:2355,load,loaded,2355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283,1,['load'],['loaded']
Performance,"rectory ( hence the ""./"" ) of the applications since on windows platform. By default, on windows the dlls are located in the same directory as the application. For example `runSofa` and `SofaPython.dll` are both in the same directory; - the `../lib` directory for other platforms like linux, where the plugins are usually stored in a `lib` sub folder of the parent directory where the application reside. For example from the directory where the `runSofa` executable is, you can look for the directory where `SofaPython.lib` is located by doing `cd ../lib`. These paths are relative and are compatible both with a build tree and an install tree. Prior to f93e2b9 the PluginRepository was empty by default, leaving all the executables the responsibility to fill it with these values. Behavior which was changed multiple times compared to ca0402d for a reason yet to be explained. The side effect this change introduced was the requirement to have every unit test executable which attempts to load a plugin to explicitly fill the PluginRepository with the paths where the libraries are located with respect to the executable. This requirement was covered by having most of the unit tests depend on SofaGTest which initialize these default paths for you, so that test scenes that use a ` RequiredPlugin` component do not utterly fail. ; Unless a **valid** argument is raised, the aforementioned paths should be the default ones to use to initialize the `PluginRepository` global object. ; I strongly believe that would these paths have been properly restored by f93e2b9 (my bad), this PR would have never existed on the first place. I mean how much time has been lost already in fixes, and discussions because of this ! Just to in the end roll back to the implementation that was done 5 years ago which was **just working**. The other thing I mentionned in the comment https://github.com/sofa-framework/sofa/pull/502#issuecomment-340518769 is that there should be only one place to store the paths for po",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342557659:1124,load,load,1124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342557659,1,['load'],['load']
Performance,"release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Edge2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2TetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: IdentityTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Mesh2PointMechanicalMapping<Vec3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: Mesh2PointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Quad2TriangleTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedHexaTopologicalMapping; [WARNING] [",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:26106,Load,Loaded,26106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/l",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2696,Load,Loading,2696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loading']
Performance,rg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-params-in-decls](https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html) |; | [fuchsia-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-default-arguments.html) | [readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/readability-braces-around-statements.html) |; | [fuchsia-overloaded-operator](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-overloaded-operator.html) ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:24235,perform,performance-unnecessary-copy-initialization,24235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-unnecessary-copy-initialization']
Performance,rg/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extra/clang-tidy/checks/performance-faster-string-find.html) |; | [cppcoreguidelines-pro-bounds-array-to-pointer-decay](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](https://clang.llvm.org/extra/clang-tidy/checks/performance-for-range-copy.html) |; | [cppcoreguidelines-pro-bounds-constant-array-index](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [per,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:22420,perform,performance-inefficient-algorithm,22420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-inefficient-algorithm']
Performance,rgei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_develo,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4131,Load,Loaded,4131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,rgei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/se,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4605,Load,Loaded,4605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"riangleSetGeometryAlgorithms<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2ul,... (sofa/SofaKernel/modules/SofaBaseTopology/TriangleSetGeometryAlgorithms.cpp); 1079 ms: sofa::component::engine::SubsetTopology<sofa::defaulttype::StdRigidTypes<3ul, double> >::SubsetTopology() (sofa/modules/SofaGeneralEngine/SubsetTopology.cpp); 1048 ms: sofa::Mapping_test<sofa::component::mapping::RigidRigidMapping<sofa::defaulttype::StdRigidTypes<3ul, double>, sofa::de... (sofa/SofaKernel/modules/SofaRigid/SofaRigid_test/RigidRigidMapping_test.cpp); 1035 ms: sofa::component::topology::TetrahedronSetGeometryAlgorithms<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2... (sofa/SofaKernel/modules/SofaBaseTopology/TetrahedronSetGeometryAlgorithms.cpp); 1035 ms: sofa::VisualModelImpl_test_checkThatMembersAreCorrectlyConstructed_Test::TestBody() (sofa/SofaKernel/modules/SofaBaseVisual/SofaBaseVisual_test/VisualModelImpl_test.cpp); 1031 ms: sofa::component::loader::LegacyVTKReader::readFile(char const*) (sofa/SofaKernel/modules/SofaLoader/MeshVTKLoader.cpp); 1029 ms: sofa::component::odesolver::RungeKutta4Solver::solve(sofa::core::ExecParams const*, double, sofa::core::TMultiVecId<(s... (sofa/modules/SofaGeneralExplicitOdeSolver/RungeKutta4Solver.cpp); 1022 ms: sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2ul, double>, so... (sofa/SofaKernel/modules/SofaBaseMechanics/MechanicalObject.cpp); 1022 ms: sofa::component::engine::MeshROI<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<6ul, double>, sofa::defaultt... (sofa/modules/SofaGeneralEngine/MeshROI.cpp); 1004 ms: sofa::component::engine::boxroi::BoxROI<sofa::defaulttype::StdRigidTypes<3ul, double> >::draw(sofa::core::visual::Visu... (sofa/SofaKernel/modules/SofaEngine/BoxROI.cpp); 992 ms: sofa::component::engine::boxroi::BoxROI<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<6ul, double>, sofa::d... (sofa/SofaKernel/modules/SofaEngine/BoxROI.cpp);",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:19649,load,loader,19649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['load'],['loader']
Performance,"ript:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:3724,load,load,3724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['load']
Performance,rk/Versions/A/vImage; 0x7fff26e94000 - 0x7fff2715efff com.apple.QuartzCore (1.11 - 926.8) <04D8759B-1119-3E37-B922-32BDECB7C5D2> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore; 0x7fff2715f000 - 0x7fff271a0fff libFontRegistry.dylib (309) <9E9329F6-7384-3C7F-83E7-D52CD7FFBC09> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib; 0x7fff271a1000 - 0x7fff272e2fff com.apple.coreui (2.1 - 690) <6DB427BB-44CA-3002-A3FF-77F0FEFC2A51> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI; 0x7fff272e3000 - 0x7fff273cefff com.apple.ViewBridge (551.3 - 551.3) <9F31CEDB-5B8A-3BAE-A638-E9F352EF4E87> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge; 0x7fff273cf000 - 0x7fff273dafff com.apple.PerformanceAnalysis (1.275 - 275) <2E5E666D-EE93-3949-8C76-692FA748D129> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis; 0x7fff273db000 - 0x7fff273eafff com.apple.OpenDirectory (11.2 - 230.40.1) <333A7F2E-0F3E-37F1-9E1B-69996F5084D2> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory; 0x7fff273eb000 - 0x7fff2740afff com.apple.CFOpenDirectory (11.2 - 230.40.1) <25F138F8-9E55-3749-8271-0FDB275C3E2C> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory; 0x7fff2740b000 - 0x7fff27413fff com.apple.CoreServices.FSEvents (1290.40.2 - 1290.40.2) <6B70B98B-BCC5-3FBE-A6B5-CD0696AA055A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents; 0x7fff27414000 - 0x7fff27438fff com.apple.coreservices.SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:29195,Perform,PerformanceAnalysis,29195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Perform'],['PerformanceAnalysis']
Performance,"rk/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOFA.; Principal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAGE and SOFA_BUILD_APP_BUNDLE; - [SofaMacros] ADD backward compatibility for INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:3127,load,loading,3127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['load'],['loading']
Performance,"rnal>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] S",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3393,load,loaded,3393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,ro-bounds-constant-array-index](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/c,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:22884,perform,performance-inefficient-vector-operation,22884,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-inefficient-vector-operation']
Performance,rs/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7343,Load,Loaded,7343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,ry] Class already registered: ProjectToLineConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPlaneConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPlaneConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24260,Load,Loaded,24260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,ry] Class already registered: ProjectToPointConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24606,Load,Loaded,24606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"s HPC INRIA in Lille, here is an initial nix package for sofa. It also include a flake (and its lock), which is not mandatory, but ease the use of the package, with commands like; - `nix build`, to compile the package in a sandbox; - `nix develop`, to provide a shell with an environment containing all required dependencies to build the project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **R",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:1026,cache,cache,1026,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,1,['cache'],['cache']
Performance,"s already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is empty; By default SparseLDLSolver uses blocks with a single double (to handle all cases of simulations).; If you are using only 3D DOFs, you may consider using blocks of Matrix3 to speedup the calculations.; If it is the case, add template=""CompressedRowSparseMatrixMat3x3d"" to this object in your scene; Othe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:34033,Load,Loaded,34033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"s dynamic data instances would be adding quite a lot of complexity. However the current system could be improved based on your observations :; 1. `VecLink m_vecLink` in `BaseData` will only ever contain { &inputs, &outputs }. `VecLink` could be changed to `helper::fixed_array<BaseLink*,2>` to remove those allocations (`BaseData::addLink()` should then be removed or a NOP like in `DDGNode`); 2. Reducing dynamic allocations is why `help`/`group`/`widget` were stored as `const char*` instead of `std::string` (as in most case they are compile time constants). However this did create some bugs in components, so I would be in favor of always storing strings. But one [new issue with c++11 is that std::string is no longer allowed to use copy-on-write](http://stackoverflow.com/questions/12199710/legality-of-cow-stdstring-implementation-in-c11) to share a single buffer between instances, therefore this introduces new allocations with gcc 5 for instance (and `name` is currently copied multiple times). One option would be to use a different string implementation (such as `fbstring` as used by facebook and detailed in the [CppCon 2016 talk “The strange details of std::string at Facebook""](https://youtu.be/kPR8h4-qZdk)). An alternative that would help is to use the new move semantics to minimize the number of copies involved. Regarding multithreading, it is indeed an issue. Currently constructing an object and all its Data is a local operation that can happen in parallel in any thread, but adding/removing them within a given scene graph is supposed to be done sequentially. There is the ""aspect"" mechanism that allow to provide a ""frozen"" version of the graph to another thread while it is being changed through adding and removing node and objects. But adding (and removing) Data in objects is not covered by this mechanism, and is not supported if multiple threads are accessing it concurrently. Which basically limit the creation of dynamic Data to the sequential initialization phase.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-256028112:1980,concurren,concurrently,1980,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-256028112,1,['concurren'],['concurrently']
Performance,"s should be removed. . The current WIP is in the following branch:; https://github.com/sofa-framework/sofa/compare/master...SofaDefrost:splitSofaVolumetricDataSquashed. The result is to have:; ```; plugins/SofaDistanceGrid/; - components/collision/BarycentricPenalty, DistanceGridCollision, FFDDistanceGrid, RigidDistanceGird; - components/forcefield/DistanceGridForceFIeld. plugins/SofaImplicitField/ ; - components/geometry/ScalarField (base class); - components/geometry/DiscreteGridField (inherit from ScalarField); - components/geometry/SphericalField (inherit from ScalarField); - components/geometry/otherToComeFromDefrost; - components/mapping/ImplictSurfaceMapping; - deprecated/ImplicitSurfaceContainer (override) components/geometry/DiscreteGridField ; - deprecated/InterpolatedImplicitSurface (override) components/geometry/DiscreteGridField; - deprecated/SphereSurface (override) component/geometry/SphericalField; ```. ...of course we need to add test to all these classes & refactor the MHD loading parts....etc... . Please have a quick look at it and provide feedback on the general way to manage this kind of changes (eg do we really need to keep the SofaVolumetricData transitional plugin or do we allow a more breaking approach and directly remove the SofaVolumetricData with a ChangeLog entry ?). I would be very happy to have opinion & help to be sure to take the right direction resulting PR that match everyone's needs...@jeremieAllard, @fjourdes, @hugtalbot , @guparan , @thomas-lemaire , @matthieu-nesme, @maxime-tournier, @bruno-marques, @bcarrez, @EulalieCoevoet . DM. EDIT: If you are curious about the feature we are adding... it is about having a tetrahedralMesh with CGAL straight out of an implicit function provided in python (and cython if you care about performances)...more on that later. . EDIT2: I changed the url of the branch; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/388:2955,perform,performances,2955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/388,1,['perform'],['performances']
Performance,s/2.7/lib/python2.7/lib-tk; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; Numpy found: /usr/local/lib/python2.7/site-packages/numpy/__init__.pyc; ```. When I run it with runSofa (and thus SofaPython):; ```; sofamacbuilder:mac_clang-3.5_default_release sofa$ ./build/bin/runSofa -g batch test.py; [INFO] [runSofa] Loading automatically plugin list in /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:2558,Load,Loaded,2558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['Load'],['Loaded']
Performance,s/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1572,Load,Loaded,1572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,s/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; Barycent,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1699,Load,Loaded,1699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,s/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; H,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1834,Load,Loaded,1834,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,s/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/g,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7496,Load,Loaded,7496,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,s/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. #,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8545,Load,Loaded,8545,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,s/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/buil,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8091,Load,Loaded,8091,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,s/sofa_source/sofa/src/examples;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Releas,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1414,Load,Loaded,1414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,s67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/st,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7007,Load,Loaded,7007,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"s_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/build/lib/libSofaPython.dylib; [INFO] [Python_scene_test] running /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py; ERROR: wrong number of arguments; [ERROR] [PythonScript] IndexError: list index out of range; File ""/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py"", line 15, in <module>; DAMPING_COEF = float( sys.argv[1] ). [ERROR] [SofaPython] Script (file:damping) import error; [ERROR] [PythonScriptController(PythonScriptController)] load error (file '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py' not parsable); ../applications/plugins/SofaTest/Python_test.cpp:263: Failure; Failed; python error; [ FAILED ] Batch/Python_scene_test.sofa_python_scene_tests/0, where GetParam() = 48-byte obje",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176:1182,Load,Loaded,1182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176,1,['Load'],['Loaded']
Performance,"se arises mostly because of running runSofa from a build directory but you set SOFA_ROOT. It will then tried to load plugins from the install afterwards, etc..., leading to stuff like:. ```; [WARNING] [ObjectFactory] Default template for class DynamicSparseGridGeometryAlgorithms already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I ackn",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:873,load,load,873,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,2,['load'],"['load', 'loaded']"
Performance,"se/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfur",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10367,Load,Loaded,10367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"seMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > (__pointer=0x5555567f2310) at /usr/include/c++/13/bits/stl_construct.h:151; --Type <RET> for more, q to quit, c to continue without paging--; #18 0x00007fffeafc247e in std::allocator_traits<std::allocator<void> >::destroy<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > (__p=0x5555567f2310); at /usr/include/c++/13/bits/alloc_traits.h:674; #19 std::_Sp_counted_ptr_inplace<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x5555567f2300); at /usr/include/c++/13/bits/shared_ptr_base.h:613; #20 0x00005555555c9ad5 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x5555567f2300); at /usr/include/c++/13/bits/shared_ptr_base.h:346; #21 0x00005555555cb9f5 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x5555566c0330, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/shared_ptr_base.h:1071; #22 0x00007fffeaeb0346 in std::__shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x5555566c0328, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/shared_ptr_base.h:1524; #23 0x00007fffeaeb03ce in std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >::~shared_ptr (this=0x5555566c0328, __in_chrg=<optimized out>); at /usr/include/c++/13/bits/shared_ptr.h:175; #24 0x00007fffeaf9492a in std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > >::~pair (; this=0x5555566c0320, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_pair.h:187; #25 0x00007fffeaf63fa2 ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:16482,optimiz,optimized,16482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,"self.name = name; self.addNewInput('positions', datatype=""vector<Vec3d>"", value=positions, help=""test""); self.addNewOutput('average', datatype=""Vec3d"", help=""average""); ; def parse(self, arg):; pass; ; def init(self):; 	pass; ; def update(self):; value = [0, 0, 0]; for pos in self.positions:; value[0] += pos[0]; value[1] += pos[1]; value[2] += pos[2]; value[0] /= len(self.positions); value[1] /= len(self.positions); value[2] /= len(self.positions); self.cleanDirty(); self.average = [[-value[0],-value[1],-value[2]]]; pass. def createScene(rootNode):; loader = rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); psde = PyEng(rootNode, name=""PSDE"", positions=loader.findData('position').getLinkPath()); rootNode.createObject('TransformEngine', name='TE', input_position=""@loader.position"", translation=psde.findData('average').getLinkPath()); rootNode.createObject('OglModel', name=""visu"", position=""@TE.output_position"", triangles=""@loader.triangles"",; color=""1 0 0 1""); ```. With this syntax, I can create my engines definition once, and create as many as I want, on the fly, with any parameter I want for my input fields. It's actually even better, because:; - I don't have to create inputs with the fields I pass to the constructor. It could be simple data (addNewData vs addNewInput); - Construction of datafields is more explicit, thus less error-prone; - No need to go search for a decorator function somewhere in SofaPython, or to declare a dictionary of default arguments, everything is performed in the constructor. So, yeah, this PR is now virtually useless.; There's one thing I don't like with this syntax though, it's that the creation of the object is performed at the same time as it is assigned to the scene graph, which, in my opinion is not always desirable.; Something closer to this would be neat:; ```py; rootNode.addObject(PyEng(name='PSDE', positions=loader.findData('position').getLinkPath()); ```. I'll work on that in the following days :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442:1769,perform,performed,1769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442,3,"['load', 'perform']","['loader', 'performed']"
Performance,sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglV,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7481,Load,Loaded,7481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,sion.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7540,Load,Loaded,7540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/R,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5812,Load,Loaded,5812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1991,Load,Loaded,1991,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10587,Load,Loaded,10587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,space/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaAllCommonComponents.dylib; Using python: /usr/local/opt/python@2/bin/python2.7; **** sys.path ****. /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python; /usr/local/lib/python2.7/site-packages; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python27.zip; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac; /usr,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:3579,Load,Loaded,3579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['Load'],['Loaded']
Performance,"src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/8",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1866,Load,Loaded,1866,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Load'],['Loaded']
Performance,ss already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [WARNING] [ObjectFactory] Class already registered: AddFrameButtonSetting; [WARNING] [ObjectFactory] Class already registered: AddRecordedCameraButtonSetting; [WARNING] [ObjectFactory] Class already registered: StartNavigationButtonSetting; [WARNING] [ObjectFactory] Class already registered: AttachBodyButtonSetting; [WARNING] [ObjectFactory] Class already registered: FixPickedParticleButtonSetting; [WARNING] [ObjectFactory] Class already registered: Gravity; [WARNING] [ObjectFactory] C,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:13036,Load,Loaded,13036,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"ss; 6 10.11 1 2.48 5.59 2.69 0.22 2.69 4.51 ......copyKToEigen; 7 10.11 1 2.48 5.59 2.68 0.22 2.68 4.50 .......KfromTriplets; 6 12.80 1 0.24 0.59 0.28 0.04 0.28 0.46 ......copyJ1J2ToEigen; 7 13.01 1 0.05 0.28 0.06 0.01 0.06 0.10 .......copyJ2ToEigen; 6 13.07 1 8.17 14.53 9.14 0.76 9.14 15.33 ......Multiplication; 7 13.07 1 4.64 10.75 5.20 0.48 5.20 8.73 .......J1tKJ1; 7 18.28 1 0.39 1.26 0.43 0.06 0.43 0.72 .......J2tKJ2; 7 18.71 1 2.69 6.72 3.08 0.34 3.08 5.17 .......J1tKJ2; 7 21.79 1 0.39 1.20 0.42 0.06 0.42 0.71 .......J2tKJ1; 6 22.21 1 2.29 4.73 2.67 0.16 2.67 4.48 ......J1tKJ1-copy; 6 24.88 1 0 0.02 0 0 0 0 ......J2tKJ2-copy; 6 24.88 1 0.01 0.04 0.01 0 0.01 0.02 ......J1tKJ2-copy; 6 24.90 1 0.01 0.07 0.02 0 0.02 0.04 ......J2tKJ1-copy; ```. The speed up is quite disappointing. But the benchmarks explain it. The speed up depends on the size of the matrix, the sparsity and overall on the size of the intersection.; Yet, there is a speedup. And compared to the reference timings before the series of optimizations (https://github.com/sofa-framework/sofa/pull/2362), `MechanicalMatrixMapper` is about twice faster (in the example). Some notes:. - I added a skeleton to also support product of `CompressedRowSparseMatrix`, but it is not implemented yet. In `MechanicalMatrixMapper`, a `CompressedRowSparseMatrix` is converted to Eigen to do the product. It is not clear yet if the copy to Eigen is required if we are able to perform the fast product on a `CompressedRowSparseMatrix`. So, an implementation of the fast product of `CompressedRowSparseMatrix` may be introduced in the future. Otherwise, I'll remove the files.; - This work has been started by @Esther-R during her internship; - Contrary to the regular product, the product using the intersection can be parallelized for more speed up.; - More speed up in `MechanicalMatrixMapper` using multithreading can be considered. ______________________________________________________. By submitting this pull request, I acknowledge ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2394:3595,optimiz,optimizations,3595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2394,1,['optimiz'],['optimizations']
Performance,"ssible to enable it with the latest(?) cmake-gui but possible to generate a solution with the commandline version: `cmake -G""Visual Studio 2019"" -T ClangCL ..`; ## This PR; - add necessary cmake config to allow compilation (and avoid 1e999 warnings); - fix few problems detected with clang (rightly so); - change the FixParticlePerformerFactory shenanigan to be cleaner. ## Results; It appears that clang is somewhat more clever than cl.exe and seems to produces more optimized binaries.; Results are not always good, and really depends on the situation/scene. Few cases where cl is slightly faster than clang-cl; Some bench:; - `caduceus.scn -g batch -n 10000`; - cl: `21.2541 s ( 470.498 FPS)`; - clang-cl: `19.6914 s ( 507.836 FPS)`; - MeshMatrixMass.scn with 4096 steps (from SofaBenchmark); - cl: `25504 ms`; - clang-cl: `18161 ms`; - `examples/Benchmark/Performance/benchmark_cubes.scn -g batch -n 1000`; - cl: `36.7404 s ( 27.218 FPS`; - clang-cl: ` 37.8146 s ( 26.4448 FPS)`; - `examples/Benchmark/Performance/TorusFall.scn -g batch -n 1000`; - cl: `8.63699 s ( 115.781 FPS)`; - clang-cl: ` 7.72771 s ( 129.404 FPS)`; - `applications/plugins/SofaCUDA/examples/beam16x16x76-fem-implicit-CPU.scn -g batch -n 1000`; - cl: ` 113.022 s ( 8.8478 FPS))`; - clang-cl: ` 100.645 s ( 9.93587 FPS)`; - SofaBenchmark, a lot shows only improvement around 10-15% but some are interesting:; - `BM_FixedArray_construct<sofa::type::Vec3f>/8192`; - cl: ` 10.5 us`; - clang-cl: ` 6.42 us`; - `BM_Matrix_typemat3x3f_assign/512` this one is weird (the same bench with eigenmat is much closer); - cl: ` 3.44 us`; - clang-cl: ` 1.18 us`. ## Warning; pybind is not compatible with clang-cl (and I am sure a lot of other libraries), even gtest as it is was not compatible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/C",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2563:1171,Perform,Performance,1171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2563,1,['Perform'],['Performance']
Performance,store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginM,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7557,Load,Loaded,7557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"sure @jnbrunet ; These integration factors are not widely used (actually almost not used at all!). These factors define how to bring back the results of the constraint problem (Lagrange multipliers ) as position or velocity field. These factors usually only depend on the scheme.; For practical reason (I guess), these factors can be manually tuned in the UncoupledCC. The API in ODESolver (integration schemes) defining these factors is unclear and could be updated. See the functions:; - *getPositionIntegrationFactor*; - *getVelocityIntegrationFactor*; - *getIntegrationFactor*; - *getSolutionIntegrationFactor*. Does this answer your point?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-625827145:343,tune,tuned,343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369#issuecomment-625827145,1,['tune'],['tuned']
Performance,"t found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Det",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1626,load,load,1626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,t.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] L,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1205,Load,Loaded,1205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,"t.Engine.Select"",; ""Sofa.Component.IO.Mesh"",; ""Sofa.Component.LinearSolver.Direct"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""Sofa.Component.SolidMechanics.FEM.Elastic"",; ""Sofa.Component.SolidMechanics.Spring"",; ""Sofa.Component.StateContainer"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Engine.Select"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.GUI.Component"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Setting"",; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Topology.Container.Constant""]. rootNode.findData('gravity').value=[0,0,-10];; rootNode.findData('dt').value=0.01; ; # Plugin loading; rootNode.addObject('RequiredPlugin', pluginName=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject('OglSceneFrame', style=""Arrows"", ; alignment=""TopRight""). # Collision component; rootNode.addObject('DefaultPipeline'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', name='Proximity', alarmDistance=""1"", contactDistance=""0.5""); rootNode.addObject('DefaultContactManager', name=""Response"", response=""PenalityContactForceField""). ; # Membrane; membrane=rootNode.addChild(""Membrane""). membrane.addObject(""EulerImplicitSolver"");",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:1600,load,loading,1600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['load'],['loading']
Performance,"t.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geome",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4516,load,load,4516,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"t: updated `cmake-log.txt`. Last one was the wrong configuration by accident. I tried remaking the config, though it might not be 100% accurate. I used cmake-gui for the options, so here's the [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/4777146/CMakeCache.txt).; Here's the configuration process log of the `cmake [options] ..` command: [cmake-log.txt](https://github.com/sofa-framework/sofa/files/4777183/cmake-log.txt). Output is very long so I've attached it in this text file [log.txt](https://github.com/sofa-framework/sofa/files/4777142/log.txt). Probably the most notably part is on log.txt:385, which I'll post here. Note: I spaced it to make it visually easier to read. The original is all on a single line of course.; ```; /home/emdash00/Apps/git-apps/sofa/src/applications/plugins/SofaOpenCL/OpenCLIdentityMapping.cpp:71:16: error: duplicate explicit instantiation of; ‘class sofa::component::mapping::IdentityMapping<sofa::gpu::opencl::OpenCLVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float>,; 									 				 sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float> >’ [-fpermissive]; ```. I'm unsure of where the original instantiation is. I'm just trying to use the library since Ubuntu 19.10 doesn't have prebuilt packages yet. I don't think this is part of the issue; however, I'm using OpenCL for an Intel GPU. I wasn't sure how computationally intensive this library would be, but I thought might as well try to utilize my Intel HD Graphics Unit. . Here's an attachment of all relevant system specs using linux commands: [sysinfo.txt](https://github.com/sofa-framework/sofa/files/4777150/sysinfo.txt); In case of any discrepancy, here's a link to my CPU's spec page as listed by Intel: [Intel® Core™ i7-8550U Processor](https://ark.intel.com/content/www/us/en/ark/products/122589/intel-core-i7-8550u-processor-8m-cache-up-to-4-00-ghz.html)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419:2261,cache,cache-up-to-,2261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419,1,['cache'],['cache-up-to-']
Performance,tOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6513,Load,Loaded,6513,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"ta(&d_rotation, Vec3(), ""rotation"", ""Rotation of the DOFs"")); , d_scale(initData(&d_scale, Vec3(1.0, 1.0, 1.0), ""scale3d"", ""Scale of the DOFs in 3 dimensions"")); , d_transformation(initData(&d_transformation, type::Matrix4::s_identity, ""transformation"", ""4x4 Homogeneous matrix to transform the DOFs (when present replace any)"")); + , d_dataset1(initData(&d_dataset1, ""dataset1"", ""Data from dataset"")); , d_previousTransformation(type::Matrix4::s_identity ); {; addAlias(&d_tetrahedra, ""tetras"");; @@ -184,6 +185,8 @@ void MeshLoader::clearBuffers(); getWriteOnlyAccessor(d_pyramidsGroups).clear();; getWriteOnlyAccessor(d_polygonsGroups).clear();; ; + getWriteOnlyAccessor(d_dataset1).clear();; +; doClearBuffers();; }; ; diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; index d972c27d75..5fc1d75345 100644; --- a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; +++ b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; @@ -183,6 +183,7 @@ public:; Data< Vec3 > d_scale; ///< Scale of the DOFs in 3 dimensions; Data< type::Matrix4 > d_transformation; ///< 4x4 Homogeneous matrix to transform the DOFs (when present replace any); ; + Data< type::vector< SReal > > d_dataset1; ///< mesh dataset; ; virtual void updateMesh();; virtual void updateElements();; diff --git a/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp b/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; index fcf73fb5f2..241067ea0b 100644; --- a/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; +++ b/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; @@ -504,6 +504,27 @@ bool MeshVTKLoader::setInputsMesh(); }; ; }; +; + // hack to fill dataset1; + static bool notread = true;; + if (notread && reader->inputCellDataVector.size() > 0) {; + auto dataset1 = getWriteOnlyAccessor(d_dataset1);; + BaseVTKReader::VTKDataIO<float>* dataPointer = dynamic_cast<BaseV",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:3852,load,loader,3852,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['load'],['loader']
Performance,ted to the order in which the compiler is doing template instanciation vs un-used code removal. . Now the big picture is that any link force in the .h force to include the full definition of the target object which is way to much. ; Eg: from Node.h (which is included in hundreds of compilation units); ```cpp; #include <sofa/core/behavior/ForceField.h>; #include <sofa/core/behavior/BaseInteractionForceField.h>; #include <sofa/core/behavior/Mass.h>; #include <sofa/core/behavior/BaseProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseConstraintSet.h>; #include <sofa/core/topology/Topology.h>; #include <sofa/core/topology/BaseTopologyObject.h>; #include <sofa/core/topology/BaseMeshTopology.h>; #include <sofa/core/behavior/LinearSolver.h>; #include <sofa/core/behavior/OdeSolver.h>; #include <sofa/core/behavior/ConstraintSolver.h>; #include <sofa/core/behavior/BaseAnimationLoop.h>; #include <sofa/core/visual/VisualLoop.h>; #include <sofa/core/collision/Pipeline.h>; #include <sofa/core/loader/BaseLoader.h>; #include <sofa/core/objectmodel/Event.h>. class Sequence : MultiLink {} ;. Sequence<sofa::core::BehaviorModel> behaviorModel;; Sequence<sofa::core::BaseMapping> mapping;. Sequence<sofa::core::behavior::OdeSolver> solver;; Sequence<sofa::core::behavior::ConstraintSolver> constraintSolver;; Sequence<sofa::core::behavior::BaseLinearSolver> linearSolver;. Single<sofa::core::topology::Topology> topology;; Single<sofa::core::topology::BaseMeshTopology> meshTopology;; Sequence<sofa::core::topology::BaseTopologyObject> topologyObject;. Single<sofa::core::BaseState> state;; Single<sofa::core::behavior::BaseMechanicalState> mechanicalState;; Single<sofa::core::BaseMapping> mechanicalMapping;; Single<sofa::core::behavior::BaseMass> mass;; Sequence<sofa::core::behavior::BaseForceField> forceField;; Sequence<sofa::core::behavior::BaseInteractionForceField> interactionForceField;; Sequence<sofa::core::behavior::BaseProjectiveConstraintSet> projectiveConstraintSet;; Sequence<,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334378104:1222,load,loader,1222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334378104,1,['load'],['loader']
Performance,"ted when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, ple",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4348,load,load,4348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['load']
Performance,tersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loade,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7423,Load,Loaded,7423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"test concurrent access to LCPForceFeedback computeforce from another thread. This PR depends on #1576 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1581:5,concurren,concurrent,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1581,1,['concurren'],['concurrent']
Performance,"thanks for the PR @damienmarchal interesting; we could add the flag for discussion at next dev meeting maybe?. the state ""Loading"" could be in the constructor of any BaseObject .. to be discussed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3054#issuecomment-1165396054:122,Load,Loading,122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3054#issuecomment-1165396054,1,['Load'],['Loading']
Performance,"the code file of a scene that reproduces the error, using the Sphere and the Floor prefabs of stlib.physics.rigid. ```python; from stlib.scene import ContactHeader, MainHeader; from stlib.physics.rigid import Floor; from stlib.solver import DefaultSolver. def createScene(rootNode):. 	MainHeader(rootNode, gravity=[0.0,-9810.0,0.0])	; 	ContactHeader(rootNode, alarmDistance=5, contactDistance=2). 	ball = rootNode.createChild(""Floor""). 	totalMass = 1.0; 	volume = 1.0; 	inertiaMatrix = [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]. 	ball.createObject('MechanicalObject', name=""DOF"", template=""Rigid"", translation=[0.0,0.0,0.0], rotation=[0.0,0.0,0.0]); 	ball.createObject('UniformMass', name=""mass"", mass=[totalMass, volume, inertiaMatrix[:]]). 	ball.createObject('UncoupledConstraintCorrection'); 	ball.createObject('EulerImplicit', name='odesolver'); 	ball.createObject('CGLinearSolver', name='Solver'). 	visual = ball.createChild(""Floor Visual""); 	visual.createObject('OglModel', name=""Visual"", fileMesh=""ball.obj"", color=[0.1,0.0,1.0]); 	visual.createObject('RigidMapping'). 	# collision model for the ball. 	collision=ball.createChild(""FloorCollisionModel""); 	collision.createObject('MeshObjLoader', name='loader', filename=""ball.obj"", triangulate=""true""). 	#line code responsible for the crash (scr is mispelled); 	collision.createObject('Mesh', name=""mesh"", scr=""@loader""); 	# by writing src correctly, the scene works well . 	collision.createObject('MechanicalObject'). 	collision.createObject('Triangle'); 	collision.createObject('Line'); 	collision.createObject('Point'). 	collision.createObject('RigidMapping'); 	# end collision. 	Floor(rootNode, translation=[0.0,0.0,0.0],; uniformScale=10.0,; totalMass=0.0015, isAStaticObject=True). 	return rootNode. ````. [LoaderSRCcrash.zip](https://github.com/sofa-framework/sofa/files/2257023/LoaderSRCcrash.zip). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746:1582,load,loader,1582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746,4,"['Load', 'load']","['LoaderSRCcrash', 'loader']"
Performance,"the deprecated set. This is very interesting question but it deserve a whole issue & STC or an autocratic gentle decision :). To me the presented approach is interesting as:; - it is incremental and thus we don't have to wait any decision of a definitive list of components that have to be keep. We can already, small step after small step, moving the ones for which there is a agreement into the right set (and people not using the set will stop being bothered with them). ; - it is bi-directionnal, so people can work in parallel either to move the components into ""stable"" or into ""deprecated"". So team looking for the ""future"" should put their time on making a good ""stable set""; - the approach also cares about users because until a component is removed from the deprecated set"" a Sofa version can still be compiled with the deprecated components. ; - it is reversible, and each time a component is put into the ""deprecated"" set users of the component are warned when loading their scene, and thus, they can complain to sofa-dev that we shouldn't have deprecated a specific component (or that they are going to invest themself to maintain it). ; - it is complementary to organizing component sharing functionalities into module or plugins or packages (group of plugins) which also help to reduce the compilation time of sofa. . @untereiner I think in the existing sofa we have used component grouping (with modules or plugins) to handle lifetime management & functionally grouping & level of quality, which are different concerns, with a single tool (the modules). ; As you are proposing I dream of a clear re-organization of the different modules/plugins but I this sound very ambitious to me and I remember of a meeting 2 years ago where this was already discussed...and nothing moved. My assumption is that this is because the step is so big that no-one can afford it. . This is why I'm trying to find less ambitious but more incremental approach. . Eg with the current approach if you have 1",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332339715:1501,load,loading,1501,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332339715,1,['load'],['loading']
Performance,"the hierarchy containing the `doAddJMInvJtLocal` function. - Master branch (commit df49f3a754264489b14db69b38862a5b45d57168). ```; 100 iterations done in 12.9731 s ( 7.70827 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 15.41 1 0.01 121.72 98.03 20.57 98.03 77.48 .....Get Compliance; ```. - This PR (without parallelization). The benchmark should be similar to the master branch. ```; 100 iterations done in 13.1572 s ( 7.6004 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 16.31 1 0.01 134.76 98.34 22.21 98.34 76.54 .....Get Compliance; ```. - This PR (with parallelization). ```; 100 iterations done in 5.94345 s ( 16.8253 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 15.76 1 0.01 30.62 26.85 5.55 26.85 47.91 .....Get Compliance; ```. On my machine there is a nice speedup of x3.66 on the `Get Compliance` timer, and x2.18 in terms of global FPS. # Additional Benchmarks. I wanted to make sure that the usual solve of SparseLDLSolver did not regress in terms of performances. I benchmarked `examples/Component/LinearSolver/Direct/FEMBAR_SparseLDLSolver.scn` on 10000 steps. - Master branch (commit df49f3a754264489b14db69b38862a5b45d57168). ```; 10000 iterations done in 28.2657 s ( 353.785 FPS).; ```. - This PR. ```; 10000 iterations done in 28.3223 s ( 353.078 FPS).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986:1326,perform,performances,1326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986,1,['perform'],['performances']
Performance,the init() function of this loader does nothing. Everything is already in the callback,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-745160497:28,load,loader,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-745160497,1,['load'],['loader']
Performance,"the one installed by aptitude. Any hint / solution is welcome. ``; $ cmake ..; ``; -- The C compiler identification is GNU 9.3.0; -- The CXX compiler identification is GNU 9.3.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Install prefix: /home/thebigone/projects/sofa/build/install; -- Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.2"") ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel/SofaFramework/SofaMacros.cmake:526 (find_package); SofaKernel/modules/SofaHelper/CMakeLists.txt:6 (sofa_find_package). -- Configuring incomplete, errors occurred!; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/the",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:1146,Perform,Performing,1146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,2,['Perform'],['Performing']
Performance,"this means that in your case when you load the cube.obj of size 2x2x2, by default the BB will be increase. If you want to keep the accurate size of your mesh you need to know min and max...; Or do I miss something?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/308#issuecomment-355919112:38,load,load,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/308#issuecomment-355919112,1,['load'],['load']
Performance,tidy/checks/objc-avoid-spinlock.html) |; | [cppcoreguidelines-interfaces-global-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-interfaces-global-init.html) | [objc-forbidden-subclassing](https://clang.llvm.org/extra/clang-tidy/checks/objc-forbidden-subclassing.html) |; | [cppcoreguidelines-no-malloc](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-no-malloc.html) | [objc-property-declaration](https://clang.llvm.org/extra/clang-tidy/checks/objc-property-declaration.html) |; | [cppcoreguidelines-owning-memory](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extra/clang-tidy/checks/performance-faster-string-find.html) |; | [cppcoreguidelines-pro-bounds-array-to-pointer-decay](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](https://clang.llvm.org/extra/clang-tidy/checks/performance-for-range-copy.html) |; | [cppcoreguidelines-pro-bounds-constant-array-index](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidel,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:21849,perform,performance-for-range-copy,21849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-for-range-copy']
Performance,"tion/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:28027,queue,queue,28027,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['queue'],['queue']
Performance,"tionForceField in MechanicalVReallocVisitor/MechanicalVFreeVisitor as it might crash in multithreaded context; - Add `Contact::computeResponse()` and `Contact::finalizeResponse()` to separate thread-safe from sequential parts of the response computations; - Implement thread-safe Data engine/links updates by adding a lock while calling update().This requires that requestUpdate() or requestUpdateIfDirty() be called instead of update() directly, which is now protected.Bonus side effect is that it no longer matter where or if engines call cleanDirty() in their update method.; - Update all engines to new thread-safe design; - Add execution info in Task and index in WorkerThread; - Add support for multithreaded task logging (for visual profiling); - Add some const correctness in getColor and getName methods. ### Improvements; - Remove ClassInfo, deprecated in favor of BaseClass, and make sure all static instances are initialized while registering objects in the factory, to FIX ""pure virtual call"" crashes with visual c++ in multi-threaded contexts; - Replace `Creator<Contact::Factory,` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:1471,multi-thread,multi-threaded,1471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['multi-thread'],['multi-threaded']
Performance,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1820:1063,load,loadQtConfWithCustomPrefix,1063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820,3,"['Load', 'load']","['Loaded', 'loadQtConfWithCustomPrefix', 'loading']"
Performance,"to provide a shell with an environment containing all required dependencies to build the project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:1270,cache,cache,1270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,2,['cache'],['cache']
Performance,"to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/build/lib/libSofaPython.dylib; [INFO] [Python_scene_test] running /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py; ERROR: wrong number of arguments; [ERROR] [PythonScript] IndexError: list index out of range; File ""/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py"", line 15, in <module>; DAMPING_COEF = float( sys.argv[1] ). [ERROR] [SofaPython] Script (file:damping) import error; [ERROR] [PythonScriptController(PythonScriptController)] load error (file '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py' not parsable); ../applications/plugins/SofaTest/Python_test.cpp:263: Failure; Failed; python error; [ FAILED ] Batch/Python_scene_test.sofa_python_scene_tests/0, where GetParam() = 48-byte object <81-00 00-00 00-00 00-00 7E-00 00-00 00-00 00-00 00-4D 60-FA C4-7F 00-00 80-4D 60-FA C4-7F 00-00 10-4E 60-FA C4-7F 00-00 10-4E 60-FA C4-7F 00-00> (1051 ms); [----------] 1 test from Batch/Python_scene_test (1051 ms total); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176:1858,load,load,1858,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176,1,['load'],['load']
Performance,"tory] Class already registered: MappingGeometricStiffnessForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PrecomputedConstraintCorrection<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: PrecomputedConstraintCorrection<Vec1d>; [WARNING] [ObjectFactory] Class already registered: PrecomputedConstraintCorrection<Vec3d>; [WARNING] [ObjectFactory] Default template for class SlidingConstraint already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: SlidingConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StopperConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec2d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec3d>; [WARNING] [ObjectFactory] Class already registered: UniformConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UnilateralInteractionConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DOFBlockerLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DOFBlockerLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: FixedLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: FixedLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMContactConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: LMConstraintSolver; [WARNING] [ObjectFactory] Class already registered: LMConstraintDirectSolver; [INFO] [PluginManager] Loaded plugin: /home/jnbrunet/sources/sofa/build/lib/libSofaConstraint.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:5961,Load,Loaded,5961,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,1,['Load'],['Loaded']
Performance,"tryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:1488,load,loaded,1488,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,2,['load'],"['load', 'loaded']"
Performance,ttps://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:23236,perform,performance-move-const-arg,23236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-move-const-arg']
Performance,tu. ---------------------------------------------. ### Environment; MAC with M1 Process; **Context**. - System: MAC OS Celledar; - Version of SOFA: mast branch; - State: Build Directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >; `➜ bin ./runSofa ; [INFO] [runSofa] PluginRepository paths = /Users/hemingshan/Code/sofa/build/plugins:/Users/hemingshan/Code/sofa/build/collections:/Users/hemingshan/Code/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.d,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1204,Load,Loaded,1204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"u can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead having a library which depends on gtest and SofaCore which ; - factorize some ini",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1719,load,loaded,1719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['load'],['loaded']
Performance,ugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env v,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8649,Load,Loaded,8649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,ugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/C,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5112,Load,Loaded,5112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,ugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with conte,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9069,Load,Loaded,9069,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,ugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3346,Load,Loaded,3346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"ugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithD",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8522,Load,Loaded,8522,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,uginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6600,Load,Loaded,6600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"uginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:9060,Load,Loaded,9060,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,uginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/sto,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4832,Load,Loaded,4832,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,uginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2515,Load,Loaded,2515,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,uild/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Relea,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8236,Load,Loaded,8236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,uild/bin/Release; [INFO] [runSofa] DataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/share;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/examples;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.C,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1273,Load,Loaded,1273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData (2 ms); [ RUN ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected; ----------------------------------------------------------------------; Ran 1 test in 0.001s. OK; [ OK ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected (1 ms); [ RUN ] SofaPython",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3999,load,loaded,3999,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,"unload() function of PluginManager was just removing the entry of the plugin in its map, but this one was effectively still loaded in the process memory. (on Windows, you could still see it using ProcessExplorer) ; This PR fixes it (i.e really unloads from memory). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1274:124,load,loaded,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1274,1,['load'],['loaded']
Performance,urn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_s,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2944,Load,Loaded,2944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"using failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Co",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1124,load,load,1124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['load'],['load']
Performance,"utomatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGen",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6245,Load,Loaded,6245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,vs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginMa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5756,Load,Loaded,5756,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,what test should be performed to check the performance impact @damienmarchal ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2285#issuecomment-892534841:20,perform,performed,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285#issuecomment-892534841,2,['perform'],"['performance', 'performed']"
Performance,"with a random color; color='red'; colorRandom = random.randint(1,6); if colorRandom==1:; color = 'red'; if colorRandom==2:; color = 'green'; if colorRandom==3:; color = 'blue'; if colorRandom==4:; color = 'yellow'; if colorRandom==5:; color = 'cyan'; if colorRandom==6:; color = 'magenta'; node = self.createCube(self.rootNode,'particle'+str(self.particleCount),0,0,0,random.uniform(-10,10),random.uniform(10,30),random.uniform(-10,10),color); self.particleCount+=1; # add the controller script; node.createObject('PythonScriptController', filename='fontain.py', classname='Particle'); return node; ; # optionnally, script can create a graph...; def createGraph(self,node):; node.createObject('FreeMotionAnimationLoop'); node.createObject(""GenericConstraintSolver"", maxIterations=""1000"", tolerance=""0.003"", printLog=""false""); print 'Fontain.createGraph called from node '+node.name ; node = self.spawnParticle(); node.init(); return 0. def onMouseButtonLeft(self, x,y,pressed):; print ""pouet""; node = self.spawnParticle(); node.init(); return 0; ; def onScriptEvent(self,eventName, data, sender):; print 'onScriptEvent eventName='+eventName+' data='+str(data)+' sender='+sender.name; if eventName=='below_floor':; print ""REMOVE CHILD""; self.rootNode.removeChild(senderNode); self.spawnParticle(). class Particle(Sofa.PythonScriptController):; # called once the script is loaded; def onLoaded(self,node):; self.myNode = node; self.particleObject=node.getObject('MecaObject'); ; # called on each animation step; def onBeginAnimationStep(self,dt):; position = self.particleObject.findData('position').value; if position[0][1]<-5.0:; self.myNode.sendScriptEvent('below_floor', 0); return 0; ```. Running this scene does not crash on my machine, but does show the warning (probably because free_position is not set / modified by the scene. ; Seems like a major bug to me. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/725:2962,load,loaded,2962,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/725,1,['load'],['loaded']
Performance,"with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolve",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2855,Load,Loaded,2855,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2030:1263,perform,performant,1263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030,1,['perform'],['performant']
Performance,x/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8005,Load,Loaded,8005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"y registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Default template for class SlidingConstraint already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [INFO] [PluginManager] Loaded plugin: /home/jnbrunet/sources/sofa/build/lib/libSofaConstraint.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:2577,Load,Loaded,2577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,1,['Load'],['Loaded']
Performance,yContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [WARNING] [ObjectFactory] Class already registered: AddFrameButtonSetting; [WARNING] [ObjectFactory] Class already registered: AddRecordedCameraButtonSetting; [WARNING] [ObjectFactory] Class already registered: StartNavigationButtonSetting; [WARNING] [ObjectFactor,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:12732,Load,Loaded,12732,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"yes, I had a version where you impose the number of step from start so you don't swap the buffer. But you loose the nice ""moving"" display.; For me the idea of this tool is to debug so I'm not sure spending time on optimizing it is worth it. My assumption is the simulation is slower but the ratio of % duration for each step is the same. Maybe I'm wrong.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2142#issuecomment-852841815:214,optimiz,optimizing,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2142#issuecomment-852841815,1,['optimiz'],['optimizing']
Performance,"yes, a EdgeSetGeometryAlgorithms should not be inside a node without mechanicalObject nor a topology container (I know a lot of check are still missing :( ). ; I'm even surprise, it works with this: ; ```; <MeshTopology src=""@loader"" />; <EdgeSetGeometryAlgorithms />; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/973#issuecomment-483440603:226,load,loader,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/973#issuecomment-483440603,1,['load'],['loader']
Performance,ylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mappi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2947,Load,Loaded,2947,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,you have some compilation error... not sure if it is relevant...; could you double check before merging; ``` /builds/workspace/sofa-framework/PR-4880/fedora_clang_options_release/src/Sofa/GUI/Common/src/sofa/gui/common/MouseOperations.cpp:104:12: error: cannot initialize return object of type 'sofa::gui::component::performer::InteractionPerformer *' with an lvalue of type 'const sofa::gui::component::performer::InteractionPerformer *'```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4880#issuecomment-2265771315:317,perform,performer,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4880#issuecomment-2265771315,2,['perform'],['performer']
Performance,|; | [cppcoreguidelines-no-malloc](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-no-malloc.html) | [objc-property-declaration](https://clang.llvm.org/extra/clang-tidy/checks/objc-property-declaration.html) |; | [cppcoreguidelines-owning-memory](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extra/clang-tidy/checks/performance-faster-string-find.html) |; | [cppcoreguidelines-pro-bounds-array-to-pointer-decay](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](https://clang.llvm.org/extra/clang-tidy/checks/performance-for-range-copy.html) |; | [cppcoreguidelines-pro-bounds-constant-array-index](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:22133,perform,performance-implicit-conversion-in-loop,22133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-implicit-conversion-in-loop']
Performance,"~~Last one (?) 🤔~~. #1527 . based on:; - #2813 . Deprecates _**SofaBaseVisual**_, ; Deprecates partially **SofaUserInteraction** and **_SofaGraphComponent_**. Gathers ""general"" configuration settings component in **Sofa.Component.Setting**; and Controller related things in **Sofa.Component.Controller**. The rest of configuration setting was originally present as well, plus the ""performer"" (inciseperformer, addcameraperformer...) but those will be added in a separate Sofa.GUI family modules). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2843:381,perform,performer,381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2843,1,['perform'],['performer']
Performance,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1834:207,load,load,207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834,1,['load'],['load']
Performance,"Здравствуй @mariabul . The [ERROR] [XMLParser] means that the error was emitted by the xml parser. Having such error indicates that the content of the file you are trying to parse is considere as invalid xml content. . This happens when the file is empty or there is missing closing tag ```xml </>``` and all those kind of things. So I know it is trivial but can you first check that the content of the file is the one from our repository and that it was not changed ? . If it is then maybe it is a more complex issue.; I just checked the file you are trying to load and noticed that it is missing the xml prefix.; ```xml; <?xml version=""1.0"" encoding=""UTF-8""?>; ...; ```. Your github account says you are from moscow, so I wonder if this could be a character encoding issue. Maybe there is a cyrillic character encoding set on your system and as the file does not specifying the encoding of the XML parser it use the default one which result in unloadable file. . Could you try if specifying the xml encoding helps ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/569#issuecomment-360149494:562,load,load,562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/569#issuecomment-360149494,1,['load'],['load']
Performance,"⚠-For MSVC only; ⚠-in Release mode only; ⚠-with CMake flag SOFA_ENABLE_LINK_TIME_OPTIMIZATION. Enable Link-time optimization to whole SOFA project.; (with caduceus.scn : w/o: 170fps, w/: 190fps). WARNING: typical SOFA compilation takes 20GB!🥴. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1468:112,optimiz,optimization,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1468,1,['optimiz'],['optimization']
Performance,"👍 for removing sofa::helper::io::Mesh*. There is however an issue that the support for loading texture coordinates was removed from MeshObjLoader, so the OglModel version on the master can only have textures when using these deprecated loaders. In our latest integration branch we reverted this removal of texcoords support and fixed it to have the same level of support using MeshObjLoader+OglModel as when loading the file directly in OglModel (most notably handling of ""seams"" where a single vertex has multiple texture coordinates). The relevant commits are:; - https://github.com/InSimo/sofa/commit/915ee46368efe140b242759a0110682f71200dc1; - https://github.com/InSimo/sofa/commit/08493b9ab5c8ea376ba9a7f9a2cea3e81f513511; - https://github.com/InSimo/sofa/commit/e6bec10562ab797963027003c2282cbc24a53bb9; - https://github.com/InSimo/sofa/commit/1925b381b7d8cb939d250ab24e92fb28df918c0b. To be merged to the master the first commit need to be done in a cleaner way than a full revert, which removed later refactorings like apparently the introduction of a File class.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/42#issuecomment-298865553:87,load,loading,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/42#issuecomment-298865553,3,['load'],"['loaders', 'loading']"
Safety," - Remove ClassInfo, deprecated in favor of BaseClass, and make sure all static instances are initialized while registering objects in the factory, to FIX ""pure virtual call"" crashes with visual c++ in multi-threaded contexts; - Replace `Creator<Contact::Factory,` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. #",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:2236,avoid,avoid,2236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['avoid'],['avoid']
Safety," ZLIB; - Added to SofaMiscFem: Newmat; - SofaGeneral; - Added to SofaDenseSolver: Newmat; - Added to SofaGeneralLoader: ZLIB; - SofaGui; - Moved to SofaGuiQt: Qt + lots of options about QtViewer, QGLViewer, VSync, ...; - Modularized modules (oh yeah); - SofaPreconditioner: removed Newmat, added SofaSparseSolver; - SofaExporter: added ZLIB; - Plugins; - SofaMiscCollision: added SofaDistanceGrid; - SofaImplicitField: added SofaPython; - Registration: removed SofaOpenglVisual; - image: added ZLIB; - Flexible: added SofaPython. ## Rework all YYY_HAVE_XXX variables to reduce their scope. This is important for future global modularization of SOFA. - Variables are now named upon their module. . - Whenever you need to use the YYY_HAVE_XXX of another module, you surely should declare your own MYMODULE_HAVE_XXX instead. - All those new YYY_HAVE_XXX variables are booleans, so they can be used in CMake with `if(YYY_HAVE_XXX)` and in C++ (if correcly propagated via a config.h.in file) with `#if YYY_HAVE_XX` or `if(YYY_HAVE_XXX)`. - Add sofa_find_package and sofa_set_bool macros to auto create YYY_HAVE_XXX variables. - Edit sofa_install_targets to call `configure_file()` on any *.h.in found in target sources (the sources that are given to `add_library()`). :warning: Here is a quick tuto about [how to correctly add and propagate a dependency](https://gist.github.com/guparan/0b0ed00ad60b740f85b794cdff255229). ## Rework #1121 to avoid nested projects. - Use SOFA_NO_OPENGL to build an OpenGL-free version of SofaGuiQt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1137:1916,avoid,avoid,1916,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1137,1,['avoid'],['avoid']
Safety, [modernize-use-transparent-functors](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-transparent-functors.html) |; | [clang-analyzer-unix.cstring.NullArg](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-unix.cstring.NullArg.html) | [modernize-use-using](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-using.html) |; | [clang-analyzer-valist.CopyToSelf](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.CopyToSelf.html) | [mpi-buffer-deref](https://clang.llvm.org/extra/clang-tidy/checks/mpi-buffer-deref.html) |; | [clang-analyzer-valist.Uninitialized](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.Uninitialized.html) | [mpi-type-mismatch](https://clang.llvm.org/extra/clang-tidy/checks/mpi-type-mismatch.html) |; | [clang-analyzer-valist.Unterminated](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.Unterminated.html) | [objc-avoid-nserror-init](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-nserror-init.html) |; | [cppcoreguidelines-c-copy-assignment-signature](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-c-copy-assignment-signature.html) | [objc-avoid-spinlock](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-spinlock.html) |; | [cppcoreguidelines-interfaces-global-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-interfaces-global-init.html) | [objc-forbidden-subclassing](https://clang.llvm.org/extra/clang-tidy/checks/objc-forbidden-subclassing.html) |; | [cppcoreguidelines-no-malloc](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-no-malloc.html) | [objc-property-declaration](https://clang.llvm.org/extra/clang-tidy/checks/objc-property-declaration.html) |; | [cppcoreguidelines-owning-memory](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extra/clang-tidy/checks/performance-faster-string-find.html,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:20612,avoid,avoid-nserror-init,20612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['avoid'],['avoid-nserror-init']
Safety," `SofaPython.script.Controller` that somewhat fixes some of the issues by implementing `__new__` in a derived Python class, intercepting and returning the control instance and optional initialization arguments, but overall it feels more like a hack. ## This PR. This PR simply provides a clean binding for instance creation. You need to provide a node as a first argument, but otherwise Controllers now act as any other python object. The old behavior still works, should you need it. ```python; ; import Sofa ; class Script(Sofa.PythonScriptController):. def __init__(self, node, *args, **kwargs):; self.bacon = kwargs.pop('egg', 'spam'). def onBeginAnimationStep(self, dt):; print(self.bacon). ; def createScene(node):; script = Script(node, egg = 'spam'); . ```. Creating instances directly no longer calls `onLoaded` nor `createGraph`:. - nothing is actually loaded; - code in `createGraph` really belongs to `__init__` anyways. This behavior can be changed of course, maybe a warning can/should be emitted if the instance creation detects a derived implementation. Comments welcome :). The PR also removes heavy copypasta in some files, removes unneeded `extern ""C""` linkage and a few other cosmetic changes. # Changelog. - `PythonScriptController` and derived classes are now instantiable directly in python. The constructor requires a `Node` as first parameter.; - `onLoaded` and `createGraph` entry points are no longer called when classes are instantiated directly from python. Corresponding code belongs to the derived class constructor.; - creating instances ""the old way"" through `node.createGraph` has unchanged behavior; - the workaround module `SofaPython.script` now features a deprecation message, together with a derived class easing transition (calls `createGraph` on construction, warns if `onLoaded` is defined); - updated `ControllerVariable.py` example ; - some minor cleanups; ______________________________________________________; <!--- Please leave this at the end of your m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283:2528,detect,detects,2528,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283,1,['detect'],['detects']
Safety," ```; ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::constraint::lagrangian::model::UnilateralInteractionConstraint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::addContact(double, sofa::type::Vec<3u, double>, double, int, int, long, long long); sofa::component::collision::response::contact::FrictionContact<sofa::component::collision::RigidDistanceGridCollisionModel, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::createResponse(sofa::core::objectmodel::BaseContext*); sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionResponse(); sofa::simulation::PipelineImpl::computeCollisionResponse(); sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::grap",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533:1326,detect,detection,1326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533,1,['detect'],['detection']
Safety," ```; ########## SIG 6 - SIGABRT: usually caused by an abort() or assert() ##########; sofa::helper::BackTrace::sig(int); pthread_kill; raise; abort; free; std::__new_allocator<int>::deallocate(int*, unsigned long); std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long); std::_Vector_base<int, std::allocator<int> >::~_Vector_base(); std::vector<int, std::allocator<int> >::~vector(); sofa::type::vector<int, sofa::type::CPUMemoryManager<int> >::~vector(); sofa::linearalgebra::CompressedRowSparseMatrixGeneric<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixGeneric(); sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixMechanical(); void std::_Destroy<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >(sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>*); std::_Sp_counted_ptr_inplace<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose(); std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release(); std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count(); std::__shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr(); std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >::~shared_ptr(); std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > >::~pair(); std::_Rb_tree<sofa::core::behavior::BaseMechanicalState*, std::pair<sofa::core::b",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:118,abort,abort,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,2,['abort'],['abort']
Safety," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4221:1936,Avoid,Avoid,1936,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221,1,['Avoid'],['Avoid']
Safety," have the following comments:. - The examples of the original PSDE contribution get broken with these commits, so this should be fixed. If you want to provide new examples, that’s also ok! In the case of PSDEExamples/01-basic/ changing the type string in DataEngine.py from 'd' to 'int' already fixes the problem. For PSDEExamples/02-advanced/ I couldn’t find the error immediately. . - Regarding the question of linking and automatic deriving of data-types for Inputs my opinion is similar to Damien’s:. > Sure...what we want to do is to create a new data with the exact same type of the data pointed by a link. So making a clone of an existing data (to get its type) and then initialize its parent would do the trick without needed all the factory and datatypename things. . I also do think that the existing linking mechanism could be complemented by a cloning feature that creates a copy of a BaseData object. Probably just a clone()-function in BaseData. This would avoid the implementation of a “heavy-weight” factory, like Damien said. To add this data to the correct object (the PSDE) it is only necessary to set the owner, I think. Finally, linking is done by using setParent(). In this way the user can program freely in C++ without worrying about whether his newly defined compound type needs to be made available in the factory. - Regarding the question of linking and automatic deriving of data-types for Outputs my ideas are not as concrete, but maybe helpful. For me there exist two cases:. 1) The Output of the PSDE is connected to an Input of a sofa-object that has static datas, e.g., sofa-objects whose code is written in C++. An example for such an object would be MechanicalObject (MO) that always has the same data (position, velocity, force, …). 2) The Output of the PSDE is connected to a scripted sofa-object, like another PSDE or similar. For case 1.:. It could be possible to define a special BaseData with a name but vacant type. This is a kind of “forward declaration” for",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416:1009,avoid,avoid,1009,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416,1,['avoid'],['avoid']
Safety," it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: fix principal values ordering with input matrix is diagonal + uninitialized value warning; - VisualModelImpl: fix wrong object (triangles) called when adding quads in handleTopologyChange(); - VoxelGridLoader: `std::unique` result was not used. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/756:1912,avoid,avoid,1912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/756,1,['avoid'],['avoid']
Safety," it no longer matter where or if engines call cleanDirty() in their update method.; - Update all engines to new thread-safe design; - Add execution info in Task and index in WorkerThread; - Add support for multithreaded task logging (for visual profiling); - Add some const correctness in getColor and getName methods. ### Improvements; - Remove ClassInfo, deprecated in favor of BaseClass, and make sure all static instances are initialized while registering objects in the factory, to FIX ""pure virtual call"" crashes with visual c++ in multi-threaded contexts; - Replace `Creator<Contact::Factory,` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment,",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:1984,safe,safe,1984,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['safe'],['safe']
Safety," load all the available plugins. Loading a library in the process memory will have several side effects which are difficult to anticipate before hand. The major one is the evaluation of all the global variables, which will result in populating the `ObjectFactory` with all the components that this library contains. I would suggest something different for this kind of having a list of default plugins that are loaded directly with your application ( here `runSofa` ). - derive a sort of sofa plugin manifest file, which can be generated as a post-build step. This should be an easy to parse file which could contain the various informations exposed by the `getModuleName()`, `getModuleVersion()`... without having to load the library in the process memory. This manifest file must be stored in an easy to find location in your build tree, an be installed properly ( they need also to be bundled when you deploy your application ). That means they should be located with a similar relative path with respect to the application ( `runSofa` ) when in the build tree or in the install tree. There should be a proposal about that to define : ; - the manifest file type ( ie how are we going to parse it ? json xml text ? ); - the manifest file content itself. - any application could then define the list of predefined plugin it wants to load using a simple configuration file. A default configuration can be provided, but it could be easily overriden. With this mechanism, no recompilation is required when you want to change the list of default plugins, you just change the config file. NB : a bit unrelated but there is a small code ""snippet"" that can be used to recover all the components attached to a library in two lines ; ```cpp; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin; static std::string classes = sofa::core::ObjectFactory::getInstance()->listClassesFromTarget(sofa_tostring(SOFA_TARGET));; return classes.c_str();; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188:2010,recover,recover,2010,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188,1,['recover'],['recover']
Safety," of objects with static storage duration is undefined across translation units. This is the first reason why I introduced the `init()` functions: to make initialization deterministic and reliable. And this is the same reason why it's better to call those functions explicitely, at the _right_ time: the program will work correctly by design, not by coincidence;. * **readability** (or something like that): calling the initialization function ""manually"" makes programs more readable: you can just start from the `main()` function and understand what code is going to run without actually running the code inside a debugger (or reading the entirety of SOFA's source code);. * **choice** (or whatever): with an explicit call to `init()`, an application writer gets to decide both *whether* and *when* to initialize SOFA. ### Now... In the end, I didn't actually bother to search for any single piece of initialization code in SOFA and move it into the appropriate init() function, so the init() functions are pretty light, but the setup is there. Also, the static-dynamic-initialization trick is used all over the place in SOFA, and what happens in the init() functions is ridiculous compared to all the code that probably runs when SOFA is loaded, so here again it is a drop in the ocean, but, I think, a step in the right direction. ### Anyway... > What I don't understand is why the above code snipped does not simply cleanup() the library in the destructor, since the latter is being called while the library unloads and this is the last chance to actually clean things up, instead of (trying to) emit a warning while the whole program is being terminated. @maxime-tournier The CleanupCheck thingy is disposable; it's a just safeguard, a way to tell developpers about the `init()` and `cleanup()` function. You're right, this is almost the last chance to call cleanup(), but no _guarantee_ of correctness. Hope this helps,; Marc Legendre. --. > trying to call `std::exit` in some plugin. _Sweating_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280028946:2284,safe,safeguard,2284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280028946,1,['safe'],['safeguard']
Safety," rough version of the model.; My problem is that when I animate the simulation I get the following warning message form the command window:. > [WARNING] [CGLinearSolver(CGLinearSolver)] den = 0.0, break the iterations. And then the simulation doesn't move anymore.; My code is reported below. `; from turtle import position; from splib3.objectmodel import SofaPrefab; from splib3.numerics import getOrientedBoxFromTransform; import Sofa. def createScene(rootNode):. pluginNameList = [""Sofa.Component.Engine.Select"",; ""Sofa.Component.IO.Mesh"",; ""Sofa.Component.LinearSolver.Direct"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""Sofa.Component.SolidMechanics.FEM.Elastic"",; ""Sofa.Component.SolidMechanics.Spring"",; ""Sofa.Component.StateContainer"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Engine.Select"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.GUI.Component"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Setting"",; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Topology.Container.Constant""]. rootNode.findData('gravity').value=[0,0,-10];; rootNode.findData('dt').value=0.01; ; # Plugin loading; rootNode.addObject('RequiredPlugin', pluginName=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:1098,Detect,Detection,1098,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['Detect'],['Detection']
Safety," the same factors for the compliance matrix computation and the correction computation as the one used in LinearSolverConstraintCorrection. ### Cleans; - Clean and Optimize UncoupledConstraintCorrection, factorize code between rigids and vecs, optimize addComplianceInConstraintSpace significantly for large number of constraints.; - Move new constraint accumulation visitors from GenericConstraintSolver.h to MechanicalVisitor.h so that they can be used by other solvers.; - Code refactoring in GenericConstraintCorrection. ### Bugfixes; - Fix FreeMotionAnimationLoop allocates the freeposition / freevelocity as first thing in the time step.; - Fix Haptic mode with haptic influence from constraints applied on all frames. It was not working well on the simulation side.; - Add a correction velocity factor and correction position factor as data in UncoupledConstraintCorrection.; - Fix, the GenericConstraintSolver was not providing the correct number of interations for profiler stats.; - GenericConstraintCorrection's ODESolver is now searched locally.; - Fix the Local Jacobian Matrix. It was not resized when no more constraints were applied on a MechanicalState.; - UncoupledConstraintCorrection for rigid is now in a 7 value vector. When using the default initialization of the compliance using the mass matrix of the rigid the linear part of the compliance was added twice. ### Moved files; - Move contact identifier code in a separate file to avoid inelegant FrictionContact.h inclusion in each contact class file. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/484:2286,avoid,avoid,2286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/484,1,['avoid'],['avoid']
Safety," the underlying c++ type used if the class is templated). It was decided to unify all the scene template/type to use the same convention as the one used in DataTypeInfo<>. So ```f``` instead of ```float```, ```vector<f>``` instead of ```vector<float>```, ```Vec3d``` instead of ```Vec<3, double>```. Unifying the other way around would have implied to use ```Vec<3, double>``` in our scene templates... which was a bit too much :); With that in mind, the current implementation of DataExchange is behaving exactly as it should. . The unittest you are pointing is showing a normal behavior. This behavior is that the template type that does not have a Name() static method and used in a class that is not implementing GetCustomTemplate will fall back to the automatic generation decoded from the typeid(). But this automatic generation is the code we want to get rid of (if one day someone has enough time to fix that) and not desired behavior to align with. Automatic decoding function to avoid breaking too much things until future evolution. . So currently the DataExchange implementation is using GetCustomClassName in order to implement consistent templates name with the other sofa components and not relying on the automatic generation. . If you are interested in unifying things i would recommend:; short term: implement a way to automatically use the DataTypeInfo<>::name() in the NameDecoder. If I remember well initially we didn't wanted to... because sofa::defaulttype was not a dependency of sofa::helper but now we have cleaned a lot that part it is possible to make something quickly. This would allow to remove all the GetCustomClassName in our code base to directly forward to DataTypeInfo<DataType>::name() when available instead of falling back. middleterm: add deprecation management to the falling back code to warn user it will disapear (when it was done we didn't has deprecation menagement...maybe it is worth having a look at that part nowaydays). longterm: remove all that cr",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952:1119,avoid,avoid,1119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307815952,1,['avoid'],['avoid']
Safety," thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is executed.; - DDGNode should never be copied to ensure thread safe. Add private copy constructor that gives compilation error to ensure that.; - Compilation fixes for compatibility with boost 1_55. Corrected also the copyright notice.; - Fix execution freeze bug due to simultaneous and reciprocal task stealing between 2 threads (WorkerThread).; - Fix data race at startup, WorkerThread:mTaskScheduler was set by the main thread while being read by the worker thread. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:3511,detect,detection,3511,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,2,"['detect', 'safe']","['detection', 'safe']"
Safety," to a scripted sofa-object, like another PSDE or similar. For case 1.:. It could be possible to define a special BaseData with a name but vacant type. This is a kind of “forward declaration” for the Output. Then, by extending the linking mechanism one could think of the following: At the time of parsing, a sofa-object (e.g. MO) will establish the link between one of its Inputs to the Output of a PSDE (i.e. PSDE->MO). Since the type of the Input is clear (we have static sofa-object whose BaseData doesn’t change) one could at this time create the clone and replace the BaseData with vacant type at the PSDE with the desired one. After that, this BaseData for the Output is valid and can be linked to in a normal way. . I don’t think this is especially dangerous, because this would not be allowed after parsing(). This also handles the problem that the sofa-objects involved would need to be created before the PSDE is created. In this way they can be created after the PSDE. This doesn’t cause confusion for the user neither, because he is aware of the types of the datas. Yet, overall this solution is a little bit complicated because it relies on changing the behavior of linking. Linking has to be extended to detect whether the Output that is being linked to has a valid type or is vacant. Overall I’m not 100% confident this kind of approach would work. For case 2.:. In this case one kind of remains in the “python-world” and it is not necessary to have an exhaustive set of possible types, I think. It would be enough to have types such as string, int, float, array, matrix, etc. Here one could use the identifiers already used in python. Also, the user has to state the type he wants for the Output, since there is no way of inferring automatically when both ends are subject to the user’s choice. Therefore, this would be limited to declaring the desired type of an Output. The types for the Inputs should always be derived automagically, I think. I hope this ideas are useful!. Cheers!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416:3063,detect,detect,3063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416,1,['detect'],['detect']
Safety,""", template=""Rigid3d"", position=[0, 5, 0, 0, 0, 0, 1], showObject=True, showObjectScale=2.0); ball_node.addObject(""UniformMass"", totalMass=10000.0); ball_node.addObject(""SphereCollisionModel"", radius=0.5, group=1); ball_node.addObject(""UncoupledConstraintCorrection""); ```. As a side question: Am I even using the right components? How would you model this scene of a liver with an embedded tumor? I also tested the Heterogeneous-TetrahedronFEMForceField.scn example, but that is even more unstable. When you interact with the object through the mouse, it applies a huge force in the opposite direction. <video src=""https://github.com/sofa-framework/sofa/assets/29635054/dc863ba3-7e55-48e1-8b5d-30d078fd5b88; "" width=""200"" height=""auto"">. I also simplified the liver scene to just the SOFA liver. Same problem with the instability. ```python; import Sofa; import Sofa.Core. PLUGINS = [; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Mapping.NonLinear"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""Sofa.Component.StateContainer"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""MultiThreading"",; ""Sofa.Component.SolidMechanics.FEM.NonUniform"",; ""Sofa.Component.Topology.Container.Grid"",; ""Sofa.Component.IO.Mesh"",; ""Sofa.Component.LinearSolver.Direct"",; ""Sofa.Component.Mapping.Linear"",; ""Sofa.Component.Topology.Container.Constant"",; ]. def createScene(root: Sofa.Core.Node):. plugin_set = set(PLUGINS); for plugin in plugin_set:; root.addObject(""RequiredPlugin"", name=plugin). root.gravity = [0.0, 0.0, -9.81]; root.dt = 0.02. root.addObject(""FreeM",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:7961,Detect,Detection,7961,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['Detect'],['Detection']
Safety,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2320:325,avoid,avoid,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320,2,"['avoid', 'detect']","['avoid', 'detect']"
Safety,"""real"" is replaced with its only possible type: float. float is assumed; by SparseGridTopology.cpp. Removing ""real"" avoids issues when some; templated functions have a template parameter named ""real"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1955:116,avoid,avoids,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955,1,['avoid'],['avoids']
Safety,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2263:911,unsafe,unsafe,911,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263,1,['unsafe'],['unsafe']
Safety,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3179. <div type='discussions-op-text'>. <sup>Originally posted by **alxbilger** July 27, 2022</sup>; NameDecoder has functions to get the name, template name, namespace etc as a string based on a type. Currently, functions are runtime.; Since types are known at compile-time, it would make sense that NameDecoder could be `constexpr`.; The problem is that C++ does not offer compile-time and portable features to do such a thing. I found a solution on the web, but it is not portable:. - https://stackoverflow.com/a/59522794; - https://bitwizeshift.github.io/posts/2021/03/09/getting-an-unmangled-type-name-at-compile-time/. It uses `__PRETTY_FUNCTION__` (for clang and msvc) and `__FUNCSIG__` for msvc. . Some problems with this solution:. - Other compilers are not supported.; - `__FUNCSIG__` might not be defined depending on the compilation options. ; - `__PRETTY_FUNCTION__` is not defined with old gcc. Open-source libraries I found (such as https://github.com/Manu343726/ctti or https://github.com/adambadura/type_name) also use the `__PRETTY_FUNCTION__` solution. I think it would not affect any of us if we start using this non-portable C++ since the modern compilers that we use support it. But, to be safe, I start the discussion if we go to this direction.</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4514:1280,safe,safe,1280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4514,1,['safe'],['safe']
Safety,"### New features; - UncoupledConstraintCorrection : add option to disable handling of topological changes for compliance vector; - Container : add accessor to the topology type; - SubsetMapping : add resizeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . This is the re-opening of [previous issofa_topology pull-request](https://github.com/sofa-framework/sofa/pull/217). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break ex",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243:548,detect,detected,548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243,1,['detect'],['detected']
Safety,"### Problem. **Description**; After building Sofa from source and running ```cmake --install build/``` there are headers missing for QGLViewer.; The installation also adds some redundant QGLViewer directories to the install path. **Steps to reproduce**; - clone the current Sofa repo; - cd into the cloned folder; - run ```cmake -B build/``` ; - run ```cmake --build build/```; - run ```cmake --install build/```. The last line installs everything into $sofa_dir/build/install/.; For QGLViewer this results in ; 1. an overly long install path:; - ```$sofa_dir/build/install/include/extlibs/QGLViewer/QGLViewer/QGLViewer```; 2. missing headers from libQGLViewer, only the following ones are available, most notably qglviewer.h is missing here:; - ```config.h constraint.h domUtils.h mouseGrabber.h quaternion.h ui_ImageInterface.h ui_VRenderInterface.h vec.h```; ; **Expected behavior**; - All headers for libQGLViewer should be copied to the install directory; - The path for the headers should be something like ```$sofa_dir/build/install/include/extlibs/QGLViewer/include/QGLViewer/*.h``` or ```$sofa_dir/build/install/include/extlibs/QGLViewer/*.h```. ---------------------------------------------. ### Environment. **Context**; This happens on both Linux and Windows but only became critical on Windows when I had tried to use the Sofa provided libQGLViewer in my own project. This could temporarily be fixed by changing my own CMake include path to ```{SOFA_INSTALL_DIR}/../../Sofa/GUI/Qt/libQGLViewer```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4196:177,redund,redundant,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4196,1,['redund'],['redundant']
Safety,"### Problem. **Description**; I used to use the following node in my xml file but could not feel any forcefeedback on the haptic device when upgraded to sofa v21.06. The collision detection and collision response still works when haptic devices tools collide with other models in the scene.; And the same xml file worked well in sofa v19.12. _""LCPForceFeedback activate=""1"" forceCoef=""0.25"" tags=""PHANToM 2__omni""_. **Steps to reproduce**; An example scene file can be found here:. [TIPS_haptictool_gallbladder_v2106.txt](https://github.com/sofa-framework/sofa/files/7558079/TIPS_haptictool_gallbladder_v2106.txt). **Expected behavior**; The forcefeedback used to work well in sofa v19.12. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: v21.06.00 binaries; - State: Build directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. No Error outputs or suspicious outputs has been found. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2487:180,detect,detection,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2487,1,['detect'],['detection']
Safety,"### Problem. **Description**; The console didn't show an error message when there was null distance between two components. **Steps to reproduce**; I used a four-legged robotic model, with each of the legs having two components, a pad at the bottom and the part above (referred to as the extension). The pad and extension were in contact, and gravity was applied. **Expected behavior**; The console should have shown an error message stating, ""Null distance between contact detected"". ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: Version 21.12 binary; - State: Install directory: User home directory. **Command called**. ```txt. runSofa <filename>. ```. **Env vars**; --Unchanged--; ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/User",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:474,detect,detected,474,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,1,['detect'],['detected']
Safety,"### Problem; Hi,; I discovered a memory leak that seems to be connected to the collision detection pipeline / models. The scene contains 2 nodes with `MechanicalObject` and `PointCollisionModel`.; I repeatedly load and unload the scene, first with no collision models, then one collision model, and then two collision models.; -> each graph has 3 segments. ```python; import Sofa; import Sofa.Core; import Sofa.Simulation; from enum import Enum. class TestCase(Enum):; ONE_MODEL = 0; TWO_MODELS = 1; NONE = 2. class SimulationHandler:; def __init__(self):. self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, TestCase.NONE); Sofa.Simulation.init(self.root_node). def step(self):; Sofa.Simulation.animate(self.root_node, self.root_node.getDt()). def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = Simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:89,detect,detection,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['detect'],['detection']
Safety,"### Problem; Hi,; this is related to https://github.com/sofa-framework/sofa/issues/3201. Same as before, I want to cut a deformable object. I wanted to check, if it is easier in total to replace the Hexahedra with Tetraeder for cutting.; Sadly, I sometimes (not always, not really reproducible) get segfaults when deleting elements.; This occurs both through mouse interaction, as well as the `SofaCarving` plugin.; So I guess there is some form of missing lock / set dirty on one of the components.; In other scenes, I also had that problem for `TriangleSetTopologyContainer`. The minimal scene for reproducing the behavior is:. <details>; <summary>Click to expand!</summary>. ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.Engine.Select"", # [BoxROI]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.MechanicalLoad"", # [PlaneForceField]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [FastTetrahedralCorotationalForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [HexahedronSetTopologyContainer, HexahedronSetTopologyModifier, TetraheopologyModifier]; ""Sofa.Component.Topology.Container.Grid"", # [RegularGridTopology]; ""Sofa.Component.Topology.Mapping"", # [Hexa2TetraTopologicalMapping, Quad2TriangleTopologicalMapping]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.GL.Component.Rendering3D"", # [OglModel]; ]. plugin_node = root_node",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:831,Detect,Detection,831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,2,['Detect'],['Detection']
Safety,"### _or how to avoid calling applyJ/applyJT on non-mechanical-purposed mappings (mainly for visual mapping)_. A mapping is considered mechanical from a MechanicalVisitor POV if:. 1. isMechanical is true (i.e mapForces, mapConstraints and mapMasses is true). It looks logical but certain Visitors, especially MechanicalPropagateDxVisitor, just ignore this trait and just calls go through all the mappings anyway; https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Simulation/Core/src/sofa/simulation/mechanicalvisitor/MechanicalPropagateDxVisitor.cpp#L48-L54. 2. MechanicalPropagateDxVisitor is still called on (supposedly) non-mechanical mapping but applyJ() (more especially the implementation in Mappings), wont be called if the State does not store velocities. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Core/src/sofa/core/Mapping.inl#L150-L163. _**In a nutshell, ultimately avoiding calling applyJ/applyJT means that the output of a mapping should not be a **MechanicalObject** (the only implementation of State that store velocities, AFAIK)**_. ---. It should be more clearer on why there are MechanicalVisitors which still calls mechanical functions on flagged non-mechanical mappings, i.e why the ignore flag is true for MechanicalPropagateDxVisitor in FreeMotionAnimationLoop for example. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/Component/AnimationLoop/src/sofa/component/animationloop/FreeMotionAnimationLoop.cpp#L392",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4399:15,avoid,avoid,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4399,2,['avoid'],"['avoid', 'avoiding']"
Safety,"#0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18769,detect,detection,18769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTranslation(0,0,0);; firstMechanicalObject->setRotation(0,0,0);; firstMechanicalObject->setScale(1,1,1);; . MechanicalObject3d::SPtr secondMechanicalObject = New<MechanicalObject3d>();; secondMechanicalObject->setTranslation(1,1,1);; secondMechanicalObject->setRotation(0,0,0);; secondMechanicalObject->setScale(1,1,1);. PointCollisionModel<sofa::defaulttype::Vec3Types>::SPtr fir",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:4278,detect,detectionProximity,4278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147,1,['detect'],['detectionProximity']
Safety,") /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:60; #3 0x7fc3002426aa in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #7 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #8 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*, st",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:3442,detect,detection,3442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"**Version A (Quad with TriangleCollision):**; ```python; hexa_node.addObject(""HexahedronSetTopologyContainer"", hexahedra=grid_hexahedra, position=grid_positions); hexa_node.addObject(""HexahedronSetTopologyModifier""); hexa_node.addObject(""MechanicalObject"", showObject=True, showObjectScale=2.0); hexa_node.addObject(""UniformMass"", totalMass=0.001); hexa_node.addObject(""HexahedronFEMForceField"", youngModulus=100, poissonRatio=0.0). hexa_node.addObject(""FixedConstraint"", indices=[0, 60, 120, 180, 59, 119, 179, 239]). quad_node = hexa_node.addChild(""quads""); quad_node.addObject(""QuadSetTopologyContainer""); quad_node.addObject(""QuadSetTopologyModifier""); quad_node.addObject(""Hexa2QuadTopologicalMapping""); quad_node.addObject(""TriangleCollisionModel"", group=0, tags=""CarvingSurface""); ```; -> If I remove elements through the mouse, it removes the incorrect indices (but it does not crash / warn); https://user-images.githubusercontent.com/29635054/184161506-3e617100-2bc0-4923-a838-2396039f89ea.mp4. -> If I let the `SphereCollisionModel` fall, it does not correctly detect the collision. Maybe the index order is incorrect -> flipped triangle? ; https://user-images.githubusercontent.com/29635054/184161484-242044af-1fe0-4a04-982a-946be839e861.mp4. **Version B (Hexa -> Quad -> Triangle with TriangleCollision):**; Same as before.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3201#issuecomment-1212089563:1071,detect,detect,1071,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3201#issuecomment-1212089563,1,['detect'],['detect']
Safety,"**[ci-depends-on]** detected during [build #100](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/100/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1508189222:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1508189222,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #101](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/101/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1511034701:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1511034701,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #102](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/102/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1514461081:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1514461081,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #103](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/103/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1514862938:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1514862938,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #107](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/107/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/343**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0a5bae50f5f9b66fef5becbe36a6460da49069fc_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1517077493:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1517077493,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #108](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/108/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1522925821:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1522925821,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2050/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/147**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56f8258ff0b6d1f19d24f2231eb3868d7b10fa31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-845754855:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-845754855,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2199/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/15**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG b2ab6375727242ddf63721f62ec36b363e93e5f0_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876441899:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876441899,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2419/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Compliant/pull/4**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG aa799839804a3860135eb30c88ab8c39bf388ec1_; - **Merge or close https://github.com/sofa-framework/Flexible/pull/3**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG fbc130904462023496cbd330c7d815f0dfd95af1_; - **Merge or close https://github.com/sofa-framework/SofaPython/pull/2**; _For this build, SofaPython/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython; GIT_TAG ac7e23fb6aec5979c97b84a4feecdbb9dd340256_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/211**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ec9320ca0a3bec4ffc5e55abe5cd099ccdbff18f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949425223:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949425223,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2505/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-990767792:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-990767792,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2532/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/21**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 90f4931413269a48944f967d0cf0c48dd2eabff2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-990926995:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-990926995,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2631/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/228**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 6abdfdf5dc33d253157dc0b5bf2b0e9081e9404c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1048760732:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1048760732,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076458415:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076458415,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2776/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/23**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 2281b660044053cf0ac3e716561573436365caac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1077318937:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1077318937,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1091603512:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1091603512,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 031154805e814e1b08ae761773c8eb701270b8ac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1112721363:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1112721363,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0c27e04e106485e281259c4572a83c13659add84_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1191527540:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1191527540,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 50efba04a2b1e2b987cf88358884713aff79f17e_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 6237f73861a9a668fbcf04213d8c521ae0faab82_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1173473489:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1173473489,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288912041:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288912041,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/6**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 1623e8023d58313e5b30e244fb998797e057e352_; - **Merge or close https://github.com/sofa-framework/Registration/pull/6**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 1edd80521f6493f4716a922e5b9f552e4f7e41e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286890386:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286890386,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386941374:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386941374,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 30b463128985a76fdb4a8a28dec3c2c80cff8310_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429789161:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429789161,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG e37db0bdc037abbb339f6e371d60df26fc391b83_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589519335:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589519335,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564882829:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564882829,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714805666:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714805666,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055257:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1725055257,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785421218:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785421218,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/378**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG bc5b042b7d98baa7ee82a793b0610d6a2637011a_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/119**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG afd60931feaf1509be7c8469a888f78991bc9b76_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822364007:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822364007,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4471/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922888922:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922888922,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4495/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/397**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0926fe46474630a1775f5ba67e825dc11110f214_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1955908736:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1955908736,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966175549:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966175549,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4651/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/106**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG f9315099803ad0e7083d695854a3698f42187724_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2084806339:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2084806339,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2222587889:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2222587889,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 4e59e1351995920e3f2e16fedf6a9cec2ff407ec_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251166999:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251166999,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 68f14ba14c960c04c536912ac250549c10ae5e57_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2283014413:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2283014413,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4848/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2303534170:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2303534170,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2257866241:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2257866241,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5003/10/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/142**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 5cc3118b3daf2be9bf4045902aed54a0f2a13442_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2373408117:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2373408117,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5012/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2393681389:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2393681389,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5033/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2403796765:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2403796765,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5052/10/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2439441584:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2439441584,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #110](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/110/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1526781670:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1526781670,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #111](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/111/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1526980828:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1526980828,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #112](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/112/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1530630051:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1530630051,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2050/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/147**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56f8258ff0b6d1f19d24f2231eb3868d7b10fa31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846028265:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846028265,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2193/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/regression/pull/14**; _For this build, regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/regression; GIT_TAG e5a26110de8e6213228cae08bcbc0d1da4716beb_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-874571694:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-874571694,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868365619:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868365619,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2199/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/15**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG b2ab6375727242ddf63721f62ec36b363e93e5f0_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876455901:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876455901,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2419/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949464888:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949464888,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2532/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/21**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 90f4931413269a48944f967d0cf0c48dd2eabff2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-992259671:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-992259671,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076520191:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076520191,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1091754333:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1091754333,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 031154805e814e1b08ae761773c8eb701270b8ac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1112925746:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1112925746,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0c27e04e106485e281259c4572a83c13659add84_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1192576772:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1192576772,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 50efba04a2b1e2b987cf88358884713aff79f17e_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 12db17a2aed146cae57e58de08d99f8a298c01d9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174610164:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174610164,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3216/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/34**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 8d35ce10069c2f7b220be31fa96c8039e767cd7d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239131582:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1239131582,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289124350:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289124350,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/6**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 231198ab18ca3efb8c1042cbc8abbe08c1d89551_; - **Merge or close https://github.com/sofa-framework/Registration/pull/6**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 1edd80521f6493f4716a922e5b9f552e4f7e41e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286932948:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286932948,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386994988:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386994988,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 30b463128985a76fdb4a8a28dec3c2c80cff8310_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429790999:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429790999,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1f4bc22558fcf26b998c9f31b82723c33bf0f9f7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590847999:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1590847999,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1567657374:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1567657374,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1736845464:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1736845464,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785430670:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785430670,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/378**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG bc5b042b7d98baa7ee82a793b0610d6a2637011a_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/119**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG afd60931feaf1509be7c8469a888f78991bc9b76_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822751697:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822751697,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4495/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1956213999:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1956213999,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966308036:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966308036,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4651/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2097853691:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2097853691,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225309022:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225309022,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0d51e42c961405fceedf5c78904fa76b419f572a_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251704062:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251704062,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f7af4f78a5111fed68705eeb588983e42d6cdc85_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2301878977:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2301878977,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2257940882:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2257940882,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5003/11/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/142**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 5cc3118b3daf2be9bf4045902aed54a0f2a13442_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2383080620:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2383080620,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #11](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5033/11/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2406884809:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2406884809,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2050/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/147**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56f8258ff0b6d1f19d24f2231eb3868d7b10fa31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846036890:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846036890,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868392059:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868392059,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2199/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/15**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG b2ab6375727242ddf63721f62ec36b363e93e5f0_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876984172:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876984172,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2532/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/21**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 90f4931413269a48944f967d0cf0c48dd2eabff2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-992620172:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-992620172,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076548324:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076548324,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102256772:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102256772,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 5c716bcfa72a407dca8c9e939313545bd45b2d99_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1114676083:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1114676083,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0c27e04e106485e281259c4572a83c13659add84_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1192579408:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1192579408,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 1618e2d553b18252895c2910e98b08ade136eb3a_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef554bf2dcda87220946c3e6fedabb0a9b2bbff2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174693766:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1174693766,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289172460:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289172460,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290061212:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290061212,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1387495245:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1387495245,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 030e1d89dd26deeedae60c40c109138a59ec1f3d_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG a2ebbd6e68e9cea086e5f365651f9b24d6b283af_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1604338261:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1604338261,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568403041:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568403041,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1740905944:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1740905944,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785431985:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1785431985,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/378**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG bc5b042b7d98baa7ee82a793b0610d6a2637011a_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/119**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG afd60931feaf1509be7c8469a888f78991bc9b76_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822896400:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822896400,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966316632:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966316632,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225636836:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225636836,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0d51e42c961405fceedf5c78904fa76b419f572a_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251777571:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2251777571,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/12/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2274613721:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2274613721,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #12](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5003/12/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/142**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 5cc3118b3daf2be9bf4045902aed54a0f2a13442_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2383533524:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2383533524,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2050/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/147**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56f8258ff0b6d1f19d24f2231eb3868d7b10fa31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846056178:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-846056178,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868400678:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868400678,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2199/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/15**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG b2ab6375727242ddf63721f62ec36b363e93e5f0_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-877005133:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-877005133,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2532/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-993346123:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532#issuecomment-993346123,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076553376:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076553376,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102556902:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102556902,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/13**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 918df4fbed8665f1cdd7f3772d4427234c297f50_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1164193056:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1164193056,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1116265701:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1116265701,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0c27e04e106485e281259c4572a83c13659add84_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1209150358:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1209150358,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef2a8b1094f977eb60b43efcc631aa3f6b6b74c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1175812851:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1175812851,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289264437:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289264437,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290113913:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290113913,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1399331346:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1399331346,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7b22ab5eccbe128bad20b9b68c4e2c7c3aaa0236_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 57d081401afdf553ec167d03d213b8a4074309c5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620005425:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620005425,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568439978:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1568439978,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 255fb151774d9480fe30bb16fb0d4bbefbd5b3c7_; - **Merge or close https://github.com/sofa-framework/Registration/pull/14**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 65188decc71b7d49e792415b6f3e6cdf058744f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2041929699:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2041929699,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/362**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 51a2a5bfb15a74c930ab28b24e64eadc0a1752c8_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1647500211:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1647500211,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1744539037:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1744539037,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1787932394:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1787932394,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1824442451:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1824442451,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966335062:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966335062,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225772662:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2225772662,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/13/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0d51e42c961405fceedf5c78904fa76b419f572a_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2255268240:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2255268240,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #13](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/13/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2276017391:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2276017391,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2050/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/147**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56f8258ff0b6d1f19d24f2231eb3868d7b10fa31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-848018942:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-848018942,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868516297:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868516297,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1077784096:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1077784096,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102732188:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1102732188,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/14**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 8d6531fa6c5fe4f790a4acbf1ab8919b5cdf3278_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1164562491:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1164562491,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122285797:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122285797,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 8d45f3362d5ae9a44c669a7cd9a3d009c5f0bf31_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1210355253:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1210355253,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef2a8b1094f977eb60b43efcc631aa3f6b6b74c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1175997464:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1175997464,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289303652:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289303652,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290198557:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290198557,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1403518300:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1403518300,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7b22ab5eccbe128bad20b9b68c4e2c7c3aaa0236_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1c5f59c1f1809038f087f994e5f6ddba4999824c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620294324:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620294324,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1582400008:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1582400008,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 255fb151774d9480fe30bb16fb0d4bbefbd5b3c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042130212:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2042130212,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/362**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 2d5f82603ca0ff8a45abe813e9908b1b2944cd43_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653271576:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653271576,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1788024055:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1788024055,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4471/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1928605070:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1928605070,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/14/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG b45ee24754d78223533bea5cd04bae6a8c3441c6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 8261e01ea5c338bc065fbf1af007418b022bf2ae_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966791015:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966791015,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2255283562:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2255283562,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #14](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/14/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2288212830:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2288212830,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868532668:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868532668,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1079162712:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1079162712,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1104890560:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1104890560,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/18**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 5644b81aa81bb243573316bced498fcfb565486e_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1177176844:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1177176844,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122286799:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122286799,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f1539b7ebeccfe891801157f08baa8a18bf573f2_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 18dd43b27567027dae4face72fac47752c80b862_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1253465542:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1253465542,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef2a8b1094f977eb60b43efcc631aa3f6b6b74c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1176949215:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1176949215,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289308682:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289308682,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290648058:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1290648058,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405080951:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405080951,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7a990b6ba0c3227736a072e7c36880f88b613967_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1c5f59c1f1809038f087f994e5f6ddba4999824c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620562359:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620562359,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1591004678:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1591004678,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 255fb151774d9480fe30bb16fb0d4bbefbd5b3c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851262:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851262,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/362**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c0dfe37b6e7605a5a09c589a540e6296dd660d25_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693065320:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693065320,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1801324688:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1801324688,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4471/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1932113348:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1932113348,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/15/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG b45ee24754d78223533bea5cd04bae6a8c3441c6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 07c1d112e418cf57bdf40ca29b09ad8a06eba52d_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 305d7ce1912b8b450a0ce86e5ce6651c4fe9c839_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1968640370:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1968640370,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #15](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/15/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2328251957:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2328251957,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868594941:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868594941,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c502a62a0410e1f15487c195b186d46ddad8d3cd_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1008943492:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1008943492,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1080911963:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1080911963,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1106059593:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1106059593,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/19**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0b1a524b4725810f9ddcf4df83fca9f9350a0a3a_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1178446574:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1178446574,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122289793:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122289793,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 73de20be7773ab0902fa15b17a01d08839b2ec60_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 30200f8e1e51c09cefcb50b073f9b6756159c10f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1444453295:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1444453295,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1177433349:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1177433349,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289350395:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289350395,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291771006:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291771006,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405269121:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1405269121,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7a990b6ba0c3227736a072e7c36880f88b613967_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 1c5f59c1f1809038f087f994e5f6ddba4999824c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620834958:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1620834958,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 227bf080aa6d7dd166d4329f8fbbb06c5ae0de70_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1600084486:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1600084486,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 6a73e1e775929a09bee2f4aafe49f01cdf3970be_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851876:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2046851876,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693394079:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1693394079,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1830464614:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1830464614,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/16/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 3ee9780863a1ecd73a4c13e130633b21f0b20eb1_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG c2af4de99fa12672052164a8205db6ab07771ed8_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 305d7ce1912b8b450a0ce86e5ce6651c4fe9c839_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1969775511:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1969775511,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #16](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/16/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2328816637:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2328816637,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868661966:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868661966,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c502a62a0410e1f15487c195b186d46ddad8d3cd_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1008956873:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1008956873,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1082382266:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1082382266,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1106059812:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1106059812,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/19**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 3fff3c3e55b3154e94de81f2ba6914ff527e3679_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1178455939:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1178455939,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122340521:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1122340521,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 941eea2a17f394574ca0f5449a8221ef43c201bf_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 821cd35912044ce84a89eb401be168a8ff70db80_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445307975:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445307975,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1178396060:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1178396060,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289383096:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1289383096,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291917855:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1291917855,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1623126475:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1623126475,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 227bf080aa6d7dd166d4329f8fbbb06c5ae0de70_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1609415551:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1609415551,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 6a73e1e775929a09bee2f4aafe49f01cdf3970be_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2054240655:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2054240655,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1830502008:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1830502008,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/17/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 3ee9780863a1ecd73a4c13e130633b21f0b20eb1_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG c2af4de99fa12672052164a8205db6ab07771ed8_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 305d7ce1912b8b450a0ce86e5ce6651c4fe9c839_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1969891332:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1969891332,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #17](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/17/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2328826334:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2328826334,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2198/18/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/150**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 065297bed92e89c6648a53a6cd439241fc9c8aba_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868674362:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198#issuecomment-868674362,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/18/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c502a62a0410e1f15487c195b186d46ddad8d3cd_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1009027383:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1009027383,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/18/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/19**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 3fff3c3e55b3154e94de81f2ba6914ff527e3679_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1178541009:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1178541009,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1124965115:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1124965115,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/18/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 941eea2a17f394574ca0f5449a8221ef43c201bf_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 821cd35912044ce84a89eb401be168a8ff70db80_; - **Merge or close https://github.com/sofa-framework/ci/pull/18**; _For this build, ci/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ci; GIT_TAG 0570c25092434d8d734ebdafae5a21ece68bf320_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445312521:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445312521,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1189996956:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1189996956,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/18/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290052368:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290052368,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308889546:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308889546,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1624946275:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1624946275,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1616999675:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1616999675,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/18/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/272**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 6a73e1e775929a09bee2f4aafe49f01cdf3970be_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2062737454:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2062737454,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1830515831:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1830515831,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/18/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 3ee9780863a1ecd73a4c13e130633b21f0b20eb1_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1996710143:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1996710143,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #18](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/18/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2328954009:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2328954009,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/19/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c502a62a0410e1f15487c195b186d46ddad8d3cd_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1009033487:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1009033487,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/19/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/12**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 5d350841651deff1887d7aebabb1a36d143276b8_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1179860065:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1179860065,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1127421042:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1127421042,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/19/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 941eea2a17f394574ca0f5449a8221ef43c201bf_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 821cd35912044ce84a89eb401be168a8ff70db80_; - **Merge or close https://github.com/sofa-framework/ci/pull/18**; _For this build, ci/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ci; GIT_TAG cdb80f16c5700c381353f4bd4b99e05ff8065560_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445352120:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445352120,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1190162730:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1190162730,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/19/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290113330:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290113330,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308890832:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1308890832,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1629891942:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1629891942,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2068488120:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2068488120,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1830544468:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1830544468,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1997144305:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1997144305,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #19](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/19/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2328985063:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2328985063,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2237/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/17**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 50041e3c7632c90927db540ddbb7b8edcddc126f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-877047035:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-877047035,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2316/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/1**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG a2059bdbe0539e8d307cdb25aa5826eaf26f0a3b_; - **Merge or close https://github.com/sofa-framework/Compliant/pull/1**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG c3a994fa1f587b4ded8608a45a71851dc82459c6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-911382644:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-911382644,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2342/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/177**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG da87b82c3ab8c199b7ad026c29cdffa0cf22f102_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2342#issuecomment-918937616:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2342#issuecomment-918937616,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2381/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/19**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 3a670e8c8ac5d233e7e9f5af680058dbfb6be337_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2381#issuecomment-933892471:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2381#issuecomment-933892471,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2540/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/22**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 190ae6150745e205199ac168121a5669372c16c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2540#issuecomment-993843029:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2540#issuecomment-993843029,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2631/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/228**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG fc7e4dc760f3993a6021994f14e3a275d5b44b3c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1020170732:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1020170732,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2773/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/241**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 2ca795da0c1b85e4b8ebf4a402ba1a57ae4f2317_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2773#issuecomment-1063771977:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2773#issuecomment-1063771977,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2776/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/23**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 7a1a1dd7e9cfe308bb877b17ad4b577f8ef48220_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1064066500:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1064066500,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2800/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/25**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG c190f5a9a206cb9a51ae2ee8ec63bfe6e6385e63_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2800#issuecomment-1075439058:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2800#issuecomment-1075439058,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2905/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/252**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG cd3d7ec2f81472e5aba9779dadf9c06689cc2d50_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2905#issuecomment-1111973769:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2905#issuecomment-1111973769,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3035/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/26**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 35602a85ef930422a261163db7b0779a0ee2d523_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3035#issuecomment-1152338824:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3035#issuecomment-1152338824,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 3416644a5e83e7ef32e28f013656b55251ee7a94_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227078189:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227078189,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ad86795b1c264f37968c6e19bdc312ab007307e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239160695:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239160695,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3326/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/35**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 227c41168f2c863d66fca5706912367521e94f34_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254636448:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254636448,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3367/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/37**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 07f2a8ca62ca896036a0812dabf15b9e1676ea2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271587630:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271587630,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ba43756ec0bd9e0bc7d55dae23fd5e08495c9295_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282242831:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282242831,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488285615:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488285615,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569402561:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569402561,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 43e5dba0246cd134fe7122d1e4a9d46909378fce_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633033407:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633033407,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/48**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 644cf81b3331268be797cf6079c5e2acce171c2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643565056:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643565056,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4526/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/61**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 69032360df52c2684b30b87997afbc64c40a2cc2_; - **Merge or close https://github.com/sofa-framework/ci/pull/46**; _For this build, ci/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ci; GIT_TAG a48da1a05cd029c4a995f6b8fadc7f60733573b1_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1961522814:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1961522814,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4532/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 6db61ef369d29d513c75e3d9f632cb5a67628797_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/CGALPlugin/pull/14**; _For this build, CGALPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/CGALPlugin; GIT_TAG c247b49b69dd9cc98b84d691b0fe9fe1b79f5623_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4532#issuecomment-1964076930:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532#issuecomment-1964076930,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 6db61ef369d29d513c75e3d9f632cb5a67628797_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/CGALPlugin/pull/14**; _For this build, CGALPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/CGALPlugin; GIT_TAG c247b49b69dd9cc98b84d691b0fe9fe1b79f5623_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1964079078:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1964079078,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7359fb0f775997a5607bb7f61f20e4f31ce9d9b4_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2225867807:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2225867807,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4859/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/Cosserat/pull/119**; _For this build, Cosserat/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/Cosserat; GIT_TAG 2fbde3290a58ac16b05938b6b0f8b317190a4111_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4859#issuecomment-2255023104:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4859#issuecomment-2255023104,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4942/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/68**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG d0a4d25cf3e5ba80f58245782b6db3bc6a14d7cc_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2314851842:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2314851842,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5036/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/71**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 9f3d7e489f3278b1e885d2345d8c9422c7df68b5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5036#issuecomment-2387057707:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5036#issuecomment-2387057707,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #1](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5070/1/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/145**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG b3dc458461c168c70e3909d5be09f72dcd2a3bd8_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2422681104:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2422681104,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2050/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-848588963:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-848588963,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/20/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c502a62a0410e1f15487c195b186d46ddad8d3cd_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1009962597:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1009962597,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2890/20/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/12**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 5d350841651deff1887d7aebabb1a36d143276b8_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1179863542:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1179863542,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1127428930:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1127428930,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/20/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 941eea2a17f394574ca0f5449a8221ef43c201bf_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 821cd35912044ce84a89eb401be168a8ff70db80_; - **Merge or close https://github.com/sofa-framework/ci/pull/18**; _For this build, ci/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ci; GIT_TAG cdb80f16c5700c381353f4bd4b99e05ff8065560_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445356509:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445356509,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1190223428:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1190223428,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/20/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290198247:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290198247,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1631986903:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1631986903,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284361785:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284361785,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/20/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1830988037:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1830988037,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #20](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/20/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/141**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG da1133c8fe067d0d8496be0bfea00209d3ce0f65_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329005225:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329005225,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/21/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c502a62a0410e1f15487c195b186d46ddad8d3cd_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1009992538:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1009992538,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/21/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 941eea2a17f394574ca0f5449a8221ef43c201bf_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 821cd35912044ce84a89eb401be168a8ff70db80_; - **Merge or close https://github.com/sofa-framework/ci/pull/18**; _For this build, ci/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ci; GIT_TAG cdb80f16c5700c381353f4bd4b99e05ff8065560_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445445527:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445445527,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/21/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290539361:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290539361,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/21/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1637282534:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1637282534,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/21/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284477135:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284477135,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/21/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1876882481:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1876882481,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4496/21/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/411**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 9c607d30d5d63c1a79fbb315af8504ef5a8d323d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4496#issuecomment-2035832804:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496#issuecomment-2035832804,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #21](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/21/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/141**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG da1133c8fe067d0d8496be0bfea00209d3ce0f65_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329028111:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329028111,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/22/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c502a62a0410e1f15487c195b186d46ddad8d3cd_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1018426861:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1018426861,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/22/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 941eea2a17f394574ca0f5449a8221ef43c201bf_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 821cd35912044ce84a89eb401be168a8ff70db80_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1446332779:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1446332779,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/22/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290593885:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1290593885,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/22/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490173:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490173,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/22/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1877485397:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1877485397,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4496/22/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/411**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 9c607d30d5d63c1a79fbb315af8504ef5a8d323d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4496#issuecomment-2073764468:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496#issuecomment-2073764468,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #22](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/22/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/141**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG da1133c8fe067d0d8496be0bfea00209d3ce0f65_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329045510:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329045510,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #23](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/23/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c502a62a0410e1f15487c195b186d46ddad8d3cd_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1021220299:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1021220299,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #23](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/23/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 941eea2a17f394574ca0f5449a8221ef43c201bf_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 821cd35912044ce84a89eb401be168a8ff70db80_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1447038413:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1447038413,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #23](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/23/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490588:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2284490588,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #23](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/23/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1877490245:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1877490245,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #23](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/23/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/141**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG da1133c8fe067d0d8496be0bfea00209d3ce0f65_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329074281:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329074281,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #24](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/24/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c502a62a0410e1f15487c195b186d46ddad8d3cd_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1021229375:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1021229375,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #24](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2975/24/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f53529cb4c5637f7b0eb853b37578f8697bc9c62_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1155145736:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1155145736,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #24](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/24/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 941eea2a17f394574ca0f5449a8221ef43c201bf_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 821cd35912044ce84a89eb401be168a8ff70db80_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1447834587:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1447834587,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #24](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/24/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2287027581:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2287027581,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #24](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/24/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/258**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG bdbc961e86bbbf4b7b0057debc646e726c5e5e5f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1877649068:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1877649068,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #24](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/24/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/141**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG da1133c8fe067d0d8496be0bfea00209d3ce0f65_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329121890:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329121890,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #25](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/25/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 29589bf9d20cdc777a472a1135e11f9fd6ddac9a_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1021970158:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1021970158,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #25](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2975/25/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f53529cb4c5637f7b0eb853b37578f8697bc9c62_; - **Merge or close https://github.com/sofa-framework/Registration/pull/2**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 9cae45acfd36fc20cd551ee1d16ed42a57ea59dc_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1155180781:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1155180781,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #25](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2988/25/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/305**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 941eea2a17f394574ca0f5449a8221ef43c201bf_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/56**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 821cd35912044ce84a89eb401be168a8ff70db80_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1448157040:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1448157040,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #25](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/25/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820861:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820861,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #25](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/25/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1884448237:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1884448237,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #25](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/25/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/141**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG da1133c8fe067d0d8496be0bfea00209d3ce0f65_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329146013:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329146013,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #26](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/26/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 5d2f4215bc14d591748bfe4c13b6e0649faaf945_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1028021317:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1028021317,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #26](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2975/26/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e4d8fb0fa7202d571da72d600a6d77fe702cc391_; - **Merge or close https://github.com/sofa-framework/Registration/pull/2**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 9cae45acfd36fc20cd551ee1d16ed42a57ea59dc_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1156212151:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1156212151,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #26](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/26/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820973:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2288820973,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #26](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/26/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1884449252:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1884449252,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #26](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/26/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/141**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG da1133c8fe067d0d8496be0bfea00209d3ce0f65_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329178526:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329178526,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #27](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/27/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 5d2f4215bc14d591748bfe4c13b6e0649faaf945_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1046972115:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1046972115,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #27](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2975/27/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e4d8fb0fa7202d571da72d600a6d77fe702cc391_; - **Merge or close https://github.com/sofa-framework/Registration/pull/2**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 9cae45acfd36fc20cd551ee1d16ed42a57ea59dc_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1156214598:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1156214598,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #27](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/27/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2301390371:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2301390371,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #27](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/27/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1884450978:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1884450978,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #27](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/27/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329274167:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2329274167,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #28](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2554/28/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/224**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 4d73445ecbd73b9afa06312d96ac72056ef2dc66_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1054056958:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554#issuecomment-1054056958,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #28](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2975/28/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/268**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG d2b3313260198afd1f8382669c073df06dd00941_; - **Merge or close https://github.com/sofa-framework/Registration/pull/2**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 9cae45acfd36fc20cd551ee1d16ed42a57ea59dc_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1157152783:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2975#issuecomment-1157152783,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #28](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/28/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2348266261:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2348266261,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #28](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/28/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2330948678:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2330948678,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #29](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/29/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349470825:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349470825,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #29](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/29/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2330956659:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2330956659,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2237/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/17**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 50041e3c7632c90927db540ddbb7b8edcddc126f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-877066303:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-877066303,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2316/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/1**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG a2059bdbe0539e8d307cdb25aa5826eaf26f0a3b_; - **Merge or close https://github.com/sofa-framework/Compliant/pull/1**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG c3a994fa1f587b4ded8608a45a71851dc82459c6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-911569690:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-911569690,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2342/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/177**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG da87b82c3ab8c199b7ad026c29cdffa0cf22f102_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2342#issuecomment-919242035:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2342#issuecomment-919242035,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2381/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/19**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 3a670e8c8ac5d233e7e9f5af680058dbfb6be337_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2381#issuecomment-934137831:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2381#issuecomment-934137831,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2404/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/2**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG a32899850b208ef465581eba33f8a0ba3e0b638b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2404#issuecomment-940960550:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2404#issuecomment-940960550,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2425/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/210**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG d61fc2f48be3da34d619ebb901a4f8038956daaf_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2425#issuecomment-945582031:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2425#issuecomment-945582031,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2524/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/219**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7ff5cd0e4e4364677f3530c33e72dc41b5b1d00b_; - **Merge or close https://github.com/sofa-framework/Regression/pull/20**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 9c6aba653a4749dabe10e92ac1ce023850a111c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2524#issuecomment-984771999:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2524#issuecomment-984771999,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2525/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/219**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7ff5cd0e4e4364677f3530c33e72dc41b5b1d00b_; - **Merge or close https://github.com/sofa-framework/Regression/pull/20**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 9c6aba653a4749dabe10e92ac1ce023850a111c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2525#issuecomment-984843403:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2525#issuecomment-984843403,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2540/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/22**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 190ae6150745e205199ac168121a5669372c16c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2540#issuecomment-993845464:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2540#issuecomment-993845464,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2631/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/228**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG fc7e4dc760f3993a6021994f14e3a275d5b44b3c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1020458046:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1020458046,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2773/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/241**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 2ca795da0c1b85e4b8ebf4a402ba1a57ae4f2317_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2773#issuecomment-1064307241:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2773#issuecomment-1064307241,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2776/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/23**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 7a1a1dd7e9cfe308bb877b17ad4b577f8ef48220_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1064307498:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1064307498,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2800/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/25**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG c190f5a9a206cb9a51ae2ee8ec63bfe6e6385e63_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2800#issuecomment-1075443522:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2800#issuecomment-1075443522,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 6117d4839a200fef187df40da95896f6373c6b92_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1109420611:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1109420611,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2905/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/252**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG cd3d7ec2f81472e5aba9779dadf9c06689cc2d50_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2905#issuecomment-1111977262:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2905#issuecomment-1111977262,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3035/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/26**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 35602a85ef930422a261163db7b0779a0ee2d523_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3035#issuecomment-1152364531:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3035#issuecomment-1152364531,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 0b05df16a548edaee6a9ae8c6dbb0f55748de170_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1171990540:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1171990540,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 3416644a5e83e7ef32e28f013656b55251ee7a94_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227324574:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1227324574,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ad86795b1c264f37968c6e19bdc312ab007307e6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239283745:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239283745,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3326/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/35**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 227c41168f2c863d66fca5706912367521e94f34_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254637524:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254637524,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3367/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/37**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 07f2a8ca62ca896036a0812dabf15b9e1676ea2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271793094:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1271793094,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ba43756ec0bd9e0bc7d55dae23fd5e08495c9295_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282269342:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282269342,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3702/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/337**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7957a69c147b5cae97293d4a57ae7e7c7d802cb1_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1453521553:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1453521553,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/43**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 59f0984523a441538eb4330c003eabc6592934f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1490378854:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1490378854,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488693610:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1488693610,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569419704:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569419704,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 43e5dba0246cd134fe7122d1e4a9d46909378fce_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633034888:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1633034888,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1644464613:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1644464613,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/48**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 644cf81b3331268be797cf6079c5e2acce171c2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643794027:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643794027,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1644484648:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1644484648,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1645183439:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1645183439,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/7**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 10cf9884208c68c6902d43a543324a7224fecbe7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1646804073:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1646804073,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG c16f4bc9f412aa60271349e78ac8a78cd4dc42c8_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1689904064:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1689904064,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4420/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/56**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 4d160b90f2e54fc6bfa25e260f3c25dd1af81500_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4420#issuecomment-1880780980:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420#issuecomment-1880780980,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4526/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/61**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 69032360df52c2684b30b87997afbc64c40a2cc2_; - **Merge or close https://github.com/sofa-framework/ci/pull/46**; _For this build, ci/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ci; GIT_TAG a48da1a05cd029c4a995f6b8fadc7f60733573b1_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1961523455:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1961523455,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2177907370:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2177907370,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 50033e58449dbc76a9938a31179cf6069d5ab570_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2224750289:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2224750289,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7359fb0f775997a5607bb7f61f20e4f31ce9d9b4_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2225874258:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2225874258,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4859/2/). . To unlock the merge button, you must; - **Edit Cosserat/ExternalProjectConfig.cmake.in** with; GIT_TAG origin/master",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4859#issuecomment-2265775576:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4859#issuecomment-2265775576,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4942/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/68**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG d0a4d25cf3e5ba80f58245782b6db3bc6a14d7cc_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2314851917:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2314851917,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5036/2/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/71**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 9f3d7e489f3278b1e885d2345d8c9422c7df68b5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5036#issuecomment-2387236332:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5036#issuecomment-2387236332,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5070/2/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2430776850:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2430776850,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #30](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/30/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349472417:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349472417,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #30](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/30/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2331055491:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2331055491,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #31](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/31/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349747394:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349747394,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #31](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/31/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2331076038:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2331076038,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #32](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/32/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349752089:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2349752089,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #32](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/32/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2331125021:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2331125021,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #33](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/33/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2370616428:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2370616428,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #33](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/33/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2331333982:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2331333982,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #34](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/34/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413217697:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413217697,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #35](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/35/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413777947:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2413777947,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #38](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3927/38/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2415575691:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2415575691,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2237/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/17**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 50041e3c7632c90927db540ddbb7b8edcddc126f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-877094565:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-877094565,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2305/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/18**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 33ddee276cc37f2c70c30934afb913724341c9a3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-904668600:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-904668600,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2316/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/1**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG a2059bdbe0539e8d307cdb25aa5826eaf26f0a3b_; - **Merge or close https://github.com/sofa-framework/Compliant/pull/1**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG c3a994fa1f587b4ded8608a45a71851dc82459c6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-911607425:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-911607425,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2342/3/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2342#issuecomment-922935254:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2342#issuecomment-922935254,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2381/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/19**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 3a670e8c8ac5d233e7e9f5af680058dbfb6be337_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2381#issuecomment-937306113:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2381#issuecomment-937306113,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2404/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/2**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG a32899850b208ef465581eba33f8a0ba3e0b638b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2404#issuecomment-943216103:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2404#issuecomment-943216103,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2425/3/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2425#issuecomment-951012404:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2425#issuecomment-951012404,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2524/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/219**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7ff5cd0e4e4364677f3530c33e72dc41b5b1d00b_; - **Merge or close https://github.com/sofa-framework/Regression/pull/20**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 9c6aba653a4749dabe10e92ac1ce023850a111c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2524#issuecomment-984820955:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2524#issuecomment-984820955,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2525/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/219**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7ff5cd0e4e4364677f3530c33e72dc41b5b1d00b_; - **Merge or close https://github.com/sofa-framework/Regression/pull/20**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 9c6aba653a4749dabe10e92ac1ce023850a111c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2525#issuecomment-984852028:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2525#issuecomment-984852028,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2631/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/228**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56a42c9dc220bd8140c5540f659833a16694e503_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1022265253:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1022265253,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2776/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/23**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 7a1a1dd7e9cfe308bb877b17ad4b577f8ef48220_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1067781393:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1067781393,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2800/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/25**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG c190f5a9a206cb9a51ae2ee8ec63bfe6e6385e63_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2800#issuecomment-1075722856:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2800#issuecomment-1075722856,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1084290809:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1084290809,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 6117d4839a200fef187df40da95896f6373c6b92_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1109428204:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1109428204,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3035/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/26**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 35602a85ef930422a261163db7b0779a0ee2d523_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3035#issuecomment-1167409818:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3035#issuecomment-1167409818,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 50efba04a2b1e2b987cf88358884713aff79f17e_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172005800:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172005800,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ea00c8f06070b1685d264b20c43c6a7d0b4ef0cf_; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1241627402:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1241627402,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240484060:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240484060,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3326/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/35**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 227c41168f2c863d66fca5706912367521e94f34_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254998772:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326#issuecomment-1254998772,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3367/3/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1276706382:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367#issuecomment-1276706382,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ba43756ec0bd9e0bc7d55dae23fd5e08495c9295_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282349834:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282349834,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3702/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/337**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7957a69c147b5cae97293d4a57ae7e7c7d802cb1_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459845157:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459845157,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3742/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/40**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 355d9f06109015a3a030591cb1393330890f83ac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1481341804:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1481341804,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/43**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 59f0984523a441538eb4330c003eabc6592934f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496152614:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496152614,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1496171516:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1496171516,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3833/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/42**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 49538a6a4ce44bd297568df74dca9d162c6a6359_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1537570954:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1537570954,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569493478:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1569493478,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1689674702:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1689674702,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1647467568:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1647467568,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/48**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 644cf81b3331268be797cf6079c5e2acce171c2c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643801563:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1643801563,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645131672:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645131672,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661614608:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661614608,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/7**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 10cf9884208c68c6902d43a543324a7224fecbe7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1713473365:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1713473365,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691322304:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691322304,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4420/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/56**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 4d160b90f2e54fc6bfa25e260f3c25dd1af81500_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/125**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 3295e868abc0f700b24df81c9fa4a50fdfd455ee_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4420#issuecomment-1880875946:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420#issuecomment-1880875946,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4495/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/397**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f529cc9d674a845c29a07c1f3827614af86be224_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1940141739:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1940141739,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4526/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/61**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 69032360df52c2684b30b87997afbc64c40a2cc2_; - **Merge or close https://github.com/sofa-framework/ci/pull/46**; _For this build, ci/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ci; GIT_TAG a48da1a05cd029c4a995f6b8fadc7f60733573b1_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1967478436:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1967478436,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4588/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/CSparseSolvers/pull/3**; _For this build, CSparseSolvers/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/CSparseSolvers; GIT_TAG e5fe70ef40cd4086b1b9a9fd0f6c45a0344a4234_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-1994784886:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-1994784886,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4687/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/118**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 19bc3066274e000ee08512b075928a8a93250ad3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2081521110:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2081521110,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4769/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/66**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 861f11b7ea9a726a5cfbe1ac8455ebd37744974a_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4769#issuecomment-2152842469:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4769#issuecomment-2152842469,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2178729872:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2178729872,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 50033e58449dbc76a9938a31179cf6069d5ab570_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2224886198:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2224886198,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7359fb0f775997a5607bb7f61f20e4f31ce9d9b4_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2227858145:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2227858145,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4859/3/). . To unlock the merge button, you must; - **Edit Cosserat/ExternalProjectConfig.cmake.in** with; GIT_TAG origin/master",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4859#issuecomment-2266716383:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4859#issuecomment-2266716383,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4863/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/296**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 4e0970206145d6f47ed9b947022c1e5f112dfd48_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2257478250:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2257478250,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4920/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/442**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 9f746d4a6c177082b1251c3271cd296c7d18024e_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4920#issuecomment-2289019009:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4920#issuecomment-2289019009,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4942/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/68**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG d0a4d25cf3e5ba80f58245782b6db3bc6a14d7cc_; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/138**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 36822aea4edefc629b3f3d2938e207510d048237_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2315658727:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2315658727,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5033/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/306**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG ba321a1745c0d4fc32d66717a1f90b93e83607ec_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2381973557:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2381973557,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5036/3/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5036#issuecomment-2387502543:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5036#issuecomment-2387502543,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5053/3/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/463**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 919627d7de86d2fa84fbdcfc5d040b3c7d4aa291_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2406314331:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2406314331,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5070/3/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2441061650:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2441061650,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2237/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/17**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 50041e3c7632c90927db540ddbb7b8edcddc126f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-877157396:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-877157396,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2305/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/18**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 33ddee276cc37f2c70c30934afb913724341c9a3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-905605641:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-905605641,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2316/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/1**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG a2059bdbe0539e8d307cdb25aa5826eaf26f0a3b_; - **Merge or close https://github.com/sofa-framework/Compliant/pull/1**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG c3a994fa1f587b4ded8608a45a71851dc82459c6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-912477719:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-912477719,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2381/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/19**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 3a670e8c8ac5d233e7e9f5af680058dbfb6be337_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2381#issuecomment-937729561:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2381#issuecomment-937729561,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2404/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/2**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG a32899850b208ef465581eba33f8a0ba3e0b638b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2404#issuecomment-943232753:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2404#issuecomment-943232753,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2419/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Compliant/pull/4**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG aa799839804a3860135eb30c88ab8c39bf388ec1_; - **Merge or close https://github.com/sofa-framework/Flexible/pull/3**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG 3a11f7365fa08c998fb4e07e23fc64f50233a273_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-944267176:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-944267176,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2524/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/219**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7ff5cd0e4e4364677f3530c33e72dc41b5b1d00b_; - **Merge or close https://github.com/sofa-framework/Regression/pull/20**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 9c6aba653a4749dabe10e92ac1ce023850a111c7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2524#issuecomment-985701957:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2524#issuecomment-985701957,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2525/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2525#issuecomment-986714874:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2525#issuecomment-986714874,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2631/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/228**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56a42c9dc220bd8140c5540f659833a16694e503_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028158189:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028158189,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 736265fed7b2dd20a033ec6f054851bb680996b4_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1061983173:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1061983173,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2776/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/23**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 7a1a1dd7e9cfe308bb877b17ad4b577f8ef48220_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1069099601:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1069099601,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2800/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/25**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 6f77823a47e4cb3c94f6500f3b065305bccc0068_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2800#issuecomment-1075779318:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2800#issuecomment-1075779318,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1084347277:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1084347277,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 6117d4839a200fef187df40da95896f6373c6b92_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1109441259:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1109441259,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2905/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/252**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG cd3d7ec2f81472e5aba9779dadf9c06689cc2d50_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2905#issuecomment-1112342059:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2905#issuecomment-1112342059,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3035/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/26**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 35602a85ef930422a261163db7b0779a0ee2d523_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3035#issuecomment-1167410474:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3035#issuecomment-1167410474,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 50efba04a2b1e2b987cf88358884713aff79f17e_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172027581:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172027581,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/298**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 878dac5a9ca7afa4425dfc1792a6057d53d3fc4b_; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1253383201:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1253383201,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240490466:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240490466,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7189d1d7d4b92612a2d132d16463719a1d51a739_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282982049:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1282982049,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3687/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/39**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG cce0053f17acac0eed749911e242b555d918ff9b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461084716:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461084716,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3702/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459968751:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702#issuecomment-1459968751,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3742/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1482069705:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742#issuecomment-1482069705,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/43**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 59f0984523a441538eb4330c003eabc6592934f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496172482:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1496172482,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/41**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 0ffb20e4f73dc3ecd0db23840cf902c420222d06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498302334:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498302334,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3833/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1541582677:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833#issuecomment-1541582677,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/47**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG a4361abc7f83624b838e8f7327d7aa51413fc8b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1575922657:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1575922657,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4034/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1698680310:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034#issuecomment-1698680310,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014380:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014380,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4055/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1644807335:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055#issuecomment-1644807335,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645855538:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1645855538,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661655900:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661655900,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/7**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 10cf9884208c68c6902d43a543324a7224fecbe7_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1715708549:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1715708549,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691340537:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1691340537,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4471/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/5**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 56823196e7f8d1793d601707be1bd3efac4a056b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1918442718:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1918442718,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4495/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/397**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f529cc9d674a845c29a07c1f3827614af86be224_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1940244399:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1940244399,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4526/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/61**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 4c2c009eb891c51706eb20a7b4573dc0413db398_; - **Merge or close https://github.com/sofa-framework/ci/pull/46**; _For this build, ci/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ci; GIT_TAG a48da1a05cd029c4a995f6b8fadc7f60733573b1_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1969183132:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1969183132,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1965339538:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1965339538,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4588/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/CSparseSolvers/pull/3**; _For this build, CSparseSolvers/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/CSparseSolvers; GIT_TAG e5fe70ef40cd4086b1b9a9fd0f6c45a0344a4234_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-1994909885:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-1994909885,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4651/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/106**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG d340d8167627d0331bcf3709d2498dcf434dcd3b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2058662933:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2058662933,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4687/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/64**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 8bc620beae82f70efa67cc8e8116f63788cdc6aa_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2124808970:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2124808970,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2178735375:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2178735375,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 50033e58449dbc76a9938a31179cf6069d5ab570_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2224906374:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2224906374,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7359fb0f775997a5607bb7f61f20e4f31ce9d9b4_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2228091464:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2228091464,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4863/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2257714849:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2257714849,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4942/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/68**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG d0a4d25cf3e5ba80f58245782b6db3bc6a14d7cc_; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/138**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 2aec18c33c67513484b4f3c8e1f949929717d86f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2315875355:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2315875355,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5033/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/306**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 5d92f37e1d3d840ad0021ac5d2b26af74df78490_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2382164698:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2382164698,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5053/4/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/463**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 919627d7de86d2fa84fbdcfc5d040b3c7d4aa291_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2406315041:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2406315041,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #4](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5070/4/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2443315008:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2443315008,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #54](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1961/54/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-820425142:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-820425142,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #59](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1961/59/). . To unlock the merge button, you must; - **Edit SofaPython3/ExternalProjectConfig.cmake.in** with; GIT_REPOSITORY https://github.com/guparan/SofaPython3; GIT_TAG origin/updateDoc",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-833694387:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-833694387,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2237/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/17**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 98d32788a4a80bd14acc2313a8c4cc03da09c7cd_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-878080207:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-878080207,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2305/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/18**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 33ddee276cc37f2c70c30934afb913724341c9a3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-910096616:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-910096616,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2316/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/1**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG 4ec2b43247c7d4d0dd9d5a66eb8e3c5cfca180c7_; - **Merge or close https://github.com/sofa-framework/Compliant/pull/1**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG 34a3f2489e1f1950c3b31407318501be5a14ca9b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-912603953:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-912603953,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2404/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/2**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG a32899850b208ef465581eba33f8a0ba3e0b638b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2404#issuecomment-943427879:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2404#issuecomment-943427879,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2419/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Compliant/pull/4**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG aa799839804a3860135eb30c88ab8c39bf388ec1_; - **Merge or close https://github.com/sofa-framework/Flexible/pull/3**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG 3a11f7365fa08c998fb4e07e23fc64f50233a273_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-944272214:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-944272214,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2524/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2524#issuecomment-986654877:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2524#issuecomment-986654877,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2525/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2525#issuecomment-986764089:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2525#issuecomment-986764089,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2631/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/228**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56a42c9dc220bd8140c5540f659833a16694e503_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028158597:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028158597,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 9d6e386b71c47c6ef718be34e8a9386d8403f604_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1068846608:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1068846608,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2776/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/23**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 7a1a1dd7e9cfe308bb877b17ad4b577f8ef48220_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1069100268:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1069100268,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1084693280:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1084693280,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 6117d4839a200fef187df40da95896f6373c6b92_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1109683406:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1109683406,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2905/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2905#issuecomment-1117125026:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2905#issuecomment-1117125026,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3035/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/26**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 35602a85ef930422a261163db7b0779a0ee2d523_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3035#issuecomment-1168603726:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3035#issuecomment-1168603726,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 50efba04a2b1e2b987cf88358884713aff79f17e_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172047628:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172047628,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1255919912:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1255919912,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240731894:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240731894,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ea1f50b401dab3c896923dfdc9c84d1a573dbe65_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1285479784:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1285479784,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3687/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/39**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG cce0053f17acac0eed749911e242b555d918ff9b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461484210:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1461484210,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3756/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1498302146:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756#issuecomment-1498302146,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3757/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498652549:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757#issuecomment-1498652549,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3905/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1594679527:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905#issuecomment-1594679527,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014435:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1658014435,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1658769138:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1658769138,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/101**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 0107fb8b8c546126bc8732e551b5b6cba191efd6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661656099:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1661656099,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4065/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1716748657:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065#issuecomment-1716748657,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1692874585:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1692874585,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/378**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 9b5eeb61e5e30c3760402e2fd46cd493742ce1f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1782953025:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1782953025,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4471/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1919204230:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1919204230,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4495/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/397**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f529cc9d674a845c29a07c1f3827614af86be224_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1940352079:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1940352079,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4526/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1969192426:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526#issuecomment-1969192426,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4588/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/CSparseSolvers/pull/3**; _For this build, CSparseSolvers/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/CSparseSolvers; GIT_TAG e5fe70ef40cd4086b1b9a9fd0f6c45a0344a4234_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-1994940727:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-1994940727,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4651/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/106**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG d340d8167627d0331bcf3709d2498dcf434dcd3b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2058678368:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2058678368,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4687/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/64**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 8bc620beae82f70efa67cc8e8116f63788cdc6aa_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2124995164:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2124995164,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2182619923:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2182619923,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 50033e58449dbc76a9938a31179cf6069d5ab570_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2225045388:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2225045388,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 7359fb0f775997a5607bb7f61f20e4f31ce9d9b4_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2232470309:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2232470309,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4848/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/67**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 8beab36ca2abb65aaf9109fcf7d32d8aada542d3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2282755560:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2282755560,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4863/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2263055212:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2263055212,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4942/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/68**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG d0a4d25cf3e5ba80f58245782b6db3bc6a14d7cc_; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/138**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 1320f98f0a04f8298c2dd9fd097be4c3409be341_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2316383957:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2316383957,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5003/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/142**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 5b6b56e93bf47e2793a587c81e55e811398f56bc_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2358685450:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2358685450,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5033/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/306**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 5d92f37e1d3d840ad0021ac5d2b26af74df78490_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2382165207:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2382165207,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5053/5/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/463**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f5951202817c25b0ac58825f7669538d106a1421_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2406365694:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2406365694,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #5](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5070/5/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2443366569:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2443366569,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #62](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1961/62/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-845207422:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961#issuecomment-845207422,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2237/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/17**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG f15a4109ce76996b28f5f21cf185021ae9d4f43c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-878851257:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237#issuecomment-878851257,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2305/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/18**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG ffe2d4ebd8f34381dc1ce3031874144691357573_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-910650300:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-910650300,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2316/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/1**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG 1b36e6ff3f81b7a1b2ef1c2d62ea0c282c3bce48_; - **Merge or close https://github.com/sofa-framework/Compliant/pull/1**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG 34a3f2489e1f1950c3b31407318501be5a14ca9b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-913580967:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-913580967,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2349/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Compliant/pull/2**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG 3e1ef8923d4c13cb2f9d409af600e2e8b4c656a6_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2349#issuecomment-923713263:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2349#issuecomment-923713263,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2404/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2404#issuecomment-947492684:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2404#issuecomment-947492684,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2419/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Compliant/pull/4**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG aa799839804a3860135eb30c88ab8c39bf388ec1_; - **Merge or close https://github.com/sofa-framework/Flexible/pull/3**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG 3a11f7365fa08c998fb4e07e23fc64f50233a273_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-945404864:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-945404864,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2524/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2524#issuecomment-986733875:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2524#issuecomment-986733875,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2525/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2525#issuecomment-989918704:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2525#issuecomment-989918704,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2631/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/228**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 56a42c9dc220bd8140c5540f659833a16694e503_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028236339:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028236339,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 2eb85191d7a977b1446dc6c155e8f68e58e56a9d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1073953861:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1073953861,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2776/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/23**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 7a1a1dd7e9cfe308bb877b17ad4b577f8ef48220_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1069549823:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1069549823,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1084777579:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1084777579,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 6117d4839a200fef187df40da95896f6373c6b92_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1111029997:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1111029997,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 3b4eb82c4d33982fbf60011df6fb937ed5e7744a_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1171403847:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1171403847,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 50efba04a2b1e2b987cf88358884713aff79f17e_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172052149:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172052149,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3104/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/30**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 034d63c02e8121cee428c9c31c57187d6d5b1192_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3104#issuecomment-1189696645:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3104#issuecomment-1189696645,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1266924134:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1266924134,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/302**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a96cb261b98799a729012434aca62c93ccd47209_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1241019703:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1241019703,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 142fe7139365a9e2f4e651b916055c72e441b6f5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1286958361:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1286958361,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1385379242:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1385379242,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG ed648c9c2acc997228eca729a17fb7c490efad71_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429664407:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429664407,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/3**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 91e19c464e875daf9598bd31953655a7a84aef86_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1430365297,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3687/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1469615227:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1469615227,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/STLIB/pull/106**; _For this build, STLIB/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/STLIB; GIT_TAG d8f277e29d0376ec1e6979fb8bea1d52b6a16e09_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586890032:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1586890032,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4040/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1700065913:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040#issuecomment-1700065913,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1700369588:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1700369588,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1713461547:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1713461547,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1693010263:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1693010263,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/378**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 9b5eeb61e5e30c3760402e2fd46cd493742ce1f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1789952200:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1789952200,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4471/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922633618:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922633618,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4495/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/397**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f529cc9d674a845c29a07c1f3827614af86be224_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1943805553:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1943805553,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4588/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/CSparseSolvers/pull/3**; _For this build, CSparseSolvers/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/CSparseSolvers; GIT_TAG e5fe70ef40cd4086b1b9a9fd0f6c45a0344a4234_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-2011784607:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-2011784607,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4651/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/106**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG d340d8167627d0331bcf3709d2498dcf434dcd3b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2058812535:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2058812535,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4687/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2133516816:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2133516816,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2182634323:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2182634323,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 50033e58449dbc76a9938a31179cf6069d5ab570_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2225070318:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2225070318,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e37c070cf814e019631b2a09a7f2e34b3d8946f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2236802744:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2236802744,2,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4848/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/67**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 8beab36ca2abb65aaf9109fcf7d32d8aada542d3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2283813308:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2283813308,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4863/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2264261554:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2264261554,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4942/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/68**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG d0a4d25cf3e5ba80f58245782b6db3bc6a14d7cc_; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/138**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 1320f98f0a04f8298c2dd9fd097be4c3409be341_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2316645078:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2316645078,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5003/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/142**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG d958db1af69c4105c549325feb1f9b25185d012c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2358801227:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2358801227,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5012/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/143**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG b5a7ad49e0d2b2317af8b748d9ed52371e25a0d3_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/458**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ff7c0bcc33e7ad3d70b8ecb1d4224a1da240ea06_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/305**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d1483c6ba1e8f634fb4e15f4b1dbb25a27844496_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2369927967:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2369927967,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5033/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/306**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 5d92f37e1d3d840ad0021ac5d2b26af74df78490_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2382196458:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2382196458,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5052/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/462**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e4041c29106bfae1fe95240f0235fa22024acd7a_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2404117275:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2404117275,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5053/6/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/463**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG fe72559c174fffd216fd01dd7df18399b1ba4633_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2427930297:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2427930297,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #6](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5070/6/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2445555950:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2445555950,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2199/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/regression/pull/15**; _For this build, regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/regression; GIT_TAG b2ab6375727242ddf63721f62ec36b363e93e5f0_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-875638985:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-875638985,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2305/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/18**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG ffe2d4ebd8f34381dc1ce3031874144691357573_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-912625286:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-912625286,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2316/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/1**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG 1b36e6ff3f81b7a1b2ef1c2d62ea0c282c3bce48_; - **Merge or close https://github.com/sofa-framework/Compliant/pull/1**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG 34a3f2489e1f1950c3b31407318501be5a14ca9b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-914060262:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-914060262,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2419/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Compliant/pull/4**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG aa799839804a3860135eb30c88ab8c39bf388ec1_; - **Merge or close https://github.com/sofa-framework/Flexible/pull/3**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG fc5b448a5de22989477f6cde08d9b58d322a02ae_; - **Merge or close https://github.com/sofa-framework/SofaPython/pull/2**; _For this build, SofaPython/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython; GIT_TAG 8b5787f459de8ad885af8a3710333308f1853999_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/211**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ec9320ca0a3bec4ffc5e55abe5cd099ccdbff18f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-945759963:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-945759963,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2631/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/228**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG c6ea6e0fe7d0b7c0b344d40a2c4c27dea37face2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028376246:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028376246,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG f516acb17e01820bb01a4d0f41114f367e78872e_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1075203366:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1075203366,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2776/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/23**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 7a1a1dd7e9cfe308bb877b17ad4b577f8ef48220_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1073969216:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1073969216,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1085627560:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1085627560,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 6117d4839a200fef187df40da95896f6373c6b92_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1111560825:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1111560825,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 3b4eb82c4d33982fbf60011df6fb937ed5e7744a_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1176560982:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1176560982,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 50efba04a2b1e2b987cf88358884713aff79f17e_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172484588:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172484588,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 34d8c39791ed54da56cfa34cd53ec712f220992d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1282000986:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1282000986,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449168:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449168,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 142fe7139365a9e2f4e651b916055c72e441b6f5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288623603:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288623603,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386021150:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386021150,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 6ed981088badeed632e0c7179e79ce408abd4e93_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429668553:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429668553,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1438551052:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1438551052,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/STLIB/pull/106**; _For this build, STLIB/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/STLIB; GIT_TAG 9ec7355493c218cbbf8af4b299e0f0a2a3e3d9cb_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1587571335:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1587571335,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4056/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1707745441:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056#issuecomment-1707745441,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714747506:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714747506,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1694802953:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1694802953,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/247**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 2f712ee474812f31ab328fc9ce59b307521d2747_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1776784649:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1776784649,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/378**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 9b5eeb61e5e30c3760402e2fd46cd493742ce1f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1789954739:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1789954739,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4471/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922773826:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922773826,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4495/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/397**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0926fe46474630a1775f5ba67e825dc11110f214_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1947007935:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1947007935,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966012024:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966012024,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4588/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-2022066595:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-2022066595,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4651/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/106**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG d340d8167627d0331bcf3709d2498dcf434dcd3b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2060887466:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2060887466,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4687/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2134745843:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2134745843,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2205547941:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2205547941,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 50033e58449dbc76a9938a31179cf6069d5ab570_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2227732129:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2227732129,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e37c070cf814e019631b2a09a7f2e34b3d8946f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2241860393:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2241860393,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4848/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/67**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 119638d2dee8bc8f61d8ee25b1cc902e5e68a94f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2288661461:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2288661461,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/136**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 5277b0e946f237b09dcc6ed1731a6a3480902ded_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2255985489:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2255985489,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4863/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2266717414:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2266717414,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4942/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/68**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG d0a4d25cf3e5ba80f58245782b6db3bc6a14d7cc_; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/138**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG b8399002afa2e16230290723914c8586eb135a8d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2316999456:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4942#issuecomment-2316999456,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5003/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/142**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG d958db1af69c4105c549325feb1f9b25185d012c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2367008900:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2367008900,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5012/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/143**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG b5a7ad49e0d2b2317af8b748d9ed52371e25a0d3_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/458**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 941d4deebd418b6a594b6e4021e96c0adfe2ee89_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/305**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d1483c6ba1e8f634fb4e15f4b1dbb25a27844496_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2370057560:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2370057560,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5033/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2384663438:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2384663438,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5052/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/462**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e4041c29106bfae1fe95240f0235fa22024acd7a_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2407363360:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2407363360,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5053/7/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/463**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG d2bb27f04be5bf21469587e99fd8b5899170e082_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2433826586:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2433826586,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #7](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5070/7/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2445860161:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2445860161,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2199/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/regression/pull/15**; _For this build, regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/regression; GIT_TAG b2ab6375727242ddf63721f62ec36b363e93e5f0_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876243141:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876243141,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2316/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Flexible/pull/1**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG 1b36e6ff3f81b7a1b2ef1c2d62ea0c282c3bce48_; - **Merge or close https://github.com/sofa-framework/Compliant/pull/1**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG 34a3f2489e1f1950c3b31407318501be5a14ca9b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-916016614:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-916016614,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2505/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/220**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 16d46f2947dd5fdadd1ac3b72fd6ad7464402839_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-990046930:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-990046930,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2631/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/228**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 27ae8ce89012d70298bfee4269281d57d8d54b06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028760858:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028760858,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076447733:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076447733,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2776/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/23**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 2281b660044053cf0ac3e716561573436365caac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1076527804:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1076527804,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1085902484:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1085902484,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 6117d4839a200fef187df40da95896f6373c6b92_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1111866537:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1111866537,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 9f2982cea50c735c782e0eeacca882006ddbd1be_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1181396701:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1181396701,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 50efba04a2b1e2b987cf88358884713aff79f17e_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172807104:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1172807104,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/4**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 33248202c3f2031162c0f67cfc2585060ea21a42_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1291959311:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1291959311,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3280/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253584907:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253584907,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 142fe7139365a9e2f4e651b916055c72e441b6f5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288761422:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288761422,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386078133:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386078133,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 15c81dbd9b84f80f9f4fc8a48f9a077f16190e8c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429726014:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429726014,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3649/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1439234036:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649#issuecomment-1439234036,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589168452:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589168452,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG d53251cd082e3984221487478946830aab65ae1c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564100229:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564100229,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714785977:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714785977,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1**; _For this build, ShapeMatchingPlugin/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ShapeMatchingPlugin; GIT_TAG bed3e279c688c4697ec9837b833c544ea6bb7ca2_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1695000912:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1695000912,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/50**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 689caa304997f104a984cb8a58f8061f7aabeeeb_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1721271430:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1721271430,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/247**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 2f712ee474812f31ab328fc9ce59b307521d2747_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1776785022:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1776785022,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4258/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/378**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 9b5eeb61e5e30c3760402e2fd46cd493742ce1f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1819507245:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1819507245,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4471/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922816991:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922816991,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4495/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/397**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0926fe46474630a1775f5ba67e825dc11110f214_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1948126522:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1948126522,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966114619:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966114619,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4588/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-2024189740:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588#issuecomment-2024189740,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4651/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/106**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 11631bacd64e8a336e550f7e4002795c1b57cb5b_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2060916146:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2060916146,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4687/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2135617523:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2135617523,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2205580316:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2205580316,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 50033e58449dbc76a9938a31179cf6069d5ab570_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/153**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG 6277256cee40af54c58870a062fd091796c3028f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2229780688:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2229780688,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4848/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/67**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 119638d2dee8bc8f61d8ee25b1cc902e5e68a94f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2288662095:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2288662095,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/136**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 5277b0e946f237b09dcc6ed1731a6a3480902ded_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2256060710:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2256060710,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4863/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2267957122:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4863#issuecomment-2267957122,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4976/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/302**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG 5b0acb83606d59f04e2d59ebe6a2386702b41208_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4976#issuecomment-2337080777:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4976#issuecomment-2337080777,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5003/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/142**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG d958db1af69c4105c549325feb1f9b25185d012c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2371135797:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2371135797,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5012/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2378194349:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2378194349,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5033/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2387795239:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2387795239,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5052/8/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/462**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0e4e604af3b855fea0175bcd9b08189183efd74f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2418345657:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2418345657,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5053/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2439636046:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5053#issuecomment-2439636046,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5070/8/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2446007820:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5070#issuecomment-2446007820,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #93](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/93/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 703e720346f69132529e8f9ca6c927f2fc217a94_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1497219128:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1497219128,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #94](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/94/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 703e720346f69132529e8f9ca6c927f2fc217a94_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1497221974:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1497221974,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #95](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/95/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG fcab26217fd3486b6fa5839614b178e663ec6c3d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1500409325:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1500409325,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #96](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/96/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1500436698:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1500436698,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #97](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/97/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1500445149:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1500445149,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #98](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/98/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1504950408:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1504950408,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #99](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2777/99/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/44**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG bf25074537d35a1e1601509b88ccd5ac6c88f5b3_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1505247834:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1505247834,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2199/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/regression/pull/15**; _For this build, regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/regression; GIT_TAG b2ab6375727242ddf63721f62ec36b363e93e5f0_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876332294:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-876332294,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2316/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-916050289:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316#issuecomment-916050289,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2419/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Compliant/pull/4**; _For this build, Compliant/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Compliant; GIT_TAG aa799839804a3860135eb30c88ab8c39bf388ec1_; - **Merge or close https://github.com/sofa-framework/Flexible/pull/3**; _For this build, Flexible/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Flexible; GIT_TAG 26efcf7698a861e6df66a6b30b7318725df14f9d_; - **Merge or close https://github.com/sofa-framework/SofaPython/pull/2**; _For this build, SofaPython/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython; GIT_TAG 8b5787f459de8ad885af8a3710333308f1853999_; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/211**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ec9320ca0a3bec4ffc5e55abe5cd099ccdbff18f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949368920:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419#issuecomment-949368920,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2505/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/220**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 16d46f2947dd5fdadd1ac3b72fd6ad7464402839_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-990055659:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2505#issuecomment-990055659,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2631/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/228**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 27ae8ce89012d70298bfee4269281d57d8d54b06_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028762912:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028762912,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2766/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/239**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG a373e9649d47b755f8ef395509ed489b4614ec0c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076448466:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076448466,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2776/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/23**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 2281b660044053cf0ac3e716561573436365caac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1076529910:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1076529910,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2820/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/THMPGSpatialHashing/pull/1**; _For this build, THMPGSpatialHashing/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/THMPGSpatialHashing; GIT_TAG bb5605350e64c084b6a31fa965baf607705d6bf5_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1087566241:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820#issuecomment-1087566241,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2895/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaGLFW/pull/31**; _For this build, SofaGLFW/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaGLFW; GIT_TAG 031154805e814e1b08ae761773c8eb701270b8ac_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1112721282:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895#issuecomment-1112721282,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3053/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/27**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 4fd3f83d2cc39b37310dc58fc949cae35fae6cee_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1188574537:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1188574537,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3090/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Registration/pull/3**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 50efba04a2b1e2b987cf88358884713aff79f17e_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1173463217:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1173463217,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3242/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302210:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302210,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3402/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/309**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e140d59dd11cbfddb7cf8991c6b0043e9204989c_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288911392:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402#issuecomment-1288911392,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3404/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/ManifoldTopologies/pull/6**; _For this build, ManifoldTopologies/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/ManifoldTopologies; GIT_TAG 7e63fdff87d8dea05beaa2668fbc84d364404821_; - **Merge or close https://github.com/sofa-framework/Registration/pull/6**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG 65155e9985b4b31d24d169fb69f7fd6bab74dfbe_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286744432:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1286744432,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3588/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/38**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 55a3a25a1ff9e35af9f5e5b0eeecfa3358dbc025_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386940677:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588#issuecomment-1386940677,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3634/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/OptiTrackNatNet/pull/2**; _For this build, OptiTrackNatNet/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/OptiTrackNatNet; GIT_TAG 30b463128985a76fdb4a8a28dec3c2c80cff8310_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429754911:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634#issuecomment-1429754911,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3882/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/354**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG aec36b40c24e58d9e9616293bf3740b5aaafb777_; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/222**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG c9f3cb28d44741fbd7af3f3db0fa0acd1e23e7a4_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589248708:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1589248708,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3889/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/350**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG ef6854426ef5fd28319ef5fc258fe2a94b1a7f04_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564266575:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889#issuecomment-1564266575,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4058/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714795529:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058#issuecomment-1714795529,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4106/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1698459870:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106#issuecomment-1698459870,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4138/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/50**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 689caa304997f104a984cb8a58f8061f7aabeeeb_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1722600238:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1722600238,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4205/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1778278325:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1778278325,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4471/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922840400:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922840400,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4495/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/397**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0926fe46474630a1775f5ba67e825dc11110f214_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1953273935:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495#issuecomment-1953273935,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4533/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/SoftRobots/pull/265**; _For this build, SoftRobots/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/SoftRobots; GIT_TAG d31b5bf89cc2330e469fbb4f70f8a182ade2b0e6_; - **Merge or close https://github.com/sofa-framework/BeamAdapter/pull/139**; _For this build, BeamAdapter/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/BeamAdapter; GIT_TAG e44eaa6ca0a753a79b1de6d4cc19ec094ae03817_; - **Merge or close https://github.com/sofa-framework/Registration/pull/12**; _For this build, Registration/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Registration; GIT_TAG cef0d410c58eddad420c96c1970dbd2e672d7a3a_; - **Merge or close https://github.com/sofa-framework/PluginExample/pull/6**; _For this build, PluginExample/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/PluginExample; GIT_TAG 55c66ce48579be5e72cdc037ee8c87b46a40439d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966144751:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1966144751,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4651/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/106**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG f9315099803ad0e7083d695854a3698f42187724_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2082560379:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651#issuecomment-2082560379,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4687/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2139925584:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4687#issuecomment-2139925584,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4778/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/133**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 4ef2eea7e5e89044990ffa1acd89c1512cd5bc27_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2222547220:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778#issuecomment-2222547220,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4827/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/423**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 4e59e1351995920e3f2e16fedf6a9cec2ff407ec_; - **Merge or close https://github.com/sofa-framework/SofaSphFluid/pull/1**; _For this build, SofaSphFluid/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaSphFluid; GIT_TAG e745fcbb470a2388710ca613d1c11a3003457053_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2246630652:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827#issuecomment-2246630652,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4828/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/425**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG e37c070cf814e019631b2a09a7f2e34b3d8946f9_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2244303936:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2244303936,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4848/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/Regression/pull/67**; _For this build, Regression/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/Regression; GIT_TAG 119638d2dee8bc8f61d8ee25b1cc902e5e68a94f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2303280200:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2303280200,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4852/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2257709684:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852#issuecomment-2257709684,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4976/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4976#issuecomment-2359256444:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4976#issuecomment-2359256444,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5003/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/SofaDefrost/ModelOrderReduction/pull/142**; _For this build, ModelOrderReduction/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/SofaDefrost/ModelOrderReduction; GIT_TAG 5cc3118b3daf2be9bf4045902aed54a0f2a13442_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2371304157:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003#issuecomment-2371304157,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5012/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2392894685:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2392894685,1,['detect'],['detected']
Safety,**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5033/9/). . All dependencies are merged/closed and all ExternalProject pointers are up-to-date. Congrats! :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2403665423:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033#issuecomment-2403665423,1,['detect'],['detected']
Safety,"**[ci-depends-on]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-5052/9/). . To unlock the merge button, you must; - **Merge or close https://github.com/sofa-framework/SofaPython3/pull/462**; _For this build, SofaPython3/ExternalProjectConfig.cmake.in will be edited by builders with; GIT_REPOSITORY https://github.com/sofa-framework/SofaPython3; GIT_TAG 0e4e604af3b855fea0175bcd9b08189183efd74f_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2427927389:20,detect,detected,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5052#issuecomment-2427927389,1,['detect'],['detected']
Safety,"**[generate-binaries]** detected during [build #10](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [windows_vs2017_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2740/10/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2740#issuecomment-1059394556:24,detect,detected,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2740#issuecomment-1059394556,1,['detect'],['detected']
Safety,"**[generate-binaries]** detected during [build #2](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/2/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115120821:24,detect,detected,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115120821,1,['detect'],['detected']
Safety,"**[generate-binaries]** detected during [build #3](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [windows_vs2017_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2909/3/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115875591:24,detect,detected,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2909#issuecomment-1115875591,1,['detect'],['detected']
Safety,"**[generate-binaries]** detected during [build #8](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/8/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115104205:24,detect,detected,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115104205,1,['detect'],['detected']
Safety,"**[generate-binaries]** detected during [build #9](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/). . Here are your binaries:; - [fedora_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [macos_clang_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip); - [ubuntu_gcc_options](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2875/9/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/artifact/parent_dir/build/SOFA_*.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115909914:24,detect,detected,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2875#issuecomment-1115909914,1,['detect'],['detected']
Safety,"+1; Back-inserting triplets combines flexibility and efficiency. It is used in Eigen.; However, I think we have to seriously consider the demand for small dense chunks rather than scalars, since a significant number of applications use only 3D points as DOFs, and sorting such chunks can be much faster than scalars.; This may be easily handled using a choice of triplets, (such as Triplet<Mat3x3>) provided that we restrain the choice of chunk types to a reasonable number. All the square sizes from 1 to 12 should be way enough, and more could be added if necessary. (I am not sure that other sizes than 3x3 would be used in practice); The sparse matrix type could be a compile-time parameter to avoid virtual calls. The back_inserter of the default type could decompose all the chunks in scalars, while implementations dedicated to 3x3 chunks could push them in vector<Triplet<Mat3x3>>. Pr. Francois Faure; https://team.inria.fr/imagine/francois-faure/. > Le 6 avr. 2017 à 19:30, Maxime Tournier <notifications@github.com> a écrit :; > ; > ; > The biggest issue with sparse matrices is that there is no silver bullet representation that covers everyone's needs: some people like it compressed (row/column), others like to have small dense chunks instead of single floating points, and so on.; > ; > In particular, I see two major orthogonal uses of sparse matrices:; > ; > getting matrix data out of components; > working with sparse matrices (linear algebra, factorization, assembly); > It is not at all obvious that the two operations should use the same representation, and in fact I would argue against it. For instance in the Compliant plugin, we use Eigen sparse matrices for everything, and end up doing a lot of work in order to shift matrix blocks around which is tedious and costly.; > ; > I've been toying around with alternate designs, and the simplest I found so far is to use a plain old vector of triplets (row, column, value) for fetching matrix data. More precisely, mappings/force",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292785399:698,avoid,avoid,698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292785399,1,['avoid'],['avoid']
Safety,",` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is exe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:2528,redund,redundant,2528,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['redund'],['redundant']
Safety,- ADD function run-single-test-subtests executed if a test crashes to run each subtest and avoid results loss.; - EDIT function print-summary to count crashes as errors.; - EDIT XML report on crashed tests. Set duration to 1s to differentiate errors and failures. This should be done by Jenkins JUnit plugin... See https://issues.jenkins-ci.org/browse/JENKINS-4951; - FIX function print-summary on Windows (MinGW bash). See issue #149 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/200:91,avoid,avoid,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/200,1,['avoid'],['avoid']
Safety,"- Add comments; - Fix doxygen; - Avoid duplicated code; - minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2243:33,Avoid,Avoid,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2243,1,['Avoid'],['Avoid']
Safety,- Add: script event listener; - Add: scene coupling Geomagic and SofaCarving ; - Update carving detection collision to use the existing pipeline instead of relaunching a narrowphase intersection computation. - Add method to remove topological element from PointModel collision.; - Fix sofaCarving tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/787:96,detect,detection,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/787,1,['detect'],['detection']
Safety,"- Avoid trailing comma; - Consistent indentation; - Typo 'begining' -> 'beginning'; - Sort by name (bonus). # Before; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <Req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2111:2,Avoid,Avoid,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111,1,['Avoid'],['Avoid']
Safety,"- Fix cmake when building on a system with Qt6 and Qt5 are detected in the same time (qt5 is prioritized); - Fix cmake var for QGLViewer (not supported with Qt6); - Fix for Qt6 where its windeployqt utility does not support the parameter ""--no-angle"" anymore (leads to a build error); - Fix for Qt6.2 while doing the cmake configuration (I suppose the latest Qt6.2 did some changes for its cmake packages), ; tested on Windows 11 and Qt6.2 (and VS2022). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2490:59,detect,detected,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2490,1,['detect'],['detected']
Safety,"- Fix edges computation in GridTopology: It is now based either on triangles or on the quad grid, depending on what is asked. Option ```computeTriangleList``` has been added to GridTopology. True by default. If false, only quads will be computed and the corresponding list of edges; - Set TriangleSetTopologyContainer to invalid if EdgeInTriangle buffer creation failed. Check validity of the topology in TriangularBendingSprings. This will avoid the crash. fix #1243. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1323:441,avoid,avoid,441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1323,1,['avoid'],['avoid']
Safety,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163:122,detect,detect,122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163,1,['detect'],['detect']
Safety,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2299:75,Avoid,Avoid,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299,1,['Avoid'],['Avoid']
Safety,"- `LinearSolverConstraintCorrection::F` is deprecated because it is not used. I believe it stopped to be used here: https://github.com/sofa-framework/sofa/commit/50fe60f28306912e0e853c0a9493bccdd9735ff7#diff-b0264445a2a81f648e146f0b1d59d5d197cf3a935f3b7cbb24af11a38b8e6e68L433; - `override` keyword was missing in `~LinearSolverConstraintCorrection`; - `LinearSolverConstraintCorrection::J` is renamed to `m_constraintMatrix`. Its floating-type is no longer `SReal`, but `Real`. In theory, it's breaking.; - `computeJ` is no longer used. Instead, I introduce the method `convertConstraintMatrix`, which is IMO clearer. `computeJ` could be removed I think. But for some reasons it is virtual. Anyone overrides it?; - Added a timer in `convertConstraintMatrix`. This must be used for benchmark to evaluate the cost of the conversion. I believe that we can think of a way to avoid the conversions (only if it costs too much).; - `MatrixLinearSolverInternalData::copyJmatrix` is renamed to `convertMatrix` and it is now protected.; - Made `getLocalJ` clearer.; - Added details for `addJMInvJt`; - Introduced rebind types for `CompressedRowSparseMatrixConstraint`, `CompressedRowSparseMatrixGeneric` and `CompressedRowSparseMatrixMechanical`; - `CompressedRowSparseMatrixConstraint`: added test for the stream operator. The operator no longer adds trailing spaces on each line.; - Better iterators in `CompressedRowSparseMatrixConstraint`; - Missing header guard in `CompressedRowSparseMatrixConstraintEigenUtils.h`; - Fixed `operator()` in `CompressedRowSparseMatrixToEigenSparseVec`. Also added error message if out-of-bounds. Required for https://github.com/sofa-framework/SofaPython3/pull/459; - Introduction of `is_specialization_of`. Used in [a SofaPython3 PR](https://github.com/sofa-framework/SofaPython3/pull/459). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Orig",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5017:872,avoid,avoid,872,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5017,1,['avoid'],['avoid']
Safety,"- add computeBBox; - more expressive code; - formatting; - fix typos; - optimizations; - remove unused aliases; - better description. Based on #4776 to avoid conflicts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4777:152,avoid,avoid,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4777,1,['avoid'],['avoid']
Safety,"- redundant accessibility specifier; - constexpr variables; - make functions const; - type traits simplification; - explicit deleted functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2461:2,redund,redundant,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2461,1,['redund'],['redundant']
Safety,"----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""Subscribed"" <subscribed@noreply.github.com>; > Envoyé: Jeudi 5 Janvier 2017 17:45:25; > Objet: [sofa-framework/sofa] Cleaning VisualModelImpl (#118). > Hi,. > To fully support xml saving (see PR: #116 ) we need to clean; > VisualModelImpl::parse(). > I can do some stuff but is unclear to me how much VisualModelImpl requires; > cleaning and whether or not some part are deprecated (the loading stuff from; > file seems redundant with loader).; Yes, definitely redundant, the MeshXyzLoader components should be used for this task ; The same for BaseMeshTopology::load(filename) . thomas . > By the way...any suggestion/advice regarding the data attributes is more than; > welcome. I started a branch there for that:; > https://github.com/SofaDefrost/sofa/tree/cleaning_visualmodelimpl. > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271516850:559,redund,redundant,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271516850,2,['redund'],['redundant']
Safety,"->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTranslation(0,0,0);; firstMechanicalObject->setRotation(0,0,0);; firstMechanicalObject->setScale(1,1,1);; . MechanicalObject3d::SPtr secondMechanicalObject = New<MechanicalObject3d>();; secondMechanicalObject->setTranslation(1,1,1);; secondMechanicalObject->setRotation(0,0,0);; secondMechanicalObject->setScale(1,1,1);. PointCollision",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:4215,detect,detectionProximity,4215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147,1,['detect'],['detectionProximity']
Safety,-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [googl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28627,redund,redundant-smartptr-get,28627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-smartptr-get']
Safety,"... when AUTO_SET_TARGET_PROPERTIES is set. (useful for external header-only targets). EDIT: a lot of cases will be handled in cmake >3.24 a(avoiding lots of tests). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4356:141,avoid,avoiding,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356,1,['avoid'],['avoiding']
Safety,"... with the current standard set of modules/plugins.; ## About; Since MSVC2019, VS proposes the choice to use the clang-cl toolchain (clang with msvc tools). Not possible to enable it with the latest(?) cmake-gui but possible to generate a solution with the commandline version: `cmake -G""Visual Studio 2019"" -T ClangCL ..`; ## This PR; - add necessary cmake config to allow compilation (and avoid 1e999 warnings); - fix few problems detected with clang (rightly so); - change the FixParticlePerformerFactory shenanigan to be cleaner. ## Results; It appears that clang is somewhat more clever than cl.exe and seems to produces more optimized binaries.; Results are not always good, and really depends on the situation/scene. Few cases where cl is slightly faster than clang-cl; Some bench:; - `caduceus.scn -g batch -n 10000`; - cl: `21.2541 s ( 470.498 FPS)`; - clang-cl: `19.6914 s ( 507.836 FPS)`; - MeshMatrixMass.scn with 4096 steps (from SofaBenchmark); - cl: `25504 ms`; - clang-cl: `18161 ms`; - `examples/Benchmark/Performance/benchmark_cubes.scn -g batch -n 1000`; - cl: `36.7404 s ( 27.218 FPS`; - clang-cl: ` 37.8146 s ( 26.4448 FPS)`; - `examples/Benchmark/Performance/TorusFall.scn -g batch -n 1000`; - cl: `8.63699 s ( 115.781 FPS)`; - clang-cl: ` 7.72771 s ( 129.404 FPS)`; - `applications/plugins/SofaCUDA/examples/beam16x16x76-fem-implicit-CPU.scn -g batch -n 1000`; - cl: ` 113.022 s ( 8.8478 FPS))`; - clang-cl: ` 100.645 s ( 9.93587 FPS)`; - SofaBenchmark, a lot shows only improvement around 10-15% but some are interesting:; - `BM_FixedArray_construct<sofa::type::Vec3f>/8192`; - cl: ` 10.5 us`; - clang-cl: ` 6.42 us`; - `BM_Matrix_typemat3x3f_assign/512` this one is weird (the same bench with eigenmat is much closer); - cl: ` 3.44 us`; - clang-cl: ` 1.18 us`. ## Warning; pybind is not compatible with clang-cl (and I am sure a lot of other libraries), even gtest as it is was not compatible. ______________________________________________________. By submitting this pull ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2563:393,avoid,avoid,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2563,2,"['avoid', 'detect']","['avoid', 'detected']"
Safety,".22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::interse",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10988,detect,detection,10988,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['detect'],['detection']
Safety,".22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:19671,detect,detection,19671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['detect'],['detection']
Safety,".22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21889,detect,detection,21889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['detect'],['detection']
Safety,.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hem,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6560,Detect,Detection,6560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Detect'],['Detection']
Safety,".Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:3289,Detect,Detection,3289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Detect'],['Detection']
Safety,.html) | [modernize-use-using](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-using.html) |; | [clang-analyzer-valist.CopyToSelf](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.CopyToSelf.html) | [mpi-buffer-deref](https://clang.llvm.org/extra/clang-tidy/checks/mpi-buffer-deref.html) |; | [clang-analyzer-valist.Uninitialized](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.Uninitialized.html) | [mpi-type-mismatch](https://clang.llvm.org/extra/clang-tidy/checks/mpi-type-mismatch.html) |; | [clang-analyzer-valist.Unterminated](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.Unterminated.html) | [objc-avoid-nserror-init](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-nserror-init.html) |; | [cppcoreguidelines-c-copy-assignment-signature](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-c-copy-assignment-signature.html) | [objc-avoid-spinlock](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-spinlock.html) |; | [cppcoreguidelines-interfaces-global-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-interfaces-global-init.html) | [objc-forbidden-subclassing](https://clang.llvm.org/extra/clang-tidy/checks/objc-forbidden-subclassing.html) |; | [cppcoreguidelines-no-malloc](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-no-malloc.html) | [objc-property-declaration](https://clang.llvm.org/extra/clang-tidy/checks/objc-property-declaration.html) |; | [cppcoreguidelines-owning-memory](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extra/clang-tidy/checks/performance-faster-string-find.html) |; | [cppcoreguidelines-pro-bounds-array-to-pointer-decay](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](https://clang.llvm.org/extra/clang-tidy/checks/perform,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:20865,avoid,avoid-spinlock,20865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['avoid'],['avoid-spinlock']
Safety,"//github.com/SofaDefrost/sofa/commits/deprecating_components beheaded until 456d88343e210ce89d9f7436c290be92fe438313 and merged it with master.; ________________________________________________________________. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. ; - add an InfoComponent in the loaded scene to indicate when an object failed to be created. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and #425. Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453:1319,avoid,avoid,1319,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453,1,['avoid'],['avoid']
Safety,"/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:70; #10 0x7fc300243c13 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:25947,detect,detection,25947,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,4,"['Detect', 'detect']","['Detection', 'DetectionOutputVector', 'detection']"
Safety,"/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:242; #23 0x5646e6e19751 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:166; #24 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:9777,detect,detection,9777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,['detect'],['detection']
Safety,"0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10086,detect,detection,10086,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #6 0x7fc300356054 in sofa::simulation::g",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:15536,detect,detection,15536,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"2- ADD tests; 3- CLEAN member variables name (BREAKING); 4- ADD an example of orientedBox dataField use; 5- Changed a bit the implementation from PlaneROI, for computation optimization purpose. Question:; I would like to reimplement PlaneROI so that it does what we expect from its name, and also print a ""deprecated message"" for those who still use PlaneROI as an OrientedBoxROI. Those users will be detected if they use a deprecated data field. What do you think?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/108:401,detect,detected,401,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/108,1,['detect'],['detected']
Safety,"3 & 4 done. . 1: not sure how we should name the class, if ever; 2: harder. i have a toy [implementation](https://github.com/maxime-tournier/cpp/tree/master/pybind) to play with. briefly: we can put gc flags on the python type, implement `traverse` and `Py_VISIT` the pointer when the c++ object becomes unreachable (c++ refcount == 1). Then the GC will correctly detect cycles as unreachable objects (using debugging in the `gc` module), but won't delete them, probably since they have a non-trivial `dealloc` slot. Maybe this will be fixed after we switch to >= 3.4, since finalizers for cycles will be called.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306425798:364,detect,detect,364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306425798,1,['detect'],['detect']
Safety,"3 scenes were displaying an error following the PR #2465 . After some investigations, it appeared that those 3 scenes were not working for a while (and the PR merely showed that statement), and the culprit was that GridMeshCreator was not calling its doLoad() method.; doLoad() in MeshLoader components is triggered when d_filename is set.; But GridMeshCreator is procedural and does not any filename at all. Therefore doLoad() was never called.; This PR forcefully set the data d_filename to dirty to force-trigger the callback. Moreover, insertTriangle and insertQuad were using beginEdit()/endEdit() which were triggering also a doLoad() (resulting in a lot of useless edges/triangles); This PR uses WriteOnlyAccessor to avoid this problem. Now ProjectToLineConstraint.scn renders like this:; ![ProjectToLineConstraint_00000001](https://user-images.githubusercontent.com/11028016/140957340-12e18507-532b-4076-bd71-6cab73fab547.png). instead of nothing... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2473:724,avoid,avoid,724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2473,1,['avoid'],['avoid']
Safety,"3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20987,detect,detection,20987,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) (DefaultPipeline.cpp:238); ==91659== by 0x4BBD0D6: sofa::simulation::PipelineImpl::computeCollisionDetection() (PipelineImpl.cpp:117); ==91659== by 0x4B68E62: sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) (CollisionVisitor.cpp:78); ==91659== by 0x4B690BC: runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::co. ```. Sounds like createOutputModel is a good first spot to look at as it allocate an output vector with new... and that this one is returned to finally be stored in a map (eg: line 50 in NarrowPhaseDection).... which is not deleted when destructing object.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:1974,detect,detection,1974,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654,1,['detect'],['detection']
Safety,"9 ms: sofa::component::linearsolver::CompressedRowSparseMatrix<$>::compress() (74 times, avg 158 ms); 10599 ms: std::__cxx11::basic_string<$> sofa::helper::GetSofaTypeTemplateName<$>(std::__cxx11::basic_string<$>) (990 times, avg 10 ms); 9051 ms: sofa::core::objectmodel::Data<$>::~Data() (1648 times, avg 5 ms); 9001 ms: sofa::core::objectmodel::Data<$>::virtualSetLink(sofa::core::objectmodel::BaseData const&) (1783 times, avg 5 ms); 8224 ms: std::_Rb_tree<$>::_M_erase(std::_Rb_tree_node<$>*) (2112 times, avg 3 ms); 7667 ms: sofa::DataEngine_test<$>::run_basic_test() (86 times, avg 89 ms); 6301 ms: sofa::Mapping_test<$>::runTest(sofa::helper::vector<$> const&, sofa::helper::vector<$> const&, sofa::helper::vector<$>... (16 times, avg 393 ms); 5861 ms: sofa::component::topology::TopologyDataImpl<$>::createTopologicalEngine(sofa::core::topology::BaseMeshTopology*, sofa:... (176 times, avg 33 ms); 5774 ms: sofa::helper::vector<$>::write(std::ostream&) const (1105 times, avg 5 ms); 5613 ms: sofa::component::collision::BarycentricPenalityContact<$>::setDetectionOutputs(sofa::core::collision::DetectionOutputV... (88 times, avg 63 ms); 5497 ms: sofa::component::container::MechanicalObject<$>::MechanicalObject() (12 times, avg 458 ms); 5122 ms: sofa::core::objectmodel::Data<$>::getNewInstance() (1786 times, avg 2 ms); 5100 ms: sofa::helper::NameDecoder::DefaultTypeTemplateName<$>::Get[abi:cxx11]() (4238 times, avg 1 ms); 5039 ms: sofa::defaulttype::VirtualTypeInfo<$>::getTextValue[abi:cxx11](void const*, unsigned long) const (2571 times, avg 1 ms); 4867 ms: sofa::component::collision::BarycentricDistanceLMConstraintContact<$>::setDetectionOutputs(sofa::core::collision::Dete... (78 times, avg 62 ms); 4684 ms: std::__shared_count<$>::__shared_count<$>(sofa::helper::vector<$>*) (1483 times, avg 3 ms); 4575 ms: sofa::core::objectmodel::TLink<$>::remove(boost::intrusive_ptr<$>) (564 times, avg 8 ms); 4273 ms: sofa::core::objectmodel::TLink<$>::add(boost::intrusive_ptr<$>, std::__c",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:26431,Detect,DetectionOutputV,26431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['Detect'],['DetectionOutputV']
Safety,": Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [FATAL] [Qt] Could not initialize GLX. ########## SIG 6 - SIGABRT: usually caused by an abort() or assert() ##########; sofa::helper::BackTrace::sig(int); gsignal; abort; _Z13qErrnoWarningPKcz+0; QOpenGLContext::create(); QRhiGles2InitParams::newFallbackSurface(QSurfaceFormat const&); QBackingStoreRhiSupport::create(); QWidgetPrivate::create(); QWidget::create(unsigned long long, bool, bool); QWidgetPrivate::setVisible(bool); sofa::gui::qt::RealGUI::InitApplication(sofa::gui::qt::RealGUI*); sofa::gui::qt::RealGUI::CreateGUI(char const*, boost::intrusive_ptr<sofa::simulation::Node>, char const*); sofa::gui::common::GUIManager::createGUI(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; Aborted (core dumped); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:14065,abort,abort,14065,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,3,"['Abort', 'abort']","['Aborted', 'abort']"
Safety,":308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::c",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23052,Detect,DetectionOutput,23052,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,7,['Detect'],['DetectionOutput']
Safety,"::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::AnimateVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*); sofa::simulation::AnimateVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::Simulation::animate(sofa::simulation::Node*, double); sofa::gui::qt::RealGUI::step(); QTimer::timeout(QTimer::QPrivateSignal); QTimer::timerEvent(QTimerEvent*); QObject::event(QEvent*); QApplicationPrivate::notify_helper(QObject*, QEvent*); QApplication::notify(QObject*, QEvent*); QCoreApplication::notifyInternal2(QObject*, QEvent*); QTimerInfoList::activateTimers(); g_main_context_dispatch; g_main_context_iteration; QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>); QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>); QCoreApplication::exec(); sofa::gui::qt::RealGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; Segmentation fault (core dumped); ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3524:3998,timeout,timeout,3998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3524,1,['timeout'],['timeout']
Safety,"::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:70; #10 0x7fc300243c13 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExterna",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:25609,detect,detection,25609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,"['Detect', 'detect']","['DetectionOutputVector', 'detection']"
Safety,":NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:11575,detect,detection,11575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,['detect'],['detection']
Safety,":addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:3611,detect,detection,3611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147,2,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20678,detect,detection,20678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,['detect'],['detection']
Safety,"> (just randomly enabled SOFA_GPU_CUBLAS 😅); > ; > Starting from CUDA12, you cannot include both cublas.h and cublas.h (throw a compilation error); > ; I supposed you meant cublas.h and cublas_v2.h or my eyes are not yet totally recovered.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4274#issuecomment-1792501540:229,recover,recovered,229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274#issuecomment-1792501540,1,['recover'],['recovered']
Safety,"> > (just randomly enabled SOFA_GPU_CUBLAS 😅); > > Starting from CUDA12, you cannot include both cublas.h and cublas.h (throw a compilation error); > ; > I supposed you meant cublas.h and cublas_v2.h or my eyes are not yet totally recovered. 😅 yes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4274#issuecomment-1793881081:231,recover,recovered,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274#issuecomment-1793881081,1,['recover'],['recovered']
Safety,"> > So, as we discussed during the dev meeting. 2 modifications:; > > ```; > > 1. Indeed, Boost, MPFR and GMP are dependencies of CGAL library itself not of the SOFA-CGAL plugin. As those dependencies are correctly handled internally in CGAL, I removed all mention of those libraries in the config file of the plugin.; > > ; > > 2. There is already a .cmake at the root dir of CGAL so the findCGAL.cmake is not necessary. Sofa just need to know ${CGAL_DIR} path. And in fact on windows, when you install CGAL this env_variable is set. So it works straight forward.; > > ```; > > ; > > ; > > @guparan can you confirm this is now ok to go?; > ; > The _FindCGAL.cmake_ was there to avoid the need to manually set the `CGAL_DIR` variable when we install CGAL via `apt install libcgal-dev`.; > ; > IIRC, it did not work straight forward with ubuntu 18.08 and centos 7, and maybe not even with recent versions of those distributions. I'll check it later today if you want with Docker, but I believe this file was useful. Ok I see, maybe we could add a test on top of ""our FindCGAL"" checking if CGAL_DIR is known or not. @guparan could you give your feedback so we can converge on that PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611393910:679,avoid,avoid,679,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611393910,1,['avoid'],['avoid']
Safety,> > ```c++; > > sofa::core::sptr<BaseObject>; > > ```; > ; > `sofa::core::sptr<BaseObject>` is not much longer than `BaseObjectSPtr` and have to advantage of avoiding an alias :-). This is exactly what I was thinking before actually having to do a full replacement of simulation::Node::SPtr on the whole code base. The replacement requires some care to handle correctly the namespace variations everywhere in the code base ; sofa::simulation::Node::SPtr; simulation::Node::SPtr; Node::SPtr ; I found that a mass replacement from Node::SPtr to NodeSPtr was easier to deploy (and revert) massively.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769784026:158,avoid,avoiding,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769784026,1,['avoid'],['avoiding']
Safety,"> @alxbilger `distanceLMConstraint` depends on LMConstraint which is soon leaving us :) so I do not really care; > ; > > What about the backward compatibility with old names?; > ; > good point, but not sure howto ... any idea?. You can introduce a map, mapping the old names to the new names. When you detect an old name, you warn that there is a new name and you change the variable value. It can be done in `DefaultContactManager::init()` or parse",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2522#issuecomment-984464024:302,detect,detect,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2522#issuecomment-984464024,1,['detect'],['detect']
Safety,"> Also, if you remove the second template parameter, it will break scenes. You can always fix them in the SOFA code base, but what about the users?. I was thinking tweaking the parse()/canCreate() methods to detect when the user has set the two templates (and then warn, etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2644#issuecomment-1024138822:208,detect,detect,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2644#issuecomment-1024138822,1,['detect'],['detect']
Safety,"> Hello @ScheiklP ,; > ; > thank you for this PR. Two points:; > ; > 1. Could you explain why you have 2x the index 5 in your example?; > Is it because you are using several collision models and the index 5 is added twice from the carvingManager?; > ; > In the case of segfault, is it because the indice 5 is still to be removed but your vertex buffer last index is now 4 ?. Hi @epernod ,; The collision pipeline correctly detected collisions between index 5 on the LineCollisionModel and all indices on the SphereCollisionModels. In the other removeElement functions, the indices are put into a set to filter duplicates. In the first commit for the new features this was not the case -> 5 was in the indices list multiple times.; The new commit filters out the duplicates.; It should also quite a bit faster, because it does not need to create a set.; Just one sort at creation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1238183338:423,detect,detected,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1238183338,1,['detect'],['detected']
Safety,"> Hello @alxbilger,; > ; > Thanks for the PR, removing that ""verbose"" looks fine to. As a deprecation worklfow I recommand:; > ; > * deprecate the data field (as done in the PR); > * updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ?. I agree but in the case of this PR, the Data `d_verbose` was really not used at all. So no need to do anything.; > * in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"". Yes, I will do it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205:479,detect,detect,479,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556742205,1,['detect'],['detect']
Safety,"> Hello @epernod,; > ; > Thanks for the fix... I also fixed it in a different way (and lost in the middle of all the changes) in the PR#1460.; > My fix was using enum class (C++11) instead of the classic enum (C). Enum class was designed to specifically avoid name clash so it is nice to use them. Ok just saw your fix @damienmarchal . Do you prefer your way? I can change this PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-682424203:254,avoid,avoid,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-682424203,1,['avoid'],['avoid']
Safety,"> Hello @marques-bruno; > ; > My assumption is that, initially, Base was supposed to be more the Base class for ""everything"" and not only for scenegraph entries. This is why the initial design was that there is no ""path"" concept at this level.; > ; > My current approach to handle this kind of scenario was to implement an easing function like that:; > ; > ```c++; > std::string sofa::helper::objectmodel::getPathName(Base* o); > {; > BaseNode *node = dynamic_cast<BaseNode>(o);; > if(node); > return node->getPathName();; > BaseObject *object = dynamic_cast<BaseNode>(o);; > if(object); > return object->getPathName();; > ...; > }; > ```; > ; > To avoid having if/else and dynamic cast at every call and thus easing the readability on the caller's.; > But I agree with your that factoring them out in Base would make sense. Actually some refactoring of BaseNode/Node/DAGNode/BaseContext would also make sense given how hard these are interleaved and unclear to most of the developpers. Let's get rid of BaseContext! ;); More seriously, I was also using easing functions before, but I noticed that I was often just duplicating the code whenever I needed it, and felt like having it in Base made more sense, but I must say that I would have preferred a virtual pure method there.. your alternative (adding in SofaCore an easing function in the sofa::core::objectmodel or sofa::helper::objectmodel scope) makes sense to me, solves the problem of having an extra function to override when inheriting Base.; Do you know if there is an improvement in perfs when using toBaseNode() / toBaseObject() instead of a dynamic_cast here?. I would not bet too much on performance improvement without making small benchmark. But in a function that basically returns strings build by concatenating ... I would say this is probably very small. . In addition it has to be noted that using a getPathName() explingn function with if/else has a linear complexity in the amount of possible types (number of if/else) while a",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1455#issuecomment-678138769:649,avoid,avoid,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1455#issuecomment-678138769,1,['avoid'],['avoid']
Safety,"> Hello Fred, to avoid excessive code coupling maybe such kind of application could be done using the simpleapi instead of the raw c++ api. This would demonstrate the same ""no gui"" app. I wanted to keep the direct usage of the components and direct linking with lib, for eventual people who would want to manipulate the components directly (because why not). This PR comes from the discussion https://github.com/sofa-framework/sofa/discussions/2785 which pointed to a (really) deprecated piece of code [in the doc.](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-scene-in-cpp/) I took the initiative to clean this project to use it directly into this page after merging. But indeed, the second step was to create the exact same project with the simpleapi API, to illustrate the 2 use-cases (runtime dep vs compile/link-time dep). And create a page about simpleapi in the documentation as well, as there is none (or I did not see)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2792#issuecomment-1075594174:17,avoid,avoid,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2792#issuecomment-1075594174,1,['avoid'],['avoid']
Safety,"> However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. This function should be very useful in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:. 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not... This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices. Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?. CC: @hugtalbot , @ChristianDuriez , @fjourdes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-797326125:1339,detect,detect,1339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-797326125,1,['detect'],['detect']
Safety,> I am ready to add the template parameter if you think it is necessary. Personally I dont really care (I like avoiding template if possible 😏) and I dont know if this structure is really used outside SOFA...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2641#issuecomment-1024018173:111,avoid,avoiding,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2641#issuecomment-1024018173,1,['avoid'],['avoiding']
Safety,"> I did the change for labels detection. The ""wip"" label will not be ignored by CI anymore. I created a new label ""pr: ci-ignore"" for that 👍. I would have done differently, it is normal for me that a ""wip"" PR is not ran on the ci (for polar bear sake). But the comment ""ci-build][with-all-tests"" should override the normal behavior. I don't know if it is easy to do?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-988652179:30,detect,detection,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-988652179,1,['detect'],['detection']
Safety,"> I find that the intermediate directories sofa/gpu/cuda are superfluous, and redundant with the name of the plugin. It is also in the prevision of changing the namespaces (which is not done in this PR).; > What do you think @hugtalbot @epernod @damienmarchal @fredroy ?. agreed @alxbilger !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1411679270:78,redund,redundant,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1411679270,1,['redund'],['redundant']
Safety,"> I like this kind of refactoring. Thanks for the tremendous work!; > ; > I guess you can also implement `computeBBox` in BaseROI. Done.; But the bbox itself does not take into account the input vertices, as it should be already taken into account by the other component from which the positions come from. It avoids doing twice the job",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4839#issuecomment-2244302449:310,avoid,avoids,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4839#issuecomment-2244302449,1,['avoid'],['avoids']
Safety,"> I pushed some change to handle the paths at a higher level, avoiding hard coded paths as much as possible. This is way better than what I had, thanks a lot !. > Also, QtWebEngine copy at the end of the script should be fixed. Not sure I'm super happy about this ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1728#issuecomment-765556597:62,avoid,avoiding,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1728#issuecomment-765556597,1,['avoid'],['avoiding']
Safety,"> In that case, why bother with manual init/cleanup? Where is it done? . This is precisely why I asked for feedback before merging, because I have no idea. I don't quite know why it was not automatic in the first place since this is all c++98. > If manual init/cleanup are removed, s_initialized/s_cleanedUp become obsolete. agreed, but until we know exactly what's going on we don't want to get rid of it. > What does guarantee that libs are loaded in the right order? . nothing, but libraries could probably load their dependencies upon `init` (+ simple cycle detection strategy) to have it all automatic?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-279743777:562,detect,detection,562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-279743777,1,['detect'],['detection']
Safety,"> It means the data is no longer processed in a predictable order. In most cases, it does not change anything since the data structure is converted to another. . I dont see any case where order is needed as you said, but it could be that someone somewhere would need it?; Should not we add a template parameter on the map type (and set it to default unordered_map) ?; I am wondering also if we should make this PR breaking by itself (breaking in the meaning of different behavior. Otherwise when I see the 1:10 ratio, I can see this is needed 😏",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2641#issuecomment-1023995762:48,predict,predictable,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2641#issuecomment-1023995762,1,['predict'],['predictable']
Safety,"> My target was to avoid collision with the existing str() function that may have a different semantic and I wanted to preserve it. There is no existing `str` function for python component wrappers (`grep tp_str`), the default python implementation is used. In python the semantic of `str` is to provide a concise representation of an object as a string, which is exactly what `BaseObject.getLinkPath` does. So really, using `str` seems the way to go.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308048324:19,avoid,avoid,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308048324,1,['avoid'],['avoid']
Safety,> Nice that fwd declarating BoundingBox is now possible (in the past is was causing compilation issues with visuals).; > . I have to say that I was doubtful that it would compile flawlessly when I tried to fwd declare 👀. > Please centralize all the foward declarations in /sofa/type/fwd.h to keep track of each of them and avoid forward declaration duplicated everywhere in the codebasE. No problem 👍,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2728#issuecomment-1049809757:323,avoid,avoid,323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2728#issuecomment-1049809757,1,['avoid'],['avoid']
Safety,"> So, as we discussed during the dev meeting. 2 modifications:; > ; > 1. Indeed, Boost, MPFR and GMP are dependencies of CGAL library itself not of the SOFA-CGAL plugin. As those dependencies are correctly handled internally in CGAL, I removed all mention of those libraries in the config file of the plugin.; > ; > 2. There is already a .cmake at the root dir of CGAL so the findCGAL.cmake is not necessary. Sofa just need to know ${CGAL_DIR} path. And in fact on windows, when you install CGAL this env_variable is set. So it works straight forward.; > ; > ; > @guparan can you confirm this is now ok to go?. The *FindCGAL.cmake* was there to avoid the need to manually set the `CGAL_DIR` variable when we install CGAL via `apt install libcgal-dev`. IIRC, it did not work straight forward with ubuntu 18.08 and centos 7, and maybe not even with recent versions of those distributions. I'll check it later today if you want with Docker, but I believe this file was useful.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-610910985:645,avoid,avoid,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-610910985,1,['avoid'],['avoid']
Safety,"> Still timeout, even with only 1 iteration 😞 To be disabled ?. @epernod @guparan I check on my computer to be sure that it computes something. If it does, let's ignore it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2422#issuecomment-949450586:8,timeout,timeout,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2422#issuecomment-949450586,1,['timeout'],['timeout']
Safety,"> Strange, looking at the dashboard: 1) some timeout appeared and 2) regression tests failing; > could this be related to the PR?. Hello Hugo!; Hum, I don't think so, that would be really strange, this PR is purely about cleaning, it does not change the behaviour of the component.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/856#issuecomment-448187576:45,timeout,timeout,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/856#issuecomment-448187576,1,['timeout'],['timeout']
Safety,> THere is 16 scene crashing on centos....but this seems to be because of timeout.; > Any idea ?. blinking time out errors on the CI I guess...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-686376515:74,timeout,timeout,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-686376515,1,['timeout'],['timeout']
Safety,"> Thanks again @ScheiklP for these investigations !; > ; > Normally the reset function is not supposed to have any cleanup results as it is only there to set again (re-set) the component in a previous state.; > ; > It is the ""cleanup"" that is called before removal/deletion of the component from the graph. Most of these components also do not have a `cleanup` function :D . I adapted the `sofaProjectExample` to match the python scene above to make memory profiling and debugging a bit easier. Same memory leak occurs. The code:; ```cpp; #include <sofa/defaulttype/VecTypes.h>. #include <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::com",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:614,detect,detection,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147,4,['detect'],['detection']
Safety,"> The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI. Maybe it is random, it does not crash on mine (but I only tried like 2, 3 times) on msvc; Nevertheless, I dont think this scene is working as intended anyway.... (the particules do not interact with the static mesh)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421:345,detect,detected,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421,1,['detect'],['detected']
Safety,"> You are clearly in a dev state, each time you push a commit it triggers a new build on the CI. I'll put the flag wip again until you tell me that you've finished your fixes to avoid loading the CI. All changes was minor and i think I'm not in dev state now. sorry for loading on CI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2084605955:178,avoid,avoid,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2084605955,1,['avoid'],['avoid']
Safety,"> You don't need to add checks, later in the code for: d_componentState.getValue() == sofa::core::objectmodel::ComponentState::Valid; > ; > to avoid crash?. I only have a partial answer:; I tested one time step and it works. I suppose it is because the initialization defines the topology. If the topology is empty, I guess that the later functions just don't iterate over the elements. But it's just a guess.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282012318:143,avoid,avoid,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282012318,1,['avoid'],['avoid']
Safety,> ```c++; > sofa::core::sptr<BaseObject>; > ```. `sofa::core::sptr<BaseObject>` is not much longer than `BaseObjectSPtr` and have to advantage of avoiding an alias :-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769774461:146,avoid,avoiding,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760#issuecomment-769774461,1,['avoid'],['avoiding']
Safety,"@EulalieCoevoet is right, changing parameter without warning is bad ; @hugtalbot it is very easy, there is two options. One consist in adding some test in the init() function of the component to detect if the data is set or not by the user and provide the adequate message. The other is to add a dedicated rules in the SceneChecker at the following of: ; ```cpp. void SceneCheckAPIChange::installDefaultChangeSets(); {; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""BoxStiffSpringForceField"" ); msg_warning(o) << ""BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'"" ;; }) ;; ```. @fredroy Eulalie also report that there was some changes in the way shaders are pass to components and that old working behavior stopped working without warnings so adding warning in the same way would be nice (@EulalieCoevoet).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/338#issuecomment-334521674:195,detect,detect,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/338#issuecomment-334521674,1,['detect'],['detect']
Safety,"@JeremieA Same starting point, loosing time to understand what is wrong, but with a slightly different conclusion. . I fully agree that the locale have to be set globally to each application calling sofa to correctly parse number. . But the real problem is caused by the fact that in Sofa there is places where we convert string to number while silently ignoring when something is wrong (or don't event detect something goes wrong as when using aoi/atoif) . . Silently ignoring blatantly invalid user inputs sounds like a terrible behavior I think we should give time to eradicate this kind of code (and atoi/atof/scanf are definitely the first place I would look for).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/151#issuecomment-281666312:403,detect,detect,403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/151#issuecomment-281666312,1,['detect'],['detect']
Safety,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:370,Detect,Detecting,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,8,['Detect'],['Detecting']
Safety,"@bakpaul I'm afraid the current PR to have a metis 5.2.1 package on conda-forge (https://github.com/conda-forge/metis-feedstock/pull/41) is stalling... and as the official repository is not active anymore (PR not merged anymore neither) and the official build chain is broken, it can take a lot of time before a 5.2.1 comes up on conda-forge. ; I think we would better be safe and ensure that we have a working solution, so we would need you to backport the changes of your metis fork on the 5.1.0 branch, in order to have a consistent version of used metis, wether it's external or fetched dependency.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1927068556:372,safe,safe,372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1927068556,1,['safe'],['safe']
Safety,"@damienmarchal @tgaugry @jnbrunet, what do you think of @sescaida 's comment?. I agree that it makes it a bit tricky to look into the inner mechanisms of the creation of datafields from the createObject method.; I tried to make it as clear / explicit / fail-safe as possible though: ; - datafields passed through the createObject() function MUST be inputs fields referenced in the `args` dictionnary present in the Python class and there is a nice warning showing up when you try to pass an argument that doesn't exist in the args `dictionary` to createObject; - The user needs to explicitely use the decorator function in the SofaPython module on the parse() method, so he kinda has to know what the decorator does; - The syntax is as close as possible to the syntaxt of normal sofa::core::DataEngines created in python:; ```node.createObject('TransformEngine', input_position='@component.data', translation='0 0 0')```; would translate into; ```node.createObject('PythonScriptDataEngine', input_position='@component.data', translation='0 0 0', filename=__file__, classname='PyTransformEngine')```. I personnally believe it's a must-have feature, because, let's say you have a python scene in which you have to create 5 times the same PSDE component, a custom TransformEngine for instance:; - Without this PR, you would have to create 5 separated classes, with the exact same implementation, just a different value in the addNewInput() in parse(). This is very redundant. ; - Passing the inputs values through createObject allows you to create a component only once, and use it as many times as you want in your scene afterwards.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-414973420:258,safe,safe,258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-414973420,2,"['redund', 'safe']","['redundant', 'safe']"
Safety,@damienmarchal are you going to complete this PR in the coming days?; It becomes critical for resuming #1797 and completing NG work. Do you still have timeout issues?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1799#issuecomment-786680992:151,timeout,timeout,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799#issuecomment-786680992,1,['timeout'],['timeout']
Safety,"@damienmarchal no problem as far as I'm concerned, but that would probably be safer to revert if possible until we hear more from others.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-279753068:78,safe,safer,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-279753068,1,['safe'],['safer']
Safety,"@epernod ; When making tests I generally try to tests either all the code-path or if this is too big, to test at least each added function with several values (eg: one with valid values and one with wrong one). . For examples of tests on a Class you can have at the test added in: ; https://github.com/sofa-framework/sofa/pull/119/files. For examples of tests on a component you can have look at the last Eulalie's PR (; https://github.com/sofa-framework/sofa/pull/108); and specifically at: ; https://github.com/SofaDefrost/sofa/blob/0df8da53458d64ed22b1cd2807555838e23ef0cf/SofaKernel/modules/SofaEngine/SofaEngine_test/BoxROI_test.cpp; you can also tests as in PR https://github.com/sofa-framework/sofa/pull/105 (interesting examples as they show how use ExpectMessage/MessageAsTestFailure to detect that a message has not been sended by the component); and more specifically in: ; https://github.com/SofaDefrost/sofa/blob/65a113512104f0237a4c4bf5e6f05b2c1d6a7013/SofaKernel/modules/SofaBaseCollision/SofaBaseCollision_test/DefaultPipeline_test.cpp. PS: I'm not saying this a super perfect tests but may gave you and idea on the direction to go.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273766830:796,detect,detect,796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273766830,1,['detect'],['detect']
Safety,"@epernod yes, these functions are the one used to queue in the object's message log all the msg_info/warnig/error/deprecation. ; basically this means that when an object receive a new message increment the component_state counter so we can detect ""something happened"". . On day we may wonder if, for msg_error() the component_state shouldn't be flipped to ""Invalid"", but for the moment the state counter is just ""incremented"" but not changed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2397#issuecomment-943187451:240,detect,detect,240,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2397#issuecomment-943187451,1,['detect'],['detect']
Safety,"@francoisfaure It is true that having dense matrix blocks is a must-have for some applications, but I wonder about the API: . - for efficiency reasons, we need the DOF types to be available if we want to implement this proposal; - it is quite difficult to recover actual DOF types *from outside* the mapping/forcefield, except when working with a component at the same graph level as the mapping/forcefield, so it seems restrictive to expect the caller to know the DOF types (or is it not?). Which leaves us with the following: back-inserting typed triplets into a container with `template`/overloaded insertion methods, one for each data chunk type. This way the mapping/forcefield DOF types are not part of the API (only the container type is), yet the mapping/forcefield calls the appropriate container method knowing its own DOF types. Of course, the overloaded insertion method must not be `virtual`, which would defeat the whole point. The container must know how to push typed chunks into its internal state (easy), but also how to use/recover it (harder since it needs to remember the types, e.g. for sorting typed triplets later on). This is not unfeasible, but it is not straightforward either. It also adds some complexity/overhead compared to scalar-only back-insertion. Is this worth it? . In order to remember ""typed contexts"" easily, we can draw inspiration from c++14's `std::variant`, where a small integer stores a type index from a variadic argument list, and this index is used for jumping in a static dispatch table. (I can expand on that if needed)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292881871:256,recover,recover,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292881871,2,['recover'],['recover']
Safety,"@fredroy a feedback from Hadrien from #3894. A crash is occuring from the SofaCUDALDI plugin, but it does concern SOFA.; The crash has been noticed when constraints are added on a ""non-mechanical"" object, aka a passive/non-moving object used for the collision detection (MechanicalObject with no solver). In the SofaCUDALDI plugin the following code is written : . ``` cpp; MatrixDerivRowConstIterator1 Re1= c1.readLine(c.myCId);; MatrixDerivRowConstIterator2 Re2= c2.readLine(c.myCId);; ; for (MatrixDerivColIterator1 it=Re1.begin(); it!=Re1.end();++it); {; //unsigned int dof = itSvd1->first;; dx1+= it.val(); //x1Free[dof] - x1[dof];; }; ```. while in CompressedRowSparseMatrixConstraint.h there is: ; ``` cpp; ColConstIterator begin() const; {; Range r = m_matrix->getRowRange(m_internal);; return ColConstIterator(m_internal, r.begin(), m_matrix);; }; ```. and in CompressedRowSparseMatrixGeneric.h :; ``` cpp ; Range getRowRange(Index id) const { return Range(rowBegin[id], rowBegin[id+1]); }. ``` . where rowBegin is empty. Hadrien explained that in a CRM structure, 2 values are required minimum in order to check whether the CRS is empty or not; Is this possible ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1723731877:260,detect,detection,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1723731877,1,['detect'],['detection']
Safety,"@fredroy, welcome back, . When I'm in this situation here is my workflow: . If it is really important for other to see my progress, or have multiple person commiting in the branh and have systematic feedback from the CI...I let the PR open with the pr:wip tag as guillaume answered. . Otherwise, if I prefer less publicity on the work (and avoid the PR to stay for month in the wip status) I close the PR, then open a new issue sumerizing & centralizing the discussion and I continue working in the closed PR. If from time to time if I need CI's feedback I re-open the closed PR for few hours..then close it back again until I really think this is a work nearly done.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-304904342:340,avoid,avoid,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-304904342,1,['avoid'],['avoid']
Safety,@fspadoni maybe you could add your input regarding the thread safe question.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642#issuecomment-385910578:62,safe,safe,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642#issuecomment-385910578,1,['safe'],['safe']
Safety,@guparan ; I don't think this is a regression. . This test fails on MacOS from time to time because of a timeout. It was described by @bcarrez somewhere (i'm searching:)). We should propably re-create a new issue because this is something that need to be fixed. EDIT: I didn't find where it was described by bruno so let me describe it better. The problem is related to the fact that the test are using a delay to wait the OS to notify the application a file has changed...but on MacOS the delay is not big enough causing the test to fail.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/105#issuecomment-273806468:105,timeout,timeout,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/105#issuecomment-273806468,1,['timeout'],['timeout']
Safety,@guparan thank you for pointing that.The problem is that the CI machine *_pr3 does not have the python module 'hjson' installed consequently psl tests failed. EDIT: So you can safely ignore them...& merge the PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357269105:176,safe,safely,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357269105,1,['safe'],['safely']
Safety,"@guparan the timeout in Jenkins is a timeout of ""no activity"" and not absolute...an application that constantly print on its ouput is not halted. This is clearly not enough. . We probably need both logics:; - a 'no activity' timeout that should be set to a short duration like 30min.; - an 'absolute' timeout configured to a much larger value (eg: build duration + all the test + 40% ). EDIT: one thing to add, timeout is not the panacea because a '3 hours timeout' (a sound value) already allows problematics build to cause a lot of harm in the CI. Our log files are always far below < 100 MB unless something goes really wrong. So my suggestion is some checks on the log file size to detect and cancel offending builds.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289728117:13,timeout,timeout,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289728117,7,"['detect', 'timeout']","['detect', 'timeout']"
Safety,"@hugtalbot ; My guess is the following:; When loading the SofaCUDA plugin, the module check if it can detect a cuda device. If there is no such a device, it now triggers an error, whereas it was just a print before. In other words, the behavior does not change (loading of the plugin), but the log message is now counted as an error. ; I think it is a good thing. It helps to identify the scenes that cannot be executed on the CI. For the case of the failing scene. I'll just remove the `<RequiredPlugin name=""SofaCUDA""/>` which is even not required.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903663503:102,detect,detect,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903663503,1,['detect'],['detect']
Safety,"@hugtalbot @epernod ; Done! :). **Before**:. https://user-images.githubusercontent.com/29635054/191820070-83997f7f-5b62-4c09-a0c9-6e22469da284.mp4. **After**:. https://user-images.githubusercontent.com/29635054/191820082-26d29ac0-21c1-4d65-9a62-3e27a550502b.mp4. **Scene to test with**:; ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:441,Detect,Detection,441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528,2,['Detect'],['Detection']
Safety,@hugtalbot you should provide a coding style file or reformatting it using clang to avoid annoying contributors with spaces/tabs. Two commits to fix indentation and more than 16 days to merge 20 lines of code is a waste of time,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353054406:84,avoid,avoid,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/536#issuecomment-353054406,1,['avoid'],['avoid']
Safety,"@marques-bruno Great list of types :). I think it would make sense to make this data factory a real factory with its own .h/.cpp, and set of method to add/remove element to it. This PSDEFactory (Actually a DataFactory) may be an attribute of PythonEnvironment. . Now about merging the PSDE with the PythonFactory, this sound is a different issue to me. As far as I can say the PythonFactory is in charge of generating the python binding of the 'right' type for an object (so a BaseObject* to the right SofaPython.Binding_SpecificObject) while the PSDEFactory is more in charge of allocating the right Data<> type (a string to Data<something>). I think a closer factory to look is how the Data<> are converted to and from python type (eg when we are accessing them with the getattr/findData). . I didn't investigated to much but I also have several worries about the existing PythonFactory: ; - the long sequence of if-else to detect among a set of ""hard code"" (why those ones, why there is an implicit ordering), ; - the complexity to match a type seems to be linear with the number of type (so the more type there will be in the factory the slowest it will be).; - this linear search is done *each time* an object is crossing the Sofa to Python border (which means each time we use Python to access Sofa object we pay this price).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-389395402:926,detect,detect,926,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-389395402,1,['detect'],['detect']
Safety,@matthieu-nesme ; If have the check in getUnsignedNumber for two reason:; - the '-' sign can be in the string passed to the getUnsignedNumber function so I have to check it. ; Eg of string that cause that to happen -5-5 or 5--5 ; - I don't make the assumption that this function will only be called from read...I suppose I will need it in ; a lot of other different context so I prefer to have the function robust. . Now from a performance point of view it is better to check the single char '-' at the beginning of the string than parsing the whole number to detect is was not good.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302727731:560,detect,detect,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302727731,1,['detect'],['detect']
Safety,@matthieu-nesme ; If you really want to be able from the script to activate/de-activate the reloading... the proper way of implementing that is to make a python function that adds the <Reload> component in the scene if it does not exist. Such implementation will be safe to use for the users compared to calling the __uninstall__ stuff as the existing approach do. . In case of several calls to the doReload function from multiple python script may even return a nice message warning the user that what he is doing is 'not needed'. . EDIT: I will give this version a try in this PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286717459:266,safe,safe,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286717459,1,['safe'],['safe']
Safety,"@matthieu-nesme I think we should implement str() as you have in your fork ;) . First of all thanks Matthieu and Maxime for the interest and time you put into this PR because it is getting very long. . Let's me summary the different approach that have been tried so far. . 1) The first version of the code was doing conversion by hard-coding the object type detection and calling getLinkPath(). The problem with this version is that it cannot be extend without adding more hard-coded test and recompiling the SofaPython plugin. ; Everyone agree this version is bad. . 2) The second version that was suggested by maxime is much more extensible as it was using the str() operator. The problem I see with this approach is that the str function have been implemented and is used in a lot of place (including Anatoscope fork) and so it may not be a god idea to now force the str() function to return the path just to make the createObject function happy. In this version prevent us to warn user there is a conversion done and that if they change the str() because, well its python they can do that, it may break something. This version is imposing that people writing a 'str' function have to keep in mind that (even if they don't know nothing about that) it must work if their object is called in createObject. (see later I try to explain better the problem). ; So to me this version will generate a lot of subtile problems and backward compatibility issues. . 3) The third version is close to use the str() in term of design but it makes it explicit that if an object want conversion to be used in the parameters of the createObject function it have to follow a specific protocol...this is done by implementing a dedicated function (eg: getAsACreateObjectParameter()). The implementation of this function for BaseObject and Sofa.Data could simply link to getLinkPath(). But if you have your own 'complex' object and want it to be used as a parameter in createObject you can just implement your own conver",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308062575:358,detect,detection,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308062575,1,['detect'],['detection']
Safety,@maxime-tournier As I made the revert and it seems it cause you extra work... ? Could I have done thing differently to avoid that ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/347#issuecomment-318193347:119,avoid,avoid,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/347#issuecomment-318193347,1,['avoid'],['avoid']
Safety,"@maxime-tournier and @matthieu-nesme ; Thanks for your suggestions,. It is not very clear when you are refering to ""current approach"" if you are discussing about the sofa version or the one that is already in this PR. . Existing Sofa looks like: ; ```cpp; namespace std{; ... operator<<(ostream, std::set); ; }; ```. In this PR it looks like: ; ```cpp; namespace sofa::helper{; using std::set ; /// do we need the template prefix as matthieu suggested ? ; ... operator<<(ostream, sofa::helper::set); ; }; ```. Maxime's suggestion ; ```cpp; namespace foo{; template<class ...T>; struct vector final : std::vector<T...> {; using std::vector<T...>::vector;; };; ... operator<<(ostream, sofa::helper::set); ; }; ```. The sofa existing one is clearly bad as it pollute the namespace. It seems to me that maxime's suggestion avoid the need to have 'using operator<<' in calling code. It is unclear to me what are the drawback.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/278#issuecomment-303335697:819,avoid,avoid,819,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/278#issuecomment-303335697,1,['avoid'],['avoid']
Safety,"@maxime-tournier did convince me now!. As long as the init of a lib is calling the init of its dependencies the init order should be ok (with the safeguard ""s_initialized"" not to init several times). But the cleanup order cannot be guarantee, but is it a big deal? For what I can see in the public code, these init/cleanup function do nothing yet. The doc can precise than ""cleanup"" must clean the actual lib, w/o depending on any other lib, and then the actual cleanup functions should not call cleanup from their dependencies. Also ""helper::printLibraryNotCleanedUpWarning"" was creating a big mess, because using the message logger while a lot of things were already destroyed could easily creating a segfault. Anyway it would not be useful anymore and could be removed too. - ""CleanupCheck"" RAII should be renamed; - s_cleanedUp could be removed; - all the call to init/cleanup could be removed from app/tests; - helper::printLibraryNotCleanedUpWarning should be removed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280283167:146,safe,safeguard,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280283167,1,['safe'],['safeguard']
Safety,"@raphaeldeimel That would be the idea. Note you can do it w/o modifying the collision model class.; Each object has a Data named ""tags"" dedicated to quickly hack these kinds of functionalities. Note that it is not an integer, so the lookup in a table would be less efficient. Note also that collision models have a Data 'group', that is here to decide who should collide with who, and you could certainly hack it too. More globally some parameters should be in external tables (not only the contact parameters but also the method to detect the collision, and the method to answer the contact, etc.) And an elegant way to do so should be discussed, but it is a quite big project.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/81#issuecomment-266072587:533,detect,detect,533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/81#issuecomment-266072587,1,['detect'],['detect']
Safety,"@sescaida I just took a look at the code of the ScriptDataEngine class.; You are partially right, the current implementation is the following:. `// Ok, so in the end we're stuck with using the AnimationBeginEvent? (20.02.2018, sescaida); void PythonScriptDataEngine::handleEvent(Event *event); {; if (AnimateBeginEvent::checkEventType(event)); {; setDirtyValue();; update();; }; }`; Here clearly, update is called everytime a AnimateBegin event is sent to the component. If it were a ""normal component"" (i.e. if it were a BaseObject-based component) that would be the only moment that update() method would be called. But the ScriptDataEngine also inherits core::DataEngine.; This is what I talked about during my presentation at the STC#5:; DataEngine both inherits from DDGNode & BaseObject. The update function is ""manually called"" from handleEvent, but it actually shouldn't be, because this is redundant to how DataEngine works, which is having its update() method called **when and only when** a component, taking as an input the output data of that engine, calls getValue() on that data, WHILE any of the engine's INPUTS are flagged dirty. . So basically, while some people call update() in their handleEvent method, this should never be done, except in some (quite) twisted cases.; Btw, it took me quite some time to understand that.. few months ago, all my engines were calling update() in handleEvent, and I had a lot of problems because of that.. ^^. Technically, in the case of the scriptDataEngine, if you remove entirely the call to the update function in handleEvent, and if your dependency graph is well built, you should get the behavior you want",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407008370:899,redund,redundant,899,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407008370,1,['redund'],['redundant']
Safety,"@sescaida Thanks for the review; The reason why I didn't add examples for this PR is because the current examples themselves, without any modification, demonstrate that it works as-is, thus showing that the call to update() in the handleEvent method was redundant with the default DDGNode's update mechanism. Basically, if your scene is well created (links are properly made between datafields & data are correctly accessed by components lower in the scene graph), everything should work just as well as before. The only difference I would say, is that the user has the hand over the cleanDirty() method, which allows him to fix use cases where a read acces is performed on an input, after setting an output's value has been set, in update(). as for whether it is a good idea to keep that system, I must say, that I agree with you, as we discussed before: Bringing the complexity of the DDGNode's mechanism in Python might be something we want to avoid.; Although, I think that the good approach to fight this issue would rather be to solve the problem on the C++ side (simplifying the Data-Update mechanism) than to diverge from it by simplifying the Python process.; I think @damienmarchal woul be the best placed to give us a feedback on this question, maybe? (When he'll be back from his holidays of course!)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413560022:254,redund,redundant,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413560022,2,"['avoid', 'redund']","['avoid', 'redundant']"
Safety,"@sescaida, you can find [here](https://github.com/marques-bruno/snippets/blob/master/testDataEngine.cpp) a test code for Sofa showing what happens when cleanDirty is called at the wrong moment. After testing a little bit the engines, I noticed that the only case where it wouldn't work (to have all the data updates & cleanDirty() before calling the update() method would be in the very unlikely case where the update() method would fetch an earlier engine in the dependency graph through getContext, and set its output value. this is very unlikely, which means that, apart for some performance reasons, I don't see why it would be important to bind the cleanDirty() method in python. Since python is much slower anyway, I think this PR does not make much sense anymore. although, I still insist on removing the call to update() from handleEvent, since it is redundant with its normal on-demand calling mechanism. :) I'll update the PR soon!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372:859,redund,redundant,859,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372,1,['redund'],['redundant']
Safety,@thomas-lemaire currently I see that some components are doing; ```cpp; if(printLog) sout << ; ```; While the 'sout' is already checking the printLog which is redundant. This is what I'm refering as mis-usagse. To me the cleaning consist in defining what is the right pattern to employ and this may (or not) result in removing the if(printLog) from the component and replace them with the use of 'sout'. . About the link with PR106. With the PR a dedicated message handler has to be installed in the application or the scene to activate loggin into component... this is done with the following code ; ```cpp; MessageDispatcher::addHandler(&MainPerComponentLoggingMessageHandler::getInstance()) ;; ```; But currently this is not done in runSofa or any other app and the messages are not added to the log. This is why I'm saying the PR is independent and is without side effect. . When the printLog expected behavior is clear the current log 'to the big string' should be removed and replaced by installing the logging proposed in PR106.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276932662:159,redund,redundant,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276932662,1,['redund'],['redundant']
Safety,"@untereiner , . I'm concerned about the the impact of the fix against existing scenes. ; So can you explain a bit more what is fixed ? Was it a broken behavior resulting in a failing test or a failling scene or is it fixing a 'yet un-noticed' and fundamentally broken behavior ? ; If the computation is changed, is there any risk to have other people scenes to behave differently ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/290#issuecomment-306482993:325,risk,risk,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/290#issuecomment-306482993,1,['risk'],['risk']
Safety,"A bit of explanation about this PR:; When a attribute is passed to createObject, it is added to the BaseObjectDescription of the component. This means that, in cpp, the parse() method, that takes a BaseObjectDescription in parameter, has this information. The problem is, that in the PythonScriptDataEngine, the parse method calls the python version of the parse() method, which doesn't take this BaseObjectDescription in parameter (maybe that should change btw, since its mainly a simple key/value dictionnary after all...); The datafields could be added directly from the C++, but since most of the error handling in the creation of derived I/Os in #742 is performed in the bindings, it would mean recoding a lot of redundant code.; Since I didn't want to touch the parse() method, I created an additional method, that can (or not) be used in PSDEs, named ""datalinks"". This method is called right after the parse() binding, and takes a filtered version of the BaseObjectDescription as an argument (all datafields already created in the parse() method are removed from the dictionnary). The function then calls addNewInput() on each of the leftover fields. I'm certain there is a cleaner way of doing that.; - I was thinking maybe calling directly the python addNewInput() method from the cpp parse() method, to avoid the creation of this extra module function, but I am not sure I know how to do that. ; - Another idea would be to pass the BaseObjectDescription in the parse() method of the PSDE (as it should be done IMHO), and let the user decide whether or not he wants to loop over those fields to create inputs.. more error prone in my opinion. But you guys have good input on that ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-409859524:718,redund,redundant,718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-409859524,2,"['avoid', 'redund']","['avoid', 'redundant']"
Safety,A break is present in the ```doUpdate``` function making the detection of all hexahedra fail. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1417:61,detect,detection,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1417,1,['detect'],['detection']
Safety,"A bug has been detected when creating and deleting component using TopologyHandler during the simulation. ### Current Status; Right now in the code, components like FEM, Constraints, etc... are creating TopologyData and at init stage, those TopologyData are creating a TopologyHandler to support TopologicalChanges (only if the component is linked with a dynamic topology container).; The actual design is:; 1. Create the TopologyHandler at component init (internally through the TopologyData creation). ; 2. The TopologyHandler register itselft into the TopologyContainer to be able to receive topological events.; 3. When the simulation graph is destroyed, TopologyHandler is deleted and TopologyContainer is cleared. ### Limitation/Bug; Scenario like using the mouse picking is creating a temporary Node with springFF or attachedConstraint component which is creating a TopologyHandler. When the mouse is released the Node is destroyed, deleting the components and the TopologyHandler as well. ; But the TopologyHandler is not properly removed from the dynamic topologyContainer list of TopologyHandler. This is why in issue #3370 the scene crash as soon as a vertex is removed because the TopologyContainer is sending the POINTREMOVED event to all topologyHandler registered. Including the deleted one from the mouse attached constraint. The pointer to the topologyHandler is not null but pointed to a deleted object. ### PR changes description; This PR and the PR #3271 (included in this on) are introducing a mechanism to better register and unregister a TopologyHandler from the TopologyContainer.; 1. register is done at creation of the TopologyHandler; 2. If TopologyHandler has well been added to the list manged by the Container, a internal bool m_isRegisterd is set to true.; 3. When the TopologyHandler is deleted (meaning its component owner is deleted). If m_isRegisterd == true, the TopologyHandler will unregister itself.; 4. When the TopologyContainer is deleted, it will go through ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3369:15,detect,detected,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369,1,['detect'],['detected']
Safety,"A component can be included in multiple maps (`uncreatableComponents`, `dealiasedComponents`, ` movedComponents`). If it is the case, only one was picked and the others were ignored. This PR processes all the maps to inform the user. Example of output:. ```; The component 'DefaultPipeline' cannot be found in the factory. ; Several reasons are possible:; 1) This component has been MOVED from SofaBaseCollision to Sofa.Component.Collision.Detection.Algorithm since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Collision.Detection.Algorithm'/> ; 2) This alias for the component CollisionPipeline was removed in SOFA v24.12.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5074:440,Detect,Detection,440,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5074,2,['Detect'],['Detection']
Safety,"A link to an example scene : https://pastebin.com/iwCdMGBK. ```xml; <?xml version=""1.0""?>; <Node name=""Root"" dt=""0.02"" gravity=""0 -1 0"">; <VisualStyle name=""visualStyle1"" displayFlags=""showAll"" />; <RequiredPlugin name=""Cloth""/>; <DefaultPipeline name=""DefaultCollisionPipeline"" verbose=""0"" draw=""0"" depth=""6"" />; <BruteForceDetection name=""Detection"" />; <LocalMinDistance name=""Proximity"" alarmDistance=""1"" contactDistance=""0.5"" />; <DefaultContactManager name=""Response"" response=""default"" />; <DefaultCollisionGroupManager name=""Group"" />; ; <Node name=""moving"" > ; <EulerImplicitSolver/>; <CGLinearSolver/>; <GridMeshCreator name='loader' resolution = ""5 5"" rotation=""-90 -0 -0 "" scale3d =""3 3 3"" translation =""-2 2 2"" trianglePattern = ""1"" />; <MeshTopology name='mesh' position=""@loader.position"" edges=""@loader.edges"" triangles=""@loader.triangles"" />; <MechanicalObject template=""Vec3d"" position=""0 0 0"" src=""@mesh"" />; <TTriangleModel template=""Vec3d"" proximity=0.3 contactStiffness=10 bothSide=1/>; <TPointModel template=""Vec3d"" proximity=0.3 contactStiffness=10 bothSide=1/>; <TLineModel template=""Vec3d"" proximity=0.3 contactStiffness=10 bothSide=1/>; <UniformMass/>; </Node>; ; <Node name=""fixed"" >; <EulerImplicitSolver/>; <CGLinearSolver/>; <MeshObjLoader name='loader' filename=""mesh/cube.obj""/>; <MeshTopology name='mesh' position=""@loader.position"" edges=""@loader.edges"" triangles=""@loader.triangles"" />; <MechanicalObject template=""Vec3d"" position=""0 0 0"" src=""@mesh"" translation=""0 -5 0"" scale3d=""10 1 10""/>; <TTriangleModel template=""Vec3d"" proximity=""0.1""contactStiffness=10 bothSide=1/>; <TPointModel template=""Vec3d"" proximity=""0.1"" contactStiffness=10 bothSide=1/>; <TLineModel template=""Vec3d"" proximity=""0.1"" contactStiffness=10 bothSide=1/>; <FixedConstraint template=""Vec3d"" fixAll=""1"" />; </Node>; </Node>; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5#issuecomment-490817063:341,Detect,Detection,341,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5#issuecomment-490817063,1,['Detect'],['Detection']
Safety,"A little update:; - added `wrap/unwrap` mechanism: there are wrapping traits in `PythonToSofa.inl` specifying wrapped type (`PySPtr` or `PyPtr`) for a given type (defaults to `PyPtr`); - wrapping traits specializations for `Base`, `BaseData` and `BaseLink`-derived classes. `Base`-derived classes are wrapped as `PySPtr<Base>`, `BaseData`-derived as `PyPtr<BaseData>`, etc. this should cover most cases.; - `unwrap<T>(py_obj)` first recovers the wrapped type and the object pointer, then `dynamic_casts<T*>` ; - `unwrap_self<T>(py_obj)` does the same but with `static_cast` (this is for `self` arguments, python enforces that `self` is an instance of this type). Extension code should look like this now:. ```c++; Node* node = sofa::py::unwrap_self<Node>(self);; BaseObject* obj = sofa::py::unwrap<BaseObject>(py_obj); if(!obj) { ... }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304#issuecomment-310324600:433,recover,recovers,433,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304#issuecomment-310324600,1,['recover'],['recovers']
Safety,"A mechanism of component state is now available while it is still unused and the API is not spread over the code base. We could work on generalizing it : delegating all functions (init, addForce etc) to make sure it uses the componentState.; Then, internal update of component would be possible and check in the scene graph of each component would allow to detect issues and prevent from crashes. Initially, this issue was only focused on ""Deprecate the doUpdateInternal"" : this API of internal update in BaseObjects should be removed and callbacks should be spread instead. As noticed in #1979",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2005:357,detect,detect,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005,1,['detect'],['detect']
Safety,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2280:480,avoid,avoid,480,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280,1,['avoid'],['avoid']
Safety,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2112:113,detect,detection,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112,1,['detect'],['detection']
Safety,"According to @jnbrunet 's feedback I would say that the right approach to fix this is to stop using implicit and hidden link between objects. In defrost we are doing this kind of pattern (in pseudo code) this: ; ```cpp; class MyObject {; ....; SingleLink<Topology> topologyLink;; }; MyObject::init(){; /// Check if the link is explicitely set, ; if( !topologyLink.isSet() ){; /// If this is not the case so fallback to get the first topology in the context (buisness as usual) topologyLink.setLinkTo( getTopology() );; }. /// Here we use linked object. ; }; ```. Such an approach:; - is compatible with our existing scene base (when no link is specified then automatically retrieve something from the context) . But it brings the following: ; - As there is systematically a SingleLink for each getContext query, users can see in the GUI which object is actually linked to and so he can detect more easily what is wrong. . - With the SingleLink it become possible for the user to specify object should be used instead of the one retrived from the context (eg when you want the second object instead of the first one). . So to me we juste need to generalize this way of doing to all sofa objects. ; Any suggestion and feedback welcome.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/744#issuecomment-411381930:886,detect,detect,886,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/744#issuecomment-411381930,1,['detect'],['detect']
Safety,"Actually I was more thinking on tracking Mass::d_componentState to either be notified on changed or to simply detect when a mass is changed using a DataTracker. . Using a DataTracker situation would be more or less the following... . ```cpp; class MatrixLinearSystem; {; // .......; private:; DataTracker massChangedTracker; ; };. void MatrixLinearSystem<>::XXXX(); {; ...; /// somewhere where we add the mass to the lists of contributor; massChangedTracker->trackData(contributor->d_componentState); ... ; }. void MatrixLinearSystem<TMatrix, TVector>::contribute(const core::MechanicalParams* mparams); {; ...; /// Here we can then juste track the change; else if constexpr (c == Contribution::MASS); {; if( massChangedTracker->hasChanged(contributor->d_componentState) ) ; {; contributor->buildMassMatrix(m_mass[contributor]);; massChangedTracker->clean(contributor->d_componentState); ; }; }; ....; }; ```. PS: This is somehow connected to what @hugtalbot is doing in these PRs: https://github.com/sofa-framework/sofa/pull/3927",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4625#issuecomment-2042583615:110,detect,detect,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625#issuecomment-2042583615,1,['detect'],['detect']
Safety,"Actually almost all components in the SofaBoundaryCondition (module of FixedConstraint) depends on SofaBaseTopology (which is were is the TopologySubsetData thing). So I guess more discussion would be needed how to avoid this kind of dependency (maybe move TopologyEngineImpl & co to SofaCore, along TopologyEngine.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/246#issuecomment-774097657:215,avoid,avoid,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/246#issuecomment-774097657,1,['avoid'],['avoid']
Safety,"Actually this feature is already available for PointModel and LineModel. That's why I just added it in the same way for SphereModel.; But you're right, we can try to add it at the top of collision model hierarchy.; One thing is that sometimes when a controller is heritating from this ""PrimitiveActiver"" we want to implement different behaviours for several type of primitive; I guess that with the generalization approach we would have to implement a controller for each behaviour (not that bad), or you can help me understand how we could avoid doing so ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1259#issuecomment-590768065:541,avoid,avoid,541,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1259#issuecomment-590768065,1,['avoid'],['avoid']
Safety,Add a boolean data (d_propagatetoDOF) to allow or not the propagation of the topological changes to the mechanical state immediately as soon as they occure. Default value (d_propagateToDOF=true) the topological changes are propagated immediately following the SOFA regular behavior and it should not affect all the Sofa current scenes. If the boolean is set to false the topological state changes update are not propagated immediately and they can executed in another step of the simulaiton loop. This modification should make the concurrent execution of the topological changes and the simulation safe. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/838:598,safe,safe,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/838,1,['safe'],['safe']
Safety,"Add a generic method for drawing detection outputs following issue #4008 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4048:33,detect,detection,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4048,1,['detect'],['detection']
Safety,"Add a new method to compute vertexMass using an input density and rework the different init to avoid calling several time the method computeMass which should not be used outside from the class. Fix test UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra; which is failling since PR #2183 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2186:95,avoid,avoid,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2186,1,['avoid'],['avoid']
Safety,Add a variable to count the number of primitve tests performed during the narrow phase of the collision detection.; This variable is only for statistics purpose. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/930:104,detect,detection,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/930,1,['detect'],['detection']
Safety,"Add new directories (Let me know now if you want other names):; - **SofaCUDA/scenes/benchmarks/** _(to put cpu and similar gpu scenes to check performances)_; - **SofaCUDA/scenes/cpu-gpu_validation/** _(to put scenes within cpu and gpu Nodes)_. All scenes within actual SofaCUDA/examples will be progressively (after check and refresh) moved either to benchmarks or cpu-gpu_validation or a third directory: **SofaCUDA/scenes/demos** _(for more advanced gpu scenes)_. - Here is an example of cpu-gpu_validation scene for MeshSpringForceField. Cpu version in red and GPU version in green.; ![image](https://user-images.githubusercontent.com/21199245/147080986-1f138589-6fc4-4b28-8020-14095fb3775c.png). - For the benchmarks: ; - MeshSpringForceField_beam10x10x50_cpu.scn (~40 fps) ; - MeshSpringForceField_beam10x10x50_gpu.scn (~75 fps) . - Add Quick safeguard in CudaSpringforceField.cu to avoid 0 division. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2556:849,safe,safeguard,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2556,2,"['avoid', 'safe']","['avoid', 'safeguard']"
Safety,"After some tests on a cantilever beam with a LDL solver and a scalar CSR matrix:. - `addKToMatrix` takes a large part of the time for low number of elements; - `addKToMatrix` takes less and less part of the time as the number of elements grows; - The time consuming operation (more than 90% of the time) in `addKToMatrix` is `r.matrix->add(i, j, v)`. In the test, `r.matrix` is of type `CompressedRowSparseMatrix<double>`, and I did not test a bloc-based matrix. ; - In `r.matrix->add`, `wbloc` is the time consuming function. My profiler did not tell me more information inside this function. I tried to pre-allocate `btemp` before all the `add` calls, but it does not help. I suspect the bad performances come from the algorithm itself which must find an element in sorted arrays at each `add` call.; - Since the bad performances come from `CompressedRowSparseMatrix<double>::add`, it would be interesting to parallelize the calls to `add`. However, I doubt `CompressedRowSparseMatrix` is thread-safe...; - My tests are in https://github.com/alxbilger/sofa/commit/41584bceaf5d5666c362cdfb28238318c750af9e. But I don't plan to merge it since it does not improve the performances",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-868309098:998,safe,safe,998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-868309098,1,['safe'],['safe']
Safety,"After spending half a day struggling on a little piece of code, I finally found out that my call to invertMatrix didn't return the correct result:. In Sofa, calling ; ```; Matrix3 M;; M.invert(M);. ``` ; returns a grotesque bullshit, because ""from"" and ""dest"" are the same, and no copy is made, so values are changed and read at the same time.; I understand that in terms of performance, avoiding a useless copy is good, but there is no warning message of any kind, not even as a comment over the function. For the `transpose()` function, there is an additional` transposed()` method that directly stores the transposed matrix in its initial data structure.; I suggest that an `inverted() `method be added to `Mat`, and a little comment above the `invertMatrix()` function be added to warn about this specific problem. What do you think?; If it sounds good to you, I can take care of it. If you see a better way of warning the user about this behavior, or consider that removing entirely the issue by making a temporary copy of the value is not aberrant, that would be even better I guess. @hugtalbot @guparan . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/280:388,avoid,avoiding,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/280,1,['avoid'],['avoiding']
Safety,"After spending some (too much?) time on this topic, it seems that the fact that static_assert not being evaluated in uninstantiated functions of template classes is not consistent between compilers.; Neither could I find a way to trick the compiler to postpone the evaluation of the condition of the static_assert (for example replace (N==10) by (sizeof(T)==0||N==10) , of template tricks to force the compiler to wait for template instantiation before assertion evaluation. All this is also true for BOOST_STATIC_ASSERT (tried this with no chance, too). My opinion would be to simply remove the static_asserts, since in this context their behaviour is not specified by C++ references (and not consistent). We loose the benefit of the safeguard but are not subject to false-positive anymore. If anyone sees another solution...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/130#issuecomment-272476017:735,safe,safeguard,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/130#issuecomment-272476017,1,['safe'],['safeguard']
Safety,"After the discussion on DataLink ( #1526 ) now the Link themselves:. Objectives:; - Avoid multiple instantiations (Node.h) - Link with forward declaration; - Avoid using Links for Sequence / Single when it is actually no real Link. Positive impact:; - clean, factorization and especially the tests; - compile time, perf, related problems: can not be evaluated; - code more readable, more accessible (new devs). Functionally:; - store list something with a name and a help string; - SingleLink vs MultiLink → Shared API; - MultiLink conversion does not exist; - MultiLinks have iterators; - SingleLink have the API for iterating over elements (even if single link). -------. Tasks; - Add test for CheckPath to validate its behavior: #1714 [Merged]; - Move CheckPath() & CheckPathes() from Link.h to BaseLink: #1717 [Merged]; - Add test to show broken behavior in SingleLink: #1749 [To review]; - Move updateLinks() from Link.h to BaseLink: #1735 [Waiting #1749]; - Move read() from Link.h to BaseLink: #1736 [Waiting 1735]; - Unify the notifcation mechanisme in SingleLink/MultiLink: #1706 [breaking]; - Unify the container part of the Link API for SingleLink/MultiLink/BaseLink: (TO COME, draft in:; https://github.com/CRIStAL-PADR/sofa/blob/xp-remove-node-deps/SofaKernel/modules/SofaCore/src/sofa/core/objectmodel/Link.h ); - Replace the use of SingleLink to implement the non sptr version of Node::Single: (TO COME, wip in #1737); - Replace the use of MultiLink to implement the non sptr version Node::Sequence: (TO COME as drafted in NodeContainerSequence https://github.com/CRIStAL-PADR/sofa/blob/xp-remove-node-deps/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/Node.h); - Unify at best the internal parts of SingleLink & MultiLink (TO COME)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1722:84,Avoid,Avoid,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1722,2,['Avoid'],['Avoid']
Safety,"All non-linear mappings have a Data `d_geometricStiffness` defining how the geometric stiffness of the mappings should be computed. Depending on the mapping, it can have the following values:. - `None`; - `Exact`; - `Stabilized` (not all the mappings provide this option). By default, all mappings are set to `Stabilized`, except for `RigidMapping` which is set to `None`. I would like to set the default value to `Stabilized` also for `RigidMapping`. But I suspect that the reason it has not been done is for performances. Indeed, there are cases where there are no forces to map. In these cases, the geometric stiffness computation is superfluous (because it involves multiplication by null forces). Such cases are for example when a visual model is mapped. We can imagine detecting automatically that there are forces under a mapping or not. Depending on this detection, we can decide if the geometric stiffness should be computed or not.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3837:775,detect,detecting,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3837,2,['detect'],"['detecting', 'detection']"
Safety,"Almost all collision detection components in SOFA were a fusion of the broad phase and the narrow phase in a single component. This prevents some combination and confuses about what the component really does.; Following the work in #2010 and #2043, some components such as `BruteForceDetection` and `DirectSAP` can be removed in favour of a broad phase and a narrow phase. In this PR:. - `BruteForceDetection` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2118:21,detect,detection,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118,3,['detect'],['detection']
Safety,"Almost all modules needs Sofa.BaseTopology because of:; - TopologyData (topology changes) is included by a lot of components; - a lot of components who wants to use Topology are using *SetTopologyContainer instead of BaseMeshTopology or TopologyContainer abstractions; - people who wants to call some geometry-related algorithms is using *SetGeometryAlgorithms. Obviously, some components still needs to use *SetTopologyContainer, *GeometryAlgorithms or *TopologyModifier, and will still need to depend of Sofa.BaseTopology. But 90% could avoid this dependency. Resolving those dependencies could lead to use much more easily different type of topologies (e.g darts-based topology). (also related to SOFA-NG, as a lot of families of components needs Sofa.Component.Topology and could avoid that as well)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2402:539,avoid,avoid,539,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2402,2,['avoid'],['avoid']
Safety,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1979:5,avoid,avoid,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979,1,['avoid'],['avoid']
Safety,"Alternatively, we could have a naive custom ""find or fetch"" mechanism such as ; ```; # find or fetch TinyXML2; find_package(TinyXML2); if(NOT TinyXML2_FOUND); include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; URL_HASH MD5=afecd941107a8e74d3d1b4363cf52bd7; ); set(tinyxml2_SHARED_LIBS ON); FetchContent_MakeAvailable(tinyxml2); endif(); ```; But, we typically want to avoid this call at each dependency requirement (so here replacing the current `find_package(TinyXML2)` calls, especially in the fetch case.; We could have these lines in a top-level CMakeLists instead, but this go in the opposite direction of our CMake dependencies management where it seems that we search the specific dependency on each target CMakeLists.; I believe (to be confirmed) that this can be avoid with the new mechanism introduced in cmake v3.24, by calling once the `FetchContent_Declare` (so in a kind of top-level cmake) and calling `FetchContent_MakeAvailable` for each target that needs it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1766827939:449,avoid,avoid,449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1766827939,2,['avoid'],['avoid']
Safety,"An other batch of warnings fixes. Detected while using gcc13 from ubuntu2404. Fix some UB by fixing some dangling references warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4698:34,Detect,Detected,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4698,1,['Detect'],['Detected']
Safety,"Apparently, I am unable to run runSofa when using something related to OpenGL with mesa graphics on linux. Here you can find a backtrace. ```; ########## SIG 6 - SIGABRT: usually caused by an abort() or assert() ##########; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(sofa::helper::BackTrace::dump()+0x23) [0x7fb9a8befb13]; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(sofa::helper::BackTrace::sig(int)+0x1df) [0x7fb9a8befeaf]; -> /usr/lib/libc.so.6(+0x3d6a0) [0x7fb9a83c56a0]; -> /usr/lib/libc.so.6(gsignal+0x145) [0x7fb9a83c5615]; -> /usr/lib/libc.so.6(abort+0x116) [0x7fb9a83ae862]; -> /usr/lib/libstdc++.so.6(+0x9686a) [0x7fb9a876986a]; -> /usr/lib/libstdc++.so.6(+0xa2d9a) [0x7fb9a8775d9a]; -> /usr/lib/libstdc++.so.6(+0xa2e07) [0x7fb9a8775e07]; -> /usr/lib/libstdc++.so.6(+0xa30ae) [0x7fb9a87760ae]; -> /usr/lib/libstdc++.so.6(std::__throw_logic_error(char const*)+0x45) [0x7fb9a876c445]; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(CanUseGlExtension(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x11c) [0x7fb9a8ce16ec]; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(sofa::helper::gl::GLSLShader::InitGLSL()+0x9e) [0x7fb9a8ce29ae]; -> /opt/libs/sofa/build/lib/libSofaOpenglVisual.so(sofa::component::visualmodel::OglShader::initVisual()+0x2c) [0x7fb99f31abfc]; -> /opt/libs/sofa/build/lib/libSofaOpenglVisual.so(sofa::component::visualmodel::Light::initVisual()+0x31d) [0x7fb99f2767bd]; -> /opt/libs/sofa/build/lib/libSofaOpenglVisual.so(sofa::component::visualmodel::LightManager::initVisual()+0x259) [0x7fb99f28c529]; -> /opt/libs/sofa/build/lib/libSofaSimulationCore.so.20.06.99(sofa::simulation::VisualInitVisitor::processNodeTopDown(sofa::simulation::Node*)+0x127) [0x7fb9a9d37407]; -> /opt/libs/sofa/build/lib/libSofaSimulationGraph.so.20.06.99(sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1567:192,abort,abort,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1567,2,['abort'],['abort']
Safety,"Apply doUpdateInternal API to ConstantForceField; and also change the behavior: do not extrapolate any info when an mismatch of size is detected. - Finally, let's not wait the Data update discussion to integrate such an amazing change ; - And .. we could also think about renaming this class as UniformForceField to be consistent with Masses!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1145:136,detect,detected,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1145,1,['detect'],['detected']
Safety,"As I was not ready to kill all the existing tests I solved the issue in a different way that I found simple. ; The idea is based on a small api that mimick the Python API and then to use it to re-implement the SceneCreator functionnality. This is in the STC4 branch. If you are curious it look like that:; ```cpp; #include<SceneCreator/SimpleAPI.h> . Node::SPtr root = simulation::getSimulation()->createNewGraph(""root"");; simpleapi::createObject(root, ""DefaultPipeline"", {{""name"",""Collision Pipeline""}}) ;; simpleapi::createObject(root, ""BruteForceDetection"", {{""name"",""Detection""}}) ;; simpleapi::createObject(root, ""MinProximityIntersection"", {{""name"",""Proximity""},; {""alarmDistance"", ""0.3""},; {""contactDistance"", ""0.2""}}) ;. simpleapi::createObject(root, ""DefaultContactManager"", {; {""name"", ""Contact Manager""},; {""response"", responseType}; });. simpleapi::createObject(root, ""DefaultCollisionGroupManager"", {{""name"", ""Collision Group Manager""}});; ```. I'm quite sure we should be able to make much nicer things with a proper eDSLinstead of mimicking the python API but I'm not sure I have time for that. My target was to remove all dependencies between Sofa & SceneCreator and this make the job.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334524331:571,Detect,Detection,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334524331,1,['Detect'],['Detection']
Safety,"As an additional thread management pattern, I would like to add a thread pool with persistent worker threads, which also uses ""Task"" instances to encapsulate single work items as in the Multithreading plugin.; The motivation for this alternative to the existing work-stealing approach in the Multithreading plugin is to use it for a simple parallelization scheme in the collision detection pipeline.; There are currently two Task types available:; * For running bounding volume hierarchy updates in parallel; * For running collision pair checks in parallel. Both task implementations require no modifications to the existing collision model implementations (especially not within the CubeModel class).; However, the implementation is not complete yet, as I have yet to find a reliable alternative to generate DetectionOutputVector instances after all collision pair checks have finished their computations.; I have implemented this as a separate library and plugin, largely independent of changes in SOFA core classes and completely independent of the existing MultiThreading plugin.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-263825437:380,detect,detection,380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-263825437,2,"['Detect', 'detect']","['DetectionOutputVector', 'detection']"
Safety,"As an information, we are working on a first set of basic components, implementing the main virtual classes defined in SofaFramework and SofaSimulation. This first step helps us in detecting unexpected/undesired dependencies. The list of these basic components will soon be presented and the resulting SOFA NG sources released as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/226#issuecomment-295246847:181,detect,detecting,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/226#issuecomment-295246847,1,['detect'],['detecting']
Safety,"As asked I removed the Data in base. . Now here is my working plan regarding all that ordering all the feedback received: ; - PR0: was implementing a per component logging system on top of the msg_api to prove we can replace the existing error logging system. This was done in this PR. - PR1: with the introduced system to replace the existing logging of error (this PR is risky and touch a lot of file) it should contains: ; - removing the filling of the messages in sout.; - removing the old string based buffer (API BREAK). ; - removing all the uses of the old message buffers and replace them with the new one (API BREAK). ; - updating the gui to use the new msghandler buffers. - PR2: removing the printLog Data:; - backward compatibility solution must be implemented. ; - a replacement solution has to be implement to control the printing.; - a replacement solution has to be implement to control the messages based on a per-component selection of the printed messages . - PR3: extending/unifying the sout/serr with more sdebug/swarning. This must be discussed seriously during a meeting because I currently made a lot of attempts to this but didn't managed to implement a working solution without the sever flawn sout/serr have. If you have ideas on that please make a branch with working proposal so that we have sounded discussion. . Anyone interested in working on PR1, PR2 and PR3 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-277260662:373,risk,risky,373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-277260662,1,['risk'],['risky']
Safety,"As far as I remember, it was said that to encourage PR submission & reviewing the policy on which we agreed was something like ""if no one complains then the PR get merged after if they pass the CI"". . I did a quik review of the PR:; - cpack control seems ok (if I understand correctly this is only for cpacking, which is mostly used by the consortium so in case of problem will be fixed quickly); - sofa_find_package is ok ; - about glob_recurse, you make the assumption that it is mainly for linux but sofa_install_libraries which is often used in the following code: ; ```console; if(CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ZLIB::ZLIB); endif() ; ```; or ; ```; if (SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(PATHS ${Boost_LIBRARIES}) # Boost_LIBRARIES covers Boost internal dependencies; endif(); ``` ; I would say that it is actually mostly a windows side effect to use it and only Sofa.GL seem to use it for Linux. ; So I wonder if it is worth at all expect for a very limited number of specific corner case that maybe could be detected specifically to activate glob_recurse instead of glob . . About the vitalness of the PR... If the timing is still faster than O(n) with n the number of package we will have to face it oneday (and as with modularization we are making more and more package this day will come earlier that we expect).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837#issuecomment-786627964:1108,detect,detected,1108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837#issuecomment-786627964,1,['detect'],['detected']
Safety,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4449:81,avoid,avoid,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449,1,['avoid'],['avoid']
Safety,As said in the title this PR puts SofaSparseSolver and SofaPreconditioner as a real module that can be activated/deactivated. . CHANGLELOG/; - move source files to src/SofaSparseSolver & src/SofaPreconditioner so the .h are not leaked anymore. ; - conditional code based on #define SOFA_HAVE_METIS/SOFA_HAVE_CSPARSE is now changed to favor the use of *find_package* to detect and activate conditional building depending on dependencies. ; - add a modules/CMakeLists.txt to integrate that; - add the touched component into the list of 'moved' component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/668:369,detect,detect,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/668,1,['detect'],['detect']
Safety,"As said in the title this PR puts SofaSparseSolver and SofaPreconditioner in plugins. . There was #define SOFA_HAVE_METIS/SOFA_HAVE_CSPARSE in config.h instead of using ; find_package to detect and activate conditional building depending on dependencies. I replaced this mechanisme by using find_package(Metis) which I found more clear. . NB: the PR is in wip as I want to check it is going in the same direction as SofaNG ; NB2: it may also be a good idea to add some unittest as SparseLDLSolver seems to be used (So @olivier-goury, @IPeterlik , @marques-bruno, @EulalieCoevoet if you have 1 hour to give feel free ;)); ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/663:187,detect,detect,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/663,1,['detect'],['detect']
Safety,"As usual the idea is to make the object more opaque so we can reduce the #include pressure. . - forward declared all the specific Matrix (RotationMatrix, SparseMatrix, ...) to avoid includes in MatrixLinearSolver; - Move GraphScattered specialization in a separated set of files. ; - Move MatrixLinearSolverInternalData in the .cpp in order to make a real ""internal"" data ; - Use std::unique_ptr<MatrixLinearSolverInternalData> so we can rely on forward declaration in class MatrixLinearSolver; - propagate the changes. . This PR contains #2236 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2238:176,avoid,avoid,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238,1,['avoid'],['avoid']
Safety,"At https://defrobotics2022.sciencesconf.org/ we noticed that a lot of sofa users are manually setting SOFA_ROOT and PYTHONPATH. ; The problem is that when they are using a new version, they often forgot to update these path in their system configuration resulting in very hard to understand problems including random crashes (because runSofastarts, then try to load or use a plugin from a different sofa version which can only lead to ). We should think about some mecanisme to detect and guide users when this happens. The mecanism does not need to be bullet proof, guiding 80% of users would be already great. . Drafted suggestion on how we can do that is welcome.; On my side i think that we may have in SOFA_ROOT a file storing an unique ""token/md5 checksum"" telling which version of runSofa the plugin was compiled for and the same for every plugins. ; In case the runSofa version is different to the one stored into this file...and detect a ""wrong SOFA_ROOT"" prints a warning and use an empty SOFA_ROOT. ; Same in the plugin loader, if the runSofa unique token is not the one the plugin is expecting then prints a warning and refuse to load it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3099:478,detect,detect,478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3099,2,['detect'],['detect']
Safety,"Avoid ambiguity due to the fact that more than one function have the same name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1958:0,Avoid,Avoid,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1958,1,['Avoid'],['Avoid']
Safety,"Avoiding doing unnecessary duplicate operations (norm and sin()); At first, I thought the compiler (msvc in my case) would be smart enough to do it by itself while optimizing, but apparently not:. before:; ```; BM_Quat_axisToQuat/8192 106 us 85.4 us 8960; BM_Quat_axisToQuat/16384 210 us 154 us 4978; BM_Quat_axisToQuat/32768 348 us 220 us 3200; ```. after:; ```; BM_Quat_axisToQuat/8192 74.5 us 60.9 us 10000; BM_Quat_axisToQuat/16384 150 us 97.7 us 6400; BM_Quat_axisToQuat/32768 255 us 167 us 4480; ```. ----. Note: if we knew before-hand that the vec was normalized/not-null, the perf would be:; ```; BM_Quat_axisToQuat/8192 69.0 us 52.7 us 16000; BM_Quat_axisToQuat/16384 138 us 103 us 7467; BM_Quat_axisToQuat/32768 239 us 171 us 4480; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3559:0,Avoid,Avoiding,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3559,1,['Avoid'],['Avoiding']
Safety,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2053:589,Detect,Detection,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053,1,['Detect'],['Detection']
Safety,"Based on #2870 . The topological callback was actually not working for the UniformMass.; Now POINTSADDED and POINTSREMOVED are handled. in addition:; - add override to avoid massive warnings; - add box in scene to allow seeing the mesh. Thanks to @oparras for rising this in #2668; A regression could be added on this scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853:168,avoid,avoid,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853,1,['avoid'],['avoid']
Safety,"Based on #3480 . Task scheduler can accept a callable. It can avoids a lot of boilerplate code. It has been applied in `FreeMotionAnimationLoop` as an example, and unit tests are provided. In `FreeMotionAnimationLoop`, the class `FreeMotionTask` is no longer required. It is now possible to write:; ```cpp; unsigned int one = 0u;; simulation::CpuTaskStatus status;; scheduler->addTask(status, [&one]{ one = 1u; });; ```; and similarly for a functor, pointer to a function and pointer to a member function. The diff with the PR #3480 is: https://github.com/alxbilger/sofa/compare/taskscheduler...alxbilger:sofa:taskschedulerlambda. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3482:62,avoid,avoids,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3482,1,['avoid'],['avoids']
Safety,"Based on #3924 this PR :; - removes the data `force` and replaces it by the possibility to define the data `forces` with size 1; - proposes a solution to avoid circular dependency : when one of both data `forces` or `totalForce` is given at scene initialization, the other can not be used for update later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4019:154,avoid,avoid,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4019,1,['avoid'],['avoid']
Safety,"Based on #3927 ; Needs https://github.com/sofa-framework/sofa/pull/4917 to make all tests pass successfully. This PR aims at :; - Use enumeration to clarify the code for initialization methods in ConstantForceField and UniformMass; - some code cleanings : starting init as Valid, avoid calling isComponentValid while init(), check isComponentValid prior to run-time functions . Diff : https://github.com/hugtalbot/sofa/compare/b7c7293e7e5bd89700f3cf5171678a0b37b2c36c...hugtalbot:9371ffc1731840b2d100eb7deaa754775c98c6c7. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4918:280,avoid,avoid,280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4918,1,['avoid'],['avoid']
Safety,"Based on ; #3664 . 2nd UB detected just after starting runSofa. ```; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:770:14: runtime error: member access within address 0x55dcc8e551e8 which does not point to an object of type 'TLink'; 0x55dcc8e551e8: note: object has invalid vptr; dc 55 00 00 06 00 00 00 00 00 00 00 00 00 00 00 65 72 00 00 00 63 e5 c8 dc 55 00 00 a0 61 e5 c8; ^~~~~~~~~~~~~~~~~~~~~~~; invalid vptr; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:770:36: runtime error: member call on address 0x55dcc8e55fa8 which does not point to an object of type 'BaseObject'; 0x55dcc8e55fa8: note: object has invalid vptr; dc 55 00 00 c0 6c 7f f7 5d 7f 00 00 00 00 00 00 00 00 00 00 51 00 00 00 00 00 00 00 00 00 00 00; ```. I dont really understand the problem here, but it could be because ; https://stackoverflow.com/a/57304113. Anway, In my case, I found the synxtax of ValidatorFn and its use `(m_owner->*m_validator)(nullptr, after);` really incomprehensible ; I thought it was calling m_validator from m_owner 🤐....; I rewrote the alias to pointer of a non-static method of a class to use std::function, and std::bind for binding, hence the breaking flag 😑.; IMO this is more readable, and more modern c++. And icing on the cake, fix the Undefined Behavior error 😏. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is mor",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3665:26,detect,detected,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3665,1,['detect'],['detected']
Safety,"Based on ; - #4362 ; (for the scene, not compilation). diff: https://github.com/fredroy/sofa/compare/geoalgo_states..edge2quad_state. No need to pass by a intermediary MechanicalObject anymore (+subsequent Mapping as well). Avoids:; - using mechanical mappings for visual mappings (no useless applyJ/applyJT calls); - to call an other mapping as well; - setting the (not doing its purpose) `isMechanical` flag. ---; - With the example (Edge2QuadTopologicalMapping.scn). with GUI (glfw); ```; master 10000 iterations done in 20.618 s ( 485.013 FPS); pr 10000 iterations done in 16.601 s ( 602.373 FPS); ```. no GUI (batch); ```; master 10000 iterations done in 17.3933 s ( 574.935 FPS); pr 10000 iterations done in 13.6906 s ( 730.43 FPS); ```. - With [modified] BeamAdapter's scene (with gui); ```; master 5000 iterations done in 35.184 s ( 142.11 FPS); pr 5000 iterations done in 29.48 s ( 169.607 FPS); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4388:224,Avoid,Avoids,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4388,1,['Avoid'],['Avoids']
Safety,"Based on PR #2362. The compression of a `CompressedRowSparseMatrix` is slow. This PR removes this step. Instead, the copy to Eigen format uses the uncompressed data. In addition, the construction of triplets, needed to construct an Eigen matrix, is avoided using a custom proxy on the `CompressedRowSparseMatrix` uncompressed data. Here are the new timings (to compare to #2362):. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 63 99.14 66.64 2.64 66643 100 TOTAL; ...; 4 0.87 1 27.68 58.27 30.91 2.28 30.91 46.38 ....MBKBuild; 5 1.08 1 26.76 57.31 29.90 2.23 29.90 44.86 .....MMM-addKToMatrix; 6 1.08 1 1.73 2.94 1.98 0.18 1.98 2.98 ......jacobian; 6 3.07 1 6.94 35.47 8.01 1.25 8.01 12.02 ......stiffness; 6 11.08 1 2.68 17.13 3.43 0.81 3.43 5.15 ......copyKToEigen; 7 11.08 1 2.67 17.12 3.42 0.81 3.42 5.14 .......KfromTriplets; 6 14.51 1 0.25 0.92 0.30 0.06 0.30 0.45 ......copyJ1J2ToEigen; 7 14.74 1 0.06 0.29 0.07 0.02 0.07 0.10 .......copyJ2ToEigen; 6 14.81 1 9.50 25.79 11.23 1.54 11.23 16.85 ......Multiplication; 7 14.81 1 4.88 18.44 5.80 0.96 5.80 8.71 .......J1tKJ1; 7 20.62 1 0.76 4.52 0.99 0.23 0.99 1.49 .......J2tKJ2; 7 21.62 1 2.71 16.34 3.46 0.92 3.46 5.19 .......J1tKJ2; 7 25.07 1 0.77 12.89 0.97 0.41 0.97 1.46 .......J2tKJ1; 6 26.05 1 2.71 7.73 3.04 0.24 3.04 4.56 ......J1tKJ1-copy; 6 29.09 1 0 0.02 0 0 0 0 ......J2tKJ2-copy; 6 29.09 1 0.01 0.06 0.02 0 0.02 0.02 ......J1tKJ2-copy; 6 29.11 1 0.01 0.08 0.03 0.01 0.03 0.04 ......J2tKJ1-copy. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it do",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2367:249,avoid,avoided,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2367,1,['avoid'],['avoided']
Safety,"Based on https://github.com/sofa-framework/sofa/pull/2394. Previously, a `CompressedRowSparseMatrix` accumulated matrix entries and was then converted to Eigen. The conversion gets triplets and detects duplicates and does the compression. Therefore, all the work to build a matrix is done in the conversion. This work is not required during the accumulation as it is done later in any case. I propose to accumulate all the matrix entries in a simple list. This accumulation does nothing else than inserting a new element in the vector. This should be faster than using a `CompressedRowSparseMatrix`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2399:194,detect,detects,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2399,1,['detect'],['detects']
Safety,"Based on https://github.com/sofa-framework/sofa/pull/4442; Diff: https://github.com/alxbilger/sofa/compare/filtervalues...alxbilger:sofa:copymatrixderiv. The goal is to accelerate the computation of mappings jacobians when projecting the mapped stiffness matrices. In some cases, the conversion from the MatrixDeriv (stored in the mechanical objects) is really slow, even slower than the actual computation of the matrix. A special case is now added when the destination is a `CompressedRowSparseMatrixMechanical`. Unfortunately, this is detected with a `dynamic_cast`. To benchmark the changes, let's add the following timers in MatrixLinearSystem.inl (line 1076):; ```cpp; {; SCOPED_TIMER(""copyToBaseMatrix"");; input->copyToBaseMatrix(J.get(), mappingJacobianId, offset);; }; {; SCOPED_TIMER(""fullRows"");; J->fullRows();; }; ```. ### Reduced Diamond (1000 time steps). ModelOrderReduction relies heavily on mapped matrices (a huge matrix projected on a small matrix). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 22.5868 s ( 44.2737 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.06 1 14.53 33.47 16.75 2.42 16.75 90.54 ......projectMappedMatrices; 7 3.08 1 3.72 11.63 4.31 0.89 4.31 23.29 .......copyToBaseMatrix; 7 7.39 1 1.78 7.48 2.05 0.52 2.05 11.10 .......fullRows; ```. #### After; ```; [INFO] [BatchGUI] 1000 iterations done in 16.4596 s ( 60.7547 FPS).; ```; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443:538,detect,detected,538,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443,1,['detect'],['detected']
Safety,"Based on previous PR #3539 . Add methods and binding for:; - loading sofa.ini file to set resources/example path; - loading SOFA plugin given the file path; - activate/deactivate SOFA messageHandler, get the number of queued message and get the message with its priority. edit:; - Avoid using string as it can produce memory bad access from other software integration. ; - Also remove use of config.h inside SofaPhysicsAPI .h to be able to easily include it in third library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3540:281,Avoid,Avoid,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3540,1,['Avoid'],['Avoid']
Safety,"Because defaultTestBehavior was supposed to fail three time and not one (this is not working with EXPECT_NONFATAL_FAILURE). The fact it actually fails only once has been changed later by changing the default behavior in BaseTest. The rational for this change was that for a transitional period of time it was decided to avoid warnings messages to generate a test failure so that the dashboard is less ""red"" and the tests was not refactor since this decision. ; ; EDIT: I didn't made EXPECT_ATLEAST_TWO_FAILURES...only ONE.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370804645:320,avoid,avoid,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370804645,1,['avoid'],['avoid']
Safety,"Better fix to handle texture coordinate update during topological changes. ; The problem was coming from updating the data from parent Data (from Loader/engine) during the changes. ; Instead of breaking the ""parentship"", the topology callback has been changed to avoid calling updateIfDirty during the changes. This PR combine with the #2414 will; fix #2392 ; Add safeguard in the scene to avoid topologicalChanges which are not handled by TextureInterpolation; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2415:263,avoid,avoid,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2415,3,"['avoid', 'safe']","['avoid', 'safeguard']"
Safety,"Big PR for:; - remove collections (SofaComponent*, except for SofaComponentAll); - now SofaBase/SofaCommon/SofaGeneral/SofaAdvanced/SofaMisc are packages (find_package SofaBase) and are modules as well (target_link_libraries SofaBase); - Add a new module in SofaBase, called SofaBaseUtils including all essential utilities for scenes (i.e RequiredPlugin, AddRepo, etc); - Change previous SofaMisc module to SofaMiscExtra (to avoid confusion with the metapackage SofaMisc). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1314:425,avoid,avoid,425,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1314,1,['avoid'],['avoid']
Safety,"Bonjour,; I am trying to model cutting on a deformable object, but I would like to use a Sparse Grid Topology to avoid meshing etc.; I found the component `DynamicSparseGridTopologyContainer` which seems to be the right thing, but sadly I get index errors, when I try to remove elements (through shift-right-click interaction in the GUI).; But something seems to happen, as the visual model deforms and also finally crashes, when no points are left. Error:; ```bash; [ERROR] [DynamicSparseGridTopologyModifier(DynamicSparseGridTopologyModifier)] Unable to remove the hexahedra: 130 its index is out of bound.; ```. Video:; <video src=""https://github.com/sofa-framework/sofa/assets/29635054/1c5129b9-9336-4968-910f-107a57800ebe"" width=""200"" height=""auto"">. Example Scene:; ```python; import Sofa; import Sofa.Core; import Sofa.Simulation. PLUGINS = [; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase,BruteForceBroadPhase,CollisionPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [MinProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [TriangleCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [CollisionResponse]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.IO.Mesh"", # [MeshOBJLoader]; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.Mapping.Linear"", # [BarycentricMapping]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [HexahedronFEMForceField]; ""Sofa.Component.StateContainer"", # [MechanicalObject]; ""Sofa.Component.Topology.Container.Constant"", # [MeshTopology]; ""Sofa.Component.Topology.Container.Dynamic"", # [DynamicSparseGridGeometryAlgorithms,Dy",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4796:113,avoid,avoid,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4796,2,"['Detect', 'avoid']","['Detection', 'avoid']"
Safety,"Bug introduced in #1487, with an infinite loop when calling parse(); (Fix timeout with MeshBarycentricMapperEngine.scn on the CI). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1516:74,timeout,timeout,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1516,1,['timeout'],['timeout']
Safety,CI complains about 4 crashing scenes (timeout) on all configs:; ```; examples/Components/collision/RayTraceCollision.scn; examples/Components/misc/MeshTetraStuffing.scn; examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_Annex.scn; examples/Tutorials/StepByStep/Dentistry_Python/5_MeshGeneration.scn; ```; Any idea?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/873#issuecomment-451897383:38,timeout,timeout,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/873#issuecomment-451897383,1,['timeout'],['timeout']
Safety,Casts could cause perf issues.; We have to check their locations (avoid in loops !! etc),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1621:66,avoid,avoid,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1621,1,['avoid'],['avoid']
Safety,"Change `std::map` for `std::unordered_map` in `MapMapSparseMatrix`.; It means the data is no longer processed in a predictable order. In most cases, it does not change anything since the data structure is converted to another. This conversion does not depend on the order. Benchmarks from https://github.com/alxbilger/SofaBenchmark/pull/14 before:. ```; ---------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------------------------; BM_MapMapSparseMatrix_writeLine/512 3.28 us 3.22 us 213333; BM_MapMapSparseMatrix_writeLine/1024 15.8 us 16.0 us 44800; BM_MapMapSparseMatrix_writeLine/2048 49.6 us 50.0 us 10000; BM_MapMapSparseMatrix_writeLine/4096 112 us 109 us 5600; BM_MapMapSparseMatrix_addCol/512/512 1.77 ms 1.80 ms 407; BM_MapMapSparseMatrix_addCol/1024/512 3.54 ms 3.53 ms 195; BM_MapMapSparseMatrix_addCol/2048/512 7.01 ms 7.11 ms 112; BM_MapMapSparseMatrix_addCol/4096/512 14.1 ms 14.1 ms 50; BM_MapMapSparseMatrix_addCol/512/1024 5.74 ms 5.72 ms 112; BM_MapMapSparseMatrix_addCol/1024/1024 11.8 ms 11.7 ms 56; BM_MapMapSparseMatrix_addCol/2048/1024 23.4 ms 23.4 ms 30; BM_MapMapSparseMatrix_addCol/4096/1024 46.1 ms 46.9 ms 14; BM_MapMapSparseMatrix_addCol/512/2048 23.5 ms 23.4 ms 28; BM_MapMapSparseMatrix_addCol/1024/2048 46.2 ms 45.8 ms 15; BM_MapMapSparseMatrix_addCol/2048/2048 92.6 ms 93.8 ms 9; BM_MapMapSparseMatrix_addCol/4096/2048 187 ms 188 ms 4; BM_MapMapSparseMatrix_addCol/512/4096 59.8 ms 59.7 ms 11; BM_MapMapSparseMatrix_addCol/1024/4096 119 ms 120 ms 6; BM_MapMapSparseMatrix_addCol/2048/4096 238 ms 240 ms 3; BM_MapMapSparseMatrix_addCol/4096/4096 480 ms 477 ms 2; ```. After:. ```; ---------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------------------------; BM_MapMapSparseMatrix_writeLine/512 1.48 us 1.46 us 448000; BM_MapMapSp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2641:115,predict,predictable,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2641,1,['predict'],['predictable']
Safety,Clean matrix-add to avoid template specialization in ForceField,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2295:20,avoid,avoid,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2295,1,['avoid'],['avoid']
Safety,"Cleaning and refactoring in BarycentricMapping (only for topology container). _description from comment below:_. Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797:250,avoid,avoid,250,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797,1,['avoid'],['avoid']
Safety,"Closing (postponing), several issues detected in this PR; - PluginManager is not satisfactory; - meta-modules are not well designed so induced too much complexities",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4429#issuecomment-1968548437:37,detect,detected,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429#issuecomment-1968548437,1,['detect'],['detected']
Safety,Closing until it is somewhat finished (avoiding further spam 🤫),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1553#issuecomment-713689635:39,avoid,avoiding,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1553#issuecomment-713689635,1,['avoid'],['avoiding']
Safety,"CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::CollisionModel*&, sofa::core::CollisionModel*&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, sofa::component::collision::detection::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algori",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:31315,detect,detection,31315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,6,"['Detect', 'detect']","['Detection', 'DetectionOutputVector', 'detection']"
Safety,"Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"".",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2690,Detect,Detection,2690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Detect'],['Detection']
Safety,"Conclusion of several .. years of discussion with @damienmarchal :. such circular dependencies should be handled by defining clear input data which update output data.; For instance for a Mass:; - input data: `d_inputMassDensity` and `d_inputTotalMass` (input prefix would make it clear that a circular dependency is avoided); - actual data used in computations (outputs): `d_massDensity` and `d_totalMass`. When `d_inputMassDensity` is modified, it triggers a callback like:; ``` cpp; addUpdateCallback(""updateFromTotalMass"", {&d_inputTotalMass}, [this](const core::DataTracker& ); {; .. /// do the computation; return sofa::core::objectmodel::ComponentState::Valid;; }, {&d_massDensity, &d_totalMass});; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2173#issuecomment-1564102951:317,avoid,avoided,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2173#issuecomment-1564102951,1,['avoid'],['avoided']
Safety,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450:105,avoid,avoid,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450,1,['avoid'],['avoid']
Safety,"Core.so.5(QAbstractAnimation::start(QAbstractAnimation::DeletionPolicy)+0x14c) [0x7fb9ac005d8c]; -> /usr/lib/libQt5Widgets.so.5(+0x24b43c) [0x7fb9acf3e43c]; -> /usr/lib/libQt5Widgets.so.5(+0x287c69) [0x7fb9acf7ac69]; -> /usr/lib/libQt5Widgets.so.5(+0x2b4920) [0x7fb9acfa7920]; -> /usr/lib/libQt5Widgets.so.5(+0x2ba7b8) [0x7fb9acfad7b8]; -> /usr/lib/libQt5Widgets.so.5(QLayoutPrivate::doResize()+0x128) [0x7fb9ace6c068]; -> /usr/lib/libQt5Widgets.so.5(QLayout::activate()+0xfe) [0x7fb9ace6d5de]; -> /usr/lib/libQt5Widgets.so.5(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0x65) [0x7fb9ace4d735]; -> /usr/lib/libQt5Core.so.5(QCoreApplication::notifyInternal2(QObject*, QEvent*)+0x12a) [0x7fb9ac204cda]; -> /usr/lib/libQt5Core.so.5(QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*)+0x173) [0x7fb9ac2077d3]; -> /usr/lib/libQt5Core.so.5(+0x30d304) [0x7fb9ac25e304]; -> /usr/lib/libglib-2.0.so.0(g_main_context_dispatch+0x184) [0x7fb9a5957924]; -> /usr/lib/libglib-2.0.so.0(+0xa6621) [0x7fb9a59ab621]; -> /usr/lib/libglib-2.0.so.0(g_main_context_iteration+0x31) [0x7fb9a5956131]; -> /usr/lib/libQt5Core.so.5(QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x61) [0x7fb9ac25d941]; -> /usr/lib/libQt5Core.so.5(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x12c) [0x7fb9ac20365c]; -> /usr/lib/libQt5Core.so.5(QCoreApplication::exec()+0x94) [0x7fb9ac20baf4]; -> /opt/libs/sofa/build/lib/libSofaGuiQt.so.20.06.99(sofa::gui::qt::RealGUI::mainLoop()+0x118) [0x7fb9b9d4d788]; -> /opt/libs/sofa/build/lib/libSofaGuiCommon.so.20.06.99(sofa::gui::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*)+0x3a) [0x7fb9b9a3177a]; -> ./runSofa(+0x168c2) [0x5592a2f118c2]; -> /usr/lib/libc.so.6(__libc_start_main+0xf2) [0x7fb9a83b0152]; -> ./runSofa(+0x17abe) [0x5592a2f12abe]; [1] 371594 abort (core dumped) ./runSofa; ```. Works fine when running with nvidia on the same machine (via prime-run). Cant really tell anymore, sorry.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1567:7190,abort,abort,7190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1567,1,['abort'],['abort']
Safety,Could we close this issue as it seems redundant with #538 ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/537#issuecomment-350734968:38,redund,redundant,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/537#issuecomment-350734968,1,['redund'],['redundant']
Safety,Crash dump will now appear on Jenkins scene-test crash summary. TODO (after merge): change Jenkins detection regex to ; `([^:]*): (error:.*)(([\r\n].*?)*?)### END OF OUTPUT ###`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/644:99,detect,detection,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/644,1,['detect'],['detection']
Safety,Create separate functions in buildSystem. Avoid using else function with the d_resolutionMethod. Add a regression scene with unbuilt.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1209018462:42,Avoid,Avoid,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1209018462,1,['Avoid'],['Avoid']
Safety,"Current Headless Recorder does not generate files correctly; for that reason, media player can have trouble detecting the format of the file.; Vlc 3.0.2 cannot read the file, except if you specify manually that the file use h264 in advanced options. This PR solves this shortcomming, and also aims to separate this procedure from the rest of the headless recorder to improve readability. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/666:108,detect,detecting,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/666,1,['detect'],['detecting']
Safety,"Currently in Sofa we aren't catching any exceptions. . The consequence is that every exception propagates to the top level exception handler halting the application. ; Un-handled exception are useful to detect bugs but this is a non-sense to use such top level handler to process possible application errors like failure to load a plugin or a scene. . A good approach should be that any exception that can be fixed without editting the source code (ie. but by editting the scene or changing some system configuration and so on) should ends with a gracefull error message indicating to the user how to fix the error cause. To implement this I suggest to:; - add a close to top-level try/catch block around simulations/plugin actions; - add a SofaSimulationException that has an error message, the component that emitted it and can have a backtrace as well as a top level reactions to do (eg: set componentstate to invalid and stop simulation). We should also use this SofaSimulationException at any place we are using msg_error(). ; (Actually it could even make sense to replace the msg_error macro by throwing the exception). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344:203,detect,detect,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344,1,['detect'],['detect']
Safety,Currently there is the SOFA_EXTERNAL_DIRECTORY to add out-of-tree; directory in the compilation process. But when this directory contains; plugins those one are not handled the same way as are the one in; application/plugin. To unify that I added a SOFA_EXTERNAL_PLUGIN option and; did minimal change to the 'sofa_add_generic' macro to detect and; handle out of tree directory. So if you want to add external plugin you can use SOFA_EXTERNAL_PLUGIN; instead of SOFA_EXTERNAL_DIRECTORY. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/530:336,detect,detect,336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/530,1,['detect'],['detect']
Safety,Cython is a de-facto standard to make ease binding between C++ and python. I use it to make 'per plugin' binding and will probably submit some in future PR. ; To ease the writing of cmake of these binding it is nice to detect if cython is installed what this file is doing. . The file is taken from (all credit should go to them):; https://github.com/thewtex/cython-cmake-example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/734:219,detect,detect,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/734,1,['detect'],['detect']
Safety,"Dear @faichele ,. Following the SOFA dev meeting 25/01/2017.; Multi-threading plugin proposed by @faichele. Your new plugin implements a static scheduling for collision detection. The implementation does not require any change of the existing collision components of SOFA. The bounding volume hierarchy methods is parallelized. It should be easy to use. Compared to the approach used in the MultiThreading plugin using the ""work-stealing"" scheduling pattern (https://en.wikipedia.org/wiki/Work_stealing), Fabian's implementation is based on ""conventional"" work-sharing, with a ""round-robin"" assignment of collision pair checks per thread. One extension is the fact that worker threads are persistent: they do not terminate after processing all assigned tasks, and no new threads are spawned when new collision pair check tasks are added to the thread pool. Instead, worker threads enter a ""sleeping"" state to avoid using CPU cycles when no tasks are processed. This avoids unnecessary respawning of threads every 10 to 50 ms, since the collision detection is typically called very often and in quick succession. @faichele , you mentioned it will be released under open-source license and with standalone for beta testing. Tests on potential performance gains remain to do (number of per checks).; Do not hesitate to correct me. In the context of the recent coding sprint, some new feature around multithreading were added in a branch ( https://github.com/sofa-framework/sofa/tree/issofa_multithreading ), not merged yet. This should be discussed and merged at the upcoming STC. @JeremieA , would you agree to prepare a short illustration/explanation of the API changes of your multithreading feature branch?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830:169,detect,detection,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830,4,"['avoid', 'detect']","['avoid', 'avoids', 'detection']"
Safety,Detect missing python27.dll in installer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879:0,Detect,Detect,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879,1,['Detect'],['Detect']
Safety,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2241:0,Detect,Detected,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241,1,['Detect'],['Detected']
Safety,"Detected from the task ""remove warnings"" #2378 , and decided to put them into a different PR.; It will easier to read or analyze the code (and to revert in case of...). Each commit should fix one class. One of the worst problem (mainly located in topology classes ) is that ""Coord"" was always supposed to be a Vec3, but could be a Vec2 (from the instanciation with Vec2Types), thus doing a out-of-bound access. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2379:0,Detect,Detected,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2379,1,['Detect'],['Detected']
Safety,Draft of a proposition to enforce the API for a clear thread friendly semantics. ; ```cpp; class SOFA_CORE_API DetectionOutputVector; {; public:; ; virtual int acquireAddContact(){}; virtual releaseAddContact(int){}; virtual void addContact(DetectionOutput* detectionOutput){; if(getHasBeenAcquired){ fail }; if(notAcquired) { warn }; ; ...; }. /// ; virtual const DetectionOutput& getContacts(){; if(noToken) return array;; return nullptr; ; }; virtual void releaseGetContact(DetectionOutput& r){; ....; }; };; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965#issuecomment-474772645:111,Detect,DetectionOutputVector,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965#issuecomment-474772645,5,"['Detect', 'detect']","['DetectionOutput', 'DetectionOutputVector', 'detectionOutput']"
Safety,"Error message was already fired if mesh file is not found. This PR just avoid the crash at init.; Only add some check in the finest level and set it to invalid if topology is not loaded.; Then propagate the invalid status to the higher level. fix #4162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4164:72,avoid,avoid,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4164,1,['avoid'],['avoid']
Safety,Esatto ! Avoid having to uninstall the package...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4554#issuecomment-1973432141:9,Avoid,Avoid,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554#issuecomment-1973432141,1,['Avoid'],['Avoid']
Safety,"Even if it's not a good practice, it is possible to call `BaseObject::init()` several times.; In most cases, `DataEngine::init()` was the place where input and output Data were defined. Therefore, input and output could be defined several times, but it is not advisable.; This PR moves the input/output definition from the `init()` method to the constructor. Therefore, `init()` could be called multiple times safely (regarding only the input/output). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2825:410,safe,safely,410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2825,1,['safe'],['safely']
Safety,"Explicit instanciation of `list<const sofa::core::topology::TopologyChange*>;` was moved to _TopologyChange_ files from _TopologyHandler_ in #1912; But it seems it was (wrongfully) introduced again in _TopologyHandler_ in #1898 (I suppose from a merge). This PR just remove the duplicated explicit instanciation. NB: Seems weird to me that the CI does not say anything? (maybe a compiler option avoids this); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1981:395,avoid,avoids,395,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1981,1,['avoid'],['avoids']
Safety,Fix 4 crashing (timeout) scenes on Windows CI:; - GenerateCylinder; - GenerateGrid; - Flexible: linearAffine_flex331.scn; - Compliant: FEM-donuts.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/641:16,timeout,timeout,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/641,1,['timeout'],['timeout']
Safety,"Fix issue #7 . Summary: drawQuad needed a call to glBegin(GL_QUADS) to draw a quad, defeating the purpose to avoid to use explicitly OpenGL API. Same problem with drawTriangle and drawPoint,; I suppose that these functions, at the beginning, was just needed to factorize OpenGL code (but still you needed to use OpenGL with it). ; Now that we remove the explicit calls, those functions should not be accessible outside.; But a few code in Sofa (and maybe plugins?) are using those calls to draw one primitive. Finally, what have been done:; - remove public visibility to those functions and rename it to internalDrawXXXX (where XXXX is point, triangle, quad); - keep the old calls to keep compatibility; - add addLine to keep consistency with the other primitives. I am wondering if in the future (or just right now), the drawXXX (drawing ONE primitive) should be removed and force users to use the drawXXXXs with a vector (and oblige user to build a std::vector with ONE primitive. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/293:109,avoid,avoid,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/293,1,['avoid'],['avoid']
Safety,"Fixed false error detection in MeshGmsh.cpp file when reading .msh type files.; Without these lines, we have this kind of error `'$Elements' expected, found '$Elements`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3030:18,detect,detection,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3030,1,['detect'],['detection']
Safety,"FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: fix principal values ordering with input matrix is diagonal + uninitialized value warning; - VisualModelImpl: fix wrong object (triangles) called when adding quads in handleTopologyChange(); - VoxelGridLoader: `std::unique` result was not used. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:1834,avoid,avoid,1834,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,1,['avoid'],['avoid']
Safety,"Fixes #308 with initialization of SparseGridTopology with a mesh. Before, a 1% scaling was automatically applied on the grid bounding an input mesh. Removing the scaling was leading a crash since vertices could be exactly on the boundary surface (surface of the BBox of the mesh).; Now a safety check is done and a final check is done to alert if a vertex is not found. Minor cleans of the msg API are also added. @epernod @fredroy your feedback using your own scenes involving the SparseGrid would be useful. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/670:288,safe,safety,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/670,1,['safe'],['safety']
Safety,Fixes #561 . This PR does the same work as #564 but using the existing `Utils::getSofaPathPrefix()` function and avoiding heavy macro creation in root CMakelists.; I also removed all the PluginRepository and DataRepository re-inits. Sorry @ErwanDouaille I did not know this function before :-/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/568:113,avoid,avoiding,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/568,1,['avoid'],['avoiding']
Safety,Fixes #79 . Add a new test corresponding to this bug to avoid future regression.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/88:56,avoid,avoid,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/88,1,['avoid'],['avoid']
Safety,"Following work with @ChristianDuriez at STC6, here is a way to fix the geomagic plugin scenes and recover behavior from before the PR on freeAnimationLoop and lambda function. . Also add:. - a second RigidSkull.scn example to show another way to map the haptic tool.; - A small bool to know if the haptic tool is in contact with an object. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/858:98,recover,recover,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/858,1,['recover'],['recover']
Safety,"For historical explanations:; * we need to gather the pointers to all Data in a Base instance, so there must be a function somewhere that is called with both the pointer to the `Base*` object and to the `Data*`.; * a simple option could be to have the `Base*` pointer as a parameter of the Data constructor, however most compilers issue a warning if `this` is explicitly used when initializing member variables, as it is not fully constructed yet; * however, compilers are happy with calling a method, which itself use `this`, hence the initial implementation of `initData()` (which was called `dataField()`) had the `this` pointer implicitely, but needed the `Data*` pointer to add if to the ""fields"" map, which is why it was provided as an explicit parameter to the method; * later changes refactored this to add new features (such capturing which level of the class hierarchy is creating each Data), and the actual registration of the `Data*` in the list within Base was moved to the Data constructor, where the `Data*` pointer is available so the one from `initData()` became redundant. The newer similar design for initializing BaseLink did use an `initLink()` method without this pointer. And regarding this change:; * a useful aspect of having the pointer to the Data as the first parameter of `initData()` is to unambiguously know the type of the final `Data<T>`, so that there could be (relatively) good compile errors if the type of the provided default value is not matching it. I'm not sure how this PR is affecting / handling that (i.e. if you set a `float` value as a default to a `Data<int>`, how the gcc/clang/msvc error messages look like?); * one drawback in the current design is that there are sometimes bugs introduced by the multiple overloads of `initData()`, because of the ambiguity between the optional default value and the optional pair of bool flags at the end. In particular, for a `Data<std::string>`, calling `initData(&d, ""mydefaultvalue"", ""mydata"", ""help message"")` w",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283:1080,redund,redundant,1080,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1196855283,1,['redund'],['redundant']
Safety,"For scenes with `BTDLinearSolver`, as it is a linear solver only templated on `BTDMatrix<6,Sreal>`. MatrixLinearSystem<BTDMatrix6> is not present in the factory. Interestingly, it will still create a MatrixLinearSystem templated on BTDMatrix6 and set it as slave, so this PR is mainly to avoid the error/warning due to the object creation/factory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4189:288,avoid,avoid,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4189,1,['avoid'],['avoid']
Safety,"For the coherency, I totally agree that mesh loaders should be gathered in a plugin.; As for the dependency, I would just warn the user that if find_package() in CMake does not find CImgPlugin, then texturing will just be disabled. (i.e no REQUIRED flag) ; you could wish to load meshes just for pure mechanical scene. As for the CimgPlugin and CImg, CMake detects if libpng/libjpeg/libtiff are present and enable/disable preprocessor flag directly. ; So for example if libjpeg is not present, the user is informed of it through CMake configuration process, and the ImageFactory does not add the *.jpg format into its supported image list. Finally, I would say that imagemagick dependency is quite annoying, especially for windows users.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305191404:357,detect,detects,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305191404,1,['detect'],['detects']
Safety,"Found it, this is my fault (sorry):. - we have some mappings implemented in python in Compliant; - setting up the mapping uses scipy, which is not the expected version on some plateform (mostly osx for now), which triggers a python error; - the python code returns to c++ before having a chance to finish the test and keeps going on forever. I fixed the offending script, assuming it is the only one. I'll monitor the builds to see if there's more. I'll try to add some mechanism to detect uncaught python exceptions during test execution, and fail the script should this happen. With all my apologies for killing the CI engine :-/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289499063:483,detect,detect,483,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289499063,1,['detect'],['detect']
Safety,"Found out that Eigen3 in Fedora 29 installs a `FindEigen3.cmake` that do not set the imported target **Eigen3::Eigen**, resulting in CMake failure when compiling SOFA or linking against it. ```; $ dnf locates /usr/share/cmake/Modules/FindEigen3.cmake; eigen3-devel-3.3.5-2.fc29.noarch : A lightweight C++ template library for vector and matrix math; Repo : fedora; Matched from:; Filename : /usr/share/cmake/Modules/FindEigen3.cmake; ```. There is also third party software that install their own, such as CGAL:. ```; $ dnf locates /usr/lib64/cmake/CGAL/FindEigen3.cmake; CGAL-devel-4.13-0.2.beta1.fc29.x86_64 : Development files and tools for CGAL applications; Repo : fedora; Matched from:; Filename : /usr/lib64/cmake/CGAL/FindEigen3.cmake; ```. Hence to avoid any of those, it is safer to set the NO_MODULE options to `find_package(Eigen3)` to look for **Eigen3Config.cmake** instead, which always define the imported target. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348:758,avoid,avoid,758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348,2,"['avoid', 'safe']","['avoid', 'safer']"
Safety,From discussion @bruno-marques ; A kind of DataEngine that detect changes and propagates idleevent on child. . I let bruno explain ;) . Question: what is the difference between DataEngine/ImplicitDataEngine ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367273832:59,detect,detect,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367273832,1,['detect'],['detect']
Safety,"From what I understand, this PR does not change the behaviour of SOFA, nor improve the performances. It is a preparation work to secure the access to the detection output vector. However, the proposed implementation has not been made thread-safe. But it's a necessary start, so thanks @fspadoni.; The branches diverged so much, I think starting again would take less time than solving the conflicts.; Note: it's a good idea to allow a parallel manipulation of the contacts to improve the performances. However, parallel addition of contacts would lead to a non-deterministic order of contacts. We would end up with non-deterministic simulations. The CI would not be happy :); Conclusion: we can close this PR, but keep it in mind when we want to parallelize manipulation of contacts.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965#issuecomment-884712307:154,detect,detection,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965#issuecomment-884712307,2,"['detect', 'safe']","['detection', 'safe']"
Safety,"Further to #3977, we could create a new flag displaying the DetectionOuput to visualize contact points whether you are using Penalities or Langrangian",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4008:60,Detect,DetectionOuput,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4008,1,['Detect'],['DetectionOuput']
Safety,"GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(Depr",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11827,Detect,Detected,11827,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Detect'],['Detected']
Safety,"Given a link to the topology, link to the corresponding mechanicalObject and a boundingBox. The component will remove all elements (topology and dofs) going outside from this boundingbox. **-> Any better name suggestion is welcomed.; -> if this component is not useful in SOFA, abort the PR. otherwise I will add more comments in the header.**. Example of use:; ```; <MechanicalObject src=""@../grid_1"" name=""Volume"" />; <TetrahedronSetTopologyContainer name=""Tetra_con"" src=""@../Beam_generator_01/Container""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms name=""GeomAlgo"" template=""Vec3d"" drawTetrahedra=""1"" drawScaleTetrahedra=""0.8""/>; ; <TopologyBoundingTrasher box=""-40 -40 -50 50 50 50"" topology=""@Tetra_con"" drawBox=""1"" position=""@Volume.position""/>; ```. Video of the result of a tissue falling in 3D:; **Right now in SOFA:**; ![ezgif com-gif-maker(1)](https://user-images.githubusercontent.com/21199245/129875985-79e1c469-46ae-459a-a6af-306be7effdf2.gif). **Using the trasher!**; ![ezgif com-gif-maker](https://user-images.githubusercontent.com/21199245/129875812-e2e6af18-bde2-4d76-89ac-3d4369bdc184.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2288:278,abort,abort,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2288,1,['abort'],['abort']
Safety,"Glad you like it ; With a typesafe version you mean something like; ```cpp; simpleapi::createObject(root, ""MinProximityIntersection"", {{""name"",""Proximity""},; {""alarmDistance"", 0.3},; {""contactDistance"", Vec3d(0,1,2)}}) ;; ```; This could be great especially with a version without string conversion so it would be both elegant and fast. . On my side the things I tried but didn't pushed were:; ```cpp; simpleapi::createObject(root, DefaultPipeline, {; { DefaultPipeline::name, ""myname"" },; { DefaultPipeline::position, ""1 2 3"" },; }) ; ```; The idea was to avoid to use strings as identifier because that are error prone and hard to maintain when something change. It also feature autocompletion, you write DefaultPipeline:: TAB and you get all the possible data field. The drawback is the extra DefaultPipeline prefix all around which impact readbility. . A was also curious on how we could make visible the graph structure of the scene (PSL like) and I cannot prevent myself to think about something like the following: ; ```cpp; createTree(; {; Node, { ; {""name"", ""root""}, ; MechanicalObject, {; {""name"", ""bob""},; {""position"", ""1 2 3""} ; },; } ; ); ```; With good template and operator overloading it is probably possible but I'm afraid of the trickyness of the approach (and the error message in case of compilation error) but compared to the current simpleapi that is ""straightforward"" to use and offer a smooth transition for people coming from SofaPython, I'm not sure this is worth the effort.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334575515:557,avoid,avoid,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334575515,1,['avoid'],['avoid']
Safety,"Great contribution, . I fully support any step toward smoother integration of Sofa with Python and this PR is one.; I also like the cleaning & factoring work with stuff like get_base function. . Really minor details: ; In SOFA we have plenty of TODOs forgotten since years that no one is responsible for, without any idea when this was added and when this will be done. To avoid that I suggest replacing things like; ```cpp; // TODO FIXME self is commented; ```; With one with more details; ```cpp; //TODO(mtournier 2017-05-30) Self, is commented there is possibly a problem (if not done in two years, you can remove this comment); ``` ; Or; ```cpp; //DEFECT(mtournier 2017-05-30) Self, is commented there is a problem when...; ``` ; To help general code maintenance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306728456:373,avoid,avoid,373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283#issuecomment-306728456,1,['avoid'],['avoid']
Safety,Great...shouldn't the test scene become a test to detect future regression ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329785483:50,detect,detect,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329785483,1,['detect'],['detect']
Safety,"Hard coding interaction in core component is not a good software design as it couple the behavior of a component and how it is used in the context of a specific interactive scene. . This PR remove this behavior and warns users. To avoid re-implementing things no one use, it is requested in the deprecation message that user need to report if they miss the feature so so we can restore it but with the proper software design. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4163:231,avoid,avoid,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4163,1,['avoid'],['avoid']
Safety,"Hello @alxbilger,. Thanks for the PR, removing that ""verbose"" looks fine to. ; As a deprecation worklfow I recommand:; - deprecate the data field (as done in the PR); - updates all call points that are using d_verbose: either replace them with msg_info or remove the message depending on the situation ? ; - in the parse method () (or init() method), detect that the verbose argument is used and print a deprecation indicating to the user that the field is either removed or replace by ""printLog"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923:351,detect,detect,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1556707923,1,['detect'],['detect']
Safety,"Hello @epernod,. Thanks for the fix... I also fixed it in a different way (and lost in the middle of all the changes) in the PR#1460. ; My fix was using enum class (C++11) instead of the classic enum (C). Enum class was designed to specifically avoid name clash so it is nice to use them.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-682379074:245,avoid,avoid,245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-682379074,1,['avoid'],['avoid']
Safety,Hello @maddin200 . Thanks for your PR. The fix avoid a crash with 7 char input string (that are invallid input for color code). ; It would be an improvement in usability if instead of silently ignoring these 7 char long strings something was reported as invalid to the user by setting the fail bits.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1868#issuecomment-786919775:47,avoid,avoid,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1868#issuecomment-786919775,1,['avoid'],['avoid']
Safety,"Hello @marques-bruno . My assumption is that, initially, Base was supposed to be more the Base class for ""everything"" and not only for scenegraph entries. This is why the initial design was that there is no ""path"" concept at this level. . My current approach to handle this kind of scenario was to implement an easing function like that:; ```cpp; std::string sofa::helper::objectmodel::getPathName(Base* o); {; BaseNode *node = dynamic_cast<BaseNode>(o);; if(node); return node->getPathName();; BaseObject *object = dynamic_cast<BaseNode>(o);; if(object); return object->getPathName();; ...; }; ```; To avoid having if/else and dynamic cast at every call and thus easing the readability on the caller's. ; But I agree with your that factoring them out in Base would make sense. Actually some refactoring of BaseNode/Node/DAGNode/BaseContext would also make sense given how hard these are interleaved and unclear to most of the developpers.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1455#issuecomment-678117450:603,avoid,avoid,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1455#issuecomment-678117450,1,['avoid'],['avoid']
Safety,"Hello Fred, to avoid excessive code coupling maybe such kind of application could be done using the simpleapi instead of the raw c++ api. This would demonstrate the same ""no gui"" app.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2792#issuecomment-1075513418:15,avoid,avoid,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2792#issuecomment-1075513418,1,['avoid'],['avoid']
Safety,"Hello Guillaume,. I'have mixed feeling. On one side I would like the sprint branch to be merged asap so that we can all start from this baseline and continue deprecating/pluginizing (I know bruno is waiting, as is the pluginization done during the STC) but, on the other side I dislike to merge things that fails. . Currently the base branch have several tests failing and I fixed all of them in #457. I'm not sure all of them are easy to cherry-pick so I would recommend to merge this one and immediately after merge the #457 so that master is not in a broken state for a long time. . Actually in #457 only one test remains to be fixed, the ""VariationalXXX"". This one was not in the base branch but appeared during the sprint. I have no idea what is wrong so if this speak to you @hugtalbot , @StephaneCotin, @ChristianDuriez please help. . So my opinion is that we should accept the risk of merging #453 and #457 in a row so that we can restart working from a shared code base and continue our work and deals with the breaking/regression introduced. ; It also have advantages as more people will try this branch we will have more feedback on the deprecation process.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453#issuecomment-335416963:885,risk,risk,885,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453#issuecomment-335416963,1,['risk'],['risk']
Safety,"Hello Marc, and thanks a lot for your feedback !. I'll address some of your points below:. > **determinism**: as @matthieu-nesme mentionned, the order of initialization of objects with static storage duration is undefined across translation units. This is the first reason why I introduced the init() functions: to make initialization deterministic and reliable. And this is the same reason why it's better to call those functions explicitely, at the right time: the program will work correctly by design, not by coincidence;. To be more explicit: there is no guarantee whatsoever that calling `init` in a `static` RAII constructor will get called *after* every other `static` variable in the shared library is initialized. This can indeed be an issue. I was under the impression that there is exactly one of such RAII per dynamic library loaded by SOFA, so as long as `init` does not involve messing around with other `static` variables in the library we should be safe, right?. > **readability** (or something like that): calling the initialization function ""manually"" makes programs more readable: you can just start from the main() function and understand what code is going to run without actually running the code inside a debugger (or reading the entirety of SOFA's source code);. Come on, we're talking about SOFA here ;-). > **choice** (or whatever): with an explicit call to init(), an application writer gets to decide both whether and when to initialize SOFA. Not sure I agree: when `dlopen`-ing a shared library, I prefer to have it initialized automatically if possible (and safe) as the converse is error-prone. In any case, `cleanup` should really be called in the RAII destructor, otherwise resources will leak in case an exception is thrown and not caught, or somebody calls `std::exit` (which they *can*). And of course, the destructor should not do silly stuff like calling a `MessageDispatcher` that was destructed already.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280066333:966,safe,safe,966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280066333,2,['safe'],['safe']
Safety,"Hello Mr @alxbilger ,; there is an engine called : SubsetTopology which is similar to BoxRoi but can handle the renumbering of indices vs the indices in your output edges, triangles, etc..; which might be the cause of your crash. ; There are several examples in: https://github.com/sofa-framework/sofa/tree/master/examples/Component/Engine/Select. One is doing something closed to what you want but there are springs in between. I suppose you can avoid that using the option localIndices. I don't remember exactly... I did that in my previous SOFA life. . ![image](https://github.com/sofa-framework/sofa/assets/21199245/4251ff01-604d-4804-bcfa-71f4315b3b7f)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4706#issuecomment-2090066069:447,avoid,avoid,447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4706#issuecomment-2090066069,1,['avoid'],['avoid']
Safety,"Hello all,. This PR adds (hopefully) proper GIL handling to `SofaPython`, so that it is possible to run python threads concurrently with the main Sofa program. It enables the following scene to run concurrently with the main program: . ```python; def createScene(node):. from threading import Thread; import time; ; def target():; while True:; time.sleep(1); print(""it's aliiive!""); ; thread = Thread(target = target); thread.daemon = True; thread.start(). time.sleep(2); ```. This is achieved through the RAII class `PythonEnvironment::gil`, which is meant to protect the boundaries between c++ and python code as follows:. ```c++; // some function called from the c++ side; {; PythonEnvironment::gil lock;; // safely call python functions here: the GIL ; // is acquired and released automatically; }; ```. The trick is that the GIL should also be released prior to the first lock so that the last object to unlock the GIL gives an opportunity to python threads to run, if any. Otherwise, the main thread still holds the GIL after the last lock is destroyed, and python threads never get to run. This is a work in progress, but should be pretty harmless and easy to disable if something goes wrong. EDIT: it does not work on this branch :-/; ___________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326:712,safe,safely,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326,1,['safe'],['safely']
Safety,"Hello everyone,. I detected an error with the .vtk file version. The version 4.2 of vtk has some lines which are not managed by Sofa. I generate the .vtk file with Paraview 5.5.0 on MacOS. These lines are metadata written between the first and the second parts of the file : ; <img width=""643"" alt=""capture d ecran 2018-05-09 a 10 16 40"" src=""https://user-images.githubusercontent.com/22655914/39803747-4590d964-5372-11e8-80e6-d81beabba2d4.png"">. The errors generated when you run a scene with such a .vtk file are : ; <img width=""886"" alt=""capture d ecran 2018-05-09 a 10 15 33"" src=""https://user-images.githubusercontent.com/22655914/39803770-5a6375d6-5372-11e8-94cd-cc39767ad188.png"">; The scene runs even with the errors and the .vtk file seems to be loaded correctly. I think there is something to change in MeshVTKLoader component in order to not consider these data. Actually I just (by hand) erase the lines and all is good. SOFA version : 17.12; System version : MacOS 10.13.4; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/652:19,detect,detected,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/652,1,['detect'],['detected']
Safety,"Hello everyone,. I have detected an error when I close a sofa scene on my Mac with Cmd + Q. Here is attached the list of warnings raised when I close a scene. . [Terminal.txt](https://github.com/sofa-framework/sofa/files/1950734/Terminal.txt). I'm using MacOS 10.13.4 and Sofa 17.12.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/647:24,detect,detected,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/647,1,['detect'],['detected']
Safety,"Hello,. I'm trying to compile sofa from a fresh ubuntu install (so there is no conflict between software versions) and I can't process what this error means. Is it found or not? Is it the version that's too old or too new ? The displayed version correspond to the one installed by aptitude. Any hint / solution is welcome. ``; $ cmake ..; ``; -- The C compiler identification is GNU 9.3.0; -- The CXX compiler identification is GNU 9.3.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Install prefix: /home/thebigone/projects/sofa/build/install; -- Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.2"") ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:543,Detect,Detecting,543,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,8,['Detect'],['Detecting']
Safety,"Hello,; A very small PR to perform a check at the start of the doUpdate function to make sure the rest-position is defined and avoid a crash when it is not the case. This typically happens when calling init() on a boxROI in the SOFA scene without calling init() on the associated mesh loader for example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1031:127,avoid,avoid,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1031,1,['avoid'],['avoid']
Safety,"Hello @alxbilger,. Thanks for the PR. . I looked at the implementation and I'm not sure the Observer/Observable mechanism is needed.; At current time is seem to be used to notify that, when a mass change, the component using the mass need to be updated. . Tracking component and data changes can already be done using the Directed Dependency Graph (DDG) mechanisms. . When I want a component (B) to track component (A) and detect it changes I connect A.componentState (the observable) by adding B as a DDG output of A.componentState (so B is the obsever). By using the DDG machinery you can have the choice of when the updates is done... when A.componentState is changed or when B is needed ... (thanks the lazy DDG update mechanism). Finally if using the DDG it too heavy, it is also possible to use the DataTracker, this allows to detect data change (eg: A.componentState has changed) when you need to invalidate the cache.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4625#issuecomment-2042182871:423,detect,detect,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625#issuecomment-2042182871,2,['detect'],['detect']
Safety,"Here all what I am making sure is that, if no value is given to min and max then:; - you compute them from the mesh info (2x2x2); - you compute/update the BB including the safety margin. i.e. min and max are not directly used to compute the BBox to avoid the shifting effect",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/308#issuecomment-355937944:172,safe,safety,172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/308#issuecomment-355937944,2,"['avoid', 'safe']","['avoid', 'safety']"
Safety,"Here is a plugin communication ; The purpose of this plugin is to add ability to the users to simply send/receive data´s from sofa. Instead of creating many plugins for each implementation/hardware, we propose to regroup all of them in one communication plugin. . Actually there is two network protocol implemented : ; - OSC (has packet size limiations ...); - ZMQ. Improvements : ; - better thread safe implementation; - more types; - add others library implementation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534:399,safe,safe,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534,1,['safe'],['safe']
Safety,"Here is a short feedback of what we have done since the STC : . **First strategy :** Model the Data accesses using ORWL's concepts + high level task parallelism (coarse grain parallelism); - use abstract Data accesses stored in FIFOs to extract parallelism : thread safe data accesses allowing concurrent reads.; - ensures that the semantic of the program is preserved.; - tasks defined at Visitor level : a Task is defined as the execution of a Visitor on a component.; - this strategy should apply to all visitors and components, as it does not depend on the nature of the component. **Issues :** ; - We wanted to use the Data class, since all accesses to a data object in sofa should be done using this class. Problem : this is not true, some components use vectors directly, or use Data methods / ReadAccessor / WriteAccessor not as intended (this is possible since for now some methods such as Data::endEdit do nothing) -> we would need to look at all sofa components to make sure that the Data are properly used; - To properly model the data accesses using ORWL's concepts we need to slightly modify the API of the Data class; - sofa Engine mecanisms are complex to handle using FIFOs; - it is difficult to predict the data dependencies as the Visitors are launched dynamically and can launch Visitors -> we can't predict the data accesses in a preprocessing phase, so we need to adapt ORWL.; - This approach would not induce significant performance gains on simulations with only 1 object or with 1 ""main"" object since all the computationally intensive tasks inside a given object access the same Data object (Write access) and thus are inherently sequential. **Conclusion :** the potential speedup is not good enough to invest more time on this strategy given the difficulty. **Second strategy :** finer-grain parallelization; To extract parallelism from highly data-dependent tasks we need to divide these tasks into less-dependent subtasks.; To achieve that, we are currently implementing pa",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792:266,safe,safe,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792,1,['safe'],['safe']
Safety,"Hey @hugtalbot,. As I remember, the communication plugin is imo ready to merge. ; It still need some polish like, code cleaning, avoid some useless copy, use some boost things ... but it´s working. . On CI, AFAIK only the core communication plugin is compiled. We don´t want to install libs for all the protocols implemented. What you need to know is, there is still pending PR (https://github.com/SofaDefrost/sofa/pull/20 with another one) for this plugin. But they are not working and I don´t have any news from the contributor (Rupesh gsoc).; This is not a big deal because the content of the PR is an addon for the plugin Qt serial protocol. Let me know if you have any question :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-441108533:129,avoid,avoid,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-441108533,1,['avoid'],['avoid']
Safety,"Hey,. In the context of the workgroup SOFA NG, it has been noticed ( @fredroy ) that the MechanicalObject presents dependencies on TopologyData.inl, itself having dependencies to all topologies in SOFA (containers etc.). For SOFA NG, it is intended to provide a first set of basic components, implementing the main virtual classes defined in SofaFramework and SofaSimulation. This first step helps us in detecting unexpected/undesired dependencies. We already know that the MechanicalObject does depend on GridTopology (see issue #162 ), but this is a new dependency that should also be avoided. Any suggestions?. This could be of interest for @fredroy @epernod @damienmarchal @fjourdes @JeremieA",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/242:404,detect,detecting,404,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/242,2,"['avoid', 'detect']","['avoided', 'detecting']"
Safety,Hi @ErwanDouaille thank you for your PR; I just rebased it to clean the commits (rm+add in one commit for better rename detection).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/486#issuecomment-338629454:120,detect,detection,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/486#issuecomment-338629454,1,['detect'],['detection']
Safety,"Hi @alxbilger ,; I ported the scene to python and the FreeMotionAnimation loop.; Some weird observations:; - the TriangleCollisionModels did not work at all -> had to switch to SphereCollisionModel; - the collision of the super heavy ball with the composite object does nothing to the deformation. ```python; import Sofa; import Sofa.Core. def createScene(root):; root.gravity = [0, -700, 0]; root.dt = 0.02; root.addObject(""RequiredPlugin"", name=""Sofa.Component.Collision.Detection.Algorithm""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.Collision.Detection.Intersection""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.Collision.Geometry""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.Collision.Response.Contact""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.Constraint.Projective""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.Engine.Select""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.IO.Mesh""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.LinearSolver.Iterative""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.Mapping.Linear""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.ODESolver.Backward""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.SolidMechanics.FEM.NonUniform""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.StateContainer""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.Topology.Container.Constant""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.Topology.Container.Grid""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.Visual""); root.addObject(""RequiredPlugin"", name=""Sofa.GL.Component.Rendering3D""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.LinearSolver.Direct""); root.addObject(""RequiredPlugin"", name=""Sofa.Component.AnimationLoop"") # Needed to use components [FreeMotionAnimationLoop]; root.addObject(""RequiredPlugin"", name=""Sofa.Component.Constraint.Lagrangian.Correction"") # Needed to use components [GenericConstraintCorrection,Linea",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:473,Detect,Detection,473,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,2,['Detect'],['Detection']
Safety,"Hi @damienmarchal it seems that the code of the #1046 (merged in #1048) was making an optimization when the DetectionOutput was already here, to save the barycentric coordinates of the contact point to avoid computing it again (and then call the _addPointInLine()_ function). Is this correct @fjourdes?; Do you think it was worth keeping?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1945:108,Detect,DetectionOutput,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1945,2,"['Detect', 'avoid']","['DetectionOutput', 'avoid']"
Safety,"Hi @faichele ; As said by @jnbrunet, for some months now, we are aiming at coding following the standard way.; Would you have some time to change this?; Moreover, regarding authoring, when contributing, you are welcome to appear in the Author.txt at the root of SOFA, but we prefer to avoid polluting the code.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1383#issuecomment-631369549:285,avoid,avoid,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1383#issuecomment-631369549,1,['avoid'],['avoid']
Safety,"Hi @fredroy,. Thanks for the PR. ; What about removing one of the two viewer ? Does it still make sense to have two redundant implementation in Sofa?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3454#issuecomment-1305568965:116,redund,redundant,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3454#issuecomment-1305568965,1,['redund'],['redundant']
Safety,"Hi @jjcasmar,; a bit late, but since you were able to avoid the linking problem, could we close this issue?; On my side, I have troubles understanding why it does not work. Alex",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1752#issuecomment-1499064795:54,avoid,avoid,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752#issuecomment-1499064795,1,['avoid'],['avoid']
Safety,"Hi @matthieu-nesme . Thanks for your feedback, I really did my best on it to avoid as much as possible trouble. I suggest to cut this PR in several part (haha) to remove the Flexible/Compliant files from the changes, this woud make the move much smooth. . This will give you time to point out specifically the most problematic points in which you think that the remplacement will not do the work so that I can propose solutions to be closer to the ""semantic you want"". . I looked into the Flexible/Compliant and it seems to me that only a dozen of replacement (out of hundreds) are not equivalent to the old code. . If you take time pointing me which one are causing you troubles I will gladely help in how fixing them to use the msg_api AND and preserving the existing behavior. To convince you that this is worth the effort I took examples from Flexible/Compliant to illustrate the benefit of the changes. ; ==== ====; ```cpp; - if(this->f_printLog.getValue()==true); - std::cout << SOFA_CLASS_METHOD << std::endl;; + dmsg_info() << SOFA_CLASS_METHOD ;; ```; - Is functionnaly equivalent to the old code (if the application have installed an handler routing the message to std::cout); - It will print message in a totally consistant way with other sofa componant (which very important for users); - It is shorter to write (very important for the developer :)), ; - It benefit from the message dispatcher/handler (so it can be logger or routed or sended or whatever GUI in the end user application); - All developpers immediately know that the message is not for the end user of Sofa but for a developers. Consequently the message can be very drafty. It can also be remove by setting SOFA_DEVTOOLS to false and thus it should have a zero cost in a release . A second example: ; ```cpp; - if(this->f_printLog.getValue()) if(pos.size()) ; - std::cout<<""TopologyGaussPointSampler: ""<< pos.size() <<"" generated samples""<<std::endl;; +msg_info_when(pos.size()!=0) << "" topologyGaussPointSampler: ""<< pos.s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190#issuecomment-285637960:77,avoid,avoid,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190#issuecomment-285637960,1,['avoid'],['avoid']
Safety,"Hi @ruiliang-gao . great !; For the caduceus scene, it is actually a crappy scene : objects are in collision at collision begin, which is supposed to be avoided.; If : ; - you remove the entire ""Base"" node; - you use a GenericConstraintSolver (handling both Uni and BiletaralInteractionConstraint); - you use a `<UncoupledConstraintCorrection defaultCompliance=""1"" verbose=""1""/>`. Using the constraint attachment as MouseManagement you should see it moving.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1188227127:153,avoid,avoided,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1188227127,1,['avoid'],['avoided']
Safety,"Hi @sescaida,; Thanks for following up on the subject :) I came back from holidays this week, that's why it didn't go much further since the STC.; I've updated the examples, that shows how to use both:; - the initial version of the PSDE (explicit data typing in the addNewInput / addNewOutput methods, but with SOFA C++-style datatype factory) ; - The new auto-detected I/O types derived from their parent / child's value types. As I said in my previous comment, I'd hope to go further now that I'm back, especially on the aspects of setting input types as kwargs to the PythonScriptDataEngine component. I will also rename the PythonScriptDataEngine into whatever we decide.; Damien suggested PythonEngine, I'd be more for PythonDataEngine to keep the consistency between the bound component's name and the Pyhton name (PythonDataEngine -> DataEngine); What do you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406585627:361,detect,detected,361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406585627,1,['detect'],['detected']
Safety,"Hi @sofa-framework/reviewers,. May was quite quiet for our beloved NG project.; Don't worry, I still have some news for you :wink:. ## Discussions. Pluginization works are possible but they have to be done in-place (not moving the files). This will permit to simplify the dependencies between SOFA modules. . About the NG branch, to avoid big divergence, we propose to merge it with master as soon as some big step is done. The next big step is SofaFramework coverage. ## Bootstrapping scripts. Previously named SPM, the [bootstrapping scripts](https://github.com/guparan/sofa2ng) are now able to handle test folders. ## Process. Here is the process to cover one module:; 1. Create/update a recipe based on an existing one.; 2. Run the bootstrapping scripts with the recipe.; 3. Inspect the output; 4. If something is wrong or missing, edit the bootstrapping scripts and *goto 1*; 5. Do specific changes by hand like namespace aliases; 6. Create a patch of all changes made by hand; 7. Open a pull-request providing the recipe and the patch (previously pushed to sofa2ng). This process will be rewritten in Sofa.Helper.Bvh pull-request. ## Sofa.Component.Utils. The first NG pull-request has been merged to the NG branch. There is still some updates to do though, because the bootstrapping scripts changed. ## Sofa.Helper.Bvh. The recipe has been updated. ; This work will be the base of further contributions. I will detail all the bootstrapping + patching process in the pull-request. ## Next steps; - Pluginize without moving files: use plugins mechanism to work on modules dependencies ; Start with the less dependent ones and progress towards SOFA core.; Objective: simplify dependencies between modules.; - Validate Damien's architecture proposal for SofaFramework: https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel/Sofa; Particularly about Sofa.Helper.Types; - Create Sofa.Helper.Bvh pull-request; Will give a clear example and all the process to refactor parts of SofaFramew",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223:333,avoid,avoid,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223,1,['avoid'],['avoid']
Safety,"Hi Adrien,. Thank for the PR, and the detailed description. Few comments at first glance:; - are the class Callback & CallbackImpl not equivalent to the std::function and std::bind that are in the c++11 STL ? ; - about the ""if(m_updating)"" in the update function. I think it is there to avoid loops. Does it make sense to add a message warning if this happens ? ; - we don't use #pragma once in SOFA as this is not part of the standard . But I think the decision make sense 10 years ago but as the compiler support is now rather bit maybe we should switch to use it as managing the #include SOFA_SUPPER_LONG_NAME_H..is error prone. @guparan, do you think we can make a script to convert the complete code base for pragma once ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911#issuecomment-459511168:287,avoid,avoid,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911#issuecomment-459511168,1,['avoid'],['avoid']
Safety,"Hi Damien,. I haven't had much time to devote to this as of late, but here is some quick feedback so far:. - lots of code need modification (like *lots*), deep down the core and you need lots of patience to recompile everything over and over again,; - it makes little sense to optimize data initialization if you don't optimize links as well since they use a similar initialization mechanism,; - the speedups in my test scenes were disappointing, being largely dominated by other code paths (contact detection and response mostly, since this is the main use case as the graph gets dynamically altered at every time step),; - IIRC there was a data/link notification mechanism on insertion that could cause accidental quadratic complexity when used sequentially (I'll try to fix this one soon),; - beware of CollisionGroup managers that was causing huge slowdowns in my case for no visible reason as there was a single group. The takeaway: this is probably premature optimization at this point. I might give it another shot in the next few months as my work may depend on it but until then, don't expect major changes on this front. (edit: typos)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270123574:500,detect,detection,500,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270123574,1,['detect'],['detection']
Safety,"Hi Damien,; aren't the two features redundant ?; I was actually already using this functionality for a repository including several plugins.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/530#issuecomment-347539831:36,redund,redundant,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/530#issuecomment-347539831,1,['redund'],['redundant']
Safety,"Hi Mathieu,. - About the 'd_size' data field. It is there just to store the attribute passed by the user. As the parse function already do the resize using the raw value of the attribute it was not needed to do any resize(d_size.getValue) anywhere. . - I share your concern about the cost of adding data. ; According to the last updates in Issue https://github.com/sofa-framework/sofa/issues/44) it seems that data is not that crucial for a real simulation. . To have more insight I just made a quick test with the following result: ; The time to create 200 000 (empty) component (without calling the init function):; - with 6 Data field is 1.10sec; - with 10 Data field is 1.55sec; So one data field added to a component cost 0.05ms at component creation (it is higher than what I expected). ; Now for a more realistic scenario with 200 SphereModel created and initialized one extra data field rise the cost from 3.1 ms 3.2ms and that this is 'dialuated' in all the other cost (collision detection, mechanics). . About your suggestion to set everything to persistent by default and have each component decide what is good to save or not. This is what SOFA actually does and this behave terribly. ; I see two reason for that:; - there is a lot of component that 'forgot' to set/unset the persistent values.; - it is very hard to identify what is relevant to save, IMO because what is relevant to save is a matter of context of use, a Data 'useless' for one may be very useful for someone else. . This is why I choose to do things in the reversed way and let the client code to select what to save (so that you may eventually implement dedicated widgets to let the user select what to save). . I see at least to different context of use and thus saving strategies. . For my context of use it is more important to save scenes that are as close as possible as the one written by the user. This is why I made the XML loader and the GUI have the responsability to make persistent:; - the value given explic",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495:989,detect,detection,989,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495,1,['detect'],['detection']
Safety,"Hi Mathieu,. Thank for the feedback. . STLExport & MeshExporter are exporting single object while OBJExporter is exporting a whole scene. ; I didn't change that because it would cause too much refactoring and it seems there is an agreement on that. . In this PR what I did was just to factorize the existing quasi-duplicated functionalities into an unique class. So now the three objects have a consistent behavior regarding the filename & path creation as well as the attributes behavior. . I'm very sorry about the difficulty to review this kind of changes... I think the best approach is not to use the diff which are too complex and instead review the resulting file which are (I hope) good looking. . I also have added tests (+30) to check that things goes fine and help in future refactoring to detect regression. As you said one year ago ...we need more tests :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/372#issuecomment-328071631:801,detect,detect,801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/372#issuecomment-328071631,1,['detect'],['detect']
Safety,"Hi Maxime,. It is funny because I pointed this SPTr stuff in my yesterday's slides for STC4 presenting some of the Sofa anti-patterns. . So on my side I totally agree on the general objective of reducing the coupling between .h and I also fully agree on the method you are proposing on doing that incrementally. . As the topic interest you I would be happy to have your opinion on the following:; - should we advocate to have forward definition only header (something like base_fwd.h) to avoid repeating the same namespace { namespace { namespace {class MyClass;} }} ?; - should we advocate for the use of more opaque object either using PIMPL or storing all data as you suggested in a previous issue:; ```cpp; struct MyObjectData ; ; class MyObject ; {; private: ; struct MyObjectData m_data; ; }; ```. While in the cpp file having; ```cpp; #include <Data.h>; #include <DataFilename.h>; #include <SuperOtherComplexObject>. stuct MyObjectData; {; Data<int> myint;; DataFilename filename;; SuperOtherComplexObject object;; };; ```. DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436#issuecomment-333953235:488,avoid,avoid,488,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436#issuecomment-333953235,1,['avoid'],['avoid']
Safety,"Hi Thomas,. You said:; ""As long as the deserialization operator is compatible with the serialization one, I do not see any issue. And no example scene is failing because of that."". You have to take the whole picture into consideration, everyone is not using serialization/deserialization as ""pairs"". The actual default serialization format is used in a lot of other software (GUIs, scene processing tools written in python, perl and C++). If you change the behavior of the default serialization mechanism all of them will stop working and required to be updated. This is a very, very, very nasty thing to impose to other users of Sofa. A PR doing has no changes to be accepted. . Actually tests is part of our guard line because they validates the API compatibility and allow us to detect changes that breaks it. The existing tests should be considered as validating the ""the existing"" sofa API. It was normal to have them to fail on your PR because it shows that the PR was breaking the compatibility. . I really like the idea of keeping the old serialization behavior as it is and add the other deserialization as an extra feature. This will make the whole PR transparent for users that don't want to update their code base. It thus it can be merged very quickly. . About the test: ; You are right that it would be better if we had test specific tests to validate the serialization alone.; I personally would like to have tests to validate that getValueString() return ""1 2 3"" and that getValueAsPythonString() return ""[1 2 3]"" . And also as you said having tests to validate against the real values instead of their serialization would be nice. . . About the branches:; The rule is to never work directly on the sofa-framework repository. There is no reason to do so (if you really want to make two PR one in anatoscope and one in sofa ... you need to to that from two branches located in the anatoscope repo). Otherwise this consume a lot of disk space on the CI servers that we have to fix manual",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626:782,detect,detect,782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626,1,['detect'],['detect']
Safety,"Hi all, . Just a quick update asked by @hugtalbot on how we handled this issue at Anatoscope. It's been a while so our fork drifted quite a bit since the opening of this issue:. - `Data` are only allowed in `BaseObject` instances (i.e. `Nodes` have no data), which simplified many things; - We removed `initData/initLink` altogether, most constructors are now `(BaseObject* owner, const char* name, const char* doc, const T& value = {})`. A pleasant consequence in c++17 is that you may directly declare datas in the class like this:; ```c++; class Object: public BaseObject {; public:; Data<double> foo = {this, ""foo"", ""a foo that bars"", 1.0};; };; ```; - `BaseData` now maintains shareable information (like name/doc/etc) in a shared object, which can be shared between several data instances. In practice doing so is still very ad-hoc so we don't use it much, but it is possible in case we want to optimize dynamic component creation; - Dependency relations between `DDGNodes` no longer use the `Link` mechanism. ; - In fact component links and `Links` in general are mostly gone, and will be removed in the future as they're yet another dependency graph and we would like *everything* to use the data/engine graph instead; - Our `Data` have at most one input (another data or its owner engine), so we may move the `inputs` handling of `DDGNode` to derived classes to avoid needless allocations for `Data`. It's not done yet though. As you can see, things don't quite look the same, but I think old-timers would still recognize what's going on ;) By the same token I think this issue can be closed, but please don't hesitate if you have any question.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-1033777336:1371,avoid,avoid,1371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-1033777336,1,['avoid'],['avoid']
Safety,"Hi all, . Thanks for the discussion. . My current understanding is that removing the whole InitData Mechanisme is:; - possible, ; - desirable (would make the code more clear and maintainable). This mean converting every ; ```c++; myData(initData(&myData, 0.1, ""myData"", ""helpe)) ; /// into ; myData(this, 0.1, ""myData"", ""helpe""); ; ```; About the use of ""this"" in a child constructor. My understanding is that it is considered safe for non virutal methods and attributes from the superclass (https://isocpp.org/wiki/faq/ctors#using-this-in-ctors). I also tried a pure constructor based initialization with g++ and clang++ and got no warnings with -Wall and -pedantic. About the ambiguity case cause by the char* to bool implicit conversion... I would say it would be much easier to fix when the initData machinary will be dropped. . EDIT: One more thing about the bool to specify the parameter... I think that using directly the enum 'named"" value or the setXXXX method to set the parameter is far better than using bool.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1234334877:427,safe,safe,427,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167#issuecomment-1234334877,1,['safe'],['safe']
Safety,"Hi all,. I don't like to removing the safeguard by removing the 'static_assert' ; I finally implemented a version in PR119 that conditionally compile the set(...,...) functions based on condition so that static_assert is not a problem anymore. The implementation is using the enable_if feature for C++X11.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/130#issuecomment-279441140:38,safe,safeguard,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/130#issuecomment-279441140,1,['safe'],['safeguard']
Safety,"Hi all,. In some of my work I tend to add new Data to Base object and as rightly pointed by @matthieu-nesme this may have a significant cost. To have more insight I just made a quick test with the following result:; The time to create 200 000 (empty) component (without calling their init() function):; - with 6 Data field is 1.10sec; - with 10 Data field is 1.55sec; So, one data field added to a component cost 0.05ms at component creation (it is higher than what I expected). Now for a more realistic scenario with 200 SphereModel created and initialized one extra data field rise the cost from 3.1 ms 3.2ms and that this is 'dialuated' in all the other cost (collision detection, mechanics). My question now is should we stop adding Data to Base or do we find a solution to decrease the cost of all the initData ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-276748182:673,detect,detection,673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-276748182,1,['detect'],['detection']
Safety,"Hi damien,. I agree, as always the details are not straightforward... I think also we should avoid the O(N) complexity (indeed objects and children are stored in list) at object/child insertion. I do not know about the WITH_SOFA_DEVTOOLS option, I would activate such check in debug mode. An other approach would be : it is fine to have objects/nodes having the same name as long as you do not retrieve them by name, so the check could be added (in DEBUG only) in the getChild()/getObject() functions: the 0(N) search loop would continue until the end to find duplicated names and issue a warning if so - cons the issue is detected late / pros less invasive. An other approach could be to have a visitor that would be launched in DEBUG before the init and would check for such duplicates - cons no detection for dynamic object creation / pros less invasive, visitor can be executed when needed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323940618:93,avoid,avoid,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323940618,3,"['avoid', 'detect']","['avoid', 'detected', 'detection']"
Safety,"Hi erik,. You are totally right, . As far as i know there is no well defined error management pattern on sofa. Without using exceptions or changing function signature my current approch is, for each detected error, to emit an error messages with the msg_error() macro and set the componentState to invalid. Then in each function that needs a valid object...check it and exit if it is not.; Not perfect and rather invasive but at least the component does not crash sofa anymore.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278805067:199,detect,detected,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278805067,1,['detect'],['detected']
Safety,"Hi everyone!; I'm trying to develop a nodule detection exercise on SOFA v22.12. To do this I made a patch of skin: the behavior model is a box with a tetrahedral internal structure, the collision model is generated by making a topological mapping from those tetrahedra to triangles, and finally the visual model is defined as an identity mapping from the collision model. I want to create a sphere inside with a different stiffness's value so that a surgeon can feel the harder sphere inside the skin. The problem is that, although I feel the haptic feedback of both the skin and the sphere, it is very difficult to perceive the transition from the skin to the sphere, and it is impossible to perceive the size of the sphere. What can I do? Is there a way to manage the interface between two objects with different properties?. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4318:45,detect,detection,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4318,1,['detect'],['detection']
Safety,"Hi guys,. Interesting points indeed.; I wanted to add that topological changes are not of interest of everyone in the community. It actually does not represent the major use case. I therefore think that strong dependencies (to TopologyData for instance) and code optimizations for topological changes only should be avoided. Do you agree?. Today, we often have either one version of a component (supporting or not the topological changes). Would there be a nice design allowing for having the possibility to have the two behaviors for each component ?. Personal reminder: this issue is about the MechanicalObject. I think it can be closed as soon as the dependency of MechanicalObject on TopologyData is removed. We should later continue this discussion in a specific/dedicated thread. Agreed ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295635703:316,avoid,avoided,316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295635703,1,['avoid'],['avoided']
Safety,"Hi mathieu, ; ; This is a good question. . I recently wrote a lot test for sofa component and it appears to me that more than half of my tests cases are in fact verifying that component correctly rise errors or warnings when they are used improperly. Making these tests is very important to avoid un-detected bugs on the error handling code paths and it bring a lot to the general quality of sofa. . About the fact that the ""error as test failure by default"" is covering 99% of our tests... to me this is an indication that our tests are only covering half of the things they should and I'm not sure we should facilitate this behavior. . This is why I came up to making the things explicit in each test because it force the test writer to specify what are his underlying assumption and expectation for each of his tests making things very clear. In addition it put in front of his eyes what he is testing.. and what he is not testing. . PS: I really like the very detailed test failure that are reported with the explicit approach, we have either the filename & lineno of the failing test as well as the location of the message emission. ; eg: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/DilateEngine_test_0/NormalBehavior/. EDIT: Your question make me think that some way to improve the things so maybe we can discuss what are the desirable features and how to expose them to the developpers. This is very hard because it is connected to lack of standardized way our code base reports errors (not exception, some uses error codes ,some uses messages). But I'm very afraid of starting such kind of very impacting discussion (I want to do UI ;)). In the meantime I suggest to use this PR. . EDIT2: what should i do with this:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/TrianglePressureForceField_test_0/trianglePressureForceFieldTest/ ? ; 1) Should I ignore the warning in the test generation ? ; 2) Should the function be pure virt",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197:291,avoid,avoid,291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197,2,"['avoid', 'detect']","['avoid', 'detected']"
Safety,"Hi! :). The original issue and nice chronological story is described here; https://github.com/sofa-framework/sofa/issues/3318. TLDR:; 1. The destructor of `NarrowPhaseDetection` should clean up its map of `DetectionOutputVector`s; 2. `IntersectorFactory` should also keep track of already created `TIntersectorClass`s and release the old ones. Cheers,; Paul; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3337:206,Detect,DetectionOutputVector,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3337,1,['Detect'],['DetectionOutputVector']
Safety,"Hi, . This PR follows the changes made in BarycentricMapping (i.e use of spatial hashing to find the nearest points instead of an exhaustive search). This new PR:. 1. Handle cases of several grid cells having the same h index. In such case, the distance between two points, that have the same h index, should be computed only if the points are in the same grid cell. This PR add this implementation. Each element is now stored in the hash table with its corresponding grid cell indices. 2. The nearest point, in a shared grid cell, may not be the global nearest point. To improve that, we detect when neighboring cells may contain a better solution, and do the check. These additional computations are still far better than the exhaustive search. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/896:589,detect,detect,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/896,1,['detect'],['detect']
Safety,"Hi, as scheduled I just reverted the last commit already fix or redundant with #556",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356617616:64,redund,redundant,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-356617616,1,['redund'],['redundant']
Safety,"Hi,. As discussed at Journées HPC INRIA in Lille, here is an initial nix package for sofa. It also include a flake (and its lock), which is not mandatory, but ease the use of the package, with commands like; - `nix build`, to compile the package in a sandbox; - `nix develop`, to provide a shell with an environment containing all required dependencies to build the project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:818,detect,detect,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,1,['detect'],['detect']
Safety,"Hi,. The current dash board does not allows to differentiate tests that fails because they are 'showing' a not yet fixed sofa defect to the one caused by regression (ie tests that were supposed to work but don't anymore). . This is a problem because while introducing new regression failure is a bad thing, introducing new tests that exhibit sofa defect is a positive thing. But they have the same results...turning the dashboard to orange. . I see two consequences:; - when there is test failures because of open-issues we will detect much less easily the regressions tests (that are 'more' important !) ; - people will prevent themselves to push open-issues test to avoid to turn the dash board to a not green status (because they are ashamed...or because they prefer to preserve the readability of the dash board to detect regression). So would it be possible to change that so that each tests with a pattern (lke ""OpenIssue"" in their name are counted separately ?. This would allow to reports two numbers instead of one eg:; regression test failure : 0 ; open issues tests failure: 123 ; And also to let the dashboard green for open issues tests failure. . DM.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/52:529,detect,detect,529,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/52,3,"['avoid', 'detect']","['avoid', 'detect']"
Safety,"Hi,. To fully support xml saving (see PR:https://github.com/sofa-framework/sofa/pull/116) we need to clean VisualModelImpl::parse(). . I can do some stuff but is unclear to me how much VisualModelImpl requires cleaning and whether or not some part are deprecated (the loading stuff from file seems redundant with loader). . By the way...any suggestion/advice regarding the data attributes is more than welcome. I started a branch there for that: https://github.com/SofaDefrost/sofa/tree/cleaning_visualmodelimpl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/118:298,redund,redundant,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/118,1,['redund'],['redundant']
Safety,"Hi,; ; Here's my fix for issue #1534. The problem was the use of `beginEdit()`, `endEdit()`... I'm not sure what was happening exactly,; but it looked like it was triggering extra callback... - I've replaced all `beginEdit()` with `getWriteOnlyAccessor()` and removed the `endEdit()` when there was any. I'm pretty sure `MeshGmshLoader` is also broken. I was about to fix it, but I came across another problem.; `MeshGmshLoader` uses calls to `addTriangle(...)`, `addEdge(...)`, `addQuad(...)`, etc., which are implemented in `MeshLoader`.; For the moment, `addTriangle` is the only one which has been duplicated to work with data returned by `getWriteOnlyAccessor()`.; I think we all agree that duplication of code should be avoided. I'm not sure what we should do here. Should we generalize the use of `getWriteOnlyAccessor()` in all loaders, and change all `addEdge(...)`, `addQuad(...)`, etc., signature once and for all (no duplication)?; Or should it be fine to use `beginEdit()`, and my fix doesn't solve the real problem? . Fixes #1534; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554:726,avoid,avoided,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554,1,['avoid'],['avoided']
Safety,"Hi,; In one of my scenes, I have once mis spelled 'src' in the line code adding a loader for the mesh of an object's collision model:; `collision.createObject('Mesh', name=""mesh"", scr=""@loader"")`.; As a result, when animating the scene, and at the moment when a collision is detected, Sofa shuts down while no error message is provided in the terminal.; I have attached the code file of a scene that reproduces the error, using the Sphere and the Floor prefabs of stlib.physics.rigid. ```python; from stlib.scene import ContactHeader, MainHeader; from stlib.physics.rigid import Floor; from stlib.solver import DefaultSolver. def createScene(rootNode):. 	MainHeader(rootNode, gravity=[0.0,-9810.0,0.0])	; 	ContactHeader(rootNode, alarmDistance=5, contactDistance=2). 	ball = rootNode.createChild(""Floor""). 	totalMass = 1.0; 	volume = 1.0; 	inertiaMatrix = [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]. 	ball.createObject('MechanicalObject', name=""DOF"", template=""Rigid"", translation=[0.0,0.0,0.0], rotation=[0.0,0.0,0.0]); 	ball.createObject('UniformMass', name=""mass"", mass=[totalMass, volume, inertiaMatrix[:]]). 	ball.createObject('UncoupledConstraintCorrection'); 	ball.createObject('EulerImplicit', name='odesolver'); 	ball.createObject('CGLinearSolver', name='Solver'). 	visual = ball.createChild(""Floor Visual""); 	visual.createObject('OglModel', name=""Visual"", fileMesh=""ball.obj"", color=[0.1,0.0,1.0]); 	visual.createObject('RigidMapping'). 	# collision model for the ball. 	collision=ball.createChild(""FloorCollisionModel""); 	collision.createObject('MeshObjLoader', name='loader', filename=""ball.obj"", triangulate=""true""). 	#line code responsible for the crash (scr is mispelled); 	collision.createObject('Mesh', name=""mesh"", scr=""@loader""); 	# by writing src correctly, the scene works well . 	collision.createObject('MechanicalObject'). 	collision.createObject('Triangle'); 	collision.createObject('Line'); 	collision.createObject('Point'). 	collision.createObject('RigidMapping'); 	# end ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746:275,detect,detected,275,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746,1,['detect'],['detected']
Safety,"Hi,; When adding a MechanicalObject in a subnode of one containing a solver, its positions are taken into account by the solver (addKToMatrix) even if it is not mapped to the MechanicalObject in the solver's node. I am not sure that this makes sense, but if it does, a little warning message seems necessary to avoid spending time (hours in my case, as physics is not my strong suit...) searching for what goes wrong in the scene.; Looking fwd to your input on this topic!; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/581:311,avoid,avoid,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/581,1,['avoid'],['avoid']
Safety,"Homogeneize the API for update.; A layer is added to avoid a direct access to the DataTracjer which is now private:; - in DataTrackerDDGNode: trackInputData, hasInputDataChanged, haveInputsDataChanged, cleanInputTracker; - in BaseObject: trackData, hasDataChanged. The name of the update function is:; - `doUpdate()` for Engines; - `doInternalUpdate()` for components inheriting from BaseObject. Update engines, and tests accordingly. Rename UpdateInternal(DataVisitor) into InternalUpdate(DataVisitor). Remove the DataTrackerFunctor and its test. TODO: update constantFF with new API. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1163:53,avoid,avoid,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1163,1,['avoid'],['avoid']
Safety,"How does it break the scenes? In my opinion, it breaks only if you refer to a component that you did not name, relying only on the component class name. I don't think it's a good practice. If you refer to a component, you have to give it a name. But maybe we missed other cases.; Same thing when you rely on a warning message to detect duplicate names. This warning is here only when the user actually provided two equal names. But a user can put two same components in the same Node without naming them and it's a valid situation. In this case, no warning.; I am open to discuss about removing the 0 suffix, because in most cases, the component is the only one in its Node. But I would like to keep the following suffixes (1, 2, 3 etc). Note that removing the 0 would not discourage users to rely on the component class name of an unnamed component.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1057829751:329,detect,detect,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1057829751,1,['detect'],['detect']
Safety,How to avoid excessive vector normalizations,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2700:7,avoid,avoid,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2700,1,['avoid'],['avoid']
Safety,"I abort the CI build, not needed here.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2365#issuecomment-929943604:2,abort,abort,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2365#issuecomment-929943604,1,['abort'],['abort']
Safety,I aborted the latest build because it must be triggered with a specific CI branch in which PLUGIN_GEOMAGIC is ON; Done in https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2115/14/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2115#issuecomment-855800093:2,abort,aborted,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2115#issuecomment-855800093,1,['abort'],['aborted']
Safety,"I agree that at least we should have a warning. . Just, when you think about reusable code like STLIB, or what we have in SoftRobots too for instance, which is a good practice to avoid dirty copy paste. It means that we should give a name to every component right? Since the user cannot, and may need to refer to any component.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1059175010:179,avoid,avoid,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1059175010,1,['avoid'],['avoid']
Safety,"I agree with all the points :F and I think we need to have a bit more info about this component...; ; > ; > But it is unclear to me if the implementation proposed in the PR is enough because:; > ; > * having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"",. Did it to get the SOFA_ABSTRACT_CLASS mechanism (for the boiler-late code from Object, and to be able to do ::SPtr). > * using dynamic cast to detect the ""features"" in the ConstraintCorrection, ... (I will reply to this in my next answer to alxb). > * the implementation in BTD also looks highly suspicious with:; > ; > * plenty of ""debug/trace"" mapped to Datas as if the feature was ""not stable"" or only working in some case.; > * a boolean to control if we use the PartialLinearSolver part of the API or if we don't... and I wonder if the actually really work for full & partial solving or only for one of the two APIs. The lack of comments, and the fact that the ""partial_solve"" API seems to come from this class is a bit difficult to follow yeah :p.; As far as I could see, the BTDblabla/LinearSolverCC is only used for the beam-related stuff.; All in all, I guess we need more information about it @ChristianDuriez",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227871506:431,detect,detect,431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227871506,1,['detect'],['detect']
Safety,I agree with you but to avoid calendar issues I would speak rather in term of release: Two releases for the transition and remove at the third one.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328523818:24,avoid,avoid,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328523818,1,['avoid'],['avoid']
Safety,I am catching up with all PRs of the last four weeks.; @pedroperrusi I would be awesome if you could contribute a test ensuring that we detect the possible problem induced. Would you agree?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2265#issuecomment-891708693:136,detect,detect,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265#issuecomment-891708693,1,['detect'],['detect']
Safety,"I am curious to know more about those two functions. In appearance, they do nothing. Can you explain how they work?; Also, an alternative to `bool` + call to `init()` could be to use `std::call_once` (https://en.cppreference.com/w/cpp/thread/call_once). The main advantage I see is that it is thread-safe (probably not necessary here), but nothing more.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1987#issuecomment-815555624:300,safe,safe,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987#issuecomment-815555624,1,['safe'],['safe']
Safety,"I am unsure this PR is correct, so it really needs a green light from others before merge. When trying to call `std::exit` in some plugin, I had a segfault in cleanup code similar to this one:. ```c++; // Detect missing cleanup() call.; static const struct CleanupCheck; {; CleanupCheck() {; }; ; ~CleanupCheck() {; if (core::isInitialized() && !core::isCleanedUp()); helper::printLibraryNotCleanedUpWarning(""SofaCore"", ""sofa::core::cleanup()""); // segfault; }; } check;; ```. In fact, most `init.cpp` files in SOFA have code similar to this one. In my case, `MessageDispatcher::LoggerStream::~LoggerStream` caused a call to `MessageDispatcher::process` which would then cause a segfault. What I don't understand is *why* the above code snipped does not simply `cleanup()` the library in the destructor, since the latter is being called while the library unloads and this is the last chance to actually clean things up, instead of (trying to) emit a warning while the whole program is being terminated. So unless there is a compelling reason to leave it this way (and I would really like to know it), I suggest the above to be changed to:. ```c++; static const struct CleanupCheck; {; CleanupCheck() {; init();; }; ; ~CleanupCheck() {; cleanup();; // leaving the warning if for some reason cleanup failed; if (core::isInitialized() && !core::isCleanedUp()); helper::printLibraryNotCleanedUpWarning(""SofaCore"", ""sofa::core::cleanup()"");; }; } check;; ```. so that the library automatically `init()` and `cleanup()` upon `dlopen`/`exit`. <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168:205,Detect,Detect,205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168,1,['Detect'],['Detect']
Safety,"I commented on #151 why I don't this this strategy is viable. An additional point related to this fix, is that `TemporaryLocale` is not a good solution, and needs to be banned for cases where Sofa is embedded within an application having multiple threads. Indeed, `setlocale` is ""MT-Unsafe"" according to the docs, and does affect the locale of the other threads that could run in parallel. It's like `setcwd`, but unlike the notion of the current directory that we can workaround (by having the notion of the current directory tracked within Sofa), there is no thread-safe and portable way to do the same for the locale (as far as I know).; Depending on the GUI framework in use, the order of initialization, the OS, the system language, ..., the current locale will be changed (hint: the current constructor/destructors of `TemporaryLocale` do have non-temporary consequences, as there is no real way to get back to the ""no-locale-default"" state once someone messed with it. There is no obvious solution to this, but I would vote for going back to the strategy of imposing ""C"" at the beginning of the programs we control (i.e. `runSofa`), and adding checks and outputting a warning when loading a scene if the external application did not set the locale correctly to this safe value, but either never messing with it, or making this externally-controllable from the application using Sofa.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/161#issuecomment-281643466:283,Unsafe,Unsafe,283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/161#issuecomment-281643466,3,"['Unsafe', 'safe']","['Unsafe', 'safe']"
Safety,I decided to merge this branch into https://github.com/sofa-framework/sofa/pull/4852 to avoid too many conflicts,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4853#issuecomment-2255536966:88,avoid,avoid,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4853#issuecomment-2255536966,1,['avoid'],['avoid']
Safety,"I did the change for labels detection. ; The ""wip"" label will not be ignored by CI anymore. I created a new label ""pr: ci-ignore"" for that :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-988610745:28,detect,detection,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-988610745,1,['detect'],['detection']
Safety,I didn't want to commit directly in the branch to avoid breaking it but it seems that the main branch is already broken ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/433#issuecomment-333823345:50,avoid,avoid,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/433#issuecomment-333823345,1,['avoid'],['avoid']
Safety,I don't have the problem; neither on OSX nor on a Ubuntu Xenial VM. This problem looks Windows-specific (despite not being detected by our CI). Keeping investigating...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/20#issuecomment-300186820:123,detect,detected,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/20#issuecomment-300186820,1,['detect'],['detected']
Safety,"I don't know why this was not detected from a long time (compiler options for sure) but I stumbled on multiple definitions with MultiMapping with a custom compilation with gcc.; And these errors are perfectly fine as the header of MultiMapping is instancing directly various versions of MultiMapping (instead of only declaring them). This PR fixes it and the header only declares them now (and does not instantiate directly). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1982:30,detect,detected,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1982,1,['detect'],['detected']
Safety,"I don't know why this was not detected while doing the previous #1770 🤨; Or maybe it was not noticed... 😮. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1781:30,detect,detected,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1781,1,['detect'],['detected']
Safety,"I don't think that anything triggers when a non-existing file is trying to be load. So I added an error. I think it could have detected the error from https://github.com/sofa-framework/sofa/pull/3674. Unit tests are added. Changes in Node are just nullptr checks to prevent crashes when `getSimulation()` returns `nullptr`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3677:127,detect,detected,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3677,1,['detect'],['detected']
Safety,"I don't understand why a single map: tag => stack would not work: for each component, iterate over each of its tags, lookup the corresponding stack in the map and take the topmost shader in the corresponding stack. That's a total O(k * log(k)) for each component, which is O(1) if k is small/bounded. I mean the whole point of using a stack was to avoid linear searches upwards in the first place, so I don't see how using a single stack improves the situation if you have to walk the whole stack upwards before finding the right shader? . It's both more complex than it is now *and* sub-optimal.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/292#issuecomment-306744462:348,avoid,avoid,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/292#issuecomment-306744462,1,['avoid'],['avoid']
Safety,"I dont think the fix is good ; the ""toMatrix()"" is available for Mat3x3 but not for Mat4x4 (there was a ` toMatrix` for Mat4x4 but it was deleted and replace with `toHomogenousMatrix()` ).; This RigidCoord::toMatrix() is templated on the Mat type actually, and is really ill-formed (no assert on the size of the given matrix, etc).; I think the solution is to either:; - test if the matrix is 3x3 or 4x4 (and failed to compile with a message with a static assert) and calling the respective ` toMatrix()` or ` toHomogenousMatrix ()` ; - or remove the template, force it to Mat3x3 and create an other `toHomogenousMatrix` in RigidCoord. Consisntent with Quat but duplicating code and breaking. I am more for the first solution. > Thanks for your contribution. I wonder how it was not detected before. I guess this was not detected before because nobody was calling RigidCoord::toMatrix with a Mat4x4 with the code compiled on the CI. Actually, nobody calls RigidCoord::toMatrix, either with mat3 or mat4 apparently.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881:783,detect,detected,783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881,2,['detect'],['detected']
Safety,"I encountered a problem which I think is related: on my setup (Windows, debug) runSofa_d.exe crashes because it expects to find zlibd.dll, and only finds zlib.dll in build/bin/Debug. I manually copied zlibd.dll to try a quick fix, but then CImgPlugin could not load. Going to see it's dependencies, it seems to link with the non debug version zlib (which I had replaced), instead of zlibd, in the same way as it does for libpng16.; Trying to investigate, I found in the CImgPlugin CMakeLists.txt two lines (74-75) which could explain this :; ```; # Always link dependency targets in Release to avoid a Zlib debug/release mix.; # Because tiff needs zlib and tiff is only in Release in WinDepPack.; sofa_set_targets_release_only(${DEP_TARGETS}); target_link_libraries(${PROJECT_NAME} PUBLIC ${DEP_TARGETS}); ```; If someone can check, I'm not entirely sure it is the same issue though",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1851#issuecomment-790656198:594,avoid,avoid,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1851#issuecomment-790656198,1,['avoid'],['avoid']
Safety,I guess so. What you have in mind is that it could be a way to avoid multiple fetches in case of multiple calls to `find_package` by each target ? Not yet sure on how this could be implemented through,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1766868131:63,avoid,avoid,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1766868131,1,['avoid'],['avoid']
Safety,I guess the easiest and safest way to handle that would be to use boost::filesystem; http://www.boost.org/doc/libs/1_62_0/libs/filesystem/doc/index.htm,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/17#issuecomment-261488125:24,safe,safest,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/17#issuecomment-261488125,1,['safe'],['safest']
Safety,I guess you want to avoid critical error on cmake and rather it continue by fetching cxxopts in case of version mismatch ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4554#issuecomment-1973421505:20,avoid,avoid,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554#issuecomment-1973421505,1,['avoid'],['avoid']
Safety,"I have identified the actual issue in ```$sofa_dir/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - line 124 has a few mentions of ```/${PROJECT_NAME}``` too much, removing these at least reduces the header install path to ```$sofa_dir/build/install/include/extlibs/QGLViewer/QGLViewer/*.h```; - for some reason the ```MOC_HEADER_FILES``` (line 21 ff.) are not considered for copying by your ```sofa_create_package_with_targets``` macro. For testing I have simply copied the headers listed in ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES```. This does not affect the build and finally copies the previously missing MOC headers to the install include directory. I can make a pull request for this. Or I can wait a bit if someone has an idea on how to properly copy/install the MOC_HEADERS without the redundant mentioning in both header lists.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674:818,redund,redundant,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674,1,['redund'],['redundant']
Safety,"I have no idea what this code is supposed to do.; - it does not seems related to something that is in SimulationGraph (there is no #include). ; - it use a weird string comparison to detect parent-child relationship instead of the meta classe facilities (BaseClass) ; - it seems to be supposed to implement specific behavior for the XML loader ; - removing it does not change anything. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2694:182,detect,detect,182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2694,1,['detect'],['detect']
Safety,"I just add a remark (perhaps trivial) about the thread safe question.; From C++ 11 a static variable initialization is guaranteed to be thread safe only if it's instantiated inside a block scope (locally).; The DefaultStyleMessageFormatter::getInstance() method @jnbrunet implemented is guaranteed to be thread safe. That's called Meyers Singleton. ( http://www.modernescpp.com/index.php/thread-safe-initialization-of-a-singleton ); ; Another remark.; The same function DefaultStyleMessageFormatter::getInstance() returns a reference to a base class and the base class MessageFormatter is polymorphic, ; Isn't it better to return a pointer to the base class ?; static MessageFormatter *getInstance (); {; static DefaultStyleMessageFormatter instance;; return &instance;; }",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642#issuecomment-386037121:55,safe,safe,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642#issuecomment-386037121,4,['safe'],"['safe', 'safe-initialization-of-a-singleton']"
Safety,I just saw that Assimp is compatible with 40+ mesh formats.; I am just wondering to avoid multiple entry points we could drop the redondent import functions written specifically for Sofa and rely on Assimp ? ; What do you think ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369577164:84,avoid,avoid,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369577164,1,['avoid'],['avoid']
Safety,"I just spent a significant amount of time to understand how we play with GTest and XML outputs in SOFA.; Printing a call stack should be done with #191 + #195. ; But there is still a problem in our way to report unit tests.; Currently what we do is to run all our tests with `--gtests_output:xml`. This is OK but sometimes we have crashes (often due to segfaults) in our tests. When a test crashes, it just stops. All the other steps/functions/cases are skipped and the XML output is not created.; So currently, for each crash, we are losing results. This brings me a question: should we (1) handle the lost tests for each crash or (2) change the way we use GTest and detect crashes as failures? Is (2) even possible with segfaults?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/149#issuecomment-284763976:668,detect,detect,668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/149#issuecomment-284763976,1,['detect'],['detect']
Safety,"I like the simplicity of your proposal, however the macro trick (does it work with clang ?) could be avoided if we decide some different names for the macro, like . msg_info () << ""Implicit 'this'""; // keep that one, the most common . msg_info_component ( this ) << ""Explicit""; // or s.t. else shorter ; msg_info_name ( "" Something else "" ) << ""Hep""; // I think that one is mostly used in python, should it be exposed in c++ as a macro ? . thomas . ----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""Mention""; > <mention@noreply.github.com>; > Envoyé: Jeudi 16 Février 2017 13:54:11; > Objet: Re: [sofa-framework/sofa] Cleaning the way we handle message in Sofa.; > (#179). > About a possible implementation for the following syntax:; > msg_info () << ""Implicit 'this'""; msg_info ( this ) << ""Explicit""; msg_info (; > "" Something else "" ) << ""Hep"";. > I finally have one that seems to work on gcc and on visual studio.; > You can try it one-line at: http://www.cpp.sh/3xvfk. > I have a question to you @matthieu-nesme , @thomas-lemaire , @nurbal . I; > really like the implicit version but at the same time I fear using complex; > MACRO trick. What do you think ?. > DM. > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/179#issuecomment-281041722:101,avoid,avoided,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/179#issuecomment-281041722,1,['avoid'],['avoided']
Safety,"I ment using assimp to avoid redondency. Of course we need to keep the formats not supported by assimp! ; I do not understand exactly the package dependency problem, cmake can try to find the package if not dowload / compile / install it ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369909286:23,avoid,avoid,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369909286,1,['avoid'],['avoid']
Safety,I propose to avoid relying on some singletons. The first I have in mind is `sofa::simulation::getSimulation` and `setSimulation`. It prevents to run two simulations in the same program (or only in a limited manner).,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3770:13,avoid,avoid,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3770,1,['avoid'],['avoid']
Safety,"I pushed some change to handle the paths at a higher level, avoiding hard coded paths as much as possible.; Also, QtWebEngine copy at the end of the script had to be fixed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1728#issuecomment-765543605:60,avoid,avoiding,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1728#issuecomment-765543605,1,['avoid'],['avoiding']
Safety,I really don't see the link of the two new crashes on Max / Linux : ; - optiTrack : with a crash from a libc++abi; ```; libc++abi.dylib: terminating with uncaught exception of type boost::exception_detail::clone_impl; ```; - a CPU scene with beams in SofaCUDA plugin with a strange timeout (that I can't reproduce locally). Does anyone has a clue?; [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/658#issuecomment-390139788:282,timeout,timeout,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/658#issuecomment-390139788,1,['timeout'],['timeout']
Safety,"I see what you want to do and of course it would be much more faster and simpler to add a new feature.; But I'm very relunctant to add an extra flag if it is redundant with others. . I would prefer to see a solution based on refactoring isRequired(), possibly with an hasDefaultValue() so we come up with a consistant and clear behavior. . EDIT:; My current thinking is thus:; - set isRequired() to true by default; - add an hasDefaultValue() (possibly implemented by using std::optional<> around Data::defaultvalue)); - change the code in BaseObject::init(); ```cpp; for(auto data: this->m_vecData); {; if (data->isRequired() && !data->isSet()); {; msg_error() << ""Required data \"""" << data->getName() << ""\"" has not been set. (Current value is "" << data->getValueString() << "")"" ;; }; }; ```; So it only warn if required and there is no default value. ; Update the GUI's so it can handle the isRequired + hasDefaultValue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762259707:158,redund,redundant,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762259707,1,['redund'],['redundant']
Safety,I see.. risky then.. @alxbilger,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1644595776:8,risk,risky,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1644595776,1,['risk'],['risky']
Safety,"I suggest using the memory sensitization tools provided by GCC or Clang - it is less hassle than valgrind. It also provides more detail regarding memory leaks. To do this, build Sofa with the additional flag: `cmake .. -DCMAKE_CXX_FLAGS=""${CMAKE_CXX_FLAGS} -fsanitize=address""`. Here is the output when running the example (CPP) scene provided by @ScheiklP. The 15 object(s) that are detected are come from the number of unloads performed (I decreased it to 15 from the original 1000 used in the scene by @ScheiklP). ```; =================================================================; ==445057==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 480 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d4160 in sofa::core::collision::TDetectionOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >* sofa::core::collision::BaseIntersector::createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:384,detect,detected,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,['detect'],['detected']
Safety,"I think constructors in fixed_array, Vec and Mat passed their arguments by value. Perfect forwarding avoids this copy. Also, constructors of base classes are called instead of re-defining a similar constructor. # Before. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typemat3x3f_construct/128 1.09 us 1.10 us 640000; BM_Matrix_typemat3x3f_construct/256 2.20 us 2.20 us 320000; BM_Matrix_typemat3x3f_construct/512 4.40 us 4.39 us 160000; BM_Matrix_eigenmat33_construct/128 0.270 us 0.270 us 2488889; BM_Matrix_eigenmat33_construct/256 0.509 us 0.500 us 1000000; BM_Matrix_eigenmat33_construct/512 0.996 us 0.977 us 640000; ```. # After. ```; -------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------------; BM_Matrix_typemat3x3f_construct/128 0.324 us 0.328 us 2240000; BM_Matrix_typemat3x3f_construct/256 0.627 us 0.628 us 1120000; BM_Matrix_typemat3x3f_construct/512 1.26 us 1.26 us 560000; BM_Matrix_typemat3x3f_construct_noinit/128 0.323 us 0.321 us 2240000; BM_Matrix_typemat3x3f_construct_noinit/256 0.638 us 0.628 us 1120000; BM_Matrix_typemat3x3f_construct_noinit/512 1.28 us 1.28 us 560000; BM_Matrix_eigenmat33_construct/128 0.255 us 0.256 us 2986667; BM_Matrix_eigenmat33_construct/256 0.502 us 0.500 us 1000000; BM_Matrix_eigenmat33_construct/512 0.993 us 1.00 us 746667; ```. Now the construction of a 3x3 matrix is 3x faster and close to the construction of a 3x3 matrix with Eigen. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2450:101,avoid,avoids,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2450,1,['avoid'],['avoids']
Safety,"I was thinking that the ""not merging is own PR rules"" is to avoid having people merging things that have not been reviewed and received merge approval. . If the PR was agree to be merged (as was 255) and the merge order was defined (as we did during last meeting) I see no problem to merge his own PR because in this scenario, merging is just a matter of [ci-building] and clicking on the merge button. Who-ever is available to do is welcome to allow the more smooth & continuous merging of the different PR between two meeting. . But maybe there is other consequence I didn't noticed, if so could you elaborate ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/261#issuecomment-302723181:60,avoid,avoid,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/261#issuecomment-302723181,1,['avoid'],['avoid']
Safety,"I was wondering how such a mistake was not detected before. Actually, `AddFramePerformer` is not compiled. Do you use it @maddin200 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1967#issuecomment-811788333:43,detect,detected,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1967#issuecomment-811788333,1,['detect'],['detected']
Safety,"I would vote for yes too. This has been discussed for a long time now. Online documentation is already updated to ""use your own Boost"".; Cleaning as much as possible Boost dependencies that are redundant with C++11 features is another topic in my opinion.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/33#issuecomment-258135230:194,redund,redundant,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/33#issuecomment-258135230,1,['redund'],['redundant']
Safety,"I'm looking for the ""-"" in the read to detect the intervals syntax:; 0-5 or 0-10-2 as well as --5-5 or 10--10. This intervals syntax using '-' was not of my own and I'm actually quite surprised and happy it was possible to fix the crash & endless loop that were in the code while preserving the syntax and backward compatibility. . Now all this discussion about performance rise my interest as I wonder if all this discussion have a measurable impact on performances. As usual I cannot prevent myself to make a small benchmark. ; The benchmark is implemented in the test class so that we will be able to detect performance regression in the future. . First there is a +200ms variation between the same run so I average several runs which gaves these numbers: ; strtoll alone tooks 1645 ms to ""read"" 1 000 000 time a size 10 array. ; strtoll+early check of '-' tooks 1654 ms to ""read"" 1 000 000 times the same array. ; ; strtoll alone tooks 7758 ms to ""read"" 100 000 time a size 1000 array. ; strtoll+early check of '-' tooks 7719 ms to ""read"" 100 000 times the same array. . strtoll alone tooks 8464 ms to ""read"" 1000 time a size 100 000 array. ; strtoll+early check of '-' tooks 8403 ms to ""read"" 10000 times the same array. . So we are discussing about un-measurable effect and I switched to your version because it contains less lines of code and looks simpler which is a very good property. . Is there still question about this PR? . EDIT: and the dashboard is now green on linux. @bcarrez please finish #267 :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302814828:39,detect,detect,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302814828,2,['detect'],['detect']
Safety,"I'm not sure we have an easy way to detect that a PyObject is really a BaseObject, the getLinkPath trick should go for a future PR. . I'm making the requested change to felix PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307402723:36,detect,detect,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307402723,1,['detect'],['detect']
Safety,"I've put this PR in wip to avoid overloading the CI while you integrate all the comments. Once you've finished all the review, you can change the tag back to to review and then trigger the CI with the usual comment.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4679#issuecomment-2083052979:27,avoid,avoid,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4679#issuecomment-2083052979,1,['avoid'],['avoid']
Safety,INFO MESSAGE: ; We are now updating the VS-2015 machine that are in charge of the the PRs. ; In case you detect any problem please report.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186#issuecomment-283613384:105,detect,detect,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186#issuecomment-283613384,1,['detect'],['detect']
Safety,"If I remember correctly, what I've seen in other projects is usually to put the check inside the `XXXConfig.cmake`. For example:. ```cmake; # CMakeLists.txt. find_package(SofaFramework REQUIRED) ; ```. ```cmake. # SofaFrameworkConfig.cmake; if (target SofaHelper); return(); endif(); ```. This way everyone (internal and external cmake projects) will get faster result, no matter if they use `find_package()` or `sofa_find_package()`. Edit: I guess it's the same as include guards. So I agree with @damienmarchal , it is probably faster since you avoid a search for `XXXConfig.cmake` or `FindXXX.cmake` files",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837#issuecomment-782103381:547,avoid,avoid,547,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837#issuecomment-782103381,1,['avoid'],['avoid']
Safety,"If I understood the issue correctly, so we want to avoid conflict of -a and -n for batch version. For this we can prioritize -a over -n in batch mode i.e. if -g and -a are encountered then override the default -n otherwise -n will suffice.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/552#issuecomment-367766173:51,avoid,avoid,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/552#issuecomment-367766173,1,['avoid'],['avoid']
Safety,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2135:277,detect,detection,277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135,3,['detect'],['detection']
Safety,"In #2777, a new API to assemble matrices was introduced. I used this new API to avoid the need to implement `addDForce` if `buildStiffnessMatrix` is already implemented. In other terms, it unifies the `addDForce` and `buildStiffnessMatrix` (previously it was `addKToMatrix`. Indeed, those two functions are very similar as they are related to the derivative of the force. This PR is a proof of concept that is not ready to be merged. Indeed, I noticed losses of performances. And I also would like to make sure with the CI that everything works perfectly. The concept is implemented only on force fields (not interactions), and only for stiffness (no damping), but I can be easily extended to damping and masses. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4010:80,avoid,avoid,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4010,1,['avoid'],['avoid']
Safety,"In MechanicalMatrixMapper, the fast matrix product relies on the fact that both sparse matrices do not change their structure.; If one of the matrices structure changes, the fast matrix product is no longer valid and leads to wrong results.; One case where the matrix structure changes is with topological changes. This is supported in MechanicalMatrixMapper because there is a check that the topology changed compared to the previous time step. In that case, the matrix intersections is invalidated and it triggers a new computation of the intersection.; Other cases are not supported. For example, @Camille-K experienced the issue: the mapping jacobian matrix structure changed because of a user interaction, moving a frame from a beam to another.; More generally, it could be profitable to have a generic mechanism detecting that a matrix structure changed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2687:818,detect,detecting,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2687,1,['detect'],['detecting']
Safety,"In SOFA, when a collision occurs between a pair of objects, some SOFA components are dynamically added into the scene graph. For example, if these two objects respectively carry 3 collision models (Point,Triangle,Line), you'll obtain 4 instances of UnilateralInteractionConstraint components (Point-Point, Point-Line, Point-Triangle, Triangle-Line, Line-Line). And the mechanical values such as the position of the contact points will be scattered in different MechanicalObjects which are maintained by contact mappers. This design raises a limitation of the contact handling in SOFA when using constraints: Adding a constraint on an individual contact point works without any problem. But when you want to apply a single constraint over a set of contact points, things become more complicated. For instance, imagine you want to apply a uniform pressure onto all the contact points as a single constraint (one Lagrange multipler). In this case you would like to have all these points into a single MechanicalObject, right? Unfortunately thoses are stored inside separated MechanicalObjects because you use several collision models... You can still manually use a SubsetMultiMapping to gather all the points into a single MechanicalObject, but this one will have to be regenerated at each time-step, which may be costly. Hence, I think it will be nice to have a clean way to gather some narrow-phase collision detection outputs, to overpass this limitation. For me, gathering contact points into a single MechanicalObject by default seems to be the right approach. In other words, some contact mappers could share a single MechanicalObject to ouputs the contact point data. What do you think about that?. Hope this comment will be considered at the next STC ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1262#issuecomment-598365408:1409,detect,detection,1409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1262#issuecomment-598365408,1,['detect'],['detection']
Safety,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2040:44,detect,detection,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040,3,['detect'],['detection']
Safety,"In `HexahedronFEMForceField<DataTypes>::draw`, the topology pointer is checked first before being used. It avoids a crash if the topology cannot be found in the initialization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2478:107,avoid,avoids,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2478,1,['avoid'],['avoids']
Safety,"In ```TriangularBendingSpring```:; - Remove all unused code; - Clean loops logic to exit/continue when possible. No major changes.; - Rename damping and stiffness Data to use prefix `d_`; - Add tests on Data setter to avoid negative values; - Document Header. Activate ```SofaGeneralDeformable_test``` by adding 8 tests in ```TriangularBendingSpring_test.cpp``` to test:; - Component creation with given values or default values; - Error catching if wrong Data values; - Error catching when creating without topology or with empty topology; - Init value on a single pair of triangles; - Simulated values on a grid scene; - Check update of the FEM while removing triangles. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2363:218,avoid,avoid,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2363,1,['avoid'],['avoid']
Safety,"In `modules/SofaMiscForceField/SofaMiscForceField_test/MeshMatrixMass_test.cpp`, the tests used `EXPECT_FLOAT_EQ`. It supposed that both values are of type `float`. In these tests, they are actually of type `SReal`, which is `double` by default. Hence, a type conversion from `double` to `float`. A macro detecting the type is introduced, and replaces `EXPECT_FLOAT_EQ`. Note that, line 1372, I had to change the test. The test with `EXPECT_FLOATINGPOINT_EQ` failed due to the higher precision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2714:305,detect,detecting,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2714,1,['detect'],['detecting']
Safety,"In addition to Alex's comment, a new flag could be created displaying the DetectionOuput to visualize contact points whether you are using Penalities or Langrangian",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3977#issuecomment-1621222004:74,Detect,DetectionOuput,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3977#issuecomment-1621222004,1,['Detect'],['DetectionOuput']
Safety,"In advanced mode, would it be possible to have a link per line to abort all the compilations (every configs/platforms)?. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/203:66,abort,abort,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/203,1,['abort'],['abort']
Safety,"In fact, we have to go down to the iterator protocol as some strings are initialized with proxies (e.g. `' '.join(...)`) and the Sequence protocol fails on getting the length/size. . The following conversion code passes all python tests in Compliant:. ```c++; static std::string convert_string(PyObject* object) {; if( PyString_Check(object) ) {; // strings will be strings; return PyString_AsString(object);; }. if( PyIter_Check(object) ) {; // TODO we should throw and abort createObject in case of error; std::stringstream ss;; bool first = true;. PyObject *iterator = PyObject_GetIter(object);; if(!iterator) {; msg_error(""createObject"") << ""error while creating iterator"";; }; ; while(PyObject* next = PyIter_Next(iterator)) {; if(first) first = false;; else ss << ' ';. ss << convert_string(next);; Py_DECREF(next);; }. Py_DECREF(iterator);; ; if (PyErr_Occurred()) {; msg_error(""createObject"") << ""error while iterating"";; }; ; return ss.str();; }. // link path conversion for baseobjects; if( PyObject_IsInstance(object, (PyObject*) &SP_SOFAPYTYPEOBJECT(BaseObject)) ) {; const std::string path_name = (((PySPtr<Base>*) object)->object->toBaseObject()->getPathName());; return '@' + path_name;; }. // fallback to python string conversion; return PyString_AsString(PyObject_Str(object));; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307438921:471,abort,abort,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307438921,1,['abort'],['abort']
Safety,"In issue #746 is reported a bug when trying trying to simulate; scenes while the underlying topology is containing empty data set. I narrowed the problem to be in LocalMinDistance::computeIntersection.; In this function we access the trianglesAroundVertex from a MeshTopology. with code like that:; ```cpp; if (m_edgesInTetrahedron.empty() || i > m_edgesInTetrahedron.size()-1); createEdgesInTetrahedronArray();; return m_edgesInTetrahedron[i];; ```. While if there is not ""nothing"" to create because there is no edges/triangles; it access in there is still a return of m_edgesInTetrahedron[i] with indice = 0. To avoid that I change the code for:; ```cpp; const MeshTopology::EdgesInTetrahedron& MeshTopology::getEdgesInTetrahedron(TetraID i); {; if (m_edgesInTetrahedron.empty() || i > m_edgesInTetrahedron.size()-1); createEdgesInTetrahedronArray();. if (i < m_edgesInTetrahedron.size()); return m_edgesInTetrahedron[i];. return InvalidEdgesInTetrahedron;; }; ```. So if there is nothing created we returns a valid object indicating either an; empty or one filled with invalid values. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/977:614,avoid,avoid,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/977,1,['avoid'],['avoid']
Safety,"In removing the gravity in root node on caduceus.scn scene and then pressing button ""Reset Scene"" the snake disappears and computations falls down in infinite circle with message:. [WARNING] [MinProximityIntersection(Proximity)] WARNING: null distance between contact detected. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/571:268,detect,detected,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/571,1,['detect'],['detected']
Safety,"In the DEFROST team we need our constraints to provide the computed forces as outputs. These forces are now provided to the constraints using the method `storeLambda()`. . Our constraints node usually looks like this: ; ```; cavity = accordion.createChild('cavity'); cavity.createObject('MechanicalObject'); cavity.createObject('SurfacePressureConstraint'); cavity.createObject('BarycentricMapping', name='mapping', mapForces=False, mapMasses=False); ``` ; As no forces have to be mapped, we set `mapForces=False` to avoid unnecessary computations. Yet in the current code, this disables the call to `storeLambda()`. . This PR changes this behavior by overriding the method `stopAtMechanicalMapping()` of `ConstraintStoreLambdaVisitor`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/854:517,avoid,avoid,517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/854,1,['avoid'],['avoid']
Safety,"In the caduceus scene, the collision detection and the free motion can be computed in parallel. Here are the timings for 1000 time steps on my computer:. # Before. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 1.43 8.29 2.27 0.44 2266.53 100 TOTAL; 1 0 1 1.43 8.27 2.27 0.44 2.27 99.95 .Simulation::animate; 2 0.06 1 1.05 6.97 1.28 0.22 1.28 56.46 ..FreeMotion+CollisionDetection. ```; [INFO] [BatchGUI] 1000 iterations done in 2.57462 s ( 388.407 FPS). # After. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 1.21 7.79 1.95 0.39 1948.88 100 TOTAL; 1 0 1 1.21 7.78 1.95 0.39 1.95 99.95 .Simulation::animate; 2 0.06 1 0.80 6.66 0.99 0.21 0.99 50.72 ..FreeMotion+CollisionDetection. ```; [INFO] [BatchGUI] 1000 iterations done in 2.24415 s ( 445.602 FPS). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2471:37,detect,detection,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2471,1,['detect'],['detection']
Safety,"In this PR:. - Added static class member `Visitor::runVisitorTask`; - Used `Visitor::runVisitorTask` in BaseMechanicalVisitor to replace all the boilerplate code; - Simplify the logic in `BaseMechanicalVisitor::processNodeTopDown` even though I have some concerns; - `Visitor::for_each` is now static; - `Visitor::for_each` accepts an optional string parameter giving the type of visitor ""fwd"" or ""bwd""; - `Visitor::for_each_r` is removed in favour of an overload of `Visitor::for_each`; - SOFA_VERBOSE_TRAVERSAL surrounds the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2125:770,detect,detect,770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125,1,['detect'],['detect']
Safety,"In this PR:; - add some pairwise algorithms on fixed_array<> instead of Vec<> so here is an implementation. To avoid adding to the fixed_array.h I use the stl approach of putting that in a separated ""algorithm.h"" file. ; - I then use these to implement an enlightening function in RGBAColor with its unittest. The uses of these will be done in a future PR. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1172:111,avoid,avoid,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1172,1,['avoid'],['avoid']
Safety,"Indeed, @m4n4n could you try to refactor your code to avoid this big duplication?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378611844:54,avoid,avoid,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378611844,1,['avoid'],['avoid']
Safety,"Initially I wanted to fix issue #673 that prevents compilation with gcc > 8.1. But I was not able to prevent myself to refactore the class in the process. . CHANGELOG:; - Move the implementation from .h to .inl; - Move the definition of the inner class FCPHandler from the .h to .inl; - Group the class member according their visibility (public, protected, private) to avoid interleaving.; - Uniformize the source code comments; - Rename the class members (attributes) to make them consistent with the sofa coding style.; - Factorize the code that was ""duplicated"" in the .cpp between rigid3dtype, rigid3ftype, vec3d, vec3f (I welcome an alternative implementation). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/803:369,avoid,avoid,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/803,1,['avoid'],['avoid']
Safety,"Instead of suggesting to add the required plugins in the XML syntax, the goal is to use the scene loader to adapt the syntax to the type of file. For example, in Python, the message will be:. ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene: ; root.addObject('RequiredPlugin', name='Sofa.Component.AnimationLoop') # Needed to use components [FreeMotionAnimationLoop] ; root.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Algorithm') # Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,BruteForceDetection,CollisionPipeline] ; root.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Intersection') # Needed to use components [LocalMinDistance] ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3799:732,Detect,Detection,732,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3799,2,['Detect'],['Detection']
Safety,Is the examples automatically started during CI tests ? ; If not please consider adding a dedicated test (even one loading the examples file) because we don't want to be forced to run manually all the examples scenes to detect possible regressions.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/411#issuecomment-335828643:220,detect,detect,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/411#issuecomment-335828643,1,['detect'],['detect']
Safety,Is this PR redundant with #96 ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/92#issuecomment-265799171:11,redund,redundant,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/92#issuecomment-265799171,1,['redund'],['redundant']
Safety,"Issue detected by @quentinfrancois0. This comes from a change in the Python configuration since the last High Sierra.; The line #include <Python/Python.h> involved a link ""Python"" to the python include, but this is no longer valid in High Sierra. This was causing a fail in the compilation (include not found). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/614:6,detect,detected,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/614,1,['detect'],['detected']
Safety,"It avoids a crash if the matrix is not positive definite. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3706:3,avoid,avoids,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3706,1,['avoid'],['avoids']
Safety,"It avoids a crash in the destructor when `m_handler` has not been affected. And pointers must be initialized anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4712:3,avoid,avoids,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4712,1,['avoid'],['avoids']
Safety,"It avoids crashes when animate after initialization in a Node where no topology is found. See unit test that I also modified. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3690:3,avoid,avoids,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3690,1,['avoid'],['avoids']
Safety,"It is here if you need it -> https://github.com/jnbrunet/caribou/blob/master/src/SofaCaribou/Ode/StaticODESolver.cpp; ; Watch out: there is one part that detects if a caribou CG solver is used, it which case it will output some information on this linear solver at each step. You will have to remove this if you want to bring it into SOFA's core.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/224#issuecomment-774089780:154,detect,detects,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/224#issuecomment-774089780,1,['detect'],['detects']
Safety,"It seems a mechanical object must be associated to the `RigidDistanceGridCollisionModel` to avoid the crash. In the scene `DistanceGridCollisionModel.scn`, the Node `RigidLiver` is transformed from. ```xml; <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ```. to:. ```xml; <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <MechanicalObject template=""Rigid3"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ```. Let me know if it works in your own simulation. I don't know enough this part of the code to fix it so it works with or without MechanicalObject. At least it should warn the user that it cannot work.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1354430876:92,avoid,avoid,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1354430876,1,['avoid'],['avoid']
Safety,"It seems msvc is quite (much!) less clever than gcc. 2 optimizations (only useful when not building in Release mode); - add and use a NOINIT RigidDeriv constructor (avoiding to init a deriv which is filled afterwards); - default ctor directly call the identity of its components (which is their default ctor by the way). and 1 ridiculous optimization; - avoid calling getPositionIntegrationFactor() in the nested loop; ; This optimization brings a whooping 30% speedup on my setup (VC2022, Release/LTO enabled); Test scene: 3instruments_collis.scn from BeamAdapter, 2000 iterations in batch mode; - before: 16.5669 s ( 120.723 FPS); - after: 12.829 s ( 155.897 FPS). GCC was doing the same by the way with or without these optims (and is faster than msvc, even in a VM 🤔). NOTE: do not forget to enable the LTO option for Windows when deploying, it brings full inlining & stuff and it is really useful for perf; (w/o LTO, before the optims it is 21.9883 s ( 90.9575 FPS) ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3135:165,avoid,avoiding,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3135,2,['avoid'],"['avoid', 'avoiding']"
Safety,It should actually be the current behavior. I reverted my change in label detection.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-988657918:74,detect,detection,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-988657918,1,['detect'],['detection']
Safety,It took me time but I think I finally got the working of the collision responses stuff. As this PR change the way the component behave do you think it is possible to detect when a scene is using the old-style to print a warning message telling the users to update their scene ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/91#issuecomment-265487181:166,detect,detect,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/91#issuecomment-265487181,1,['detect'],['detect']
Safety,Jenkins has a timeout feature to abort too long builds. This feature is enabled on all our jobs.; The question is why are these builds not aborted by Jenkins?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289724266:14,timeout,timeout,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289724266,3,"['abort', 'timeout']","['abort', 'aborted', 'timeout']"
Safety,"Just a bit of explanation:; -> fetching matrices using glGetFloatv(GL_{MODELVIEW/PROJECTION}_MATRIX is really, really old-style OpenGL and should be avoided. That's why one should use the stored matrices in visualParams. ; In this case, the matrices were not updated during the 2nd viewport rendering ; code using glGetMatrix() was fine but code using things stored in visualparams was not.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1500#issuecomment-700519121:149,avoid,avoided,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1500#issuecomment-700519121,1,['avoid'],['avoided']
Safety,"Just to add a little bit to this, I remember having seg fault due to this mask while doing topological changes. I just looked very quickly to the mask source code, maybe the mask vector doesn't scale with the dof state when changes occurs?. In any way, keeping a mask vector activated and used automatically while it was not asked explicitly by the user doesn't seem to be very safe. Or maybe I'm missing something.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/532#issuecomment-347520800:378,safe,safe,378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/532#issuecomment-347520800,1,['safe'],['safe']
Safety,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2187:251,detect,detections,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187,1,['detect'],['detections']
Safety,LGTM but the new example `FillReducingOrdering.scn` crashes (timeout) on all platforms :cry:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2501#issuecomment-988018632:61,timeout,timeout,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2501#issuecomment-988018632,1,['timeout'],['timeout']
Safety,"Last big one. #1527 . based on:; - #2790 . and needs :; - #2766 . Deprecates **_SofaBaseCollision_**, **_SofaMeshCollision_**, **_SofaGeneralMeshCollision_**, **_SofaObjectInteraction_**; Deprecates partially **_SofaConstraint_**, **_SofaUserInteraction_**. Split Collision-related components into 3 categories:; - ~~**Model**~~ **Geometry**: with all the collision models (sphere model, point model, triangle model....); - **Detection**: subdivided in 2 other categories: ; - **Algorithm**: narrow, broad phases implementation; - **Intersection**: how to compute intersections between models; - **Response**: subdivided in 2 other categories: ; - **Mapper**: how to map a contact between 2 objects (rigid, bary, etc); - **Contact**: how to handle a contact itself (create spring, constraint, etc). EDIT:; ~~[ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/239 ]~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2813:426,Detect,Detection,426,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2813,1,['Detect'],['Detection']
Safety,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2229:205,detect,detected,205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229,1,['detect'],['detected']
Safety,"Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Component.LinearSystem; Sofa.Component.Mapping.Linear; Sofa.Component.Mass; Sofa.Component.ODESolver.Backward; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.StateContainer; Sofa.Component.Topology.Container.Constant; Sofa.Component.Topology.Container.Grid; Sofa.Component.Visual; Sofa.GL.Component.Rendering3D; Sofa.GL.Component.Shader; Sofa.Simulation.Core; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:3335,Detect,Detection,3335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Detect'],['Detection']
Safety,"Looking at the source code I just find a good example. . It is from https://github.com/sofa-framework/sofa/blob/8410f29a80093f44fb0b224c91867bb7f65ee328/modules/SofaGeneralTopology/SofaGeneralTopology_test/SphereGridTopology_test.cpp; In the SphereGridCreation test. Erik wanted to test both valid and invalid code path, and he is right to do so,...but as Sofa has no way to report error to the caller's he cannot detect that (I assume this is probably what he wanted to test and why he commented out line); ```cpp; // EXPECT_EQ(sphereGrid2, nullptr);; ```. With explicit message specification improve the situation as he can now write things like that:; ```cpp; bool SphereGridTopology_test::SphereGridCreation(); {; // Creating a good Grid; {; //// This is valid code so a warning or an error is probably a regression leading to test failure; ; WarningAndErrorAsTestFailure err(SOURCE_LOCATION) ;. SphereGridTopology::SPtr sphereGrid = sofa::core::objectmodel::New<SphereGridTopology>(5, 5, 5);; EXPECT_NE(sphereGrid, nullptr);; EXPECT_EQ(sphereGrid->d_radius.getValue(), 1.0);; }. // Creating a bad Grid; {; /// must send warn a warning message to the caller indicating something goes wrong; /// mustn't send an error ; ErrorAsTestFailure err(SOURCE_LOCATION) ;; ExpectWarning warn(SOURCE_LOCATION) ;. SphereGridTopology::SPtr sphereGrid2 = sofa::core::objectmodel::New<SphereGridTopology>(-1, 0, 1);; }. return true;; }. EDIT: It just appear to me that the message rising failures are very similar in EXPECT_ /ASSERT things from gtest...nothing more, nothing less ...and similarly to EXPECT_ they are very verbose because it is what tests do :) ; Maybe I should make a macro to emphasize the similarities and showing this is part of the test framework ? ; ```cpp; EXPECT_MESSAGE( Error ) ;; EXPECT_MESSAGE( Warning ) ;; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288670168:414,detect,detect,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288670168,1,['detect'],['detect']
Safety,"Lots of code needs normalized vectors. ; Consequently a lot of functions normalize potentially already normalized vector (thus could be avoided). Potential solutions:; - a boolean in Vec.h ?; - a new type Norm(alized)Vector, which guarantees the vector is always normalized; - ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2700:136,avoid,avoided,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2700,1,['avoid'],['avoided']
Safety,"MForceField and behaves on the surface as TriangularBendingSprings i.e. as the Glisson capsule.; be able to apply 3 generic forces: 1 compression 1 traction 1 cut binding the entire posterior part of the liver. ```python; import Sofa; import numpy as np; from scipy import sparse; from scipy import linalg; import numpy as np; from matplotlib import pyplot as plt. USE_GUI = True; exportCSV = True; showImage = False. def main():; import SofaRuntime; import Sofa.Gui. root = Sofa.Core.Node(""root""); createScene(root); Sofa.Simulation.init(root). if not USE_GUI:; for iteration in range(10):; Sofa.Simulation.animate(root, root.dt.value); else:; Sofa.Gui.GUIManager.Init(""myscene"", ""qglviewer""); Sofa.Gui.GUIManager.createGUI(root, __file__); Sofa.Gui.GUIManager.SetDimension(1080, 1080); Sofa.Gui.GUIManager.MainLoop(root); Sofa.Gui.GUIManager.closeGUI(). def createScene(root):; root.gravity=[0, -9.81, 0]; root.dt=0.02. root.addObject(""RequiredPlugin"", pluginName=[; 'Sofa.Component.Collision.Detection.Algorithm',; 'Sofa.Component.Collision.Detection.Intersection',; 'Sofa.Component.Collision.Geometry',; 'Sofa.Component.Collision.Response.Contact',; 'Sofa.Component.Constraint.Projective',; 'Sofa.Component.IO.Mesh',; 'Sofa.Component.LinearSolver.Iterative',; 'Sofa.Component.Mapping.Linear',; 'Sofa.Component.Mass',; 'Sofa.Component.ODESolver.Backward',; 'Sofa.Component.SolidMechanics.FEM.Elastic',; 'Sofa.Component.StateContainer',; 'Sofa.Component.Topology.Container.Dynamic',; 'Sofa.Component.Visual',; 'Sofa.GL.Component.Rendering3D',; 'Sofa.Component.SolidMechanics.Spring',; 'Sofa.Component.MechanicalLoad',; 'Sofa.Component.Topology.Container.Constant'; ]). root.addObject('DefaultAnimationLoop'). root.addObject('VisualStyle', displayFlags=""showCollisionModels""); root.addObject('CollisionPipeline', name=""CollisionPipeline""); root.addObject('BruteForceBroadPhase', name=""BroadPhase""); root.addObject('BVHNarrowPhase', name=""NarrowPhase""); root.addObject('DefaultContactManager', name=""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4861:1896,Detect,Detection,1896,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4861,1,['Detect'],['Detection']
Safety,"MacOS CI stalled for some reason. But the CI passed just before and the subsequent changes were minimal, so it should be safe to merge.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1649#issuecomment-755389883:121,safe,safe,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1649#issuecomment-755389883,1,['safe'],['safe']
Safety,"Make problemId counter id atomic for thread-safety. An other (better) solution could be to use local thread storage maybe ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4581:44,safe,safety,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4581,1,['safe'],['safety']
Safety,Maybe we should add in the object factory a way to detect the use of Vec3f and warn user that it needs to update its scene to use Vec3 instead. So we can start simplifying the code base ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/495#issuecomment-440306342:51,detect,detect,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/495#issuecomment-440306342,1,['detect'],['detect']
Safety,MechanicalMatrixMapper fast matrix product does not detect changes in the jacobian matrix,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2687:52,detect,detect,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2687,1,['detect'],['detect']
Safety,Method doCarve in CarcingManager should be called at AnimateEndEvent and not at CollisionEndEvent to avoid any topology synchronization error during step. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1532:101,avoid,avoid,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1532,1,['avoid'],['avoid']
Safety,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1926:90,avoid,avoid,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926,2,['avoid'],['avoid']
Safety,"Minor refactoring to simplify the reading (it avoids the call to many `for` loops), and to match https://github.com/sofa-framework/sofa/pull/3981. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3983:46,avoid,avoids,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3983,1,['avoid'],['avoids']
Safety,"Minor remaining change use pre processor #if condition instead of #ifdef (since it allows to detect more various cases: is defined and true, defined and false or undefined); CGAL : remove changes and integrate changes from #1308; → back to wip",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1281#issuecomment-607121544:93,detect,detect,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1281#issuecomment-607121544,1,['detect'],['detect']
Safety,"Move FEM. Follows. - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ![image](https://user-images.githubusercontent.com/10572752/219430901-2dfd90df-c077-4570-bb7a-6103cc148e47.png). I did not touch TLED files to avoid conflicts with another PR. They will be moved later.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3660:266,avoid,avoid,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3660,1,['avoid'],['avoid']
Safety,"Move THMPGSpatialHashing and its history to its own repository : https://github.com/sofa-framework/THMPGSpatialHashing . the configure script on the CI has already been updated. It has its own CI too (and releaases). (#1527 , #1442). It just introduces one new component, THMPGSpatialHashing which is a colllision pipeline (i.e implements broad and narrow phases detection). ; After some tests it is slower than the standard bvh one, so it does not seem really important to maintain IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2609:363,detect,detection,363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2609,1,['detect'],['detection']
Safety,Move the C++ alias in the old header (with the include of the new .h before). Doc for lifecycle: https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/#renaming-a-component. Maybe thinking about adding a API in ComponentChange.cpp for `Renamed` component (avoiding to add an alias manually in the class),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4302#issuecomment-1822478147:289,avoid,avoiding,289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4302#issuecomment-1822478147,1,['avoid'],['avoiding']
Safety,"My 2 cents...; Eulalie is right, there is no 'formal' ambiguity as by just following the vector<> symbol the code editor jump to the 'using sofa::helper'. ; Guillaume is right in the fact that allowing using std::vector and using sofa::helper::vector in our code base it will generate a lot of ambiguity. . May I suggest two strategy: ; 1) 'using sofa::*' as much as you want unless it hides somethings from the stl. ; 2) 'using sofa::*' even for sofa::helper::vector etc. After all we are in sofa so it makes sense to get rid of as much as of the sofa::prefix for code simplicity. To avoid ambiguities, forbid the employement of using on external type eg no 'using std::vector' or 'using std::string'. . Strategy 2 would produce a very consistent and readable code making it obvious we we are using external object or lib;. EDIT: I forgot to say: :+1: Eulalie for the bugtracking, the fixing, cleaning and PRing",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/567#issuecomment-358766000:585,avoid,avoid,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/567#issuecomment-358766000,1,['avoid'],['avoid']
Safety,"My checklist:; - tests coverage (none, low, good); - have at least one working example (yes, no); - is validated in the Igor's sense (if yes provide a link to the validation references); - is thread safe according a given thread safe design provided by the Multi-thread WG. ; - sofa code guidelines violation (none, a few, a lot) . I suggest this checklist to be part of the component as a kind of meta-data in the factory.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/228#issuecomment-291091132:199,safe,safe,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/228#issuecomment-291091132,2,['safe'],['safe']
Safety,"My point is that the discussion is not whether or not a PR can be breaking or not...because on that everyone agrees...the conclusion is that of course a PR can be breaking.; ; The real discussion is more on:; - how do we manage breaking change to avoid messing others code base and activity because of a sudden change. On that, please have a look at PR #329 ; - what kind of integration & merge flow we can have to facilitate merging of complex/changing PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/318#issuecomment-315894097:247,avoid,avoid,247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/318#issuecomment-315894097,1,['avoid'],['avoid']
Safety,"NONE). You can add an execption and a custom message with PyErr_SetString(...) but you don't need to do that when the failure is because of PyArg_ParseTuple...as it set the message itself so that it is standardized. . So, it should be like that: ; ```cpp; if(!PyArg_ParseTuple(args, ""sO"", &id, &tempNode)); return NULL;; ```; Instead of:; ```cpp; if(!PyArg_ParseTuple(args, ""sO"", &id, &tempNode)); {; PyErr_BadArgument();; Py_RETURN_NONE;; }; ```. - You are commenting the python binding code using doxygen, thank you very much for that ! As these are python functions it would be great if you could also provide python docstrings (as this is the python standard of documenting code). You are using the SP_MODULE_METHOD macro which have and empty docstring by default... sofa is missing a macro one to specify the docstring (it exists for SP_CLASS_METHOD_DOC). So to document you functions you first need to add a new macro close to SP_MODULE_METHOD with:; ```cpp; #define SP_MODULE_METHOD_DOC(MODULENAME,M, D) {#M, MODULENAME##_##M, METH_VARARGS, D},; ```; Then you can document the python code in a way similar to when using ""SP_CLASS_METHOD_DOC"". . - the externals libraries should be in the repository extlibs/* so sofa/helper/json.hpp should be moved there. - I have no opinion whether the JSON output should be activated only when the json.hpp is found or if we should systematically ship this lib with sofa. @hugtalbot probably have better opinion on these aspects as this have connection with the Licensing aspects. - For code coherency I think that we should avoid using ""weird"" namespaces in the sofa code base (eg: 'nlohmann::json') so that I suggest you to add a sofa/helper/json.hpp file with something more or less like that:; ```cpp; #include ""extlibs/json/json.hpp""; namespace sofa{; namespace helper{; using nlohmann::json ; ; }; }; ```; Would be nice as codes that want to use it will have to do it this way: ; ```cpp; #include ""sofa/helper/json.hpp""; using sofa::helper::json ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-322555885:2058,avoid,avoid,2058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-322555885,1,['avoid'],['avoid']
Safety,"Needed by #459 ; @fjourdes I let you add informations in the comments 😉 . ## issofa_constraintsolving. ### New features; - Add correctionVelocityFactor and correctionPositionFactor Data in UncoupledConstraintCorrection to experiment with modulating the constraint response influence on visual tool positions.; - Add more detail in timing of GenericConstraintSolver. ### Improvements; - Constraint problem locking extended to be safer (but not yet completely safe) when using multiple forcefeedback devices.; - GenericConstraintCorrection: automatically search LinearSolver from context when solverName is not specified (same behavior as LinearSolverConstraintCorrection).; - Factorize the computation of the compliance matrix and virtualize the computation of dx.; - Improve UncoupledConstraintCorrection compliance computation. Use the same factors for the compliance matrix computation and the correction computation as the one used in LinearSolverConstraintCorrection. ### Cleans; - Clean and Optimize UncoupledConstraintCorrection, factorize code between rigids and vecs, optimize addComplianceInConstraintSpace significantly for large number of constraints.; - Move new constraint accumulation visitors from GenericConstraintSolver.h to MechanicalVisitor.h so that they can be used by other solvers.; - Code refactoring in GenericConstraintCorrection. ### Bugfixes; - Fix FreeMotionAnimationLoop allocates the freeposition / freevelocity as first thing in the time step.; - Fix Haptic mode with haptic influence from constraints applied on all frames. It was not working well on the simulation side.; - Add a correction velocity factor and correction position factor as data in UncoupledConstraintCorrection.; - Fix, the GenericConstraintSolver was not providing the correct number of interations for profiler stats.; - GenericConstraintCorrection's ODESolver is now searched locally.; - Fix the Local Jacobian Matrix. It was not resized when no more constraints were applied on a MechanicalState",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/484:428,safe,safer,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/484,2,['safe'],"['safe', 'safer']"
Safety,New flag to display the DetectionOuput,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4008:24,Detect,DetectionOuput,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4008,1,['Detect'],['DetectionOuput']
Safety,Nice that fwd declarating BoundingBox is now possible (in the past is was causing compilation issues with visuals). Please centralize all the foward declarations in /sofa/type/fwd.h to keep track of each of them and avoid forward declaration duplicated everywhere in the codebasE.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2728#issuecomment-1049742930:216,avoid,avoid,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2728#issuecomment-1049742930,1,['avoid'],['avoid']
Safety,"No problem, I'll do my best to rebase my fixes here in a PR. As for the buffer overflow, it's definitely not a serious one (read-only, static size) but it aborts execution when compiled with address sanitizer, which prevents further bug discovery. Another show-stopper in SofaCUDA, `CudaBarycentricMappingRigid.cpp:50`, ODR violation:. ```; ==13885==ERROR: AddressSanitizer: odr-violation (0x7f474c739640):; [1] size=4 'class_BarycentricMappingRigid' ../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaBarycentricMappingRigid.cpp:47:1; [2] size=4 'class_BarycentricMappingRigid' ../modules/SofaMiscMapping/BarycentricMappingRigid.cpp:42:18; ```. Fix is simple: remove the `SOFA_DECL` as it's defined already somewhere else. After that, it's a world of memleaks! ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-347130851:155,abort,aborts,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-347130851,1,['abort'],['aborts']
Safety,Nobody (in the sofa code base) was including this deprecated file (which is a not bad news by itself).; But I encountered some old plugins (implementing new Qt Widgets) including this file (thats why I could detect this problem),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2044#issuecomment-828795940:208,detect,detect,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044#issuecomment-828795940,1,['detect'],['detect']
Safety,"Not sure it solves any problem and it might degrade performances. A full refactoring of AdvancedTimer should be the objective to make it simple, thread-safe and shiny!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688:152,safe,safe,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688,1,['safe'],['safe']
Safety,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:360,Detect,Detection,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,['Detect'],['Detection']
Safety,"Not sure to understand. Shall we safely remove this custom macro (ONE **and** TWO versions) or do we want to keep it for a transitional period?; If we keep it, I have to redo my commit.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370811681:33,safe,safely,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370811681,1,['safe'],['safely']
Safety,"Nothing to add except that after few test my conclusion is that Include-what-you-use is ok but can only detect includes that are not needed. Thus an include needed because of an single inline method in a .h will not be detected as not-needed. . On my side I'm using the -H options of g++ to prints all the includes loaded when compiling a .cpp then I use a small python script to generate an html page out of that to navigate from includes to includes. Because I lack of time it is as-is, ; https://github.com/damienmarchal/snippets/blob/master/include-analyzer.py",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527#issuecomment-706382858:104,detect,detect,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527#issuecomment-706382858,2,['detect'],"['detect', 'detected']"
Safety,"Nothing wrong as long as the main executable references at least one symbol from each of the dlls everything should be fine. . Really the right way to do it would be to have all library initialization behind a nifty counter like this:. `initComponentGeneral.h`:. ```c++. static struct SOFA_COMPONENT_GENERAL_API SofaComponentGeneral {; SofaComponentGeneral();; ~SofaComponentGeneral();; } SofaComponentGeneral;. ```. `initComponentGeneral.cpp`:. ```c++; static int nifty;. SofaComponentGeneral::SofaComponentGeneral() {; if(nifty++ == 0) {; // init goes here; std::clog << ""SofaComponentGeneral init"" << std::endl;; }; }. SofaComponentGeneral::~SofaComponentGeneral() {; if(--nifty == 0) {; // cleanup goes here; std::clog << ""SofaComponentGeneral cleanup"" << std::endl; ; }; }; ```. It has roughly the same code size compared to existing `init/isInitialized/cleanup/isCleanedUp`, is fully automatic as long as the header is included from the main executable, and initializes/finalizes safely.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280666784:986,safe,safely,986,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280666784,1,['safe'],['safely']
Safety,"Now ready to review. A complete re-factoring of the console helper has been done to improves the efficiency of the console output formatting. It also adds style features to supported; OS terminals. On Windows, both ainsi and native terminals are now supported and automatically detected.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642#issuecomment-400040986:278,detect,detected,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642#issuecomment-400040986,1,['detect'],['detected']
Safety,"Now the URL is generated automatically based on the namespace and class name. And interestingly, the website is able to find the right page even if the URL is not exact. For example:. - https://www.sofa-framework.org/community/doc/components/animationloop/freemotionanimationloop is converted automatically to https://www.sofa-framework.org/community/doc/components/animationloops/freemotionanimationloop/; - https://www.sofa-framework.org/community/doc/components/collision/detection/algorithm/bruteforcebroadphase -> https://www.sofa-framework.org/community/doc/components/collisions/broadphases/bruteforcebroadphase/; - https://www.sofa-framework.org/community/doc/components/collision/detection/intersection/minproximityintersection -> https://www.sofa-framework.org/community/doc/components/collisions/intersectiondetections/minproximityintersection/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4650#issuecomment-2061455964:475,detect,detection,475,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4650#issuecomment-2061455964,2,['detect'],['detection']
Safety,"Oh and here's a minimal scene to test the new feature:. ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=0.5,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""); #############; # Cutting Sphere; #############; cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.add",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251:209,Detect,Detection,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251,2,['Detect'],['Detection']
Safety,"Ok I'm gonna fix that, I'll also fix the missing timeout command on the mac_pr3 VM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357278111:49,timeout,timeout,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357278111,1,['timeout'],['timeout']
Safety,Ok found it: the scene-tests are not performing in default mode (100 iterations with a timeout of 60s for a Debug build) because FastTetrahedronCorotationalForceField.scn is listed with custom values in examples/.scene-tests config file.; Renaming the scene according to b061a51606f9dbe6a8bb9305eb6a95af0aad6bf5 should calm down the CI ;-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359378442:87,timeout,timeout,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359378442,1,['timeout'],['timeout']
Safety,"Ok, I reproduce the crash with:. ```xml. <?xml version=""1.0""?>; <Node name=""root"" dt=""0.005"" gravity=""0.0 -9.81 0"">; <RequiredPlugin name=""Sofa.Component.Collision.Detection.Algorithm""/> <!-- Needed to use components [BVHNarrowPhase BruteForceBroadPhase DefaultPipeline] -->; <RequiredPlugin name=""Sofa.Component.Collision.Detection.Intersection""/> <!-- Needed to use components [DiscreteIntersection] -->; <RequiredPlugin name=""Sofa.Component.Collision.Geometry""/> <!-- Needed to use components [PointCollisionModel TriangleCollisionModel] -->; <RequiredPlugin name=""Sofa.Component.Collision.Response.Contact""/> <!-- Needed to use components [DefaultContactManager] -->; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/> <!-- Needed to use components [MeshOBJLoader] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/> <!-- Needed to use components [CGLinearSolver] -->; <RequiredPlugin name=""Sofa.Component.Mapping.Linear""/> <!-- Needed to use components [IdentityMapping] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [TriangularFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.Spring""/> <!-- Needed to use components [TriangularBendingSprings] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TriangleSetGeometryAlgorithms TriangleSetTopologyContainer TriangleSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Quad2TriangleTopologicalMapping] -->",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:164,Detect,Detection,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838,2,['Detect'],['Detection']
Safety,"Ok, great! I will check out the examples and give you feedback next week. Regarding the naming: This could end up being a lengthy discussion. My reasoning is that names like ""DataEngine"" have their origin in how things are implemented. I think from a user perspective it is easier to understand names like ""PyScriptableComponent"" or even ""PyComponent"", because that is what they are: components, just like any other in Sofa, with Datas, Inputs and Outputs and a certain behavior, which can be implemented in python. Of course there's the disadvantage of breaking the name consistency. If we keep the ""DataEngine"" name somehow, I vote for PythonDataEngine. Saying it is also ""Script"" is redundant.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406602449:686,redund,redundant,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-406602449,1,['redund'],['redundant']
Safety,"One of the constructor of type::Vec takes a raw pointer and fill itself from this pointer, using its **own size**.; But the ctor does not know the size of the given array so this can contribute to unsafe behavior.; E.g ; ```; SReal array[2] = {1.0, 1.0};; sofa::type::Vec<3, SReal> vec(array);; ```; is valid and will compile; but it will lead to unexpected result (in the best case, a crash); GCC detected this case while compiling SpringForcefield with the bbox function on 2d and 1d datatypes.; And this leads to an other problem, with the case of TBoundingBox, which relies fully on this mechanism.; This PR removes as much as possible the usage of the unsafe ctor (effectuvely removing TBoundingBox usage) but does not deprecate TBoundingBox by itself (I suppose it should be). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3124:197,unsafe,unsafe,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3124,3,"['detect', 'unsafe']","['detected', 'unsafe']"
Safety,One remark about commented blocks: couldn't they be simply removed if not used anymore? ; Would be better to avoid introducing commented/unmaintained/why-is-this-here code.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/12#issuecomment-241391253:109,avoid,avoid,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/12#issuecomment-241391253,1,['avoid'],['avoid']
Safety,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1840:356,redund,redundant,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840,1,['redund'],['redundant']
Safety,"PR adds a first implementation of the augmented lagrangian collision (see [A Surface-to-Surface Finite Element Algorithm for Large Deformation Frictional Contact](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6056201/pdf/bio-17-1579_081013.pdf)). . To do so, because it is very close to the classical Unilateral constraint, I've tried to factorize code by adding a virtualization layer for both the constraints and the associated contact responses (see added class BaseContactLagrangianConstraint and BaseUnilateralContactResponse). It rely on a contact param template which is the only thing that differs in term of data and of course the type of ConstraintResolution used. . An example scene is introduced in the Demo folder, simply copying the falling beam example and replacing the response by the augmented lagrangian one. . There are still one todo for the future, even if this PR is already working on its own : adding the per-contact-point penalty modulation. This should be done by going back to the collision element using the DetectionOutput.elem attribute. This allows to go back to the topology. The only unknown is how to compute the element volume when the colliding topology is mapped to the simulated one. . [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/142]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003:1041,Detect,DetectionOutput,1041,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003,1,['Detect'],['DetectionOutput']
Safety,"PR based on #2280.; Template specialization for `void CompressedRowSparseMatrix<type::Mat<3,3,double> >::add(Index row, Index col, const type::Mat3x3d & _M)` in order to accelerate insertion.; This allows to avoid branching in force fields, based on the type of the system matrix (`dynamic_cast`). I removed it in `HexahedronFEMForceField`, but it could be removed in other places. It allows also to automatically optimize bloc insertion in force fields that did not have the branches. # Benchmarks. ## List of benchmarks. - `BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble`: insertion of 1000 3x3 blocs into a CRS made of double; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, but insertion uses the fast function specialized for 3x3 CRS matrices. This is the fastest possible bloc insertion. It is actually used in the specialized function introduced by this PR, among other checks. Therefore, this speed is the goal to achieve for the specialized function.; - `BM_CRS_Fixture<double>/Add3x3BlocScalar_double`: insertion of 1000 3x3 blocs into a CRS made of double using 9 individual scalar insertion; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d `: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, using 9 individual scalar insertion. This is equivalent to what happens in BaseMatrix' bloc insertion, therefore it corresponds to the previous behavior of bloc insertion (before this PR). ## Before. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2281:208,avoid,avoid,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281,1,['avoid'],['avoid']
Safety,Please @maddin200 avoid spamming micro-pull-requests.; Your warning fixes are very welcome and appreciated but could you try doing more than one in the same PR?; Thank you :ok_hand:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2536#issuecomment-991098284:18,avoid,avoid,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2536#issuecomment-991098284,1,['avoid'],['avoid']
Safety,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2268:174,redund,redundant,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268,1,['redund'],['redundant']
Safety,Printing a warning when an argument is not used while creating a component.; This is useful to avoid typos that can make you lose plenty of time!. Cleaning Base::parse a bit on the way.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/87:95,avoid,avoid,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/87,1,['avoid'],['avoid']
Safety,"Problem detected while using the install distribution. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2705:8,detect,detected,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2705,1,['detect'],['detected']
Safety,"Problem:; It is common that people write scene in which they used components from specific plugins but forgot the corresponding ; ```xml ; <RequiredPlugin name=''>; ```; because they, in a way or an other, preload the plugin. . This is problematic because, when the environment change (you compile sofa in a different way, your preload different plugin, it is a different person on a different computer,... ) and the preload is not done anymore it makes the component/plugin tracking very hard if it is not a trivial component in a trivial plugin. . To solve this problem, I implemented a SceneCheckerVistitor that scans the scene and detects which components are from a plugin and warn the user if there is no RequiredPlugin in there scene with this component and explaine how his scene should be fixed for the good of all. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/306:635,detect,detects,635,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/306,1,['detect'],['detects']
Safety,Problem:; MessageDispatcher is not thread safe as showned with the failing test named ; testThreading_OpenIssue. This PR:; - the MessageDispatcher is now thread safe so we can emit messages from different threads. ; - the test is not an OpenIssue anymore and its future failure should be considered as regression. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/257:42,safe,safe,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/257,2,['safe'],['safe']
Safety,"ProjectToLineConstraint is crashing when trying to do projectResponse() because its jacobian matrix member is not synchronized with its respective mechanical object (especially its size).; This problem was raised from the scene: ProjectToLineConstraint_RemovingMeshTest.scn; And it seems to be detectable only in Debug mode as the CI does not complain very often. One first fix was trying to call a method to update the Jacobian while catching the fact that a topology change event was triggered, but various problems arrived with the fact that the MechanicalObject data is not connected to the ""Data"" update mechanism. (a first draft on how to change this behavior here #1489 but stalled) . A second fix (less subtle) checks every time if the jacobian size is correct wrt to the mechanical object : #2241; Less desirable because it will check at each call but fix the problem for now. I let this issue to remember to trigger the jacobian update when detecting a topological change, once the topological change mechanism is finished.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2242:294,detect,detectable,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2242,2,['detect'],"['detectable', 'detecting']"
Safety,"Quick summary:; Problem 1: ; Quaternion (when unnormalized) can be used to encode more than juste R3 orientation so we shouldn't force the normalization in the Quaternion operator>>().; We should have normalization detection and renormalization done only on object that we know for sure are R3 orientation. So to me the proper fix should be done in the operator>> of Rigid3Type. Problem 2:; About reporting warning to the users. This cannot be done in the Quater::normalize function. Because normalization is a perfectly valid operation to apply on an un-normalized quaternion and thus there is no meaning to report a warning. Actually it is like printing a warning when we are doing exactly what the function is supposed to do. . Now, the problem goes far beyond this PR as reporting error/exception is a complex issue in Sofa as we rely on 'message' instead of exception and C-style error handling vs exception vs printing (as in sofa) is an as old problem as c++ and in our code base all the approaches have been used.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/790#issuecomment-430591085:215,detect,detection,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/790#issuecomment-430591085,1,['detect'],['detection']
Safety,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964:696,detect,detect,696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964,1,['detect'],['detect']
Safety,"Quite a large pull request. - Clean a few files related to the broad phase of the collision detection (unused includes, forward declaration, etc); - Large work on DirectSAP to clean it and speed it up. The algorithm stays the same but:; - Cost of data access has been reduced by caching it at the beginning of the algorithm; - Containers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1917:92,detect,detection,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917,1,['detect'],['detection']
Safety,"Quite verbose indeed (100 steps generates around 800KB of logs). May generate timeouts as well. WIP for the moment to see the difference on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4184:78,timeout,timeouts,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4184,1,['timeout'],['timeouts']
Safety,"Reasons for the failing tests:; - Timeout: simulations are way slower, but not necessarily different in terms of behavior; - `buildStiffnessMatrix` is not implemented: if it is not implemented, there is the backup of calling `addKToMatrix`, but it is not necessarily implemented.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4010#issuecomment-1623097057:34,Timeout,Timeout,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4010#issuecomment-1623097057,1,['Timeout'],['Timeout']
Safety,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1889:309,detect,detected,309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889,1,['detect'],['detected']
Safety,Recover a commit in is_sofa_multithreading branch (3da9e50752d6aead487f0b5f8897bfc4249f9404) to allow OdeSolver concurrent execution:. A new data<bool> is added (d_threadsafevisitor) to disable allocation and writing in the mechanical object component used by the OdeSolver ; The same change is applied to all the OdeSolver derived class and it doesn't affect the default behavior and the scenes.; EulerSolver; EulerImplicitSolver; StaticSolver; CentralDifferenceSolver; VariationalSymplecticSolver; NewmarkImplicitSolver. Task Scheduler refactoring;; - improve task stealing between worker threads.; - add worker thread name to make the debugging and profiling easier.; - group and move the initialization tasks in a dedicated file. New component and scene to show off the performance improvement of multithreading execution.; - MeanComputation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/745:0,Recover,Recover,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/745,1,['Recover'],['Recover']
Safety,"Recovering changes made by @olivier-roussel in his [patch](https://github.com/sofa-framework/conda-ci/blob/master/conda/recipes/sofa/patches/allow-compilation-out-of-SOFA.patch). To be noted @fredroy : in _Sofa/GUI/Qt/CMakeLists.txt_, Sofa.GL is only found in a QUIET way and it was not linked explicitely (no where `target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL)`). Could you let me know whether the proposed change seems reasonable to you. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4844:0,Recover,Recovering,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4844,1,['Recover'],['Recovering']
Safety,"Refactor CImg & CImgPlugin and fix the code that depend on it. . The general problem is that CImg is header only library thus the; multiple inclusion of the code in multiple dll seems to cause trouble; on the mutexes initialization causing the crash & failure when two plugins compile; with CImg & CImgPlugin are loaded (eg image, flexible). To avoid this scenario, CImg is moved into the CImgPlugin that; hold the mutex and other code needs to include #include<CImgPlugin/SOFACImg.h>; instead of the raw CImg. This PR is resulting from the split of #548 (for clearity and to ease reviewing). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/562:345,avoid,avoid,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/562,1,['avoid'],['avoid']
Safety,Refactor of DetectionOutputVector interface and its implementation TDetectionOutputVector. . The goal is to force all components to use the only functions provided by the DetectionOutputVector interface to interact with the DetectionOutput data that stores the contacts. One advantage of accessing the DetectonOutput data through an interface is to make a concurrent modification of contacts easier. The current implementation allows direct access to the DetectionOutput vector by casting the TDetectionOutputVector class to the helper::vector<DetectionOutput> Vector due to a double inheritance. ; This makes the DetectionOutputVector interface useless because easy to bypass. Current implementation of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector : public helper::vector<DetectionOutput>; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. }; ```. New implementation of of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. private:; 	helper::vector<DetectionOutput>; }. ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965:12,Detect,DetectionOutputVector,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965,17,['Detect'],"['DetectionOutput', 'DetectionOutputVector', 'DetectonOutput']"
Safety,"Refactoring to avoid confusion is good.; Another PR could refactor Ray : not a ray, change name, including iterator in the name (eg RayCollisionIterator ..). In the code, there should be refactoring with the defaulttype::Ray); Issue created: #1255",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1251#issuecomment-585124518:15,avoid,avoid,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1251#issuecomment-585124518,1,['avoid'],['avoid']
Safety,"Referee: @matthieu-nesme @ChristianDuriez. Members: @JeremieA @francoisfaure @courtecuisse, Eulalie Coevoet, Igor Peterlik. Main objective: build or compute the mechanical system when forcefields, constraints etc... are under mapping. 1 implementations available using Compliance plugin (and EigenMatrix) and masks; 1 implementation todo using sparseMatrix of SOFA without masks. For that, the fact that we remove the particular case of InteractionForceField could greatly simplify the solution. There are many different cases depending on the number of dofs that are concerned by the mapped values... Difficult to have the ideal implementation for all the case, but we need to allow several strategies. Maybe possible to avoid the ""explicit"" use of masks given the knowledge of the sparsity of the matrices... . Subtasks:; - Make option ""use Mask"" to false by default; - Tag ""InteractionForceField"" as deprecated; - First implementation for the sparseMatrix of SOFA using applyJt(SparseMatrixDeriv => not ideal for all the case; - see if we could define a common strategy without the use of masks.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26:722,avoid,avoid,722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26,1,['avoid'],['avoid']
Safety,"Regression results exported with Windows make the regression tests fail on Linux and inversely. It may come from a precision problem in one component, from the amount of exported data or from the regression mechanism itself. To be investigated at STC coding sprint. Note for the STC, we could also add to this the fix of the timeout of ArticulatedArm.header.py",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2983:325,timeout,timeout,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2983,1,['timeout'],['timeout']
Safety,"Remove `Qt6`, and be sure to delete it from your machine. I had the same problem. Don't hesitate to delete the build folder before rebuilding to avoid cache issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372036821:145,avoid,avoid,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372036821,1,['avoid'],['avoid']
Safety,Remove the randomness of LCPForceFeedback test to avoid having random errors.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4671:50,avoid,avoid,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4671,1,['avoid'],['avoid']
Safety,"Replace SOFACUDA_ARCH containing arbitrary value with (CMake's) auto arch detection.; If needed, you can disable auto-detection with the desired arch value.; It should (not tested) also generate cuda code for multiple arch as well. Remove also warning when configuring with CMake. (about deprecated macro sofa_create_package). I guess it could break CMake CUDA config for people using the SOFACUDA_ARCH variable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1336:74,detect,detection,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1336,2,['detect'],['detection']
Safety,"Requires other PRs to avoid crashes during the dump. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4818:22,avoid,avoid,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4818,1,['avoid'],['avoid']
Safety,"Resize the force vector even when no force Data has been set. This avoids a crash later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3670:67,avoid,avoids,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3670,1,['avoid'],['avoids']
Safety,"Retrospectively, I would prefer the following structure:; ```; SofaCUDA; | - component; | - mapping; | - linear; | - nonlinear; ```. I find that the intermediate directories `sofa/gpu/cuda` are superfluous, and redundant with the name of the plugin. It is also in the prevision of changing the namespaces (which is not done in this PR).; What do you think @hugtalbot @epernod @damienmarchal @fredroy ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883:211,redund,redundant,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601#issuecomment-1403751883,1,['redund'],['redundant']
Safety,Reverts sofa-framework/sofa#3059 . This PR causes issues with Node that have multiple parents().; This was not detected in the CI because scene with multiple parents are not possible with xml scene. . Thanks to @EulalieCoevoet for pointing the problem.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3464:111,detect,detected,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3464,1,['detect'],['detected']
Safety,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1734:298,avoid,avoid,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734,1,['avoid'],['avoid']
Safety,"See #1950. ; Two variables exist to define quads in a hexahedron, but the order is not the same:; ```; const unsigned int quadsInHexahedronArray[6][4] = {{0,1,2,3}, {4,7,6,5}, {1,0,4,5}, {1,5,6,2}, {2,6,7,3}, {0,3,7,4}};; const unsigned int quadsOrientationInHexahedronArray[6][4] = {{0,3,2,1}, {4,5,6,7}, {0,1,5,4}, {1,2,6,5}, {2,3,7,6}, {3,0,4,7}};; ```; We don't know if there are some consequences to it. Perhaps only one variable could be used. Removing the other would avoid confusion.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2003:475,avoid,avoid,475,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2003,1,['avoid'],['avoid']
Safety,"See #2412 ; explanation : topology comes from the IdentityMapping which maps a topology possibly with topological changes while the textcoords are coming from the TextureInterpolation (here no able to handle topo changes). To avoid crash the link is cut. To avoid this, only use: `handleDynamicTopology=""0""`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2392#issuecomment-943121061:226,avoid,avoid,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2392#issuecomment-943121061,2,['avoid'],['avoid']
Safety,"See #4133, as it avoids to write the default value in the description, hence avoids the problem of this PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4129#issuecomment-1706322524:17,avoid,avoids,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4129#issuecomment-1706322524,2,['avoid'],['avoids']
Safety,"See [this gist](https://gist.github.com/maxime-tournier/3c59175c9219098d419768d89af8a51e#file-attribute_list-cpp) for a simple prototype (start from the main function at the end). It uses a nifty trick for erasing and recovering type information through a throw/catch, which is a little slow but not slower than string conversion anyway. The one with member function pointers won't fly as it requires e.g. `DefaultPipeline::name` to be public, which is often not the case. I don't see how to come up with a reasonably usable syntax for the last one, since `Node, MechanicalObject` are (possibly dependent) type names. Also, putting them all inside a single `initializer_list` will drop type informations to make type checking possible in `createTree`, so I'm afraid this won't be worth it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-335082143:218,recover,recovering,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-335082143,1,['recover'],['recovering']
Safety,"See issue: https://github.com/sofa-framework/sofa/issues/338; The Rayleigh parameters (Rayleigh mass and stiffness) are used for numerical dumping in the simulation. However, most integration schemes (OdeSolvers) in SOFA use NON-ZERO default values. This commit fixes this.; The user must be aware of its dumping parameters, now : ; - default rayleighMass=0.0; - default rayleighStiffness=0.0. To avoid breaking all scenes, this PR also updates (where needed) the rayleighMass and; rayleighStiffness parameter (set to 0.1 like previous default values). NOTE : a script is available for updating all your own scenes if needed (script/update-scenes-rayleighcoeff.sh). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/350:397,avoid,avoid,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/350,1,['avoid'],['avoid']
Safety,"See; - #4429. some works still need to be done in the future to avoid calling a singleton for the ObjectFactory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5098:64,avoid,avoid,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5098,1,['avoid'],['avoid']
Safety,Several changes in PluginManager:; - Add check to avoid registering the same plugin from different paths; - Change method getPlugin to look in the map of registered plugin using the plugin name instead of using a reconstructed path. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1472:50,avoid,avoid,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1472,1,['avoid'],['avoid']
Safety,Several lines of thought:; + Proposal around a new way of adding contribution in addKtoMatrix in SOFA and avoid a virtual call at each call; + Merge MatrixDeriv with a sparse matrix representation; + SparseVectors in SOFA; + Simplify the (quite complex) multi-matrix things as a lot of the initial intentions have never been really implemented and can be (maybe) solved in a more simple way using efficient sparse matrices and sparse vectors.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292212265:106,avoid,avoid,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292212265,1,['avoid'],['avoid']
Safety,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815:183,avoid,avoid,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815,2,['avoid'],['avoid']
Safety,Since #638 the PR breaks some #ifdef.; Here is fix for the #inclusion problem and a pattern to avoid this kind of problem to be repeated. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/672:95,avoid,avoid,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/672,1,['avoid'],['avoid']
Safety,"Since the overload of the destructor is easy to detect and it makes a clean / smooth deprecation process, we rather like it.; I would go for it if you're fine with it as well. Fred suggested a macro for the destructor, but I am unsure about this",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1641669962:48,detect,detect,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005#issuecomment-1641669962,1,['detect'],['detect']
Safety,"Since this is only a few comments edit, I aborted the builds on the CI.; For future PRs, add [ci-ignore] in the description to avoid builds ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/153#issuecomment-275349381:42,abort,aborted,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/153#issuecomment-275349381,2,"['abort', 'avoid']","['aborted', 'avoid']"
Safety,"So I took a look at the SleepController. It simply puts context to sleep where the mechanical object has a max velocity under a certain threshold. Then wake them up again only when a collision occurs with another object that is moving. ; Three remarks : ; - Being put to sleep disables any mechanical visitor to be applied on the node and deactivates its constraint corrections. So no more computing (no system build, no integration, only collision detection); - This works well only for scenes where external interaction only arise between two objects colliding, neither by the mean of a change of external forces (dynamic vector field for instance), or of constraint state changes not managed by the collision pipeline (for instance statically defined interaction constraints such as cable constraints). ; - The code seems overly complicated for what it performs but certainly does what it says it does. I didn't try it but it looks ok. . Sincerely, I cannot see myself advising anyone to use it in their scene given the fact that the use case doesn't apply for the majority of the scenes (especially for soft robotics). So I wouldn't mind never seeing it again...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4813#issuecomment-2236872106:449,detect,detection,449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4813#issuecomment-2236872106,1,['detect'],['detection']
Safety,"So, after discussion it was decided to avoid the #ifdef can you update that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/100#issuecomment-267002225:39,avoid,avoid,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/100#issuecomment-267002225,1,['avoid'],['avoid']
Safety,Sofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded p,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6426,Detect,Detection,6426,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Detect'],['Detection']
Safety,"Sofa/framework/Core/src/sofa/core/behavior/BlocMatrixWriter.h can be deprecated. The approach is not widely used (only one force field). If I understood correctly, the strategy was to detect if the matrix is a compressed row sparse matrix using a `dynamic_cast`, to efficiently insert matrix entries. However, this is no longer needed since compressed row sparse matrices now support efficient block insertion even through the `BaseMatrix` interface (because of https://github.com/sofa-framework/sofa/pull/2306/files among other PRs).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4986:184,detect,detect,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4986,1,['detect'],['detect']
Safety,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2000:855,avoid,avoid,855,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000,1,['avoid'],['avoid']
Safety,"Some functionalities introduced by this PR looks redundant to the existing printLog data, and can replace it with great advantage. Moreover, the current usage of this printLog data varies from one component to an other, and could be cleaned in the same time.; Maybe a sdebug stream (in addition to sout, serr) could be introduced to cover some of the misusage of the printLog data.; Initially, printLog is to print or not the component messages to the standard output",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276617447:49,redund,redundant,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276617447,1,['redund'],['redundant']
Safety,"Some unit tests are generating sofa errors w/o generating gtest errors (e.g. SofaBoundaryCondition_test). To detect such problems, I had added a msg handler that was returning a gtest error at each sofa error.; It was not good enough because some tests can generate sofa errors on purpose.; But the new implementation defeat the main purpose.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/211:109,detect,detect,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/211,1,['detect'],['detect']
Safety,"Some vector calculus are performed on normalized orthogonal vectors, and the result is also normalized. Therefore, no need to normalize it again. The proposed change avoids 2 normalizations. To be multiplied by the number of elements. It's called in `addForce`. And I suspect this is why `addForce` is faster in https://github.com/sofa-framework/sofa/pull/2550 (the branch contains the same changes only for TetrahedronFEMForceField).; In this PR, the changes are applied on all the corotational FEM I could found. I found that the function `Decompose<Real>::getRotation` is very similar to my changes. However, the resulting rotation is the transpose of the rotation needed in the FEM. Also, I did not find any use of `Decompose<Real>::getRotation`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2647:166,avoid,avoids,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2647,1,['avoid'],['avoids']
Safety,"Something, when having multiple topologies in the same node as the input state, the barycentric mapping will get the wrong input topology since it rely only on `fromModel->getContext`. This PR fixes this by adding links for the input and output topologies. . Also some reformatting of the input topology type detection with a goto statement...a good example as to where goto can be useful :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1125:309,detect,detection,309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1125,1,['detect'],['detection']
Safety,"Sometimes we see this kind of initialization of a Data:; ```cpp; showObjectScale(initData(&showObjectScale, 0.1f, ""showObjectScale"", ""Scale for object display. (default=0.1)"")); ```; The information on the default value is redundant and error-prone. A developer can decide to change the default value and forget to change the default value in the description. Instead, I suggest to store the default value of the Data and use it to print it in the GUI, in addition to the description. Here is the result:; ![image](https://github.com/sofa-framework/sofa/assets/10572752/eb6e238b-2b06-4d3b-bdc4-cf553d795606). We can also imagine having a small button to change the value to its default value (like in Unreal Engine). The implementation of this suggestion triggers some questions:; - I chose to store the default value only for some of the `Data<T>`, based on the type of `T`. Do we want that or do we want to store it for all types?; - I chose to store the default value of `Data<T>` as a T. But we can also consider storing its string representation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4133:223,redund,redundant,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4133,1,['redund'],['redundant']
Safety,"Sorry I do not know neither SparseLDLSolver (and the assembled solvers implemented in the sofa core), nor METIS. If `adj` is a std::vector, I think the safe way to get the raw pointer is `adj.data()`.; (the old-school way: `adj.empty()?null_ptr:&adj[0]`)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305800420:152,safe,safe,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305800420,1,['safe'],['safe']
Safety,"Sorry I should have given more details. The move I suggest is something that was around for quite a while now. I think it was suggested by @damienmarchal first. The legacy conditionally compiled code, mainly in SofaCUDA but it applies everywhere, is a bad practice for the following reasons:; - It is nearly impossible for the user to know what components are included in the conditionally compiled module. It would require a complex documentation to inform the user, which is not done for SofaCUDA.; - Testing becomes more complex. It's challenging to ensure that all possible combinations of conditions are thoroughly tested, increasing the risk of undetected bugs. See https://github.com/sofa-framework/sofa/pull/4227 for example.; - Other plugins (for example SoftRobots) cannot add their own CUDA components into SofaCUDA. So it's not true that all components are in the same plugin. We also have the example of the GPU-based solvers. What I suggest is to keep the cpu-based plugin, and create a new plugin for the gpu-based components. It would be applied to all plugins that are a conditional dependency in SofaCUDA (so not the `Sofa.Component.*` modules), not only `VolumetricRendering`. This PR is an illustration of the move of one particular plugin, but it should be generalized. The goal of the PR is also to approve the move, but also the folder architecture. If we can agree on an architecture inside the SOFA codebase, we can also apply it in external plugins (such as SoftRobots or MOR).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4395#issuecomment-1864019900:643,risk,risk,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395#issuecomment-1864019900,1,['risk'],['risk']
Safety,"Split the default parameters of the FileRepository constructor into; multiple constructors to avoid ambiguous calls. Add a new constructor that allows the creation of the repository using; multiple paths. The plugin file repository is now initialized using both $SOFA_ROOT/lib; and $SOFA_ROOT/plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1610:94,avoid,avoid,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1610,1,['avoid'],['avoid']
Safety,"Started from the PR #4838 . Similar to the Thread Sanitizer.; Only for GCC/Clang and Unix (seems even GCC-win/Clang-win are not supported). This A(L)SAN adds leaks and memory detection.; More info:; - https://github.com/google/sanitizers/wiki/AddressSanitizer; - https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer (leak is included into the addresssanitizer). The `-fno-omit-frame-pointer`adds also a better reporting (nicer stack traces). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4847:175,detect,detection,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4847,1,['detect'],['detection']
Safety,"Still timeout, even with only 1 iteration :disappointed: ; To be disabled ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2422#issuecomment-949448092:6,timeout,timeout,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2422#issuecomment-949448092,1,['timeout'],['timeout']
Safety,"Strange, looking at the dashboard: 1) some timeout appeared and 2) regression tests failing; could this be related to the PR?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/856#issuecomment-447794176:43,timeout,timeout,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/856#issuecomment-447794176,1,['timeout'],['timeout']
Safety,"Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901:137,avoid,avoid,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901,1,['avoid'],['avoid']
Safety,"THIS PR HAS BEEN SPLITTED IN SEVERAL PART... THE FIRST ONE IS: #1605 . In this PR I'm try to avoid the tight coupling that is currently in DataTypeInfo.h. . Let's me explain,; Every Data that we manipulate in sofa can return type informations. ; This can be done in two ways:; - the first solution rely on type_traits with the specialization of the DataTypeInfo class. A DefaultDataTypeInfo is provided as a fallback scenario while fully defined information can be provided by providing a specialization for DataTypeInfo<>. ; - the second solution is a runtime approach were the typeinfo is inherited from AbstractTypeInfo. ; To *ease* the implementation the runtime solution is generated by ""reusing"" the static one. This is done with VirtualTypeInfo<StaticDataTypeInfo>. This VirtualTypeInfo inherits from AbstractTypeInfo but wrap and forward all the method call to the StaticDataTypeInfo passed in the template parameter. . This is actually an interesting design gears provided fast/efficient API and an abstract one with lower performance. Nevertheless there is actually one problem with the existing implementation, the problem is that by default access to the static version (so the one that need the full inclusion of involved data types) to generate the dynamic one in the VirtualTypeInfo::get() method. As this function is needed to implement Data<T>::getAbstractTypeInfo it means that the complete static version is needed everytime and everywhere we manipulate a Data<>. To be sure the code does not fall back to DefaultTypeInfo... most of the specilization are made visible in DataTypeInfo.h where a lot of data types ""vector, rigid, map, vec, quat"". All these includes are just there to insure that in Sofa no-one will never fallback on the default dehavior. But static type info is kind of ""expert"" feature that is only usefull in few rare use cases. So polluting the complete dependency tree (and compilation unit) for a rarely use case is problematic. . So I tried to reverse all to i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:93,avoid,avoid,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['avoid'],['avoid']
Safety,THere is 16 scene crashing on centos....but this seems to be because of timeout.; Any idea ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-685969694:72,timeout,timeout,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1465#issuecomment-685969694,1,['timeout'],['timeout']
Safety,"TL;DR (dev): Remove direct dependency in SofaConstraint&SofaPrecond on SofaSimpleFEM by implementing a function in TetraFEM.; TL;DR (user): Using PrecomputedConstraintCorrection with `rotations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it doe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2250:421,detect,detects,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250,1,['detect'],['detects']
Safety,Test.html) | [misc-misplaced-const](https://clang.llvm.org/extra/clang-tidy/checks/misc-misplaced-const.html) |; | [clang-analyzer-core.CallAndMessage](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.CallAndMessage.html) | [misc-misplaced-widening-cast](https://clang.llvm.org/extra/clang-tidy/checks/misc-misplaced-widening-cast.html) |; | [clang-analyzer-core.DivideZero](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DivideZero.html) | [misc-new-delete-overloads](https://clang.llvm.org/extra/clang-tidy/checks/misc-new-delete-overloads.html) |; | [clang-analyzer-core.DynamicTypePropagation](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DynamicTypePropagation.html) | [misc-non-copyable-objects](https://clang.llvm.org/extra/clang-tidy/checks/misc-non-copyable-objects.html) |; | [clang-analyzer-core.NonNullParamChecker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonNullParamChecker.html) | [misc-redundant-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-redundant-expression.html) |; | [clang-analyzer-core.NonnilStringConstants](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonnilStringConstants.html) | [misc-sizeof-container](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-container.html) |; | [clang-analyzer-core.NullDereference](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NullDereference.html) | [misc-sizeof-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-expression.html) |; | [clang-analyzer-core.StackAddressEscape](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.StackAddressEscape.html) | [misc-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/misc-static-assert.html) |; | [clang-analyzer-core.UndefinedBinaryOperatorResult](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.UndefinedBinaryOperatorResult.html) | [misc-string-compare](https://clang,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:9002,redund,redundant-expression,9002,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-expression']
Safety,Thank for the reviewed. ; I checked the example file and my thinking is that this example is wrong and my PR is legitimate. ; 1) if you change in the example to turn visualization of the edge set it will crash. ; 2) The edgeset is in the root node and so the existing code to retrieve the context in the init() is not working as we expect.; 3) The code in the PR is right at detecting and reporting an error when this case is detected. . So i moved the EdgeSet into the same node as the topology. So the error does not pop up.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/973#issuecomment-483165483:375,detect,detecting,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/973#issuecomment-483165483,2,['detect'],"['detected', 'detecting']"
Safety,"Thank you for your report @louise-scherrer . This segmentation fault is indeed a bug, and should be prevented. Here is the call stack to the fault:. ```; -> return m_trianglesAroundVertex[i];; const MeshTopology::TrianglesAroundVertex& MeshTopology::getTrianglesAroundVertex(PointID i); bool LocalMinDistance::testValidity(Point &p, const Vector3 &PQ); int LocalMinDistance::computeIntersection(Point& e1, Point& e2, OutputVector* contacts); int MemberElementIntersector<Point, Point, LocalMinDistance>::intersect(core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, DetectionOutputVector* contacts); void BruteForceDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void NarrowPhaseDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void DefaultPipeline::doCollisionDetection(const helper::vector<core::CollisionModel*>& collisionModels); void PipelineImpl::computeCollisionDetection(); ...; void CollisionAnimationLoop::computeCollision(const core::ExecParams* params); void FreeMotionAnimationLoop::step(const sofa::core::ExecParams* params, SReal dt); ```. I'll try to further look into this. We should try to find the best place to prevent this kind of fault without impacting too much the computation time.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329:590,Detect,DetectionOutputVector,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329,1,['Detect'],['DetectionOutputVector']
Safety,"Thanks @alxbilger for the explanation and the perfect illustration :+1:; I understand the issue, although I don't know if the ""appropriate use"" of this method (`getValuePtr`) should be left to the user, or if additional safeguards should be put in the code. I did a quick search in the code of SOFA + a few plugins that I'm using, and I found a call to this particular method only in the `DataHelper` component in SofaPython3. I added a quick safeguard in this case, in the [PR](https://github.com/sofa-framework/SofaPython3/pull/318) I'm referring to in the description above. However the modification I suggested doesn't solve the type of problem you are describing here (so it would be left to the user to check data buffer coherence whenever the underlying data is modified...). Apart from that, I saw that the initial code I replaced (`return &data[0]`) is also used in two others `getValuePtr` methods : in `FixedArrayTypeInfo.h` and `TypeInfo_Text.h`. As I didn't find any other call to these methods, I would say this doesn't change much, but maybe the PR could be extended to these as well. I can do the modification if someone can confirm it is a good idea.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329331227:220,safe,safeguards,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505#issuecomment-1329331227,2,['safe'],"['safeguard', 'safeguards']"
Safety,"Thanks @damienmarchal. Could you detail a bit what has been done here? I see #475 commits, DisplacementTransformEngine files creation and DisplacementMatrixEngine deprecation.; Moreover, `git rename` and `git add` detections are a bit weird: ; modules/SofaMiscEngine/initMiscEngine.h → ...el/SofaFramework/build_option_opengl.h.in; modules/SofaMiscEngine/initMiscEngine.cpp → ...faMiscEngine/DisplacementMatrixEngine.cpp; applications/plugins/SofaMiscEngine/DisplacementMatrixEngine.h detected as created; modules/SofaMiscEngine/DisplacementMatrixEngine.h → ...Engine/DisplacementTransformEngine.h",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/477#issuecomment-338606337:214,detect,detections,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/477#issuecomment-338606337,2,['detect'],"['detected', 'detections']"
Safety,"Thanks @epernod. I actually tried to use SubsetTopology, but in the end I did not understand why it was needed so I removed it. I understand from your comment that you consider both objects independently, and connect them using springs. It's something that I wanted to avoid. Even if we use geometric constraints, I am not sure that the modeling is accurate.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4706#issuecomment-2090212860:269,avoid,avoid,269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4706#issuecomment-2090212860,1,['avoid'],['avoid']
Safety,"Thanks @fredroy for the PR which address a legitimate concern. The problem adressed by the PR is often seen in SOFA's base classes where a parent class is having virtual function defined to print ""no implemented"" (or to print nothing). In general this pattern can be considered as a good code smell often related to some violation of SOLID's principle (eg: Liskov Substition Principle). The proposed solution of moving functions in a separated object is going in the right direction (as pointed by @alxbilger by segregating the intefaces). But it is unclear to me if the implementation proposed in the PR is enough because:; - having PartialLinearSolver inheriting from BaseObject looks weird for an ""interface"", ; - using dynamic cast to detect the ""features"" in the ConstraintCorrection, ... ; - the implementation in BTD also looks highly suspicious with:; - plenty of ""debug/trace"" mapped to Datas as if the feature was ""not stable"" or only working in some case.; - a boolean to control if we use the PartialLinearSolver part of the API or if we don't... and I wonder if the actually really work for full & partial solving or only for one of the two APIs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227045937:739,detect,detect,739,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1227045937,1,['detect'],['detect']
Safety,"Thanks @matthieu-nesme for the feedbacks and discussions. . About the implementation I agree there is some smoothing to do (there is redundency in the classes, the constructors with std::initializer are now useless as vs2013 don't like them)... But I would be happy to have that happens in a second PR as I think I can change this without touching the API :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-290018588:133,redund,redundency,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-290018588,1,['redund'],['redundency']
Safety,"Thanks Guillaume for the safe-guard eyes. ; A 2 character fix later now all the tests are passing so I switched the status ""to review"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/335#issuecomment-318203462:25,safe,safe-guard,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/335#issuecomment-318203462,1,['safe'],['safe-guard']
Safety,"Thanks for the changes, . @epernod, do you have time to add tests to validate the new features you introduced ? ; (I know that you made examples but examples are not as informative as tests to detect regression)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273193002:193,detect,detect,193,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273193002,1,['detect'],['detect']
Safety,"Thanks for your inputs @fspadoni and @damienmarchal , and sorry for the late response. There are two commits in this PR (two versions of the fix); the first one fixed completely the problem on mac OS X, but may introduce thread race condition as only the constructor of a static variable is thread safe. Since the **messageTypePrefixes** and **messageTypeColors** static arrays are initialized in the ; **formatMessage** method, two threads can collide there. The second one tries to fix that, but isn't working yet (hence the commit name ""temp"").; In this one, the **DefaultStyleMessageFormatter** singleton instantiation doesn't cause a seg fault on mac os x anymore, but the **messageTypeColors** static array fails to instantiate correctly, causing all console messages to be blue. This may be because **Console::BRIGHT_GREEN**, **Console::BRIGHT_YELLOW**, etc. are all, of course, static objects. Since they are initialized in another .cpp, the order of their constructor calls with respect to the **DefaultStyleMessageFormatter** singleton instantiation cannot be predicted (compiler bound). I'll try to find a solution in two weeks (I'll be away for the next 10 days working hard on my sun tan ☀️)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642#issuecomment-389782748:298,safe,safe,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642#issuecomment-389782748,2,"['predict', 'safe']","['predicted', 'safe']"
Safety,"That's an interesting explanation @fjourdes and it seems you raise an issue to solve if we need an efficient way to manage points/vertices/whatever in the MechanicalObject.; However as you say, TopologyData is actually NOT used in MechanicalObject. Therefore it is totally safe to comment/remove `#include SofaBaseTopology/TopologyData.inl` . I assume that it was forgotten when people attempted to use the new topology engine system for MechanicalObject (and unfortunately gave up). A PR should be issued with the removal, in order to be sure that everything does not change at all (I checked on my setup and the tests ran smoothly; but it would be better to test with the ""options"" configuration)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295322091:273,safe,safe,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295322091,1,['safe'],['safe']
Safety,"That's great !. An improvement would be to release the GIL also in the sofa binded functions : when a binding is called, it should release the GIL, do its potentially costly C++ stuff then acquire the GIL back to safely return in the python script.; This way, we release even more the pressure on the GIL and we can do other things in another thread ... even loading another sofa python scene from another C++ thread.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313536191:213,safe,safely,213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313536191,1,['safe'],['safely']
Safety,"The 3 usual masses are templated on DataTypes and a TMassType, which is usually float/double if DataTypes is VecTypes and a special type RigidMass<X,Real> if DataTypes is a RigidTypes. It appears to me that it could be automatic and we dont need to explicitely cite the RigidMass/Real for MassType as it seems to depend solely on the DataTypes.; Moreover it is confusing for writting scene, if you want to not rely of the automatic detection of templates (canCreate and stuff()) from the associated MechanicalObject. For example in `/Components/mapping/ArticulatedSystemMapping.scn`; ```xml; <UniformMass template=""Rigid3d,RigidMass<3u,double>"" ..... >; ```; This is so weird to explicitly write the masstype.; (Actually, the xml line is even not working, as it needs to be `Rigid3d,RigidMass<3,double>` but I suppose it was this way when the file was written). ~~In this PR, [std::conditional_t](https://en.cppreference.com/w/cpp/types/conditional) is used to specify MassType from DataTypes (if rigidtypes then rigidmass, otherwise Real); One other solution would be to specify a MassType in VecTypes/RigidTypes but seems invasive to me.; I let the double template thing, as I dont know if it is possible than a developer would like to specify special instanciation, like RigidType with Real for example. But this does not solve the double template thing in xml.~~. ~~If it is not the case, then we could remove the second template, and just use a `typedef` (so we remove the need to specify the double template in xml....)~~. Template has been removed directly, and the MassType is SFINAE'ed from the DataTypes.; parse() in the 3 differents masses warns the user of the modification, and what to do. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dc",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2644:432,detect,detection,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2644,1,['detect'],['detection']
Safety,"The LateSpecialization pattern, introduced in https://github.com/sofa-framework/sofa/commit/1b92a802eb69693af65f2094f02f9a734d333804, was used to avoid code duplication between float and double specialization of Rigids. However, now that there is only one specialization, it makes the code more difficult to read. Therefore, I suggest to go for a standard specialization. Note that the diff may be difficult to read, but this PR only moves code (with adaptation). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3126:146,avoid,avoid,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126,1,['avoid'],['avoid']
Safety,"The O(n) should be avoided even though; 1. there might already be a O(n) lookup hiding somewhere during insertion; 2. we should be fine in practice; 3. this should really be O(log n) anyways. I like the late check during `getChild/getObject`, and even more so the Visitor approach where all the checks are made in a separate pass (aside: in this spirit we could provide a `check` method just like `init` and a visitor that checks consistency so that we don't have to check stuff all the time during simulation. also: use exceptions for error handling!!). More generally, why do we have objects and children stored in a list? We just need to store pointers to the siblings directly inside nodes/components instead of the extra memory/indirections, especially if we're using lists.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323954428:19,avoid,avoided,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323954428,1,['avoid'],['avoided']
Safety,"The Qt you downloaded (and you set in CMAKE_PREFIX_PATH) is not the same as the ones detected by CMake.; CMake auto-detected the one you downloaded through anaconda through other packages.; So I suppose the compiler is using the headers of the Qt in /home/hri/Qt and the linker is using the libs in /home/hri/anaconda, hence the symbols error about glibc. 2 choices:; - you only use the one installed by anaconda (and remove all reference from the one you installed); - you force cmake to detect the Qt you installed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154:85,detect,detected,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829#issuecomment-1539235154,3,['detect'],"['detect', 'detected']"
Safety,"The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458:343,detect,detected,343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458,1,['detect'],['detected']
Safety,"The code looks safe, the topic seems enough discussed and everyone seems ok. Very unlikely to break anything in the current state, I merge it. ; If it breaks something, please report it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/48#issuecomment-265967322:15,safe,safe,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/48#issuecomment-265967322,1,['safe'],['safe']
Safety,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1845:51,avoid,avoid,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845,1,['avoid'],['avoid']
Safety,"The current implementation is now converting things like:; Sequence (non recursively), string, scalar, and boolean without a warning. . If the object has a method named ""getSofaPath()"". This one is used in the createObject to do the conversion. My target was to avoid collision with the existing str() function that may have a different semantic and I wanted to preserve it. This function could be implemented in Base and Data but in virtually any object we want to be used as a parameter in createObject. . It sounds nice to me because it make things ""explicit"" and convenient as it simplify user's scripts.; I'm not a big fan of 'getAsSofaPath()' and though about getAsSofaValue or getAsACreateObjectParameter(). What do you think ? Do you have alternative names ? . PS: @matthieu-nesme you said: ... ""Data's str already gives the stringvalue"", ; ```python; first = rootNode.createObject( 'ExternalComponent', name='theFirst'); print('VERSION 1:'+ str( first.findData('name') + "" type: "" + str(type(first.name)) ); print('VERSION 2:'+ str( first.name ) + "" type: "" + str(type(first.name)) ); ```; Actually prints: ; ```; VERSION 1: <Sofa.Data object at 0x7ff43b77f6f0> -> <type 'Sofa.Data'>; VERSION 2: theFirst -> <type 'str'>; ```; So str() function is not implemented as you said.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307835375:262,avoid,avoid,262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307835375,1,['avoid'],['avoid']
Safety,"The current implementation is printing a deprecation message but the modified ""arg""; are also reported by caller's as error. To avoid that I don't accumulate the deprecation warning in the ""arg"" arguments; and print them immediately. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/939:128,avoid,avoid,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/939,1,['avoid'],['avoid']
Safety,"The current implementation of Node::Single rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1737:611,avoid,avoid,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737,1,['avoid'],['avoid']
Safety,"The directories `screenshots` and `config` are currently created in the `build` directory of SOFA. When installing the software on a machine, those can end up in a read-only directory. . To avoid this problem, this PR changes:. On Linux:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/.config/SOFA/config/` . On Windows:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/AppData/Local/.config/SOFA/config/` . On MacOS:; - `screenshots` location to: `~/Library/Application Support/SOFAData/screenshots/`; - `config` location to: `~/Library/Application Support/.config/SOFA/config/` . These changes have only been tested on Linux. I'm not familiar with MacOS so I don't know what would be the best location. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5096:190,avoid,avoid,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5096,1,['avoid'],['avoid']
Safety,"The error was not detected on CI as nobody was using this `MatrixScale` thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2369:18,detect,detected,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2369,1,['detect'],['detected']
Safety,"The function `buildDampingMatrix` was introduced in #2777. By default, if a component does not implement it, it will call the implementation from `BaseForceField` which calls `addBToMatrix` with a warning message. This is the compatibility layer.; Therefore, I implemented `buildDampingMatrix` everywhere there is no `addBToMatrix` implementation. It will avoid to display the warnings of the compatibility layer and explicit the fact that there is no damping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3948:356,avoid,avoid,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3948,1,['avoid'],['avoid']
Safety,"The function pluginIsLoaded is not behaving as it name suggest and does not detect plugin that have not been loaded using an absolute file path. . See: ; https://github.com/SofaDefrost/plugin.SofaPython3.deprecated/issues/137. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1615:76,detect,detect,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1615,1,['detect'],['detect']
Safety,"The goal was to avoid type conversions by removing explicit types. Instead I took the rigorous returned types and added static_assert when two types are interacting. Curiously, I found out that the templated code (intersection with Sphere) is not called anywhere. Let's see if a known plugin is using it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3287:16,avoid,avoid,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3287,1,['avoid'],['avoid']
Safety,"The idea is to provide tools to write multithreaded code more efficiently. The functions introduced in this pull request allow to apply a function to a range in parallel.; Unit tests are provided.; The newly added functions are used as example in two places:; - GenericConstraintSolver: the code is unique for both sequential and parallel execution; - ParallelHexahedronFEMForceField: no ambiguity: the code is only for parallel execution. But nothing prevent to have a code supporting both sequential and parallel execution. But the component is not totally ready for a merge with HexahedronFEMForceField. Note that it avoids a lot of boilerplate code, hence reducing the complexity of the file. I think this will allow us to write more multithreaded code. In the back, the parallel loop uses a task scheduler and divides the number of elements in `n` ranges, where `n` corresponds to the number of threads in the task scheduler. This is to execute exactly `n` tasks, instead of `m`, if `m` is the number of elements. It avoids the overhead of creating a task for each element. It is more efficient when the number of elements is large. Benchmarks are yet to perform. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3548:620,avoid,avoids,620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3548,2,['avoid'],['avoids']
Safety,"The inheritance link between CollisionResetVisitor and CollisionVisitor and some other had a consequence that ProcessGeometricalData was called multiple times in the FreeMotionAnimationLoop when the free motion and the collision detection where computed in parallel. . Another issue was that we had two time the timers for the substeps of the collision detection in the case of parallel computation : IMO only the AnimationLoop should have timers for global computation made by visitors. Here I remove the one of the Pipeline. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5042:229,detect,detection,229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5042,2,['detect'],['detection']
Safety,"The initial objective of this Pull Request was to fix the scene crash detected in #2047 (https://www.sofa-framework.org/dash/?branch=origin/PR-2047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:70,detect,detected,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,4,['detect'],"['detected', 'detection']"
Safety,"The never-ending quest of eradicating implicit type conversion. This PR contains two things:. 1) Introduction of a user-defined literal for SReal constants.; 2) Avoid implicit conversions. **Introduction of a user-defined literal for SReal constants**. When dealing with constants that should be SReal, I saw the the following behavior in the SOFA code base:. - The `SReal` type is ignored and the constant is considered either as a double or a float, or any other primitive type. Example: `Vector3(1.f, 1.f, 1.f)`, `Vector3(1., 1., 1.)`, or `Vector3(1,1,1)`.; - The constant is C-style cast. Example: `Vector3( (SReal)1, (SReal)1, (SReal)1)`; - The constant is `static_cast`. Example: `Vector3( static_cast<SReal>(1), static_cast<SReal>(1), static_cast<SReal>(1))`. The first option is what we want to avoid. The second option has some problems that the third can solve. However, the third option is ugly, long and can be complex to read. To simplify such expressions, I introduced a user-defined literal. Example: `Vector3(1_sreal, 1_sreal, 1_sreal)`. This PR also fixes some implicit conversions that can be avoided.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3314:161,Avoid,Avoid,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3314,3,"['Avoid', 'avoid']","['Avoid', 'avoid', 'avoided']"
Safety,"The new crash you have is in the `solve` function, trying to access an element of an empty vector (either the solution vector, or the right-hand side vector). The solve function is [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolver.inl#L74), called from [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Iterative/src/sofa/component/linearsolver/iterative/MatrixLinearSolver.inl#L199). . The solveSystem function works in 2 steps: 1) factorize the matrix into LDL, 2) solve the system based on the factorization. As far as I can see, the solving process runs even if the factorization fails. It's probably why you have the crash. A modification to do could be to catch the error in the solveSystem function and not perform the solving. In the meantime, as a quick fix, you can try to set `invertData->n = n;` before leaving the function:. ```cpp; int n = M.colSize();; invertData->n = n;; ```. `invertData->n` would be `=0`, then the [solve function](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolverImpl.h#L160) may run safely.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611:1347,safe,safely,1347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611,1,['safe'],['safely']
Safety,"The only big GIL locking part i can see is the SML scene loading which mix file loading with costly parsing in python and sofa component creation and initialization in C++. In a future PR it will be very interesting to improve this, using python only as a glue and totally avoiding heavy processes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313640015:273,avoid,avoiding,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313640015,1,['avoid'],['avoiding']
Safety,The plugin is not finish at all but is already usable. ; I will improve it in future works but this PR start to be very old so it would be nice to review and push it to avoid propagating the changes.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603#issuecomment-415749827:169,avoid,avoid,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603#issuecomment-415749827,1,['avoid'],['avoid']
Safety,"The preproc define SOFA_WITH_THREADING seems to not be used at all (except in a logger_test) and the cmake `SOFA_WITH_THREADING` option itself is misleading (both the name and the description); ```SOFA_WITH_THREADING ""Compile sofa with thread-safetiness support (PARTIAL/EXPERIMENTAL)``` 🤔 ?. So this PR removes everything related to this option, and as it was not used for some time, ; I did not do any compat/deprecation... EDIT:. After some investigation, it was created to let the user chose if he wants thread safety with the message dispatcher, with this commit https://github.com/sofa-framework/sofa/commit/2aebe06241c6f8b391f0cc3d32b12ed90e40ef96 (did not find the related PR) ; and it disappeared with #1799 (where the message dispatcher will always be thread-safe). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3565:243,safe,safetiness,243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3565,3,['safe'],"['safe', 'safetiness', 'safety']"
Safety,"The scene checker detects when we use a plugin but forgot the ""required plugin"" tag and tells us how to add it in our scene, but without closing the tag. This PR fixes the bug in the suggestion and corrects some typos in error messages in the same file. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/573:18,detect,detects,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/573,1,['detect'],['detects']
Safety,"The scene is not crashing, it timeouts. Obviously lowering the number of CG iterations avoids the timeout but does not solve the problem...; I checked the scene before this PR and it is as slow as after. So why wasn't it timeout-ing before?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359373748:30,timeout,timeouts,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359373748,4,"['avoid', 'timeout']","['avoids', 'timeout', 'timeout-ing', 'timeouts']"
Safety,"The state of vector.h and set.h is a bit messy right now. . A recent PR have added tests to vector & fix several crashes & infinite loop. It appears that the problematic code is also in set.h so a general code factoring is needed. . There is also some details on container refactoring in PR #113 ; Finally it is not very clear what should be in std:: and what should be in sofa::helper:: ...; and there is a lot of code in the .h for only two specialization I see no reason why they shouldn't be make extern and implemented in .cpp. . So this PR is a WIP in which everyone is welcome to contribute. My current todo list is:; - implement tests for set so we can refactor safely. ; - declare int & unsigned int as extern template & move specialization from .h to .cpp for vector & set; - have everything in sofa::helper for consistancy (vector, set, map, pair, list, deque); - fix the problem pointed by @maxime-tournier in #271 in the remove* functions. ; - remove the lines added by hugo ; ```cpp; /// \todo: refactoring of the containers required; /// More info PR #113: https://github.com/sofa-framework/sofa/pull/113; ```; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/278:670,safe,safely,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/278,1,['safe'],['safely']
Safety,"The status indicating if it is input or output is not hard coded in the data structure.; During the STC it was decided that we should have it. Several category of inputs have been decided: input, output, input-and-output, unknow (see the STC reports for the precise naming). To me the easiest is to export everything with the ""unknow"" type (which indicate ... the ""we don't know exactly"" current state. As you pointed for DataEngine, you can then use the fact a data is part of the ""Input"" / ""Output""... but it is only an heuristic. It is possible to have better heuristic... eg: detecting through the DDG superclass of a data field if this data is an input in an update callback.... but I think this is too complex... and purposeless given that the information should be added (soon) in BaseData.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4775#issuecomment-2178390642:580,detect,detecting,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4775#issuecomment-2178390642,1,['detect'],['detecting']
Safety,"The test timeout should be done directly in the CI bash scripts, by running the gtest executables using the command `timeout` that can even send a signal to be able to print a specific message on the dashboard.; https://www.gnu.org/software/coreutils/manual/html_node/timeout-invocation.html. Maybe it makes more sense that @guparan or @bcarrez have a look at it rather than @maxime-tournier?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289721814:9,timeout,timeout,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289721814,3,['timeout'],"['timeout', 'timeout-invocation']"
Safety,"The usage of `char*` leads to eventual null pointers which may lead to segfaults. Using `std::string` would be easier and safer for; - `BaseData::name`; - `BaseData::ownerClass`; - `BaseData::group`; - `BaseData::widget`; - `BaseData::helpMsg`. After doing this, don't forget to revert #1090 (temporary fix).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1092:122,safe,safer,122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1092,1,['safe'],['safer']
Safety,"There are a few tests/scenes throwing the new warnings (especially with the image plugin), but this was to be expected I guess.; Strangely, I would have predicted Jenkins/gtest to consider those as ""FAILED"" (and having some additional failures in the summary) but it does not. 🤔",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2113900167:153,predict,predicted,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2113900167,1,['predict'],['predicted']
Safety,There is a problem in how the tests are implemented in FileMonitor. ; This make the test to fail randomly on macosX because of a too long run (or too short delay). ; To fix that the delay should be replaced with the timeout parameter.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/140:216,timeout,timeout,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/140,1,['timeout'],['timeout']
Safety,There is few new warning during the compilation process thats need to be fixed. . These warnings are really minor details but I think it is important to do our best to decrease the general number of trivial warnings so that we can more efficiently detect the non-trivial one.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/276#issuecomment-304642032:248,detect,detect,248,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/276#issuecomment-304642032,1,['detect'],['detect']
Safety,There seems to be a memory leak when using LocalMinDistance for collision detection. This can be seen if the memory usage is monitored when there is continuous collision between two objects. This has been checked with v15.12 and the latest changes from master branch.The code has been checked for LocalMinDistance as well as through valgrind tool but no result till now. Refer to the post on the forum:; [https://www.sofa-framework.org/community/forum/topic/memory-leak-when-using-localmindistance/](https://www.sofa-framework.org/community/forum/topic/memory-leak-when-using-localmindistance/),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5:74,detect,detection,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5,1,['detect'],['detection']
Safety,"There were only a few tests on NameDecoder in `SofaKernel/modules/SofaCore/SofaCore_test/objectmodel/BaseClass_test.cpp`. I created a dedicated file to test the main functions in NameDecoder. It required changes in some of the algorithms to comply with the added test:. - Support of nested classes; - Spaces are processed in the first pass of the algorithm, instead of adding a second pass just for spaces. This is also to detect when spaces must be skipped or not (always skipped before). For example, it must not be skipped in `unsigned int`.; - Returned string get a balanced number of opening chevrons and closing chevrons. Note: Anonymous namespaces are not supported (yet?).; Note 2: The algorithms in `NameDecoder` are complicated to read. It is hard to anticipate the result. IMO, it's due to the fact that it is written to be executed in a single pass. I think allowing multiple passes would help to read and debug these functions. `decodeTemplateName` was never called. I call it now in `getOverridableTemplateName()` instead of assuming there is no template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2380:423,detect,detect,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2380,1,['detect'],['detect']
Safety,"These 2 classes were not compiled/used anymore for at least more than 1 year.; So I consider the ""deprecation""/""removal"" process as expired; and remove them from the SOFA codebase.; (and especially to avoid for good the confusion with helper::system::{Plugin/PluginManager}. Removed last files using these mechanism as well (some plugins); those files were not compiled so no consequence at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1612:201,avoid,avoid,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1612,1,['avoid'],['avoid']
Safety,"These references were not removed in; - #3960 . There should be errors like; `CMake Error: File applications/plugins/Flexible/ExternalProjectConfig.cmake.in does not exist.` occuring. 🤐. Not sure why the CI did not detect this, maybe because of CMake caches not cleaned or something like that. EDIT: seems it depend on some factors, I get ""only"" warning on other configuration; `applications/plugins/Compliant does not exist and will be ignored.`; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3980:215,detect,detect,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3980,1,['detect'],['detect']
Safety,This PR adds a few boolean Data parameters for the user to have ore control when using the component:; - stopAtNodeToParse: to avoid considering children nodes of the node to be parsed.; - skipJ1tKJ1: to avoid computing the contribution of the first object (useful when several MMMappers are used and you want to avoid to compute several time the same contribution); - skipJ2tKJ2: to avoid computing the contribution of the 2nd object. It adds also a few templates and corrects a bug (mat12.matrix->add instead of mat22.matrix->add). Enjoy!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/882:127,avoid,avoid,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/882,4,['avoid'],['avoid']
Safety,"This PR aims to handle in a more ""contained"" way the components implemented in different plugins to avoid having everything mixed into the ObjectFactory. . The PR is composed of two aspects. 1) **Registering components by ""plugin.classname"" instead of ""classname"" in the ObjectFactory**. The factory currently access component by their classname only causing collision when two component have the same name/template. To avoid this, the PR add the plugin name as a prefix for the Factory'key. As an exemple, a component created with *<OglModel>* in the past is now referenced as *<SofaOpenglVisual.OglModel>*. Backward compatbility is possible by adding into the factory registration an alias mapping between ; new names and old name;; Eg:; ```; ""OglModel"" => ""SofaOpenglVisual.OglModel""; ```. 2) **Importing plugin and component *à la* python**; A new component called *FromComponent* is added to handle the loading of plugin and the import of object. . Examples of use:; ```; 	 # To make only <OglModel> accessible in the scene; 	<From plugin=""SofaOpenglVisual"" import=""OglModel""/>; 	<OglModel/>. 	# To add ""custom"" name in a scene ; 	<From plugin=""SofaOpenglVisual"" import=""OglModel"" as=""RenderingModel""/>; 	<RenderingModel/>. 	# To be a super lazy man and import everything; 	<From plugin=""SofaOpenglVisual"" import=""*""/>; ```. I didn't implemented multiple object imports so currently it is necessary to do ; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel""/>; <From plugin=""SofaOpenglVisual"" import=""GlslShader""/>; ```; But we could as in python with:; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel, GlslShader""/>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512:100,avoid,avoid,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512,2,['avoid'],['avoid']
Safety,"This PR contains small changes to runSofa. . One is to save & restore the scenegraph state in the live-coding mode. This fix avoid to constantly have to expand/collapse things to restore the view in a manageable state when we reload. . The second change is to fix a problem. When Data fields that belong in the ""Infos"" results in having to ""Infos"" panel in the object inspector. So this PR add the Data fields which are in the Info groups to the existing ""Infos"" panel instead of creating a second one with the same name. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/657:125,avoid,avoid,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/657,1,['avoid'],['avoid']
Safety,This PR fix the crash. But some work is needed on the meshloader to avoid this behavior.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/626#issuecomment-380378430:68,avoid,avoid,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/626#issuecomment-380378430,1,['avoid'],['avoid']
Safety,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4273:177,avoid,avoid,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273,1,['avoid'],['avoid']
Safety,"This PR fixes the `init()` of RigidRigidMapping when using `globalToLocalCoords=True` (your positions are initially expressed wrt the global frame) with `repartition` (your child's positions are mapped to the parent's positions using this description). . When we look at the code, we can see that someone already fixed the `init()` but only for one of three cases. ; This PR fixes the two forgotten cases. . **EDIT**. This PR:. RigidMapping:; - adds template <Rigid3,Rigid3> with tests ; - this change required some updates/additions in RigidCoord and RigidDeriv; - cleans variables name (d_, m_), which is **breaking** . RigidRigidMapping:; - sets the component as deprecated (with instruction to fix the scene) ; - fixes `init()` when using `globalToLocalCoords=True` with `repartition` ; - adds tests; - cleans variables name (d_, m_), which is **breaking**; - adds vectors' size checks; - adds component state checks; - removes ""fake"" vectors' size checks: if the sizes mismatch it should be detected during the initialization and the component should be in an invalid state. If the sizes change during execution, it is not enough to just check the size, the component should be in an invalid state because it impacts many other things... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3680:996,detect,detected,996,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680,1,['detect'],['detected']
Safety,"This PR follows @marques-bruno work on https://github.com/sofa-framework/sofa/pull/909. - add INCLUDE_SOURCE_DIR parameter to sofa_generate_package; - rename INCLUDE_ROOT_DIR to INCLUDE_INSTALL_DIR (avoid confusion with INCLUDE_SOURCE_DIR). The idea is to permit this:; ```; sofa_generate_package(; NAME SofaSparseSolver ; VERSION ${PROJECT_VERSION} ; TARGETS SofaSparseSolver; INCLUDE_SOURCE_DIR ""src/SofaSparseSolver""; INCLUDE_INSTALL_DIR ""SofaSparseSolver/SofaSparseSolver""; ); ```; to obtain for example an install tree like this; ```; install; include <-- include_directories here exposes ALL module headers; SofaBaseTopology; header.h; SofaSparseSolver <-- include_directories here exposes ONLY SofaSparseSolver headers; SofaSparseSolver; header.h; SofaValidation; header.h; ...; ```; which is needed if we want to cleanly separate SOFA include directories. In a future PR I'd like to rework all SOFA install tree based on this INCLUDE_SOURCE_DIR + INCLUDE_INSTALL_DIR mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/951:199,avoid,avoid,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/951,1,['avoid'],['avoid']
Safety,"This PR gives the ability to exchange images between different threads in the MultiThreading plugin. It would be especially usefull for multithreading a camera grabber component and other components (for instance computer vision algorithms). In more details: ; - It consists in adding, in the DataExchange component, exchanges of image data types (ImageUC, ImageUS, ImageF). It involves a depedency with the image plugin, handled in the CMakeLists through a preprocessor directive (WITH_IMAGE) defined in config.h.in.; - A simple example passing an image loaded from an ImageContainer component (thread 1) to an ImageViewer component (thread 2), to display the image in the GUI, is added.; - An issue with OpenGL in the draw() function in the Kinect component in the image plugin has also been fixed, by using the SOFA_NO_OPENGL directive (in the CMakeLists and in Kinect.h). Indeed, with the lib FREENECT detected, the OpenGL functions in draw() may not be compiled given the OpenGL support of SOFA. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/770:906,detect,detected,906,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/770,1,['detect'],['detected']
Safety,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4268:50,detect,detect,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268,4,"['avoid', 'detect', 'safe']","['avoid', 'detect', 'safety']"
Safety,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4580:478,safe,safe,478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580,2,['safe'],['safe']
Safety,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4219:221,detect,detection,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219,1,['detect'],['detection']
Safety,"This PR is a first step for the issue #3952. . I modified the names of the constraints following the rule that we agreed upon. Still need to change spring force-fields that can behave as penalties. . The changes where straight, not more though than adding the type into the name was done. If any name doesn't fit your standard, feel free to suggest any changes. . This PR also add a componentRenamed mechanism that creates an alias automatically for renamed objects. TODO:. - [x] Edit Sofa/framework/Helper/src/sofa/helper/ComponentChange.cpp; - [x] Add a API in ComponentChange.cpp for Renamed component (avoiding to add an alias manually in the class); - [x] Move the C++ alias in the old header; - [x] Change name of projective constraints strating by `ProjectOn`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4302:606,avoid,avoiding,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4302,1,['avoid'],['avoiding']
Safety,This PR is an attempt to solve the problem pointed in Issue #193 . Problem summary: ; Currently in runSofa when reloading the scene only the ScriptController's are reloaded but not the python code imported by the controllers. . This PR:; solve the issue which avoid to restart runSofa each time an imported module used by a ScriptController is changed. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/198:260,avoid,avoid,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/198,1,['avoid'],['avoid']
Safety,"This PR is certainly the biggest contribution from InSimo merge sprint. ; It will be further discussed during STC#3. ## issofa_multithreading. ### New features; - Add logGraphUpdates / logDataUpdates global variable in objectmodel to be able to debug multi-threading issue (not declared in headers, temporary until a better design is proposed); - Add a flag d_threadsafevisitor in solvers to disable writing in mechanicalstates of InteractionForceField in MechanicalVReallocVisitor/MechanicalVFreeVisitor as it might crash in multithreaded context; - Add `Contact::computeResponse()` and `Contact::finalizeResponse()` to separate thread-safe from sequential parts of the response computations; - Implement thread-safe Data engine/links updates by adding a lock while calling update().This requires that requestUpdate() or requestUpdateIfDirty() be called instead of update() directly, which is now protected.Bonus side effect is that it no longer matter where or if engines call cleanDirty() in their update method.; - Update all engines to new thread-safe design; - Add execution info in Task and index in WorkerThread; - Add support for multithreaded task logging (for visual profiling); - Add some const correctness in getColor and getName methods. ### Improvements; - Remove ClassInfo, deprecated in favor of BaseClass, and make sure all static instances are initialized while registering objects in the factory, to FIX ""pure virtual call"" crashes with visual c++ in multi-threaded contexts; - Replace `Creator<Contact::Factory,` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change B",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:637,safe,safe,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,2,['safe'],['safe']
Safety,This PR is for FileMonitor on Mac. ; Added a test in FileMonitor_test to improve test coverage.; Required also to update FileMonitor_test to comply with some osx limitations (ie. delay before file change can be detected by the program).,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/102:211,detect,detected,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/102,1,['detect'],['detected']
Safety,This PR is not supposed to be merged...the idea was to show on the CI in which components there is not an even number of begin/end of accessors. But the CI is not working anymore on it and has not kept the compilation log. Now after a quick reading I see several good things in this PR:; - a new fonction in BackTrace to get the trace; - a way to systematically detect components rely on an invalid behavior in begin/end pairs. But given how many componnents have problem this is far too much error messages. ; ; Maybe we could just enable the systematic test using NDEBUG and have that merged.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1326#issuecomment-680744834:362,detect,detect,362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1326#issuecomment-680744834,1,['detect'],['detect']
Safety,"This PR will be further discussed during STC#3. ## issofa_bugfix. ### Cleans; - BaseObject: Output message in serr for required datas. Error word should be reserved for messages that will make the application fail.; - RayTriangleVisitor and SceneLoaderFactory: clean warnings; - ParticlesRepulsionForceField: Add empty implementation of addKToMatrix to get rid of console warnings. ### Bugfixes; - AttachConstraint: fix crash when indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stif",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:612,avoid,avoid,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,2,['avoid'],['avoid']
Safety,"This PR will be further discussed during STC#3. ## issofa_topology. ### New features; - UncoupledConstraintCorrection : add option to disable handling of topological changes for compliance vector; - Container : add accessor to the topology type; - SubsetMapping : add resizeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compati",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/217:616,detect,detected,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/217,1,['detect'],['detected']
Safety,"This aims to tackle one point of #4221 . Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; This PR propose to replace tinyxml embedded library, which is unmaintained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240:797,avoid,avoiding,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240,1,['avoid'],['avoiding']
Safety,"This branch is to prepare the coding sprint. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and 425 . Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/429:845,avoid,avoid,845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/429,1,['avoid'],['avoid']
Safety,"This branch's purpose is to create artificial targets when compiling to avoid the need of installing sofa to be able to use compiled sofa library in external project compilation. . This was needed by @courtecuisse in the development of external library. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4135:72,avoid,avoid,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4135,1,['avoid'],['avoid']
Safety,"This class is using a common ""ugly"" design pattern often found in Sofa which mix 1) the actual object implementation, 2) is singleton exposure, and 3) a static API. . My suggestion when we see this kind of pattern is to refactor it to separate the different concerns so that the thread safetyness is not mixed with implementation. . Here is a suggested design that does not break the API (to much):; In the .h; ```; /// Tag factory is only the public API forwarding to a totally private implementation. ; class TagFactory; {; public: ; static unsigned int getID(std::string name);; static std::string getName(unsigned int id);; };. In the .cpp; ```cpp; /// Non thread safe class (and there is no reason why it should) because only the singletong should be protected.; class TagFactoryImpl ; {; public:; std::string getId(int id);; void getName(); ; };. TagFactoryImpl::TagFactoryImpl::getInstance(); {; /// ...; }. std::string TagFactory::getName(); {; lock_mutex();; getSingleton()->getName(); }. std::string Tag::Factory::getId(); {; lock_mutex();; getSingleton()->getId() ; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2942#issuecomment-1124715243:286,safe,safetyness,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2942#issuecomment-1124715243,2,['safe'],"['safe', 'safetyness']"
Safety,"This is a comment from @damienmarchal in #413 about deprecation task; __________________________________________; To summary this morning discussion with @guparan, @fredroy, @bcarrez, @StephaneCotin, @bruno-marques , @ErwanDouaille ...let's prepare for the sprint.; ; There is a general envy from people that want to participate to put the efforts to make a lighter version of Sofa. . To match this goal, we discussed a workflow this morning in connection with the branch ; https://github.com/SofaDefrost/sofa/tree/deprecating_components; and issue #346 . Concretely during the sprint we may prepare two kind of tasks:; - deprecating as much as component as possible; - stabilizing as much as component as possible . To deprecate the components we need to make a list with the following information: ; - name, some info why to deprecate it bad/redundant/etc... and the string show to the user to explain what to do/replacement and so on. . To stabilize components we need to integrate the work done in the SofaNG so I let @fredroy & @guparan say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/426#issuecomment-333146181:844,redund,redundant,844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/426#issuecomment-333146181,1,['redund'],['redundant']
Safety,"This is a first attempt to fix our GitHub actions now failing. Solution from : https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3. GitHub Action errors; ```; Run pip install python-graphql-client; error: externally-managed-environment. × This environment is externally managed; ╰─> To install Python packages system-wide, try apt install; python3-xyz, where xyz is the package you are trying to; install.; ; If you wish to install a non-Debian-packaged Python package,; create a virtual environment using python3 -m venv path/to/venv.; Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make; sure you have python3-full installed.; ; If you wish to install a non-Debian packaged Python application,; it may be easiest to use pipx install xyz, which will manage a; virtual environment for you. Make sure you have pipx installed.; ; See /usr/share/doc/python3.12/README.venv for more information. note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.; hint: See PEP 668 for the detailed specification.; ``` . We will therefore investigate in an upcoming PR the use of virtual Python environment and see how it behaves when the action runs itself a python script",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5065:1111,risk,risk,1111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5065,1,['risk'],['risk']
Safety,"This is a first attempt to fix our GitHub actions now failing. Solution from : https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3. GitHub Action errors; ```; Run pip install python-graphql-client; error: externally-managed-environment. × This environment is externally managed; ╰─> To install Python packages system-wide, try apt install; python3-xyz, where xyz is the package you are trying to; install.; ; If you wish to install a non-Debian-packaged Python package,; create a virtual environment using python3 -m venv path/to/venv.; Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make; sure you have python3-full installed.; ; If you wish to install a non-Debian packaged Python application,; it may be easiest to use pipx install xyz, which will manage a; virtual environment for you. Make sure you have pipx installed.; ; See /usr/share/doc/python3.12/README.venv for more information. note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.; hint: See PEP 668 for the detailed specification.; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5061:1111,risk,risk,1111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5061,1,['risk'],['risk']
Safety,"This is a tentative to refactor `TetrahedronFEMForceField` for better readability. All the FEM methods have been dispatched into dedicated files. The methods are now classes sharing the same interface (polymorphism), called by the component. Advantages:; - `TetrahedronFEMForceField` is smaller; - `TetrahedronFEMForceField` had many similar codes (often identical). This is now avoided as all common code are in the base classes.; - It is easier to read the differences between the different FEM methods.; - We could imagine having a factory of FEM methods for `TetrahedronFEMForceField`. Then, the component could be extended in plugins by adding more methods into the factory. To do:. - [ ] Clean; - [ ] Move some class members from `TetrahedronFEMForceField` to `TetrahedronFEMForceFieldImpl`; - [ ] Restore initial performances; - [ ] Fix broken features such as drawing rotations; - [ ] If everyone agrees, remove the assembled methods. It adds complexity while the resulted matrix is not used.; - [ ] Adapt (if necessary) the derived classes (multithreading, CUDA etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2550:379,avoid,avoided,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2550,1,['avoid'],['avoided']
Safety,"This is a way to explicit the narrowing conversions in SOFA. Instead of using the classic `static_cast`, this function can check if the value changed after the cast. It can happen in case of narrowing conversion, when the target type is smaller than the source type.; Since the check must be performed at run-time (affects the performances), it is enabled only in DEBUG mode. The idea is to use this cast everywhere the compiler warns about possible data loss and it's not possible to avoid a narrow conversion (e.g. by adapting both target and source types). An example is provided in this PR in `MeshGmsh`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2590:485,avoid,avoid,485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2590,1,['avoid'],['avoid']
Safety,"This is an old work that has already been merged into ng branch (see #620) but since the NG task is paused for now I think it would be appreciable to have this in master. The idea is to remove SofaComponent* from modules (because they are not modules) and put them next to SofaAllCommonComponents. Concretely, this PR does:; - Move SofaComponent* next to SofaAllCommonComponents; - Rename SofaAllCommonComponents into SofaComponentAll; - Rename ""packages"" into ""collections"" to avoid confusion with CMake packages like SofaGeneral, SofaFramework, ...; - Somes fixes in SofaPreconditioner and SofaSparseSolver completing #1137 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1155:478,avoid,avoid,478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1155,1,['avoid'],['avoid']
Safety,"This is to avoid non-ascii characters. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4901:11,avoid,avoid,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4901,1,['avoid'],['avoid']
Safety,"This issue comes up from a SOFA-meeting discussion.; The question is how to homogenize and improve the check of data initialization (e.g. out of bounds values etc) in SOFA while avoiding increasing the computation time at the init phase. Consequence a more robust SOFA and possibility of avoiding long init phases. An option has been proposed and consists in creating a new specific virtual function ""check"" in which these checks would be done. To avoid over-computation, this function could be skipped to avoid huge computation time for SOFA-based applications. Could be [BREAKING] the API. Interested ? Any remark ? @damienmarchal @bcarrez @matthieu-nesme @francoisfaure @JeremieA",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/265:178,avoid,avoiding,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/265,4,['avoid'],"['avoid', 'avoiding']"
Safety,"This line is the origin of our problem: https://github.com/sofa-framework/sofa/blob/9c85b17b55f4cd1a14927090754004aaba51b802/SofaKernel/framework/sofa/helper/system/PluginManager.cpp#L103; This line was creating entries in m_pluginMap because pluginPath is not always a path.; It is not a path when we are reading ""plugin_list.conf.default"" file to auto-load plugins at startup. This PR adds getPlugin method to avoid future operator[] mishandlings. It gets a loaded plugin by paths OR names (even if the map is based on paths). Conclusion: **`operator[]` on maps should be globally avoided for read access**. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/580:412,avoid,avoid,412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/580,2,['avoid'],"['avoid', 'avoided']"
Safety,"This pr clean most of warnings; The code has never been changed in terms of runtime, but sometimes one may thing that warning were here to detect potential error (passthrough in a case for instance).; The main remaining warning is the alreadydefine class but i will do that in a separate pr since I'm scared it changes behavior on other platforms. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1549:139,detect,detect,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1549,1,['detect'],['detect']
Safety,"This prevents creation of nodes / components with empty `names`, when instantiated in a ""non-conventional"" way:. ```py; py:; node.createChild(''); node.createObject('MyComponent', name=''); ```. ```xml; xml:; <Node name=""""></Node>; ```. By default, if `name` is not provided, unnamed is set in `name`. but if `name` is forcefully set to `""""`, there's currently no safeguards. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1009:364,safe,safeguards,364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1009,1,['safe'],['safeguards']
Safety,"This scene using the Mouse interaction (*Edit->MouseManager-> attach with bilateral constraint*) illustrates the bug @alxbilger : . ``` xml; <?xml version=""1.0"" ?>; <Node name=""lroot"" gravity=""0 -9.81 0"" dt=""0.02"">; <RequiredPlugin pluginName=""Sofa.Component.Constraint.Projective Sofa.Component.LinearSolver.Iterative Sofa.Component.Mapping.Linear Sofa.Component.Mass Sofa.Component.ODESolver.Backward Sofa.Component.SolidMechanics.FEM.Elastic Sofa.Component.StateContainer Sofa.GL.Component.Rendering3D Sofa.Component.Topology.Container.Dynamic Sofa.Component.IO.Mesh Sofa.Component.Constraint.Lagrangian.Solver Sofa.Component.Constraint.Lagrangian.Correction Sofa.Component.Collision.Response.Contact Sofa.Component.Collision.Geometry Sofa.Component.Collision.Detection.Intersection Sofa.Component.Collision.Detection.Algorithm Sofa.Component.AnimationLoop"" />; <DefaultVisualManagerLoop/>. <FreeMotionAnimationLoop />; <!-- <LCPConstraintSolver tolerance=""0.001"" maxIt=""1000""/> -->; <GenericConstraintSolver tolerance=""0.001"" maxIterations=""1000"" />. <DefaultPipeline name=""CollisionPipeline"" verbose=""0"" />; <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""collision response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection/>. <MeshOBJLoader name=""LiverSurface"" filename=""mesh/liver-smooth.obj"" />. <Node name=""Liver"" gravity=""0 -9.81 0"">; <EulerImplicitSolver name=""cg_odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver name=""linear solver"" iterations=""25"" tolerance=""1e-09"" threshold=""1e-09"" />; <MeshGmshLoader name=""meshLoader"" filename=""mesh/liver.msh"" />; <TetrahedronSetTopologyContainer name=""topo"" src=""@meshLoader"" />; <MechanicalObject name=""dofs"" src=""@meshLoader"" />; <TetrahedronSetGeometryAlgorithms template=""Vec3d"" name=""GeomAlgo"" />; <DiagonalMass name=""computed using mass density"" massDensity=""1"" geometryState=""@dofs"" topology=""@topo""/>; <TetrahedralCorotationalFEMForceField template=""Vec3d"" name=""FEM"" method=""",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1169794916:763,Detect,Detection,763,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1169794916,2,['Detect'],['Detection']
Safety,This should avoid confusion in constraint resolution when mixing integration factors.; Let's see how this affect the CI. This affects the UncoupledConstraintCorrection : the flag _useOdeSolverIntegrationFactors_ is now true by default. This enforces to respect values returned by the ODESolver. See this [forum topic](https://www.sofa-framework.org/community/forum/topic/bilateralinteractionconstraint-reduces-gravity-by-100x/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369:12,avoid,avoid,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369,1,['avoid'],['avoid']
Safety,This should avoid issue #768. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/778:12,avoid,avoid,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/778,1,['avoid'],['avoid']
Safety,This should avoid us to scroll through the entire build output searching for a crashed unit test (often due to a segfault).; It is just re-printing the output that was already printed. Some dump is still needed to debug the crash (see PR #191). This PR fixes issue #149. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/195:12,avoid,avoid,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/195,1,['avoid'],['avoid']
Safety,"This version is a following the effort started in #1605 and #1611 to clean TypeInfo. . In #1611 I tried to remove the hard dependency to all typeinfo and ODR violation by using the TypeInfoRegistry to get ; the typeinfo. The missing types were detected at runtime... In this version I found what is actually a much easier solution that removes the ODR violation and removes the need to typeinforegistry. . There is also two positive sides effects I see:; - in #1611 the missing types (one not having a datatype) were detected at runtime while in this one they are detected at link time with a single message like the one:; ""; undefined reference to 'sofa::core::objectmodel::Data<sofa::helper::vector<sofa::core::topology::Topology::Pyramid>::getValueTypeInfo() ; ""; - the mechanism is combined with the systematic use of declaring extern class Data<MyType>. The TypeInfo registration/generation is done where the Data<MyType> is not declared as extern. Comments welcome,; D. ; PS: I was also playing with Data/TData but this is for another PR so you can skip that part. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1632:244,detect,detected,244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1632,3,['detect'],['detected']
Safety,"This will avoid updating each year the header, thus polluting the history of the code.; Update list of authors of SOFA. Perl code used for additional cleaning:; ```batch; perl -0777 -i -pe ""s/((\*){78}\/\n)((\/)(.*?)(\n)|\n|(\s*?)\*(.*?)(\n))/\1/s""; ```. Following files could also be discussed:; - SofaKernel/modules/SofaBaseCollision/IntrCapsuleOBB.inl; - SofaKernel/modules/SofaHelper/src/sofa/helper/RandomGenerator.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/gl/Trackball.cpp // h ; - SofaKernel/modules/SofaHelper/src/sofa/helper/polygon_cube_intersection/fast_polygon_cube_intersection.cpp // h; - applications/projects/meshconv/meshconv.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1375:10,avoid,avoid,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1375,1,['avoid'],['avoid']
Safety,Those scenes were not tested? How did you detect the error?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489635041:42,detect,detect,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489635041,1,['detect'],['detect']
Safety,"Threshold and epsilon to go ..; However, hard to detect them. Any suggestion ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/799#issuecomment-592157825:49,detect,detect,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/799#issuecomment-592157825,1,['detect'],['detect']
Safety,"Timeout on tests was disabled in 2bc5db53 with commit message ""I have the intuition that this timeout mess might be the reason why continuous builds on Windows are so long. Let's see...""; Should we re-enable this?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289726033:0,Timeout,Timeout,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289726033,2,"['Timeout', 'timeout']","['Timeout', 'timeout']"
Safety,"Title says all.; Not detectable on the CI unfortunately.; Thanks to @alxbilger for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2841:21,detect,detectable,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2841,1,['detect'],['detectable']
Safety,"To avoid NaN propagation when a wrong constraint is created using barycentricMapper and CreatePointLine. Also add a small changes in regularGrid done during debug division by 0. fix https://github.com/sofa-framework/BeamAdapter/issues/55 (does it works across repo?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3383:3,avoid,avoid,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3383,1,['avoid'],['avoid']
Safety,"To avoid this situation, we can convert this lambda to a method. Let's keep this issue open. I'll add the flag good first issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4283#issuecomment-1798303584:3,avoid,avoid,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4283#issuecomment-1798303584,1,['avoid'],['avoid']
Safety,To fix the last test I had to be able to detect that some data are child of BaseImage. So I have added inheritance mecanism in the DataTypeInfoWrapper.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1605#issuecomment-729713330:41,detect,detect,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1605#issuecomment-729713330,1,['detect'],['detect']
Safety,"To move forward in order to be ready for c++20 modules we need to clean the dependency graph of SOFA. This PR is going in this direction by removing most of the dependency to BaseVector.h, BaseMatrix.h and StringUtils.h. . In SOFA we often use this pattern; ```cpp; class MyClass; {; public:; typedef int Index; ; };; ``` . Which impose a dependency to the full MyClass definition to manipulate indices. ; I design pattern avoiding this problem is used in the PR. This PR work as the following: ; ```cpp; /// Forward declaration; class MyClass;; typedef int MyClassIndex;. /// Definition ; class MyClass; {; public:; typedef MyClassIndex Index; ; };; ``` . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1509:423,avoid,avoiding,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1509,1,['avoid'],['avoiding']
Safety,"To register the data type info into the TypeInfoRegistry I used partial specialization of the Data class. ; The default implementation of AbstractTypeInfoRegistration is using the old code system (which imply a dependency to all the TypeInfo_xxxx.h). . For progressive migration to new typeinfo system, the selected typeinfo are specializating their custom AbstractTypeInfoRegistration. This custom registration is using the new system. To make sure that the partial specialization is used, the migrated types are declared as extern so we are sure there is a single registration. . An additional advantage of explicit extern declaration of Data is that this avoid bloating the compiler with all the data type to instanciate in every compilation unit. . Done:; - Data[bool]; - Data[RGBAColor] . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3289:658,avoid,avoid,658,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3289,1,['avoid'],['avoid']
Safety,"To summary this morning discussion with @guparan, @fredroy, @bcarrez, @StephaneCotin, @bruno-marques , @ErwanDouaille ...let's prepare for the sprint.; ; There is a general envy from people that want to participate to put the efforts to make a lighter version of Sofa. . To match this goal, we discussed a workflow this morning in connection with the branch ; https://github.com/SofaDefrost/sofa/tree/deprecating_components; and issue #346 . Concretely during the sprint we may prepare two kind of tasks:; - deprecating as much as component as possible; - stabilizing as much as component as possible . To deprecate the components we need to make a list with the following information: ; - name, some info why to deprecate it bad/redundant/etc... and the string show to the user to explain what to do/replacement and so on. . To stabilize components we need to integrate the work done in the SofaNG so I let @fredroy & @guparan say more about that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-332496965:730,redund,redundant,730,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-332496965,1,['redund'],['redundant']
Safety,Turn ForceField init method as final and internally call a delegate fonction doInit which can be overide. This is to avoid adding a call super in each forcefield as ForceField::init has to be called in the current api. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1506:117,avoid,avoid,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1506,1,['avoid'],['avoid']
Safety,Two interface for both static and dynamic topologies but they are identitical !. 1. Looking for removing all getMeshTopologyLink with getMeshTopology; 2. Then remove getMeshTopologyLink safely. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1297:186,safe,safely,186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1297,1,['safe'],['safely']
Safety,Two minor changes:; - Remove FixedConstraint redundant with LinearMovementConstraint (on same DOFs); - Improve warning comment in MeshMMass when using explicit resolution (accFromF) with non-lumped sparse matrix. NOTE: I realized no sparse MassMatrix can therefore be used in explicit formulation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/983:45,redund,redundant,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/983,1,['redund'],['redundant']
Safety,"Two minor cleanings:; - clean dirty codes using `NDEBUG` to avoid warning and use `SOFA_UNUSED`; - remove last occurrence of SOFA_DEBUG . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4971:60,avoid,avoid,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4971,1,['avoid'],['avoid']
Safety,"UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [PlaneForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [HexahedronFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; </Node>. <VisualStyle displayFlags=""showBehaviorModels showForceFields"" />. <DefaultAnimationLoop/>; <DefaultVisualManagerLoop/>. <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <!-- A constant sparsity pattern is assumed, but the presence of PlaneForceField invalid this assumption; Indices checking is enabled in order to detect that the pattern is not constant.; As soon as the pattern is no longer constant, insertions in the matrix are ignored.; Since it happens for all forces from PlaneForceField, they can be considered semi-explicit.; -->; <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix"" name=""A"" printLog=""true"" checkIndices=""true""/>; <EigenSimplicialLDLT template=""CompressedRowSparseMatrix"" linearSystem=""@A""/>; <MechanicalObject name=""DoFs"" />; <UniformMass name=""mass"" totalMass=""320"" />; <RegularGridTopology name=""grid"" nx=""4"" ny=""4"" nz=""20"" xmin=""-9"" xmax=""-6"" ymin=""0"" ymax=""3"" zmin=""0"" zmax=""19"" />; <BoxROI name=""box"" box=""-10 -1 -0.0001 -5 4 0.0001""/>; <FixedProjectiveConstraint indices=""@box.indices"" />; <HexahedronFEMForceField name=""FEM"" youngModulus=""4000"" poissonRatio=""0.3"" method=""large"" />; <PlaneForceField name=""planeForce"" stiffness=""1000"" damping=""20"" normal=""0 1 0"" d=""-3"" showPlane=""true""/>. </Node>; ```. Note ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4428:2318,detect,detect,2318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428,1,['detect'],['detect']
Safety,"Unix timeout command is now accessible in Windows VMs (using ""Git for Windows"" Bash). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/379:5,timeout,timeout,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/379,1,['timeout'],['timeout']
Safety,"Unless we are packaging the installation files, remove the automatic installation of external system libraries (glew, boost, etc.). This was messing with out-of-tree plugins compilation as the installed; external libraries were hiding the system's ones. Example of CMake warnings from the out-of-tree plugins:. ```cmake; Cannot generate a safe runtime search path for target MyProject; because files in some directories may conflict with libraries in implicit; directories:. runtime library [libGLEW.so.2.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_filesystem.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_program_options.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_thread.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_date_time.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_chrono.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_system.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_atomic.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; ```. See https://github.com/sofa-framework/sofa/issues/1153 for more details. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test fai",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1387:339,safe,safe,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1387,1,['safe'],['safe']
Safety,Update doc on collision detection further to #2030,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2048:24,detect,detection,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2048,1,['detect'],['detection']
Safety,Update: . - now with a correct implementation of the timeout parameter. Tests should not fail randomly now...; - also updated the filemonitor tests to use this timeout parameter correctly,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/143:53,timeout,timeout,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/143,2,['timeout'],['timeout']
Safety,"Use directly operator[] instead of BaseMatrix::element() (and avoid using virtual functions) which is used extensively in addConstraintDisplacement() which is called a lot through ConstraintSolvers.; I dont like the way how to detect if the vector is FullVector at run-time (using dynamic_cast) but I did not see a fast way to get this info at compile-time. Bench (3instruments_collis.scn from BeamAdapter), 5000 steps, MSVC2022:; - before: `74.5033 s ( 67.1111 FPS)`; - after: `61.728 s ( 81.0005 FPS)`. A nice 20% speedup. \+ some cleanups; - color array was too long (messing IDE); - print only in dev-mode in LCPConstraintSolver if it did not reach convergence (bothersome). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3231:62,avoid,avoid,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231,2,"['avoid', 'detect']","['avoid', 'detect']"
Safety,"Use of the compatibility layer becomes optional now. Useful if one needs to check if their code is fully v21.06.; ON is the default value for easy-transitioning (for now). It would be nice for one build on the CI to set the option to OFF (to detect PRs still using deprecated headers). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2216:242,detect,detect,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2216,1,['detect'],['detect']
Safety,"Visitor and MechanicalOperations) fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node. -- Notes:. This PR will be further discussed during STC#3. ## issofa_bugfix. ### Cleans; - BaseObject: Output message in serr for required datas. Error word should be reserved for messages that will make the application fail.; - RayTriangleVisitor and SceneLoaderFactory: clean warnings; - ParticlesRepulsionForceField: Add empty implementation of addKToMatrix to get rid of console warnings. ### Bugfixes; - AttachConstraint: fix crash when indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/756:855,avoid,avoid,855,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/756,2,['avoid'],['avoid']
Safety,"Visitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1963:2441,Avoid,Avoid,2441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963,2,"['Avoid', 'avoid']","['Avoid', 'avoid']"
Safety,"Warns the user when a non-symmetric matrix is produced by a non-linear mapping while a symmetric linear solver is used. The message looks like:; ```; [ERROR] [RigidMapping(RigidMapping1)] The geometric stiffness of this mapping is a non-symmetric matrix. It means a linear solver supporting non-symmetric matrices must be used, but it is not the case here. To fix your scene, you have two options: 1) Use a linear solver supporting non-symmetric matrices, 2) stabilize the geometric stiffness with the Data 'geometricStiffness' set to 'Stabilized'; ```. Note that the detection was already considered in the past through a `bool` in the `MechanicalParams`, but not used at all. Note that even if a linear system supporting non-symmetric matrices is used, the exact geometric stiffness computed in `RigidMapping` leads to large stability issues in `examples/Component/LinearSystem/MatrixLinearSystem.scn`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3838:568,detect,detection,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3838,1,['detect'],['detection']
Safety,"We lost more than a week of work recently, because for years in Sofa during initialization the LC_LANG/LANG variables were forced to the safe and sane ""C"" value, but it was removed during a ""refactoring"" (I can look up the id of the commit if that is useful). Since then, you have to expect bugs like this (particularly in closed-source haptic drivers...). I would prefer that we go back to this strategy, instead of finding and fixing all those bugs (some of which we can't fix anyway). The alternative is to ban all use of `atoi/atof/printf/scanf/iostream/...` :(",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/151#issuecomment-281639060:137,safe,safe,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/151#issuecomment-281639060,1,['safe'],['safe']
Safety,"Well I found a fix, it involves `sys.excepthook` to register a toplevel handler for uncaught python errors. In this case I simply abort the test. We should be fine now, but just in case we should also:. 1. limit logging size; 2. limit simulation time for tests. I'll look into the second part. And again, my deepest apologies.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289694371:130,abort,abort,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289694371,1,['abort'],['abort']
Safety,Well done to fix errors introduced in recent previous merge ( not detected in the reviews 😭),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1522#issuecomment-706017298:66,detect,detected,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1522#issuecomment-706017298,1,['detect'],['detected']
Safety,"Well, I guess this isn't thread safe. . One solution could be to simply remove these static variables and create one loopup table per object created (using a good old private class member). It will duplicate the lookup table for each class instance, but seriously, how many `DefaultStyleMessageFormatter` objects can be created in your typical simulation :-P",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642#issuecomment-384919339:32,safe,safe,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642#issuecomment-384919339,1,['safe'],['safe']
Safety,"What I would suggest :; 1. add big visible warnings generated in load() or parse() if `filename` is not empty, stating that this direct loading feature is deprecated as it is redundant with the `MeshXyzLoader` components and will be removed SOON. Bonus point if the warning message show the equivalent xml or python syntax to instantiate the corresponding component and link it.; 2. add an entry in the changelog saying this is now deprecated and will be removed SOON; 3. wait about a year; 4. then finally remove both these methods and the associated `sofa::helper::io::*` classes. It's long in calendar time, but quick and easy in term of code changes !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271674546:175,redund,redundant,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271674546,1,['redund'],['redundant']
Safety,"What about an isOptional() flag...? It may sounds redundant with the isRequired() flag, but a data may not be required and still have a default value. ; Otherwise, what I’m really looking for is a way to say that my data has no default value. It could also just be a hasDefaultValue() flag.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762250139:50,redund,redundant,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-762250139,1,['redund'],['redundant']
Safety,"When a plugin is loaded, the ObjectFactory is populated of Components from this plugin. However, when this plugin is ""unloaded"", it was still possible to create a component from the plugin. This PR detects that the ObjectFactory tries to instantiate an object that is from an unloaded plugin.; It is particularly useful when the initialization of the plugin fails (SofaCUDA for example). When the initialization fails, the plugin is unloaded.; A unit test is provided. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4722:198,detect,detects,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4722,1,['detect'],['detects']
Safety,"When loading a stl file (mesh/pliers_binary.stl) SOFA detects a wrong number of triangles (10712, 4 additional triangles) while other softwares find only 10708. Needs investigation. _Originally posted by @epernod in https://github.com/sofa-framework/sofa/pull/2999#discussion_r895241394_",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3043:54,detect,detects,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3043,1,['detect'],['detects']
Safety,"When new messages are received or the message log is clear the componentState is changed. ; This allows the GUI (or other component) to detect that the object has changed (because its message log grew up). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2397:136,detect,detect,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2397,1,['detect'],['detect']
Safety,"When running a simulation where a node as some specified / set Data, the SimpleAPI does not allow to recover the information since the `m_isSet` data flag is not properly propagated. The problem arose in https://github.com/sofa-framework/sofa/pull/4910. Still digging into it, but it's some kind of blocking",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4911:101,recover,recover,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4911,1,['recover'],['recover']
Safety,"When the scene `GlobalSystemMatrixExporter.scn` was moved, the CI settings were not moved. Because of that, it causes a timeout on Windows on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2579:120,timeout,timeout,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2579,1,['timeout'],['timeout']
Safety,"When you are working on Mac M1, install Qt5 using ` brew install qt@5`, avoid using the official version. @caimingxue @MingshanHe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246:72,avoid,avoid,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1371935246,1,['avoid'],['avoid']
Safety,"When you create a type in python, you may or may not have the properties wrapped around sofa::Data<>. In my particular case, for example, I have several types coded in C++ and exposed to python. I try to avoid using sofa::Data and just expose the properties as python properties. . When you do it this way, in SofaGUI those properties are (obviosuly) not shown. Would be nice to add a way of showing them, maybe using a callback that is added to the component or something like that.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1796:204,avoid,avoid,204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1796,1,['avoid'],['avoid']
Safety,"When you launch ""make install"", CMake will install external dependency binaries (such as boost and glew) into the sofa libraries directory (e.g. the build/install directory). This in turn will be hiding the system binaries when we try to link our project to Sofa, generating the following CMake warnings for every targets that depends on Sofa:. ```; Cannot generate a safe runtime search path for target MyProject; because files in some directories may conflict with libraries in implicit; directories:. runtime library [libGLEW.so.2.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_filesystem.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_program_options.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_thread.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_date_time.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_chrono.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_system.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_atomic.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; ```. Any good reason why we are doing this? Maybe @guparan has an idea?. I understand the use of copying dependencies when **packaging** Sofa, but not for the install command which already has the dependency installed on the system. This is polluting my projects compilation output :-). _____________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1153:368,safe,safe,368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1153,1,['safe'],['safe']
Safety,"Why it is not possible to have with?. Solution:; The installer can detect:; - if there is on the machine, good; - if not, inform the user to download the good package...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454127765:67,detect,detect,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/879#issuecomment-454127765,1,['detect'],['detect']
Safety,"With this PR, I suggest to return barycentric coords to the detection output members. In my use case , these coordinates are used in cutting simulation to create new vertices from ancestor points when propagating a cut.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4226:60,detect,detection,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226,1,['detect'],['detection']
Safety,Would it be easy to add theme to the scene tests for future problem detection?; They were not crashing I guess...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489640989:68,detect,detection,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489640989,1,['detect'],['detection']
Safety,Wouldn't it be possible to add the SVector parsing into the helper::vector by detecting if the first non empty char is a '[' ? This would allow to get rid of svector while preserving it overall functionnality,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-313350380:78,detect,detecting,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-313350380,1,['detect'],['detecting']
Safety,Wrong number of triangles detected in MeshSTLLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3043:26,detect,detected,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3043,1,['detect'],['detected']
Safety,"Yes , for me it's better to create a new PR because the removal of; isMultiGroup() function will affect the LinearSolver and other few files; not only the CollisionGroupManager.; I think I can do it quickly from this branch to avoid conflicts.; I let you know. On Thu, May 23, 2019 at 2:58 PM Hugo <notifications@github.com> wrote:. > Nice Federico, will you PR the removal of the MultiGroup (maybe another; > PR)? if not, I can do it; > Cheers; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/sofa-framework/sofa/pull/1060?email_source=notifications&email_token=AA55OZHW3KLSKL43E6LUPW3PW2IGPA5CNFSM4HOWAPAKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODWCEIMI#issuecomment-495207473>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AA55OZDPDLZSGI2CDTSO5C3PW2IGPANCNFSM4HOWAPAA>; > .; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1060#issuecomment-495254972:227,avoid,avoid,227,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1060#issuecomment-495254972,1,['avoid'],['avoid']
Safety,"Yes @damienmarchal . My opinion is that introducing exception can not be done in one PR without taking the time to design a global API. If we do not only rely on the stl exceptions, we need to define the specs of the desired exception API: for documentation purposes, and most importantly to avoid having two error management systems in parallel and the exception not being well propagated and used. Let 's discuss this tomorrow ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-929278545:292,avoid,avoid,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344#issuecomment-929278545,1,['avoid'],['avoid']
Safety,"Yes, I reported that in the PR related to BaseClass refactoring.; To my understanding Sofa is ""broken by design"" on that aspect. . Broken because the code that create the class object is using template with inner static object to create a singleton. This means that in every .cpp, the templated functions are generated, but, as they have static object in them...they are actually different (which is a kind of ODR violation). This is not a real problem when all the corresponding .cpp are assembled in a single programe because the linker implements a mecanisme to detect ""the duplicated templates instances"" and pick one. But there is no such runtime ""unification"" when working with dynamically loaded shared libraries (plugin) which can cause a lot of troubles. . Changing that means refactoring the whole class introspection system.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1087#issuecomment-1050627891:565,detect,detect,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1087#issuecomment-1050627891,1,['detect'],['detect']
Safety,"You are clearly in a dev state, each time you push a commit it triggers a new build on the CI. I'll put the flag wip again until you tell me that you've finished your fixes to avoid loading the CI.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2084580463:176,avoid,avoid,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2084580463,1,['avoid'],['avoid']
Safety,"You don't need to add checks, later in the code for: ; d_componentState.getValue() == sofa::core::objectmodel::ComponentState::Valid . to avoid crash?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282001758:138,avoid,avoid,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282001758,1,['avoid'],['avoid']
Safety,"You forgot to ask **what** and that's the main point of this issue. - No worries about where, we handle it internally (you can use your Lillois powers to influence the choice though) ;-); - When: tuesday 3 afternoon (setting up and starting) + wednesday 4 whole day (coding like beasts).; - Who: this may influence the tasks but doesn't avoid us to propose everything we want :-) For now I can say we should be around 20-30.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-330850319:337,avoid,avoid,337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-330850319,1,['avoid'],['avoid']
Safety,"You know which vector and which string by looking at the using xD ; No I understand, it's just that in Defrost, we choose to avoid the blurry of having a code full of path ""::"".; But if it's not the rule in Sofa, I will change this PR and stop cleaning like that in Sofa.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/567#issuecomment-358716138:125,avoid,avoid,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/567#issuecomment-358716138,1,['avoid'],['avoid']
Safety,"You mean, you open the tab, simulate and there is no update?; Could you check if clicking on the refresh button on the bottom update the values?; I guess the gui is not calling ""continuous update"" on the Data to avoid slowing down the simulation but I'm not expert of the DataWidget.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258:212,avoid,avoid,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3484#issuecomment-1315484258,1,['avoid'],['avoid']
Safety,"You suggest to avoid wasting time normalizing a unit vector in order to speed up computations. The solution requires not to slow down the other operations. For example, adding a bool in Vec.h would add an extra instruction on any vector operation that would modify the length of the vector in order to invalidate the current length. I've checked how Eigen handles this. It does not. Eigen has a clever lazy evaluation mechanism (https://eigen.tuxfamily.org/dox/TopicLazyEvaluation.html), but I don't think it's used for vector normalization. In practice, it is hard to know that the result of a binary operation on vectors provides a normalized vector or not. For example, the cross product requires that both vectors are orthogonal AND unit. Even if you know for sure that your vectors are unit (e.g. with a bool in Vec.h), you also need to know that they are orthogonal. See https://github.com/sofa-framework/sofa/pull/2647",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2700#issuecomment-1046608127:15,avoid,avoid,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2700#issuecomment-1046608127,1,['avoid'],['avoid']
Safety,"[ Follow-up of #253 ]. To sum up the ideas:; - create a manifest file @ plugin post-build; - create a configuration system where applications can find the list of plugins to load automatically at startup; - inform the user that if you want to use `<ComponentAFromPluginXXX>`, you need to add the line `<RequiredPlugin pluginName=""PluginXXX"" >`. (Everything started from:; - hard loading of SofaPython in runSofa; - in the future we want to remove ImageBMP/ImagePNG/ImageQt and use ImageCImg from the plugin CimgPlugin, and avoid to always add the RequiredPlugin line in each scene.). The Manifest file will be useful when the components in the Sofa trunk will be dispatched in several plugins (planned in the far future)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/281:523,avoid,avoid,523,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/281,1,['avoid'],['avoid']
Safety,[All] Clean collision detection in FreeMotionAnimationLoop,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5042:22,detect,detection,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5042,1,['detect'],['detection']
Safety,[CI] FIX scene-test segfault on timeout (Windows),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/379:32,timeout,timeout,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/379,1,['timeout'],['timeout']
Safety,[CImgPlugin] Remove the test file output_bw.png and avoid its creation in the source directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1320:52,avoid,avoid,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1320,1,['avoid'],['avoid']
Safety,[Collision.Detection.Algorithm] Rename Data,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4674:11,Detect,Detection,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4674,1,['Detect'],['Detection']
Safety,[Collision.Detection.Intersection] Delete compat layer for intersection,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4916:11,Detect,Detection,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4916,1,['Detect'],['Detection']
Safety,[Collision.Detection.Intersection] Rename Data,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4675:11,Detect,Detection,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4675,1,['Detect'],['Detection']
Safety,[Collision.Detection] Give current intersection methods as parameter to intersection functions,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4583:11,Detect,Detection,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583,1,['Detect'],['Detection']
Safety,[Collision.Detection] Rename DefaultPipeline into CollisionPipeline,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3590:11,Detect,Detection,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590,1,['Detect'],['Detection']
Safety,[Collision.Response.Contact] Make contactId thread-safe,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4582:51,safe,safe,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582,1,['safe'],['safe']
Safety,[Collision] Refactor the DetectionOutputVector interface and its impementation TDetectionOutputVector,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965:25,Detect,DetectionOutputVector,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965,1,['Detect'],['DetectionOutputVector']
Safety,[Constraint.Lagrangian.Correction] LinearSolverCC: use FullVector API if detected,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3231:73,detect,detected,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231,1,['detect'],['detected']
Safety,[Constraint.Lagrangian.Solver] GenericConstraintSolver: avoid repeated allocation in loops,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4195:56,avoid,avoid,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4195,1,['avoid'],['avoid']
Safety,[Core.Collision] NarrowPhaseDetection: disable lighting when displaying detection outputs,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5048:72,detect,detection,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5048,1,['detect'],['detection']
Safety,[DetectionOutput] New: added barycentric coords,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4226:1,Detect,DetectionOutput,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226,1,['Detect'],['DetectionOutput']
Safety,[GUI] initialize pointer to nullptr to avoid crash,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4793:39,avoid,avoid,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4793,1,['avoid'],['avoid']
Safety,[Helper] Make TagFactory thread safe,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2942:32,safe,safe,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2942,1,['safe'],['safe']
Safety,[Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466:57,avoid,avoid,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466,1,['avoid'],['avoid']
Safety,[LinearSystem] Detect changes in sparsity pattern when using ConstantSparsityPatternSystem,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4428:15,Detect,Detect,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428,1,['Detect'],['Detect']
Safety,[MeshGmsh]Fixed false error detection in MeshGmsh.cpp file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3030:28,detect,detection,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3030,1,['detect'],['detection']
Safety,[MultiThreading] Avoid Static Initialization Order Fiasco,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4307:17,Avoid,Avoid,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4307,1,['Avoid'],['Avoid']
Safety,[Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4509:34,Avoid,Avoid,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509,1,['Avoid'],['Avoid']
Safety,[Sofa.Type] Deprecate unsafe Vec constructor from pointer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3124:22,unsafe,unsafe,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3124,1,['unsafe'],['unsafe']
Safety,[SofaBaseCollision] Move OBB/Capsule-related intersections/detections/contacts to SofaMiscCollision,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2073:59,detect,detections,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073,1,['detect'],['detections']
Safety,[SofaBaseMechanics] BarycentricMapping: Remove avoidable Sofa.BaseTopology dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2403:47,avoid,avoidable,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2403,1,['avoid'],['avoidable']
Safety,[SofaBaseMechanics][SofaMiscForcefield] Auto-detect MassType,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2644:45,detect,detect,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2644,1,['detect'],['detect']
Safety,[SofaBoundaryCondition] Avoid ambiguity,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1958:24,Avoid,Avoid,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1958,1,['Avoid'],['Avoid']
Safety,[SofaCUDA] Arch auto-detection for nvcc,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1336:21,detect,detection,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1336,1,['detect'],['detection']
Safety,[SofaCUDA] Redundant namespace,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2538:11,Redund,Redundant,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2538,1,['Redund'],['Redundant']
Safety,[SofaConstraint] Parallel free motion and collision detection,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2040:52,detect,detection,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040,1,['detect'],['detection']
Safety,[SofaEngine] Avoid Crash in BoxROI when rest_position is not yet defined,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1031:13,Avoid,Avoid,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1031,1,['Avoid'],['Avoid']
Safety,[SofaGraphComponent] ADD alias usage detection,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/702:37,detect,detection,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/702,1,['detect'],['detection']
Safety,[SofaGraphComponent] Add SceneCheckerVisitor to detect missing RequiredPlugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/306:48,detect,detect,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/306,1,['detect'],['detect']
Safety,[SofaKernel] Activates thread-safetiness on MessageDispatcher.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/257:30,safe,safetiness,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/257,1,['safe'],['safetiness']
Safety,[SofaKernel] Add new events to detect Initialization & Simulation start.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1173:31,detect,detect,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1173,1,['detect'],['detect']
Safety,[SofaKernel] Fix hexahedra detection in BoxROI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1417:27,detect,detection,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1417,1,['detect'],['detection']
Safety,[SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3423:41,avoid,avoid,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3423,1,['avoid'],['avoid']
Safety,[SofaMiscForceField][SofaBaseMechanics] Add compile-time conditions to avoid compiling unrealistic cases,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2514:71,avoid,avoid,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2514,1,['avoid'],['avoid']
Safety,[SofaSimpleFem][SofaGeneralSimpleFem][SofaMiscFem] Avoid vectors normalization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2647:51,Avoid,Avoid,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2647,1,['Avoid'],['Avoid']
Safety,[SolidMechanics.FEM] Small update on container access to avoid unecessary check,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4639:57,avoid,avoid,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639,1,['avoid'],['avoid']
Safety,[Solver.Direct] Should empty system be detecting at init,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3504:39,detect,detecting,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3504,1,['detect'],['detecting']
Safety,[StateContainer] Avoid code duplication in MechanicalObject,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3541:17,Avoid,Avoid,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3541,1,['Avoid'],['Avoid']
Safety,[TriangularFEMForceField] Avoid double write access to the TriangleInfo Data in TriangularFEMForceField,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3412:26,Avoid,Avoid,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3412,1,['Avoid'],['Avoid']
Safety,[all] Avoid redundant printLog check,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2102:6,Avoid,Avoid,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102,2,"['Avoid', 'redund']","['Avoid', 'redundant']"
Safety,[google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29102,redund,redundant-member-init,29102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-member-init']
Safety,[modernize-make-shared](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:15892,redund,redundant-void-arg,15892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-void-arg']
Safety,[objectmodel] Avoid extra copy in DataFileNameVector,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3188:14,Avoid,Avoid,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3188,1,['Avoid'],['Avoid']
Safety,[tests] Update code base to use the new gtest macro and avoid depecations warnings.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1726:56,avoid,avoid,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1726,1,['avoid'],['avoid']
Safety,](https://clang.llvm.org/extra/clang-tidy/checks/readability-misleading-indentation.html) |; | [google-objc-global-variable-declaration](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-global-variable-declaration.html) | [readability-misplaced-array-index](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readabi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28229,redund,redundant-control-flow,28229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-control-flow']
Safety,](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [re,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29243,redund,redundant-smartptr-get,29243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-smartptr-get']
Safety,"_I suggest we use this issue card to track ongoing work (aka as dashboard/ChangeLog)_; Observation: Link implementation is invasive too complex, thus making SOFA respectively long to compile and hard to maintain / support. An ongoing work led by @damienmarchal aims at: ; - simplifying the Link implementation:; - avoiding the use of Traits; - split SingleLink into several cases: links between Data (DataLink), links between multiple Data (DataMultiLink?) links between BaseObject (?); - reducing massively used / included of SingleLinks. DONE:; - introduce Data Link (#1491 ); - remove duplicated SingleLink<> parentData in BaseData to ease further refactoring (#1491 ); - replace the use of the SingleLink<Data> by a DataLink class in BaseData.h (#1491 ); - remove traits code from Link.h and BaseLink.h. (#1503 ); - remove reflection code in BaseData (#1541). Also done:; - use forward declaration to reduce dependency (due to headers included in header) between modules --> cleaning code dependency graph and reducing compilation time (#1509 ); - DataContentValue : was there as DataValue, extracted from Data and renamed as DataContentValue; - PathResolver : mechanism to generalize for resolving path (parsing string, search in graph, convert in to an object), extracted from Link in order isolate it (for now reoriente towards existing SOFA functions). ______________________________________________________. **Next step** :; - refactoring the whole Link to separate SingleLink & MultiLink; - rename AbstractDataLink as BaseDataLink ?; - remove reflection mechanism inn BaseData (due to removal of SingleLink for Data). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1526:314,avoid,avoiding,314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1526,1,['avoid'],['avoiding']
Safety,"_You made a recent checkout from master and your private plugins does not compile anymore._ . This is an unconfortable situation and be sure a lot of effort are done to reduce the amount of time this is happening. But whatever care we can take, this may and will happen. Two probable cases:; - when breaking stuffs that shouldn't be there have been merged by mistake. Well, we apologize for this situation. To help, do not hesitate to participate in the reviewing of the PRs before they are merged into master to detect this situation. ; ; - when breaking change that are accepted on purpose. The reason is that there is a general consensus that Sofa is currently very ""fat"" and thus PRs trying to clean or make sofa lightweight to compile are positive contribution to Sofa. The drawback of that is that cleaning and modularizing Sofa have a strong impact on file/code organization and for sure is going to break external code. . As this is going to happen I suggest in the following thread to report what he had to do to compile master when encountered a broken compilation. Anyone can contribute... . Hope this will help. . eg:; - I had to add a lot of #include<fstream> to avoid compilation problem with xxx; - Component from #include<SofaVolumetricData> have moved and been renamed ! I had to update my ; CMakeList.txt to add find_package(SofaImplicitField) or find_package(SofaDistanceGrid). An html version of the this thread is at:; Website version: https://www.sofa-framework.org/community/doc/programming-with-sofa/start-coding/help-list/. To edit it checkout: https://github.com/sofa-framework/doc/blob/master/40_Programming_with_SOFA/10_Start_coding/70_Help_list.md. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/418:513,detect,detect,513,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/418,2,"['avoid', 'detect']","['avoid', 'detect']"
Safety,"```; void NarrowPhaseDetection::endNarrowPhase(); {; for (auto it = m_outputsMap.begin(); it != m_outputsMap.end();); {; DetectionOutputVector *do_vec = (it->second);; if (!do_vec || do_vec->empty()); {; if (do_vec); {; do_vec->release();; }; m_outputsMap.erase(it++);; }; else; {; ++it;; }; }; }; ```. The intended behavior of this is ""if the vector is empty, or it's a nullpointer, remove it from the map. If it is not a nullpointer, also release the vector"", right?. Since the `do_vec->clear()` is in `beginNarrowPhase`, the vector is never released correctly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333:121,Detect,DetectionOutputVector,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256642333,1,['Detect'],['DetectionOutputVector']
Safety,"```TriangularPressureForceField```:; - Set componentState to Invalid if topology is not found; - Fix force vectors display. ```TriangularFEMForceField```:; - Remove GetFracturableEdge deprecated method which could not work.; - Various fix in the display to avoid computation inside draw method; - Replace default display by stress value. ![image](https://user-images.githubusercontent.com/21199245/106916096-17ffbc80-6707-11eb-89e5-c5b9353487b0.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1779:257,avoid,avoid,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1779,1,['avoid'],['avoid']
Safety,"``cmake --install``` on a freshly built Sofa repo, the header files for libQGLViewer are not properly copied to the install/include directory.; First of all the install path is too long and has at least one ${PROJECT_NAME}, i.e. ""QGLViewer"" too much in the path. Also there are header files missing which are relevant for using the provided libQGLViewer in external projects/plugins. This is caused by the now modified ```Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - The last argument for the ```sofa_create_package_with_targets``` macro adds too many ```/${PROJECT_NAME}``` causing the long install path (line 118); - For some reason the ```sofa_create_package_with_targets``` macro does not copy the ```MOC_HEADER_FILES``` (line 21 ff.). ## Solution:; This PR shortens the output path and copies the contents of ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES``` which causes them to be copied to the install/include directory. This does not affect the build but ensures that all headers are copied. This was tested on Windows and two different Linux installations. I am aware that simply re-mentioning the MOC_HEADERS may look redundant, but I could not find a solution to convince the ```sofa_create_package_with_targets``` macro to also consider the MOC_HEADERS for copying. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4198:1279,redund,redundant,1279,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4198,1,['redund'],['redundant']
Safety,"`canCreate` can be called several times by the object factory. It makes more sense to detect if the template parameter is empty in the `parse` method, i.e. once the object is instantiated. Header of the message depends whether the component name is empty or not. Remove hard coded string of the component class, as it does not apply to derived types. Remove hard coded template strings. ![image](https://user-images.githubusercontent.com/10572752/172868099-18fb7a50-ecb2-40e4-b8b4-11fdac2be70d.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3029:86,detect,detect,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3029,1,['detect'],['detect']
Safety,"a clear(er) method BaseContext::getActiveMeshTopology() that you can call from any context and will give you the topology that is relevant for this context, i.e. either the topology at this exact node, or from a parent node but only if there is no mapping in between (or if there are only mappings whose sameTopology() method returns true). Using this method, state->l_topology is initialized (and you can inspect its result in the GUI), and if it is not NULL it will be used by all computations for the state without extra hidden checks. Now back to this bug, the last issue here was that the tested mapping (TetrahedronVolumeMapping) was not preserving the topology, but its output state was somehow linked to its input topology. The solution is not to go back to the old (broken) behavior, but instead to understand what is the actual root cause here. Theoretically, if the logic described above was behaving correctly, the output state would not be able to see the input topology because of the use of getActiveMeshTopology() and the fact that the mapping sameTopology() method would return false (thanks to its ""safe"" default implementation). The reason why this incorrect link was being created was because the mapping was created in the wrong Node. Normally, Sofa requires mappings to be in the same node as its output state. This is important in order to know for example which mapping is associated to which state (at least prior to the introduction of reflective Links, and still required because Mapping->State links are only one-way). This is used for example by visitors to know if a state is to be considered as real DOFs (because of the absence of a mapping in its node). But the MappingTest initialization code was not respecting this requirement, instead putting the mapping in the root node along with the input state (and the topology). Only the output state was in the child node. In this case, getActiveMeshTopology() from the output state does not see any mapping in the child, a",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-335477201:2237,safe,safe,2237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-335477201,1,['safe'],['safe']
Safety,a.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginMa,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6295,Detect,Detection,6295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Detect'],['Detection']
Safety,"a::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)2, (sofa::core::VecAccess)1>, sofa::simulation::common::MechanicalOperations*); sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotionAndCollisionDetection(sofa::core::ExecParams const*, sofa::core::ConstraintParams const&, double, sofa::core::TMultiVecId<(sofa::core::VecType)0, (sofa::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)0, (sofa::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)2, (sofa::core::VecAccess)1>, sofa::simulation::common::MechanicalOperations*); sofa::component::animationloop::FreeMotionAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::node::animate(sofa::simulation::Node*, double); sofa::gui::batch::BatchGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; ```. and with GDB:. ```; double free or corruption (out). Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; Download failed: Invalid argument. Continuing without source file ./nptl/./nptl/pthread_kill.c. ; 44	./nptl/pthread_kill.c: No such file or directory.; (gdb) where; #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; #1 __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78; #2 __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89; #3 0x00007ffff5242866 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #4 0x00007ffff52268b7 in __GI_abort () at ./stdlib/abort.c:79; #5 0x00007ffff5227750 in __libc_message (fmt=fmt@entry=0x7ffff53c3b34 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:150; #6 0x00007ffff52a3c67 in malloc_printerr (str=str@entry=0x7ffff53c6a20 ""double free or corruption (out)""); at ./malloc/malloc.c:5765; #7 0x000",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:12399,Abort,Aborted,12399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['Abort'],['Aborted']
Safety,"a::no_init, const T& value = T() ) : // ...; };; ```; ; Again, easy.; 4. Provide component constructors that do not initialize their `Data` so that optimized components can be derived:; ; ``` c++; Base::Base(BaseData::no_init) : name(BaseData::no_init), //...; BaseObject::BaseObject(BaseData::no_init) : f_listening(BaseData::no_init), //... ; ; // ... BaseMapping, Mapping, etc.; ```; ; this one is tedious but not that hard. Now if all of this can be done, a derived component class will be able to manage its data on a per-class basis, and only initialize data lazily when they are actually needed (i.e. when `findData` or `getDataFields` are called). Adding/removing data would be no-ops or errors in these derived classes. ## Performance. Changing the iteration strategy incurs an extra copy of the existing `DataVec` when accessing data, but since we are likely to iterate the vector anyways there should be no visible change in; complexity. Careful allocation on the caller side should also be able to avoid most allocations during vector copy. Finally, data iteration does not seems to happen during computationally intensive sections. Should this remain an issue, it is always possible to iterate using a callback instead, which is acceptable using c++11 lambdas/`std::function`, but probably too cumbersome using c++98. **To summarize I think the performance hit for current code path is minimal.**. On the other hand, a component using `BaseData::no_init` with per-class data managemenent potentially saves up to 6 heap allocations per data per constructor call, and a fraction of this during destruction. FYI, I counted 10 `Data` members in base class `Mapping<In, Out>` alone, `collision::Contact` has 5, `ForceField` has 7,`MechanicalObject` has around 30. This means that for every collision between two different collision models, there are _at the very least_ 50+ `Data` created, each of which can cause up to 6 heap allocations. . **That is 300+ heap allocations potentially saved ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923:2623,avoid,avoid,2623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923,1,['avoid'],['avoid']
Safety,"able object, but I would like to use a Sparse Grid Topology to avoid meshing etc.; I found the component `DynamicSparseGridTopologyContainer` which seems to be the right thing, but sadly I get index errors, when I try to remove elements (through shift-right-click interaction in the GUI).; But something seems to happen, as the visual model deforms and also finally crashes, when no points are left. Error:; ```bash; [ERROR] [DynamicSparseGridTopologyModifier(DynamicSparseGridTopologyModifier)] Unable to remove the hexahedra: 130 its index is out of bound.; ```. Video:; <video src=""https://github.com/sofa-framework/sofa/assets/29635054/1c5129b9-9336-4968-910f-107a57800ebe"" width=""200"" height=""auto"">. Example Scene:; ```python; import Sofa; import Sofa.Core; import Sofa.Simulation. PLUGINS = [; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase,BruteForceBroadPhase,CollisionPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [MinProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [TriangleCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [CollisionResponse]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.IO.Mesh"", # [MeshOBJLoader]; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.Mapping.Linear"", # [BarycentricMapping]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [HexahedronFEMForceField]; ""Sofa.Component.StateContainer"", # [MechanicalObject]; ""Sofa.Component.Topology.Container.Constant"", # [MeshTopology]; ""Sofa.Component.Topology.Container.Dynamic"", # [DynamicSparseGridGeometryAlgorithms,DynamicSparseGridTopologyContainer,Dyna; ""Sofa.Comp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4796:1045,Detect,Detection,1045,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4796,1,['Detect'],['Detection']
Safety,"about `warmStart = true`: it biases the solution towards constant acceleration, whereas `warmStart = false` biases towards zero acceleration (when stopping early ofc). energy-wise, it is probably safer to go for the latter and let the user opt-in if she knows what's she's doing.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/365#issuecomment-325746502:196,safe,safer,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/365#issuecomment-325746502,1,['safe'],['safer']
Safety,ading-indentation.html) |; | [google-objc-global-variable-declaration](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-global-variable-declaration.html) | [readability-misplaced-array-index](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-ti,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28312,redund,redundant-control-flow,28312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-control-flow']
Safety,"ailed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Renderi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3396,Detect,Detection,3396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Detect'],['Detection']
Safety,"aint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [Requ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3259,Detect,Detection,3259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Detect'],['Detection']
Safety,ang-tidy/checks/clang-analyzer-unix.cstring.NullArg.html) | [modernize-use-using](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-using.html) |; | [clang-analyzer-valist.CopyToSelf](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.CopyToSelf.html) | [mpi-buffer-deref](https://clang.llvm.org/extra/clang-tidy/checks/mpi-buffer-deref.html) |; | [clang-analyzer-valist.Uninitialized](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.Uninitialized.html) | [mpi-type-mismatch](https://clang.llvm.org/extra/clang-tidy/checks/mpi-type-mismatch.html) |; | [clang-analyzer-valist.Unterminated](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.Unterminated.html) | [objc-avoid-nserror-init](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-nserror-init.html) |; | [cppcoreguidelines-c-copy-assignment-signature](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-c-copy-assignment-signature.html) | [objc-avoid-spinlock](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-spinlock.html) |; | [cppcoreguidelines-interfaces-global-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-interfaces-global-init.html) | [objc-forbidden-subclassing](https://clang.llvm.org/extra/clang-tidy/checks/objc-forbidden-subclassing.html) |; | [cppcoreguidelines-no-malloc](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-no-malloc.html) | [objc-property-declaration](https://clang.llvm.org/extra/clang-tidy/checks/objc-property-declaration.html) |; | [cppcoreguidelines-owning-memory](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extra/clang-tidy/checks/performance-faster-string-find.html) |; | [cppcoreguidelines-pro-bounds-array-to-pointer-decay](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](htt,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:20797,avoid,avoid-spinlock,20797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['avoid'],['avoid-spinlock']
Safety,anics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -- Sofa.GUI.Common: Sofa.GL dependent features enabled.; Adding library Sofa.GUI.Batch; Adding library Sofa.GUI.Qt; Sofa.GUI.Qt: will use Qt5; Sofa.GUI.Qt: Qt5Charts n,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:3386,Detect,Detection,3386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,1,['Detect'],['Detection']
Safety,"anics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Found OpenGL: /usr/lib/x86_64-linux-gnu/libOpenGL.so ; Found GLEW: /usr/include (found version ""2.1.0"") ; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -- Sofa.GUI.Common: Sofa.GL dependent features enabled.; Addi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:4670,Detect,Detection,4670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,1,['Detect'],['Detection']
Safety,as this component is in fact a kind of map. The swap might not be needed... but without diving back into this I'm not 100% sure...; normally there is enough regression tests on topology modification to detect if removing the swap will break the mechanism.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4738#issuecomment-2114756090:202,detect,detect,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4738#issuecomment-2114756090,1,['detect'],['detect']
Safety,"backup discussion for logs:. here is the call stack of sphereLoader:; ```; SphereLoader::load; SphereLoader::load END; SphereLoader::updateFileNameAndTransformPosition; - m_filename changed: 1; - d_translation changed: 0; - d_rotation changed: 0; - d_scale changed: 0; SphereLoader::load; SphereLoader::load END; SphereLoader::applyTransform; SphereLoader::applyTransform END; SphereLoader::Callback exit with load(); ```. So as you can see the file is loaded once at parse time (because of the ```canLoad``` mechanism of the Loader) but the m_filename is still flaged as changed in the tracker so it will call the method load a second time when the Data position/radius are pulled from other components. . This was avoided in my previous version by adding ```m_internalEngine[""filename""].cleanDirty();``` at begining of the Load method. . However it is not looping anymore like in the initial version. Maybe we can say that this double call of load is special due to the Loader mechanism at parse stage (which should be replaced by a nice Data grah update...); For the log from epernod@sophia.inria.fr . Loader are loading file/mesh at parse stage to ensure they are ready and all their data are filled before any other component start linking and using the loader data. You can see it like a ""pre-init"" visitor... in comparison to the bwdInit.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1666#issuecomment-746000345:716,avoid,avoided,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1666#issuecomment-746000345,1,['avoid'],['avoided']
Safety,"based on #4028 . Add method to detect intersection between 2 edges in 2D and 3D.; Add tests with tricky cases; Will update version in EdgeSetTopologyContainer which is not really working later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4029:31,detect,detect,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4029,1,['detect'],['detect']
Safety,"basis, and only initialize data lazily when they are actually needed (i.e. when `findData` or `getDataFields` are called). Adding/removing data would be no-ops or errors in these derived classes. ## Performance. Changing the iteration strategy incurs an extra copy of the existing `DataVec` when accessing data, but since we are likely to iterate the vector anyways there should be no visible change in; complexity. Careful allocation on the caller side should also be able to avoid most allocations during vector copy. Finally, data iteration does not seems to happen during computationally intensive sections. Should this remain an issue, it is always possible to iterate using a callback instead, which is acceptable using c++11 lambdas/`std::function`, but probably too cumbersome using c++98. **To summarize I think the performance hit for current code path is minimal.**. On the other hand, a component using `BaseData::no_init` with per-class data managemenent potentially saves up to 6 heap allocations per data per constructor call, and a fraction of this during destruction. FYI, I counted 10 `Data` members in base class `Mapping<In, Out>` alone, `collision::Contact` has 5, `ForceField` has 7,`MechanicalObject` has around 30. This means that for every collision between two different collision models, there are _at the very least_ 50+ `Data` created, each of which can cause up to 6 heap allocations. . **That is 300+ heap allocations potentially saved for a single collision, before even doing anything.**. Now one can always argue that by grouping objects in mechanical objects one can minimize the number of contact classes, but firstly for complex scenes this is a very tedious/complex thing to do, and secondly there should be a way of not paying for features you don't use (this is c++ after all). So I think it is safe to say that the potential benefits significantly outweigh the cost :-). I hope the above addressed your questions, please let me know if this sounds reasonable.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923:3981,safe,safe,3981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923,1,['safe'],['safe']
Safety,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1848:379,Timeout,TimeoutWatcher,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848,1,['Timeout'],['TimeoutWatcher']
Safety,btw why have you redundant values? This is not logical for an indice map.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4738#issuecomment-2114760464:17,redund,redundant,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4738#issuecomment-2114760464,1,['redund'],['redundant']
Safety,"by the way @alxbilger it would be great if you feel it's necessary to update the associated pages ([DirectSAP](https://www.sofa-framework.org/community/doc/components/collisions/detection-sweep-and-prune/), IncrSAP, BruteForce)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2030#issuecomment-825192122:178,detect,detection-sweep-and-prune,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030#issuecomment-825192122,1,['detect'],['detection-sweep-and-prune']
Safety,checks/misc-unused-alias-decls.html) |; | [clang-analyzer-llvm.Conventions](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-llvm.Conventions.html) | [misc-unused-parameters](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-parameters.html) |; | [clang-analyzer-nullability.NullPassedToNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullPassedToNonnull.html) | [misc-unused-raii](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-raii.html) |; | [clang-analyzer-nullability.NullReturnedFromNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullReturnedFromNonnull.html) | [misc-unused-using-decls](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-using-decls.html) |; | [clang-analyzer-nullability.NullableDereferenced](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullableDereferenced.html) | [modernize-avoid-bind](https://clang.llvm.org/extra/clang-tidy/checks/modernize-avoid-bind.html) |; | [clang-analyzer-nullability.NullablePassedToNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullablePassedToNonnull.html) | [modernize-deprecated-headers](https://clang.llvm.org/extra/clang-tidy/checks/modernize-deprecated-headers.html) |; | [clang-analyzer-nullability.NullableReturnedFromNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullableReturnedFromNonnull.html) | [modernize-loop-convert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-loop-convert.html) |; | [clang-analyzer-optin.cplusplus.VirtualCall](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.cplusplus.VirtualCall.html) | [modernize-make-shared](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:14184,avoid,avoid-bind,14184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['avoid'],['avoid-bind']
Safety,cks/google-build-using-namespace.html) | [readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/readability-function-size.html) |; | [google-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/google-default-arguments.html) | [readability-identifier-naming](https://clang.llvm.org/extra/clang-tidy/checks/readability-identifier-naming.html) |; | [google-explicit-constructor](https://clang.llvm.org/extra/clang-tidy/checks/google-explicit-constructor.html) | [readability-implicit-bool-conversion](https://clang.llvm.org/extra/clang-tidy/checks/readability-implicit-bool-conversion.html) |; | [google-global-names-in-headers](https://clang.llvm.org/extra/clang-tidy/checks/google-global-names-in-headers.html) | [readability-inconsistent-declaration-parameter-name](https://clang.llvm.org/extra/clang-tidy/checks/readability-inconsistent-declaration-parameter-name.html) |; | [google-objc-avoid-throwing-exception](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-avoid-throwing-exception.html) | [readability-misleading-indentation](https://clang.llvm.org/extra/clang-tidy/checks/readability-misleading-indentation.html) |; | [google-objc-global-variable-declaration](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-global-variable-declaration.html) | [readability-misplaced-array-index](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:27169,avoid,avoid-throwing-exception,27169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['avoid'],['avoid-throwing-exception']
Safety,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1906:393,safe,safetiness,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906,1,['safe'],['safetiness']
Safety,"code is instanciated. The default behavior is that any used templates are instanciated and code is generated in each translation unit (so in each .cpp there is the compilation of the full Vec<double, 3>, Vec<real, 3> for every templates used). The consequence is that this generates huge binary (.o) files each containing identical machine code. This duplicated machine code in every .o is removed during the link. So said differently the compiler makes a lot of work to generate machine code then the linked makes a lot of code to remove it and keep only one version. The solution in c++ is to use the ""extern"" keyword to tell the compiler not to instanciate the templated code, extern means that the machine code will be provide elsewhere. To work and not have link error it is the needed to have a least one version of the template instanciated somewhere. This is why in the .cpp files we often instanciate the same template (without the extern). ; The design pattern o use to avoid the redeclaration warnings is a bit tricky so here is an example.; In myclass.h; ```cpp; template<typename T> ; MyClass ; {; /// ...; };. /// here is the trick .. to differentiate when we include the .h everywhere in the codebase where we want the extern from where it is included from myclass.cpp where we don't want it we do the following; #ifndef MY_CLASS_CPP ; extern template MyClass<double> /// d'ont emit machinecode for this one we provides it ""somewhere else""; extern template MyClass<float> /// don't emit machinecode for this one we provides it ""somewhere else""; #endif /// ; ``` . In the myclass.cpp; ```cpp; #define MY_CLASS_CPP /// You tll the myclass.h that you are where the machine code will be emitted...so no need for the externs version... ; #include ""myclass.h"". template MyClass<double> /// specifically emit machinecode for this double version; template MyClass<float> /// specifically emit machinecode for this float version; ``` . EDIT: I see you closed the PR @courtecuisse, it is unclear",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1548#issuecomment-713560956:1194,avoid,avoid,1194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1548#issuecomment-713560956,1,['avoid'],['avoid']
Safety,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::d",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10665,detect,detection,10665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::de",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:19348,detect,detection,19348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput>",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21566,detect,detection,21566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"continue porting old changes from branch https://github.com/epernod/sofa/pull/13/files. Some cleaning in Qt Gui:; - Rome old options not used? like m_isEmbeddedViewer or m_createViewersOpt; - Store SofaViewer* directly to avoid multiple dynamic casts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4641:222,avoid,avoid,222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4641,1,['avoid'],['avoid']
Safety,"copy pasting discussion (+ automatic translation) for the record:. > The bboxes are actually used to calculate the znear / far of the camera but in a well licked interface you want to be able to select nodes / components in the scenegraph and have a visual feedback in the 3D scene in SQQ we do this by displaying the bbox of the selected object and its descendants. > if you calculate only 1 global bbox in the camera, you lose this granularity. > If we want to fix the bbox at the beginning we do it via another component (""BoundingBox"") connected to the bbox field of ddgnode. To avoid having a boolean indicating if we want to update or not ... we clean the system of ""parent"" of Data to implement the following mechanism:; > - if connected parent the data is copied from the parent.; > - if have setValue the value of a data field which has a parent ... the relationship is broken.; > - if you want to cut the relationship, one can use the setParent (null) function.; > - the visitor who recursively updates the bboxes check if the box has a settled parent to avoid calling setValue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-601643981:583,avoid,avoid,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1277#issuecomment-601643981,2,['avoid'],['avoid']
Safety,"d..). Then outputs are set to dirty, and an IdleEvent visitor is propagated:; ```; void ImplicitDataEngine::reinit(); {; cleanTrackers();; update();; setDirtyOutputs();; sofa::core::objectmodel::IdleEvent ie;; sofa::simulation::PropagateEventVisitor v(; sofa::core::ExecParams::defaultInstance(), &ie);; this->getContext()->getRootContext()->executeVisitor(&v);; }; ``` . This allows for a complete and instant refresh of all components taking as an input the dirty outputs without calling the previous components in the pipeline again.; Limitations are that those following components have to be initialized AFTER (in terms of scene graph, so either in subnodes, or after the current engine, in the same node). Another feature that I don't like much but that was requested by someone who was supposed to use and contribute to my plugin but never did, is the ""autolink"" feature:. <MySofaORComponent name=""mycomp"" autolink=""true"" />. This field allows you to *implicitely* link your data, so that you could avoid setting dozens of fields in your scene description file. The way if works is quite basic:; If autolink is true, then when calling addInput, the internal code checks if the variable has been set. If it has been it doesn't do anything, but if it has:; a previous ImplicitDataEngine in the graph is searched for and if it contains a matching variable with a similar name, it binds them together by calling setParent() on the data. If not, the next engine is searched backwards and the same operation is done, recursively until reaching the first engine in the current node. If AUTOLINK is set to true, then a big fat msg_advice() is printed in the console, warning the user that this implicit binding can potentially do things they do not expect...; Limitations are, again, that:; - It is not possible to bind implicitely datas that aren't in the same node, or datas that are declared AFTER the current engine (regarding the scene graph); - The data field name has to be EXACTLY as expected ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816:3424,avoid,avoid,3424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816,1,['avoid'],['avoid']
Safety,"d: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(Arti",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2624,Detect,Detection,2624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Detect'],['Detection']
Safety,"d::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCol",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:26498,detect,detection,26498,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,5,"['Detect', 'detect']","['Detection', 'DetectionOutputVector', 'detection']"
Safety,dant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [readability-static-definition-in-anonymous-namespace](https://clang.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29326,redund,redundant-smartptr-get,29326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-smartptr-get']
Safety,"de*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::AnimateVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*); sofa::simulation::AnimateVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::Simulation::animate(sofa::simulation::Node*, double); sofa::gui::qt::RealGUI::step(); QTimer::timeout(QTimer::QPrivateSignal); QTimer::timerEvent(QTimerEvent*); QObject::event(QEvent*); QApplicationPrivate::notify_helper(QObject*, QEvent*); QApplication::notify(QObject*, QEvent*); QCoreApplication::notifyInternal2(QObject*, QEvent*); QTimerInfoList::activateTimers(); g_main_context_dispatch; g_main_context_iteration; QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>); QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>); QCoreApplication::exec(); sofa::gui::qt::RealGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533:3068,timeout,timeout,3068,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533,1,['timeout'],['timeout']
Safety,dex](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [re,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28492,redund,redundant-declaration,28492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-declaration']
Safety,"e STC : . **First strategy :** Model the Data accesses using ORWL's concepts + high level task parallelism (coarse grain parallelism); - use abstract Data accesses stored in FIFOs to extract parallelism : thread safe data accesses allowing concurrent reads.; - ensures that the semantic of the program is preserved.; - tasks defined at Visitor level : a Task is defined as the execution of a Visitor on a component.; - this strategy should apply to all visitors and components, as it does not depend on the nature of the component. **Issues :** ; - We wanted to use the Data class, since all accesses to a data object in sofa should be done using this class. Problem : this is not true, some components use vectors directly, or use Data methods / ReadAccessor / WriteAccessor not as intended (this is possible since for now some methods such as Data::endEdit do nothing) -> we would need to look at all sofa components to make sure that the Data are properly used; - To properly model the data accesses using ORWL's concepts we need to slightly modify the API of the Data class; - sofa Engine mecanisms are complex to handle using FIFOs; - it is difficult to predict the data dependencies as the Visitors are launched dynamically and can launch Visitors -> we can't predict the data accesses in a preprocessing phase, so we need to adapt ORWL.; - This approach would not induce significant performance gains on simulations with only 1 object or with 1 ""main"" object since all the computationally intensive tasks inside a given object access the same Data object (Write access) and thus are inherently sequential. **Conclusion :** the potential speedup is not good enough to invest more time on this strategy given the difficulty. **Second strategy :** finer-grain parallelization; To extract parallelism from highly data-dependent tasks we need to divide these tasks into less-dependent subtasks.; To achieve that, we are currently implementing parallel vectors to allow some kind of domain decomposit",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792:1213,predict,predict,1213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792,2,['predict'],['predict']
Safety,"e VisualModel will be deprecated soon. Use a MeshObjLoader and link the Data to the VisualModel. E.g: ; <MeshObjLoader name='myLoader' filename='myFilePath.obj'/> ; <OglModel src='@myLoader'/>; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead.; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; Received signal 6; #0 0x7fdf823e1a79 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbea78); #1 0x7fdf82336436 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2c13435); #2 0x7fdf823e03d3 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbd3d2); #3 0x7fdf823e1a05 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbea04); #4 0x7fdf9839b040 (/lib/x86_64-linux-gnu/libc-2.27.so+0x3f03f); #5 0x7fdf9839afb7 gsignal; #6 0x7fdf9839c921 abort; #7 0x7fdf987ea0a9 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29+0x9d0a8); #8 0x7fdf987f5506 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29+0xa8505); #9 0x7fdf987f5571 std::terminate(); #10 0x7fdf987f57f5 __cxa_throw; #11 0x7fdf987ec7dd std::__throw_logic_error(); #12 0x7fdf97d370b4 std::__cxx11::basic_string<>::basic_string<>(); #13 0x7fdf97d37781 sofa::gui::qt::RealGUI::setScene(); #14 0x7fdf97d455fe sofa::gui::qt::RealGUI::CreateGUI(); #15 0x7fdf9cf0ee9b sofa::gui::GUIManager::createGUI(); #16 0x7fdf9cf0f5c5 sofa::gui::GUIManager::MainLoop(); #17 0x556940dfe9a5 main; #18 0x7fdf9837dbf7 __libc_start_main; #19 0x556940dfecea _start; r8: 0000000000000000 r9: 00007fff6c36bce0 r10: 0000000000000008 r11: 0000000000000246; r12: 000055694236d140 r13: 00007fdf9880adf0 r14: 00007fff6c36c078 r15: 00005569419f6900; di: 0000000000000002 si: 00007fff6c36bce0 bp: 000055694236c178 bx: 00007fdf98748840; dx: 0000000000000000 ax: 0000000000000000 cx: 00007fdf9839afb7 sp: 00007fff6c36bce0; ip: 000",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2253:1345,abort,abort,1345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2253,1,['abort'],['abort']
Safety,"e collision detection pipeline / models. The scene contains 2 nodes with `MechanicalObject` and `PointCollisionModel`.; I repeatedly load and unload the scene, first with no collision models, then one collision model, and then two collision models.; -> each graph has 3 segments. ```python; import Sofa; import Sofa.Core; import Sofa.Simulation; from enum import Enum. class TestCase(Enum):; ONE_MODEL = 0; TWO_MODELS = 1; NONE = 2. class SimulationHandler:; def __init__(self):. self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, TestCase.NONE); Sofa.Simulation.init(self.root_node). def step(self):; Sofa.Simulation.animate(self.root_node, self.root_node.getDt()). def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = SimulationHandler(). for i in range(5000):; simulation.step(); simulation.reload(",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:1072,Detect,Detection,1072,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['Detect'],['Detection']
Safety,"e contains 2 nodes with `MechanicalObject` and `PointCollisionModel`.; I repeatedly load and unload the scene, first with no collision models, then one collision model, and then two collision models.; -> each graph has 3 segments. ```python; import Sofa; import Sofa.Core; import Sofa.Simulation; from enum import Enum. class TestCase(Enum):; ONE_MODEL = 0; TWO_MODELS = 1; NONE = 2. class SimulationHandler:; def __init__(self):. self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, TestCase.NONE); Sofa.Simulation.init(self.root_node). def step(self):; Sofa.Simulation.animate(self.root_node, self.root_node.getDt()). def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = SimulationHandler(). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.NONE). for i in range(5000):; simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:1121,Detect,Detection,1121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['Detect'],['Detection']
Safety,"e of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get documentation on what the ""methodDelegated"" should do (to know contract the child has to fulfill). . The advantage I see with that naming scheme is that it works with chain of delegation. So the code should look like:; ```cpp; BaseObject::init() /// non virtual ; {; // I do the stuff shared by all child ; checkWhatever();; ; // ask my child to do their specific init, ; doBaseObjectInit(); }. BarycentricMapping::doBaseObjectInit() final; {; // I do the stuff shared by all of my child ; checkWhatever();; ; // ask my child to do their specific init, ; doBarycentricMappingInit();; }. MyChildOfBarycentricMapping::doBarycentricMapping() final; {; // ask my child to do their specific init, ; }; ```. This long naming scheme also has some good properties in case of multiple in-heritance, as it avoid colliding delegate function's name. . Of course, any other naming scheme suggestion is welcomed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:2792,avoid,avoid,2792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162,1,['avoid'],['avoid']
Safety,"e script step7-grabTheCube.py and using control ""+"" to grip the cube. . **Expected behavior**; The cube should be gripped and so that it can be picked up. . The code for ""step7-withSTLIB.py"" and ""param.py"" file as below. ![Screenshot from 2024-10-12 18-06-10](https://github.com/user-attachments/assets/7e0973ba-db7c-4783-9cfc-f6591c17f542). ""step7-withSTLIB.py"". `# STLIB IMPORT; from stlib3.scene import MainHeader; from stlib3.scene import ContactHeader; from stlib3.physics.rigid import Floor, Cube; from stlib3.physics.deformable import ElasticMaterialObject. # SOFTROBOTS IMPORT; from softrobots.actuators import PullingCable, PneumaticCavity. # CONTROLLER IMPORT; from wholeGripperController import WholeGripperController. # ARGUMENTS IMPORT; from param import *. def createScene(rootNode):; rootNode.addObject('RequiredPlugin', name='Sofa.Component.AnimationLoop') # Needed to use components [FreeMotionAnimationLoop]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Algorithm') # Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,CollisionPipeline]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Intersection') # Needed to use components [LocalMinDistance]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Collision.Geometry') # Needed to use components [LineCollisionModel,PointCollisionModel,TriangleCollisionModel]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Collision.Response.Contact') # Needed to use components [RuleBasedContactManager]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Constraint.Lagrangian.Correction') # Needed to use components [LinearSolverConstraintCorrection,UncoupledConstraintCorrection]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Constraint.Lagrangian.Solver') # Needed to use components [GenericConstraintSolver]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Engine.Select') # Needed to use components [BoxROI] ; rootNo",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5060:1383,Detect,Detection,1383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5060,1,['Detect'],['Detection']
Safety,e.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [Plugi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7757,Detect,Detection,7757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Detect'],['Detection']
Safety,"e/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18460,detect,detection,18460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,['detect'],['detection']
Safety,"e/src/sofa/simulation/Node.h:191; #21 0x7fc2ff12aa43 in sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/DefaultAnimationLoop.cpp:113; #22 0x7fc2ff205eb1 in sofa::simulation::Simulation::animate(sofa::simulation::Node*, double) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:242; #23 0x5646e6e19751 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:166; #24 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:9364,detect,detection,9364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,['detect'],['detection']
Safety,"e>, sofa::type::CPUMemoryManager<sofa::type::Vec<3u, double> > > > const&); sofa::component::collision::response::mapper::BarycentricContactMapper<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::updateXfree(); sofa::component::collision::response::contact::FrictionContact<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::createResponse(sofa::core::objectmodel::BaseContext*); sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionResponse(); sofa::simulation::PipelineImpl::computeCollisionResponse(); sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::AnimateVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*); sofa::simulation::AnimateVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3524:2256,detect,detection,2256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3524,1,['detect'],['detection']
Safety,"eContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2755,Detect,Detection,2755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Detect'],['Detection']
Safety,"ecide what is good to save or not. This is what SOFA actually does and this behave terribly. ; I see two reason for that:; - there is a lot of component that 'forgot' to set/unset the persistent values.; - it is very hard to identify what is relevant to save, IMO because what is relevant to save is a matter of context of use, a Data 'useless' for one may be very useful for someone else. . This is why I choose to do things in the reversed way and let the client code to select what to save (so that you may eventually implement dedicated widgets to let the user select what to save). . I see at least to different context of use and thus saving strategies. . For my context of use it is more important to save scenes that are as close as possible as the one written by the user. This is why I made the XML loader and the GUI have the responsability to make persistent:; - the value given explicitely in the scene file; - the value specified explicitely in the GUI via the widget or the manipulators; Despite being very simple this work very well and without any risk that some authors breaks the saving because he forgot/decide not to setPersistent(false) in his component (and this happened quite a lot in the past). For your context of use, for which saving a simulated scene is important I think a very simple solution would be to write a visitor to switch all the Data values to persistent. And I would suggest to put this feature to a different entry in the menu (what about ""Export"" or ""Dump"" ?) so that in the same application we can either save or dump the scene with very well defined semantics ? . Now about the fact that some Data editted in the UI can be incompatible with another Data. I will let that for another day because to me this is a much more general UI problem. . Finally to improve a bit the general readability in any context of use we could, when writing big chunk of numbers (like vector.size() > 20) save them in separated files leading to something like: ; <MechanicalO",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495:2169,risk,risk,2169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495,1,['risk'],['risk']
Safety,"ection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:29476,detect,detection,29476,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,5,"['Detect', 'detect']","['Detection', 'DetectionOutputVector', 'detection']"
Safety,"ed is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaNonUniformFem. CMake Deprecation Warning at SofaMisc/CMakeLists.txt:21 (message):; SofaMisc is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaMiscExtra;SofaMiscEngine;SofaMiscFem;SofaMiscForceField;SofaMiscMapping;SofaMiscSolver;SofaMiscTopology""; warning is appearing. however, without crashing it get configured and generates the files. I have build the system on Visual Studio 2019 and it complies without any errors. However, when loading the RunSofa ""SofaPython"" and ""SofaExporter"" modules are not loading. I tried using the plugin manager and it reports erros that .dll file is not there. but it is there in the bin and could not add to the plugin manager. So my questions are as follows.; (1)I want to know whether do I have to change any configuration to avoid deprecation warning messages?; (2) loading the sofaphython to runSofa application ; My Cmake out put is as follows. Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19041.; Install prefix: C:/SOFA/build/master/install; Adding module SofaGeneralVisual; Adding module SofaGraphComponent; Adding module SofaGeneralMeshCollision; Adding module SofaBoundaryCondition; Adding module SofaGeneralAnimationLoop; Adding module SofaGeneralDeformable; Adding module SofaGeneralEngine; Adding module SofaGeneralExplicitOdeSolver; Adding module SofaGeneralImplicitOdeSolver; Adding module SofaGeneralLinearSolver; Adding module SofaGeneralRigid; Adding module SofaGeneralObjectInteraction; Adding module SofaGeneralSimpleFem; Adding module SofaGeneralTopology; Adding module SofaTopologyMapping; Adding module SofaUserInteraction; Adding module SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding module SofaPreconditioner; Adding module SofaHaptics; Adding module SofaValidation; Adding module S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:1180,avoid,avoid,1180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,1,['avoid'],['avoid']
Safety,"er/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(360): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_deriveSPKTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addForce_kernel(int, real *, real *, const real *, __nv_bool, const real *, float, float) [with real=float]"" ; (1248): here. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(587): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_ElasticityTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addDForce_kernel(int, real *, real *, real, real, real *) [with real=float]"" ; (1266): here. 2 errors detected in the compilation of ""/tmp/tmpxft_0000044c_00000000-6_CudaStandardTetrahedralFEMForceField.cpp1.ii"".; CMake Error at SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake:275 (message):; Error generating file; /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o. ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:2175,detect,detected,2175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,3,['detect'],['detected']
Safety,"eraMVM); Sofa.SofaGL.draw(root). pygame.display.flip(). def GetFrame():; """"""; Get frame image as numpy. Parameters:; ----------; kwargs: Dictionary; Initialization of the arguments. Returns:; -------; image: np.ndarray. """"""; buffer = OpenGL.GL.glReadPixels(0, 0, *display_size, OpenGL.GL.GL_RGB, OpenGL.GL.GL_UNSIGNED_BYTE); image_array = np.fromstring(buffer, np.uint8); if image_array.shape != (0,):; image = image_array.reshape(display_size[1], display_size[0], 3); else:; image = np.zeros((display_size[1], display_size[0], 3)); image = np.flipud(image); return image; ; def SaveImage(image:np.ndarray, filename:str):; im = PIL.Image.fromarray(image); im.save(filename); . def createScene(root):; root.addObject('RequiredPlugin', pluginName=['BeamAdapter',; 'SofaMiscCollision',; 'SofaConstraint',; 'SofaImplicitOdeSolver',; 'SofaGeneralLinearSolver',; 'SofaBoundaryCondition',; 'SofaDeformable',; 'SofaTopologyMapping',; 'SofaOpenglVisual,'; 'SofaMeshCollision',; 'Sofa.Component.Collision.Detection.Algorithm',; 'Sofa.Component.IO.Mesh',; 'Sofa.GL.Component.Rendering3D',; 'Sofa.GL.Component.Shader'; ]); root.addObject('FreeMotionAnimationLoop'); root.addObject('VisualStyle', displayFlags=['showVisualModels',; 'showCollisionModels',; ]); root.addObject('LCPConstraintSolver', mu='0.1', tolerance='1e-10', maxIt='1000', build_lcp='false'); root.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); root.addObject('BruteForceBroadPhase', name='N2'); root.addObject('BVHNarrowPhase'); root.addObject('LocalMinDistance', contactDistance='1', alarmDistance='3', name='localmindistance', angleCone='0.02'); root.addObject('DefaultContactManager', name='Response', response='FrictionContactConstraint'). name='guide'; straightLength=980.0; length=1000.0; numEdges=200; youngModulus=20000; spireDiameter=25; numEdgesCollis=[50,10]; spireHeight=0.0; densityOfBeams=[30,5]; youngModulusExtremity=10000; topoLines_guide = root.addChild('topoLines_'+name); topoLines_guide.addObject('WireRest",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4636:12183,Detect,Detection,12183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636,1,['Detect'],['Detection']
Safety,"ew sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTranslation(0,0,0);; firstMechanicalObject->setRotation(0,0,0);; firstMechanicalObject->setScale(1,1,1);; . MechanicalObject3d::SPtr secondMechanicalObject = New<MechanicalObject3d>();; secondMechanical",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:4007,detect,detection,4007,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147,5,"['Detect', 'detect']","['Detection', 'detection', 'detectionProximity']"
Safety,"fa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:14812,detect,detection,14812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,['detect'],['detection']
Safety,"factory. . In the following is a simple proposal to replace the problematic code: ; ```cpp; namespace simpleapi; {. BaseObject::SPtr createObject(Node::SPtr self, const std::string& type, const std::map<std::string, std::string>& params={}); {; /// temporarily, the name is set to the type name.; /// if a ""name"" parameter is provided, it will overwrite it.; BaseObjectDescription desc(type.c_str(),type.c_str());; for(auto& kv : params); {; desc.setAttribute(kv.first.c_str(), kv.second.c_str());; }. /// Create the object.; BaseObject::SPtr obj = ObjectFactory::getInstance()->createObject(self.get(), &desc);; if (obj==0); {; std::stringstream msg;; msg << ""create: component '"" << desc.getName() << ""' of type '"" << desc.getAttribute(""type"","""")<< ""' in node '""<<self->getName()<<""'"" ;; for (std::vector< std::string >::const_iterator it = desc.getErrors().begin(); it != desc.getErrors().end(); ++it); msg << "" "" << *it << msgendl ;; return NULL;; }. return obj ;; }. Node::SPtr createChild(Node::SPtr& node, const std::string& name, const std::map<std::string, std::string>& params={}); {; BaseObjectDescription desc(""Node"", ""Node"");; for(auto& kv : params); {; desc.setAttribute(kv.first.c_str(), kv.second.c_str());; }; Node::SPtr tmp = node->createChild(name); ; tmp->parse(desc);; return tmp;; }; }. Node::SPtr createRootWithCollisionPipeline(const std::string& responseType); {; root = simulation::getSimulation()->createNewGraph(""root"");; simpleapi::createObject(root, ""DefaultPipeline"", {{""name"",""Collision Pipeline""}}) ;; simpleapi::createObject(root, ""BruteForceDetection"", {{""name"",""Detection""}}) ;; simpleapi::createObject(root, ""MinProximityIntersection"", {{""name"",""Proximity""},; {""alarmDistance"", ""0.3""},; {""contactDistance"", ""0.2""}}) ;. simpleapi::createObject(root, ""DefaultContactManager"", {; {""name"", ""Contact Manager""},; {""response"", responseType}; });. simpleapi::createObject(root, ""DefaultCollisionGroupManager"", {{""name"", ""Collision Group Manager""}});; return root;; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/427#issuecomment-333236901:1874,Detect,Detection,1874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/427#issuecomment-333236901,1,['Detect'],['Detection']
Safety,"ferent primitives. And it was made such as one could add more intersect() method for new primitives for an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test fai",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4583:1294,avoid,avoid,1294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583,1,['avoid'],['avoid']
Safety,formance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-params-in-decls](https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html) |; | [fuchsia-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-default-arguments.html) | [readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/readability-braces-around-statements.html) |; | [fuchsia-overloaded-operator](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-overloaded-operator.html) | [readability-container-size-empty](https://clang.llvm.org/extra/clang-tidy/checks/readability-container-size-empty.html) |; | [fuchsia-virtual-inheritance](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-virtual-inheritance.html) | [readability-delete-null-pointer](https://clang.llvm.org/extra/clang-tidy/checks/readability-delete-null-pointer.html) |; | [google-build-explicit-make-pair](https://clang.llvm.org/extra/clang-tidy/checks/google-build-explicit-make-pair.html) | [readability-deleted-default](https://clang.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:24779,avoid,avoid-const-params-in-decls,24779,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['avoid'],['avoid-const-params-in-decls']
Safety,g/extra/clang-tidy/checks/misc-misplaced-const.html) |; | [clang-analyzer-core.CallAndMessage](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.CallAndMessage.html) | [misc-misplaced-widening-cast](https://clang.llvm.org/extra/clang-tidy/checks/misc-misplaced-widening-cast.html) |; | [clang-analyzer-core.DivideZero](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DivideZero.html) | [misc-new-delete-overloads](https://clang.llvm.org/extra/clang-tidy/checks/misc-new-delete-overloads.html) |; | [clang-analyzer-core.DynamicTypePropagation](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.DynamicTypePropagation.html) | [misc-non-copyable-objects](https://clang.llvm.org/extra/clang-tidy/checks/misc-non-copyable-objects.html) |; | [clang-analyzer-core.NonNullParamChecker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonNullParamChecker.html) | [misc-redundant-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-redundant-expression.html) |; | [clang-analyzer-core.NonnilStringConstants](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NonnilStringConstants.html) | [misc-sizeof-container](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-container.html) |; | [clang-analyzer-core.NullDereference](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.NullDereference.html) | [misc-sizeof-expression](https://clang.llvm.org/extra/clang-tidy/checks/misc-sizeof-expression.html) |; | [clang-analyzer-core.StackAddressEscape](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.StackAddressEscape.html) | [misc-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/misc-static-assert.html) |; | [clang-analyzer-core.UndefinedBinaryOperatorResult](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-core.UndefinedBinaryOperatorResult.html) | [misc-string-compare](https://clang.llvm.org/extra/clang-tidy/checks/misc-string-compare.htm,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:9076,redund,redundant-expression,9076,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-expression']
Safety,"getEdge() from EdgeSetTopologyContainer does bound-checking and the compiler cannot really optimize that.; EDIT: and moreover, getNbEdges() (edges, etc) used in the getEdge is extremely non-optimized... In a nutsheel, it is much faster to do; ```; const auto& edges = topo.getEdges();; for(const auto& e : edges) ; { ; blabla(e);; }; ```; than; ```; for(auto i = 0; i < topo.getNbEdges() ; i++) ; { ; blabla(topo.getEdge(i));; }; ```. Some idea to keep the getEdge() (and others) would be either to remove the bound-check (maybe enable only in debug like std::vector), or do an unsafe version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2516:578,unsafe,unsafe,578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2516,1,['unsafe'],['unsafe']
Safety,"getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulation::graph::init();. sofa::simulation::setSimulation(new sofa::simulation::graph::DAGSimulation());. for (int i = 0; i < 1000; i++) {. Node::SPtr groot = sofa::simulation::getSimulation()->createNewGraph(""root"");; groot->setGravity({ 0,0,0 });; groot->setDt(0.02);. DefaultAnimationLoop::SPtr animationLoop = New<DefaultAnimationLoop>();; groot->addObject(animationLoop);. // collision pipeline; DefaultPipeline::SPtr collisionPipeline = New<DefaultPipeline>();; collisionPipeline->setName(""Collision Pipeline"");; groot->addObject(collisionPipeline);. // collision detection system; BruteForceBroadPhase::SPtr broadPhaseDetection = New<BruteForceBroadPhase>();; broadPhaseDetection->setName(""Broad Phase Collision Detection"");; groot->addObject(broadPhaseDetection);. BVHNarrowPhase::SPtr narrowPhaseDetection = New<BVHNarrowPhase>();; narrowPhaseDetection->setName(""Narrow Phase Collision Detection"");; groot->addObject(narrowPhaseDetection);. // component to detection intersection; NewProximityIntersection::SPtr detectionProximity = New<NewProximityIntersection>();; detectionProximity->setName(""Detection Proximity"");; detectionProximity->setAlarmDistance(10.0);; detectionProximity->setContactDistance(0.5);; groot->addObject(detectionProximity);. // contact manager; DefaultContactManager::SPtr contactManager = New<DefaultContactManager>();; contactManager->setName(""Contact Manager"");; contactManager->setDefaultResponseType(""PenalityContactForceField"");; groot->addObject(contactManager);. // Node 1; Node::SPtr firstNode = New<DAGNode>();; firstNode->setName(""node 1"");. // Node 2; Node::SPtr secondNode = New<DAGNode>();; secondNode->setName(""node 2"");. // mechanical objects; typedef MechanicalObject< Vec3dTypes > MechanicalObject3d;; MechanicalObject3d::SPtr firstMechanicalObject = New<MechanicalObject3d>();; firstMechanicalObject->setTran",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:3936,Detect,Detection,3936,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147,1,['Detect'],['Detection']
Safety,"hi @olivier-goury my bad, the regression tests have nothing to do with your PR! timeout are strange but same, not related to the PR ;) sorry about that !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/856#issuecomment-448204968:80,timeout,timeout,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/856#issuecomment-448204968,1,['timeout'],['timeout']
Safety,"hold=1e-5). ball_node.addObject(""MechanicalObject"", template=""Rigid3d"", position=[0, 5, 0, 0, 0, 0, 1], showObject=True, showObjectScale=2.0); ball_node.addObject(""UniformMass"", totalMass=10000.0); ball_node.addObject(""SphereCollisionModel"", radius=0.5, group=1); ball_node.addObject(""UncoupledConstraintCorrection""); ```. As a side question: Am I even using the right components? How would you model this scene of a liver with an embedded tumor? I also tested the Heterogeneous-TetrahedronFEMForceField.scn example, but that is even more unstable. When you interact with the object through the mouse, it applies a huge force in the opposite direction. <video src=""https://github.com/sofa-framework/sofa/assets/29635054/dc863ba3-7e55-48e1-8b5d-30d078fd5b88; "" width=""200"" height=""auto"">. I also simplified the liver scene to just the SOFA liver. Same problem with the instability. ```python; import Sofa; import Sofa.Core. PLUGINS = [; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Mapping.NonLinear"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""Sofa.Component.StateContainer"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""MultiThreading"",; ""Sofa.Component.SolidMechanics.FEM.NonUniform"",; ""Sofa.Component.Topology.Container.Grid"",; ""Sofa.Component.IO.Mesh"",; ""Sofa.Component.LinearSolver.Direct"",; ""Sofa.Component.Mapping.Linear"",; ""Sofa.Component.Topology.Container.Constant"",; ]. def createScene(root: Sofa.Core.Node):. plugin_set = set(PLUGINS); for plugin in plugin_set:; root.addObject(""RequiredPlugin"", name=plugin). root.gravity = [0.0, 0",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:7912,Detect,Detection,7912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['Detect'],['Detection']
Safety,"hreading. ### New features; - Add logGraphUpdates / logDataUpdates global variable in objectmodel to be able to debug multi-threading issue (not declared in headers, temporary until a better design is proposed); - Add a flag d_threadsafevisitor in solvers to disable writing in mechanicalstates of InteractionForceField in MechanicalVReallocVisitor/MechanicalVFreeVisitor as it might crash in multithreaded context; - Add `Contact::computeResponse()` and `Contact::finalizeResponse()` to separate thread-safe from sequential parts of the response computations; - Implement thread-safe Data engine/links updates by adding a lock while calling update().This requires that requestUpdate() or requestUpdateIfDirty() be called instead of update() directly, which is now protected.Bonus side effect is that it no longer matter where or if engines call cleanDirty() in their update method.; - Update all engines to new thread-safe design; - Add execution info in Task and index in WorkerThread; - Add support for multithreaded task logging (for visual profiling); - Add some const correctness in getColor and getName methods. ### Improvements; - Remove ClassInfo, deprecated in favor of BaseClass, and make sure all static instances are initialized while registering objects in the factory, to FIX ""pure virtual call"" crashes with visual c++ in multi-threaded contexts; - Replace `Creator<Contact::Factory,` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies conta",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:1052,safe,safe,1052,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['safe'],['safe']
Safety,"https://github.com/sofa-framework/sofa/blob/18149f4407fd78359eead7b64ae23470687c40c4/applications/plugins/ArticulatedSystemPlugin/src/ArticulatedSystemPlugin/ArticulatedSystemMapping.inl#L527; I encountered a situation where `indexT` can be out of `xto`'s bounds. Can it be checked at init? If detected, what to do?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3750:294,detect,detected,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3750,1,['detect'],['detected']
Safety,"https://github.com/sofa-framework/sofa/pull/3266 removed `importPlugin(""SofaComponentAll"") ;` in `NodeContext_test.cpp`, but did not replace it by anything else. I don't know why the CI did not detect it, but the problem can be seen in https://github.com/sofa-framework/sofa/pull/3280. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3322:194,detect,detect,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3322,1,['detect'],['detect']
Safety,idy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modern,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:15969,redund,redundant-void-arg,15969,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-void-arg']
Safety,"imulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core::objectmodel::New;; using sofa::core::objectmodel::Data;. using sofa::simulation::DefaultAnimationLoop;. int main(int argc, char** argv); {; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainLoggingMessageHandler::getInstance());; sofa::helper::logging::MessageDispatcher::addHandler(&sofa::helper::logging::MainPerComponentLoggingMessageHandler::getInstance());; sofa::helper::logging::MainLoggingMessageHandler::getInstance().activate();. sofa::helper::BackTrace::autodump();. sofa::simulatio",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:1867,detect,detection,1867,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147,4,['detect'],['detection']
Safety,"ion will generate a lot of subtile problems and backward compatibility issues. . 3) The third version is close to use the str() in term of design but it makes it explicit that if an object want conversion to be used in the parameters of the createObject function it have to follow a specific protocol...this is done by implementing a dedicated function (eg: getAsACreateObjectParameter()). The implementation of this function for BaseObject and Sofa.Data could simply link to getLinkPath(). But if you have your own 'complex' object and want it to be used as a parameter in createObject you can just implement your own conversion schema. So fundamentally it is like 'str' but with a specific semantic saying that the function returns a string ""that can be parsed as a Sofa parameter"". . This approach has several advantages:; - it does not requires to have a lot of ""hard-coded"" test into the createObject function. ; - it does not mess with the existing str() function and there is no risk to break existing scenes or applications and we haven't to worry about backward compatibility. ; - it makes things very explicit, because people that want to have their object used in createObject have to implement it instead of ""assuming"" that by default any object's str function will produce a string parsable as a Sofa parameter. ; - it is extensible as it allows users to provide their own conversion for their object. ; - it returns a clear warning helping user to locate problems and teach them how to fix their scenes. . As you said Maxime, ""In python semantic of str is to provide a concise representation of an object as a string, which is exactly what BaseObject.getLinkPath does. "" . A ""concise representation"" is a very flexible/weak semantic with a lot of different meaning that will change depending on the context.; For matthieu (and the Anatoscope fork), a concise representation could be ""5.0""; For you it seems to be ""@/myObject.param"" ; For me it should be ""@/myObject.param=5.0"" ; For oth",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308062575:2362,risk,risk,2362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308062575,1,['risk'],['risk']
Safety,ion::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:10368,detect,detection,10368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"ions/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detecti",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18673,Detect,Detection,18673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['Detect'],['Detection']
Safety,"is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in node 'joint'; [ERROR] [SofaPython] Object type UniformCompliance<Vec1d> creation failed; [FATAL] [SofaPython] SP_CALL_MODULEFUNC; Traceback (most recent call last):; File ""LambdaPropagation.py"", line 90, in createScene; joint = StructuralAPI.FixedRigidJoint( ""joint"", ground.node, rigid.node ); File ""/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python/Compliant/StructuralAPI.py"", line 634, in __init__; self.compliance = self.node.createObject('UniformCompliance', name='compliance', compliance=compliance); TypeError: bad argument type for built-in operation; Build timed out (after 30 minutes). Marking the build as aborted.; Build was aborted; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; Recording test results. ########## SIG 15 - SIGTERM: a termination request was sent to the program ##########; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaHelper.so.17.dev.0(sofa::helper::BackTrace::dump()+0x23) [0x7f6585f9be63]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaHelper.so.17.dev.0(sofa::helper::BackTrace::sig(int)+0x14a) [0x7f6585f9c15a]; -> /lib/x86_64-linux-gnu/libc.so.6(+0x36cb0) [0x7f6585049cb0]; -> /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0x5b6b1) [0x7f658594f6b1]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulationCore.so(sofa::simulation::PropagateEventVisitor::processNodeTopDown(sofa::simulation::Node*)+0xec) [0x7f65882c897c]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulati",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:2864,abort,aborted,2864,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,1,['abort'],['aborted']
Safety,isplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/cla,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28574,redund,redundant-declaration,28574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-declaration']
Safety,"it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merg",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:2635,detect,detected,2635,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,1,['detect'],['detected']
Safety,ity-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28717,redund,redundant-smartptr-get,28717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-smartptr-get']
Safety,"k on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:2128,Avoid,Avoid,2128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,1,['Avoid'],['Avoid']
Safety,"kflow :) . My contribution:; ```console; ==91659== 5,152 (32 direct, 5,120 indirect) bytes in 1 blocks are definitely lost in loss record 12,668 of 12,789; ==91659== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==91659== by 0x3EA66C2D: createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> > > (Intersection.h:48); ==91659== by 0x3EA66C2D: beginIntersect (Intersection.inl:60); ==91659== by 0x3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CP",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:1209,detect,detection,1209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654,2,"['Detect', 'detect']","['DetectionOutputVector', 'detection']"
Safety,"l in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:; > ; > 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; > ; > 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; > ; > 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not...; > ; > ; > This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices.; > ; > Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?; > ; > CC: @hugtalbot , @ChristianDuriez , @fjourdes. Thanks @jnbrunet for having looked on this issue. I rephrase your findings as a list of tasks to improve SOFA efficiency and accuracy:. - [ ] Remove EulerExplicitSolver::d_optimizedForDiagonalMatrix and replace it by fetching the result of Mass::isDiagonal; - [ ] CentralDifferenceSolver must be adapted to work with any type of mass matrix; - [ ] Implicit solvers must read the result of Mass::isDiagonal to speed up computations in case mass is diagonal. If we do that, we can assume in this PR that Mass::isDiagonal must not be removed. If you all agree with this list of tasks, I can open the issues.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001:1383,detect,detect,1383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001,1,['detect'],['detect']
Safety,"larBendingSprings i.e. as the Glisson capsule.; be able to apply 3 generic forces: 1 compression 1 traction 1 cut binding the entire posterior part of the liver. ```python; import Sofa; import numpy as np; from scipy import sparse; from scipy import linalg; import numpy as np; from matplotlib import pyplot as plt. USE_GUI = True; exportCSV = True; showImage = False. def main():; import SofaRuntime; import Sofa.Gui. root = Sofa.Core.Node(""root""); createScene(root); Sofa.Simulation.init(root). if not USE_GUI:; for iteration in range(10):; Sofa.Simulation.animate(root, root.dt.value); else:; Sofa.Gui.GUIManager.Init(""myscene"", ""qglviewer""); Sofa.Gui.GUIManager.createGUI(root, __file__); Sofa.Gui.GUIManager.SetDimension(1080, 1080); Sofa.Gui.GUIManager.MainLoop(root); Sofa.Gui.GUIManager.closeGUI(). def createScene(root):; root.gravity=[0, -9.81, 0]; root.dt=0.02. root.addObject(""RequiredPlugin"", pluginName=[; 'Sofa.Component.Collision.Detection.Algorithm',; 'Sofa.Component.Collision.Detection.Intersection',; 'Sofa.Component.Collision.Geometry',; 'Sofa.Component.Collision.Response.Contact',; 'Sofa.Component.Constraint.Projective',; 'Sofa.Component.IO.Mesh',; 'Sofa.Component.LinearSolver.Iterative',; 'Sofa.Component.Mapping.Linear',; 'Sofa.Component.Mass',; 'Sofa.Component.ODESolver.Backward',; 'Sofa.Component.SolidMechanics.FEM.Elastic',; 'Sofa.Component.StateContainer',; 'Sofa.Component.Topology.Container.Dynamic',; 'Sofa.Component.Visual',; 'Sofa.GL.Component.Rendering3D',; 'Sofa.Component.SolidMechanics.Spring',; 'Sofa.Component.MechanicalLoad',; 'Sofa.Component.Topology.Container.Constant'; ]). root.addObject('DefaultAnimationLoop'). root.addObject('VisualStyle', displayFlags=""showCollisionModels""); root.addObject('CollisionPipeline', name=""CollisionPipeline""); root.addObject('BruteForceBroadPhase', name=""BroadPhase""); root.addObject('BVHNarrowPhase', name=""NarrowPhase""); root.addObject('DefaultContactManager', name=""CollisionResponse"", response=""PenalityContactForc",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4861:1945,Detect,Detection,1945,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4861,1,['Detect'],['Detection']
Safety,le-build-using-namespace](https://clang.llvm.org/extra/clang-tidy/checks/google-build-using-namespace.html) | [readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/readability-function-size.html) |; | [google-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/google-default-arguments.html) | [readability-identifier-naming](https://clang.llvm.org/extra/clang-tidy/checks/readability-identifier-naming.html) |; | [google-explicit-constructor](https://clang.llvm.org/extra/clang-tidy/checks/google-explicit-constructor.html) | [readability-implicit-bool-conversion](https://clang.llvm.org/extra/clang-tidy/checks/readability-implicit-bool-conversion.html) |; | [google-global-names-in-headers](https://clang.llvm.org/extra/clang-tidy/checks/google-global-names-in-headers.html) | [readability-inconsistent-declaration-parameter-name](https://clang.llvm.org/extra/clang-tidy/checks/readability-inconsistent-declaration-parameter-name.html) |; | [google-objc-avoid-throwing-exception](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-avoid-throwing-exception.html) | [readability-misleading-indentation](https://clang.llvm.org/extra/clang-tidy/checks/readability-misleading-indentation.html) |; | [google-objc-global-variable-declaration](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-global-variable-declaration.html) | [readability-misplaced-array-index](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:27084,avoid,avoid-throwing-exception,27084,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['avoid'],['avoid-throwing-exception']
Safety,lias-decls](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-alias-decls.html) |; | [clang-analyzer-llvm.Conventions](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-llvm.Conventions.html) | [misc-unused-parameters](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-parameters.html) |; | [clang-analyzer-nullability.NullPassedToNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullPassedToNonnull.html) | [misc-unused-raii](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-raii.html) |; | [clang-analyzer-nullability.NullReturnedFromNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullReturnedFromNonnull.html) | [misc-unused-using-decls](https://clang.llvm.org/extra/clang-tidy/checks/misc-unused-using-decls.html) |; | [clang-analyzer-nullability.NullableDereferenced](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullableDereferenced.html) | [modernize-avoid-bind](https://clang.llvm.org/extra/clang-tidy/checks/modernize-avoid-bind.html) |; | [clang-analyzer-nullability.NullablePassedToNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullablePassedToNonnull.html) | [modernize-deprecated-headers](https://clang.llvm.org/extra/clang-tidy/checks/modernize-deprecated-headers.html) |; | [clang-analyzer-nullability.NullableReturnedFromNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullableReturnedFromNonnull.html) | [modernize-loop-convert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-loop-convert.html) |; | [clang-analyzer-optin.cplusplus.VirtualCall](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.cplusplus.VirtualCall.html) | [modernize-make-shared](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-C,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:14115,avoid,avoid-bind,14115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['avoid'],['avoid-bind']
Safety,"lision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22847,Detect,DetectionOutput,22847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,['Detect'],['DetectionOutput']
Safety,meshconv needs miniflowVR in order to compile.; But the oblivious user is not supposed to know that.... So this fix:; - avoids building meshconv if SOFA_BUILD_MINIFLOWVR is not activated.; - warns the user he needs to activate the previous cmake option. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/358:120,avoid,avoids,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/358,1,['avoid'],['avoids']
Safety,"mework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000fca4c in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::RayNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:15236,detect,detection,15236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,['detect'],['detection']
Safety,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help me！. Thanks so much！",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:3309,recover,recovers,3309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['recover'],['recovers']
Safety,"n::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20258,detect,detection,20258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,['detect'],['detection']
Safety,ng-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [readability-static-definition-in-anonymous-namespace](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-definition-in-anonymous-namespace.html) |; | | [readability-uniqueptr-delete-release](https://clang.llvm.org/extra/clang-tidy/checks/readability-uniqueptr-delete-release.html) |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29592,redund,redundant-string-cstr,29592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,3,['redund'],"['redundant-string-cstr', 'redundant-string-init']"
Safety,ng.MappedMatrix; Adding module Sofa.Component.SolidMechanics; Adding module Sofa.Component.SolidMechanics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -- Sofa.GUI.Common: Sofa.GL dependent features enabled.; Adding lib,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:3276,Detect,Detection,3276,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,1,['Detect'],['Detection']
Safety,"ng.MappedMatrix; Adding module Sofa.Component.SolidMechanics; Adding module Sofa.Component.SolidMechanics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Found OpenGL: /usr/lib/x86_64-linux-gnu/libOpenGL.so ; Found GLEW: /usr/include (found version ""2.1.0"") ; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library S",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:4560,Detect,Detection,4560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,1,['Detect'],['Detection']
Safety,nstraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [IN,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7955,Detect,Detection,7955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Detect'],['Detection']
Safety,nt.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7448,Detect,Detection,7448,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Detect'],['Detection']
Safety,"nt.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in node 'joint'; [ERROR] [SofaPython] Object type UniformCompliance<Vec1d> creation failed; [FATAL] [SofaPython] SP_CALL_MODULEFUNC; Traceback (most recent call last):; File ""LambdaPropagation.py"", line 90, in createScene; joint = StructuralAPI.FixedRigidJoint( ""joint"", ground.node, rigid.node ); File ""/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python/Compliant/StructuralAPI.py"", line 634, in __init__; self.compliance = self.node.createObject('UniformCompliance', name='compliance', compliance=compliance); TypeError: bad argument type for built-in operation; Build timed out (after 30 minutes). Marking the build as aborted.; Build was aborted; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; Recording test results. ########## SIG 15 - SIGTERM: a termination request was sent to the program ##########; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaHelper.so.17.dev.0(sofa::helper::BackTrace::dump()+0x23) [0x7f6585f9be63]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaHelper.so.17.dev.0(sofa::helper::BackTrace::sig(int)+0x14a) [0x7f6585f9c15a]; -> /lib/x86_64-linux-gnu/libc.so.6(+0x36cb0) [0x7f6585049cb0]; -> /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0x5b6b1) [0x7f658594f6b1]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulationCore.so(sofa::simulat",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:2844,abort,aborted,2844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,1,['abort'],['aborted']
Safety,"nvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it should be avoid for now since I'm not sure what side effects this will bring. Right now doing it seems not so bad as, again, we only attach the environment to the already created python environment. ; - A ScriptController will need to be added in order to trigger script events so that the python scene's functions (initGraph, onBeginAnimationStep, etc) are called. The createScene function is called by the SceneLoaderPY so this one is fine. > (I would probably put your feature in a module separate from Sofa for this reason). I think this should be entirely a part of the SofaPython plugin in order to keep what is related to sofa in python there. > what happens when Sofa.cleanup() gets called but python objects still hold c++ objects that are to be destructed when python exits ?. This is a good question. PythonEnvironment::Release is called when python exits (called by the static raii destructor...). I'll have to check this. > But I am really all for it, so good luck with that :-). Th",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:2105,avoid,avoid,2105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['avoid'],['avoid']
Safety,"ocessNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisit",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:1349,avoid,avoided,1349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,1,['avoid'],['avoided']
Safety,"ocessNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added two groups of function in `BaseMechanicalVisitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just hav",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1963:1349,avoid,avoided,1349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963,1,['avoid'],['avoided']
Safety,"ofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::Detection",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22640,Detect,DetectionOutput,22640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,['Detect'],['DetectionOutput']
Safety,"ofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:206; #9 0x7fc2ff205b75 in sofa::simulation::Simulation::initNode(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:213; #10 0x7fc2ff205847 in sofa::simulation::Simulation::init(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:189; #11 0x5646e6e194e0 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:143; #12 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000f9b12 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:18048,detect,detection,18048,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,['detect'],['detection']
Safety,"ofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:12000,detect,detection,12000,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,['detect'],['detection']
Safety,"ofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000eb369 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::intersect(sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator, sofa::core::collision::DetectionOutputVector*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framewor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:24539,detect,detection,24539,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,5,"['Detect', 'detect']","['Detection', 'DetectionOutput', 'detection']"
Safety,"ofaGuiCommon**.; CMakeLists.txt:; ```; sofa_find_package(Sofa.GL) # create the cmake var SOFAGUICOMMON.GL_HAVE_SOFA.GL; ```; config.h.in; ```; #define SOFAGUICOMMON_HAVE_SOFA_GL @SOFAGUICOMMON_HAVE_SOFA.GL@; ```; ColourPickingVisitor.cpp; ```; void ColourPickingVisitor::processTriangleModel(simulation::Node * node, sofa::component::collision::TriangleCollisionModel<sofa::defaulttype::Vec3Types> * tmodel); {; #ifdef SOFAGUICOMMON_HAVE_SOFA_GL; using namespace sofa::core::collision;; using namespace sofa::defaulttype;; glDisable(GL_LIGHTING);; ....; #endif // SOFAGUICOMMON_HAVE_SOFA_GL; ```; # Compatibility with actual code and breaking things; This new module follows the new targeted architecture for Sofa(NG), hence the Sofa.GL syntax.; All classes/functions are now in the namespace sofa::gl and in the folder sofa/gl; e.g Texture, ; **sofa/gl/Texture.h**; ```; namespace sofa::gl; {; 	class Texture {...}; }; ```. To avoid breaking (a lot of) code, a compatibility layer has been implemented, so the existing code still works:; ```; #include <sofa/helper/gl/Texture.h; ...; sofa::helper::gl::Texture = ....;; ```; and will either:; - **create an error** if you did not link against Sofa.GL; - **generate a deprecation warning** if you did link but still using old paths.; So for 99.999% of code, all you have to do is to link against Sofa.GL (or even nothing if you code is already linking against modules linking now against Sofa.GL like SofaOpenGlVisual); ; ## Real breaking code; ONE function has been removed from core::visual::VisualParam :; helper::gl::Framebuffer getFramebuffer(); which was used to get the current bound framebuffer in OpenGL (getting a Sofa utility class Framebuffer).; Two reasons why it has been removed:; - nobody uses it in all the repository; - one can just use a real OpenGL function to get the bound framebuffer, with ; ```; glGetIntegerv(GL_FRAMEBUFFER_BINDING, &result);; ```; for example. # Notes; The compilation of Sofa.GL is itself enabled with the CM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1649:2537,avoid,avoid,2537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1649,1,['avoid'],['avoid']
Safety,ojective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8110,Detect,Detection,8110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Detect'],['Detection']
Safety,"ok for me, just a shame this was not detected automatically by the tests...; Maybe @damienmarchal or @EulalieCoevoet you could put an issue on that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/924#issuecomment-462260724:37,detect,detected,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/924#issuecomment-462260724,1,['detect'],['detected']
Safety,"ok here is the new call stack with your version @hugtalbot :; ```; SphereLoader::load; SphereLoader::load END; SphereLoader::updateFileNameAndTransformPosition; - m_filename changed: 1; - d_translation changed: 0; - d_rotation changed: 0; - d_scale changed: 0; SphereLoader::load; SphereLoader::load END; SphereLoader::applyTransform; SphereLoader::applyTransform END; SphereLoader::Callback exit with load(); ```. So as you can see the file is loaded once at parse time (because of the ```canLoad``` mechanism of the Loader) but the m_filename is still flaged as changed in the tracker so it will call the method load a second time when the Data position/radius are pulled from other components. . This was avoided in my previous version by adding ```m_internalEngine[""filename""].cleanDirty();``` at begining of the Load method. . However it is not looping anymore like in the initial version. Maybe we can say that this double call of load is special due to the Loader mechanism at parse stage (which should be replaced by a nice Data grah update...); For the log from epernod@sophia.inria.fr . Loader are loading file/mesh at parse stage to ensure they are ready and all their data are filled before any other component start linking and using the loader data. You can see it like a ""pre-init"" visitor... in comparison to the bwdInit.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-744821434:708,avoid,avoided,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-744821434,1,['avoid'],['avoided']
Safety,"ollision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/MeshNewProximityIntersection.cpp:105; #9 0x7fc3000",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:24030,detect,detection,24030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,5,"['Detect', 'detect']","['Detection', 'DetectionOutput', 'detection']"
Safety,"ometryAlgorithms name=""Torus0Algo"" />; <MeshMatrixMass name=""MMass"" massDensity=""2.0"" />; <TetrahedronFEMForceField name=""FEM"" youngModulus=""50"" poissonRatio=""0.45"" />; </Node>. <Node name=""Object2"" >; <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>; <MechanicalObject template=""Rigid3d"" name=""myParticle"" position=""0 0 0 0 0 0 1"" showObject=""1"" />; <UniformMass name=""UMass"" totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />; </Node>; </Node>; ```. #### Advantages; - easy to write a scene with a global gravity; - light nodes (no additional ForceField appearing). #### Drawbacks; - prone to error for beginners not seeing that a gravity (external force) is acting. ## Proposal; - gravity can still be defined though a data in the Nodes (but default value changed `gravity=""0 0 0""`); - using this data gravity generates a warning (not the default/advised way of designing a scene); - if this gravity data is not null, mass components automatically create a GravityForceField in the node; - GravityForceField have a link towards the mass to avoid recomputing the M matrix; - gravity contribution is added in the matrix system by a ForceField; - GravityForceField must be in the node to compute the gravity. #### Typical scene; old scene works and now you also can write:. ``` xml; <Node name=""root"" dt=""0.01"">; <DefaultAnimationLoop name=""animationLoop"" solveVelocityConstraintFirst=""true"" . <Node name=""Object1"">; <EulerImplicitSolver name=""ODE0"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver template=""CompressedRowSparseMatrixMat3x3d"" name=""Linear0"" />; <TetrahedronSetTopologyContainer name=""Torus0Topo"" position=""@/Mesh/stuffing.outputPoints"" tetrahedra=""@/Mesh/stuffing.outputTetrahedra""/>; <MechanicalObject name=""Torus0State"" template=""Vec3d"" velocity=""@/Mesh/TorusVVel.output_position"" rest_position=""@/Mesh/stuffing.outputPoints"" position=""@Torus0VXForm.output_position"" />; <TetrahedronSetGeometryAlgorithms",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3149:2145,avoid,avoid,2145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3149,1,['avoid'],['avoid']
Safety,"on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is executed.; - DDGNode should never be copied to ensure thread safe. Add private copy constructor that gives compilation error to ensure that.; - Compilation fixes for compatibility with boost 1_55. Corrected also the copyright notice.; - Fix execution freeze bug due to simultaneous and reciprocal task stealing between 2 threads (WorkerThread).; - Fix data race at startup, WorkerThread:mTaskScheduler was set by the main thread while being read by the worker thread. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break AP",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:3323,detect,detection,3323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['detect'],['detection']
Safety,"on/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc300297559 in __gnu_cxx::new_allocator<sofa::core::collision::DetectionOutput>::allocate(unsigned long, void const*) /usr/include/c++/9/ext/new_allocator.h:114; #2 0x7fc3002972fe in std::allocator_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be i",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:22460,Detect,DetectionOutput,22460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['Detect'],['DetectionOutput']
Safety,"on::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:97; #16 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::comp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:32688,detect,detection,32688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"on::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::Simulation::animate(sofa::simulation::Node*, double); sofa::gui::qt::RealGUI::step(); QMetaObject::activate(QObject*, int, int, void**); QTimer::timeout(QTimer::QPrivateSignal); QObject::event(QEvent*); QApplicationPrivate::notify_helper(QObject*, QEvent*); QApplication::notify(QObject*, QEvent*); QCoreApplication::notifyInternal2(QObject*, QEvent*); QTimerInfoList::activateTimers(); g_main_context_dispatch; g_main_context_iteration; QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>); QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>); QCoreApplication::exec(); sofa::gui::qt::RealGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; zsh: segmentation fault (core dumped) ~/repos/sofa/build/master/bin/runSofa ; ```; </details>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:9057,timeout,timeout,9057,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['timeout'],['timeout']
Safety,onent.SolidMechanics; Adding module Sofa.Component.SolidMechanics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -- Sofa.GUI.Common: Sofa.GL dependent features enabled.; Adding library Sofa.GUI.Batch; Adding library Sofa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:3326,Detect,Detection,3326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,1,['Detect'],['Detection']
Safety,"onent.SolidMechanics; Adding module Sofa.Component.SolidMechanics.Spring; Adding module Sofa.Component.SolidMechanics.FEM; Adding module Sofa.Component.SolidMechanics.FEM.Elastic; Adding module Sofa.Component.SolidMechanics.FEM.HyperElastic; Adding module Sofa.Component.SolidMechanics.FEM.NonUniform; Adding module Sofa.Component.SolidMechanics.TensorMass; Adding module Sofa.Component.StateContainer; Adding module Sofa.Component.Constraint; Adding module Sofa.Component.Constraint.Lagrangian; Adding module Sofa.Component.Constraint.Lagrangian.Model; Adding module Sofa.Component.Constraint.Lagrangian.Correction; Adding module Sofa.Component.Constraint.Lagrangian.Solver; Adding module Sofa.Component.Constraint.Projective; Adding module Sofa.Component.AnimationLoop; Adding module Sofa.Component.MechanicalLoad; Adding module Sofa.Component.Collision; Adding module Sofa.Component.Collision.Geometry; Adding module Sofa.Component.Collision.Detection; Adding module Sofa.Component.Collision.Detection.Algorithm; Adding module Sofa.Component.Collision.Detection.Intersection; Adding module Sofa.Component.Collision.Response; Adding module Sofa.Component.Collision.Response.Mapper; Adding module Sofa.Component.Collision.Response.Contact; Adding module Sofa.Component.Setting; Adding module Sofa.Component.Controller; Adding module Sofa.Component.Engine; Adding module Sofa.Component.Engine.Analyze; Adding module Sofa.Component.Engine.Generate; Adding module Sofa.Component.Engine.Select; Adding module Sofa.Component.Engine.Transform; Adding module Sofa.Component.Haptics; Adding library Sofa.GL; Found OpenGL: /usr/lib/x86_64-linux-gnu/libOpenGL.so ; Found GLEW: /usr/include (found version ""2.1.0"") ; Adding module Sofa.GL.Component; Adding module Sofa.GL.Component.Rendering2D; Adding module Sofa.GL.Component.Rendering3D; Adding module Sofa.GL.Component.Engine; Adding module Sofa.GL.Component.Shader; Adding module Sofa.GUI.Component; Adding library Sofa.GUI.Common; cxxopts version 2.2.0; -",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:4610,Detect,Detection,4610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,1,['Detect'],['Detection']
Safety,"ons/projects/sofaProjectExample/Main.cpp:166; #24 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d6c54 in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::MeshDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detecti",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:9990,Detect,Detection,9990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['Detect'],['Detection']
Safety,onstraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Compon,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7803,Detect,Detection,7803,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Detect'],['Detection']
Safety,"p7-withSTLIB.py"" and ""param.py"" file as below. ![Screenshot from 2024-10-12 18-06-10](https://github.com/user-attachments/assets/7e0973ba-db7c-4783-9cfc-f6591c17f542). ""step7-withSTLIB.py"". `# STLIB IMPORT; from stlib3.scene import MainHeader; from stlib3.scene import ContactHeader; from stlib3.physics.rigid import Floor, Cube; from stlib3.physics.deformable import ElasticMaterialObject. # SOFTROBOTS IMPORT; from softrobots.actuators import PullingCable, PneumaticCavity. # CONTROLLER IMPORT; from wholeGripperController import WholeGripperController. # ARGUMENTS IMPORT; from param import *. def createScene(rootNode):; rootNode.addObject('RequiredPlugin', name='Sofa.Component.AnimationLoop') # Needed to use components [FreeMotionAnimationLoop]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Algorithm') # Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,CollisionPipeline]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Intersection') # Needed to use components [LocalMinDistance]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Collision.Geometry') # Needed to use components [LineCollisionModel,PointCollisionModel,TriangleCollisionModel]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Collision.Response.Contact') # Needed to use components [RuleBasedContactManager]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Constraint.Lagrangian.Correction') # Needed to use components [LinearSolverConstraintCorrection,UncoupledConstraintCorrection]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Constraint.Lagrangian.Solver') # Needed to use components [GenericConstraintSolver]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Engine.Select') # Needed to use components [BoxROI] ; rootNode.addObject('RequiredPlugin', name='Sofa.Component.LinearSolver.Direct') # Needed to use components [SparseLDLSolver]; rootNode.addObject('RequiredPlugin', name='Sofa.Compon",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5060:1557,Detect,Detection,1557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5060,1,['Detect'],['Detection']
Safety,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4255:1631,avoid,avoid,1631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255,2,"['avoid', 'safe']","['avoid', 'safe']"
Safety,pe-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-params-in-decls](https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html) |; | [fuchsia-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-default-arguments.html) | [readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/readability-braces-around-statements.html) |; | [fuchsia-overloaded-operator](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-overloaded-operator.html) | [readability-container-size-empty](https://clang.llvm.org/extra/clang-tidy/checks/readability-container-size-empty.html) |; | [fuchsia-virtual-inheritance](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-virtual-inheritance.html) | [readability-delete-null-pointer](https://clang.llvm.org/extra/clang-tidy/checks/readability-delete-null-pointer.html) |; | [google-build-explicit-make-pair](https://clang.llvm.org/extra/clang-tidy/checks/google-build-explicit-make-pair.html) | [readability-deleted-default](https://clang.llvm.org/extra/clang-tidy/checks/readability-deleted-default.html) |; |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:24867,avoid,avoid-const-params-in-decls,24867,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['avoid'],['avoid-const-params-in-decls']
Safety,"phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2030:1192,avoid,avoid,1192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030,1,['avoid'],['avoid']
Safety,ps://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://cl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28761,redund,redundant-function-ptr-dereference,28761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-function-ptr-dereference']
Safety,ps://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [readability-static-definition-in-anonymous-namespace](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-definition-in-anonymous-namespace.html) |; | | [readability-uniqueptr-delete-release](https://clang.llvm.org/extra/clang-tidy/checks/readability-uni,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29510,redund,redundant-string-cstr,29510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-string-cstr']
Safety,"put, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection::computeIntersection(sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >&, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23811,Detect,DetectionOutput,23811,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,['Detect'],['DetectionOutput']
Safety,"r function will produce a string parsable as a Sofa parameter. ; - it is extensible as it allows users to provide their own conversion for their object. ; - it returns a clear warning helping user to locate problems and teach them how to fix their scenes. . As you said Maxime, ""In python semantic of str is to provide a concise representation of an object as a string, which is exactly what BaseObject.getLinkPath does. "" . A ""concise representation"" is a very flexible/weak semantic with a lot of different meaning that will change depending on the context.; For matthieu (and the Anatoscope fork), a concise representation could be ""5.0""; For you it seems to be ""@/myObject.param"" ; For me it should be ""@/myObject.param=5.0"" ; For others it could be ""Sofa.Data: @/myObject.param=5.0"" . These options are more or less adequate depending on the context...but they are all fully valid description because they match the clearly defined and accepted semantic. This is why I think solution 2 is clearly not the way to go because it change this well defined semantic for something narrower in which the str() function should return something that can be parsed as an argument in the createObject function. Doing so is like forcing anyone passing an object to createObject to modify their str() function to make it work with createObject. . I personally think that as the python specification for str() is very weak it is only a way to generate string to be read by human (that can cope with the inherent flexibility of its specification) but I prefer avoiding it to generate string that have to be processed by a program. When I have to generate string that are ""parsable"" I tend to use specific function with much tighter specification. . @maxime-tournier You are totally right about the recursive aspect...I didn't though about that. My initial worrying was it was transformating a complex structure into a flat one and I wasn't sure it was something that should be done in every cases for any types.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308062575:4187,avoid,avoiding,4187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308062575,1,['avoid'],['avoiding']
Safety,"r.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3328,Detect,Detection,3328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Detect'],['Detection']
Safety,"rTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:48; #2 0x7fc3000eb263 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:60; #3 0x7fc3002426aa in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #5 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #6 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeC",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:2723,detect,detection,2723,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"r_traits<std::allocator<sofa::core::collision::DetectionOutput> >::allocate(std::allocator<sofa::core::collision::DetectionOutput>&, unsigned long) /usr/include/c++/9/bits/alloc_traits.h:443; #3 0x7fc300296f03 in std::_Vector_base<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_allocate(unsigned long) /usr/include/c++/9/bits/stl_vector.h:343; #4 0x7fc3000e7ed8 in void std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::_M_realloc_insert<sofa::core::collision::DetectionOutput>(__gnu_cxx::__normal_iterator<sofa::core::collision::DetectionOutput*, std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> > >, sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:440; #5 0x7fc3000e79be in sofa::core::collision::DetectionOutput& std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::emplace_back<sofa::core::collision::DetectionOutput>(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/vector.tcc:121; #6 0x7fc3000e72a9 in std::vector<sofa::core::collision::DetectionOutput, std::allocator<sofa::core::collision::DetectionOutput> >::push_back(sofa::core::collision::DetectionOutput&&) /usr/include/c++/9/bits/stl_vector.h:1201; #7 0x7fc3000e5abb in sofa::component::collision::detection::intersection::NewProximityIntersection::doIntersectionPointPoint(double, sofa::type::Vec<3u, double> const&, sofa::type::Vec<3u, double> const&, sofa::type::vector<sofa::core::collision::DetectionOutput, sofa::type::CPUMemoryManager<sofa::core::collision::DetectionOutput> >*, int) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.inl:51; #8 0x7fc3000e33f8 in sofa::component::collision::detection::intersection::MeshNewProximityIntersection:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:23493,Detect,DetectionOutput,23493,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,5,['Detect'],['DetectionOutput']
Safety,"replace all beginEdit by WriteOnlyAccessor to avoid updateIfDirty while modifying the data. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2414:46,avoid,avoid,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2414,1,['avoid'],['avoid']
Safety,"rojects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000ff16e in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::DiscreteIntersection, sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detecti",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:20891,Detect,Detection,20891,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['Detect'],['Detection']
Safety,"rrect indices from a triangle in collision to the corresponding hexahedron through `Quad2TriangleTopologicalMapping`; ![image](https://user-images.githubusercontent.com/29635054/183475460-77b7bb9a-8a65-454f-9933-6dddd115a17a.png). For the `EdgeSetTopology`, there is no cutting happening on `LineCollisionModel`, probably because there is no corresponding implementation in `TopologicalChangeManager::removeItemsFromCollisionModel`?; ![image](https://user-images.githubusercontent.com/29635054/183475472-d303ce7e-b499-4676-8802-7482ce610e2c.png). The minimal scene for reproducing the behavior (also works through the mouse manager) is:. <details>; <summary>Click to expand!</summary>. ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. # test_cutting = ""hexa""; test_cutting = ""edges"". plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [LineCollisionModel, PointCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Setting"", # [BackgroundSetting]; ""Sofa.Component.Topology.Container.Dynamic"", # [HexahedronSetTopologyContainer, HexahedronSetTopologyModifier]; ""Sofa.Component.Topology.Container.Grid"", # [RegularGridTopology]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [HexahedronFEMForceField]; ""Sofa.Component.Topology.Mapping"", # [Hexa2TetraTopologicalMapping]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ]. plugin_node = root_node.addChild(""Plugins""). for plugi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3201:1201,Detect,Detection,1201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3201,1,['Detect'],['Detection']
Safety,"s describe set of polynomial coefficients sequentially combined in one vector. The coefficients are put from smaller degree to bigger one, and the free coefficient is always zero (since for no strain we have no stress). For examples the coefficients for polynomials [3,2,4] will be put as [a1,a2,a3,b1,b2,c1,c2,c3,c4].; The dedication of jacobian matrix for PolynomialSpringForceField is given below; ![Pol1](https://user-images.githubusercontent.com/28653498/79741283-45f34c00-8301-11ea-8472-778b8b4c4dc4.JPG); ![Pol2](https://user-images.githubusercontent.com/28653498/79741289-4855a600-8301-11ea-86fc-b1a2aa29b92c.JPG); ![Pol3](https://user-images.githubusercontent.com/28653498/79741294-4ab80000-8301-11ea-8ef9-ff2a29603218.JPG); ![Pol4](https://user-images.githubusercontent.com/28653498/79741295-4be92d00-8301-11ea-9ef8-a444c6d23f44.JPG); I guess the dedication has to be added as documentation, but I do not know how to add it. For RestShapeSpring I added an exponetial addition to the denominator to avoid Nan problems for cases when spring has a zero length. As a result, the stress simulation is shifted compared with polynomial values, but it keeps its nonlinearity. Here is the dedication of a derivative; ![RestPol1](https://user-images.githubusercontent.com/28653498/79741632-de89cc00-8301-11ea-95a5-72803bb1d259.JPG); ![RestPol2](https://user-images.githubusercontent.com/28653498/79741636-e0ec2600-8301-11ea-87f6-fd7ce1e8c3d1.JPG); ![RestPol3](https://user-images.githubusercontent.com/28653498/79741643-e34e8000-8301-11ea-8ce7-5e44658d802d.JPG); ![RestPol4](https://user-images.githubusercontent.com/28653498/79741646-e3e71680-8301-11ea-9d20-5c1327fb4080.JPG). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342:1551,avoid,avoid,1551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342,1,['avoid'],['avoid']
Safety,"setMechanical() and isMechanical() use the boolean states of forces, masses and constraints.; But the ""meta-alias""(?) `isMechanical` only link forces and masses. So it would make sense to add constraints 🤔. Avoid cases like https://github.com/fredroy/BeamAdapter/commit/58b3db1eb11dab501eec7d6a50b6cce3fcaf9a51. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4360:207,Avoid,Avoid,207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4360,1,['Avoid'],['Avoid']
Safety,"sion/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:97; #16 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/NarrowPhaseDetection.cpp:41; #17 0x7fc300261107 in sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/DefaultPipeline.cpp:238; #18 0x7fc2ff1ec0e0 in sofa::simulation::PipelineImpl::computeCollisionDetection() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/PipelineImpl.cpp:117; #19 0x7fc2ff12923f in sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/CollisionVisitor.cpp:78; #20 0x7fc2ff129ac6 in void sofa::simulation::Visitor::runVisitorTask<sofa::simulation::CollisionVisitor, sofa::simulation::Node, sofa::core::collision::Pipeline>(sofa::simulation::CollisionVisitor*, sofa::simulation::Node*, void (sofa::simulation::CollisionVisitor::*)(sofa::simulation::Node*, sofa::core::collision::Pipeline*), sofa::core::collision::Pipeline*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:33409,detect,detection,33409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"sofa::simulation::Node*, double); sofa::gui::batch::BatchGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; ```. and with GDB:. ```; double free or corruption (out). Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; Download failed: Invalid argument. Continuing without source file ./nptl/./nptl/pthread_kill.c. ; 44	./nptl/pthread_kill.c: No such file or directory.; (gdb) where; #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; #1 __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78; #2 __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89; #3 0x00007ffff5242866 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #4 0x00007ffff52268b7 in __GI_abort () at ./stdlib/abort.c:79; #5 0x00007ffff5227750 in __libc_message (fmt=fmt@entry=0x7ffff53c3b34 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:150; #6 0x00007ffff52a3c67 in malloc_printerr (str=str@entry=0x7ffff53c6a20 ""double free or corruption (out)""); at ./malloc/malloc.c:5765; #7 0x00007ffff52a5c50 in _int_free_merge_chunk (av=0x7ffff53feca0 <main_arena>, p=0x5555567f2740, size=2619930050800); at ./malloc/malloc.c:4669; #8 0x00007ffff52a87f3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391; #9 0x00007ffff79b94db in std::__new_allocator<int>::deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/new_allocator.h:168; #10 0x00007ffff79ae098 in std::allocator_traits<std::allocator<int> >::deallocate (__n=57, __p=0x5555567f2750, ; __a=...) at /usr/include/c++/13/bits/alloc_traits.h:516; #11 std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/stl_vector.h:387; #12 0x",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:13116,abort,abort,13116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['abort'],['abort']
Safety,t.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7601,Detect,Detection,7601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Detect'],['Detection']
Safety,"tTopology`; - `EdgeSetTopology`. For the `HexahedronSetTopology`, there seems to be a bug in mapping the correct indices from a triangle in collision to the corresponding hexahedron through `Quad2TriangleTopologicalMapping`; ![image](https://user-images.githubusercontent.com/29635054/183475460-77b7bb9a-8a65-454f-9933-6dddd115a17a.png). For the `EdgeSetTopology`, there is no cutting happening on `LineCollisionModel`, probably because there is no corresponding implementation in `TopologicalChangeManager::removeItemsFromCollisionModel`?; ![image](https://user-images.githubusercontent.com/29635054/183475472-d303ce7e-b499-4676-8802-7482ce610e2c.png). The minimal scene for reproducing the behavior (also works through the mouse manager) is:. <details>; <summary>Click to expand!</summary>. ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. # test_cutting = ""hexa""; test_cutting = ""edges"". plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [LineCollisionModel, PointCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Setting"", # [BackgroundSetting]; ""Sofa.Component.Topology.Container.Dynamic"", # [HexahedronSetTopologyContainer, HexahedronSetTopologyModifier]; ""Sofa.Component.Topology.Container.Grid"", # [RegularGridTopology]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [HexahedronFEMForceField]; ""Sofa.Component.Topology.Mapping"", # [Hexa2TetraTopologicalMapping]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3201:1094,Detect,Detection,1094,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3201,1,['Detect'],['Detection']
Safety,thanks a lot for improving your PR @maddin200 ; I made some suggestions to improve the readability of the code. FYI you could have updated your original PR #3224 it would avoid closing / reopening PRs,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3267#issuecomment-1236084796:171,avoid,avoid,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3267#issuecomment-1236084796,1,['avoid'],['avoid']
Safety,thanks for the examples. I like the solution of sending warning if value are not possible and set to default one. This would avoid chain reaction in the graph.; I will do that for the grid. Do you know it the ComponentState::Invalid is used in the simulation graph? checked by visitor?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278902204:125,avoid,avoid,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278902204,1,['avoid'],['avoid']
Safety,"thanks to #2989 and debug mode, a bug could be detected when the topology handler registers data for quad.; (I suppose this should fix data updates when a quad container has topological changes). Based on : ; - #2989 (to fix compilation). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2990:47,detect,detected,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2990,1,['detect'],['detected']
Safety,the ```return``` was added intentionally in a previous PR where mechanism to force the initialization of topology container have been added to avoid time bomb. ; Removing the return means you don't bother of the error sent just before and you continue to fill or not fill data and you will get a crash later in another component due to inconsistent topology buffers access. Can you check how many errors you get in your example without this return?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577238750:143,avoid,avoid,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577238750,1,['avoid'],['avoid']
Safety,this remind me an old aborted try in this PR: https://github.com/sofa-framework/sofa/pull/1506,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1283649941:22,abort,aborted,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1283649941,1,['abort'],['aborted']
Safety,"ting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2010:2099,detect,detection,2099,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010,1,['detect'],['detection']
Safety,"tion/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:27634,detect,detection,27634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,5,"['Detect', 'detect']","['Detection', 'DetectionOutputVector', 'detection']"
Safety,tion::RayDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Direct leak of 120 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:19051,detect,detection,19051,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"tionForceField in MechanicalVReallocVisitor/MechanicalVFreeVisitor as it might crash in multithreaded context; - Add `Contact::computeResponse()` and `Contact::finalizeResponse()` to separate thread-safe from sequential parts of the response computations; - Implement thread-safe Data engine/links updates by adding a lock while calling update().This requires that requestUpdate() or requestUpdateIfDirty() be called instead of update() directly, which is now protected.Bonus side effect is that it no longer matter where or if engines call cleanDirty() in their update method.; - Update all engines to new thread-safe design; - Add execution info in Task and index in WorkerThread; - Add support for multithreaded task logging (for visual profiling); - Add some const correctness in getColor and getName methods. ### Improvements; - Remove ClassInfo, deprecated in favor of BaseClass, and make sure all static instances are initialized while registering objects in the factory, to FIX ""pure virtual call"" crashes with visual c++ in multi-threaded contexts; - Replace `Creator<Contact::Factory,` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:1598,safe,safety,1598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['safe'],['safety']
Safety,to avoid breaking external plugins. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/870:3,avoid,avoid,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/870,1,['avoid'],['avoid']
Safety,"torTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3, double>, sofa::type::Vec<3, double>, double> > > (Intersection.h:48); ==91659== by 0x3EA66C2D: beginIntersect (Intersection.inl:60); ==91659== by 0x3EA66C2D: sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::LocalMinDistance>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) (Intersection.inl:54); ==91659== by 0x3E97FA7E: sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) (BVHNarrowPhase.cpp:73); ==91659== by 0x53714C0: sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) (NarrowPhaseDetection.cpp:41); ==91659== by 0x3E99415F: sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionDetection(sofa::type::vector<sofa::core::CollisionModel*, sofa::type::CPUMemoryManager<sofa::core::CollisionModel*> > const&) (DefaultPipeline.cpp:238); ==91659== by 0x4BBD0D6: sofa::simulation::PipelineImpl::computeCollisionDetection() (PipelineImpl.cpp:117); ==91659== by 0x4B68E62: sofa::simulation::CollisionVisitor::processCollisionPipeline(sofa::simulation::Node*, sofa::core::collision::Pipeline*) (CollisionVisitor.cpp:78); ==91659== by 0x4B690BC: runVisitorTas",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654:1450,detect,detection,1450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256349654,1,['detect'],['detection']
Safety,tra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/ex,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:29020,redund,redundant-member-init,29020,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-member-init']
Safety,trahedronDiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000bcd82 in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::DiscreteIntersection>::addIntersectors(sofa::component::collision::detection::intersection::DiscreteIntersection*) (/home/pit/LocalApps/sofa/sofa/src/build/lib/libSofa.Component.Collision.Detection.Intersection_d.so.22.12.99+0xded82); #3 0x7fc3000bbbf0 in sofa::component::collision::detection::intersection::DiscreteIntersection::DiscreteIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/DiscreteIntersection.cpp:56; #4 0x7fc3000b1bc1 in sofa::component::collision::detection::intersection::BaseProximityIntersection::BaseProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/BaseProximityIntersection.cpp:31; #5 0x7fc3000f3485 in sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:47; #6 0x5646e6e1b4b1 in sofa::core::objectmodel::New<sofa::component::collision::detection::intersection::NewProximityIntersection>::New<>() /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/objectmodel/SPtr.h:56; #7 0x5646e6e18d86 in main /home/pit/LocalApps/sofa/sofa/src/applications/projects/sofaProjectExample/Main.cpp:96; #8 0x7fc2fd4a8082 in __libc_start_main ../csu/libc-start.c:308. Indirect leak of 9830400 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:21269,detect,detection,21269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,"tryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:1575,detect,detect,1575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,1,['detect'],['detect']
Safety,"ttern needs to be implemented again for classes, derived from BaseObject, and base class themselves. Look at BarycentricMapping, derived from Mapping, for example: it calls Inherit1::doBaseObjectInit, which is actually the same problem that you described. Here also it should be replaced by a ""delegate"" pattern. Yes, all call-super need to be fixed that way (which I didn't in the PR), I will not do that unless it is clear we are really going to do such a breaking change in the sofa code base ;) . > Currently, the fact that `init()` is no longer virtual is breaking. I had the same problem in https://github.com/sofa-framework/sofa/pull/3242. Do you have an idea to guide the developers in the update of their code?. I'm not sure I get the point . EDIT: (....I'm reading 3242 to see if I understand). ; EDIT2: the easy non breaking strategy is to use new names for the base virtual function eg: newInit (not sure we want that). (good code use override so if we keep the old name the code will breaks will be detected at compile time) but this is probably not enough... > Finally, I don't like `doBaseObjectInit`, and it is a problem of this pattern: we need to invent new names for delegate methods even though they are similar to the initial method. Instead of ""inventing"" new names for delegates methods I strongly advocate to rely on single and clear name scheme. . Currently I'm doing:; ```console; do _ ClassThatDelegatesToYou _ MethodDelegated; ```; so ```BaseObject::init()``` become ```doBaseObjectInit()``` (which I interpret as ""do"" the init as requested by BaseObject). . The underlying idea of the naming scheme is that with a first sight we get a lot of information... the (do) show the intention of the code and the pattern used, while the class's name indicates where to look at to get documentation on what the ""methodDelegated"" should do (to know contract the child has to fulfill). . The advantage I see with that naming scheme is that it works with chain of delegation. So the c",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162:1203,detect,detected,1203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317#issuecomment-1252323162,1,['detect'],['detected']
Safety,"type::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:48; #2 0x7fc3000eb263 in sofa::core::collision::MemberElementIntersector<sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::TPoint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::beginIntersect(sofa::core::CollisionModel*, sofa::core::CollisionModel*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.inl:60; #3 0x7fc3002426aa in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:73; #4 0x7fc2fea01259 in sofa::core::collision::NarrowPhaseDetection::addCollisionPairs(sofa::type::vector<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*>, sofa::type::CPUMemoryManager<std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> > > const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/framewor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:2398,detect,detection,2398,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,2,"['Detect', 'detect']","['DetectionOutputVector', 'detection']"
Safety,"ual meshes (based on SofaPhysicsAPI), therefore this feature was never enabled/tested in real applications so it can make sense to remove it.; 4. It would be interesting to measure if there are any performance gained from just removing the TLS qualifier (as done in PR #1129). I expect it to not be measurable, but performances can be surprising, which is why any optimization efforts should measure before and after ;); 5. If the TLS part of ExecParams is removed, then you should also remove everything that depends on it: MultithreadGUI, ExecParams::threadID, aspectID, AspectPool, *AspectVisitor, DDGNode::currentAspect()/copyAspect()/..., and all the aspect-related features in Data and Link. Otherwise all these code will be silently broken by the change.; 6. Note that this also makes ExecParams itself a bit pointless. The initial rational was that this provides a thread-safe way to set parameters controlling all codes in such a way that even if it is not explicitly passed in to all API calls, it can be queried with ExecParams::defaultInstance(), with the guarantee that this will always provide exactly the correct values (as there is a single copy per thread). For instance, this could allow to change the ExecMode in order to trace/profile a specific part of the computation. Without TLS, all calls done in parallel in other threads would now share the same mode. But as ExecMode was only ever used for KAAPI support (now removed), it is possible to decide to remove this as well without losing much.; 7. As a final point, one alternative fix (that I would personally prefer, but I am no longer involved directly so it is not up to me) would be to redesign this such that checkValidStorage() is no longer needed. The core issue is more related to the multithread TaskScheduler, where if a MechanicalParams (or another child of ExecParams) is copied from one thread to another as part of a Task, we can have functions that are called with the wrong ""storage"" pointer belonging to the ca",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748:1847,safe,safe,1847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748,1,['safe'],['safe']
Safety,"when I animate the simulation I get the following warning message form the command window:. > [WARNING] [CGLinearSolver(CGLinearSolver)] den = 0.0, break the iterations. And then the simulation doesn't move anymore.; My code is reported below. `; from turtle import position; from splib3.objectmodel import SofaPrefab; from splib3.numerics import getOrientedBoxFromTransform; import Sofa. def createScene(rootNode):. pluginNameList = [""Sofa.Component.Engine.Select"",; ""Sofa.Component.IO.Mesh"",; ""Sofa.Component.LinearSolver.Direct"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""Sofa.Component.SolidMechanics.FEM.Elastic"",; ""Sofa.Component.SolidMechanics.Spring"",; ""Sofa.Component.StateContainer"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Engine.Select"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.GUI.Component"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Setting"",; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Topology.Container.Constant""]. rootNode.findData('gravity').value=[0,0,-10];; rootNode.findData('dt').value=0.01; ; # Plugin loading; rootNode.addObject('RequiredPlugin', pluginName=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject('OglSceneFrame', style=""Arrows"", ; alignment=""To",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:1147,Detect,Detection,1147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['Detect'],['Detection']
Safety,"when passing ""this"" as argument, forcing object copy to avoid unexpected results; Fixes #280 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317:56,avoid,avoid,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317,1,['avoid'],['avoid']
Safety,"wo types in sofa: only header files that are not (yet) used by other components. ; The DataCallback allows to call a specific function after any modification of a data. in the declaration of the class ; ```; Data<double> d_data; DataCallback c_data; // I usually prefix with c_; ```. At the initialization of the constructor:; ```; : d_diff(initData(&d_diff, ""name"", ""desc"")); , c_diff(d_diff) // listen to d_diff data. The constructor of the DataCallback takes a data as reference; ```. Then anywhere (usually in the constructor body); ```; c_diff.addCallback(this,&MyComponent::myfunction1); ; c_diff.addCallback(this,&MyComponent::myfunction2); ; ```. The main difference with an existing type in sofa if the possibility to attach several functions and more importantly to specify the component on which the callback will be called. This allows to define callbacks as member functions of the component, which simplify access to parameters. Additional test are added allowing to modify the data while the callback is called (in order to avoid cyclic calls). This is usefull for linked data i.e. The callback receives a modification from the parent, the callback is then called and it is allowed to modify the data in the callback which will automatically call update of childs of the data. . The second type introduced in this PR is a wrapper allowing to easily associate a widget with a specific types of data. It can be used as follows: . in a cpp file; `sofa::helper::Creator<sofa::gui::qt::DataWidgetFactory, GenericDataWidget< Data<bool>, QtDataBoxEdit > >	DWClass_bool(""bool"",true);`. QtDataBoxEdit is a Qwidget class defined by the user that needs to define usual functions needed in sofa widgets : ; ```; void readFromData(const Data<bool>& data);; void writeToData(Data<bool>& data);; ```. And constructor must take as parameter the parent and the data as follows :; `QtDataBoxEdit(sofa::gui::qt::DataWidget* parent,const sofa::core::objectmodel::Data<bool> & data) : QCheckBox(parent);`. _",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911:1044,avoid,avoid,1044,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911,1,['avoid'],['avoid']
Safety,would compilers not detect it anyway @alxbilger ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3233#issuecomment-1222838244:20,detect,detect,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3233#issuecomment-1222838244,1,['detect'],['detect']
Safety,"x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000eb62a in sofa::core::collision::IntersectorCreator<sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MeshNewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:95; #2 0x7fc3000f3c9c in sofa::core::collision::IntersectorFactory<sofa::component::collision::detection::intersection::NewProximityIntersection>::addIntersectors(sofa::component::collision::detection::intersection::NewProximityIntersection*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/IntersectorFactory.h:71; #3 0x7fc3000f3696 in sofa::component::collision::detection::intersection::NewProximityIntersection::init() /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Intersection/src/sofa/component/collision/detection/intersection/NewProximityIntersection.cpp:63; #4 0x7fc2ff13bd72 in sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Core/src/sofa/simulation/InitVisitor.cpp:47; #5 0x7fc300356978 in sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Simulation/Graph/src/sofa/simulation/graph/DAGNode.cpp:685; #6 0x7fc300356054 in sofa::simulation::g",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:12300,detect,detection,12300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,3,"['Detect', 'detect']","['Detection', 'detection']"
Safety,y/checks/clang-analyzer-unix.cstring.BadSizeArg.html) | [modernize-use-transparent-functors](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-transparent-functors.html) |; | [clang-analyzer-unix.cstring.NullArg](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-unix.cstring.NullArg.html) | [modernize-use-using](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-using.html) |; | [clang-analyzer-valist.CopyToSelf](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.CopyToSelf.html) | [mpi-buffer-deref](https://clang.llvm.org/extra/clang-tidy/checks/mpi-buffer-deref.html) |; | [clang-analyzer-valist.Uninitialized](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.Uninitialized.html) | [mpi-type-mismatch](https://clang.llvm.org/extra/clang-tidy/checks/mpi-type-mismatch.html) |; | [clang-analyzer-valist.Unterminated](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-valist.Unterminated.html) | [objc-avoid-nserror-init](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-nserror-init.html) |; | [cppcoreguidelines-c-copy-assignment-signature](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-c-copy-assignment-signature.html) | [objc-avoid-spinlock](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-spinlock.html) |; | [cppcoreguidelines-interfaces-global-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-interfaces-global-init.html) | [objc-forbidden-subclassing](https://clang.llvm.org/extra/clang-tidy/checks/objc-forbidden-subclassing.html) |; | [cppcoreguidelines-no-malloc](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-no-malloc.html) | [objc-property-declaration](https://clang.llvm.org/extra/clang-tidy/checks/objc-property-declaration.html) |; | [cppcoreguidelines-owning-memory](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extr,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:20540,avoid,avoid-nserror-init,20540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['avoid'],['avoid-nserror-init']
Safety,|; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-namespace-comments.html) | [readability-redundant-declaration](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:28856,redund,redundant-function-ptr-dereference,28856,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['redund'],['redundant-function-ptr-dereference']
Safety,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4582:13,safe,safety,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582,1,['safe'],['safety']
Safety,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4496:167,timeout,timeouts,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496,1,['timeout'],['timeouts']
Security," #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2001:1575,Certificate,Certificate,1575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2047:3307,Certificate,Certificate,3307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 2.98 8 3.70 0.49 3.70 99.29 ..AnimateVisitor; 3 0.01 1 2.98 8 3.70 0.49 3.70 99.22 ...Mechanical; 4 0.01 1 0.06 0.41 0.07 0.01 0.07 1.83 ....ComputeForce; 4 0.08 1 0.05 0.17 0.05 0.01 0.05 1.36 ....ComputeRHTerm; 4 0.13 1 1.05 4.28 1.37 0.28 1.37 36.71 ....MBKBuild; 5 0.13 1 1.05 4.28 1.37 0.28 1.37 36.64 .....CG-setSystemMBKMatrix; 4 1.50 1 1.78 5.49 2.19 0.29 2.19 58.87 ....MBKSolve; 5 1.51 1 1.77 5.44 2.18 0.29 2.18 58.39 .....CG-Solve; ```. CompressedRowSparseMatrixMat3x3d is faster because it manipulates blocks of 3x3, which is the best strategy in this case. Unfortunately, Eigen manipulates scalars only.; To be fair, EigenSparseMatrixd must be compared to CompressedRowSparseMatrixd. We notice a slight speed up with EigenSparseMatrixd . I wanted to use Eigen::BlockSparseMatrix to have blocks of 3x3, but as an unsupported module, it does not compile with Eigen 3.4. I increased the resolution of the grid: MBKBuild becomes slower than CompressedRowSparseMatrixd, and MBKSolve stays faster than CompressedRowSparseMatrixd. Due to the slow down in MBKBuild, EigenSparseMatrixd is not very interesting in this example. I'll continue my investigations on the use of these wrappers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:3910,Certificate,Certificate,3910,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," 2.59 ns 2.55 ns 263529412; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<int>>/100000 2.60 ns 2.61 ns 263529412; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<int>>/1000000 2.64 ns 2.68 ns 280000000; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<sofa::type::Vec3>>/10000 2.81 ns 2.76 ns 248888889; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<sofa::type::Vec3>>/100000 2.85 ns 2.83 ns 248888889; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<sofa::type::Vec3>>/1000000 2.86 ns 2.83 ns 248888889; BM_Data_ReadAccessor_StarOperatorConversion<int> 2.66 ns 2.67 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/10000 2.64 ns 2.67 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/100000 2.59 ns 2.55 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/1000000 2.57 ns 2.57 ns 280000000; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/10000 2.80 ns 2.83 ns 248888889; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/100000 3.03 ns 2.95 ns 248888889; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/1000000 2.81 ns 2.78 ns 235789474; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2583:6233,Certificate,Certificate,6233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2583,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," 24.88 1 0 0.02 0 0 0 0 ......J2tKJ2-copy; 6 24.88 1 0.01 0.04 0.01 0 0.01 0.02 ......J1tKJ2-copy; 6 24.90 1 0.01 0.07 0.02 0 0.02 0.04 ......J2tKJ1-copy; ```. The speed up is quite disappointing. But the benchmarks explain it. The speed up depends on the size of the matrix, the sparsity and overall on the size of the intersection.; Yet, there is a speedup. And compared to the reference timings before the series of optimizations (https://github.com/sofa-framework/sofa/pull/2362), `MechanicalMatrixMapper` is about twice faster (in the example). Some notes:. - I added a skeleton to also support product of `CompressedRowSparseMatrix`, but it is not implemented yet. In `MechanicalMatrixMapper`, a `CompressedRowSparseMatrix` is converted to Eigen to do the product. It is not clear yet if the copy to Eigen is required if we are able to perform the fast product on a `CompressedRowSparseMatrix`. So, an implementation of the fast product of `CompressedRowSparseMatrix` may be introduced in the future. Otherwise, I'll remove the files.; - This work has been started by @Esther-R during her internship; - Contrary to the regular product, the product using the intersection can be parallelized for more speed up.; - More speed up in `MechanicalMatrixMapper` using multithreading can be considered. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2394:4640,Certificate,Certificate,4640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2394,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," 85!809@63043915; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 3@$$%7#90620#1@; 3 	 9.90	 0.30	 0 	 0.02	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: $6635#@9%@01449; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 0$%3@43%672$7@2; 4 	 9.95	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3-pointCollisionModel2; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: #%#0#443865$42#; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: #%#0#443865$42#; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 0$%3@43%672$7@2; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: $6635#@9%@01449; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 3@$$%7#90620#1@. ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:34842,Certificate,Certificate,34842,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," :** Model the Data accesses using ORWL's concepts + high level task parallelism (coarse grain parallelism); - use abstract Data accesses stored in FIFOs to extract parallelism : thread safe data accesses allowing concurrent reads.; - ensures that the semantic of the program is preserved.; - tasks defined at Visitor level : a Task is defined as the execution of a Visitor on a component.; - this strategy should apply to all visitors and components, as it does not depend on the nature of the component. **Issues :** ; - We wanted to use the Data class, since all accesses to a data object in sofa should be done using this class. Problem : this is not true, some components use vectors directly, or use Data methods / ReadAccessor / WriteAccessor not as intended (this is possible since for now some methods such as Data::endEdit do nothing) -> we would need to look at all sofa components to make sure that the Data are properly used; - To properly model the data accesses using ORWL's concepts we need to slightly modify the API of the Data class; - sofa Engine mecanisms are complex to handle using FIFOs; - it is difficult to predict the data dependencies as the Visitors are launched dynamically and can launch Visitors -> we can't predict the data accesses in a preprocessing phase, so we need to adapt ORWL.; - This approach would not induce significant performance gains on simulations with only 1 object or with 1 ""main"" object since all the computationally intensive tasks inside a given object access the same Data object (Write access) and thus are inherently sequential. **Conclusion :** the potential speedup is not good enough to invest more time on this strategy given the difficulty. **Second strategy :** finer-grain parallelization; To extract parallelism from highly data-dependent tasks we need to divide these tasks into less-dependent subtasks.; To achieve that, we are currently implementing parallel vectors to allow some kind of domain decomposition.; Work in progress...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792:1588,access,access,1588,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792,2,['access'],['access']
Security," << pair.second << std::endl;; }; ```; As you can notice, it browses the map to display its entries. The keys are pointers to BaseState instances and the values correspond to vector state IDs. Console output BEFORE GenericConstraintSolver::prepareStates execution:; ```; lambda's idMap of constraint params: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); lambda's idMap of constraint solver: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); ```. Console output AFTER GenericConstraintSolver::prepareStates execution:; ```; lambda's idMap of constraint params: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); lambda's idMap of constraint solver: ; 0xf6297e0->9(V_DERIV); 0xf70af50->9(V_DERIV); 0xf810910->9(V_DERIV); 0x108242e0->9(V_DERIV); 0x1086ae50->9(V_DERIV); ```. At least one of the consequence is the following: Knowing that GenericConstraintSolver::applyCorrection propages a ConstraintStoreLambdaVisitor which uses the eventually out-of-date ConstraintParams::m_lambda attribute, a crash can occurs at this moment because a component could tries to access to a lambda state vector which is not registered into ConstraintParams::m_lambda. For instance, it happens in Mapping<In,Out>::applyJ method. I see two solutions to remedy to this issue:; The quick & dirty solution I use for now: force the update of ConstraintParams::m_lambda attribute at the end of GenericConstraintSolver::prepareStates method call, like so:; ```; auto* cParams_no_const = const_cast<core::ConstraintParams*>(cParams); // erk...; cParams_no_const->setLambda(this->getLambda());; ```; A better solution I see would be to transform ConstraintParams::m_lambda into a pointer to GenericConstraintSolver::m_lambdaId. Note: My version of SOFA is commit 5037d556893a78cf5f50efdf09b24539a950bbe4 (December 2019, the 13th). ____________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1270:2537,access,access,2537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1270,1,['access'],['access']
Security," CompressedRowSparseMatrix . I renamed all the **bloc** words to **block** as well. The previous CRSMatrix could be used as a BaseMatrix (solvers), ConstraintMatrix (iterations) and as a pure CRS itself.; This new CRSMatrix is decomposed in several types:; - CRSGeneric (name to be changed maybe): the pure CRS structure; - CRSMechanical: inheriting/implementing BaseMatrix; - (in a next PR) CRSConstraintMatrix, with the same API as the old CRSMatrix used for ConstraintMatrices (for iterating). Different purposes need different traits (some case would prefer autocompression, etc), so a lot of compile-time options are present. They are called policy.; I needed to change some flags from the Insimo's version to have the same behavior for the tests. So in the future, it could be interesting to see if those changes should be integrated later for more performance (but the tests would need to be changed). For compatibility reasons, the old ""CRSMatrix"" type is an alias on CRSMechanical. In this PR, no change of performance is noted (neither regression or upgrade). Tested on caduceus, TorusFall, solvers scenes and BeamAdapter's 3instruments_collis.scn. Ref:; - https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrix.h. Courtesy of Insimo (@fjourdes ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515:1925,Certificate,Certificate,1925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.26 2.27 4.52 31.65 ......projectMappedMatrices; 7 8.28 12 0 0.54 0.03 0.04 0.34 2.35 .......copyToBaseMatrix; 7 8.37 12 0 0.23 0.02 0.02 0.21 1.48 .......fullRows; ```. #### After. ```; [INFO] [BatchGUI] 1000 iterations done in 16.4943 s ( 60.6268 FPS). ; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.11 2 0.04 12.74 1.94 1.95 3.89 28.81 ......projectMappedMatrices; 7 8.13 12 0 0.14 0.01 0.02 0.18 1.32 .......copyToBaseMatrix; 7 8.17 12 0 0.05 0 0 0 0.02 .......fullRows; ```. ### Conclusion. In both scenes, the timer `fullRows` is almost at zero because the functions `copyNonZeros` already produces a compressed matrix. In addition, the timer `copyToBaseMatrix` is faster. FYI @olivier-goury @VannesteFelix ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443:2898,Certificate,Certificate,2898,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," Now, `x`, `y`, `z` and `w` are compiled conditionally. Other methods, such as `Identity`, `transpose` etc, are also concerned for squared matrices. The `static_assert` are therefore no longer useful. . `Identity` has been changed so it is `static constexpr` and it returns a reference. So there is no need to compute the identity matrix each time it is called. `s_identity` is now deprecated. The static variable is now included in the `Identity` method. It is better for static initialization fiasco and required for a `constexpr` context. Also, `s_identity` does not make sense for rectangular matrices. Since it is not possible to conditionally add a class member, it is hidden in the conditionally compiled method `Identity`. In `fixed_array`, the `operator<` is moved out of the class. This allows to compile this operator only when used, and not in explicit instantiations. This is necessary because the operator on `fixed_array<Vec3>` is not implemented (and does not make sense). The 3x3 matrix product and the `multTranspose` operation are specialized for a speedup. https://github.com/alxbilger/SofaBenchmark was used. Results show that this implementation is closer to the Eigen implementation. Unit tests are added. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/302]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280:1630,Certificate,Certificate,1630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," Pluginization works are possible but they have to be done in-place (not moving the files). This will permit to simplify the dependencies between SOFA modules. . About the NG branch, to avoid big divergence, we propose to merge it with master as soon as some big step is done. The next big step is SofaFramework coverage. ## Bootstrapping scripts. Previously named SPM, the [bootstrapping scripts](https://github.com/guparan/sofa2ng) are now able to handle test folders. ## Process. Here is the process to cover one module:; 1. Create/update a recipe based on an existing one.; 2. Run the bootstrapping scripts with the recipe.; 3. Inspect the output; 4. If something is wrong or missing, edit the bootstrapping scripts and *goto 1*; 5. Do specific changes by hand like namespace aliases; 6. Create a patch of all changes made by hand; 7. Open a pull-request providing the recipe and the patch (previously pushed to sofa2ng). This process will be rewritten in Sofa.Helper.Bvh pull-request. ## Sofa.Component.Utils. The first NG pull-request has been merged to the NG branch. There is still some updates to do though, because the bootstrapping scripts changed. ## Sofa.Helper.Bvh. The recipe has been updated. ; This work will be the base of further contributions. I will detail all the bootstrapping + patching process in the pull-request. ## Next steps; - Pluginize without moving files: use plugins mechanism to work on modules dependencies ; Start with the less dependent ones and progress towards SOFA core.; Objective: simplify dependencies between modules.; - Validate Damien's architecture proposal for SofaFramework: https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel/Sofa; Particularly about Sofa.Helper.Types; - Create Sofa.Helper.Bvh pull-request; Will give a clear example and all the process to refactor parts of SofaFramework; - Progress within Sofa.Helper.*; Assign tasks to all volunteers before STC#5. ----------. As always, any feedback is more than welcome :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223:1713,Validat,Validate,1713,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223,1,['Validat'],['Validate']
Security," a more ""contained"" way the components implemented in different plugins to avoid having everything mixed into the ObjectFactory. . The PR is composed of two aspects. 1) **Registering components by ""plugin.classname"" instead of ""classname"" in the ObjectFactory**. The factory currently access component by their classname only causing collision when two component have the same name/template. To avoid this, the PR add the plugin name as a prefix for the Factory'key. As an exemple, a component created with *<OglModel>* in the past is now referenced as *<SofaOpenglVisual.OglModel>*. Backward compatbility is possible by adding into the factory registration an alias mapping between ; new names and old name;; Eg:; ```; ""OglModel"" => ""SofaOpenglVisual.OglModel""; ```. 2) **Importing plugin and component *à la* python**; A new component called *FromComponent* is added to handle the loading of plugin and the import of object. . Examples of use:; ```; 	 # To make only <OglModel> accessible in the scene; 	<From plugin=""SofaOpenglVisual"" import=""OglModel""/>; 	<OglModel/>. 	# To add ""custom"" name in a scene ; 	<From plugin=""SofaOpenglVisual"" import=""OglModel"" as=""RenderingModel""/>; 	<RenderingModel/>. 	# To be a super lazy man and import everything; 	<From plugin=""SofaOpenglVisual"" import=""*""/>; ```. I didn't implemented multiple object imports so currently it is necessary to do ; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel""/>; <From plugin=""SofaOpenglVisual"" import=""GlslShader""/>; ```; But we could as in python with:; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel, GlslShader""/>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge thi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512:1005,access,accessible,1005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512,1,['access'],['accessible']
Security," an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4583:1796,Certificate,Certificate,1796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," come up with:; ```py ; m = createObject(""MechanicalObject"", position=[0,0,0, 1, 1, 1, 2, 2, 2]). print(repr(type(m.position))) ## print Sofa.Data as we returns the Data, not a generated list. . print(str(m.position)) ## print [[0,0,0], [1,1,1], [2,2,2]] ; ## the inner structure of the data field is not list . m.position.toList() ## create and returns the list [[0,0,0], [1,1,1], [2,2,2]] . ## Index based access of any 'dimmensions'; m.position = [[0,0,0],[1,1,1],[2,2,2]] ; m.position[0] = [3,3,3] # will change the first vector in the array. ; m.position[0,1] = 3.0 # change the first index of the first vector. . ## Slice based access; m.position[:,:1] = 3.0 # Will write 3.0 in the y component on every ""vector"" . ## Custom access using generator; def OnDiagonal(o):; idx = max(o.shape[0], o.shape[1]); for i in xrange(0, idx): ; yield (idx,idx). m.position[OnDiagonal] = 1.0 . ### Functional style... ; def myFunction(i, j):; if i == j:; return 1.0; return 0.0. m.position.apply(myFunction); ```. It is possible to implement all that without breaking the API except for the unified accessor syntax; ```py; m.position = [[0,0,0],[1,1,1],[2,2,2]] ; m.position[0] = [3,3,3] # Having this syntax will be breaking ; m.position[0,1] = 3.0 # Having this syntax will be breaking. # The non breaking version I can come up is the following:; m.position = [[0,0,0],[1,1,1],[2,2,2]] . m = m.getData(""position""); m[0] = [3,3,3] ; m[0,1] = 3.0 ; # Which is less nice. ; ```. A lot more can be done but I found the result interesting and want to share. . I will now focus on having the Data object returned to implement the buffer+memoryview protocol (https://docs.python.org/3/c-api/buffer.html) of python to have copy less interoperability with python objects that implement the protocol (array.array, numpy.array, cython memory view, etc...). . Feedback are welcome... . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/767:2889,access,accessor,2889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/767,1,['access'],['accessor']
Security," data d_typePermutation that allows the choice of the type of permutation used, by default it is set to None. SparseCholeskySolver is a little faster 1.59ms in avarage now against 1.84ms before (13.5% faster) on FEMBAR with the default behavior (no permutation applied).; The performances of SparseLUSolver seems to stay at the same level, or loose a little ( 0.07ms , 1% slower) on FEMBAR.; But with an adequate topology there is a significant rise of performances.; For MatrixAssembly_direct_blocs.scn :; -SparseLUSolver : ; -METIS : 26.43ms on average; -SuiteSparse : 30.76 ms on average.; against 469.64ms previously (without any fill reducing permutation). We have a speedup of 18 for METIS and of 16 for SuiteSparse. -SparseCholskySolver:; -METIS : 6.85ms; -SuiteSparse : 5.71ms; against 107.48ms previously. There is a speedup of 15 for METIS and of 19 for SuiteSparse. | _ | without FRP | with FRP | Speed |; |:-------------|:-------------:|:-------------:|:-------------:|; | SparseLUSolver<br/>+ METIS | 469.64 ms | 26.43 ms | x18; | SparseLUSolver<br/>+ SuiteSparse | 469.64 ms | 30.76 ms | x16; | SparseCholeskySolver<br/>+ METIS | 107.48 ms | 6.85 ms | x15; | SparseCholeskySolver<br/>+ SuiteSparse | 107.48 ms | 5.71 ms | x19. Related doc: https://github.com/sofa-framework/doc/pull/62; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2788:1744,Certificate,Certificate,1744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2788,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," force etc. They all manage their own way to store, find and manage their link to one or more mechanical states. Instead, I suggest to factorize this access using intermediate classes. It comes with the following features:. - All components inherit from `StateAccessor`, which contains a dynamic list of `BaseMechanicalState`; - Components having access to only one mechanical state inherit from `SingleStateAccessor`. It is templated on `DataTypes`, with a link to a `MechanicalState<DataTypes>`.; - Components having access to 2 mechanical states inherit from `PairStateAccessor`. It is templated on `DataTypes1` and `DataTypes2`, with a link to a `MechanicalState<DataTypes1>` and a second link to a `MechanicalState<DataTypes2>`.; - Components inheriting from `SingleStateAccessor` or `PairStateAccessor` fill the dynamic list contained in the `StateAccessor` implementation.; - It does not break the previous accesses, variable names etc. The goal is that all the components accessing a `BaseMechanicalState` can provide a list of them in a generic way. For example, `BaseInteractionForceField` supposed only 2 mechanical states. Since it inherits now from `StateAccessor`, it can have links to more than 2 (note that none of the interaction force field I found work with more than 2). Another example: `BaseForceField` did not have any reference to a mechanical state, but all the force fields inherits from `ForceField` which has a link to a mechanical state. Therefore, we couldn't have access to a mechanical state from a `BaseForceField`. I also cleaned the files:; - Concatenate nested namespaces; - Use `#pragma once`; - Some private and non-defined copy constructors and `operator=` are marked `delete`.; - Move methods in cpp; - Removed unnecessary `init()` implementations. They only called their base class `init()`.; - `Constraint ` has a link to the mechanical state instead of a raw pointer.; - Some constructors marked `explicit`. __________________________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2438:1129,access,accessing,1129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2438,1,['access'],['accessing']
Security," implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4547:1725,Certificate,Certificate,1725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," is no longer used. Instead, I introduce the method `convertConstraintMatrix`, which is IMO clearer. `computeJ` could be removed I think. But for some reasons it is virtual. Anyone overrides it?; - Added a timer in `convertConstraintMatrix`. This must be used for benchmark to evaluate the cost of the conversion. I believe that we can think of a way to avoid the conversions (only if it costs too much).; - `MatrixLinearSolverInternalData::copyJmatrix` is renamed to `convertMatrix` and it is now protected.; - Made `getLocalJ` clearer.; - Added details for `addJMInvJt`; - Introduced rebind types for `CompressedRowSparseMatrixConstraint`, `CompressedRowSparseMatrixGeneric` and `CompressedRowSparseMatrixMechanical`; - `CompressedRowSparseMatrixConstraint`: added test for the stream operator. The operator no longer adds trailing spaces on each line.; - Better iterators in `CompressedRowSparseMatrixConstraint`; - Missing header guard in `CompressedRowSparseMatrixConstraintEigenUtils.h`; - Fixed `operator()` in `CompressedRowSparseMatrixToEigenSparseVec`. Also added error message if out-of-bounds. Required for https://github.com/sofa-framework/SofaPython3/pull/459; - Introduction of `is_specialization_of`. Used in [a SofaPython3 PR](https://github.com/sofa-framework/SofaPython3/pull/459). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5017:1982,Certificate,Certificate,1982,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5017,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," old API which is no longer called. API changed in https://github.com/sofa-framework/sofa/commit/55121be3494a4fe833904750fc7f043ff045881d. The list of affected components:. - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/LinearMovementConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PartialFixedConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToLineConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPlaneConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/SkeletalMotionConstraint.h. Note that some of them don't implement `applyConstraint`. They had the old API, but with a message warning that the method is not implemented. This problem was not caught before, because the majority of the test scenes uses a matrix-free solver (CGLinearSolver), whereas `applyConstraint` is called only for assembled systems (with SparseLDLSolver for example). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2269:1561,Certificate,Certificate,1561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2269,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1737:1506,Certificate,Certificate,1506,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," sending the POINTREMOVED event to all topologyHandler registered. Including the deleted one from the mouse attached constraint. The pointer to the topologyHandler is not null but pointed to a deleted object. ### PR changes description; This PR and the PR #3271 (included in this on) are introducing a mechanism to better register and unregister a TopologyHandler from the TopologyContainer.; 1. register is done at creation of the TopologyHandler; 2. If TopologyHandler has well been added to the list manged by the Container, a internal bool m_isRegisterd is set to true.; 3. When the TopologyHandler is deleted (meaning its component owner is deleted). If m_isRegisterd == true, the TopologyHandler will unregister itself.; 4. When the TopologyContainer is deleted, it will go through each TopologyHandler it is managing and turn m_isRegisted to false. And then clear the list without deleting the Handler. The bool m_isRegisterd is used because to unregister itself, the handler need to access the topologyContainer which could have already been destroyed (depending on the graph order). But the TopologyHandler doesn't now the container is null. That's why if the TopologyContainer is deleted first it sets all its topologyHander as unregistered. ### Linked issues; Based on PR #3271 ; Fixes #3370 #3202. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merg",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3369:2204,access,access,2204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369,1,['access'],['access']
Security," starting runSofa. ```; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:770:14: runtime error: member access within address 0x55dcc8e551e8 which does not point to an object of type 'TLink'; 0x55dcc8e551e8: note: object has invalid vptr; dc 55 00 00 06 00 00 00 00 00 00 00 00 00 00 00 65 72 00 00 00 63 e5 c8 dc 55 00 00 a0 61 e5 c8; ^~~~~~~~~~~~~~~~~~~~~~~; invalid vptr; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:770:36: runtime error: member call on address 0x55dcc8e55fa8 which does not point to an object of type 'BaseObject'; 0x55dcc8e55fa8: note: object has invalid vptr; dc 55 00 00 c0 6c 7f f7 5d 7f 00 00 00 00 00 00 00 00 00 00 51 00 00 00 00 00 00 00 00 00 00 00; ```. I dont really understand the problem here, but it could be because ; https://stackoverflow.com/a/57304113. Anway, In my case, I found the synxtax of ValidatorFn and its use `(m_owner->*m_validator)(nullptr, after);` really incomprehensible ; I thought it was calling m_validator from m_owner 🤐....; I rewrote the alias to pointer of a non-static method of a class to use std::function, and std::bind for binding, hence the breaking flag 😑.; IMO this is more readable, and more modern c++. And icing on the cake, fix the Undefined Behavior error 😏. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3665:1509,Certificate,Certificate,1509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3665,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined as the execution of the visitor function on a component; 2. Execute the first time step sequentially, logging/profiling all accesses to vectors; - create parallel sections and tasks; - in each task, log all accesses to vectors using and overloaded helper::vector::operator[]; 3. During the second time step, we launch a parallel thread that ; - splits each task in phase each phase doing a (statically) given number of vector accesses.; - for each phase, identify the blocks of vectors accessed; - for each parallel section, build a dependency graph between task phases; - for each parallel section, schedule the parallel execution of the different task phases so that we keep the order of the operations and independent phases can run in parallel; 4. When the scheduling is computed, we run the following time steps in parallel; 5. When there is a change in the topology, we do the logging and scheduling phases again, while the simulation run sequentially. This is a work in progress. As you can imagine, designing and implementing this is far from trivial.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:2125,access,accesses,2125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,4,['access'],"['accessed', 'accesses']"
Security," the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2125:1986,Certificate,Certificate,1986,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," the old symbol, which is strange and certainly made the compat layer break is used because often the two types where completely unrelated but `setParent` isn't templated so.... ; 2. This compat layer only works for `Data<T>` every types that inherits from it, will only see the original `Data<T>` methods taken into account in the compact layer. This was the case here for `DataFileName` and all `TopologicalData`. . I've decided to adopt two different strategy : ; 1. For `DataFileName` I didn't put my component and still usef the 'setParent' strategy. This is because, a priori, we won't chage a filename data during execution, this is often a given parameter, but we often use methods specific to `DataFileName`. ; 2. For the topological one, usually topological mechanisms are used in very specific classes to handle topological changes. But in a user perspective, it is often used as a classical `Data<vector<Index>>`. So What I did is use `RenamedData` on those, allowing the compat on the `Data<T>` level, but not for the topological methods which are not working anymore on the old symbol (and will create a compilation error if used)... ; ; To make it cleaner we might need to create new `RenamedData` class for all classes inheriting from `Data<T>`. Which is not the purpose of this PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4927:1785,Certificate,Certificate,1785,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4927,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," to not rely of the automatic detection of templates (canCreate and stuff()) from the associated MechanicalObject. For example in `/Components/mapping/ArticulatedSystemMapping.scn`; ```xml; <UniformMass template=""Rigid3d,RigidMass<3u,double>"" ..... >; ```; This is so weird to explicitly write the masstype.; (Actually, the xml line is even not working, as it needs to be `Rigid3d,RigidMass<3,double>` but I suppose it was this way when the file was written). ~~In this PR, [std::conditional_t](https://en.cppreference.com/w/cpp/types/conditional) is used to specify MassType from DataTypes (if rigidtypes then rigidmass, otherwise Real); One other solution would be to specify a MassType in VecTypes/RigidTypes but seems invasive to me.; I let the double template thing, as I dont know if it is possible than a developer would like to specify special instanciation, like RigidType with Real for example. But this does not solve the double template thing in xml.~~. ~~If it is not the case, then we could remove the second template, and just use a `typedef` (so we remove the need to specify the double template in xml....)~~. Template has been removed directly, and the MassType is SFINAE'ed from the DataTypes.; parse() in the 3 differents masses warns the user of the modification, and what to do. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2644:1866,Certificate,Certificate,1866,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2644,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security," to unify the naming scheme. The 'short' naming scheme is following the standard for python.array and was very close to what we already have in Sofa. . - In this PR I don't use at all the TypeInfoRegistry (expect in the test part), this is on purpose so a future PR will be able to emphasize the change on the Sofa code base (in Data.h). ; - In this PR I don't register typeinfo the registry (because it is not used yet), but I added the 'empty' files for that...it is in typeinfo/TypeInfo_xxxxx.cpp ; ; What will be done in a future PR:; - 1. fill the registry with types we are using and replace the use of VirtualTypeInfo<T>::get() in Data.h by TypeInfoRegistry::Get(T).; - 2. remove step by step the static type info and there related #includes files. ; - 3. rename all the method/enum in the static & dynamic system to unify with official naming convention. ; a. static function must start with an UpperCase; b. function returning boolean must start with a verb like IsValidTypeInfo() instead of ValidTypeInfo() ; c. add a getName()/GetName() to replace name().; - 4. replace the enum involved in the static type info system with constexpr. . EDIT: To satisfy popular demand here is more or less the content of the PR. ; [Sofa.pdf](https://github.com/sofa-framework/sofa/files/5553887/Sofa.pdf); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1605:2265,Certificate,Certificate,2265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1605,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security, | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modernize-shrink-to-fit](https://clang.llvm.org/extra/clang-tidy/checks/modernize-shrink-to-fit.html) |; | [clang-analyzer-security.insecureAPI.mktemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mktemp.html) | [modernize-unary-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-unary-static-assert.html) |; | [clang-analyzer-security.insecureAPI.rand](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.rand.html) | [modernize-use-auto](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-auto.html) |; | [clang-analyzer-security.insecureAPI.strcpy](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.strcpy.html) | [modernize-use-bool-literals](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-bool-literals.html) |; | [clang-analyzer-security.insecureAPI.vfork](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.vfork.html) | [modernize-use-default-member-init](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-default-member-init.html) |; | [clang-analyzer-unix.API](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-unix.API.html) | [modernize-use-emplace](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-emplace.html) |; | [clang-analyzer-unix.Malloc](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-unix.Malloc.html) | [mo,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:17429,secur,security,17429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['secur'],['security']
Security,"![VonMisesStress_TetrahedralCorotationalFEMForceField](https://user-images.githubusercontent.com/79743770/122370619-7cf1db80-cf5f-11eb-9304-4dcfa77504c4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2185:322,Certificate,Certificate,322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2185,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"![](https://github.com/sofa-framework/sofa/assets/17544719/69a5fbc8-b5a8-4437-8b92-9774ffe07c5d). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3963:261,Certificate,Certificate,261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3963,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"![](https://github.com/sofa-framework/sofa/assets/30337881/0367e8be-aebb-4349-9b01-dc7f4e73ac2a). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4770:261,Certificate,Certificate,261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4770,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"![](https://i.ibb.co/hd3qhmc/Screenshot-from-2021-06-15-18-46-33.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2180:234,Certificate,Certificate,234,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2180,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"![](https://media.giphy.com/media/sG4zmff2zDOp7t2MNA/giphy-downsized.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3218:238,Certificate,Certificate,238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3218,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"![](https://media.tenor.com/WPtQa7M3Vm4AAAAC/matrix-neo.gif). Hommage à @guparan :raised_hands: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3573:261,Certificate,Certificate,261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3573,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"![before](https://user-images.githubusercontent.com/11028016/184293626-3906d39e-bd72-41f6-97c8-bc81b58ff31a.png); 😭🩸 (smiley crying blood). ![after](https://user-images.githubusercontent.com/11028016/184293675-e089ce98-cadd-4983-9a6e-059f4c8731a9.png); 😎 . (nomination for the SOFA best contribution award); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3214:471,Certificate,Certificate,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3214,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"![image](https://64.media.tumblr.com/e9b89b6d4267542a7ca85b661ba09045/tumblr_o3soekOhX61ulpmhpo1_500.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4544:270,Certificate,Certificate,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4544,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"![image](https://github.com/sofa-framework/sofa/assets/10572752/9efe690d-6257-44a9-a7af-2c11d7510740). TODO:; - [ ] Add this feature in SofaImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4650:310,Certificate,Certificate,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4650,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"![image](https://user-images.githubusercontent.com/30337881/253005654-d7a812f8-5127-4e3b-b177-ee9bee793516.gif). Initial scene provided by @bakpaul in https://github.com/sofa-framework/sofa/pull/3986. [ci-depends-on https://github.com/sofa-framework/Regression/pull/48]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4055:434,Certificate,Certificate,434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"![thermoelasticity_00000001](https://user-images.githubusercontent.com/17544719/137492922-52ee8c4c-82cf-4f0d-99b2-92f650d4da9d.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2424:296,Certificate,Certificate,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2424,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,""" tolerance=""1e-6"" initial_guess=""false"" build_lcp=""true"" multi_grid=""false"" printLog=""0"" mu=""0.000000000000000001""/>; <FreeMotionAnimationLoop />. <BruteForceBroadPhase/>; <BVHNarrowPhase/>; <DefaultContactManager name=""response"" response=""FrictionContactConstraint"" />; <DiscreteIntersection name=""proximity"" />. <Node name=""RigidLiver"">; <MeshOBJLoader name=""meshLoader_0"" filename=""mesh/liver-smooth.obj"" handleSeams=""1"" />; <OglModel name=""VisualModel"" src=""@meshLoader_0"" color=""white"" />; <RigidDistanceGridCollisionModel fileRigidDistanceGrid=""mesh/liver-smooth.obj"" scale=""1.0"" usePoints=""0"" proximity=""0.1"" contactStiffness=""5.0"" contactFriction=""0.0"" />; </Node>; ; <Node name=""Cloth"">; ; <EulerImplicitSolver name=""cg_odesolver"" printLog=""false"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. <RegularGridTopology nx=""50"" ny=""1"" nz=""50"" xmin=""-9"" xmax=""5"" ymin=""7"" ymax=""7"" zmin=""-7"" zmax=""7"" name=""Container"" />; <MechanicalObject name=""dofs"" />; <UniformMass totalMass=""100"" />; <UncoupledConstraintCorrection />; <Node name=""T"">; <include href=""Objects/TriangleSetTopology.xml"" />; <Quad2TriangleTopologicalMapping input=""@../Container"" output=""@Container"" />; <TriangularFEMForceField name=""FEM"" youngModulus=""60"" poissonRatio=""0.3"" method=""large"" />; <TriangularBendingSprings name=""FEM-Bend"" stiffness=""300"" damping=""1.0"" />; <TriangleCollisionModel contactStiffness=""20.0""/>; <PointCollisionModel />; <Node name=""Visu"">; <OglModel name=""Visual"" material=""mat1 Diffuse 1 0.5 1.0 0.75 0.8 Ambient 1 0.2 0.2 0.2 1 Specular 1 0.6 0.6 0.6 0.6 Emissive 0 0 0 0 0 Shininess 0 45"" />; <IdentityMapping input=""@../../dofs"" output=""@Visual"" />; </Node>; </Node>; </Node>; </Node>. ```. For some reasons, the free position and velocity of a second mechanical object is not allocated. So, when we want to access an element of this vector, it crashes. I need more time to debug it. I'll let you know",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838:4213,access,access,4213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533#issuecomment-1353410838,1,['access'],['access']
Security,"""Fix"" #1643 . The newly introduced macros are actually doing nothing on MSVC, just generating tons of warnings.; ▶ __pragma (MSVC only) does not take a string but directly the instruction itself. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1658:359,Certificate,Certificate,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1658,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2320:567,Certificate,Certificate,567,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"""Solve"" the discrepancy of the regression test of MeshSpringForceField.; Sorting the bboxes of the different levels needs a predicate (a boolean function) to compare two bboxes; https://github.com/fredroy/sofa/blob/master/Sofa/Component/Collision/Geometry/src/sofa/component/collision/geometry/CubeModel.h#L72. But it can happen that v1 == v2 ; and std::sort does not guarantee stability in these cases.; I suppose the result will depend of the implementation of the STL so it would explain the difference between msvc, gcc, clang/lin and clang/mac. By using stable_sort, we can get stability and thus the same results between the different platforms.; Questions are:; - stable_sort is a bit slower than sort https://stackoverflow.com/a/34668459 so set the stability as an option?; - the stability itself seems only relevant is some cases (scenes using penalities?). And this will certainly need to regenerate some regression files... (at least MeshSpringForceField). EDIT:; [ci-depends-on https://github.com/sofa-framework/Regression/pull/39]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3687:1208,Certificate,Certificate,1208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"""real"" is replaced with its only possible type: float. float is assumed; by SparseGridTopology.cpp. Removing ""real"" avoids issues when some; templated functions have a template parameter named ""real"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1955:364,Certificate,Certificate,364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"""wire optimization"" and gives a big speed-up when used with the partial_solve of BTDLinearSolver (and not building matrices). This optimization was already in the LCPConstraintSolver and explain (but not totally) the big difference of speed for the scenes with LinearCC/BTD and unbuilt gaussseidel. Numbers from `BeamAdapter/examples/3instruments_collis.scn -g batch -n 5000` , all constraint solvers use unbuilt GS.; ```; (mu=0.1); LCP = [INFO] [BatchGUI] 5000 iterations done in 61.9292 s ( 80.7373 FPS).; GCS before = [INFO] [BatchGUI] 5000 iterations done in 261.396 s ( 19.1281 FPS); GCS after = [INFO] [BatchGUI] 5000 iterations done in 85.083 s ( 58.7661 FPS); ```; ```; (mu=0.0); LCP = [INFO] [BatchGUI] 5000 iterations done in 43.2622 s ( 115.574 FPS).; GCS before = [INFO] [BatchGUI] 5000 iterations done in 230.029 s ( 21.7364 FPS); GCS after = [INFO] [BatchGUI] 5000 iterations done in 68.9986 s ( 72.4652 FPS); ```. As for the simulation itself, the results are not exactly the same (even if visually, looks the same) between LCPCS or GCS; `regression step-by-step, 2000 steps`; ```; (mu=0.1); TOTALERROR: 3.18005; ERRORBYDOF: 0.00310931; ```; ```; (mu=0.0); TOTALERROR: 1.55088; ERRORBYDOF: 0.00154138; ```. But I cannot tell which one of the two (LCPCS or GCS) is the most ""precise"" 🤷. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4132:1638,Certificate,Certificate,1638,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4132,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4552:2485,Certificate,Certificate,2485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"## Execute the latest runSofa on a Windows host (working but pretty slow). Taken from https://dev.to/darksmile92/run-gui-app-in-linux-docker-container-on-windows-host-4kde ; and https://medium.com/@potatowagon/how-to-use-gui-apps-in-linux-docker-container-from-windows-host-485d3e1c64a3. First of all, install [VcXsrv Windows X Server](https://sourceforge.net/projects/vcxsrv/). Here we use [Chocolatey](https://chocolatey.org/) but it's not mandatory.; ```powershell; choco install vcxsrv; ```; Once installation is done, run XLaunch from start menu and make sure to activate the option ""Disable access control"". Then, get your IP with `ipconfig`. Finally, in a PowerShell terminal; ```powershell; docker run --rm --user ""sofa:sofa"" -e DISPLAY=your_IP_goes_here:0.0 -t sofaframework/sofa_nightly_ubuntu:master-standard runSofa; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2485#issuecomment-1175016532:597,access,access,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2485#issuecomment-1175016532,1,['access'],['access']
Security,"## Main discussions. Stéphane: building matrices, vectors, to work with SciPy; Matthieu: Numpy is able to access the memory directly (there are examples). There are some Python modules in Compliant with examples to assemble matrices, etc. Components in Python (Stéphane); ""Trash"" code, not clean, way to go to C++. Forcefield. Need to put breakpoints to interact with the scene from Python console. Our Python needs:; - Create scene easily; - Prototype components; - Matlab aspect. Matthieu: 90% of Datas are binded in Python, special cases need a binding. To sum up, we already have what we need, we just don't know how to work with everything. Besides technical aspects, what we need is a step to step tutorial and more examples. . --> Update online documentation to add Numpy; --> Add a doc for newcomers: right now it is very hard to enter in SOFA with Python (no doc). Start with step by step tutorials and create a Python version of each step. ## Other discussions: performances. ### Pypy. x100 perf but big big cost (recode everything: plugin, bindings, ...). ### Cython. ability to code in Python and get C++ code generation; we can keep the current plugin but we wont gain perf; optimizes some small algos; ability to manually release the GIL (lock); ability to connect to the current VM; adds a step of compilation using ""CIMPORT"" but it must have compilo + headers and libs Sofa. ### Problem of version 2.7 vs 3. Current plugin renamed SofaPython27; SofaPython passes python 3.0. ### How do you get to use Python?. Stéphane: Making XML optional?; Matthieu: python is not just a loader, there is a binding too; As said before, we have to use more Python in the tutorials (doc, website ...). ____________________________________. Referee:; @bcarrez . Interested people:; @matthieu-nesme ; @damienmarchal ; @etienneschmitt ; @bruno-marques ; @chpaulus . If you are interested please tell it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/23:106,access,access,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/23,1,['access'],['access']
Security,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2263:1294,Certificate,Certificate,1294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"### ALL THIS CHANGES MAINLY AFFECT SOFA INSTALL; (basically nothing changes for you if you never do `make install`). Nothing is breaking BUT dependency problems may arise.; Using package subdirs and relocatable plugins will force us to define dependencies correctly because there will be no more magically accessible parts of SOFA. You will no longer be able to `#include` a file from a package not loaded with `find_package`. ## Important changes. ### [[All] CLEAN extlibs integration and install](https://github.com/sofa-framework/sofa/commit/40669c610100a67f46b1405a972b39fe13291eba); - extlib headers are now installed in include/extlibs; - Windows dependency pack headers are now installed in include/WinDepPack; - SOFA now always tries to `find_package` an extlib before using the embedded one; - header-only extlibs too are now easier to override (see extlibs/CMakelists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:306,access,accessible,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['access'],['accessible']
Security,"### New features; - UncoupledConstraintCorrection : add option to disable handling of topological changes for compliance vector; - Container : add accessor to the topology type; - SubsetMapping : add resizeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . This is the re-opening of [previous issofa_topology pull-request](https://github.com/sofa-framework/sofa/pull/217). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break ex",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243:147,access,accessor,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243,3,"['access', 'expose']","['accessible', 'accessor', 'exposed']"
Security,"### Problem. **Description**; This bug was first reported by @AlbanOdot in https://github.com/jnbrunet/caribou/issues/104. We have a component that opens a `ReadAccessor<Data<VecCoord>>` on a Mechanical Object position vector during the **init** stage of the scene. In the same callstack, the component will open another `ReadAccessor<Data<VecCoord>>` on the same MO position vector. The following small object can be taken as an example:. _Edit: I found out that the recursive ReadAccessor isn't even needed to reproduce the issue, simply having a component opening during init a read accessor on its own data, which parent is the MO vector, is enough._. ```c++; class TestComponent : public BaseObject {; public:; SOFA_CLASS(TestComponent, BaseObject);; using DataTypes = sofa::defaulttype::Vec3Types;; using VecCoord = DataTypes::VecCoord;; TestComponent() : d_position(initData(&d_position, ""position"", ""Position vector"")){}. void init() override {; Inherit1::init();; auto positions = ReadAccessor<Data<VecCoord>>(d_position);; test(positions.size());; }; void test(const sofa::Size & nb_of_nodes) {; auto positions = ReadAccessor<Data<VecCoord>>(d_position);; if (positions.size() != nb_of_nodes) {; std::cout << ""Just something to make sure the compiler compile this"" << std::endl;; }; }; private:; Data<VecCoord> d_position;; };; ```. The consequence will be that the MO object position vector won't be updated later on during time steps. However, if the same scene is run with a GUI, the problem disappears. The following scene can be taken as an example where a random displacement is imposed on a node before the time step, and the node position is printed afterwards. ```python; class Controller(Sofa.Core.Controller):; def __init__(self, MO):; super().__init__(); self.MO = MO. def onAnimateBeginEvent(self, _):; print(""\n\nonAnimateBeginEvent""); random_disp = np.random.normal(0, 1e-2, self.MO.position.value.shape); self.MO.position.value = self.MO.rest_position.value + random_disp; pr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761:586,access,accessor,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761,1,['access'],['accessor']
Security,"### Problem. **Description**; We have a Sofa Scene with an integrated python script controller. In this python controller we alter the rest position of a mechanical object with template 'CudaVec3f'. In the online documentation of SofaCUDA [https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/](url) there is an example C++ code to access and change parameters of a mechanical object when using SofaCUDA, but there is no corresponding python code snippet. When retrieving the rest position value, the python type is a numpy array in contrast to c++, which has no deviceRead and deviceWrite properties. As there is no direct access to cuda in the SofaPython3 wrapper, our question is how reading/writing can be done in SofaPython3. . When using SofaCUDA without the deviceRead and deviceWrite functions, the object in question randomly diverges, when a translation to `rest_position` is applied. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: 23.06 binary version; - State: binary version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4285:357,access,access,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4285,2,['access'],['access']
Security,"### Problem. Running `runSofa` in `RelWithDebInfo` configuration in VS 2022 loads the scene properly but leads to nullptr access in `HexahedronFEMForceField::getIndexedElements`. Running `.\runSofa -a` in powershell gives the same crash. ![image](https://user-images.githubusercontent.com/43549821/177644004-c4a691f5-c890-4f66-bf17-5881922af648.png). The scene loads fine and only crashes when one of these 2 buttons are pressed. ![image](https://user-images.githubusercontent.com/43549821/177643932-820290b2-8caa-4b64-b171-8bf1fdeff4ef.png). **Steps to reproduce**; Running the command below.; Everything is configured exactly as shown in the windows building tutorial, except I'm using msvc2019 libraries for qt 5.15.2as msvc2022 libraries are not available. **Expected behavior**; Should not crash. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10 build 21390.2025; - Version of SOFA: commit d300cc9af550afbd5c2167470676a5a7d47381a1 (HEAD -> v21.12, tag: v21.12.00, origin/v21.12_beta, origin/v21.12); - State: Build directory. **Command called**. ```txt. PS D:\github-clones\sofa\build\bin\RelWithDebInfo> .\runSofa.exe -a. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.10.0 (tags/v3.10.0:b494f59, Oct 4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]; --- PATH ---; D:\Program Files\OpenSSH;C:\ProgramData\Oracle\Java\javapath;C:\Python310\Scripts\;C:\Python310\;D:\Python27\;D:\Python27\Scripts;D:\Program Files\Oc",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:122,access,access,122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['access'],['access']
Security,"#1527 . Based on master. Deprecates partially SofaSimpleFem. Isolate the diffusion into its own module, especially to highlight that SOFA can do more than solid mechanics. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2753:335,Certificate,Certificate,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2753,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527 . based on:; - #2717 (for one file moved in core). Deprecates partially _SofaBoundaryCondition_. Gathers all other forcefields which applies **external** force on mechanical objects. (torsion, compression, etc). https://mechanicalengineering.blog/types-of-loads/. I chose `MechanicalLoad` because of (https://en.wikipedia.org/wiki/Mechanical_load) and it seems an official term but I was hesitating also with `ExternalForce` (because these components set external forces on objects) ; Could have been simply `Load` as well, but there are other type of Load: electrical load for example. EDIT: create a new sub module for FEM, called **FEM.Damping**, which gathers DampingFF; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2783:844,Certificate,Certificate,844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2783,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527 . based on:; - #2717 . contains:; - #2752 (UncoupledConstraintCorrection needs UniformMass). Deprecates partially SofaGeneralObjectInteraction, SofaConstraint and SofaBoundaryCondition. Module containing two types of Constraint in SOFA:; - **Projective** constraint; - **Lagrangian** constraint ; this submodule is itself subdived in three (four?) categories: **Model**, **Correction**, and **Solver**. (still debate on a fourth one with lagrangian-related constraint animation loop). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2790:654,Certificate,Certificate,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2790,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527 . based on:; - #2790. Deprecates partially **SofaConstraint**; Deprecates **SofaGeneralAnimationLoop**. Module with all the non-default animation loop.; DefaultAL stays in Core to allow scene to run even if one did not build this module (and its deps). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2797:422,Certificate,Certificate,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2797,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527 . based on:; - #2805 (for TriangleOctree in helper). Deprecates _**SofaEngine**_, **_SofaGeneralEngine_** and **_SofaMiscEngine_**. Create various submodules according to their nature (way of sorting is mine, matter of discussion); ~~- **Data**: manipulating Data (aka core::objectmodel::Data<>)~~; ~~- **Geometry**: various algo on geometry ops~~; ~~- **Math**: apply math functions~~; ~~- **Mesh**: generate or modify meshes~~; ~~- **Rigid**: rigid utilities (i.e vec+quat types)~~; ~~- **ROI**: select Region Of Interest~~; ~~- **Transform**: transformations ops (matrices)~~. - **Analyze** : inputs contains some kind of measurement/value; - **Generate** : create data from inputs; - **Select** : filter inputs; - **Transform**: apply some function on inputs. https://github.com/sofa-framework/sofa/issues/2906. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2812:985,Certificate,Certificate,985,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2812,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527 . based on:; - #2843 . Deprecates the rest of **SofaGraphComponent** and **SofaUserInteraction**. Create a GUI (out of Sofa.Component) module, with:; - **Common** (definition of GUIs); - GUIs themselves: **Batch**, **Qt** and **Headlessrecorder**; - **Component**, with components only used for GUI (settings linked to performers). Metamodule SofaGui is still used for runSofa (so with a kind of conditional factory, depending of the compilation option at cmake) but I think we should move this ""conditional"" compilation directly in runSofa. [~~ci-depends-on https://github.com/sofa-framework/SofaGLFW/pull/31~~]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895:783,Certificate,Certificate,783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527. After putting away OBB/Capsule components, SofaMiscCollision is still laying with some useful components for Collision. The only ones still inside were deemed non-supported (even bogus) in the few past months so they should die when SofaMiscCollision will be removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2896:438,Certificate,Certificate,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2896,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527. Based on master. Deprecates partially SofaBaseMechanics and SofaMiscForceField. Nothing fancy. just gathers the 3 only masses present in SOFA.; I did not even need to change the namespace. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2752:359,Certificate,Certificate,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2752,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527. Based on master. Deprecates partially _SofaBaseMechanics_. It contains components used as a ""State"" in mapping, forcefield, etc. ; In reality, it is merely a module for MechanicalObject for the moment, as MappedObject is not really used anywhere; In the future, it could contain TemperatureContainer, etc. ~~namespaces are not changed, which is nice.~~. Collegial decision to rename it to **StateContainer**. EDIT:; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/239]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766:658,Certificate,Certificate,658,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527. In this case, ODESolver being gathered in Sofa.Component.ODESolver.*. This PR is mainly focused to be compatible with the current code base of SOFA so a full build/test is expected (or at least desired...). DO NOT MERGE.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2455:392,Certificate,Certificate,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2455,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527. based on ; - #2612 . Deprecates SofaGeneralVisual; Partially deprecates SofaBaseVisual. Nothing special in that module, except that it contains all visual stuff not related to OpenGL.; OpenGL related code will have its own plugin.; EDIT: #2709 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2679:416,Certificate,Certificate,416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2679,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527; Based on ; - #2571 . Creating the module **Sofa.Component.IO**, where all the components linked to loading or exporting a mesh(.Mesh)~~/stuff(.Misc)~~ are contained.; Read/Writing stuff to repeat identical simulations (ReadState/Topology,etc) has been moved to a new category, namely **Sofa.Component.Playback**; Deprecates **SofaLoader**, **SofaGeneralLoader** and **SofaExporter**. Good module to test the compatibility of installation process, as the plugin Python3 has a dependency on the former SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2582:684,Certificate,Certificate,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2582,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1527; based on ; - #2582. ~~It was supposed to be called Utils, but I did not really like this name (plural+shorten name) and Utility was more appealing...~~; EDIT: called `SceneUtility` now. Deprecates partially *SofaBaseUtils* and *SofaGraphComponent*. Questions:; ### RequiredPlugin; is needed to be implcitely loaded somewhere if a scene wants to load stuff.; Should it be moved in SofaCore (thus always available) or force load Sofa.Component.Utility somewhere; ### SceneChecker; SceneChecker stuff is in SofaBaseUtils but they are not component tho so it does not make sense to move them into Sofa.Component. Should they move somewhere (in the framework like SimulationCore) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2605:848,Certificate,Certificate,848,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2605,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma),. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1575:235,Certificate,Certificate,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1575,4,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma),; Add dep to SofaCuda. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1580:256,Certificate,Certificate,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1580,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1565:234,Certificate,Certificate,234,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1565,4,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1529. A priori not breaking. Usual cleaning (namespaces, pragma),. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1583:231,Certificate,Certificate,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1583,6,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1529. A priori not breaking. Usual cleaning (namespaces, pragma),; Move non units test to SofaTests; Add dependency to SofaTopologyMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1582:304,Certificate,Certificate,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1582,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1529; Big (and important) one. A priori not breaking. Usual cleaning (namespaces, pragma),; Add forgotten license notices in some files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1592:301,Certificate,Certificate,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1592,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1597 . - Set-up CMake for SofaCommon modularization.; - Usual cleaning (pragma, namespaces); - warnings removal; - useless headers/includes removal; - index/size uniformization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1598:342,Certificate,Certificate,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1598,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1597. - Usual cleaning (pragma, namespaces); - cmake dep polish; - remove useless includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1607:256,Certificate,Certificate,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1607,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - cmake dep polish. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1603:249,Certificate,Certificate,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1603,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - cmake dep polish; - remove useless includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1606:276,Certificate,Certificate,276,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1606,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - index/size uniformization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1601:258,Certificate,Certificate,258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1601,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - useless headers/includes removal; - index/size uniformization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1599:294,Certificate,Certificate,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1599,4,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1597; Big one!. - Usual cleaning (pragma, namespaces, etc.); - warnings removal; - index/size uniformization; - deprecation for point/line/triangle headers; - redispatch includes and remove useless ones. Still convinced that there are too many useless files inside but wont touch it in order to not break too much (for now). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1602:489,Certificate,Certificate,489,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1602,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1597; Last one!. - Usual cleaning (pragma, namespaces); - cmake dep polish; - remove useless includes; - remove warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1608:286,Certificate,Certificate,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1608,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2197:477,Certificate,Certificate,477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1633. - Usual cleaning (pragma, namespaces); - cmake dep polish; - remove useless includes; - remove warnings. Remove a dependency in SofaGeneralSimpleFem as well (using a EigenMatrix for nothing apparently). EDIT: if error with SOFA_SOFAEIGEN2SOLVER_API -> #1670; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1635:429,Certificate,Certificate,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1635,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1633. - Usual cleaning (pragma, namespaces); - remove useless includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1640:236,Certificate,Certificate,236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1640,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - change dependency (SofaSimulationCommon (SofaSimulation) -> SofaSimulationCore (SofaFramework)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1655:346,Certificate,Certificate,346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1655,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - fix some dependencies; - use only RGBAColor; - remove warnings; - use sofa::Size/sofa::Index (including missed functions, which makes this PR breaking for those inheriting for these components). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1676:444,Certificate,Certificate,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1676,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - remove MechanicalObject header-dependency (not reflecting with library linking); - use only RGBAColor; - remove warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1653:371,Certificate,Certificate,371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1653,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - remove warnings; - use sofa::Size/sofa::Index. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1677:296,Certificate,Certificate,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1677,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - remove warnings; - use sofa::Size/sofa::Index; - fix dependencies; - use rgbacolor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1680:333,Certificate,Certificate,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1680,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1885 . + some dispatch to SofaMeshCollision_test and SofaMiscCollision_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2146:241,Certificate,Certificate,241,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2146,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1885 . Add some licences here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2154:205,Certificate,Certificate,205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2154,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2188:255,Certificate,Certificate,255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1885. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2153:170,Certificate,Certificate,170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2153,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1927 is suspected to causes crashes in multi-threaded scenes on Jenkins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2017:237,Certificate,Certificate,237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2017,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#1968. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1986:170,Certificate,Certificate,170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#2197 should be merged first. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/150]. Cleaning (removing or setting ""deleted"") things that have been deprecated for long enough (some of them since 2017...). Also ; - improved the SOFA_DEPRECATED_HEADER macro to be consistent with SOFA_ATTRIBUTE_DEPRECATED.; - added SOFA_DISABLED_HEADER and SOFA_DISABLED_HEADER_NOT_REPLACED macros; - expanded namespace deprecation in SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198:611,Certificate,Certificate,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#2883 was merged a little bit too fast, and some specializations were unfairly commented (well it was ugly in a way); this PR brings them back in the cpp (where it should have been) and the weird define/undef thingys removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2885:389,Certificate,Certificate,389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2885,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"#include <sofa/simulation/simulation.h>; #include <sofa/simulation/Node.h>. This PR is based on #1735, #1749. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1750:273,Certificate,Certificate,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1750,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"'--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaMiscForceField.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/STLIB.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SoftRobots.dll; [WARNING] [UniformMass(uniformMass1)] Unused Attribute: ""massDensity"" with value: ""0.1""; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - MeshOBJLoader: 6 created with alias ""MeshObjLoader""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. **Content of build_dir/CMakeCache.txt**. Installed with the binary, so CMake wasn't used. ---------------------------------------------. PS: Please do inform me if any other information is required.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:2344,Validat,Validating,2344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,2,"['Validat', 'validat']","['Validating', 'validating']"
Security,"'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membran",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:6093,Validat,Validating,6093,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['Validat'],['Validating']
Security,(1.0 - 247.1) <1A05BCD7-232F-3950-936D-EC0F95BA3FB0> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling; 0x7fff21877000 - 0x7fff219adfff com.apple.CoreDisplay (231.3 - 231.3) <6DD6A260-800F-3284-842C-8E4CB9EA47FF> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay; 0x7fff219ae000 - 0x7fff21c24fff com.apple.audio.AudioToolboxCore (1.0 - 1180.25) <DEE2C5BA-BFD1-349F-A10A-B10717BA8F7C> /System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore; 0x7fff21c25000 - 0x7fff21e0dfff com.apple.CoreText (677.3.0.4 - 677.3.0.4) <9A8DC9A0-1A80-3A26-ACA0-A245D3FFF921> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText; 0x7fff21e0e000 - 0x7fff224b2fff com.apple.audio.CoreAudio (5.0 - 5.0) <801E2D1E-7EA5-37DA-8F44-B6D7DD3CE5B9> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio; 0x7fff224b3000 - 0x7fff22804fff com.apple.security (7.0 - 59754.80.3) <B377D7C7-EDB6-3737-B492-E9872F4C6469> /System/Library/Frameworks/Security.framework/Versions/A/Security; 0x7fff22805000 - 0x7fff22a66fff libicucore.A.dylib (66109) <8F8D8A8B-4EE0-3C09-9F45-725A1FBDD38C> /usr/lib/libicucore.A.dylib; 0x7fff22a67000 - 0x7fff22a70fff libsystem_darwin.dylib (1439.40.11) <E016D8F7-C87F-36F8-B8A0-6A61B8E4BACB> /usr/lib/system/libsystem_darwin.dylib; 0x7fff22a71000 - 0x7fff22d58fff com.apple.CoreServices.CarbonCore (1307 - 1307) <B857EADF-D517-34E8-8053-34C0E6695250> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore; 0x7fff22d98000 - 0x7fff22dd2fff com.apple.CSStore (1122.11 - 1122.11) <89992991-8538-380B-B2B8-4EA997CBFDBE> /System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore; 0x7fff22dd3000 - 0x7fff22e81fff com.apple.framework.IOKit (2.0.2 - 1845.81.1) <49AC0177-35A3-3C96-AD9D-3E59923C4761> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit; 0x7fff22e82000 - 0x7fff22e8dfff libsystem_,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:20988,Secur,Security,20988,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Secur'],['Security']
Security,"(For Windows); - Specialized functions of BilateralInteractionConstraint on Rigids were declared in the header file (useless); - the definition of these specialized functions did not have the _API keyword (exporting these symbols in the dll). There is currently no problem because components using BilateralInteractionConstraint are all in the same module... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2031:522,Certificate,Certificate,522,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2031,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"(and nodiscard keywords). \+ replace double with SReal; ~~\+ using forwarding header file for RGBAColor (removing a TODO from 4 years ago :p )~~ nope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3270:314,Certificate,Certificate,314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3270,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"(based on #1790). ## Description:; Move some types from SofaHelper and SofaDefaulttype into Sofa.Type. - sofa::defaulttype::BoundingBox (and its variants) becomes sofa::type::BoundingBox (and co); - sofa::defaulttype::Frame becomes sofa::type::Frame; - Material (for rendering) becomes sofa::type::Material ; - PrimitiveGroup becomes sofa::type::PrimitiveGroup ; - Ray becomes sofa::type::Ray; - RGBAColor becomes sofa::type::RGBAColor . ## Breaking; A priori nothing is breaking with the compatibility layer. ## Talking; RGBAColor is introducing a static function with exception (was displaying an error in the Messaging system before); But this function is not used anywhere... and there is a version with a boolean actually (read()). ## Note; Quite straight-forward and not really prone to errors due to the fact those are much less ""important"" than Vector/Quat/Matrix, etc. Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1818:1070,Certificate,Certificate,1070,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1818,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"(based on #2307 ). Pretty annoying to forget to enable diffusionsolver every time image is required.; And it appeared that in fact image does not even need this plugin... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2308:334,Certificate,Certificate,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"(because otherwise it is copying the data and generate a compilation warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1879:242,Certificate,Certificate,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1879,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"(cherry picked from commit f2f4f02fdedad69765b22b31af4a16840c854866). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2016:233,Certificate,Certificate,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2016,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4274:897,Certificate,Certificate,897,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"(merely a refreshed version of #2455 ); Waiting for ; - ~~https://github.com/sofa-framework/sofa/pull/2565~~. Kickstart of the implementation of SOFA-NG, as in defined #1527 (https://annuel2.framapad.org/p/sofang-v8). - Move files into a new file hierarchy (Sofa.Component.Stuff.Foo.Bar); - Change the namespace according to the path (sofa::component::stuff::foo::Bar); - Add compatibility layer (header path + aliases); - Deprecated modules redirect/load the new ones (e.g SofaExplicitSolver loads explicitely Sofa.Component.ODE.Forward). Tests show that the compat layer is working well for the moment (no warning/error for regression/scene tests) and only one unit test was complaining, as it was explicitly testing on the old name). Deprecates **SofaExplicitSolver**, **SofaImplicitSolver**, **SofaGeneralExplicitSolver**, **SofaGeneralImplicitSolver** and **SofaMiscSolver**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2571:1044,Certificate,Certificate,1044,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2571,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2099:989,Certificate,Certificate,989,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"(should) Fix issue #2066. The GraphListener for the visual Graph is frozen when runSOFA is started (and never unfrozen); The temp fix to swap tabs was unfreezing it actually.; But I think letting it unfrozen is also a not-so-good idea as the listener will update a lot (how many? I dont know) the graph for nothing. Now this PR unfreeze/freeze the visual graph at each timestep of the simulation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458:560,Certificate,Certificate,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"(without the tests....). Main problem is the linear solvers using CSPARSE, which only handles double.; Actually, SparseCholesky was using buffers of float with pointers of double (which obviously causes a crash).; SparseLU is more convenient, it tried to use SReal, and make the compilation failing directly. There were at least two way to solve this problem:; - disable in the CMakeLists directly (if floating_point is float); - do not compile the instance templated on float (effectivement does not compile the two solvers). I chose the latter to keep them visible in the base code, but I totally agree with the former solution (but requires to access to the Cmake variable SOFA_FLOATING_POINT from Sofa.Config in the CMakefile of S.C.LS.Direct). An other thing is that preconditionner wants to use SparseCholesky as well so there is a conditional compilation happening here unfortunately. I dont know if it is possible to just use an other direct solver (probably). This was needed to test the performance tests for ; - #2856. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2907:647,access,access,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2907,3,"['Certificate', 'access', 'certificate']","['Certificate', 'access', 'certificate-of-origin-dco']"
Security,) <6A293E4C-1E2D-36DA-B416-FBED7286CD6E> /System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration; 0x7fff2d9dc000 - 0x7fff2d9e8fff com.apple.perfdata (1.0 - 67.40.1) <A9D2E8CD-9D74-304E-BD99-A7704F3CD38B> /System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata; 0x7fff2d9e9000 - 0x7fff2d9f7fff libperfcheck.dylib (41) <5AFDC5C6-EBB6-33E4-9215-1AACE6C6F6EE> /usr/lib/libperfcheck.dylib; 0x7fff2d9f8000 - 0x7fff2da07fff com.apple.Kerberos (3.0 - 1) <02FFA3CA-F8AF-3211-9159-36BC29612650> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos; 0x7fff2da08000 - 0x7fff2da57fff com.apple.GSS (4.0 - 2.0) <5D06022E-C963-390A-9487-90BD1B61BC20> /System/Library/Frameworks/GSS.framework/Versions/A/GSS; 0x7fff2da58000 - 0x7fff2da68fff com.apple.CommonAuth (4.0 - 2.0) <C4418557-FA52-3B80-804F-2BC7AF760FD6> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth; 0x7fff2dabd000 - 0x7fff2dadffff com.apple.security.KeychainCircle.KeychainCircle (1.0 - 1) <6F4B051F-BC33-3880-81B2-5C62DABFF02D> /System/Library/PrivateFrameworks/KeychainCircle.framework/Versions/A/KeychainCircle; 0x7fff2dae0000 - 0x7fff2dae8fff com.apple.CorePhoneNumbers (1.0 - 1) <AA493452-21D3-3EC6-953C-42DBF75F4EB9> /System/Library/PrivateFrameworks/CorePhoneNumbers.framework/Versions/A/CorePhoneNumbers; 0x7fff2dae9000 - 0x7fff2db74fff libTelephonyUtilDynamic.dylib (5347.1) <AB6453EB-2C1C-3A98-B56A-3C850FCE95F7> /usr/lib/libTelephonyUtilDynamic.dylib; 0x7fff2dc3d000 - 0x7fff2dc3dfff liblaunch.dylib (2038.80.3) <C7C51322-8491-3B78-9CFA-2B4753662BCF> /usr/lib/system/liblaunch.dylib; 0x7fff2e438000 - 0x7fff2e57ffff com.apple.Sharing (1579 - 1579) <4925CAB3-09C0-373C-A5D3-9BB5FF025A4F> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing; 0x7fff2e580000 - 0x7fff2e6a0fff com.apple.Bluetooth (8.0.3 - 8.0.3d9) <C6FFFDA7-CD91-339A-8529-7D094338949D> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluet,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:60140,secur,security,60140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['secur'],['security']
Security,) |; | [clang-analyzer-optin.cplusplus.VirtualCall](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.cplusplus.VirtualCall.html) | [modernize-make-shared](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clan,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:15758,secur,security,15758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['secur'],['security']
Security,"* Added getter for ContactsVector. Added a buffer variable that is overwritten before ContactsVector is cleared. Added functions to retrieve the number of contacts and their respective distance values in the buffer. * added a check before trying to access contact information. Added a function to also retrieve a list of collision point pairs. * Simplified code a bit, by moving the check up in the hierarchy. * Added a getter function to retrieve the element ids of the collision models. This can be used to lookup the ids in a MechanicalObject that are affected by a contact from a topology (get elements -> lookup MO ids in topology -> lookup points in MO). Also added some Docstrings. * Exchanged push_back with emplace_back and sped up code by reserving memory for vectors. * Replaced Vector3 from helper with Vector3 from defaulttypes. * Changed unsigned int to sofa::Size and placed curly brackets on new line. #1678 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1683:249,access,access,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1683,3,"['Certificate', 'access', 'certificate']","['Certificate', 'access', 'certificate-of-origin-dco']"
Security,"* Code factorization; * Remove unnecessary C-style casts; * Remove unnecessary redirecting intermediate function; * Use class access specifiers (make members protected). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2881:126,access,access,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2881,3,"['Certificate', 'access', 'certificate']","['Certificate', 'access', 'certificate-of-origin-dco']"
Security,"* Usual cleaning (pragma, namespaces); * Package SofaGuiCommon, SofaGuiQt, SofaHeadlessRecorder : cleaner deps handling. ⚠ SofaGuiMain has been removed as it was doing nothing except GUI registrations. ; So it was deemed more convenient to move those registrations into SofaGui itself.; And people was misusing SofaGuiMain as SofaGui anyway: lots of projects were linking with SofaGuiMain, where it would have been more correct to link with SofaGuiCommon or SofaGuiQt.; The only relevant case to link SofaGuiMain was for applications wishing to run GUIs. (i.e runSofa, Modeler). So now if you need to create a an application with a GUI using SofaGuiCommon/SofaGuiQt, you have to link with SofaGui instead of SofaGuiMain (and do initSofaGui() instead of initSofaMain() to register batch/qt/qglviewer/headlessrecorder modes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1719:987,Certificate,Certificate,987,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1719,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1872:744,Certificate,Certificate,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"**[Only Windows/MSVC]**. I cannot explain at all 👺. On MSVC2022(17.7.4) and Release mode, a crash happens with `examples/Demos/fallingBeamLagrangianCollision.scn` when a collision occurs. It crashes when trying to insert values in the triplets vector (suspecting a memory error somewhere). Weirdly, it does not crash in RelWithDebug mode 🤐. ; *And* it does not crash as well on MSVC2019, as the CI (jenkins) uses it in release mode while testing the scene. At the code generation time (compiler?optimizer?) it does throw a warning like:; `1>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector(398): warning C4789: buffer 'triplets' of size 16 bytes will be overrun; 8 bytes will be written starting at offset 16`; only in Release mode. --. Two fixes possible (found by trial-and-error 🤡); - using std::vector instead of sofa::type::vector; - using a struct instead of the tuple; ; I used the std::vector one as it was the simplest. I suspect there is a bug(???)/issue with the optimizer/vectorizer of MSVC , or the allocator but i cannot prove anything 🙊. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4180:1264,Certificate,Certificate,1264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4180,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"**_TLDR_**; Sofa.Compat has a structure different than the other package/module, and there is a (not used) cmake option to define (to false). Sofa.Compat does not really fit the macro from SofaMacroInstalls, because this one supposed that a project composed like either:; - sofa/xxxxxx/yyyy.h; - SofaXXXX/yyy.h; and is doing different stuff for each case.; But Sofa.Compat is.. both as it is supposed to be a compatibility layer for either stuff from SofaFramework (with the first organization) or from modules (the other one); After some pain through the cmake macros, I found the option OPTIMIZE_BUILD_DIR for `sofa_create_package_with_targets`which, if defined AND false, will bypass the process of checking the file structure, and copy as it is (what we want). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2360:928,Certificate,Certificate,928,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2360,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- #3931 . added a `enabled` data for all VisualModels. OglModel already had a data with the same feature (`isEnabled`) so this PR removes it.; Breaking because of the removal of the Data isEnabled (change of type) so the code using it as a Data will break,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4822:421,Certificate,Certificate,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4822,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- #4533. did not remove everything of Sofa.Component.Compat and was even throwing a (harmless) warning at the cmake configure stage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4596:296,Certificate,Certificate,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4596,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- **Rename** compute2PointsBarycoefs -> computeEdgeBarycentricCoordinates; - **Rename** computeRest2PointsBarycoefs -> computeEdgeBarycentricCoordinates with parameter useRestPosition to set at true; - **Add** deprecation mechanism and backward compatibility; - **Update** all methods to use sofa::geometry::Edge::getBarycentricCoordinates instead of their own wrong version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4190:539,Certificate,Certificate,539,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4190,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- A specialization for Mat was not used. ; - Hard-coded doubles are replaced by the right type, which depends on the template; - Floating points are passed by value. ; - A description is added; - Rigid types specialization are factorized. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2755:402,Certificate,Certificate,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2755,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Add comments; - Fix doxygen; - Avoid duplicated code; - minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2243:237,Certificate,Certificate,237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2243,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284:452,Certificate,Certificate,452,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Add method ```addTopologyEventCallBack``` in TopologyData to be able to register callback to the TopologyHandler without having to manually create and manipulate this handler class.; ```addTopologyEventCallBack``` redirect the registration to ```TopologyHandler->addCallBack```; - Various minor cleaning in code comments. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2375:487,Certificate,Certificate,487,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2375,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Add method to remove an interaction constraint given the dof index and the input mechanicalObject Id; - Add 2 Single Links to the topology containers to be set to activate topological changes support. ; - Convert constraint index lists from `type::vector<in>` to `TopologySubsetIndices`; - Add callback on the subsetIndices to track topologcial changes. The callback are added only if valid Topology are found using the SingleLinks; - Add a demo scene: examples/Components/topology/TopologicalModifiers/RemovingBilateralInteractionConstraint.scn. Video of the Result:; https://user-images.githubusercontent.com/21199245/191690072-003eb2c6-f0b9-458b-996b-6c37f3c3cac3.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3329:837,Certificate,Certificate,837,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Add performances benchmarks for gpu vs cpu in SofaCUDA/scenes/benchmarks/; - TetrahedronFEMForceField_beam10x10x40_cpu.scn (~23.5 fps); - TetrahedronFEMForceField_beam10x10x40_gpu.scn (~158 fps); - TetrahedronFEMForceField_beam16x16x76_cpu.scn (~8 fps); - TetrahedronFEMForceField_beam16x16x76_gpu.scn (~148 fps). - HexahedronFEMForceField_beam10x10x40_cpu.scn (~30 fps); - HexahedronFEMForceField_beam10x10x40_gpu.scn (~102 fps); - HexahedronFEMForceField_beam16x16x76_cpu.scn (~9.5 fps); - HexahedronFEMForceField_beam16x16x76_gpu.scn (~42 fps). - Add cpu-gpu validations scenes in SofaCUDA/scenes/cpu-gpu_validation/ with green beam for gpu and red for cpu; - CudaTetrahedronFEMForceField_beam10x10x40_implicit.scn; - CudaTetrahedronFEMForceField_beam10x10x40_rk4.scn; ; - CudaHexahedronFEMForceField_beam10x10x40_implicit.scn; - CudaHexahedronFEMForceField_beam10x10x40_rk4.scn. - Remove all old scenes for hexa and tetra fem in SofaCUDA/examples/; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2561:564,validat,validations,564,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2561,3,"['Certificate', 'certificate', 'validat']","['Certificate', 'certificate-of-origin-dco', 'validations']"
Security,"- Add tests on add/remove edges/vertices using EdgeSetTopologyModifier methods; - Update FakeTopology_Scene to add mechanical Components with TopologyData; - Add test to check TopologyData and TopologyHandler registration; - Some cleaning, factorization and documentation in EdgeSetTopology_test code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3245:465,Certificate,Certificate,465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3245,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- As announced in #2010, `BruteForceDetection` can inherit from `BruteForceBroadPhase`.; - The narrow phase code has been extracted into a new component: `BVHNarrowPhase`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2043:335,Certificate,Certificate,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2043,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Axis : storing raw pointer in a static map, and there are never deleted afterwards (-> use shared_ptr) + removing the ugly pair of pair.; - MeshTopologyLoader : the io::Mesh used to read the mesh (from a file) is never deleted after filling the topology (its purpose). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3671:434,Certificate,Certificate,434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3671,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Change all the required SOFA_*_DEPRECATED to SOFA_*_DISABLED for things whose has been flagged to be disabled for v21.12. - Uncomment the actual things flagged to be deprecated starting from v21.12 (commented until now for the developers, because of the deprecation warnings flood). [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/219]; [ci-depends-on https://github.com/sofa-framework/Regression/pull/20]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2524:590,Certificate,Certificate,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2524,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Check that device ID is valid before making it current in destruction method.; - Small updates on warning messages. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3698:281,Certificate,Certificate,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3698,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Clean and doc current code; - Add test on manager init with Links; - Add test on wrong init; - Add test on manager with full set init. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3407:300,Certificate,Certificate,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3407,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Clean the files; - Add simple tests; - Add constructor for initializer lists. Allow to write concise object creation; - Allow builder pattern through the `setSelectedItem` methods. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3737:346,Certificate,Certificate,346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Description of the component was a bad copy/paste. Now, it describes how the linear system is solved; - Timers are added to measure the duration of each step of the `solve`; - I added support of any matrix derived from `BaseMatrix`. It is not very useful as it is converted in a dense matrix anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2336:465,Certificate,Certificate,465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2336,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Document the steps of the CGLinearSolver; - Remove the useless data verbose; - Use d_ for data name; - Propagate this joyeuserie. :man_dancing: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2098:311,Certificate,Certificate,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2098,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Does not really make sense for point/line topologies (first intention); - even for 2d/3d, there are no normals given so the rendering is a bit weird IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4887:319,Certificate,Certificate,319,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4887,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Each accessor has its own file: 1 for the default class, 1 for the specialization for vector types. The specialization for Data is still in Data.h; - I added a compilation error in case the type is const while trying to create a `WriteAccessor` on it.; - I added unit tests for the default class, for the vector types specialization and for the Data specialization.; - I removed the deprecated `<<` and `>>` operators. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3234:7,access,accessor,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234,3,"['Certificate', 'access', 'certificate']","['Certificate', 'accessor', 'certificate-of-origin-dco']"
Security,"- Fix CMake to use new headers.; - Update namespace; - Fix some warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3076:237,Certificate,Certificate,237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3076,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Fix bad behavior of GridTopology. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1573:199,Certificate,Certificate,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1573,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Fix cmake when building on a system with Qt6 and Qt5 are detected in the same time (qt5 is prioritized); - Fix cmake var for QGLViewer (not supported with Qt6); - Fix for Qt6 where its windeployqt utility does not support the parameter ""--no-angle"" anymore (leads to a build error); - Fix for Qt6.2 while doing the cmake configuration (I suppose the latest Qt6.2 did some changes for its cmake packages), ; tested on Windows 11 and Qt6.2 (and VS2022). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2490:617,Certificate,Certificate,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2490,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Fix compilation and CMakeLists of the plugin before moving it out from SOFA repository. OpenCTM seems not to be supported anymore but some project are still using it. ; I will move that plugin into my github repo embedding directly OpenCTM lib. ; Unless you think it is of any use on sofa-framework repository. FYI: OpenCTM — the Open Compressed Triangle Mesh file format — is a file format, a software library and a tool set for compression of 3D triangle meshes. The geometry is compressed to a fraction of comparable file formats (3DS, STL, VRML, COLLADA...), and the format is easily accessible through a simple, portable API. http://openctm.sourceforge.net/. I was using it for WebGL as this format is slim and quick to load.; See for example here:; https://alteredqualia.com/three/examples/webgl_loader_ctm_materials.html. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1359:590,access,accessible,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1359,1,['access'],['accessible']
Security,"- Fix link issues because of missing *_API; - Follow naming guidelines + depreciation of old variables; - OglGrid uses a cached list of vertices; - Use of `saveLastState` and `restoreLastState`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3115:358,Certificate,Certificate,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Fix the Von Mises stress drawing and use ColorMap Blue to Red by default.; - Factorize code for plain and wireframe drawing; - Fix crash when trying to display Von Mises stress per point without computing it. . Fix #1852 . ![Tetra2TriangleTopologicalMapping_00000004](https://user-images.githubusercontent.com/21199245/108897384-5574ad00-7616-11eb-979a-55e90c60a768.png); ![Tetra2TriangleTopologicalMapping_00000005](https://user-images.githubusercontent.com/21199245/108897396-573e7080-7616-11eb-8b3f-f40f559b186c.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1854:686,Certificate,Certificate,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1854,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Fix warnings in `UniformMass`; - Add `RequiredPlugin`; - Add `OglGrid` and `OglSceneFrame`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2055:257,Certificate,Certificate,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2055,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Fix warnings in code due to pluginization; - Clean required plugins warnings + required Data warnings; - Add 2 new scenes to test geomagic against a rigid and a deformable sphere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2846:345,Certificate,Certificate,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2846,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Fixed the module name; - config.h is now config.h.in. A lot more work to do if we want to clean this plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4719:274,Certificate,Certificate,274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4719,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- Hiding local declaration ; - Parameter names do not match ; - Uninitialized class members ; - Lambda capture is never used ; - Local variable can be made const ; - Result of a postfix operator is discarded ; - add explicit specifier to make constructor non-converting ; - Member function can be made const ; - Variable can be moved to if-statement ; - Declaration and assignment can be joined ; - Return by const value. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2559:585,Certificate,Certificate,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2559,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- I made to PR trying to have symetry in the implementation: https://github.com/alxbilger/sofa/pull/2; - I also tested the code with Vec2 and Vec1 and it does not compile (so the use of template there is highly questionnable) . It could also be a good use case for c++ 20 concepts; . More comments (to go totally out of the scope of the PR):; - the methods ""addContact"" are probably not properly name... as this component has nothing to do with contact maybe addConstraint (?); - the ""merge"" data field is only in in Vec3 which means either the data field should be only on that specialization or that it should be used in Rigid3Type (or at least printing an ""unsupproted behavior"" when set) ; - the ""keepOrientDiff"" data field is only for Rigid, it shouldn't exists at all in the Vec3 version (it can be considered an favor of having inheritance in addition to specialization). ; - the ""numericalTolerance"" data field is only used for rigid specialization (so same comment as for keepOrientDiff"" and it seems it is only for rotational part.; - why BilateralInteractionConstraint<Rigid>::getVelocityViolation() is empty ? ; - in BilateralInteractionConstraint<Rigid3Types>::getConstraintResolution() there is getValue() in for loops(); - accessors are not used in BilateralInteractionConstraint<Rigid3Types>::buildConstraintMatrix()",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187581578:1238,access,accessors,1238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187581578,1,['access'],['accessors']
Security,"- Implementation of applyConstraint (a task from https://github.com/sofa-framework/sofa/issues/3967); - some data cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4309:287,Certificate,Certificate,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4309,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- In `ScopedAdvancedTimer`, store the timer id as a real id rather than the `std::string` used to find the real id. This fixes a strange bug occurring with `ScopedAdvancedTimer` (which I am not able to explain).; - In `AdvancedTimer`, use a map for constant complexity when searching an id, instead of a `std::vector`. [ci-depends-on https://github.com/sofa-framework/Compliant/pull/2]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2349:550,Certificate,Certificate,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2349,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1761:578,Certificate,Certificate,578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
